#reference 'Microsoft.ProgramSynthesis.Utils, Version=1.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35';
#reference 'Microsoft.ProgramSynthesis.Extraction.Text.Semantics, Version=1.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35';
#reference 'file:ProseSample.TextExtraction.dll';
#reference 'file:ProseSample.Substrings.dll';

using System.Text.RegularExpressions;
using Microsoft.ProgramSynthesis.Extraction.Text.Semantics;
using ProseSample.TextExtraction;
using semantics ProseSample.TextExtraction.Semantics;
using learners ProseSample.TextExtraction.WitnessFunctions;
using grammar Substrings=ProseSample.Substrings.Language.Grammar;

language ProseSample.TextExtraction;

@complete feature double Score = RankingScore;

@start IEnumerable<StringRegion> spans := LinesMap(selection, lines) = Map(\line: StringRegion => selection, lines);
StringRegion selection := @id['Selection'] @subst[v := line] Substrings.sub;

IEnumerable<StringRegion> lines := SplitLines(document);

@input StringRegion document;
