

			});
	});
	
	</script>

</div>
</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3-legend/1.8.0/d3-legend.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 100% }
    
    path {
      fill: none;
      stroke-width: 3;
      stroke-opacity: 0.4;
    }
    line.legend {
      stroke: #c4c4c4;
      stroke-width: 1;
    }
    g.cell {
      cursor: pointer;
    }
    
    circle.node {
      pointer-events: none;
    }
    line.link {
      stroke: #efefef;
      stroke-dasharray: 18 2;
      pointer-events: none;
    }
  </style>
</head>

<body>
  <script>
    // Feel free to change or delete any of the code you see!
    var svg = d3.select("body").append("svg")
    
    var chartg = svg.append("g").attr({
      transform: "translate(0, -50)"
    })
    
    var legendX = 50;
    var legendY = 29;
    var linesX = 0;
    var linesY = 134;
    var squareWidth = 10;
    var squareHeight = 10;
    d3.json("interviews.json", function(err, interviewees) {
      //console.log(interviewees)
      
      function ranges(mean) {
        if(mean <= 4 && mean >= 3.5) {
          return 4;
        } else if(mean < 3.5 && mean >= 2.75) {
          return 3;
        } else if(mean < 2.75) {
          return 2;
        }
      }
      
      var matches = {};
      var meanData = []     ; interviewees.forEach(function(interview, index) {
        var mean = d3.mean(interview);
        var stddev = d3.deviation(interview);
        var points = interview.map(function(score,i) {
          return {
            score: score,
            mean: mean,
            index: index
          }
        })
        points.mean = mean;
        points.stddev = stddev;
        points.index = index;
        
        // we have several interviewees
        var key = (Math.floor(mean*1000)/1000) + "::" + (Math.floor(stddev*1000)/1000);
        
        var match = matches[key];
        if(!match) matches[key] = 0;
        matches[key] += 1;
        points.offset = matches[key];
        
        meanData.push(points)
      })
      
      var maxMean = d3.max(meanData, function(d) { return d.mean });
      //console.log("maxMean", maxMean)
      var maxStddev = d3.max(meanData, function(d) { return d.stddev });
      //console.log("maxStddev", maxStddev)
      
      var xScale = d3.scale.linear()
      .domain([0, maxStddev])
      .range([150, 700])
      
      var yScale = d3.scale.linear()
      .domain([1, 4])
      .range([500, 100])
      
      var colorScale = d3.scale.linear()
      .domain([1, 2, 3, 4])
      .range(["#ff0f5f", "#e63ba8", "#ba48d9", "#267fd3"])
      
      
     
      svg.append("g")
        .attr("class", "legendOrdinal")
        .attr("transform", "translate(" + [legendX, legendY] + ")");

      var legendScale = d3.scale.linear()
      .domain([4,3,2,1])
      .range(colorScale.range().reverse())
      var legendOrdinal = d3.legend.color()
        .shapeWidth(40)
        .shapeHeight(40)
        .shapePadding(94)
        .cells(4)
        .scale(legendScale);

      svg.select(".legendOrdinal")
        .call(legendOrdinal);
      
      
      chartg.selectAll("line.legend").data(d3.range(4).reverse())
      .enter().append("line").classed("legend", true)
      .attr({
        x1: function(d) { return linesX + xScale.range()[0]},
        y1: function(d) { return yScale(d) - linesY},
        x2: function(d) { return linesX + xScale.range()[1]},
        y2: function(d) { return yScale(d) - linesY},
      })
      
      
      var meanSquares = chartg.selectAll("rect.mean")
        .data(meanData, function(d) { return d.index})
      meanSquares.enter().append("rect").classed("mean", true)
      
      
      meanSquares.attr({
        x: function(d) { return xScale(d.stddev ) + d.offset * (1+squareWidth)},
        y: function(d) { return yScale(d.mean) - squareHeight/2 },
        width: squareWidth,
        height: squareHeight,
        fill: function(d) { return colorScale(d.mean)}
      }).on("click", function(d) {
        console.log("clicked", d);
        fade();
        unfade(d);
        clearForce();
        addForceNodes(d);
      }).on("mouseover", function(d) {
        console.log(d.index, d.mean, d.stddev);
        fade();
        unfade(d);
        clearForce();
        addForceNodes(d);
      })
      .on("mouseout", function(d) {
        unfade();
        clearForce();
      })
      
      chartg.append("text")
      .text("deviants")
      .attr({
        "font-size": "32px",
        "font-family": "Open Sans, Helvetica, san-serif",
        x: 495,
        y: 438,
        "paint-order":"stroke",
        stroke: "#cfe0e7",
        "stroke-width": 8,
        "stroke-opacity": 0.3,
        "stroke-linecap": "butt",
    		"stroke-linejoin": "miter",
        "cursor":"pointer"
        
      }).on("mouseover", function() {
        fade();
        clearForce();
        chartg.selectAll("rect.mean")
          .filter(function(d) { return d.stddev > 0.7072})
          .attr({
            opacity: 0.6,
            fill: function(c) { return colorScale(c.mean)}
          })
          .each(function(d){ 
            addForceNodes(d);
          })
      }).on("mouseout", function() {
        unfade();
        clearForce();
      })
      
      legendOrdinal.on("cellover", function(category){
        fade();
        chartg.selectAll("rect.mean")
        .filter(function(d) {
          var hasCat = false;
          d.forEach(function(i) {
            if(i.score == category) hasCat = true;
          })
          return hasCat;
        })
        .attr({
            opacity: 0.6,
            fill: function(c) { return colorScale(c.mean)}
          })
          .each(function(d){ 
            addForceNodes(d);
          })
      }).on("cellout", function() {
        unfade();
        clearForce();
      })
      

      function unfade(d) {
        var selection = chartg.selectAll("rect.mean")
        if(!d) {
          selection.attr({
            opacity: 1,
            fill: function(c) { return colorScale(c.mean)}
          })
        } else {
        selection.filter(function(f) {
          if(f === d) {
              d3.select(this).attr({
                opacity: 0.6,
                fill: function(c) { return colorScale(c.mean)}
              })
            }
          })
        }
        
      }
      function fade() {
        chartg.selectAll("rect.mean").attr({
          fill: "#b7b7b7"
        })
      }
      
      var xrange = xScale.range() 
      var width = Math.abs(xrange[1] - xrange[0]);
      var yrange = yScale.range();
      var height = Math.abs(yrange[0] - yrange[1]);
      
      var forceg = chartg.append("g")
      .attr("transform", "translate(" + [0,0] + ")")

      var force = d3.layout.force()
      .size([width, height])
      .gravity(0.0)
      .friction(0.89)
      .charge(-5)
      .linkStrength(0)
      .nodes([])
      .links([])
      force.start()
      
      force.on("tick", function(e) {
  
        var k = 0.36 * e.alpha
        var nodes = force.nodes();
        nodes.forEach(function(t,i) {
//          console.log(t.x, t.targetX)
          t.x += (-t.x + t.targetX) * k;
      		t.y += (-t.y + t.targetY) * k;
          if(t.interviewee){
            t.x = t.targetX + squareWidth/2;
            t.y = t.targetY;
          } 
          
        })
        forceg.selectAll("circle.node")
        .attr({
          cx: function(d) { return d.x  },
          cy: function(d) { return d.y  }
        })
        
        forceg.selectAll("line.link")
        .attr({
            x1: function(d) { return d.source.x },
            y1: function(d) { return d.source.y },
            x2: function(d) { return d.target.x },
            y2: function(d) { return d.target.y },
          })
 
      })
      
      var removeDelay = 100;
      function clearForce() {
        forceg.selectAll("circle.node")
          //.transition().duration(removeDelay)
          //.attr({opacity: 0})
          .remove();
        forceg.selectAll("line.link")
          //.transition().duration(removeDelay)
          //.attr({opacity: 0})
          .remove();
        
        force.links([])
        force.nodes([])
        
      }
      function addForceNodes(interviewee) {
        var nodes = force.nodes();
        var links = force.links();
        console.log("links", links)
        
        var x = xScale(interviewee.stddev) + interviewee.offset * (1+squareWidth)
        var y = yScale(interviewee.mean)
        //console.log("X,Y", x,y)
        //generate links between mean "node" and
        var source = {
          index: interviewee.index,
          x: x,
          y: y,
          px: x,
          py: y,
          targetX: x,
          targetY: y,
          mean: interviewee.mean,
          stddev: interviewee.stddev,
          interviewee: true,
          opacity: 0,
        }
        nodes.push(source)

        interviewee.forEach(function(d,i) {
          var sx = x + 10 * Math.random() + Math.random();
          var sy = y + 10 * Math.random() + Math.random();
          var node = {
            index: interviewee.index + "-" + i,
            px: sx,
            py: sy,
            x: sx,
            y: sy,
            targetX: x,
            targetY: yScale(+d.score),
            mean: interviewee.mean
          }
          nodes.push(node)
          links.push({
            index: source.index + "-" + node.index,
            source: source,
            //source: 0,
            target: node
          })
        })
        //console.log("nodes", nodes);
        
        
          
          var lines = forceg.selectAll("line.link")
            .data(links)
          lines.enter().append("line").classed("link", true)
          
          var circles = forceg.selectAll("circle.node")
            .data(nodes, function(d) { return d.index })
          circles.enter().append("circle").classed("node", true)

          circles.attr({
            "pointer-events": "none",
            r: 4,
            opacity: function(d) {
              if(d.opacity || d.opacity === 0) return d.opacity;
              return 1;
            },
            fill: function(d) { return colorScale(d.mean)}
          })
          
          
          
          
          force.links(links)
          force.nodes(nodes);
          force.start()
          
          circles.exit().remove();
       
      }
      
      
      //addForceNodes(meanData[1])
      
    })
  </script>
</body>
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title></title>
    <script type='text/javascript' src="http://d3js.org/d3.v3.min.js"></script>
    <script type='text/javascript' src="infos.js"></script>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>

<div id="container"></div>

<script id="main-tpl" type="text/html">

<div id="info-section">
	<div id="consultant-info">
		<span id="consultant-name">{consultantName}</span><br>
		{consultantAddress}<br>
		{consultantEmail}
	</div>

	<div id="client-info">
		Attention To:<br>
		{clientName}<br>
		{clienAddress}<br>
		{clientEmail}
	</div>

	<div id="bill-info">
		{date}
	</div>
</div>

<div id="description">
	<table>
		<tr><th>Description</th><th>Price</th></tr>
		{jobs}
		<tr><td id="payment-cell">Total:</td><td>{paymentTotal}</td></tr>
	</table>

</div>

<div id="footnote">{note}</div>

</script>

<script id="description-partial" type="text/html">
<tr><td>{jobName}</td><td>{jobPrice}</td></tr>
</script>

<script>

var compileTemplate = function(_template, _values){
    return [].concat(_values).map(function(d, i){
    	return _template.replace(/{([^}]*)}/g, function(s, key){return d[key] || '';});
    }).join('\n');
};

var format = d3.format('>$,.2f');
var total = d3.sum(valuesPartial.map(function(d, i){ return d.jobPrice; }));
valuesPartial.forEach(function(d, i){ d.jobPrice = format(d.jobPrice); });
var compiledPartial = compileTemplate(d3.select('#description-partial').html(), valuesPartial);
values.jobs = compiledPartial;
values.paymentTotal = format(total);
var compiledTemplate = compileTemplate(d3.select('#main-tpl').html(), values);

d3.select('#container').html(compiledTemplate);

</script>

</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>
    body
    {
        font: 12px sans-serif;
    }
    
    .axis path, .axis line
    {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }
    
    .x.axis path
    {
        display: none;
    }
    
    .line
    {
        fill: none;
        stroke: steelblue;
        stroke-width: 1.5px;
    }
    .floating
    {
        cursor: pointer;
        stroke: #FF0000;
        stroke-width: 1.5px;
    }
    
    .floatingLabel
    {
        cursor: pointer;
        fill: #FF0000;
    }
</style>
<body>
    <div style="padding: 10px;">
        <label >
            Add new <B><I>Floating</I></B> axis line</label>
        <input id="myValue" type="text" value="" />
        <input type="button" value="Add" onclick="updateValues()" />
    </div>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="https://darshit-shah.github.io/d3.floatingScale.js"></script>
    <script>

        var margin = { top: 20, right: 50, bottom: 30, left: 50 },
                    width = 960 - margin.left - margin.right,
                    height = 450 - margin.top - margin.bottom;

        var parseDate = d3.time.format("%d-%b-%y").parse;

        var x = d3.time.scale().range([0, width]);

        //Replaced
        //var y = d3.scale.linear().range([height, 0]);
        var y = d3.svg.floatingScale().range([height, 0]).ticks(5);

        var xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");

        //Replaced
        //var yAxis = d3.svg.axis().scale(y).orient("left");
        var yAxis = y.axis().orient("left");

        var line = d3.svg.line()
                    .x(function (d) { return x(d.date); })
                    .y(function (d) { return y(d.close); });

        var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
          .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        var data = [];
        d3.tsv("data.tsv", function (error, localData) {
            data = localData;
            localData = null;
            data.forEach(function (d) {
                d.date = parseDate(d.date);
                d.close = +d.close;
            });

            x.domain(d3.extent(data, function (d) { return d.date; }));
            y.domain(d3.extent(data, function (d) { return d.close; }));

            svg.append("g")
              .attr("class", "x axis")
              .attr("transform", "translate(0," + height + ")")
              .call(xAxis);

            svg.append("g")
                    .attr("class", "y axis")
                    .call(yAxis)
                .append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 6)
                    .attr("dy", ".71em")
                    .style("text-anchor", "end")
                    .text("Price ($)");

            svg.append("path")
              .datum(data)
              .attr("class", "line")
              .attr("d", line);

            //added extra
            y.updateChart(updateChart).chart(svg);
        });

        function updateChart(delay, duration) {
            svg.selectAll('.line').transition().delay(delay).duration(duration).attr("d", line);
            svg.selectAll(".y.axis").transition().delay(delay).duration(duration).call(yAxis);
        }

        function updateValues() {
            var value = parseFloat(document.querySelector('#myValue').value.trim());
            y.addFloatingScaleLine(value);
        }

    </script>
</body>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>d3.carto - Automatic Hexbinning</title>
  <meta charset="utf-8" />
    <link type="text/css" rel="stylesheet" href="d3map.css" />
    <link type="text/css" rel="stylesheet" href="https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css" />
</head>
<style>
  html,body {
    height: 100%;
    width: 100%;
    margin: 0;
  }

  #map {
    height: 100%;
    width: 100%;
    position: absolute;
  }

</style>
<script>
      function makeSomeMaps() {
    map = d3.carto.map();

    d3.select("#map").call(map);
    
    tileLayer = d3.carto.layer();
    tileLayer
    .type("tile")
    .path("elijahmeeks.map-azn21pbi")
    .label("Base")
    
    csvLayer = d3.carto.layer.csv();
    csvLayer
    .path("all_sites.csv")
    .label("CSV Points")
    .cssClass("pinkcircle")
    .renderMode("canvas")
    .markerColor("black")
    .markerSize(.5)
    .x("xcoord")
    .y("ycoord")
    .on("load", makeHexbins)
    
    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);
    map.centerOn([100,30],"latlong").setScale(3);
    
    function makeHexbins() {
      var colorScale = d3.scale.linear().domain([1,5,30]).range(["green","yellow","red"])
      hexbinLayerLarge = map.createHexbinLayer(csvLayer, 2);
      hexbinLayerSmall = map.createHexbinLayer(csvLayer, .75);
      hexbinLayerLarge
      .label("2 Degree Hexbin")
      .visibility(false)
      .on("load", function() {hexbinLayerLarge.g().selectAll("path").style("opacity", .5).style("fill", function(d) {return colorScale(d.properties.node.length)})})

      hexbinLayerSmall
      .label(".75 Degree Hexbin")
      .on("load", function() {hexbinLayerSmall.g().selectAll("path").style("opacity", .5).style("fill", function(d) {return colorScale(d.properties.node.length)})})
      
      map.addCartoLayer(hexbinLayerSmall);
      map.addCartoLayer(hexbinLayerLarge);
      
    }

  }
</script>
<body onload="makeSomeMaps()">
<div id="map"></div>
<footer>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="http://d3js.org/topojson.v1.min.js" type="text/javascript">
</script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js" type="text/javascript">
</script>
<script src="https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js" type="text/javascript">
</script>
<script src="hexbin.js" type="text/javascript">
</script>
</footer>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Module 6 exercise</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			
			path:hover {
        	stroke: white;
        	stroke-width: 3px;
			}
			
			body {
		       background-color: white;
		    }
		       svg {
		       background-color: white;
		       background-image: url("http://orig09.deviantart.net/8e3d/f/2015/115/b/2/image_by_paperpanic-d8r2eba.jpg");
		       opacity: 0.50;
		}

			h1 {
				font-size: 29px;
				margin: 0;
				font-family: arial;
			}

			p {
				font-family: arial;
				font-size: 20px;
				margin: 10px 0 0 0;
			}


			
			path {
				stroke: blue;
				stroke-width: 1;
			}

			g.highlight path {
				stroke: yellow;
				stroke-width: 4;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				stroke-width: 1;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: arial;
				font-size: 10px;
				color: Gainsboro 
			}

		</style>
	</head>
	<body>

		<h1>TOTAL FELONIES ON NEW YORK FROM 2000 TO 2011</h1>

		<p>Major an Minor crimes Index &ldquo;Total Felonies&rdquo; by year. Source: <a href="https://data.cityofnewyork.us/Public-Safety/Historical-New-York-City-Crime-Data/hqhv-9zeg">NYC open Data</a>, 2011</p>

		<script type="text/javascript">		

			
			var w = 800;
			var h = 600;
			var padding = [ 20, 10, 50, 100 ]; 


			var dateFormat = d3.time.format("%Y");



			var xScale = d3.time.scale()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(10)
							.tickFormat(function(d) {
								return dateFormat(d);
							});

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left");



			var line = d3.svg.line()
				.x(function(d) {
					return xScale(dateFormat.parse(d.year));
				})
				.y(function(d) {
					return yScale(+d.amount);
				});



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("FelonyOffensesVSArrests-2000-2011.csv", function(data) {

				
				var years = ["2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011"];
				
				var dataset = [];

				for (var i = 0; i < data.length; i++) {

					dataset[i] = {
						country: data[i].Felonies,
						TotalCrimes: []
					};

					for (var j = 0; j < years.length; j++) {

						if (data[i][years[j]]) {


							dataset[i].TotalCrimes.push({
								year: years[j],
								amount: data[i][years[j]]
							});
						}

					}

				}
				
				
				
				xScale.domain([ 
					d3.min(years, function(d) {
						return dateFormat.parse(d);
					}),
					d3.max(years, function(d) {
						return dateFormat.parse(d);
					})
				]);

				yScale.domain([ 
					d3.max(dataset, function(d) {
						return d3.max(d.TotalCrimes, function(d) {
							return +d.amount;
						});
					}),
					0
				]);



				
				var groups = svg.selectAll("g")
					.data(dataset)
					.enter()
					.append("g")
					.classed("highlight", function(d) {

						if (d.country == "TOTALFELONYOFFENSES" ||
							d.country == "TOTALARRESTS") {
							return true;
						} else {
							return false;
						}

					});

				
				groups.append("title")
					.text(function(d) {
						return d.country;
					});

								
				groups.selectAll("path")
					.data(function(d) {
						return [ d.TotalCrimes ];
					})
					.enter()
					.append("path")
					.attr("class", "line")
					.attr("d", line)
					.attr("fill", "none")
					.attr("stroke-width", 2);


				
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3]) + ",0)")
					.call(yAxis);

			});



		</script>

	</body>
</html><!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Random tree</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
        <script src="index.js"></script>
    </head>
    <body onload="main()"></body>
</html><!DOCTYPE html>
<html lang="en">
<meta charset="utf-8">
<head>
  <title>SVG path animation</title>
  <link href="style.css" rel="stylesheet">
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script src="http://d3js.org/queue.v1.min.js"></script>
</head>
<body>
  <!-- start -->
  <div id="pathAnimation">
    <script src="pathAnimation.js"></script>
  </div>
  <!-- end -->
</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>leaflet example</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
<script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
</head>
<body
  <div id='map'></div>
  <script src='script.js'></script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>leaflet example</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
<script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
</head>
<body
  <div id='map'></div>
  <script src='otherData.js'></script>
  <script src='script.js'></script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>leaflet example</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
<script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
<style>
      html, body, #map {
        height: 100%;
        margin: 0;
      }
    </style>
</head>
<body
  <div id='map'></div>
  <script src='otherData.js'></script>
  <script src='aScript.js'></script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>leaflet example</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
<script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
<style>
      html, body, #map {
        height: 100%;
        margin: 0;
      }
    </style>
</head>
<body
  <div id='map'></div>
  <script src='otherData.js'></script>
  <script src='aScript.js'></script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>leaflet example</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
<script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
<style>
      html, body, #map {
        height: 100%;
        margin: 0;
      }
    </style>
</head>
<body
  <div id='map'></div>
  <script src='otherData.js'></script>
  <script src='aScript.js'></script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>leaflet example</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
<script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
<style>
      html, body, #map {
        height: 100%;
        margin: 0;
      }
    </style>
</head>
<body
  <div id='map'></div>
  <script src='otherData.js'></script>
  <script src='aScript.js'></script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<head>
<style>
body { font-family: Hevetica; }

.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.link {
  stroke: #999;
  stroke-opacity: 0;
}

</style>
<title>Taffy Edges</title>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500;
    
stateChange = true;
refreshGraph = 100;

  nodeSettings = {
    emperor: {number: 1, color: "red", size: 15},
    governor: {number: 0, color: "orange", size: 10},
    hierarchical3: {number: 0, color: "yellow", size: 8},
    hierarchical4: {number: 0, color: "green", size: 6},
    hierarchical5: {number: 0, color: "blue", size: 4},
    hierarchical6: {number: 0, color: "darkblue", size: 2},
    outsiderA: {number: 0, color: "lightgray", size: 8},
    outsiderB: {number: 2, color: "gray", size: 4}
  }


var color = d3.scale.category20();

var force = d3.layout.force()
    .charge(function(d) {return d.weight * -30})
    .linkDistance(40)
    .linkStrength(function(d) {return d.weight})
    .gravity(.05)
    .size([width, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

taffyEdge = d3.svg.line().x(function(d) {return d.x}).y(function(d) {return d.y}).interpolate("basis");

function edgePoints(sourceNode, targetNode) {
  var sourceWidth = Math.max(nodeSettings[sourceNode.type].size * 2) / 2
  var targetWidth = Math.max(nodeSettings[targetNode.type].size * 2) / 2

  var xOffset = sourceNode.x - targetNode.x;
  var yOffset = sourceNode.y - targetNode.y;
  
  if (Math.abs(xOffset) > Math.abs(yOffset)) {
    sourceWidthX = 0;
    sourceWidthY = sourceWidth;
    targetWidthX = 0;
    targetWidthY = targetWidth;
  }
  else {
    sourceWidthX = sourceWidth;
    sourceWidthY = 0;
    targetWidthX = targetWidth;
    targetWidthY = 0;    
  }
  
//  var width = 10;
  var taffyPoints = [
                     {x: sourceNode.x, y: sourceNode.y},
                     {x: sourceNode.x - sourceWidthX, y: sourceNode.y - sourceWidthY},
                     {x: (sourceNode.x + targetNode.x) / 2, y: (sourceNode.y + targetNode.y) / 2},
                     {x: targetNode.x - sourceWidthX, y: targetNode.y - sourceWidthY},
                     {x: targetNode.x, y: targetNode.y},
                     {x: targetNode.x + targetWidthX, y: targetNode.y + targetWidthY},
                     {x: (sourceNode.x + targetNode.x) / 2, y: (sourceNode.y + targetNode.y) / 2},
                     {x: sourceNode.x + targetWidthX, y: sourceNode.y + targetWidthY},
                     {x: sourceNode.x, y: sourceNode.y}
                    ]
  return taffyPoints;
}

numCommunities = 6;

function maxIndex(x) {
  var maxValue = d3.max(x);
  return x.indexOf(maxValue);
}

var graphVariable;

  graph = graphConstructor();

  graphVariable = graph;
  

    graphVariable.nodes.forEach( function (d) {
    d.nodeStrength = 1;
    d.communities = [];
    d.communityBuffer = [];
  })
    
  testCommunities();

  force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();
  
  /*
  graph.nodes[0].fixed = true;
  graph.nodes[0].x = 100;
  graph.nodes[0].px = 100;
  graph.nodes[0].y = 100;
  graph.nodes[0].py = 100;

  graph.nodes[62].fixed = true;
  graph.nodes[62].x = 860;
  graph.nodes[62].px = 860;
  graph.nodes[62].y = 400;
  graph.nodes[62].py = 400;
  */
  
  force
      .linkStrength(function(d) {return (d.source.nodeStrength == 0 || d.target.nodeStrength == 0) ? 0 : 1})
      .charge(function(d) {return d.nodeStrength * -60})

      
  var link = svg.selectAll(".link")
      .data(graph.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", function (d) {return taffyEdge(edgePoints(d.source, d.target)) + "Z"})
      .style("opacity", 0);

  var node = svg.selectAll(".node")
      .data(graph.nodes)
    .enter().append("g")
      .attr("class", "node")
      .on("click", grayOut)
      .call(force.drag);
      
      node.append("circle")
      .attr("r", 1)
      .style("fill", "gray")

        node.append("text")
      .text(function(d) { return d.label; })
      .style("stroke", "none")
      .style("font-size", "0px")
      .style("font-weight", 0)
      .attr("text-anchor", "middle")
      .style("pointer-events", "none");
      
      
      d3.selectAll("g.node").select("circle")
      .each(function(d,i) {
      d3.select(this)
      .transition()
      .delay(2000 + (i * 300))
//      .duration(function(d, i) {return i * 100})
      .attr("r", Math.max(10, nodeSettings[d.type].size * 2))
      .style("fill", nodeSettings[d.type].color)
      .transition()
      .duration(1000)
      .attr("r", nodeSettings[d.type].size)
      });
      
      d3.selectAll("g.node").select("text")
      .each(function(d,i) {
      d3.select(this)
      .transition()
      .delay(2000 + (i * 300))
      .style("font-size", function (d) {return Math.max(12, nodeSettings[d.type].size * 2) + "px"})
      .style("font-weight", 500)
      .transition()
      .duration(1000)
      .style("font-size", function (d) {return nodeSettings[d.type].size + "px"})
      .style("font-weight", 150)
      })
      
      d3.selectAll("path.link")
      .transition()
      .delay(function(d,i) {return 2000 + (i * 300)})
      .style("opacity", 1)
      .transition()
      .duration(1000)
      .style("fill", function(d) {return d.type == "horizontal" ? "lightblue" : "lightgreen"})





  force.on("tick", tick);
  
  function tick() {
    
    /*
    if(refreshGraph > 0) {
      console.log("skipped")
      refreshGraph--;
      return;
    }
    
    */
    
    force.alpha(.05);
    
    if (Math.random() < .025) {

    
      var randomPerturb = (Math.floor(Math.random() * (graphVariable.nodes.length)));
      
      graphVariable.nodes[randomPerturb].nodeStrength = Math.max(0, graphVariable.nodes[randomPerturb].nodeStrength -  (Math.random() > .50 ? -1 : 1))
      stateChange = true;
    }
    
    if (stateChange == true) {
      force.stop();

      stateChange = false;
      
      d3.selectAll("circle.node")
//      .style("fill", function(d) {return d.nodeStrength == 0 ? "gray" : color(maxIndex(d.communities))})
      .style("display", function(d) {return d.nodeStrength == 0 ? "none" : "block"})
      .attr("opacity", function(d) {return Math.max(.33, (d.nodeStrength * .1))})

      d3.selectAll("path.link")
      .style("display", function(d) {return (d.source.nodeStrength == 0 || d.target.nodeStrength == 0) ? "none" : "block"});
      
      setTimeout(function() {force.start()}, 100);
      
      refreshGraph = 100;

    }

    d3.selectAll(".link")
    .attr("d", function (d) {return taffyEdge(edgePoints(d.source, d.target)) + "Z"})
    
/*    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });
*/

    d3.selectAll("g.node")
    .attr("transform", function(d) { return "translate("+d.x+","+d.y+")"})
  }
  
  function grayOut(d,i) {
    d.fixed = true;
    testCommunities()
//    stateChange = true;
  }


function testCommunities() {
  
    graphVariable.nodes.forEach( function(node) {
    node.communities = [];
    node.communityBuffer = [];
    for (var community = 0; community < numCommunities; community++) {
      // Initialize with a small Exponential variate
      node.communities[community] = 0.01 * -Math.log(Math.random());
      node.communityBuffer[community] = 0.0;
    }
  });

  var communitySums = [];

  for (var iteration = 0; iteration < 20; iteration++) {
    for (var community = 0; community < numCommunities; community++) {
      communitySums[community] = 0.0;
    } 

    // Estimate community memberships for each edge
    graphVariable.links.forEach( function(edge) {
//      if (edge.source.nodeStrength > 0 && edge.target.nodeStrength > 0) {
      var sourceCommunities = edge.source.communities;
      var targetCommunities = edge.target.communities;
      var distribution = [];

      // Multiply the two community membership vectors
      for (var community = 0; community < numCommunities; community++) {
        distribution[community] = sourceCommunities[community] * targetCommunities[community];
      }

      // Normalize and add to the gradient
      var normalizer = edge.weight / d3.sum(distribution);
      for (var community = 0; community < numCommunities; community++) {
        distribution[community] *= normalizer;
        communitySums[community] += distribution[community];
        edge.source.communityBuffer[community] += distribution[community];
        edge.target.communityBuffer[community] += distribution[community];
      }
//      }
    });

    // We need to divide each node value by the square root of the community sum.
    var communityNormalizers = []
    for (var community = 0; community < numCommunities; community++) {
      communityNormalizers[community] = 1.0 / Math.sqrt(communitySums[community]);
    }

    // Update parameters and clear the buffer.
    graphVariable.nodes.forEach( function(node) {
      for (var community = 0; community < numCommunities; community++) {
        node.communities[community] = node.communityBuffer[community] * communityNormalizers[community];
        node.communityBuffer[community] = 0.0;
      }
    });
  }

  d3.selectAll("circle.node")
        .style("fill", function(d) { return color(maxIndex(d.communities)); })
  
}

function graphConstructor() {
  var nodes = [], links = [];


  var verticalEdgeSettings = 
    [
    {source: "governor", target: "emperor", number: 6, numbermin: 4},
    {source: "hierarchical3", target: "governor", number: 3, numbermin: 2},
    {source: "hierarchical4", target: "hierarchical3", number: 3, numbermin: 1},
    {source: "hierarchical5", target: "hierarchical4", number: 3, numbermin: 1},
    {source: "hierarchical6", target: "hierarchical5", number: 5, numbermin: 0},
    {source: "outsiderA", target: "emperor", number: 2, numbermin: 2}
    ]

  var horizontalEdgeSettings = 
    [
    {source: "governor", target: "governor", probability: .01},
    {source: "hierarchical3", target: "hierarchical3", probability: .05},
    {source: "hierarchical4", target: "hierarchical4", probability: .025},
    {source: "hierarchical5", target: "hierarchical5", probability: .01},
    {source: "outsiderA", target: "emperor", probability: .1},
    {source: "outsiderA", target: "governor", probability: .25},
    {source: "outsiderB", target: "governor", probability: .1},
    {source: "outsiderB", target: "hierarchical3", probability: .2}
    ]
  
  for (nodeClass in nodeSettings) {
    var x = 1;
    while (x <= nodeSettings[nodeClass].number) {
      var topNode = {label: nodeClass + "-" + x, type: nodeClass}
      nodes.push(topNode);
      x++;
    }
  }
  var node = 0;
  while (node < nodes.length && node < 500) {
    for (verticalEdge in verticalEdgeSettings) {
      if (nodes[node].type == verticalEdgeSettings[verticalEdge].target) {
        var x = 1;
        var x = Math.min(verticalEdgeSettings[verticalEdge].number - verticalEdgeSettings[verticalEdge].numbermin, Math.ceil(verticalEdgeSettings[verticalEdge].number * Math.random()))
        while (x < verticalEdgeSettings[verticalEdge].number) {
          var spawnNode = {label: verticalEdgeSettings[verticalEdge].source + "-" + x, type: verticalEdgeSettings[verticalEdge].source}
          nodes.push(spawnNode);
          var newLink = {source: nodes[node], target: spawnNode, weight: 2, type: "vertical"};
          links.push(newLink);

          x++;
        }
      }
    }
    node++;
  }

  for (nodex in nodes) {
    for (nodey in nodes) {
      for (horizontalEdge in horizontalEdgeSettings) {
        if (horizontalEdgeSettings[horizontalEdge].source == nodes[nodex].type && horizontalEdgeSettings[horizontalEdge].target == nodes[nodey].type) {
          var randomChance = Math.random();
          if (randomChance < horizontalEdgeSettings[horizontalEdge].probability) {
            var newLink = {source: nodes[nodex], target: nodes[nodey], weight: 1, type: "horizontal"};
            links.push(newLink);
          }
        }
      }
      }
  }
  genNodes = nodes;
  genEdges = links;
  var returnObject = {links: genEdges, nodes: genNodes};
  return returnObject;
  
}

function populateLists() {
  var textNodes = "<h3>Node List</h3><p>id<br>";
  for (x in force.nodes()) {
    textNodes += force.nodes()[x].label;
    textNodes += "<br>";
  }  
  textNodes += "</p>"


  textNodes += "<h3>Edge List</h3><p>source,target,type<br>";
  for (x in force.links()) {
    textNodes += force.links()[x].source.label;
    textNodes += ",";
    textNodes += force.links()[x].target.label;
    textNodes += ",";
    textNodes += force.links()[x].type;
    textNodes += "<br>";
    
  }
  textNodes += "</p>"

  d3.select("#code").html(textNodes);
}




</script>

<p>Settings: <input type="button" value="Edge List" onclick="populateLists()" /></p>
<pre id="code">
nodeSettings = {
    emperor: {number: 1, color: "red", size: 15},
    hierarchical2: {number: 0, color: "orange", size: 10},
    hierarchical3: {number: 0, color: "yellow", size: 8},
    hierarchical4: {number: 0, color: "green", size: 6},
    hierarchical5: {number: 0, color: "blue", size: 4},
    hierarchical6: {number: 0, color: "darkblue", size: 2},
    outsiderA: {number: 0, color: "lightgray", size: 8},
    outsiderB: {number: 2, color: "gray", size: 4}
  }
  
var verticalEdgeSettings = 
    [
    {source: "hierarchical2", target: "emperor", number: 6, numbermin: 4},
    {source: "hierarchical3", target: "hierarchical2", number: 3, numbermin: 2},
    {source: "hierarchical4", target: "hierarchical3", number: 3, numbermin: 1},
    {source: "hierarchical5", target: "hierarchical4", number: 3, numbermin: 1},
    {source: "hierarchical6", target: "hierarchical5", number: 5, numbermin: 0},
    {source: "outsiderA", target: "emperor", number: 2, numbermin: 2}
    ]
    
horizontalEdgeSettings = 
    [
    {source: "hierarchical2", target: "hierarchical2", probability: .01},
    {source: "hierarchical3", target: "hierarchical3", probability: .05},
    {source: "hierarchical4", target: "hierarchical4", probability: .025},
    {source: "hierarchical5", target: "hierarchical5", probability: .01},
    {source: "outsiderA", target: "hierarchical1", probability: .1},
    {source: "outsiderA", target: "hierarchical2", probability: .25},
    {source: "outsiderB", target: "hierarchical2", probability: .1},
    {source: "outsiderB", target: "hierarchical3", probability: .2}
    ]
</pre>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #fcfcfa;
}

.stroke {
  fill: none;
  stroke: #000;
  stroke-width: 3px;
}

.fill {
  fill: #fff;
}

.graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5px;
  stroke-opacity: .5;
}

.land {
  fill: #222;
}

.boundary {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 1440;

var projection = d3.geo.mollweide()
    .rotate([80, -45, 90])
    .scale(250)
    .translate([width / 2, height / 2])
    .precision(.1);

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "rotate(90 " + width / 2 + " " + height / 2 + ")");

svg.append("defs").append("path")
    .datum({type: "Sphere"})
    .attr("id", "sphere")
    .attr("d", path);

svg.append("use")
    .attr("class", "stroke")
    .attr("xlink:href", "#sphere");

svg.append("use")
    .attr("class", "fill")
    .attr("xlink:href", "#sphere");

svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

d3.json("/mbostock/raw/4090846/world-50m.json", function(error, world) {
  svg.insert("path", ".graticule")
      .datum(topojson.feature(world, world.objects.land))
      .attr("class", "land")
      .attr("d", path);

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
      .attr("class", "boundary")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #fcfcfa;
}

.stroke {
  fill: none;
  stroke: #000;
  stroke-width: 3px;
}

.fill {
  fill: #fff;
}

.graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5px;
  stroke-opacity: .5;
}

.land {
  fill: #222;
}

.boundary {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 560;

var projection = d3.geo.projection(d3.geo.hammer.raw(1.75, 2))
    .rotate([75, -45])
    .scale(190)
    .translate([width / 2, height / 2])
    .precision(.1);

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("defs").append("path")
    .datum({type: "Sphere"})
    .attr("id", "sphere")
    .attr("d", path);

svg.append("use")
    .attr("class", "stroke")
    .attr("xlink:href", "#sphere");

svg.append("use")
    .attr("class", "fill")
    .attr("xlink:href", "#sphere");

svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

d3.json("/mbostock/raw/4090846/world-50m.json", function(error, world) {
  svg.insert("path", ".graticule")
      .datum(topojson.feature(world, world.objects.land))
      .attr("class", "land")
      .attr("d", path);

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
      .attr("class", "boundary")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <style>
            svg {
                margin-left: auto; margin-right: auto;
                display: block;
            }

            line,
            rect {
                shape-rendering: crispEdges;
            }

            text {
                font: 10px sans-serif;
            }

            text.title {
                font-weight: bold;
            }

            path {
                display: none;
            }

            path.symbol,
            .legend path {
                display: inline;
                stroke: #000;
            }

            line {
                stroke: #000;
            }

            rect {
                fill: #ABDDA4;
            }

            line.divider {
                stroke-dasharray: 4,2;
            }
        </style>
    </head>
    <body>
        <!-- <script src="http://d3js.org/d3.v3.min.js"></script> -->
        <script src="d3.min.js?v=3.2.8"></script>
        <script type="text/javascript"charset="utf-8">
            // Settings
            var width = 440,
                height = 150;  // Compute dynanically?
                /**
                    Accounting for
                        * valueTypes.length
                        * keys.length
                */

            var barHeight = 8,
                dividerHeight = 7;

            var textContainerSize = 16;
            // fontsize + lineheight;

            var margin = {
                'top': 15,
                'right': 20,
                'bottom': 0,
                'left': 20
            };

            margin.hor = margin.left + margin.right;
            margin.ver = margin.top + margin.bottom;

            // Config
            var thresholdTitle = "2014 Budgets Compared",
                valueTypes = ["money"],  // ["percentage", "money", "quantity"]

                moneyPrefix = "$",  // "$", "£", "€"
                moneySuffix = "",  // "USD", "GBP", "EUR"
                quantityNoun = "",  // "Jobs", "F-35s"

                valueLabel = "symbol",  // "text", "symbol", "none"
                useMultipleSymbols = false,  // true, false
                symbolType = "cross";
                // "circle", "cross", "diamond", "square",
                // "triangle-up", "triangle-down"

            // Data in JSON format
            var jsonData = {
                "Obama Budget": {
                    "money": 1235000000000
                },
                "Ryan Budget": {
                    "money": 967000000000
                },
                "Murray-Ryan Deal": {
                    "money": 1012000000000
                },
                "Senate Budget": {
                    "money": 1058000000000
                }
            };

            var domain = getValues(jsonData, valueTypes[0], true),
                keys = Object.keys(jsonData);

            // Helper functions
            function getValues(jsonData, valueType, isFloat) {
                return Object.keys(jsonData).map(function(key){
                    if (isFloat === true) {
                        return parseFloat(
                            jsonData[key][valueType]
                        );
                    } else {
                        return jsonData[key][valueType];
                    }
                });
            };

            function displayValue(d, i, valueType) {
                if (valueType === "percentage") {
                    if (d === 0) {
                        return 0 + "%";
                    }
                    else if (d < 0) {
                        return "-" + -1*d + "%";
                    } else {  // d < 0
                        return shownPlusSign + d + "%";
                    }
                }

                else if (valueType === "money") {
                    var val = parseMoney.scale(money[i]);

                    if (d === 0) {
                        return moneyPrefix + 0 + moneySuffix;
                    }
                    else if (d < 0) {
                        return "-" + moneyPrefix + -1*val + parseMoney.symbol + moneySuffix;
                    } else {  // d < 0
                        return shownPlusSign + moneyPrefix + val + parseMoney.symbol + moneySuffix;
                    }
                }

                else if (valueType === "quantity") {
                    var val = parseQuantity.scale(quantity[i]);

                    if (d === 0) {
                        return 0 + "" + quantityNoun;
                    }
                    else if (d < 0) {
                        return "-" + -1*val + parseQuantity.symbol + "" + quantityNoun;
                    } else {  // d < 0
                        return shownPlusSign + val + parseQuantity.symbol + "" + quantityNoun;
                    }
                }
            };

            for (var i = 0; i < valueTypes.length; i++) {
                if (valueTypes[i] === "percentage") {
                    var percentage = getValues(jsonData, "percentage", true);
                }

                else if (valueTypes[i] === "money") {
                    var money = getValues(jsonData, "money", false);
                    var parseMoney = d3.formatPrefix(d3.max(money));
                }

                else if (valueTypes[i] === "quantity") {
                    var quantity = getValues(jsonData, "quantity", false);
                    var parseQuantity = d3.formatPrefix(d3.max(quantity));
                }
            }

            var svg = d3.select("body")
                .append("svg")
                .attr({
                    "width": width,
                    "height": height
                });

            var x = d3.scale.linear()
                .domain(d3.extent(domain))
                .range([0, width - margin.hor]);

            // Show value plus signs for distinction, if negative values exist
            var shownPlusSign = (d3.min(x.domain()) < 0) ? "+" : "";

            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom")
                .tickSize(13)
                .tickValues(domain)
                .tickFormat("");

            var g = svg.append("g")
                .attr({
                    "class": "bar",
                    "transform": "translate(" + margin.left + "," + margin.top + ")"
                });

            // Bar
            g.append("rect")
                .attr({
                    "height": barHeight,
                    "x": x.range()[0],
                    "width": x.range()[1]
                });

            // Divider showing the fabled "centre" of the budget bar
            g.append("line")
                .attr("class", "divider")
                .attr({
                    "x1": (x.range()[0] + x.range()[1])/2,
                    "x2": (x.range()[0] + x.range()[1])/2,
                    "y1": -dividerHeight,
                    "y2": dividerHeight + barHeight
                });

            // Ticks and title
            g.call(xAxis)
                // Title
                .append("text")
                .attr({
                    "class": "title",
                    "y": -6
                })
                .text(thresholdTitle);

            // Display symbols
            if (valueLabel === "symbol") {
                var color = d3.scale.category10().domain(domain);
                // Bar symbol
                g.selectAll(".symbol")
                    .data(domain)
                    .enter().append("path")
                    .attr("class", "symbol")
                    .attr({
                        "transform": function(d) {
                            return "translate(" + x(d) + "," + barHeight/2 + ")";
                        },
                        "d": function(d, i) {
                            return (keys[i] === "Murray-Ryan Deal") ? d3.svg.symbol().type(symbolType)() : d3.svg.symbol().type("circle")();
                        },
                        "fill": function(d) { return color(d); }
                    });

                var legendX = (x.range()[0] + x.range()[1])/2 - 25,  // Revise
                    legendY = textContainerSize*valueTypes.length + barHeight + 32,

                    yPos = function(d, i) {
                        return i*textContainerSize;
                    };

                var legend = svg.selectAll(".legend")
                    .data(domain)
                    .enter().append("g")
                    .attr("class", "legend")
                    .attr("transform", "translate(" + legendX + "," + legendY + ")");

                // Legend symbols
                legend.append("path")
                    .attr("class", "legend-symbol")
                    .attr({
                        "transform": function(d, i) {
                            return "translate(" + 0 + "," + yPos(d, i) + ")";
                        },
                        "d": function(d, i) {
                            return (keys[i] === "Murray-Ryan Deal") ? d3.svg.symbol().type(symbolType)() : d3.svg.symbol().type("circle")();
                        },
                        "fill": function(d) { return color(d); }
                    });

                // Legend text
                legend.append("text")
                    .attr("class", "legend-text")
                    .attr({
                        "x": 12,  // Revise
                        "y": function(d, i) {
                            return yPos(d, i);
                        },
                        "dy": ".3em"  // Revise
                    })
                    .text(function(d, i) {  // fetch string
                        return keys[i];
                    });
            }

            // Display text labels --- work in progress
            if (valueLabel === "text") {
                g.selectAll(".name")
                    .data(domain)
                    .enter().append("text")
                    .attr("class", "name")
                    .attr({
                        "text-anchor": function(d) {
                            return (x(d) > (x.range()[0] + x.range()[1])/2) ? "end" : "start";
                        },  // Revise
                        "x": x,
                        "y": 0 // Revise
                    })
                    .text(function(d, i) {  // fetch string
                        return keys[i];
                    });
            }

        // Display any additional values, if they exist
            var labels = g.selectAll(".values")
                .data(domain)
                .enter();

            for (var c = 0; c < valueTypes.length; c++) {
                labels.append("text")
                    .attr({
                        "text-anchor": "middle",
                        "background-color": function(d, i) {
                            return (keys[i] === "Murray-Ryan Deal") ? "yellow" : "blue";
                        },
                        "x": function(d) { return x(d); },
                        "y": function() {
                            // Revise
                            return c*textContainerSize + barHeight + 15;
                        }
                    })
                    .text(function(d, i) {
                        return displayValue(d, i, valueTypes[c]);
                    });
            }
        </script>
    </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #fcfcfa;
}

.stroke {
  fill: none;
  stroke: #000;
  stroke-width: 3px;
}

.fill {
  fill: #6DB4D2;
}

.graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5px;
  stroke-opacity: .5;
}

.land {
  fill: #259056;
}

.boundary {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}

div.tooltip {   
  position: absolute;           
  text-align: center;           
  width: 60px;                 
  padding: 3px;             
  font: 12px sans-serif;        
  background: #333; 
  color:#e2e3e3;  
  border: 1px solid #97EEBF; 
  border-radius: 0px;           
  pointer-events: none;         
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 960;

var projection = d3.geo.azimuthalEquidistant()
    .scale(190)
    .translate([width / 2, height / 2])
    .clipAngle(135 - 1e-3)
    .precision(.1)
    .rotate([74 + 45 / 60, -52 - 50 / 60]);

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("defs").append("path")
    .datum({type: "Sphere"})
    .attr("id", "sphere")
    .attr("d", path);

svg.append("use")
    .attr("class", "stroke")
    .attr("xlink:href", "#sphere");

svg.append("use")
    .attr("class", "fill")
    .attr("xlink:href", "#sphere");

svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

var g = svg.append("g");

var div = d3.select("body").append("div")   
    .attr("class", "tooltip")               
    .style("opacity", 0);

d3.xhr("https://api.github.com/repos/wboykinm/geosprocket-geodata/contents/world-50m.json", "application/vnd.github.v3.raw+json", function(error, data) {
  world = JSON.parse(data.response);

  // load and display the cities
  d3.csv("vt.csv", function(error, data) {


    g.selectAll("circle")
       .data(data)
       .enter()
       .append("circle")
       .attr("cx", function(d) {
               return projection([d.lon, d.lat])[0];
       })
       .attr("cy", function(d) {
               return projection([d.lon, d.lat])[1];
       })
       .attr("r", 10)
       .attr('opacity', 0.7)
       .attr('stroke', '#ffffff')
       .attr('stroke-width', 1)
       .style("fill", "#97eebf")
       .on("mouseover", function(d) {      
            div.transition()        
                .duration(200)      
                .style("opacity", 1);      
            div .html(d.city)  
                .style("left", (d3.event.pageX) + "px")     
                .style("top", (d3.event.pageY - 28) + "px"); 
            g   .style('opacity', 1); 
            })                  
        .on("mouseout", function(d) {       
            div.transition()        
                .duration(500)      
                .style("opacity", 0); 
            g   .style('opacity', 0.7);  
        }); 
  });

  svg.insert("path", ".graticule")
      .datum(topojson.feature(world, world.objects.land))
      .attr("class", "land")
      .attr("d", path);

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
      .attr("class", "boundary")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Royal Enfield Map</title>
  <!-- Zepto -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/zepto/1.1.6/zepto.min.js" charset="utf-8"></script>
  <!-- Leaflet -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css" charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js" charset="utf-8"></script>
  <!-- Leaflet.MarkerCluster -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/leaflet.markercluster.js" charset="utf-8"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.css" charset="utf-8">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/0.4.0/MarkerCluster.Default.css" charset="utf-8">

  <!-- Fancy styling for a full-screen map -->
  <style>
    body { margin:0; padding:0; }
    #map { position:absolute; top:0; bottom:0; width:100%; }
  </style>
</head>
<body>
  <!-- This is where the map is going to go -->
  <div id="map"></div>

  <script type="text/javascript">
    $(document).ready(function() {
      console.log("zepto loaded successfully")

      $.getJSON("royal_enfield.json", function(data) {
        // this next code chunk centres the map on your data
        var latsum = 0, lonsum = 0;

        for (var i = 0; i < data.length; i++) {
          var d = data[i]
          latsum += d["latitude"]
          lonsum += d["longitude"]
        }

        var latavg = latsum / data.length;
        var lonavg = lonsum / data.length;

        console.log(latavg);
        console.log(lonavg);

        // note how the centre is set to [latavg, longavg]
        var map = L.map('map', {
          maxZoom: 6
        }).setView([latavg, lonavg], 5)

        // basemaps taken from cartodb (cartodb.com/basemaps/)
        // choose the style that best fits your needs, but remember the attribution!
        // also, note the addTo at the end -- important to add map to div
        var layer = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',{
          attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'
        }).addTo(map)

        var markers = new L.MarkerClusterGroup({
          spiderfyDistanceMultiplier: 2,
          maxClusterRadius: 40
        })
        var markers_list = []

        for (var i = 0; i < data.length; i++) {
          var d = data[i]
          var popup_text = "<b>" + d["city"] + ", " + d["state"] + "</b>"

          var marker = L.marker()
                        .setLatLng([d["latitude"], d["longitude"]])
                        .bindPopup(popup_text)

          // this might seem like a redundant step but you will thank me later
          // when you need to access a marker on the map but have no way of getting
          // to it
          markers_list.push(marker)
          markers.addLayer(marker)
        }
        map.addLayer(markers)
      })
    })
  </script>
</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Circles</title>
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script>
function initialize() {
  // Create the map.
  var mapOptions = {
    zoom: 4,
    center: new google.maps.LatLng(37.09024, -95.712891),
    mapTypeId: google.maps.MapTypeId.TERRAIN
  };

  var map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);

  cityCircle = new google.maps.Circle({
      center: new google.maps.LatLng(34.052234, -118.243684),
      radius: 1000000,
      draggable: true,
      geodesic: true,
      map: map
  });
}

google.maps.event.addDomListener(window, 'load', initialize);

    </script>
  </head>
  <body>
    <div id="map-canvas"></div>
  </body>
</html>
<html>
  <head>
    <title>2013-2014 EPL statistics</title>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  </head>
  
  <body>
    <script type='text/javascript'>
    
      var width = 500,
          height = 500;
      
      var x = d3.scale.ordinal()
          .rangeRoundBands([0, width], 0.1);
          
      var y = d3.scale.linear()
          .range([height, 0]);
          
      var chart = d3.select('.chart')
          .attr('width', width)
          .attr('height', height);
    
      d3.csv('epl-data.csv', function(error, data) {
      
        x.domain(data.map(function(d) { return d.team; }));
        y.domain([0, d3.max(data, function(d) { return d.value; })]);
        
        data.forEach(function(d) {
          d.team = d.team;
          d.tsr90 = +d.tsr90;
        });
        
        var bar = chart.selectAll('g')
            .data(data)
          .enter().append('g')
            .attr('transform', function(d) { return 'translate(' + x(d.team) + ',0)'; });
          
        bar.append('rect')
            .attr('y', function(d) { return y(d.tsr90); })
            .attr('height', function(d) { return height - y(d.tsr90); })
            .attr('width', x.rangeBand());
        
      });
      
    </script>
    
    <div class='chart'></div>
  </body>
</html><!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Los temas de la semana (3/11 .. 9/11)</title>
</head>
<body>
  <svg width="847" xmlns:xlink="http://www.w3.org/1999/xlink" height="500" xmlns="http://www.w3.org/2000/svg"><g><g class="x axis" transform="translate(0,480)" style="stroke-width: 1px; font-size: 10px; font-family: Arial, Helvetica;"><g class="tick" transform="translate(17.645833333333336,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;">mar 3</text></g><g class="tick" transform="translate(88.22916666666667,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;"></text></g><g class="tick" transform="translate(158.8125,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;">mie 4</text></g><g class="tick" transform="translate(229.39583333333337,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;"></text></g><g class="tick" transform="translate(299.9791666666667,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;">jue 5</text></g><g class="tick" transform="translate(370.5625,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;"></text></g><g class="tick" transform="translate(441.14583333333337,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;">vie 6</text></g><g class="tick" transform="translate(511.72916666666674,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;"></text></g><g class="tick" transform="translate(582.3125,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;">sab 7</text></g><g class="tick" transform="translate(652.8958333333334,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;"></text></g><g class="tick" transform="translate(723.4791666666667,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;">dom 8</text></g><g class="tick" transform="translate(794.0625,0)" style="opacity: 1;"><line y2="-480" x2="0" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></line><text y="3" x="0" dy=".71em" style="text-anchor: middle;"></text></g><path class="domain" d="M0,-480V0H847V-480" style="shape-rendering: crispEdges; fill: none; stroke: rgb(204, 204, 204);"></path></g><path class="layer" d="M0,370.48007573801533L23.52777777777778,387.97413718908683C47.05555555555556,405.46819864015833,94.11111111111111,440.45632154230134,141.16666666666669,457.95038299337284C188.22222222222223,475.4444444444444,235.27777777777777,475.4444444444444,282.3333333333333,476.037037037037C329.3888888888889,476.62962962962956,376.44444444444446,477.8148148148148,423.5,477.8148148148148C470.55555555555554,477.8148148148148,517.6111111111111,476.62962962962956,564.6666666666666,476.62962962962956C611.7222222222222,476.62962962962956,658.7777777777778,477.8148148148148,705.8333333333333,478.40740740740733C752.8888888888889,479,799.9444444444443,479,823.4722222222222,478.99999999999994L847,479L847,480L823.4722222222222,480C799.9444444444443,480,752.8888888888889,480,705.8333333333333,479.4074074074074C658.7777777777778,478.8148148148148,611.7222222222222,477.6296296296296,564.6666666666667,477.6296296296296C517.6111111111111,477.6296296296296,470.55555555555554,478.8148148148148,423.5,478.8148148148148C376.44444444444446,478.8148148148148,329.3888888888889,477.6296296296296,282.3333333333333,477.037037037037C235.27777777777777,476.44444444444446,188.22222222222223,476.44444444444446,141.16666666666669,461.62962962962956C94.11111111111111,446.8148148148148,47.05555555555556,417.1851851851851,23.52777777777778,402.3703703703703L0,387.55555555555554Z" title="beba" style="fill-opacity: 0.9; fill: rgb(191, 105, 105);"></path><path class="layer" d="M0,325.0868405198382L23.52777777777778,340.0723670998651C47.05555555555556,355.0578936798921,94.11111111111111,385.028946839946,141.16666666666669,400.014473419973C188.22222222222223,414.99999999999994,235.27777777777777,414.99999999999994,282.3333333333333,382.62839968125274C329.3888888888889,350.2567993625056,376.44444444444446,285.5135987250112,423.5,285.5135987250112C470.55555555555554,285.5135987250112,517.6111111111111,350.2567993625056,564.6666666666666,382.62839968125274C611.7222222222222,414.99999999999994,658.7777777777778,414.99999999999994,705.8333333333333,415.5925925925925C752.8888888888889,416.1851851851851,799.9444444444443,417.3703703703703,823.4722222222222,417.96296296296293L847,418.55555555555554L847,419.55555555555554L823.4722222222222,418.96296296296293C799.9444444444443,418.3703703703703,752.8888888888889,417.18518518518516,705.8333333333333,416.59259259259255C658.7777777777778,416,611.7222222222222,416,564.6666666666667,388.50625368118347C517.6111111111111,361.01250736236705,470.55555555555554,306.0250147247341,423.5,306.02501472473404C376.44444444444446,306.0250147247341,329.3888888888889,361.01250736236705,282.3333333333333,388.50625368118347C235.27777777777777,416,188.22222222222223,416,141.16666666666669,404.06093467596173C94.11111111111111,392.1218693519236,47.05555555555556,368.24373870384716,23.52777777777778,356.3046733798089L0,344.36560805577074Z" title="video" style="fill-opacity: 0.9; fill: rgb(191, 119, 105);"></path><path class="layer" d="M0,267.0247009209054L23.52777777777778,243.7970934868529C47.05555555555556,220.5694860528004,94.11111111111111,174.11427118469544,141.16666666666669,159.18857228864147C188.22222222222223,144.2628733925875,235.27777777777777,160.86669046858455,282.3333333333333,218.2383292306343C329.3888888888889,275.609967992684,376.44444444444446,373.74942844078646,423.5,422.8191586648377C470.55555555555554,471.8888888888889,517.6111111111111,471.8888888888889,564.6666666666666,420.5368598263335C611.7222222222222,369.1848307637781,658.7777777777778,266.4807726386673,705.8333333333333,258.7770689349636C752.8888888888889,251.0733652312599,799.9444444444443,338.37001594896327,823.4722222222222,382.018341307815L847,425.6666666666667L847,426.6666666666667L823.4722222222222,389.94010278220804C799.9444444444443,353.2135388977494,752.8888888888889,279.7604111288322,705.8333333333333,287.46411483253587C658.7777777777778,295.16781853623957,611.7222222222222,384.0283537125642,564.6666666666667,428.4586213007266C517.6111111111111,472.88888888888886,470.55555555555554,472.88888888888886,423.5,431.4749393267911C376.44444444444446,390.06098976469343,329.3888888888889,307.23309064049806,282.3333333333333,258.2691129641916C235.27777777777777,209.30513528788515,188.22222222222223,194.20507905946766,141.16666666666669,205.6690042362195C94.11111111111111,217.1329294129714,47.05555555555556,255.16083599489264,23.52777777777778,274.17478928585325L0,293.18874257681387Z" title="boca" style="fill-opacity: 0.9; fill: rgb(118, 163, 189);"></path><path class="layer" d="M0,230.9706515190636L23.52777777777778,270.5310984881085C47.05555555555556,310.0915454571535,94.11111111111111,389.21243939524334,141.16666666666669,428.7728863642883C188.22222222222223,468.33333333333326,235.27777777777777,468.33333333333326,282.3333333333333,468.33333333333326C329.3888888888889,468.33333333333326,376.44444444444446,468.33333333333326,423.5,468.33333333333326C470.55555555555554,468.33333333333326,517.6111111111111,468.33333333333326,564.6666666666666,468.33333333333326C611.7222222222222,468.33333333333326,658.7777777777778,468.33333333333326,705.8333333333333,468.92592592592587C752.8888888888889,469.5185185185185,799.9444444444443,470.7037037037037,823.4722222222222,471.2962962962963L847,471.8888888888889L847,472.8888888888889L823.4722222222222,472.29629629629625C799.9444444444443,471.7037037037037,752.8888888888889,470.5185185185185,705.8333333333333,469.9259259259259C658.7777777777778,469.33333333333326,611.7222222222222,469.33333333333326,564.6666666666667,469.3333333333333C517.6111111111111,469.33333333333326,470.55555555555554,469.33333333333326,423.5,469.3333333333333C376.44444444444446,469.33333333333326,329.3888888888889,469.33333333333326,282.3333333333333,469.3333333333333C235.27777777777777,469.33333333333326,188.22222222222223,469.33333333333326,141.16666666666669,435.0226353386694C94.11111111111111,400.7119373440055,47.05555555555556,332.0905413546776,23.52777777777778,297.77984336001373L0,263.46914536534985Z" title="mujer" style="fill-opacity: 0.9; fill: rgb(191, 148, 105);"></path><path class="layer" d="M0,193.81495825802563L23.52777777777778,238.9754281779843C47.05555555555556,284.135898097943,94.11111111111111,374.45683793786037,141.16666666666669,419.6173078578191C188.22222222222223,464.77777777777777,235.27777777777777,464.77777777777777,282.3333333333333,417.918424973149C329.3888888888889,371.05907216852023,376.44444444444446,277.34036655926275,423.5,277.34036655926275C470.55555555555554,277.34036655926275,517.6111111111111,371.05907216852023,564.6666666666666,388.95165198006026C611.7222222222222,406.8442317916002,658.7777777777778,348.91068580542264,705.8333333333333,349.5032783980152C752.8888888888889,350.09587099060775,799.9444444444443,409.2146021619705,823.4722222222222,438.7739677476519L847,468.3333333333333L847,469.3333333333333L823.4722222222222,444.56920077972705C799.9444444444443,419.80506822612085,752.8888888888889,370.27680311890833,705.8333333333333,369.6842105263158C658.7777777777778,369.09161793372317,611.7222222222222,417.4346978557504,564.6666666666667,400.1790819424613C517.6111111111111,382.92346602917223,470.55555555555554,300.06915428056675,423.5,300.06915428056675C376.44444444444446,300.06915428056675,329.3888888888889,382.92346602917223,282.3333333333333,424.350621903475C235.27777777777777,465.7777777777777,188.22222222222223,465.7777777777777,141.16666666666669,426.0506641420661C94.11111111111111,386.3235505063545,47.05555555555556,306.86932323493124,23.52777777777778,267.14220959921965L0,227.41509596350804Z" title="campaña" style="fill-opacity: 0.9; fill: rgb(191, 162, 105);"></path><path class="layer" d="M0,131.04604527067733L23.52777777777778,139.6484674566654C47.05555555555556,148.25088964265348,94.11111111111111,165.45573401462963,141.16666666666669,203.7316411049499C188.22222222222223,242.00754819527015,235.27777777777777,301.3545180039346,282.3333333333333,347.78145864320396C329.3888888888889,394.20839928247335,376.44444444444446,427.71531075234776,423.5,444.468766487285C470.55555555555554,461.2222222222222,517.6111111111111,461.2222222222222,564.6666666666666,461.22222222222223C611.7222222222222,461.2222222222222,658.7777777777778,461.2222222222222,705.8333333333333,461.8148148148148C752.8888888888889,462.4074074074074,799.9444444444443,463.5925925925926,823.4722222222222,464.1851851851852L847,464.77777777777777L847,465.77777777777777L823.4722222222222,465.1851851851851C799.9444444444443,464.59259259259255,752.8888888888889,463.4074074074074,705.8333333333333,462.8148148148148C658.7777777777778,462.22222222222223,611.7222222222222,462.22222222222223,564.6666666666667,462.2222222222223C517.6111111111111,462.22222222222223,470.55555555555554,462.22222222222223,423.5,449.1851851851852C376.44444444444446,436.14814814814815,329.3888888888889,410.0740740740741,282.3333333333333,370.1268391679351C235.27777777777777,330.17960426179604,188.22222222222223,276.3592085235921,141.16666666666669,244.06910897400377C94.11111111111111,211.77900942441545,47.05555555555556,201.01920606344277,23.52777777777778,195.63930438295642L0,190.25940270247008Z" title="matías alé" style="fill-opacity: 0.9; fill: rgb(191, 176, 105);"></path><path class="layer" d="M0,66.62466649453484L23.52777777777778,67.17352344864203C47.05555555555556,67.72238040274922,94.11111111111111,68.82009431096363,141.16666666666669,57.715983228541155C188.22222222222223,46.611872146118685,235.27777777777777,23.305936073059343,282.3333333333333,11.652968036529671C329.3888888888889,0,376.44444444444446,0,423.5,0C470.55555555555554,0,517.6111111111111,0,564.6666666666666,18.97713981924507C611.7222222222222,37.95427963849014,658.7777777777778,75.90855927698028,705.8333333333333,75.90855927698028C752.8888888888889,75.90855927698028,799.9444444444443,37.95427963849014,823.4722222222222,18.97713981924507L847,0L847,72.61345852895153L823.4722222222222,87.2147419337931C799.9444444444443,101.81602533863469,752.8888888888889,131.01859214831785,705.8333333333333,129.71881819596172C658.7777777777778,128.4190442436056,611.7222222222222,96.61692952921018,564.6666666666667,82.8850276074604C517.6111111111111,69.15312568571063,470.55555555555554,73.49143655660649,423.5,73.21269152477505C376.44444444444446,72.93394649294362,329.3888888888889,68.03814555838488,282.3333333333333,75.75043778064031C235.27777777777777,83.46273000289575,188.22222222222223,103.78311538196536,141.16666666666669,114.50780623051463C94.11111111111111,125.2324970790639,47.05555555555556,126.36149339709284,23.52777777777778,126.9259915561073L0,127.49048971512178Z" title="scioli" style="fill-opacity: 0.9; fill: rgb(42, 180, 240);"></path><path class="layer" d="M0,0L23.52777777777778,0C47.05555555555556,0,94.11111111111111,0,141.16666666666669,11.116316696563604C188.22222222222223,22.23263339312721,235.27777777777777,44.46526678625442,282.3333333333333,58.02948395009739C329.3888888888889,71.59370111394037,376.44444444444446,76.4895020484991,423.5,76.76824708033055C470.55555555555554,77.04699211216202,517.6111111111111,72.70868124126619,564.6666666666666,59.14446407742322C611.7222222222222,45.580246913580254,658.7777777777778,22.790123456790127,705.8333333333333,24.08989740914624C752.8888888888889,25.389671361502355,799.9444444444443,50.77934272300471,823.4722222222222,63.474178403755886L847,76.16901408450707L847,133.75899843505482L823.4722222222222,121.24786286387474C799.9444444444443,108.73672729269467,752.8888888888889,83.71445615033453,705.8333333333333,80.63528151403938C658.7777777777778,77.55610687774424,611.7222222222222,96.4200287475141,564.6666666666667,108.57279332566394C517.6111111111111,120.72555790381381,470.55555555555554,126.16716519034367,423.5,127.46768223160143C376.44444444444446,128.76819927285922,329.3888888888889,125.92762606884492,282.3333333333333,115.05320609996974C235.27777777777777,104.17878613109457,188.22222222222223,85.27051939735853,141.16666666666669,75.26752907638331C94.11111111111111,65.26453875540808,47.05555555555556,64.16682484719368,23.52777777777778,63.61796789308649L0,63.06911093897929Z" title="macri" style="fill-opacity: 0.9; fill: rgb(255, 223, 108);"></path><path class="layer" d="M0,347.9211636113263L23.52777777777778,365.0268956020311C47.05555555555556,382.132627592736,94.11111111111111,416.34409157414575,141.16666666666669,433.4498235648506C188.22222222222223,450.5555555555555,235.27777777777777,450.5555555555555,282.3333333333333,450.55555555555554C329.3888888888889,450.5555555555555,376.44444444444446,450.5555555555555,423.5,450.55555555555554C470.55555555555554,450.5555555555555,517.6111111111111,450.5555555555555,564.6666666666666,450.55555555555554C611.7222222222222,450.5555555555555,658.7777777777778,450.5555555555555,705.8333333333333,451.1481481481481C752.8888888888889,451.74074074074065,799.9444444444443,452.92592592592587,823.4722222222222,453.5185185185184L847,454.1111111111111L847,455.1111111111111L823.4722222222222,454.5185185185185C799.9444444444443,453.92592592592587,752.8888888888889,452.7407407407407,705.8333333333333,452.1481481481481C658.7777777777778,451.55555555555554,611.7222222222222,451.55555555555554,564.6666666666667,451.5555555555555C517.6111111111111,451.55555555555554,470.55555555555554,451.55555555555554,423.5,451.5555555555555C376.44444444444446,451.55555555555554,329.3888888888889,451.55555555555554,282.3333333333333,451.5555555555555C235.27777777777777,451.55555555555554,188.22222222222223,451.55555555555554,141.16666666666669,437.4503829933729C94.11111111111111,423.34521043119025,47.05555555555556,395.134865306825,23.52777777777778,381.02969274464243L0,366.9245201824598Z" title="miedo" style="fill-opacity: 0.9; fill: rgb(162, 191, 105);"></path><path class="layer" d="M0,296.7442981323694L23.52777777777778,321.7869151103078C47.05555555555556,346.82953208824625,94.11111111111111,396.9147660441231,141.16666666666669,421.95738302206155C188.22222222222223,447,235.27777777777777,447,282.3333333333333,447C329.3888888888889,447,376.44444444444446,447,423.5,447C470.55555555555554,447,517.6111111111111,447,564.6666666666666,447C611.7222222222222,447,658.7777777777778,447,705.8333333333333,447.5925925925926C752.8888888888889,448.18518518518516,799.9444444444443,449.3703703703703,823.4722222222222,449.96296296296293L847,450.55555555555554L847,451.55555555555554L823.4722222222222,450.96296296296293C799.9444444444443,450.3703703703703,752.8888888888889,449.1851851851851,705.8333333333333,448.5925925925925C658.7777777777778,447.99999999999994,611.7222222222222,447.99999999999994,564.6666666666667,447.9999999999999C517.6111111111111,447.99999999999994,470.55555555555554,447.99999999999994,423.5,447.9999999999999C376.44444444444446,447.99999999999994,329.3888888888889,447.99999999999994,282.3333333333333,447.9999999999999C235.27777777777777,447.99999999999994,188.22222222222223,447.99999999999994,141.16666666666669,426.92188082738033C94.11111111111111,405.8437616547608,47.05555555555556,363.6875233095217,23.52777777777778,342.6094041369021L0,321.5312849642826Z" title="salud" style="fill-opacity: 0.9; fill: rgb(148, 191, 105);"></path><path class="layer" d="M0,443.44444444444446L23.52777777777778,424.9282090309487C47.05555555555556,406.41197361745304,94.11111111111111,369.3795027904617,141.16666666666669,369.3795027904617C188.22222222222223,369.3795027904617,235.27777777777777,406.41197361745304,282.3333333333333,424.9282090309487C329.3888888888889,443.44444444444446,376.44444444444446,443.44444444444446,423.5,443.4444444444444C470.55555555555554,443.44444444444446,517.6111111111111,443.44444444444446,564.6666666666666,443.4444444444444C611.7222222222222,443.44444444444446,658.7777777777778,443.44444444444446,705.8333333333333,444.037037037037C752.8888888888889,444.6296296296296,799.9444444444443,445.8148148148148,823.4722222222222,446.4074074074074L847,447L847,448L823.4722222222222,447.40740740740733C799.9444444444443,446.8148148148148,752.8888888888889,445.6296296296296,705.8333333333333,445.037037037037C658.7777777777778,444.44444444444446,611.7222222222222,444.44444444444446,564.6666666666667,444.44444444444446C517.6111111111111,444.44444444444446,470.55555555555554,444.44444444444446,423.5,444.44444444444446C376.44444444444446,444.44444444444446,329.3888888888889,444.44444444444446,282.3333333333333,430.0740740740741C235.27777777777777,415.7037037037037,188.22222222222223,386.96296296296293,141.16666666666669,386.962962962963C94.11111111111111,386.96296296296293,47.05555555555556,415.7037037037037,23.52777777777778,430.0740740740741L0,444.44444444444446Z" title="corte" style="fill-opacity: 0.9; fill: rgb(134, 191, 105);"></path><path class="layer" d="M0,439.8888888888889L23.52777777777778,411.2924911212582C47.05555555555556,382.6960933536276,94.11111111111111,325.50329781836626,141.16666666666669,307.60461328387925C188.22222222222223,289.7059287493922,235.27777777777777,311.1013552156795,282.3333333333333,339.69775298331024C329.3888888888889,368.29415075094084,376.44444444444446,404.0915198199149,423.5,394.2062537371179C470.55555555555554,384.32098765432096,517.6111111111111,328.75308641975306,564.6666666666666,328.75308641975306C611.7222222222222,328.75308641975306,658.7777777777778,384.32098765432096,705.8333333333333,361.6758824552251C752.8888888888889,339.03077725612934,799.9444444444443,238.17266562336985,823.4722222222222,187.7436098069901L847,137.31455399061036L847,177.37715179968706L823.4722222222222,221.29577464788736C799.9444444444443,265.21439749608766,752.8888888888889,353.05164319248826,705.8333333333333,373.7521590448038C658.7777777777778,394.4526748971193,611.7222222222222,348.0164609053498,564.6666666666667,348.0164609053498C517.6111111111111,348.0164609053498,470.55555555555554,394.4526748971193,423.5,403.7136224543632C376.44444444444446,412.97457001160706,329.3888888888889,385.0602511343252,282.3333333333333,361.06633941438605C235.27777777777777,337.0724276944469,188.22222222222223,316.9989231318506,141.16666666666669,330.95608257049145C94.11111111111111,344.91324200913243,47.05555555555556,392.9010654490106,23.52777777777778,416.89497716894977L0,440.8888888888889Z" title="gobierno" style="fill-opacity: 0.9; fill: rgb(119, 191, 105);"></path><path class="layer" d="M0,436.3333333333333L23.52777777777778,401.29350583460166C47.05555555555556,366.25367833587006,94.11111111111111,296.17402333840687,141.16666666666669,268.34083069657225C188.22222222222223,240.5076380547376,235.27777777777777,254.9209077685316,282.3333333333333,269.17102179326537C329.3888888888889,283.42113581799913,376.44444444444446,297.5080941536727,423.5,325.3412867955073C470.55555555555554,353.1744794373419,517.6111111111111,394.7539063853376,564.6666666666666,415.5436198593355C611.7222222222222,436.33333333333326,658.7777777777778,436.33333333333326,705.8333333333333,419.40384280994607C752.8888888888889,402.4743522865588,799.9444444444443,368.6153712397844,823.4722222222222,351.68588071639715L847,334.7563901930099L847,359.7955138236828L823.4722222222222,372.7184837419579C799.9444444444443,385.64145366023297,752.8888888888889,411.48739349678317,705.8333333333333,424.4103634150582C658.7777777777778,437.3333333333333,611.7222222222222,437.3333333333333,564.6666666666667,420.25735370543606C517.6111111111111,403.1813740775387,470.55555555555554,369.0294148217441,423.5,345.8130664695933C376.44444444444446,322.5967181174425,329.3888888888889,310.3159806689354,282.3333333333333,298.6288958625354C235.27777777777777,286.9418110561354,188.22222222222223,275.8483788918424,141.16666666666669,299.0647272439932C94.11111111111111,322.28107559614403,47.05555555555556,379.8072044647387,23.52777777777778,408.570268899036L0,437.3333333333333Z" title="central" style="fill-opacity: 0.9; fill: rgb(105, 191, 105);"></path><path class="layer" d="M0,432.77777777777777L23.52777777777778,420.9444444444444C47.05555555555556,409.1111111111111,94.11111111111111,385.4444444444444,141.16666666666669,385.4444444444444C188.22222222222223,385.4444444444444,235.27777777777777,409.1111111111111,282.3333333333333,420.9444444444444C329.3888888888889,432.7777777777777,376.44444444444446,432.7777777777777,423.5,432.7777777777777C470.55555555555554,432.7777777777777,517.6111111111111,432.7777777777777,564.6666666666666,432.7777777777777C611.7222222222222,432.7777777777777,658.7777777777778,432.7777777777777,705.8333333333333,433.3703703703703C752.8888888888889,433.96296296296293,799.9444444444443,435.1481481481481,823.4722222222222,435.7407407407407L847,436.3333333333333L847,437.3333333333333L823.4722222222222,436.74074074074076C799.9444444444443,436.14814814814815,752.8888888888889,434.96296296296293,705.8333333333333,434.3703703703703C658.7777777777778,433.7777777777777,611.7222222222222,433.7777777777777,564.6666666666667,433.77777777777777C517.6111111111111,433.7777777777777,470.55555555555554,433.7777777777777,423.5,433.77777777777777C376.44444444444446,433.7777777777777,329.3888888888889,433.7777777777777,282.3333333333333,425.48148148148147C235.27777777777777,417.18518518518516,188.22222222222223,400.5925925925926,141.16666666666669,400.5925925925926C94.11111111111111,400.5925925925926,47.05555555555556,417.18518518518516,23.52777777777778,425.48148148148147L0,433.77777777777777Z" title="avión" style="fill-opacity: 0.9; fill: rgb(105, 191, 119);"></path><path class="layer" d="M0,429.22222222222223L23.52777777777778,407.76534753932015C47.05555555555556,386.30847285641806,94.11111111111111,343.3947234906139,141.16666666666669,343.39472349061396C188.22222222222223,343.3947234906139,235.27777777777777,386.30847285641806,282.3333333333333,407.76534753932015C329.3888888888889,429.22222222222223,376.44444444444446,429.22222222222223,423.5,429.2222222222223C470.55555555555554,429.22222222222223,517.6111111111111,429.22222222222223,564.6666666666666,429.2222222222223C611.7222222222222,429.22222222222223,658.7777777777778,429.22222222222223,705.8333333333333,429.81481481481484C752.8888888888889,430.4074074074074,799.9444444444443,431.59259259259255,823.4722222222222,432.18518518518516L847,432.77777777777777L847,433.77777777777777L823.4722222222222,433.18518518518516C799.9444444444443,432.59259259259255,752.8888888888889,431.4074074074074,705.8333333333333,430.8148148148148C658.7777777777778,430.2222222222222,611.7222222222222,430.2222222222222,564.6666666666667,430.2222222222222C517.6111111111111,430.2222222222222,470.55555555555554,430.2222222222222,423.5,430.2222222222222C376.44444444444446,430.2222222222222,329.3888888888889,430.2222222222222,282.3333333333333,413.3170979198376C235.27777777777777,396.411973617453,188.22222222222223,362.60172501268386,141.16666666666669,362.60172501268386C94.11111111111111,362.60172501268386,47.05555555555556,396.411973617453,23.52777777777778,413.3170979198376L0,430.22222222222223Z" title="ley" style="fill-opacity: 0.9; fill: rgb(105, 191, 134);"></path><path class="layer" d="M0,425.6666666666667L23.52777777777778,425.6666666666667C47.05555555555556,425.66666666666663,94.11111111111111,425.66666666666663,141.16666666666669,404.9873553515529C188.22222222222223,384.30804403643907,235.27777777777777,342.9494214062115,282.3333333333333,342.9494214062115C329.3888888888889,342.9494214062115,376.44444444444446,384.30804403643907,423.5,404.9873553515529C470.55555555555554,425.66666666666663,517.6111111111111,425.66666666666663,564.6666666666666,425.6666666666667C611.7222222222222,425.66666666666663,658.7777777777778,425.66666666666663,705.8333333333333,426.25925925925924C752.8888888888889,426.85185185185185,799.9444444444443,428.03703703703707,823.4722222222222,428.6296296296297L847,429.22222222222223L847,430.22222222222223L823.4722222222222,429.62962962962956C799.9444444444443,429.037037037037,752.8888888888889,427.85185185185185,705.8333333333333,427.25925925925924C658.7777777777778,426.6666666666667,611.7222222222222,426.6666666666667,564.6666666666667,426.66666666666663C517.6111111111111,426.6666666666667,470.55555555555554,426.6666666666667,423.5,410.37909324329075C376.44444444444446,394.0915198199149,329.3888888888889,361.51637297316313,282.3333333333333,361.51637297316313C235.27777777777777,361.51637297316313,188.22222222222223,394.0915198199149,141.16666666666669,410.37909324329075C94.11111111111111,426.6666666666667,47.05555555555556,426.6666666666667,23.52777777777778,426.66666666666663L0,426.6666666666667Z" title="copa" style="fill-opacity: 0.9; fill: rgb(105, 191, 148);"></path><path class="layer" d="M0,422.1111111111111L23.52777777777778,422.1111111111111C47.05555555555556,422.1111111111111,94.11111111111111,422.1111111111111,141.16666666666669,389.75271710456894C188.22222222222223,357.3943230980268,235.27777777777777,292.67753508494246,282.3333333333333,292.67753508494246C329.3888888888889,292.67753508494246,376.44444444444446,357.3943230980268,423.5,389.75271710456894C470.55555555555554,422.1111111111111,517.6111111111111,422.1111111111111,564.6666666666666,422.1111111111111C611.7222222222222,422.1111111111111,658.7777777777778,422.1111111111111,705.8333333333333,402.78621109372284C752.8888888888889,383.46131107633454,799.9444444444443,344.811511041558,823.4722222222222,325.48661102416975L847,306.16171100678145L847,331.20083463745436L823.4722222222222,346.5192140497304C799.9444444444443,361.83759346200657,752.8888888888889,392.47435228655877,705.8333333333333,407.7927316988349C658.7777777777778,423.11111111111103,611.7222222222222,423.11111111111103,564.6666666666667,423.111111111111C517.6111111111111,423.11111111111103,470.55555555555554,423.11111111111103,423.5,396.8890295803875C376.44444444444446,370.66694804966403,329.3888888888889,318.2227849882171,282.3333333333333,318.2227849882171C235.27777777777777,318.2227849882171,188.22222222222223,370.66694804966403,141.16666666666669,396.8890295803875C94.11111111111111,423.11111111111103,47.05555555555556,423.11111111111103,23.52777777777778,423.111111111111L0,423.1111111111111Z" title="final" style="fill-opacity: 0.9; fill: rgb(105, 191, 162);"></path><path class="layer" d="M0,418.55555555555554L23.52777777777778,418.5555555555555C47.05555555555556,418.55555555555554,94.11111111111111,418.55555555555554,141.16666666666669,369.9033976996939C188.22222222222223,321.2512398438324,235.27777777777777,223.9469241321093,282.3333333333333,196.61984447995948C329.3888888888889,169.29276482780966,376.44444444444446,211.94292123523317,423.5,260.59507909109476C470.55555555555554,309.24723694695626,517.6111111111111,363.9013962512559,564.6666666666666,391.2284759034057C611.7222222222222,418.55555555555554,658.7777777777778,418.55555555555554,705.8333333333333,419.1481481481481C752.8888888888889,419.7407407407407,799.9444444444443,420.92592592592587,823.4722222222222,421.5185185185185L847,422.1111111111111L847,423.1111111111111L823.4722222222222,422.5185185185184C799.9444444444443,421.92592592592587,752.8888888888889,420.7407407407407,705.8333333333333,420.1481481481481C658.7777777777778,419.55555555555554,611.7222222222222,419.55555555555554,564.6666666666667,396.21938121470396C517.6111111111111,372.8832068738523,470.55555555555554,326.2108581921491,423.5,285.27075759772754C376.44444444444446,244.33065700330596,329.3888888888889,209.122804496166,282.3333333333333,232.4589788370176C235.27777777777777,255.79515317786922,188.22222222222223,337.6753543667124,141.16666666666669,378.61545496113393C94.11111111111111,419.55555555555554,47.05555555555556,419.55555555555554,23.52777777777778,419.55555555555554L0,419.55555555555554Z" title="ceballos" style="fill-opacity: 0.9; fill: rgb(105, 191, 176);"></path><path class="layer" d="M0,479L23.52777777777778,478.99999999999994C47.05555555555556,479,94.11111111111111,479,141.16666666666669,478.99999999999994C188.22222222222223,479,235.27777777777777,479,282.3333333333333,421.6940546720715C329.3888888888889,364.388109344143,376.44444444444446,249.77621868828604,423.5,249.776218688286C470.55555555555554,249.77621868828604,517.6111111111111,364.388109344143,564.6666666666666,383.73915479611895C611.7222222222222,403.09020024809496,658.7777777777778,327.1804004961899,705.8333333333333,283.3811481922428C752.8888888888889,239.58189588829566,799.9444444444443,227.89319103230645,823.4722222222222,222.0488386043118L847,216.20448617631723L847,242.91288471570164L823.4722222222222,250.33100130703295C799.9444444444443,257.74911789836426,752.8888888888889,272.5853510810269,705.8333333333333,312.0998702950766C658.7777777777778,351.61438950912634,611.7222222222222,415.80719475456317,564.6666666666667,397.9146149430232C517.6111111111111,380.0220351314832,470.55555555555554,280.04407026296644,423.5,280.04407026296644C376.44444444444446,280.04407026296644,329.3888888888889,380.0220351314832,282.3333333333333,430.0110175657416C235.27777777777777,480,188.22222222222223,480,141.16666666666669,480C94.11111111111111,480,47.05555555555556,480,23.52777777777778,480L0,480Z" title="cristina" style="fill-opacity: 0.9; fill: rgb(105, 191, 191);"></path><path class="layer" d="M0,411.44444444444446L23.52777777777778,411.44444444444446C47.05555555555556,411.44444444444446,94.11111111111111,411.44444444444446,141.16666666666669,411.44444444444446C188.22222222222223,411.44444444444446,235.27777777777777,411.44444444444446,282.3333333333333,403.69343103627483C329.3888888888889,395.9424176281052,376.44444444444446,380.44039081176595,423.5,380.44039081176595C470.55555555555554,380.44039081176595,517.6111111111111,395.9424176281052,564.6666666666666,403.69343103627483C611.7222222222222,411.44444444444446,658.7777777777778,411.44444444444446,705.8333333333333,412.03703703703707C752.8888888888889,412.6296296296296,799.9444444444443,413.8148148148148,823.4722222222222,414.4074074074074L847,415L847,416L823.4722222222222,415.4074074074074C799.9444444444443,414.8148148148148,752.8888888888889,413.62962962962956,705.8333333333333,413.03703703703695C658.7777777777778,412.4444444444444,611.7222222222222,412.4444444444444,564.6666666666667,408.2962962962963C517.6111111111111,404.1481481481481,470.55555555555554,395.8518518518518,423.5,395.85185185185185C376.44444444444446,395.8518518518518,329.3888888888889,404.1481481481481,282.3333333333333,408.2962962962963C235.27777777777777,412.4444444444444,188.22222222222223,412.4444444444444,141.16666666666669,412.44444444444446C94.11111111111111,412.4444444444444,47.05555555555556,412.4444444444444,23.52777777777778,412.44444444444446L0,412.44444444444446Z" title="massa" style="fill-opacity: 0.9; fill: rgb(105, 176, 191);"></path><path class="layer" d="M0,407.8888888888889L23.52777777777778,407.88888888888886C47.05555555555556,407.8888888888889,94.11111111111111,407.8888888888889,141.16666666666669,407.88888888888886C188.22222222222223,407.8888888888889,235.27777777777777,407.8888888888889,282.3333333333333,387.0897515850743C329.3888888888889,366.29061428125976,376.44444444444446,324.6923396736306,423.5,324.69233967363056C470.55555555555554,324.6923396736306,517.6111111111111,366.29061428125976,564.6666666666666,387.0897515850743C611.7222222222222,407.8888888888889,658.7777777777778,407.8888888888889,705.8333333333333,408.48148148148147C752.8888888888889,409.0740740740741,799.9444444444443,410.25925925925924,823.4722222222222,410.85185185185185L847,411.44444444444446L847,412.44444444444446L823.4722222222222,411.85185185185185C799.9444444444443,411.25925925925924,752.8888888888889,410.0740740740741,705.8333333333333,409.4814814814815C658.7777777777778,408.8888888888889,611.7222222222222,408.8888888888889,564.6666666666667,392.08065689637255C517.6111111111111,375.2724249038562,470.55555555555554,341.65596091882344,423.5,341.65596091882344C376.44444444444446,341.65596091882344,329.3888888888889,375.2724249038562,282.3333333333333,392.08065689637255C235.27777777777777,408.8888888888889,188.22222222222223,408.8888888888889,141.16666666666669,408.8888888888889C94.11111111111111,408.8888888888889,47.05555555555556,408.8888888888889,23.52777777777778,408.8888888888889L0,408.8888888888889Z" title="brasil" style="fill-opacity: 0.9; fill: rgb(105, 162, 191);"></path><path class="layer" d="M0,404.3333333333333L23.52777777777778,404.33333333333337C47.05555555555556,404.3333333333333,94.11111111111111,404.3333333333333,141.16666666666669,404.33333333333337C188.22222222222223,404.3333333333333,235.27777777777777,404.3333333333333,282.3333333333333,393.3499462980286C329.3888888888889,382.36655926272385,376.44444444444446,360.39978519211445,423.5,360.39978519211445C470.55555555555554,360.39978519211445,517.6111111111111,382.36655926272385,564.6666666666666,393.3499462980286C611.7222222222222,404.3333333333333,658.7777777777778,404.3333333333333,705.8333333333333,404.9259259259259C752.8888888888889,405.5185185185185,799.9444444444443,406.7037037037037,823.4722222222222,407.29629629629625L847,407.8888888888889L847,408.8888888888889L823.4722222222222,408.2962962962963C799.9444444444443,407.7037037037037,752.8888888888889,406.5185185185185,705.8333333333333,405.92592592592587C658.7777777777778,405.33333333333326,611.7222222222222,405.33333333333326,564.6666666666667,398.00824585108955C517.6111111111111,390.68315836884585,470.55555555555554,376.03298340435845,423.5,376.03298340435845C376.44444444444446,376.03298340435845,329.3888888888889,390.68315836884585,282.3333333333333,398.00824585108955C235.27777777777777,405.33333333333326,188.22222222222223,405.33333333333326,141.16666666666669,405.33333333333326C94.11111111111111,405.33333333333326,47.05555555555556,405.33333333333326,23.52777777777778,405.33333333333326L0,405.3333333333333Z" title="chapo guzmán" style="fill-opacity: 0.9; fill: rgb(105, 148, 191);"></path><path class="layer" d="M0,400.77777777777777L23.52777777777778,400.77777777777777C47.05555555555556,400.7777777777777,94.11111111111111,400.7777777777777,141.16666666666669,400.77777777777777C188.22222222222223,400.7777777777777,235.27777777777777,400.7777777777777,282.3333333333333,400.77777777777777C329.3888888888889,400.7777777777777,376.44444444444446,400.7777777777777,423.5,374.1872427983539C470.55555555555554,347.59670781893,517.6111111111111,294.41563786008226,564.6666666666666,294.41563786008226C611.7222222222222,294.41563786008226,658.7777777777778,347.59670781893,705.8333333333333,374.77983539094646C752.8888888888889,401.96296296296293,799.9444444444443,403.14814814814815,823.4722222222222,403.74074074074076L847,404.3333333333333L847,405.3333333333333L823.4722222222222,404.74074074074065C799.9444444444443,404.1481481481481,752.8888888888889,402.96296296296293,705.8333333333333,380.34567901234567C658.7777777777778,357.72839506172835,611.7222222222222,313.679012345679,564.6666666666667,313.679012345679C517.6111111111111,313.679012345679,470.55555555555554,357.72839506172835,423.5,379.7530864197531C376.44444444444446,401.77777777777777,329.3888888888889,401.77777777777777,282.3333333333333,401.7777777777777C235.27777777777777,401.77777777777777,188.22222222222223,401.77777777777777,141.16666666666669,401.7777777777777C94.11111111111111,401.77777777777777,47.05555555555556,401.77777777777777,23.52777777777778,401.7777777777777L0,401.77777777777777Z" title="sismo" style="fill-opacity: 0.9; fill: rgb(105, 134, 191);"></path><path class="layer" d="M0,397.22222222222223L23.52777777777778,397.2222222222222C47.05555555555556,397.2222222222222,94.11111111111111,397.2222222222222,141.16666666666669,397.2222222222222C188.22222222222223,397.2222222222222,235.27777777777777,397.2222222222222,282.3333333333333,397.2222222222222C329.3888888888889,397.2222222222222,376.44444444444446,397.2222222222222,423.5,365.2818930041152C470.55555555555554,333.3415637860082,517.6111111111111,269.4609053497942,564.6666666666666,269.4609053497942C611.7222222222222,269.4609053497942,658.7777777777778,333.3415637860082,705.8333333333333,365.8744855967078C752.8888888888889,398.4074074074074,799.9444444444443,399.59259259259255,823.4722222222222,400.18518518518516L847,400.77777777777777L847,401.77777777777777L823.4722222222222,401.18518518518516C799.9444444444443,400.5925925925926,752.8888888888889,399.4074074074074,705.8333333333333,372.0576131687243C658.7777777777778,344.7078189300411,611.7222222222222,291.1934156378601,564.6666666666667,291.1934156378601C517.6111111111111,291.1934156378601,470.55555555555554,344.7078189300411,423.5,371.4650205761317C376.44444444444446,398.2222222222222,329.3888888888889,398.2222222222222,282.3333333333333,398.22222222222223C235.27777777777777,398.2222222222222,188.22222222222223,398.2222222222222,141.16666666666669,398.22222222222223C94.11111111111111,398.2222222222222,47.05555555555556,398.2222222222222,23.52777777777778,398.22222222222223L0,398.22222222222223Z" title="dólar" style="fill-opacity: 0.9; fill: rgb(105, 119, 191);"></path><path class="layer" d="M0,393.66666666666663L23.52777777777778,393.6666666666666C47.05555555555556,393.66666666666663,94.11111111111111,393.66666666666663,141.16666666666669,393.6666666666666C188.22222222222223,393.66666666666663,235.27777777777777,393.66666666666663,282.3333333333333,393.6666666666666C329.3888888888889,393.66666666666663,376.44444444444446,393.66666666666663,423.5,356.17078189300406C470.55555555555554,318.6748971193415,517.6111111111111,243.68312757201642,564.6666666666666,243.68312757201642C611.7222222222222,243.68312757201642,658.7777777777778,318.6748971193415,705.8333333333333,356.76337448559667C752.8888888888889,394.8518518518518,799.9444444444443,396.03703703703695,823.4722222222222,396.62962962962956L847,397.22222222222223L847,398.22222222222223L823.4722222222222,397.6296296296296C799.9444444444443,397.037037037037,752.8888888888889,395.85185185185185,705.8333333333333,363.1522633744856C658.7777777777778,330.4526748971193,611.7222222222222,266.23868312757196,564.6666666666667,266.23868312757196C517.6111111111111,266.23868312757196,470.55555555555554,330.4526748971193,423.5,362.559670781893C376.44444444444446,394.66666666666663,329.3888888888889,394.66666666666663,282.3333333333333,394.66666666666663C235.27777777777777,394.66666666666663,188.22222222222223,394.66666666666663,141.16666666666669,394.66666666666663C94.11111111111111,394.66666666666663,47.05555555555556,394.66666666666663,23.52777777777778,394.66666666666663L0,394.66666666666663Z" title="liguilla" style="fill-opacity: 0.9; fill: rgb(105, 105, 191);"></path><path class="layer" d="M0,390.1111111111111L23.52777777777778,390.111111111111C47.05555555555556,390.11111111111103,94.11111111111111,390.11111111111103,141.16666666666669,390.111111111111C188.22222222222223,390.11111111111103,235.27777777777777,390.11111111111103,282.3333333333333,390.111111111111C329.3888888888889,390.11111111111103,376.44444444444446,390.11111111111103,423.5,344.8991769547324C470.55555555555554,299.68724279835385,517.6111111111111,209.2633744855967,564.6666666666666,209.2633744855967C611.7222222222222,209.2633744855967,658.7777777777778,299.68724279835385,705.8333333333333,345.491769547325C752.8888888888889,391.2962962962962,799.9444444444443,392.4814814814814,823.4722222222222,393.074074074074L847,393.66666666666663L847,394.66666666666663L823.4722222222222,394.074074074074C799.9444444444443,393.4814814814814,752.8888888888889,392.29629629629625,705.8333333333333,354.04115226337444C658.7777777777778,315.78600823045264,611.7222222222222,240.46090534979422,564.6666666666667,240.4609053497942C517.6111111111111,240.46090534979422,470.55555555555554,315.78600823045264,423.5,353.44855967078183C376.44444444444446,391.1111111111111,329.3888888888889,391.1111111111111,282.3333333333333,391.11111111111103C235.27777777777777,391.1111111111111,188.22222222222223,391.1111111111111,141.16666666666669,391.11111111111103C94.11111111111111,391.1111111111111,47.05555555555556,391.1111111111111,23.52777777777778,391.11111111111103L0,391.1111111111111Z" title="chile" style="fill-opacity: 0.9; fill: rgb(119, 105, 191);"></path><path class="layer" d="M0,415L23.52777777777778,417.3703703703703C47.05555555555556,419.7407407407407,94.11111111111111,424.48148148148147,141.16666666666669,425.074074074074C188.22222222222223,425.66666666666663,235.27777777777777,422.1111111111111,282.3333333333333,417.96296296296293C329.3888888888889,413.8148148148148,376.44444444444446,409.074074074074,423.5,395.08436213991763C470.55555555555554,381.0946502057613,517.6111111111111,357.8559670781893,564.6666666666666,354.89300411522635C611.7222222222222,351.93004115226336,658.7777777777778,369.24279835390945,705.8333333333333,378.491769547325C752.8888888888889,387.7407407407407,799.9444444444443,388.92592592592587,823.4722222222222,389.5185185185185L847,390.1111111111111L847,391.1111111111111L823.4722222222222,390.5185185185185C799.9444444444443,389.92592592592587,752.8888888888889,388.74074074074065,705.8333333333333,383.54320987654313C658.7777777777778,378.3456790123456,611.7222222222222,369.1358024691358,564.6666666666667,372.09876543209873C517.6111111111111,375.06172839506166,470.55555555555554,390.19753086419746,423.5,400.13580246913574C376.44444444444446,410.074074074074,329.3888888888889,414.8148148148148,282.3333333333333,418.96296296296293C235.27777777777777,423.1111111111111,188.22222222222223,426.66666666666663,141.16666666666669,426.074074074074C94.11111111111111,425.4814814814814,47.05555555555556,420.7407407407407,23.52777777777778,418.3703703703703L0,416Z" title="justicia" style="fill-opacity: 0.9; fill: rgb(134, 105, 191);"></path><path class="layer" d="M0,447L23.52777777777778,444.6296296296296C47.05555555555556,442.25925925925924,94.11111111111111,437.5185185185185,141.16666666666669,433.3703703703703C188.22222222222223,429.2222222222222,235.27777777777777,425.66666666666663,282.3333333333333,421.5185185185185C329.3888888888889,417.3703703703703,376.44444444444446,412.6296296296296,423.5,402.858024691358C470.55555555555554,393.0864197530864,517.6111111111111,378.28395061728395,564.6666666666666,385.9876543209876C611.7222222222222,393.69135802469134,658.7777777777778,423.90123456790116,705.8333333333333,436.6358024691358C752.8888888888889,449.3703703703703,799.9444444444443,444.62962962962956,823.4722222222222,442.25925925925924L847,439.8888888888889L847,440.8888888888889L823.4722222222222,443.25925925925924C799.9444444444443,445.6296296296296,752.8888888888889,450.3703703703703,705.8333333333333,441.4814814814814C658.7777777777778,432.59259259259255,611.7222222222222,410.074074074074,564.6666666666667,402.3703703703703C517.6111111111111,394.66666666666663,470.55555555555554,401.77777777777777,423.5,407.7037037037037C376.44444444444446,413.6296296296296,329.3888888888889,418.3703703703703,282.3333333333333,422.5185185185185C235.27777777777777,426.66666666666663,188.22222222222223,430.2222222222222,141.16666666666669,434.3703703703703C94.11111111111111,438.5185185185185,47.05555555555556,443.25925925925924,23.52777777777778,445.62962962962956L0,448Z" title="provincias" style="fill-opacity: 0.9; fill: rgb(148, 105, 191);"></path><path class="layer" d="M0,450.55555555555554L23.52777777777778,448.18518518518516C47.05555555555556,445.8148148148148,94.11111111111111,441.074074074074,141.16666666666669,436.92592592592587C188.22222222222223,432.7777777777777,235.27777777777777,429.2222222222222,282.3333333333333,425.0740740740741C329.3888888888889,420.9259259259259,376.44444444444446,416.1851851851852,423.5,396.09670781893004C470.55555555555554,376.00823045267487,517.6111111111111,340.57201646090533,564.6666666666666,348.275720164609C611.7222222222222,355.9794238683127,658.7777777777778,406.82304526748965,705.8333333333333,432.24485596707814C752.8888888888889,457.66666666666663,799.9444444444443,457.66666666666663,823.4722222222222,457.66666666666663L847,457.6666666666667L847,458.6666666666667L823.4722222222222,458.6666666666667C799.9444444444443,458.66666666666663,752.8888888888889,458.66666666666663,705.8333333333333,437.3991769547325C658.7777777777778,416.1316872427983,611.7222222222222,373.59670781893,564.6666666666667,365.8930041152263C517.6111111111111,358.1893004115226,470.55555555555554,385.31687242798347,423.5,401.2510288065844C376.44444444444446,417.18518518518516,329.3888888888889,421.9259259259259,282.3333333333333,426.07407407407413C235.27777777777777,430.22222222222223,188.22222222222223,433.77777777777777,141.16666666666669,437.92592592592587C94.11111111111111,442.074074074074,47.05555555555556,446.8148148148148,23.52777777777778,449.1851851851851L0,451.55555555555554Z" title="prometió" style="fill-opacity: 0.9; fill: rgb(162, 105, 191);"></path><path class="layer" d="M0,454.1111111111111L23.52777777777778,451.74074074074065C47.05555555555556,449.3703703703703,94.11111111111111,444.62962962962956,141.16666666666669,441.66666666666663C188.22222222222223,438.7037037037037,235.27777777777777,437.5185185185185,282.3333333333333,433.3703703703703C329.3888888888889,429.2222222222222,376.44444444444446,422.1111111111111,423.5,414.99999999999994C470.55555555555554,407.8888888888888,517.6111111111111,400.7777777777777,564.6666666666666,391.00363281942225C611.7222222222222,381.2294878610668,658.7777777777778,368.79230905546694,705.8333333333333,380.0515683147262C752.8888888888889,391.3108275739854,799.9444444444443,426.26652489810385,823.4722222222222,443.744373560163L847,461.22222222222223L847,462.22222222222223L823.4722222222222,449.1851851851852C799.9444444444443,436.14814814814815,752.8888888888889,410.0740740740741,705.8333333333333,398.81481481481484C658.7777777777778,387.55555555555554,611.7222222222222,391.1111111111111,564.6666666666667,396.4444444444444C517.6111111111111,401.7777777777777,470.55555555555554,408.88888888888886,423.5,416C376.44444444444446,423.1111111111111,329.3888888888889,430.2222222222222,282.3333333333333,434.3703703703703C235.27777777777777,438.5185185185185,188.22222222222223,439.7037037037037,141.16666666666669,442.66666666666663C94.11111111111111,445.6296296296296,47.05555555555556,450.3703703703703,23.52777777777778,452.7407407407407L0,455.1111111111111Z" title="kirchner" style="fill-opacity: 0.9; fill: rgb(176, 105, 191);"></path><path class="layer" d="M0,457.6666666666667L23.52777777777778,455.29629629629625C47.05555555555556,452.92592592592587,94.11111111111111,448.18518518518516,141.16666666666669,445.2222222222222C188.22222222222223,442.25925925925924,235.27777777777777,441.074074074074,282.3333333333333,436.92592592592587C329.3888888888889,432.7777777777777,376.44444444444446,425.66666666666663,423.5,418.55555555555554C470.55555555555554,411.4444444444444,517.6111111111111,404.33333333333326,564.6666666666666,388.6247563352826C611.7222222222222,372.91617933723194,658.7777777777778,348.6101364522417,705.8333333333333,361.64717348927877C752.8888888888889,374.6842105263158,799.9444444444443,425.0643274853801,823.4722222222222,450.2543859649122L847,475.44444444444446L847,476.44444444444446L823.4722222222222,455.8369661527556C799.9444444444443,435.2294878610668,752.8888888888889,394.0145312776892,705.8333333333333,380.97749424065216C658.7777777777778,367.9404572036151,611.7222222222222,383.08133971291863,564.6666666666667,394.207336523126C517.6111111111111,405.3333333333333,470.55555555555554,412.44444444444446,423.5,419.55555555555554C376.44444444444446,426.66666666666663,329.3888888888889,433.77777777777777,282.3333333333333,437.9259259259259C235.27777777777777,442.0740740740741,188.22222222222223,443.25925925925924,141.16666666666669,446.22222222222223C94.11111111111111,449.1851851851852,47.05555555555556,453.9259259259259,23.52777777777778,456.2962962962963L0,458.6666666666667Z" title="river" style="fill-opacity: 0.9; fill: rgb(191, 105, 191);"></path><path class="layer" d="M0,461.22222222222223L23.52777777777778,460.037037037037C47.05555555555556,458.85185185185185,94.11111111111111,456.4814814814814,141.16666666666669,455.29629629629625C188.22222222222223,454.1111111111111,235.27777777777777,454.1111111111111,282.3333333333333,451.1481481481481C329.3888888888889,448.1851851851851,376.44444444444446,442.25925925925924,423.5,433.3703703703703C470.55555555555554,424.4814814814814,517.6111111111111,412.62962962962956,564.6666666666666,374.88454722665244C611.7222222222222,337.1394648236753,658.7777777777778,273.5011518695728,705.8333333333333,236.86030679915032C752.8888888888889,200.21946172872777,799.9444444444443,190.57608454198515,823.4722222222222,185.75439594861385L847,180.93270735524254L847,212.64893062076163L823.4722222222222,218.49328304875627C799.9444444444443,224.33763547675088,752.8888888888889,236.02634033274012,705.8333333333333,267.5478148589095C658.7777777777778,299.06928938507883,611.7222222222222,350.4235335814283,564.6666666666667,382.0265816055289C517.6111111111111,413.6296296296296,470.55555555555554,425.48148148148147,423.5,434.3703703703703C376.44444444444446,443.25925925925924,329.3888888888889,449.18518518518516,282.3333333333333,452.14814814814815C235.27777777777777,455.1111111111111,188.22222222222223,455.1111111111111,141.16666666666669,456.2962962962963C94.11111111111111,457.48148148148147,47.05555555555556,459.85185185185185,23.52777777777778,461.03703703703707L0,462.22222222222223Z" title="ganó" style="fill-opacity: 0.9; fill: rgb(191, 105, 176);"></path><path class="layer" d="M0,464.77777777777777L23.52777777777778,463.59259259259255C47.05555555555556,462.4074074074074,94.11111111111111,460.037037037037,141.16666666666669,458.8518518518518C188.22222222222223,457.66666666666663,235.27777777777777,457.66666666666663,282.3333333333333,457.074074074074C329.3888888888889,456.4814814814814,376.44444444444446,455.29629629629625,423.5,452.33333333333326C470.55555555555554,449.3703703703703,517.6111111111111,444.62962962962956,564.6666666666666,379.3190678716994C611.7222222222222,314.0085061137692,658.7777777777778,188.12812333864957,705.8333333333333,188.72071593124218C752.8888888888889,189.31330852383476,799.9444444444443,316.3788764841396,823.4722222222222,379.911660464292L847,443.44444444444446L847,444.44444444444446L823.4722222222222,388.7549175970229C799.9444444444443,333.06539074960125,752.8888888888889,221.68633705475807,705.8333333333333,221.0937444621655C658.7777777777778,220.50115186957288,611.7222222222222,330.69502037923087,564.6666666666667,388.1623250044303C517.6111111111111,445.6296296296296,470.55555555555554,450.3703703703703,423.5,453.3333333333333C376.44444444444446,456.2962962962963,329.3888888888889,457.48148148148147,282.3333333333333,458.0740740740741C235.27777777777777,458.66666666666663,188.22222222222223,458.66666666666663,141.16666666666669,459.85185185185185C94.11111111111111,461.037037037037,47.05555555555556,463.4074074074074,23.52777777777778,464.59259259259255L0,465.77777777777777Z" title="rosario central" style="fill-opacity: 0.9; fill: rgb(191, 105, 162);"></path><path class="layer" d="M0,468.3333333333333L23.52777777777778,467.1481481481481C47.05555555555556,465.96296296296293,94.11111111111111,463.59259259259255,141.16666666666669,462.4074074074074C188.22222222222223,461.2222222222222,235.27777777777777,461.2222222222222,282.3333333333333,460.6296296296296C329.3888888888889,460.037037037037,376.44444444444446,458.85185185185185,423.5,457.66666666666663C470.55555555555554,456.4814814814814,517.6111111111111,455.29629629629625,564.6666666666666,456.4814814814814C611.7222222222222,457.66666666666663,658.7777777777778,461.2222222222222,705.8333333333333,446.09554860024343C752.8888888888889,430.96887497826464,799.9444444444443,397.15997217875156,823.4722222222222,380.255520778995L847,363.3510693792384L847,387.55555555555554L823.4722222222222,400.59259259259255C799.9444444444443,413.62962962962956,752.8888888888889,439.70370370370364,705.8333333333333,450.96296296296293C658.7777777777778,462.2222222222222,611.7222222222222,458.66666666666663,564.6666666666667,457.48148148148147C517.6111111111111,456.2962962962963,470.55555555555554,457.48148148148147,423.5,458.66666666666663C376.44444444444446,459.85185185185185,329.3888888888889,461.03703703703707,282.3333333333333,461.6296296296297C235.27777777777777,462.22222222222223,188.22222222222223,462.22222222222223,141.16666666666669,463.40740740740745C94.11111111111111,464.5925925925926,47.05555555555556,466.96296296296293,23.52777777777778,468.1481481481481L0,469.3333333333333Z" title="diciembre" style="fill-opacity: 0.9; fill: rgb(191, 105, 148);"></path><path class="layer" d="M0,471.8888888888889L23.52777777777778,471.8888888888889C47.05555555555556,471.8888888888889,94.11111111111111,471.8888888888889,141.16666666666669,471.8888888888889C188.22222222222223,471.8888888888889,235.27777777777777,471.8888888888889,282.3333333333333,470.7037037037037C329.3888888888889,469.51851851851853,376.44444444444446,467.14814814814815,423.5,464.77777777777777C470.55555555555554,462.4074074074074,517.6111111111111,460.037037037037,564.6666666666666,461.2222222222222C611.7222222222222,462.4074074074074,658.7777777777778,467.14814814814815,705.8333333333333,436.9924360980699C752.8888888888889,406.83672404799165,799.9444444444443,341.7845592070944,823.4722222222222,309.25847678664576L847,276.7323943661972L847,302.60615545122585L823.4722222222222,330.98661102416963C799.9444444444443,359.36706659711353,752.8888888888889,416.12797774300117,705.8333333333333,442.1380629455747C658.7777777777778,468.14814814814815,611.7222222222222,463.4074074074074,564.6666666666667,462.22222222222223C517.6111111111111,461.037037037037,470.55555555555554,463.4074074074074,423.5,465.7777777777777C376.44444444444446,468.1481481481481,329.3888888888889,470.5185185185185,282.3333333333333,471.7037037037037C235.27777777777777,472.88888888888886,188.22222222222223,472.88888888888886,141.16666666666669,472.8888888888888C94.11111111111111,472.88888888888886,47.05555555555556,472.88888888888886,23.52777777777778,472.8888888888888L0,472.8888888888889Z" title="españa" style="fill-opacity: 0.9; fill: rgb(191, 105, 134);"></path><path class="layer" d="M0,475.44444444444446L23.52777777777778,460.6296296296296C47.05555555555556,445.8148148148148,94.11111111111111,416.18518518518516,141.16666666666669,401.3703703703704C188.22222222222223,386.55555555555554,235.27777777777777,386.55555555555554,282.3333333333333,401.3703703703703C329.3888888888889,416.18518518518516,376.44444444444446,445.8148148148148,423.5,446.4074074074074C470.55555555555554,446.99999999999994,517.6111111111111,418.5555555555555,564.6666666666666,418.55555555555554C611.7222222222222,418.5555555555555,658.7777777777778,446.99999999999994,705.8333333333333,423.05955486002426C752.8888888888889,399.11910972004864,799.9444444444443,322.79377499565294,823.4722222222222,284.63110763345503L847,246.46844027125718L847,273.17683881064164L823.4722222222222,307.0547730829421C799.9444444444443,340.93270735524254,752.8888888888889,408.6885758998435,705.8333333333333,428.3442879499217C658.7777777777778,448,611.7222222222222,419.55555555555554,564.6666666666667,419.5555555555555C517.6111111111111,419.55555555555554,470.55555555555554,448,423.5,447.4074074074074C376.44444444444446,446.8148148148148,329.3888888888889,417.1851851851851,282.3333333333333,402.3703703703703C235.27777777777777,387.5555555555555,188.22222222222223,387.5555555555555,141.16666666666669,402.3703703703703C94.11111111111111,417.1851851851851,47.05555555555556,446.8148148148148,23.52777777777778,461.62962962962956L0,476.44444444444446Z" title="tucumán" style="fill-opacity: 0.9; fill: rgb(191, 105, 119);"></path><defs><path id="path-beba" d="M0,379.01781564678544L23.52777777777778,395.2555871130619C47.05555555555556,411.4933585793384,94.11111111111111,443.96890151189143,141.16666666666669,460.20667297816794C188.22222222222223,476.44444444444446,235.27777777777777,476.44444444444446,282.3333333333333,477.037037037037C329.3888888888889,477.6296296296296,376.44444444444446,478.8148148148148,423.5,478.8148148148148C470.55555555555554,478.8148148148148,517.6111111111111,477.6296296296296,564.6666666666666,477.6296296296296C611.7222222222222,477.6296296296296,658.7777777777778,478.8148148148148,705.8333333333333,479.4074074074074C752.8888888888889,480,799.9444444444443,480,823.4722222222222,480L847,480"></path><path id="path-video" d="M0,334.7262242878045L23.52777777777778,348.27185357317035C47.05555555555556,361.8174828585363,94.11111111111111,388.90874142926816,141.16666666666669,402.454370714634C188.22222222222223,416,235.27777777777777,416,282.3333333333333,385.9839933478848C329.3888888888889,355.96798669576964,376.44444444444446,295.9359733915393,423.5,295.9359733915393C470.55555555555554,295.9359733915393,517.6111111111111,355.96798669576964,564.6666666666666,385.9839933478848C611.7222222222222,416,658.7777777777778,416,705.8333333333333,416.59259259259255C752.8888888888889,417.18518518518516,799.9444444444443,418.3703703703703,823.4722222222222,418.96296296296293L847,419.55555555555554"></path><path id="path-boca" d="M0,280.1067217488596L23.52777777777778,258.98594138635303C47.05555555555556,237.8651610238465,94.11111111111111,195.62360029883342,141.16666666666669,182.4287882624305C188.22222222222223,169.23397622602758,235.27777777777777,185.08591287823484,282.3333333333333,238.33705443074626C329.3888888888889,291.5881959832577,376.44444444444446,382.23854243607326,423.5,427.56371566248106C470.55555555555554,472.88888888888886,517.6111111111111,472.88888888888886,564.6666666666666,424.9144072301966C611.7222222222222,376.9399255715045,658.7777777777778,280.99096225412006,705.8333333333333,273.28725855041637C752.8888888888889,265.5835548467127,799.9444444444443,346.1251107566897,823.4722222222222,386.39588871167814L847,426.6666666666667"></path><path id="path-mujer" d="M0,247.21989844220673L23.52777777777778,284.23880425739446C47.05555555555556,321.2577100725822,94.11111111111111,395.2955217029578,141.16666666666669,432.3144275181455C188.22222222222223,469.33333333333326,235.27777777777777,469.33333333333326,282.3333333333333,469.3333333333333C329.3888888888889,469.33333333333326,376.44444444444446,469.33333333333326,423.5,469.3333333333333C470.55555555555554,469.33333333333326,517.6111111111111,469.33333333333326,564.6666666666666,469.3333333333333C611.7222222222222,469.33333333333326,658.7777777777778,469.33333333333326,705.8333333333333,469.92592592592587C752.8888888888889,470.5185185185185,799.9444444444443,471.7037037037037,823.4722222222222,472.2962962962963L847,472.8888888888889"></path><path id="path-campaña" d="M0,210.61502711076685L23.52777777777778,253.1421522219353C47.05555555555556,295.66927733310376,94.11111111111111,380.72352755544074,141.16666666666669,423.25065266660926C188.22222222222223,465.7777777777777,235.27777777777777,465.7777777777777,282.3333333333333,421.5511901049786C329.3888888888889,377.3246024321796,376.44444444444446,288.87142708658143,423.5,288.87142708658143C470.55555555555554,288.87142708658143,517.6111111111111,377.3246024321796,564.6666666666666,394.89870029459405C611.7222222222222,412.47279815700864,658.7777777777778,359.16781853623957,705.8333333333333,359.7604111288322C752.8888888888889,360.3530037214248,799.9444444444443,414.843168527379,823.4722222222222,442.0882509303562L847,469.3333333333333"></path><path id="path-matías_alé" d="M0,160.6527239865737L23.52777777777778,167.64388591981088C47.05555555555556,174.63504785304812,94.11111111111111,188.61737171952254,141.16666666666669,223.9003750394768C188.22222222222223,259.1833783594311,235.27777777777777,315.7670611328653,282.3333333333333,359.03748223890284C329.3888888888889,402.3079033449404,376.44444444444446,432.2650627835813,423.5,447.2436425029018C470.55555555555554,462.22222222222223,517.6111111111111,462.22222222222223,564.6666666666666,462.2222222222223C611.7222222222222,462.22222222222223,658.7777777777778,462.22222222222223,705.8333333333333,462.81481481481484C752.8888888888889,463.4074074074074,799.9444444444443,464.59259259259255,823.4722222222222,465.18518518518516L847,465.77777777777777"></path><path id="path-scioli" d="M0,97.05757810482831L23.52777777777778,97.04975750237467C47.05555555555556,97.04193689992104,94.11111111111111,97.02629569501377,141.16666666666669,86.1118947295279C188.22222222222223,75.19749376404202,235.27777777777777,53.38433303797755,282.3333333333333,43.70170290858499C329.3888888888889,34.01907277919244,376.44444444444446,36.46697324647181,423.5,36.60634576238753C470.55555555555554,36.745718278303244,517.6111111111111,34.57656284285532,564.6666666666666,50.93108371335274C611.7222222222222,67.28560458385016,658.7777777777778,102.16380176029294,705.8333333333333,102.813688736471C752.8888888888889,103.46357571264906,799.9444444444443,69.88515248856241,823.4722222222222,53.09594087651909L847,36.30672926447576"></path><path id="path-macri" d="M0,31.534555469489646L23.52777777777778,31.808983946543243C47.05555555555556,32.08341242359684,94.11111111111111,32.63226937770404,141.16666666666669,43.191922886473456C188.22222222222223,53.75157639524287,235.27777777777777,74.3220264586745,282.3333333333333,86.54134502503358C329.3888888888889,98.76066359139264,376.44444444444446,102.62885066067916,423.5,102.117964655966C470.55555555555554,101.60707865125283,517.6111111111111,96.71711957254,564.6666666666666,83.8586287015436C611.7222222222222,71.00013783054717,658.7777777777778,50.173115167267184,705.8333333333333,52.362589461592805C752.8888888888889,54.55206375591844,799.9444444444443,79.75803500784968,823.4722222222222,92.36102063381531L847,104.96400625978094"></path><path id="path-miedo" d="M0,357.42284189689303L23.52777777777778,373.11162750667006C47.05555555555556,388.8004131164472,94.11111111111111,420.1779843360014,141.16666666666669,435.8667699457784C188.22222222222223,451.55555555555554,235.27777777777777,451.55555555555554,282.3333333333333,451.5555555555555C329.3888888888889,451.55555555555554,376.44444444444446,451.55555555555554,423.5,451.5555555555555C470.55555555555554,451.55555555555554,517.6111111111111,451.55555555555554,564.6666666666666,451.5555555555555C611.7222222222222,451.55555555555554,658.7777777777778,451.55555555555554,705.8333333333333,452.1481481481481C752.8888888888889,452.7407407407407,799.9444444444443,453.92592592592587,823.4722222222222,454.5185185185185L847,455.1111111111111"></path><path id="path-salud" d="M0,309.137791548326L23.52777777777778,332.28149295693834C47.05555555555556,355.4251943655506,94.11111111111111,401.7125971827753,141.16666666666669,424.8562985913876C188.22222222222223,447.99999999999994,235.27777777777777,447.99999999999994,282.3333333333333,447.9999999999999C329.3888888888889,447.99999999999994,376.44444444444446,447.99999999999994,423.5,447.9999999999999C470.55555555555554,447.99999999999994,517.6111111111111,447.99999999999994,564.6666666666666,447.9999999999999C611.7222222222222,447.99999999999994,658.7777777777778,447.99999999999994,705.8333333333333,448.5925925925925C752.8888888888889,449.1851851851851,799.9444444444443,450.3703703703703,823.4722222222222,450.96296296296293L847,451.55555555555554"></path><path id="path-corte" d="M0,444.44444444444446L23.52777777777778,427.9178082191781C47.05555555555556,411.3911719939117,94.11111111111111,378.33789954337897,141.16666666666669,378.337899543379C188.22222222222223,378.33789954337897,235.27777777777777,411.3911719939117,282.3333333333333,427.9178082191781C329.3888888888889,444.44444444444446,376.44444444444446,444.44444444444446,423.5,444.44444444444446C470.55555555555554,444.44444444444446,517.6111111111111,444.44444444444446,564.6666666666666,444.44444444444446C611.7222222222222,444.44444444444446,658.7777777777778,444.44444444444446,705.8333333333333,445.03703703703707C752.8888888888889,445.6296296296296,799.9444444444443,446.8148148148148,823.4722222222222,447.4074074074074L847,448"></path><path id="path-gobierno" d="M0,440.8888888888889L23.52777777777778,414.51040081177064C47.05555555555556,388.1319127346525,94.11111111111111,335.37493658041603,141.16666666666669,319.3636812605187C188.22222222222223,303.3524259406214,235.27777777777777,324.08689145506327,282.3333333333333,350.4653795321815C329.3888888888889,376.8438676092997,376.44444444444446,408.8663782490943,423.5,399.2932714290739C470.55555555555554,389.7201646090535,517.6111111111111,338.55144032921805,564.6666666666666,338.55144032921805C611.7222222222222,338.55144032921805,658.7777777777778,389.7201646090535,705.8333333333333,368.04735408334784C752.8888888888889,346.37454355764214,799.9444444444443,251.86019822639543,823.4722222222222,204.60302556077207L847,157.3458528951487"></path><path id="path-central" d="M0,437.3333333333333L23.52777777777778,405.3485540334855C47.05555555555556,373.3637747336377,94.11111111111111,309.3942161339421,141.16666666666669,283.78611230361605C188.22222222222223,258.17800847329,235.27777777777777,270.9313594123335,282.3333333333333,283.89995882790043C329.3888888888889,296.8685582434673,376.44444444444446,310.0524061355576,423.5,335.66050996588365C470.55555555555554,361.2686137962097,517.6111111111111,399.3009735647715,564.6666666666666,418.3171534490524C611.7222222222222,437.3333333333333,658.7777777777778,437.3333333333333,705.8333333333333,422.32376977916886C752.8888888888889,407.31420622500434,799.9444444444443,377.29507911667537,823.4722222222222,362.2855155625109L847,347.2759520083464"></path><path id="path-avión" d="M0,433.77777777777777L23.52777777777778,423.6296296296296C47.05555555555556,413.48148148148147,94.11111111111111,393.1851851851852,141.16666666666669,393.1851851851852C188.22222222222223,393.1851851851852,235.27777777777777,413.48148148148147,282.3333333333333,423.6296296296296C329.3888888888889,433.7777777777777,376.44444444444446,433.7777777777777,423.5,433.77777777777777C470.55555555555554,433.7777777777777,517.6111111111111,433.7777777777777,564.6666666666666,433.77777777777777C611.7222222222222,433.7777777777777,658.7777777777778,433.7777777777777,705.8333333333333,434.3703703703703C752.8888888888889,434.96296296296293,799.9444444444443,436.14814814814815,823.4722222222222,436.74074074074076L847,437.3333333333333"></path><path id="path-ley" d="M0,430.22222222222223L23.52777777777778,410.9578893962455C47.05555555555556,391.6935565702688,94.11111111111111,353.1648909183155,141.16666666666669,353.1648909183155C188.22222222222223,353.1648909183155,235.27777777777777,391.6935565702688,282.3333333333333,410.9578893962455C329.3888888888889,430.2222222222222,376.44444444444446,430.2222222222222,423.5,430.2222222222222C470.55555555555554,430.2222222222222,517.6111111111111,430.2222222222222,564.6666666666666,430.2222222222222C611.7222222222222,430.2222222222222,658.7777777777778,430.2222222222222,705.8333333333333,430.8148148148148C752.8888888888889,431.4074074074074,799.9444444444443,432.59259259259255,823.4722222222222,433.18518518518516L847,433.77777777777777"></path><path id="path-copa" d="M0,426.6666666666667L23.52777777777778,426.66666666666663C47.05555555555556,426.6666666666667,94.11111111111111,426.6666666666667,141.16666666666669,408.0998909640885C188.22222222222223,389.5331152615103,235.27777777777777,352.399563856354,282.3333333333333,352.399563856354C329.3888888888889,352.399563856354,376.44444444444446,389.5331152615103,423.5,408.09989096408856C470.55555555555554,426.6666666666667,517.6111111111111,426.6666666666667,564.6666666666666,426.66666666666663C611.7222222222222,426.6666666666667,658.7777777777778,426.6666666666667,705.8333333333333,427.25925925925924C752.8888888888889,427.85185185185185,799.9444444444443,429.037037037037,823.4722222222222,429.62962962962956L847,430.22222222222223"></path><path id="path-final" d="M0,423.1111111111111L23.52777777777778,423.111111111111C47.05555555555556,423.11111111111103,94.11111111111111,423.11111111111103,141.16666666666669,393.7375400091448C188.22222222222223,364.36396890717873,235.27777777777777,305.61682670324643,282.3333333333333,305.61682670324643C329.3888888888889,305.61682670324643,376.44444444444446,364.36396890717873,423.5,393.7375400091448C470.55555555555554,423.11111111111103,517.6111111111111,423.11111111111103,564.6666666666666,423.111111111111C611.7222222222222,423.11111111111103,658.7777777777778,423.11111111111103,705.8333333333333,405.70613806294546C752.8888888888889,388.30116501477994,799.9444444444443,353.4912189184489,823.4722222222222,336.0862458702834L847,318.6812728221179"></path><path id="path-ceballos" d="M0,419.55555555555554L23.52777777777778,419.55555555555554C47.05555555555556,419.55555555555554,94.11111111111111,419.55555555555554,141.16666666666669,374.6760929970806C188.22222222222223,329.79663043860575,235.27777777777777,240.03770532165592,282.3333333333333,214.6227449918219C329.3888888888889,189.20778466198783,376.44444444444446,228.13678911926957,423.5,273.01625167774444C470.55555555555554,317.89571423621936,517.6111111111111,368.7256348958874,564.6666666666666,394.1405952257215C611.7222222222222,419.55555555555554,658.7777777777778,419.55555555555554,705.8333333333333,420.14814814814815C752.8888888888889,420.7407407407407,799.9444444444443,421.92592592592587,823.4722222222222,422.5185185185185L847,423.1111111111111"></path><path id="path-cristina" d="M0,480L23.52777777777778,480C47.05555555555556,480,94.11111111111111,480,141.16666666666669,480C188.22222222222223,480,235.27777777777777,480,282.3333333333333,426.2692027855732C329.3888888888889,372.5384055711464,376.44444444444446,265.0768111422929,423.5,265.0768111422929C470.55555555555554,265.0768111422929,517.6111111111111,372.5384055711464,564.6666666666666,391.1602182029044C611.7222222222222,409.7820308346624,658.7777777777778,339.5640616693248,705.8333333333333,297.82384257699306C752.8888888888889,256.0836234846613,799.9444444444443,242.82115446533535,823.4722222222222,236.1899199556724L847,229.55868544600943"></path><path id="path-massa" d="M0,412.44444444444446L23.52777777777778,412.44444444444446C47.05555555555556,412.4444444444444,94.11111111111111,412.4444444444444,141.16666666666669,412.44444444444446C188.22222222222223,412.4444444444444,235.27777777777777,412.4444444444444,282.3333333333333,406.4115303329522C329.3888888888889,400.37861622146,376.44444444444446,388.3127879984755,423.5,388.3127879984755C470.55555555555554,388.3127879984755,517.6111111111111,400.37861622146,564.6666666666666,406.4115303329522C611.7222222222222,412.4444444444444,658.7777777777778,412.4444444444444,705.8333333333333,413.037037037037C752.8888888888889,413.62962962962956,799.9444444444443,414.8148148148148,823.4722222222222,415.40740740740733L847,416"></path><path id="path-brasil" d="M0,408.8888888888889L23.52777777777778,408.8888888888889C47.05555555555556,408.8888888888889,94.11111111111111,408.8888888888889,141.16666666666669,408.8888888888889C188.22222222222223,408.8888888888889,235.27777777777777,408.8888888888889,282.3333333333333,390.0018709073901C329.3888888888889,371.1148529258913,376.44444444444446,333.34081696289365,423.5,333.34081696289365C470.55555555555554,333.34081696289365,517.6111111111111,371.1148529258913,564.6666666666666,390.0018709073901C611.7222222222222,408.8888888888889,658.7777777777778,408.8888888888889,705.8333333333333,409.4814814814815C752.8888888888889,410.0740740740741,799.9444444444443,411.25925925925924,823.4722222222222,411.85185185185185L847,412.44444444444446"></path><path id="path-chapo_guzmán" d="M0,405.3333333333333L23.52777777777778,405.33333333333326C47.05555555555556,405.33333333333326,94.11111111111111,405.33333333333326,141.16666666666669,405.33333333333326C188.22222222222223,405.33333333333326,235.27777777777777,405.33333333333326,282.3333333333333,396.0957627412257C329.3888888888889,386.85819214911817,376.44444444444446,368.38305096490313,423.5,368.38305096490313C470.55555555555554,368.38305096490313,517.6111111111111,386.85819214911817,564.6666666666666,396.0957627412257C611.7222222222222,405.33333333333326,658.7777777777778,405.33333333333326,705.8333333333333,405.92592592592587C752.8888888888889,406.5185185185185,799.9444444444443,407.7037037037037,823.4722222222222,408.2962962962963L847,408.8888888888889"></path><path id="path-sismo" d="M0,401.77777777777777L23.52777777777778,401.7777777777777C47.05555555555556,401.77777777777777,94.11111111111111,401.77777777777777,141.16666666666669,401.7777777777777C188.22222222222223,401.77777777777777,235.27777777777777,401.77777777777777,282.3333333333333,401.7777777777777C329.3888888888889,401.77777777777777,376.44444444444446,401.77777777777777,423.5,377.3868312757201C470.55555555555554,352.9958847736625,517.6111111111111,304.2139917695473,564.6666666666666,304.2139917695473C611.7222222222222,304.2139917695473,658.7777777777778,352.9958847736625,705.8333333333333,377.9794238683127C752.8888888888889,402.96296296296293,799.9444444444443,404.1481481481481,823.4722222222222,404.74074074074065L847,405.3333333333333"></path><path id="path-dólar" d="M0,398.22222222222223L23.52777777777778,398.22222222222223C47.05555555555556,398.2222222222222,94.11111111111111,398.2222222222222,141.16666666666669,398.22222222222223C188.22222222222223,398.2222222222222,235.27777777777777,398.2222222222222,282.3333333333333,398.22222222222223C329.3888888888889,398.2222222222222,376.44444444444446,398.2222222222222,423.5,368.7901234567901C470.55555555555554,339.35802469135797,517.6111111111111,280.49382716049377,564.6666666666666,280.4938271604938C611.7222222222222,280.49382716049377,658.7777777777778,339.35802469135797,705.8333333333333,369.3827160493827C752.8888888888889,399.4074074074074,799.9444444444443,400.5925925925926,823.4722222222222,401.1851851851852L847,401.77777777777777"></path><path id="path-liguilla" d="M0,394.66666666666663L23.52777777777778,394.66666666666663C47.05555555555556,394.66666666666663,94.11111111111111,394.66666666666663,141.16666666666669,394.66666666666663C188.22222222222223,394.66666666666663,235.27777777777777,394.66666666666663,282.3333333333333,394.66666666666663C329.3888888888889,394.66666666666663,376.44444444444446,394.66666666666663,423.5,359.7818930041152C470.55555555555554,324.8971193415638,517.6111111111111,255.12757201646087,564.6666666666666,255.12757201646087C611.7222222222222,255.12757201646087,658.7777777777778,324.8971193415638,705.8333333333333,360.3744855967078C752.8888888888889,395.85185185185185,799.9444444444443,397.037037037037,823.4722222222222,397.6296296296296L847,398.22222222222223"></path><path id="path-chile" d="M0,391.1111111111111L23.52777777777778,391.11111111111103C47.05555555555556,391.1111111111111,94.11111111111111,391.1111111111111,141.16666666666669,391.11111111111103C188.22222222222223,391.1111111111111,235.27777777777777,391.1111111111111,282.3333333333333,391.11111111111103C329.3888888888889,391.1111111111111,376.44444444444446,391.1111111111111,423.5,349.5905349794238C470.55555555555554,308.0699588477366,517.6111111111111,225.02880658436214,564.6666666666666,225.02880658436214C611.7222222222222,225.02880658436214,658.7777777777778,308.0699588477366,705.8333333333333,350.1831275720164C752.8888888888889,392.29629629629625,799.9444444444443,393.4814814814814,823.4722222222222,394.074074074074L847,394.66666666666663"></path><path id="path-justicia" d="M0,416L23.52777777777778,418.3703703703703C47.05555555555556,420.7407407407407,94.11111111111111,425.4814814814814,141.16666666666669,426.074074074074C188.22222222222223,426.66666666666663,235.27777777777777,423.1111111111111,282.3333333333333,418.96296296296293C329.3888888888889,414.8148148148148,376.44444444444446,410.074074074074,423.5,398.02674897119334C470.55555555555554,385.97942386831267,517.6111111111111,366.62551440329213,564.6666666666666,363.66255144032914C611.7222222222222,360.6995884773662,658.7777777777778,374.1275720164608,705.8333333333333,381.43415637860073C752.8888888888889,388.74074074074065,799.9444444444443,389.92592592592587,823.4722222222222,390.5185185185184L847,391.1111111111111"></path><path id="path-provincias" d="M0,448L23.52777777777778,445.62962962962956C47.05555555555556,443.25925925925924,94.11111111111111,438.5185185185185,141.16666666666669,434.3703703703703C188.22222222222223,430.2222222222222,235.27777777777777,426.66666666666663,282.3333333333333,422.5185185185185C329.3888888888889,418.3703703703703,376.44444444444446,413.6296296296296,423.5,405.6975308641975C470.55555555555554,397.7654320987654,517.6111111111111,386.6419753086419,564.6666666666666,394.3456790123456C611.7222222222222,402.0493827160493,658.7777777777778,428.5802469135802,705.8333333333333,439.4753086419753C752.8888888888889,450.3703703703703,799.9444444444443,445.6296296296296,823.4722222222222,443.25925925925924L847,440.8888888888889"></path><path id="path-prometió" d="M0,451.55555555555554L23.52777777777778,449.1851851851851C47.05555555555556,446.8148148148148,94.11111111111111,442.074074074074,141.16666666666669,437.92592592592587C188.22222222222223,433.77777777777777,235.27777777777777,430.22222222222223,282.3333333333333,426.07407407407413C329.3888888888889,421.9259259259259,376.44444444444446,417.18518518518516,423.5,399.0905349794238C470.55555555555554,380.9958847736625,517.6111111111111,349.5473251028806,564.6666666666666,357.2510288065844C611.7222222222222,364.95473251028807,658.7777777777778,411.81069958847735,705.8333333333333,435.238683127572C752.8888888888889,458.66666666666663,799.9444444444443,458.66666666666663,823.4722222222222,458.6666666666667L847,458.6666666666667"></path><path id="path-kirchner" d="M0,455.1111111111111L23.52777777777778,452.7407407407407C47.05555555555556,450.3703703703703,94.11111111111111,445.6296296296296,141.16666666666669,442.66666666666663C188.22222222222223,439.7037037037037,235.27777777777777,438.5185185185185,282.3333333333333,434.3703703703703C329.3888888888889,430.2222222222222,376.44444444444446,423.1111111111111,423.5,415.99999999999994C470.55555555555554,408.88888888888886,517.6111111111111,401.7777777777777,564.6666666666666,394.1407052986C611.7222222222222,386.50363281942225,658.7777777777778,378.3405989721779,705.8333333333333,389.5998582314372C752.8888888888889,400.85911749069646,799.9444444444443,431.5406698564593,823.4722222222222,446.88144603934074L847,462.22222222222223"></path><path id="path-river" d="M0,458.6666666666667L23.52777777777778,456.2962962962963C47.05555555555556,453.9259259259259,94.11111111111111,449.1851851851852,141.16666666666669,446.22222222222223C188.22222222222223,443.25925925925924,235.27777777777777,442.0740740740741,282.3333333333333,437.9259259259259C329.3888888888889,433.77777777777777,376.44444444444446,426.66666666666663,423.5,419.55555555555554C470.55555555555554,412.44444444444446,517.6111111111111,405.3333333333333,564.6666666666666,391.832713095871C611.7222222222222,378.3320928584086,658.7777777777778,358.44196349459503,705.8333333333333,371.4790005316321C752.8888888888889,384.51603756866916,799.9444444444443,430.48024100655675,823.4722222222222,453.4623427255006L847,476.44444444444446"></path><path id="path-ganó" d="M0,462.22222222222223L23.52777777777778,461.03703703703707C47.05555555555556,459.85185185185185,94.11111111111111,457.48148148148147,141.16666666666669,456.2962962962963C188.22222222222223,455.1111111111111,235.27777777777777,455.1111111111111,282.3333333333333,452.14814814814815C329.3888888888889,449.18518518518516,376.44444444444446,443.25925925925924,423.5,434.3703703703703C470.55555555555554,425.48148148148147,517.6111111111111,413.6296296296296,564.6666666666666,378.8722310827574C611.7222222222222,344.11483253588517,658.7777777777778,286.4518872939925,705.8333333333333,252.28739416236323C752.8888888888889,218.12290103073394,799.9444444444443,207.456860009368,823.4722222222222,202.12383949868504L847,196.7908189880021"></path><path id="path-rosario_central" d="M0,465.77777777777777L23.52777777777778,464.59259259259255C47.05555555555556,463.4074074074074,94.11111111111111,461.037037037037,141.16666666666669,459.85185185185185C188.22222222222223,458.66666666666663,235.27777777777777,458.66666666666663,282.3333333333333,458.0740740740741C329.3888888888889,457.48148148148147,376.44444444444446,456.2962962962963,423.5,453.3333333333333C470.55555555555554,450.3703703703703,517.6111111111111,445.6296296296296,564.6666666666666,384.15736310473153C611.7222222222222,322.6850965798334,658.7777777777778,204.4813042707779,705.8333333333333,205.0738968633705C752.8888888888889,205.66648945596307,799.9444444444443,325.05546695020377,823.4722222222222,384.74995569732414L847,444.44444444444446"></path><path id="path-diciembre" d="M0,469.3333333333333L23.52777777777778,468.14814814814815C47.05555555555556,466.96296296296293,94.11111111111111,464.5925925925926,141.16666666666669,463.4074074074074C188.22222222222223,462.22222222222223,235.27777777777777,462.22222222222223,282.3333333333333,461.6296296296297C329.3888888888889,461.03703703703707,376.44444444444446,459.85185185185185,423.5,458.66666666666663C470.55555555555554,457.48148148148147,517.6111111111111,456.2962962962963,564.6666666666666,457.48148148148147C611.7222222222222,458.66666666666663,658.7777777777778,462.2222222222222,705.8333333333333,448.9459224482698C752.8888888888889,435.66962267431745,799.9444444444443,405.5614675708572,823.4722222222222,390.5073900191271L847,375.453312467397"></path><path id="path-españa" d="M0,472.8888888888889L23.52777777777778,472.8888888888888C47.05555555555556,472.88888888888886,94.11111111111111,472.88888888888886,141.16666666666669,472.8888888888888C188.22222222222223,472.88888888888886,235.27777777777777,472.88888888888886,282.3333333333333,471.70370370370364C329.3888888888889,470.5185185185185,376.44444444444446,468.1481481481481,423.5,465.7777777777777C470.55555555555554,463.4074074074074,517.6111111111111,461.037037037037,564.6666666666666,462.2222222222222C611.7222222222222,463.4074074074074,658.7777777777778,468.14814814814815,705.8333333333333,439.9819161884889C752.8888888888889,411.8156842288297,799.9444444444443,350.7424795687706,823.4722222222222,320.20587723874104L847,289.6692749087115"></path><path id="path-tucumán" d="M0,476.44444444444446L23.52777777777778,461.62962962962956C47.05555555555556,446.8148148148148,94.11111111111111,417.1851851851851,141.16666666666669,402.3703703703703C188.22222222222223,387.5555555555555,235.27777777777777,387.5555555555555,282.3333333333333,402.3703703703703C329.3888888888889,417.1851851851851,376.44444444444446,446.8148148148148,423.5,447.40740740740733C470.55555555555554,448,517.6111111111111,419.55555555555554,564.6666666666666,419.5555555555555C611.7222222222222,419.55555555555554,658.7777777777778,448,705.8333333333333,426.1185880716397C752.8888888888889,404.2371761432794,799.9444444444443,332.0299078421144,823.4722222222222,295.9262736915319L847,259.8226395409494"></path></defs><text dy="0.5ex" class="label"><textPath xlink:href="#path-beba" startOffset="5%" text-anchor="start" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">beba</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-video" startOffset="50%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">video</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-boca" startOffset="17%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">boca</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-mujer" startOffset="5%" text-anchor="start" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">mujer</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-campaña" startOffset="5%" text-anchor="start" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">campaña</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-matías_alé" startOffset="5%" text-anchor="start" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">matías alé</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-scioli" startOffset="50%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">scioli</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-macri" startOffset="17%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">macri</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-miedo" startOffset="5%" text-anchor="start" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">miedo</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-salud" startOffset="5%" text-anchor="start" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">salud</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-corte" startOffset="17%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">corte</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-gobierno" startOffset="95%" text-anchor="end" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">gobierno</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-central" startOffset="17%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">central</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-avión" startOffset="17%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">avión</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-ley" startOffset="17%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">ley</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-copa" startOffset="33%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">copa</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-final" startOffset="33%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">final</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-ceballos" startOffset="33%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">ceballos</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-cristina" startOffset="50%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">cristina</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-massa" startOffset="50%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">massa</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-brasil" startOffset="50%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">brasil</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-chapo_guzmán" startOffset="50%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">chapo guzmán</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-sismo" startOffset="67%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">sismo</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-dólar" startOffset="67%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">dólar</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-liguilla" startOffset="67%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">liguilla</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-chile" startOffset="67%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">chile</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-justicia" startOffset="67%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">justicia</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-provincias" startOffset="67%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">provincias</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-prometió" startOffset="67%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">prometió</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-kirchner" startOffset="83%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">kirchner</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-river" startOffset="83%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">river</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-ganó" startOffset="83%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">ganó</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-rosario_central" startOffset="83%" text-anchor="middle" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">rosario central</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-diciembre" startOffset="95%" text-anchor="end" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">diciembre</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-españa" startOffset="95%" text-anchor="end" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">españa</textPath></text><text dy="0.5ex" class="label"><textPath xlink:href="#path-tucumán" startOffset="95%" text-anchor="end" style="font-size: 11px; font-family: Arial, Helvetica; font-weight: normal;">tucumán</textPath></text></g></svg>  
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name]};
      })
    };
  });

  cities.push({
    name: "mean",
    values: data.map(function(d) {
      return {date: d.date, temperature: d3.mean(color.domain().map(function(e) { return +d[e]; } ))};
    })
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script><!DOCTYPE html>
<meta charset="utf-8">
<style type="text/css">
  
	.node {
    cursor: pointer;
  }

  .overlay{
      background-color:#EEE;
  }
   
  .node circle {
    fill: #fff;
    stroke: steelblue;
    stroke-width: 1.5px;
  }
   
  .node text {
    font-size:10px; 
    font-family:sans-serif;
  }
   
  .link {
    fill: none;
    stroke: #ccc;
    stroke-width: 1.5px;
  }

  .templink {
    fill: none;
    stroke: red;
    stroke-width: 3px;
  }

  .ghostCircle.show{
      display:block;
  }

  .ghostCircle, .activeDrag .ghostCircle{
       display: none;
  }

</style>
<script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="dndTree.js"></script>
<body>
    <div id="tree-container"></div>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <title>Treemap - Neat Zoom Effect</title>
    <!--<script type="text/javascript" src="./browserdetect/browserdetect.js"></script>-->
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script src="d3.v3.min.js"></script>
    <style type="text/css">
        body {
            overflow: hidden;
            margin: 0;
            font-size: 12px;
            font-family: "Helvetica Neue", Helvetica;
        }

        .footer {
            z-index: 1;
            display: block;
            font-size: 26px;
            font-weight: 200;
            text-shadow: 0 1px 0 #fff;
        }

        svg {
            overflow: hidden;
        }

        rect {
            pointer-events: all;
            cursor: pointer;
            stroke: #EEEEEE;
        }

        .chart {
            display: block;
            margin: auto;
        }

        .parent .label {
            color: #FFFFFF;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -webkit-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -moz-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        }

        .labelbody {
            background: transparent;
        }

        .label {
            margin: 2px;
            white-space: pre;
            overflow: hidden;
            text-overflow: ellipsis;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -webkit-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -moz-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        }

        .child .label {
            white-space: pre-wrap;
            text-align: center;
            text-overflow: ellipsis;
        }

        .cell {
            font-size: 11px;
            cursor: pointer
        }
    </style>
</head>
<body>

<div id="body"></div>
<div class="footer">
    <select>
        <option value="size">Size</option>
        <option value="count">Count</option>
    </select>
</div>
<p>
<button onclick="switchData('data-to-what.json')">Show: "Adaptive to What?"</button>
<button onclick="switchData('data-what.json')">Show: "Adapting What?"</button>
<!--<input name="" id="testData" type="button" value="data"></input>
<input name="" id="adaptiveToWhat" type="button" value="Adaptive to what?"></input>-->
</p>
</body>

<script type="text/javascript">
 var isIE = false; // BrowserDetect.browser == 'Explorer';
    var chartWidth = 550;
    var chartHeight = 550;
    var xscale = d3.scale.linear().range([0, chartWidth]);
    var yscale = d3.scale.linear().range([0, chartHeight]);
    var color = d3.scale.category10();
    var headerHeight = 20;
    var headerColor = "#555555";
    var transitionDuration = 500;
    var root;
    var node;
	var data2;
	var datFn01 = 'data-cs-ar.json';
	var datFn02 = 'data.json';
	
    var treemap = d3.layout.treemap()
        .round(false)
        .size([chartWidth, chartHeight])
        .sticky(true)
        .value(function(d) {
            return d.size;
        });

    var chart = d3.select("#body")
        .append("svg:svg")
        .attr("width", chartWidth)
        .attr("height", chartHeight)
        .append("svg:g");
		
function switchData(dataFn) {
	d3.select("svg").remove();
	
	treemap = d3.layout.treemap()
        .round(false)
        .size([chartWidth, chartHeight])
        .sticky(true)
        .value(function(d) {
            return d.size;
        });
		
	chart = d3.select("#body")
        .append("svg:svg")
        .attr("width", chartWidth)
        .attr("height", chartHeight)
        .append("svg:g");
		
	drawTreemap(dataFn);
}
function drawTreemap(datFn01) {

    d3.json(datFn01, function(data) {
        node = root = data;
        var nodes = treemap.nodes(root);

        var children = nodes.filter(function(d) {
            return !d.children;
        });
        var parents = nodes.filter(function(d) {
            return d.children;
        });

        // create parent cells
        var parentCells = chart.selectAll("g.cell.parent")
            .data(parents, function(d) {
                return "p-" + d.name;
            });
        var parentEnterTransition = parentCells.enter()
            .append("g")
            .attr("class", "cell parent")
            .on("click", function(d) {
                zoom(d);
            });
        parentEnterTransition.append("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", headerHeight)
            .style("fill", headerColor);
        parentEnterTransition.append('foreignObject')
            .attr("class", "foreignObject")
            .append("xhtml:body")
            .attr("class", "labelbody")
            .append("div")
            .attr("class", "label");
        // update transition
        var parentUpdateTransition = parentCells.transition().duration(transitionDuration);
        parentUpdateTransition.select(".cell")
            .attr("transform", function(d) {
                return "translate(" + d.dx + "," + d.y + ")";
            });
        parentUpdateTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", headerHeight)
            .style("fill", headerColor);
        parentUpdateTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", headerHeight)
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });
        // remove transition
        parentCells.exit()
            .remove();

        // create children cells
        var childrenCells = chart.selectAll("g.cell.child")
            .data(children, function(d) {
                return "c-" + d.name;
            });
        // enter transition
        var childEnterTransition = childrenCells.enter()
            .append("g")
            .attr("class", "cell child")
            .on("click", function(d) {
                zoom(node === d.parent ? root : d.parent);
            });
        childEnterTransition.append("rect")
            .classed("background", true)
            .style("fill", function(d) {
                return color(d.parent.name);
            });
        childEnterTransition.append('foreignObject')
            .attr("class", "foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return Math.max(0.01, d.dy);
            })
            .append("xhtml:body")
            .attr("class", "labelbody")
            .append("div")
            .attr("class", "label")
            .text(function(d) {
                return d.name;
            });

        if (isIE) {
            childEnterTransition.selectAll(".foreignObject .labelbody .label")
                .style("display", "none");
        } else {
            childEnterTransition.selectAll(".foreignObject")
                .style("display", "none");
        }

        // update transition
        var childUpdateTransition = childrenCells.transition().duration(transitionDuration);
        childUpdateTransition.select(".cell")
            .attr("transform", function(d) {
                return "translate(" + d.x  + "," + d.y + ")";
            });
        childUpdateTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return d.dy;
            })
            .style("fill", function(d) {
                return color(d.parent.name);
            });
        childUpdateTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return Math.max(0.01, d.dy);
            })
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });
        // exit transition
        childrenCells.exit()
            .remove();

			
			// interaction with thml elements
        d3.select("select").on("change", function() {
            console.log("select zoom(node)");
            treemap.value(this.value == "size" ? size : count)
                .nodes(root);
            zoom(node);
        });
		
		/*
		d3.select("#testData").on("click", function() {
            var node = div.datum(data).selectAll(".node")
			    .data(treemap.nodes);
            node.enter().append("div")
			.attr("class", "node");
            
            node.transition().duration(1500).call(position)
			.style("background", function(d) { return d.color ? d.color : "#ffffff"; })
			.text(function(d) { return d.children ? "blue" : d.keytable + "(" + d.anzahl + "-" + Math.max(0, d.dx) + "-" + Math.max(0, d.dy) + ")"; })
			;
		});
		*/
		

        zoom(node);
    });
	
	}


    function size(d) {
        return d.size;
    }


    function count(d) {
        return 1;
    }


    //and another one
    function textHeight(d) {
        var ky = chartHeight / d.dy;
        yscale.domain([d.y, d.y + d.dy]);
        return (ky * d.dy) / headerHeight;
    }


    function getRGBComponents (color) {
        var r = color.substring(1, 3);
        var g = color.substring(3, 5);
        var b = color.substring(5, 7);
        return {
            R: parseInt(r, 16),
            G: parseInt(g, 16),
            B: parseInt(b, 16)
        };
    }


    function idealTextColor (bgColor) {
        var nThreshold = 105;
        var components = getRGBComponents(bgColor);
        var bgDelta = (components.R * 0.299) + (components.G * 0.587) + (components.B * 0.114);
        return ((255 - bgDelta) < nThreshold) ? "#000000" : "#ffffff";
    }


    function zoom(d) {
        this.treemap
            .padding([headerHeight/(chartHeight/d.dy), 0, 0, 0])
            .nodes(d);

        // moving the next two lines above treemap layout messes up padding of zoom result
        var kx = chartWidth  / d.dx;
        var ky = chartHeight / d.dy;
        var level = d;

        xscale.domain([d.x, d.x + d.dx]);
        yscale.domain([d.y, d.y + d.dy]);

        if (node != level) {
            if (isIE) {
                chart.selectAll(".cell.child .foreignObject .labelbody .label")
                    .style("display", "none");
            } else {
                chart.selectAll(".cell.child .foreignObject")
                    .style("display", "none");
            }
        }

        var zoomTransition = chart.selectAll("g.cell").transition().duration(transitionDuration)
            .attr("transform", function(d) {
                return "translate(" + xscale(d.x) + "," + yscale(d.y) + ")";
            })
            .each("end", function(d, i) {
                if (!i && (level !== self.root)) {
                    chart.selectAll(".cell.child")
                        .filter(function(d) {
                            return d.parent === self.node; // only get the children for selected group
                        })
                        .select(".foreignObject .labelbody .label")
                        .style("color", function(d) {
                            return idealTextColor(color(d.parent.name));
                        });

                    if (isIE) {
                        chart.selectAll(".cell.child")
                            .filter(function(d) {
                                return d.parent === self.node; // only get the children for selected group
                            })
                            .select(".foreignObject .labelbody .label")
                            .style("display", "")
                    } else {
                        chart.selectAll(".cell.child")
                            .filter(function(d) {
                                return d.parent === self.node; // only get the children for selected group
                            })
                            .select(".foreignObject")
                            .style("display", "")
                    }
                }
            });

        zoomTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, kx * d.dx);
            })
            .attr("height", function(d) {
                return d.children ? headerHeight: Math.max(0.01, ky * d.dy);
            })
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });

        // update the width/height of the rects
        zoomTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, kx * d.dx);
            })
            .attr("height", function(d) {
                return d.children ? headerHeight : Math.max(0.01, ky * d.dy);
            })
            .style("fill", function(d) {
                return d.children ? headerColor : color(d.parent.name);
            });

        node = d;

        if (d3.event) {
            d3.event.stopPropagation();
        }
    }
		
</script>

<script type="text/javascript">
drawTreemap('data-to-what.json');
</script>

</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<script src="htmlwidgets.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="d3.chart.min.js"></script>
<link href="hierStyles.css" rel="stylesheet" />
<script src="d3.chart.layout.hierarchy.js"></script>
<script src="hierNetwork.js"></script>

</head>
<body style="background-color:white;">
<div id="htmlwidget-8073" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-8073">{ "x": {
 "root": "{\"name\":\"hc\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Florida\",\"children\":{\"name\":\"Florida\"}},{\"name\":\"North Carolina\",\"children\":{\"name\":\"North Carolina\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"California\",\"children\":{\"name\":\"California\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maryland\",\"children\":{\"name\":\"Maryland\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arizona\",\"children\":{\"name\":\"Arizona\"}},{\"name\":\"New Mexico\",\"children\":{\"name\":\"New Mexico\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Delaware\",\"children\":{\"name\":\"Delaware\"}},{\"name\":\"\",\"children\":[{\"name\":\"Alabama\",\"children\":{\"name\":\"Alabama\"}},{\"name\":\"Louisiana\",\"children\":{\"name\":\"Louisiana\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Illinois\",\"children\":{\"name\":\"Illinois\"}},{\"name\":\"New York\",\"children\":{\"name\":\"New York\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Michigan\",\"children\":{\"name\":\"Michigan\"}},{\"name\":\"Nevada\",\"children\":{\"name\":\"Nevada\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Alaska\",\"children\":{\"name\":\"Alaska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Mississippi\",\"children\":{\"name\":\"Mississippi\"}},{\"name\":\"South Carolina\",\"children\":{\"name\":\"South Carolina\"}}]}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Washington\",\"children\":{\"name\":\"Washington\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oregon\",\"children\":{\"name\":\"Oregon\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wyoming\",\"children\":{\"name\":\"Wyoming\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oklahoma\",\"children\":{\"name\":\"Oklahoma\"}},{\"name\":\"Virginia\",\"children\":{\"name\":\"Virginia\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Rhode Island\",\"children\":{\"name\":\"Rhode Island\"}},{\"name\":\"\",\"children\":[{\"name\":\"Massachusetts\",\"children\":{\"name\":\"Massachusetts\"}},{\"name\":\"New Jersey\",\"children\":{\"name\":\"New Jersey\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Missouri\",\"children\":{\"name\":\"Missouri\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arkansas\",\"children\":{\"name\":\"Arkansas\"}},{\"name\":\"Tennessee\",\"children\":{\"name\":\"Tennessee\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Georgia\",\"children\":{\"name\":\"Georgia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Colorado\",\"children\":{\"name\":\"Colorado\"}},{\"name\":\"Texas\",\"children\":{\"name\":\"Texas\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Idaho\",\"children\":{\"name\":\"Idaho\"}},{\"name\":\"\",\"children\":[{\"name\":\"Nebraska\",\"children\":{\"name\":\"Nebraska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Kentucky\",\"children\":{\"name\":\"Kentucky\"}},{\"name\":\"Montana\",\"children\":{\"name\":\"Montana\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Ohio\",\"children\":{\"name\":\"Ohio\"}},{\"name\":\"Utah\",\"children\":{\"name\":\"Utah\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Indiana\",\"children\":{\"name\":\"Indiana\"}},{\"name\":\"Kansas\",\"children\":{\"name\":\"Kansas\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Connecticut\",\"children\":{\"name\":\"Connecticut\"}},{\"name\":\"Pennsylvania\",\"children\":{\"name\":\"Pennsylvania\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Hawaii\",\"children\":{\"name\":\"Hawaii\"}},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"West Virginia\",\"children\":{\"name\":\"West Virginia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maine\",\"children\":{\"name\":\"Maine\"}},{\"name\":\"South Dakota\",\"children\":{\"name\":\"South Dakota\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"North Dakota\",\"children\":{\"name\":\"North Dakota\"}},{\"name\":\"Vermont\",\"children\":{\"name\":\"Vermont\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Minnesota\",\"children\":{\"name\":\"Minnesota\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wisconsin\",\"children\":{\"name\":\"Wisconsin\"}},{\"name\":\"\",\"children\":[{\"name\":\"Iowa\",\"children\":{\"name\":\"Iowa\"}},{\"name\":\"New Hampshire\",\"children\":{\"name\":\"New Hampshire\"}}]}]}]}]}]}]}]}]}]}",
"options": {
 "type": "tree.cartesian",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-6699" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-6699">{ "x": {
 "root": "{\"name\":\"hc\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Florida\",\"children\":{\"name\":\"Florida\"}},{\"name\":\"North Carolina\",\"children\":{\"name\":\"North Carolina\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"California\",\"children\":{\"name\":\"California\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maryland\",\"children\":{\"name\":\"Maryland\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arizona\",\"children\":{\"name\":\"Arizona\"}},{\"name\":\"New Mexico\",\"children\":{\"name\":\"New Mexico\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Delaware\",\"children\":{\"name\":\"Delaware\"}},{\"name\":\"\",\"children\":[{\"name\":\"Alabama\",\"children\":{\"name\":\"Alabama\"}},{\"name\":\"Louisiana\",\"children\":{\"name\":\"Louisiana\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Illinois\",\"children\":{\"name\":\"Illinois\"}},{\"name\":\"New York\",\"children\":{\"name\":\"New York\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Michigan\",\"children\":{\"name\":\"Michigan\"}},{\"name\":\"Nevada\",\"children\":{\"name\":\"Nevada\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Alaska\",\"children\":{\"name\":\"Alaska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Mississippi\",\"children\":{\"name\":\"Mississippi\"}},{\"name\":\"South Carolina\",\"children\":{\"name\":\"South Carolina\"}}]}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Washington\",\"children\":{\"name\":\"Washington\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oregon\",\"children\":{\"name\":\"Oregon\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wyoming\",\"children\":{\"name\":\"Wyoming\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oklahoma\",\"children\":{\"name\":\"Oklahoma\"}},{\"name\":\"Virginia\",\"children\":{\"name\":\"Virginia\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Rhode Island\",\"children\":{\"name\":\"Rhode Island\"}},{\"name\":\"\",\"children\":[{\"name\":\"Massachusetts\",\"children\":{\"name\":\"Massachusetts\"}},{\"name\":\"New Jersey\",\"children\":{\"name\":\"New Jersey\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Missouri\",\"children\":{\"name\":\"Missouri\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arkansas\",\"children\":{\"name\":\"Arkansas\"}},{\"name\":\"Tennessee\",\"children\":{\"name\":\"Tennessee\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Georgia\",\"children\":{\"name\":\"Georgia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Colorado\",\"children\":{\"name\":\"Colorado\"}},{\"name\":\"Texas\",\"children\":{\"name\":\"Texas\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Idaho\",\"children\":{\"name\":\"Idaho\"}},{\"name\":\"\",\"children\":[{\"name\":\"Nebraska\",\"children\":{\"name\":\"Nebraska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Kentucky\",\"children\":{\"name\":\"Kentucky\"}},{\"name\":\"Montana\",\"children\":{\"name\":\"Montana\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Ohio\",\"children\":{\"name\":\"Ohio\"}},{\"name\":\"Utah\",\"children\":{\"name\":\"Utah\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Indiana\",\"children\":{\"name\":\"Indiana\"}},{\"name\":\"Kansas\",\"children\":{\"name\":\"Kansas\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Connecticut\",\"children\":{\"name\":\"Connecticut\"}},{\"name\":\"Pennsylvania\",\"children\":{\"name\":\"Pennsylvania\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Hawaii\",\"children\":{\"name\":\"Hawaii\"}},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"West Virginia\",\"children\":{\"name\":\"West Virginia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maine\",\"children\":{\"name\":\"Maine\"}},{\"name\":\"South Dakota\",\"children\":{\"name\":\"South Dakota\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"North Dakota\",\"children\":{\"name\":\"North Dakota\"}},{\"name\":\"Vermont\",\"children\":{\"name\":\"Vermont\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Minnesota\",\"children\":{\"name\":\"Minnesota\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wisconsin\",\"children\":{\"name\":\"Wisconsin\"}},{\"name\":\"\",\"children\":[{\"name\":\"Iowa\",\"children\":{\"name\":\"Iowa\"}},{\"name\":\"New Hampshire\",\"children\":{\"name\":\"New Hampshire\"}}]}]}]}]}]}]}]}]}]}",
"options": {
 "type": "tree.radial",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-2846" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-2846">{ "x": {
 "root": "{\"name\":\"hc\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Florida\",\"children\":{\"name\":\"Florida\"}},{\"name\":\"North Carolina\",\"children\":{\"name\":\"North Carolina\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"California\",\"children\":{\"name\":\"California\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maryland\",\"children\":{\"name\":\"Maryland\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arizona\",\"children\":{\"name\":\"Arizona\"}},{\"name\":\"New Mexico\",\"children\":{\"name\":\"New Mexico\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Delaware\",\"children\":{\"name\":\"Delaware\"}},{\"name\":\"\",\"children\":[{\"name\":\"Alabama\",\"children\":{\"name\":\"Alabama\"}},{\"name\":\"Louisiana\",\"children\":{\"name\":\"Louisiana\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Illinois\",\"children\":{\"name\":\"Illinois\"}},{\"name\":\"New York\",\"children\":{\"name\":\"New York\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Michigan\",\"children\":{\"name\":\"Michigan\"}},{\"name\":\"Nevada\",\"children\":{\"name\":\"Nevada\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Alaska\",\"children\":{\"name\":\"Alaska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Mississippi\",\"children\":{\"name\":\"Mississippi\"}},{\"name\":\"South Carolina\",\"children\":{\"name\":\"South Carolina\"}}]}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Washington\",\"children\":{\"name\":\"Washington\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oregon\",\"children\":{\"name\":\"Oregon\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wyoming\",\"children\":{\"name\":\"Wyoming\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oklahoma\",\"children\":{\"name\":\"Oklahoma\"}},{\"name\":\"Virginia\",\"children\":{\"name\":\"Virginia\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Rhode Island\",\"children\":{\"name\":\"Rhode Island\"}},{\"name\":\"\",\"children\":[{\"name\":\"Massachusetts\",\"children\":{\"name\":\"Massachusetts\"}},{\"name\":\"New Jersey\",\"children\":{\"name\":\"New Jersey\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Missouri\",\"children\":{\"name\":\"Missouri\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arkansas\",\"children\":{\"name\":\"Arkansas\"}},{\"name\":\"Tennessee\",\"children\":{\"name\":\"Tennessee\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Georgia\",\"children\":{\"name\":\"Georgia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Colorado\",\"children\":{\"name\":\"Colorado\"}},{\"name\":\"Texas\",\"children\":{\"name\":\"Texas\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Idaho\",\"children\":{\"name\":\"Idaho\"}},{\"name\":\"\",\"children\":[{\"name\":\"Nebraska\",\"children\":{\"name\":\"Nebraska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Kentucky\",\"children\":{\"name\":\"Kentucky\"}},{\"name\":\"Montana\",\"children\":{\"name\":\"Montana\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Ohio\",\"children\":{\"name\":\"Ohio\"}},{\"name\":\"Utah\",\"children\":{\"name\":\"Utah\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Indiana\",\"children\":{\"name\":\"Indiana\"}},{\"name\":\"Kansas\",\"children\":{\"name\":\"Kansas\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Connecticut\",\"children\":{\"name\":\"Connecticut\"}},{\"name\":\"Pennsylvania\",\"children\":{\"name\":\"Pennsylvania\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Hawaii\",\"children\":{\"name\":\"Hawaii\"}},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"West Virginia\",\"children\":{\"name\":\"West Virginia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maine\",\"children\":{\"name\":\"Maine\"}},{\"name\":\"South Dakota\",\"children\":{\"name\":\"South Dakota\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"North Dakota\",\"children\":{\"name\":\"North Dakota\"}},{\"name\":\"Vermont\",\"children\":{\"name\":\"Vermont\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Minnesota\",\"children\":{\"name\":\"Minnesota\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wisconsin\",\"children\":{\"name\":\"Wisconsin\"}},{\"name\":\"\",\"children\":[{\"name\":\"Iowa\",\"children\":{\"name\":\"Iowa\"}},{\"name\":\"New Hampshire\",\"children\":{\"name\":\"New Hampshire\"}}]}]}]}]}]}]}]}]}]}",
"options": {
 "type": "cluster.cartesian",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-4116" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-4116">{ "x": {
 "root": "{\"name\":\"hc\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Florida\",\"children\":{\"name\":\"Florida\"}},{\"name\":\"North Carolina\",\"children\":{\"name\":\"North Carolina\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"California\",\"children\":{\"name\":\"California\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maryland\",\"children\":{\"name\":\"Maryland\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arizona\",\"children\":{\"name\":\"Arizona\"}},{\"name\":\"New Mexico\",\"children\":{\"name\":\"New Mexico\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Delaware\",\"children\":{\"name\":\"Delaware\"}},{\"name\":\"\",\"children\":[{\"name\":\"Alabama\",\"children\":{\"name\":\"Alabama\"}},{\"name\":\"Louisiana\",\"children\":{\"name\":\"Louisiana\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Illinois\",\"children\":{\"name\":\"Illinois\"}},{\"name\":\"New York\",\"children\":{\"name\":\"New York\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Michigan\",\"children\":{\"name\":\"Michigan\"}},{\"name\":\"Nevada\",\"children\":{\"name\":\"Nevada\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Alaska\",\"children\":{\"name\":\"Alaska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Mississippi\",\"children\":{\"name\":\"Mississippi\"}},{\"name\":\"South Carolina\",\"children\":{\"name\":\"South Carolina\"}}]}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Washington\",\"children\":{\"name\":\"Washington\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oregon\",\"children\":{\"name\":\"Oregon\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wyoming\",\"children\":{\"name\":\"Wyoming\"}},{\"name\":\"\",\"children\":[{\"name\":\"Oklahoma\",\"children\":{\"name\":\"Oklahoma\"}},{\"name\":\"Virginia\",\"children\":{\"name\":\"Virginia\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Rhode Island\",\"children\":{\"name\":\"Rhode Island\"}},{\"name\":\"\",\"children\":[{\"name\":\"Massachusetts\",\"children\":{\"name\":\"Massachusetts\"}},{\"name\":\"New Jersey\",\"children\":{\"name\":\"New Jersey\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Missouri\",\"children\":{\"name\":\"Missouri\"}},{\"name\":\"\",\"children\":[{\"name\":\"Arkansas\",\"children\":{\"name\":\"Arkansas\"}},{\"name\":\"Tennessee\",\"children\":{\"name\":\"Tennessee\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Georgia\",\"children\":{\"name\":\"Georgia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Colorado\",\"children\":{\"name\":\"Colorado\"}},{\"name\":\"Texas\",\"children\":{\"name\":\"Texas\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Idaho\",\"children\":{\"name\":\"Idaho\"}},{\"name\":\"\",\"children\":[{\"name\":\"Nebraska\",\"children\":{\"name\":\"Nebraska\"}},{\"name\":\"\",\"children\":[{\"name\":\"Kentucky\",\"children\":{\"name\":\"Kentucky\"}},{\"name\":\"Montana\",\"children\":{\"name\":\"Montana\"}}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Ohio\",\"children\":{\"name\":\"Ohio\"}},{\"name\":\"Utah\",\"children\":{\"name\":\"Utah\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"Indiana\",\"children\":{\"name\":\"Indiana\"}},{\"name\":\"Kansas\",\"children\":{\"name\":\"Kansas\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Connecticut\",\"children\":{\"name\":\"Connecticut\"}},{\"name\":\"Pennsylvania\",\"children\":{\"name\":\"Pennsylvania\"}}]}]}]}]},{\"name\":\"\",\"children\":[{\"name\":\"Hawaii\",\"children\":{\"name\":\"Hawaii\"}},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"West Virginia\",\"children\":{\"name\":\"West Virginia\"}},{\"name\":\"\",\"children\":[{\"name\":\"Maine\",\"children\":{\"name\":\"Maine\"}},{\"name\":\"South Dakota\",\"children\":{\"name\":\"South Dakota\"}}]}]},{\"name\":\"\",\"children\":[{\"name\":\"\",\"children\":[{\"name\":\"North Dakota\",\"children\":{\"name\":\"North Dakota\"}},{\"name\":\"Vermont\",\"children\":{\"name\":\"Vermont\"}}]},{\"name\":\"\",\"children\":[{\"name\":\"Minnesota\",\"children\":{\"name\":\"Minnesota\"}},{\"name\":\"\",\"children\":[{\"name\":\"Wisconsin\",\"children\":{\"name\":\"Wisconsin\"}},{\"name\":\"\",\"children\":[{\"name\":\"Iowa\",\"children\":{\"name\":\"Iowa\"}},{\"name\":\"New Hampshire\",\"children\":{\"name\":\"New Hampshire\"}}]}]}]}]}]}]}]}]}]}",
"options": {
 "type": "cluster.radial",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-5032" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-5032">{ "x": {
 "root": "{\"name\":\"flare\",\"children\":[{\"name\":\"analytics\",\"children\":[{\"name\":\"cluster\",\"children\":[{\"name\":\"AgglomerativeCluster\",\"size\":3938},{\"name\":\"CommunityStructure\",\"size\":3812},{\"name\":\"HierarchicalCluster\",\"size\":6714},{\"name\":\"MergeEdge\",\"size\":743}]},{\"name\":\"graph\",\"children\":[{\"name\":\"BetweennessCentrality\",\"size\":3534},{\"name\":\"LinkDistance\",\"size\":5731},{\"name\":\"MaxFlowMinCut\",\"size\":7840},{\"name\":\"ShortestPaths\",\"size\":5914},{\"name\":\"SpanningTree\",\"size\":3416}]},{\"name\":\"optimization\",\"children\":[{\"name\":\"AspectRatioBanker\",\"size\":7074}]}]},{\"name\":\"animate\",\"children\":[{\"name\":\"Easing\",\"size\":17010},{\"name\":\"FunctionSequence\",\"size\":5842},{\"name\":\"interpolate\",\"children\":[{\"name\":\"ArrayInterpolator\",\"size\":1983},{\"name\":\"ColorInterpolator\",\"size\":2047},{\"name\":\"DateInterpolator\",\"size\":1375},{\"name\":\"Interpolator\",\"size\":8746},{\"name\":\"MatrixInterpolator\",\"size\":2202},{\"name\":\"NumberInterpolator\",\"size\":1382},{\"name\":\"ObjectInterpolator\",\"size\":1629},{\"name\":\"PointInterpolator\",\"size\":1675},{\"name\":\"RectangleInterpolator\",\"size\":2042}]},{\"name\":\"ISchedulable\",\"size\":1041},{\"name\":\"Parallel\",\"size\":5176},{\"name\":\"Pause\",\"size\":449},{\"name\":\"Scheduler\",\"size\":5593},{\"name\":\"Sequence\",\"size\":5534},{\"name\":\"Transition\",\"size\":9201},{\"name\":\"Transitioner\",\"size\":19975},{\"name\":\"TransitionEvent\",\"size\":1116},{\"name\":\"Tween\",\"size\":6006}]},{\"name\":\"data\",\"children\":[{\"name\":\"converters\",\"children\":[{\"name\":\"Converters\",\"size\":721},{\"name\":\"DelimitedTextConverter\",\"size\":4294},{\"name\":\"GraphMLConverter\",\"size\":9800},{\"name\":\"IDataConverter\",\"size\":1314},{\"name\":\"JSONConverter\",\"size\":2220}]},{\"name\":\"DataField\",\"size\":1759},{\"name\":\"DataSchema\",\"size\":2165},{\"name\":\"DataSet\",\"size\":586},{\"name\":\"DataSource\",\"size\":3331},{\"name\":\"DataTable\",\"size\":772},{\"name\":\"DataUtil\",\"size\":3322}]},{\"name\":\"display\",\"children\":[{\"name\":\"DirtySprite\",\"size\":8833},{\"name\":\"LineSprite\",\"size\":1732},{\"name\":\"RectSprite\",\"size\":3623},{\"name\":\"TextSprite\",\"size\":10066}]},{\"name\":\"flex\",\"children\":[{\"name\":\"FlareVis\",\"size\":4116}]},{\"name\":\"physics\",\"children\":[{\"name\":\"DragForce\",\"size\":1082},{\"name\":\"GravityForce\",\"size\":1336},{\"name\":\"IForce\",\"size\":319},{\"name\":\"NBodyForce\",\"size\":10498},{\"name\":\"Particle\",\"size\":2822},{\"name\":\"Simulation\",\"size\":9983},{\"name\":\"Spring\",\"size\":2213},{\"name\":\"SpringForce\",\"size\":1681}]},{\"name\":\"query\",\"children\":[{\"name\":\"AggregateExpression\",\"size\":1616},{\"name\":\"And\",\"size\":1027},{\"name\":\"Arithmetic\",\"size\":3891},{\"name\":\"Average\",\"size\":891},{\"name\":\"BinaryExpression\",\"size\":2893},{\"name\":\"Comparison\",\"size\":5103},{\"name\":\"CompositeExpression\",\"size\":3677},{\"name\":\"Count\",\"size\":781},{\"name\":\"DateUtil\",\"size\":4141},{\"name\":\"Distinct\",\"size\":933},{\"name\":\"Expression\",\"size\":5130},{\"name\":\"ExpressionIterator\",\"size\":3617},{\"name\":\"Fn\",\"size\":3240},{\"name\":\"If\",\"size\":2732},{\"name\":\"IsA\",\"size\":2039},{\"name\":\"Literal\",\"size\":1214},{\"name\":\"Match\",\"size\":3748},{\"name\":\"Maximum\",\"size\":843},{\"name\":\"methods\",\"children\":[{\"name\":\"add\",\"size\":593},{\"name\":\"and\",\"size\":330},{\"name\":\"average\",\"size\":287},{\"name\":\"count\",\"size\":277},{\"name\":\"distinct\",\"size\":292},{\"name\":\"div\",\"size\":595},{\"name\":\"eq\",\"size\":594},{\"name\":\"fn\",\"size\":460},{\"name\":\"gt\",\"size\":603},{\"name\":\"gte\",\"size\":625},{\"name\":\"iff\",\"size\":748},{\"name\":\"isa\",\"size\":461},{\"name\":\"lt\",\"size\":597},{\"name\":\"lte\",\"size\":619},{\"name\":\"max\",\"size\":283},{\"name\":\"min\",\"size\":283},{\"name\":\"mod\",\"size\":591},{\"name\":\"mul\",\"size\":603},{\"name\":\"neq\",\"size\":599},{\"name\":\"not\",\"size\":386},{\"name\":\"or\",\"size\":323},{\"name\":\"orderby\",\"size\":307},{\"name\":\"range\",\"size\":772},{\"name\":\"select\",\"size\":296},{\"name\":\"stddev\",\"size\":363},{\"name\":\"sub\",\"size\":600},{\"name\":\"sum\",\"size\":280},{\"name\":\"update\",\"size\":307},{\"name\":\"variance\",\"size\":335},{\"name\":\"where\",\"size\":299},{\"name\":\"xor\",\"size\":354},{\"name\":\"_\",\"size\":264}]},{\"name\":\"Minimum\",\"size\":843},{\"name\":\"Not\",\"size\":1554},{\"name\":\"Or\",\"size\":970},{\"name\":\"Query\",\"size\":13896},{\"name\":\"Range\",\"size\":1594},{\"name\":\"StringUtil\",\"size\":4130},{\"name\":\"Sum\",\"size\":791},{\"name\":\"Variable\",\"size\":1124},{\"name\":\"Variance\",\"size\":1876},{\"name\":\"Xor\",\"size\":1101}]},{\"name\":\"scale\",\"children\":[{\"name\":\"IScaleMap\",\"size\":2105},{\"name\":\"LinearScale\",\"size\":1316},{\"name\":\"LogScale\",\"size\":3151},{\"name\":\"OrdinalScale\",\"size\":3770},{\"name\":\"QuantileScale\",\"size\":2435},{\"name\":\"QuantitativeScale\",\"size\":4839},{\"name\":\"RootScale\",\"size\":1756},{\"name\":\"Scale\",\"size\":4268},{\"name\":\"ScaleType\",\"size\":1821},{\"name\":\"TimeScale\",\"size\":5833}]},{\"name\":\"util\",\"children\":[{\"name\":\"Arrays\",\"size\":8258},{\"name\":\"Colors\",\"size\":10001},{\"name\":\"Dates\",\"size\":8217},{\"name\":\"Displays\",\"size\":12555},{\"name\":\"Filter\",\"size\":2324},{\"name\":\"Geometry\",\"size\":10993},{\"name\":\"heap\",\"children\":[{\"name\":\"FibonacciHeap\",\"size\":9354},{\"name\":\"HeapNode\",\"size\":1233}]},{\"name\":\"IEvaluable\",\"size\":335},{\"name\":\"IPredicate\",\"size\":383},{\"name\":\"IValueProxy\",\"size\":874},{\"name\":\"math\",\"children\":[{\"name\":\"DenseMatrix\",\"size\":3165},{\"name\":\"IMatrix\",\"size\":2815},{\"name\":\"SparseMatrix\",\"size\":3366}]},{\"name\":\"Maths\",\"size\":17705},{\"name\":\"Orientation\",\"size\":1486},{\"name\":\"palette\",\"children\":[{\"name\":\"ColorPalette\",\"size\":6367},{\"name\":\"Palette\",\"size\":1229},{\"name\":\"ShapePalette\",\"size\":2059},{\"name\":\"SizePalette\",\"size\":2291}]},{\"name\":\"Property\",\"size\":5559},{\"name\":\"Shapes\",\"size\":19118},{\"name\":\"Sort\",\"size\":6887},{\"name\":\"Stats\",\"size\":6557},{\"name\":\"Strings\",\"size\":22026}]},{\"name\":\"vis\",\"children\":[{\"name\":\"axis\",\"children\":[{\"name\":\"Axes\",\"size\":1302},{\"name\":\"Axis\",\"size\":24593},{\"name\":\"AxisGridLine\",\"size\":652},{\"name\":\"AxisLabel\",\"size\":636},{\"name\":\"CartesianAxes\",\"size\":6703}]},{\"name\":\"controls\",\"children\":[{\"name\":\"AnchorControl\",\"size\":2138},{\"name\":\"ClickControl\",\"size\":3824},{\"name\":\"Control\",\"size\":1353},{\"name\":\"ControlList\",\"size\":4665},{\"name\":\"DragControl\",\"size\":2649},{\"name\":\"ExpandControl\",\"size\":2832},{\"name\":\"HoverControl\",\"size\":4896},{\"name\":\"IControl\",\"size\":763},{\"name\":\"PanZoomControl\",\"size\":5222},{\"name\":\"SelectionControl\",\"size\":7862},{\"name\":\"TooltipControl\",\"size\":8435}]},{\"name\":\"data\",\"children\":[{\"name\":\"Data\",\"size\":20544},{\"name\":\"DataList\",\"size\":19788},{\"name\":\"DataSprite\",\"size\":10349},{\"name\":\"EdgeSprite\",\"size\":3301},{\"name\":\"NodeSprite\",\"size\":19382},{\"name\":\"render\",\"children\":[{\"name\":\"ArrowType\",\"size\":698},{\"name\":\"EdgeRenderer\",\"size\":5569},{\"name\":\"IRenderer\",\"size\":353},{\"name\":\"ShapeRenderer\",\"size\":2247}]},{\"name\":\"ScaleBinding\",\"size\":11275},{\"name\":\"Tree\",\"size\":7147},{\"name\":\"TreeBuilder\",\"size\":9930}]},{\"name\":\"events\",\"children\":[{\"name\":\"DataEvent\",\"size\":2313},{\"name\":\"SelectionEvent\",\"size\":1880},{\"name\":\"TooltipEvent\",\"size\":1701},{\"name\":\"VisualizationEvent\",\"size\":1117}]},{\"name\":\"legend\",\"children\":[{\"name\":\"Legend\",\"size\":20859},{\"name\":\"LegendItem\",\"size\":4614},{\"name\":\"LegendRange\",\"size\":10530}]},{\"name\":\"operator\",\"children\":[{\"name\":\"distortion\",\"children\":[{\"name\":\"BifocalDistortion\",\"size\":4461},{\"name\":\"Distortion\",\"size\":6314},{\"name\":\"FisheyeDistortion\",\"size\":3444}]},{\"name\":\"encoder\",\"children\":[{\"name\":\"ColorEncoder\",\"size\":3179},{\"name\":\"Encoder\",\"size\":4060},{\"name\":\"PropertyEncoder\",\"size\":4138},{\"name\":\"ShapeEncoder\",\"size\":1690},{\"name\":\"SizeEncoder\",\"size\":1830}]},{\"name\":\"filter\",\"children\":[{\"name\":\"FisheyeTreeFilter\",\"size\":5219},{\"name\":\"GraphDistanceFilter\",\"size\":3165},{\"name\":\"VisibilityFilter\",\"size\":3509}]},{\"name\":\"IOperator\",\"size\":1286},{\"name\":\"label\",\"children\":[{\"name\":\"Labeler\",\"size\":9956},{\"name\":\"RadialLabeler\",\"size\":3899},{\"name\":\"StackedAreaLabeler\",\"size\":3202}]},{\"name\":\"layout\",\"children\":[{\"name\":\"AxisLayout\",\"size\":6725},{\"name\":\"BundledEdgeRouter\",\"size\":3727},{\"name\":\"CircleLayout\",\"size\":9317},{\"name\":\"CirclePackingLayout\",\"size\":12003},{\"name\":\"DendrogramLayout\",\"size\":4853},{\"name\":\"ForceDirectedLayout\",\"size\":8411},{\"name\":\"IcicleTreeLayout\",\"size\":4864},{\"name\":\"IndentedTreeLayout\",\"size\":3174},{\"name\":\"Layout\",\"size\":7881},{\"name\":\"NodeLinkTreeLayout\",\"size\":12870},{\"name\":\"PieLayout\",\"size\":2728},{\"name\":\"RadialTreeLayout\",\"size\":12348},{\"name\":\"RandomLayout\",\"size\":870},{\"name\":\"StackedAreaLayout\",\"size\":9121},{\"name\":\"TreeMapLayout\",\"size\":9191}]},{\"name\":\"Operator\",\"size\":2490},{\"name\":\"OperatorList\",\"size\":5248},{\"name\":\"OperatorSequence\",\"size\":4190},{\"name\":\"OperatorSwitch\",\"size\":2581},{\"name\":\"SortOperator\",\"size\":2023}]},{\"name\":\"Visualization\",\"size\":16540}]}]}",
"options": {
 "type": "pack.nested",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-120" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-120">{ "x": {
 "root": "{\"name\":\"flare\",\"children\":[{\"name\":\"analytics\",\"children\":[{\"name\":\"cluster\",\"children\":[{\"name\":\"AgglomerativeCluster\",\"size\":3938},{\"name\":\"CommunityStructure\",\"size\":3812},{\"name\":\"HierarchicalCluster\",\"size\":6714},{\"name\":\"MergeEdge\",\"size\":743}]},{\"name\":\"graph\",\"children\":[{\"name\":\"BetweennessCentrality\",\"size\":3534},{\"name\":\"LinkDistance\",\"size\":5731},{\"name\":\"MaxFlowMinCut\",\"size\":7840},{\"name\":\"ShortestPaths\",\"size\":5914},{\"name\":\"SpanningTree\",\"size\":3416}]},{\"name\":\"optimization\",\"children\":[{\"name\":\"AspectRatioBanker\",\"size\":7074}]}]},{\"name\":\"animate\",\"children\":[{\"name\":\"Easing\",\"size\":17010},{\"name\":\"FunctionSequence\",\"size\":5842},{\"name\":\"interpolate\",\"children\":[{\"name\":\"ArrayInterpolator\",\"size\":1983},{\"name\":\"ColorInterpolator\",\"size\":2047},{\"name\":\"DateInterpolator\",\"size\":1375},{\"name\":\"Interpolator\",\"size\":8746},{\"name\":\"MatrixInterpolator\",\"size\":2202},{\"name\":\"NumberInterpolator\",\"size\":1382},{\"name\":\"ObjectInterpolator\",\"size\":1629},{\"name\":\"PointInterpolator\",\"size\":1675},{\"name\":\"RectangleInterpolator\",\"size\":2042}]},{\"name\":\"ISchedulable\",\"size\":1041},{\"name\":\"Parallel\",\"size\":5176},{\"name\":\"Pause\",\"size\":449},{\"name\":\"Scheduler\",\"size\":5593},{\"name\":\"Sequence\",\"size\":5534},{\"name\":\"Transition\",\"size\":9201},{\"name\":\"Transitioner\",\"size\":19975},{\"name\":\"TransitionEvent\",\"size\":1116},{\"name\":\"Tween\",\"size\":6006}]},{\"name\":\"data\",\"children\":[{\"name\":\"converters\",\"children\":[{\"name\":\"Converters\",\"size\":721},{\"name\":\"DelimitedTextConverter\",\"size\":4294},{\"name\":\"GraphMLConverter\",\"size\":9800},{\"name\":\"IDataConverter\",\"size\":1314},{\"name\":\"JSONConverter\",\"size\":2220}]},{\"name\":\"DataField\",\"size\":1759},{\"name\":\"DataSchema\",\"size\":2165},{\"name\":\"DataSet\",\"size\":586},{\"name\":\"DataSource\",\"size\":3331},{\"name\":\"DataTable\",\"size\":772},{\"name\":\"DataUtil\",\"size\":3322}]},{\"name\":\"display\",\"children\":[{\"name\":\"DirtySprite\",\"size\":8833},{\"name\":\"LineSprite\",\"size\":1732},{\"name\":\"RectSprite\",\"size\":3623},{\"name\":\"TextSprite\",\"size\":10066}]},{\"name\":\"flex\",\"children\":[{\"name\":\"FlareVis\",\"size\":4116}]},{\"name\":\"physics\",\"children\":[{\"name\":\"DragForce\",\"size\":1082},{\"name\":\"GravityForce\",\"size\":1336},{\"name\":\"IForce\",\"size\":319},{\"name\":\"NBodyForce\",\"size\":10498},{\"name\":\"Particle\",\"size\":2822},{\"name\":\"Simulation\",\"size\":9983},{\"name\":\"Spring\",\"size\":2213},{\"name\":\"SpringForce\",\"size\":1681}]},{\"name\":\"query\",\"children\":[{\"name\":\"AggregateExpression\",\"size\":1616},{\"name\":\"And\",\"size\":1027},{\"name\":\"Arithmetic\",\"size\":3891},{\"name\":\"Average\",\"size\":891},{\"name\":\"BinaryExpression\",\"size\":2893},{\"name\":\"Comparison\",\"size\":5103},{\"name\":\"CompositeExpression\",\"size\":3677},{\"name\":\"Count\",\"size\":781},{\"name\":\"DateUtil\",\"size\":4141},{\"name\":\"Distinct\",\"size\":933},{\"name\":\"Expression\",\"size\":5130},{\"name\":\"ExpressionIterator\",\"size\":3617},{\"name\":\"Fn\",\"size\":3240},{\"name\":\"If\",\"size\":2732},{\"name\":\"IsA\",\"size\":2039},{\"name\":\"Literal\",\"size\":1214},{\"name\":\"Match\",\"size\":3748},{\"name\":\"Maximum\",\"size\":843},{\"name\":\"methods\",\"children\":[{\"name\":\"add\",\"size\":593},{\"name\":\"and\",\"size\":330},{\"name\":\"average\",\"size\":287},{\"name\":\"count\",\"size\":277},{\"name\":\"distinct\",\"size\":292},{\"name\":\"div\",\"size\":595},{\"name\":\"eq\",\"size\":594},{\"name\":\"fn\",\"size\":460},{\"name\":\"gt\",\"size\":603},{\"name\":\"gte\",\"size\":625},{\"name\":\"iff\",\"size\":748},{\"name\":\"isa\",\"size\":461},{\"name\":\"lt\",\"size\":597},{\"name\":\"lte\",\"size\":619},{\"name\":\"max\",\"size\":283},{\"name\":\"min\",\"size\":283},{\"name\":\"mod\",\"size\":591},{\"name\":\"mul\",\"size\":603},{\"name\":\"neq\",\"size\":599},{\"name\":\"not\",\"size\":386},{\"name\":\"or\",\"size\":323},{\"name\":\"orderby\",\"size\":307},{\"name\":\"range\",\"size\":772},{\"name\":\"select\",\"size\":296},{\"name\":\"stddev\",\"size\":363},{\"name\":\"sub\",\"size\":600},{\"name\":\"sum\",\"size\":280},{\"name\":\"update\",\"size\":307},{\"name\":\"variance\",\"size\":335},{\"name\":\"where\",\"size\":299},{\"name\":\"xor\",\"size\":354},{\"name\":\"_\",\"size\":264}]},{\"name\":\"Minimum\",\"size\":843},{\"name\":\"Not\",\"size\":1554},{\"name\":\"Or\",\"size\":970},{\"name\":\"Query\",\"size\":13896},{\"name\":\"Range\",\"size\":1594},{\"name\":\"StringUtil\",\"size\":4130},{\"name\":\"Sum\",\"size\":791},{\"name\":\"Variable\",\"size\":1124},{\"name\":\"Variance\",\"size\":1876},{\"name\":\"Xor\",\"size\":1101}]},{\"name\":\"scale\",\"children\":[{\"name\":\"IScaleMap\",\"size\":2105},{\"name\":\"LinearScale\",\"size\":1316},{\"name\":\"LogScale\",\"size\":3151},{\"name\":\"OrdinalScale\",\"size\":3770},{\"name\":\"QuantileScale\",\"size\":2435},{\"name\":\"QuantitativeScale\",\"size\":4839},{\"name\":\"RootScale\",\"size\":1756},{\"name\":\"Scale\",\"size\":4268},{\"name\":\"ScaleType\",\"size\":1821},{\"name\":\"TimeScale\",\"size\":5833}]},{\"name\":\"util\",\"children\":[{\"name\":\"Arrays\",\"size\":8258},{\"name\":\"Colors\",\"size\":10001},{\"name\":\"Dates\",\"size\":8217},{\"name\":\"Displays\",\"size\":12555},{\"name\":\"Filter\",\"size\":2324},{\"name\":\"Geometry\",\"size\":10993},{\"name\":\"heap\",\"children\":[{\"name\":\"FibonacciHeap\",\"size\":9354},{\"name\":\"HeapNode\",\"size\":1233}]},{\"name\":\"IEvaluable\",\"size\":335},{\"name\":\"IPredicate\",\"size\":383},{\"name\":\"IValueProxy\",\"size\":874},{\"name\":\"math\",\"children\":[{\"name\":\"DenseMatrix\",\"size\":3165},{\"name\":\"IMatrix\",\"size\":2815},{\"name\":\"SparseMatrix\",\"size\":3366}]},{\"name\":\"Maths\",\"size\":17705},{\"name\":\"Orientation\",\"size\":1486},{\"name\":\"palette\",\"children\":[{\"name\":\"ColorPalette\",\"size\":6367},{\"name\":\"Palette\",\"size\":1229},{\"name\":\"ShapePalette\",\"size\":2059},{\"name\":\"SizePalette\",\"size\":2291}]},{\"name\":\"Property\",\"size\":5559},{\"name\":\"Shapes\",\"size\":19118},{\"name\":\"Sort\",\"size\":6887},{\"name\":\"Stats\",\"size\":6557},{\"name\":\"Strings\",\"size\":22026}]},{\"name\":\"vis\",\"children\":[{\"name\":\"axis\",\"children\":[{\"name\":\"Axes\",\"size\":1302},{\"name\":\"Axis\",\"size\":24593},{\"name\":\"AxisGridLine\",\"size\":652},{\"name\":\"AxisLabel\",\"size\":636},{\"name\":\"CartesianAxes\",\"size\":6703}]},{\"name\":\"controls\",\"children\":[{\"name\":\"AnchorControl\",\"size\":2138},{\"name\":\"ClickControl\",\"size\":3824},{\"name\":\"Control\",\"size\":1353},{\"name\":\"ControlList\",\"size\":4665},{\"name\":\"DragControl\",\"size\":2649},{\"name\":\"ExpandControl\",\"size\":2832},{\"name\":\"HoverControl\",\"size\":4896},{\"name\":\"IControl\",\"size\":763},{\"name\":\"PanZoomControl\",\"size\":5222},{\"name\":\"SelectionControl\",\"size\":7862},{\"name\":\"TooltipControl\",\"size\":8435}]},{\"name\":\"data\",\"children\":[{\"name\":\"Data\",\"size\":20544},{\"name\":\"DataList\",\"size\":19788},{\"name\":\"DataSprite\",\"size\":10349},{\"name\":\"EdgeSprite\",\"size\":3301},{\"name\":\"NodeSprite\",\"size\":19382},{\"name\":\"render\",\"children\":[{\"name\":\"ArrowType\",\"size\":698},{\"name\":\"EdgeRenderer\",\"size\":5569},{\"name\":\"IRenderer\",\"size\":353},{\"name\":\"ShapeRenderer\",\"size\":2247}]},{\"name\":\"ScaleBinding\",\"size\":11275},{\"name\":\"Tree\",\"size\":7147},{\"name\":\"TreeBuilder\",\"size\":9930}]},{\"name\":\"events\",\"children\":[{\"name\":\"DataEvent\",\"size\":2313},{\"name\":\"SelectionEvent\",\"size\":1880},{\"name\":\"TooltipEvent\",\"size\":1701},{\"name\":\"VisualizationEvent\",\"size\":1117}]},{\"name\":\"legend\",\"children\":[{\"name\":\"Legend\",\"size\":20859},{\"name\":\"LegendItem\",\"size\":4614},{\"name\":\"LegendRange\",\"size\":10530}]},{\"name\":\"operator\",\"children\":[{\"name\":\"distortion\",\"children\":[{\"name\":\"BifocalDistortion\",\"size\":4461},{\"name\":\"Distortion\",\"size\":6314},{\"name\":\"FisheyeDistortion\",\"size\":3444}]},{\"name\":\"encoder\",\"children\":[{\"name\":\"ColorEncoder\",\"size\":3179},{\"name\":\"Encoder\",\"size\":4060},{\"name\":\"PropertyEncoder\",\"size\":4138},{\"name\":\"ShapeEncoder\",\"size\":1690},{\"name\":\"SizeEncoder\",\"size\":1830}]},{\"name\":\"filter\",\"children\":[{\"name\":\"FisheyeTreeFilter\",\"size\":5219},{\"name\":\"GraphDistanceFilter\",\"size\":3165},{\"name\":\"VisibilityFilter\",\"size\":3509}]},{\"name\":\"IOperator\",\"size\":1286},{\"name\":\"label\",\"children\":[{\"name\":\"Labeler\",\"size\":9956},{\"name\":\"RadialLabeler\",\"size\":3899},{\"name\":\"StackedAreaLabeler\",\"size\":3202}]},{\"name\":\"layout\",\"children\":[{\"name\":\"AxisLayout\",\"size\":6725},{\"name\":\"BundledEdgeRouter\",\"size\":3727},{\"name\":\"CircleLayout\",\"size\":9317},{\"name\":\"CirclePackingLayout\",\"size\":12003},{\"name\":\"DendrogramLayout\",\"size\":4853},{\"name\":\"ForceDirectedLayout\",\"size\":8411},{\"name\":\"IcicleTreeLayout\",\"size\":4864},{\"name\":\"IndentedTreeLayout\",\"size\":3174},{\"name\":\"Layout\",\"size\":7881},{\"name\":\"NodeLinkTreeLayout\",\"size\":12870},{\"name\":\"PieLayout\",\"size\":2728},{\"name\":\"RadialTreeLayout\",\"size\":12348},{\"name\":\"RandomLayout\",\"size\":870},{\"name\":\"StackedAreaLayout\",\"size\":9121},{\"name\":\"TreeMapLayout\",\"size\":9191}]},{\"name\":\"Operator\",\"size\":2490},{\"name\":\"OperatorList\",\"size\":5248},{\"name\":\"OperatorSequence\",\"size\":4190},{\"name\":\"OperatorSwitch\",\"size\":2581},{\"name\":\"SortOperator\",\"size\":2023}]},{\"name\":\"Visualization\",\"size\":16540}]}]}",
"options": {
 "type": "pack.flattened",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-1301" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-1301">{ "x": {
 "root": "{\"name\":\"flare\",\"children\":[{\"name\":\"analytics\",\"children\":[{\"name\":\"cluster\",\"children\":[{\"name\":\"AgglomerativeCluster\",\"size\":3938},{\"name\":\"CommunityStructure\",\"size\":3812},{\"name\":\"HierarchicalCluster\",\"size\":6714},{\"name\":\"MergeEdge\",\"size\":743}]},{\"name\":\"graph\",\"children\":[{\"name\":\"BetweennessCentrality\",\"size\":3534},{\"name\":\"LinkDistance\",\"size\":5731},{\"name\":\"MaxFlowMinCut\",\"size\":7840},{\"name\":\"ShortestPaths\",\"size\":5914},{\"name\":\"SpanningTree\",\"size\":3416}]},{\"name\":\"optimization\",\"children\":[{\"name\":\"AspectRatioBanker\",\"size\":7074}]}]},{\"name\":\"animate\",\"children\":[{\"name\":\"Easing\",\"size\":17010},{\"name\":\"FunctionSequence\",\"size\":5842},{\"name\":\"interpolate\",\"children\":[{\"name\":\"ArrayInterpolator\",\"size\":1983},{\"name\":\"ColorInterpolator\",\"size\":2047},{\"name\":\"DateInterpolator\",\"size\":1375},{\"name\":\"Interpolator\",\"size\":8746},{\"name\":\"MatrixInterpolator\",\"size\":2202},{\"name\":\"NumberInterpolator\",\"size\":1382},{\"name\":\"ObjectInterpolator\",\"size\":1629},{\"name\":\"PointInterpolator\",\"size\":1675},{\"name\":\"RectangleInterpolator\",\"size\":2042}]},{\"name\":\"ISchedulable\",\"size\":1041},{\"name\":\"Parallel\",\"size\":5176},{\"name\":\"Pause\",\"size\":449},{\"name\":\"Scheduler\",\"size\":5593},{\"name\":\"Sequence\",\"size\":5534},{\"name\":\"Transition\",\"size\":9201},{\"name\":\"Transitioner\",\"size\":19975},{\"name\":\"TransitionEvent\",\"size\":1116},{\"name\":\"Tween\",\"size\":6006}]},{\"name\":\"data\",\"children\":[{\"name\":\"converters\",\"children\":[{\"name\":\"Converters\",\"size\":721},{\"name\":\"DelimitedTextConverter\",\"size\":4294},{\"name\":\"GraphMLConverter\",\"size\":9800},{\"name\":\"IDataConverter\",\"size\":1314},{\"name\":\"JSONConverter\",\"size\":2220}]},{\"name\":\"DataField\",\"size\":1759},{\"name\":\"DataSchema\",\"size\":2165},{\"name\":\"DataSet\",\"size\":586},{\"name\":\"DataSource\",\"size\":3331},{\"name\":\"DataTable\",\"size\":772},{\"name\":\"DataUtil\",\"size\":3322}]},{\"name\":\"display\",\"children\":[{\"name\":\"DirtySprite\",\"size\":8833},{\"name\":\"LineSprite\",\"size\":1732},{\"name\":\"RectSprite\",\"size\":3623},{\"name\":\"TextSprite\",\"size\":10066}]},{\"name\":\"flex\",\"children\":[{\"name\":\"FlareVis\",\"size\":4116}]},{\"name\":\"physics\",\"children\":[{\"name\":\"DragForce\",\"size\":1082},{\"name\":\"GravityForce\",\"size\":1336},{\"name\":\"IForce\",\"size\":319},{\"name\":\"NBodyForce\",\"size\":10498},{\"name\":\"Particle\",\"size\":2822},{\"name\":\"Simulation\",\"size\":9983},{\"name\":\"Spring\",\"size\":2213},{\"name\":\"SpringForce\",\"size\":1681}]},{\"name\":\"query\",\"children\":[{\"name\":\"AggregateExpression\",\"size\":1616},{\"name\":\"And\",\"size\":1027},{\"name\":\"Arithmetic\",\"size\":3891},{\"name\":\"Average\",\"size\":891},{\"name\":\"BinaryExpression\",\"size\":2893},{\"name\":\"Comparison\",\"size\":5103},{\"name\":\"CompositeExpression\",\"size\":3677},{\"name\":\"Count\",\"size\":781},{\"name\":\"DateUtil\",\"size\":4141},{\"name\":\"Distinct\",\"size\":933},{\"name\":\"Expression\",\"size\":5130},{\"name\":\"ExpressionIterator\",\"size\":3617},{\"name\":\"Fn\",\"size\":3240},{\"name\":\"If\",\"size\":2732},{\"name\":\"IsA\",\"size\":2039},{\"name\":\"Literal\",\"size\":1214},{\"name\":\"Match\",\"size\":3748},{\"name\":\"Maximum\",\"size\":843},{\"name\":\"methods\",\"children\":[{\"name\":\"add\",\"size\":593},{\"name\":\"and\",\"size\":330},{\"name\":\"average\",\"size\":287},{\"name\":\"count\",\"size\":277},{\"name\":\"distinct\",\"size\":292},{\"name\":\"div\",\"size\":595},{\"name\":\"eq\",\"size\":594},{\"name\":\"fn\",\"size\":460},{\"name\":\"gt\",\"size\":603},{\"name\":\"gte\",\"size\":625},{\"name\":\"iff\",\"size\":748},{\"name\":\"isa\",\"size\":461},{\"name\":\"lt\",\"size\":597},{\"name\":\"lte\",\"size\":619},{\"name\":\"max\",\"size\":283},{\"name\":\"min\",\"size\":283},{\"name\":\"mod\",\"size\":591},{\"name\":\"mul\",\"size\":603},{\"name\":\"neq\",\"size\":599},{\"name\":\"not\",\"size\":386},{\"name\":\"or\",\"size\":323},{\"name\":\"orderby\",\"size\":307},{\"name\":\"range\",\"size\":772},{\"name\":\"select\",\"size\":296},{\"name\":\"stddev\",\"size\":363},{\"name\":\"sub\",\"size\":600},{\"name\":\"sum\",\"size\":280},{\"name\":\"update\",\"size\":307},{\"name\":\"variance\",\"size\":335},{\"name\":\"where\",\"size\":299},{\"name\":\"xor\",\"size\":354},{\"name\":\"_\",\"size\":264}]},{\"name\":\"Minimum\",\"size\":843},{\"name\":\"Not\",\"size\":1554},{\"name\":\"Or\",\"size\":970},{\"name\":\"Query\",\"size\":13896},{\"name\":\"Range\",\"size\":1594},{\"name\":\"StringUtil\",\"size\":4130},{\"name\":\"Sum\",\"size\":791},{\"name\":\"Variable\",\"size\":1124},{\"name\":\"Variance\",\"size\":1876},{\"name\":\"Xor\",\"size\":1101}]},{\"name\":\"scale\",\"children\":[{\"name\":\"IScaleMap\",\"size\":2105},{\"name\":\"LinearScale\",\"size\":1316},{\"name\":\"LogScale\",\"size\":3151},{\"name\":\"OrdinalScale\",\"size\":3770},{\"name\":\"QuantileScale\",\"size\":2435},{\"name\":\"QuantitativeScale\",\"size\":4839},{\"name\":\"RootScale\",\"size\":1756},{\"name\":\"Scale\",\"size\":4268},{\"name\":\"ScaleType\",\"size\":1821},{\"name\":\"TimeScale\",\"size\":5833}]},{\"name\":\"util\",\"children\":[{\"name\":\"Arrays\",\"size\":8258},{\"name\":\"Colors\",\"size\":10001},{\"name\":\"Dates\",\"size\":8217},{\"name\":\"Displays\",\"size\":12555},{\"name\":\"Filter\",\"size\":2324},{\"name\":\"Geometry\",\"size\":10993},{\"name\":\"heap\",\"children\":[{\"name\":\"FibonacciHeap\",\"size\":9354},{\"name\":\"HeapNode\",\"size\":1233}]},{\"name\":\"IEvaluable\",\"size\":335},{\"name\":\"IPredicate\",\"size\":383},{\"name\":\"IValueProxy\",\"size\":874},{\"name\":\"math\",\"children\":[{\"name\":\"DenseMatrix\",\"size\":3165},{\"name\":\"IMatrix\",\"size\":2815},{\"name\":\"SparseMatrix\",\"size\":3366}]},{\"name\":\"Maths\",\"size\":17705},{\"name\":\"Orientation\",\"size\":1486},{\"name\":\"palette\",\"children\":[{\"name\":\"ColorPalette\",\"size\":6367},{\"name\":\"Palette\",\"size\":1229},{\"name\":\"ShapePalette\",\"size\":2059},{\"name\":\"SizePalette\",\"size\":2291}]},{\"name\":\"Property\",\"size\":5559},{\"name\":\"Shapes\",\"size\":19118},{\"name\":\"Sort\",\"size\":6887},{\"name\":\"Stats\",\"size\":6557},{\"name\":\"Strings\",\"size\":22026}]},{\"name\":\"vis\",\"children\":[{\"name\":\"axis\",\"children\":[{\"name\":\"Axes\",\"size\":1302},{\"name\":\"Axis\",\"size\":24593},{\"name\":\"AxisGridLine\",\"size\":652},{\"name\":\"AxisLabel\",\"size\":636},{\"name\":\"CartesianAxes\",\"size\":6703}]},{\"name\":\"controls\",\"children\":[{\"name\":\"AnchorControl\",\"size\":2138},{\"name\":\"ClickControl\",\"size\":3824},{\"name\":\"Control\",\"size\":1353},{\"name\":\"ControlList\",\"size\":4665},{\"name\":\"DragControl\",\"size\":2649},{\"name\":\"ExpandControl\",\"size\":2832},{\"name\":\"HoverControl\",\"size\":4896},{\"name\":\"IControl\",\"size\":763},{\"name\":\"PanZoomControl\",\"size\":5222},{\"name\":\"SelectionControl\",\"size\":7862},{\"name\":\"TooltipControl\",\"size\":8435}]},{\"name\":\"data\",\"children\":[{\"name\":\"Data\",\"size\":20544},{\"name\":\"DataList\",\"size\":19788},{\"name\":\"DataSprite\",\"size\":10349},{\"name\":\"EdgeSprite\",\"size\":3301},{\"name\":\"NodeSprite\",\"size\":19382},{\"name\":\"render\",\"children\":[{\"name\":\"ArrowType\",\"size\":698},{\"name\":\"EdgeRenderer\",\"size\":5569},{\"name\":\"IRenderer\",\"size\":353},{\"name\":\"ShapeRenderer\",\"size\":2247}]},{\"name\":\"ScaleBinding\",\"size\":11275},{\"name\":\"Tree\",\"size\":7147},{\"name\":\"TreeBuilder\",\"size\":9930}]},{\"name\":\"events\",\"children\":[{\"name\":\"DataEvent\",\"size\":2313},{\"name\":\"SelectionEvent\",\"size\":1880},{\"name\":\"TooltipEvent\",\"size\":1701},{\"name\":\"VisualizationEvent\",\"size\":1117}]},{\"name\":\"legend\",\"children\":[{\"name\":\"Legend\",\"size\":20859},{\"name\":\"LegendItem\",\"size\":4614},{\"name\":\"LegendRange\",\"size\":10530}]},{\"name\":\"operator\",\"children\":[{\"name\":\"distortion\",\"children\":[{\"name\":\"BifocalDistortion\",\"size\":4461},{\"name\":\"Distortion\",\"size\":6314},{\"name\":\"FisheyeDistortion\",\"size\":3444}]},{\"name\":\"encoder\",\"children\":[{\"name\":\"ColorEncoder\",\"size\":3179},{\"name\":\"Encoder\",\"size\":4060},{\"name\":\"PropertyEncoder\",\"size\":4138},{\"name\":\"ShapeEncoder\",\"size\":1690},{\"name\":\"SizeEncoder\",\"size\":1830}]},{\"name\":\"filter\",\"children\":[{\"name\":\"FisheyeTreeFilter\",\"size\":5219},{\"name\":\"GraphDistanceFilter\",\"size\":3165},{\"name\":\"VisibilityFilter\",\"size\":3509}]},{\"name\":\"IOperator\",\"size\":1286},{\"name\":\"label\",\"children\":[{\"name\":\"Labeler\",\"size\":9956},{\"name\":\"RadialLabeler\",\"size\":3899},{\"name\":\"StackedAreaLabeler\",\"size\":3202}]},{\"name\":\"layout\",\"children\":[{\"name\":\"AxisLayout\",\"size\":6725},{\"name\":\"BundledEdgeRouter\",\"size\":3727},{\"name\":\"CircleLayout\",\"size\":9317},{\"name\":\"CirclePackingLayout\",\"size\":12003},{\"name\":\"DendrogramLayout\",\"size\":4853},{\"name\":\"ForceDirectedLayout\",\"size\":8411},{\"name\":\"IcicleTreeLayout\",\"size\":4864},{\"name\":\"IndentedTreeLayout\",\"size\":3174},{\"name\":\"Layout\",\"size\":7881},{\"name\":\"NodeLinkTreeLayout\",\"size\":12870},{\"name\":\"PieLayout\",\"size\":2728},{\"name\":\"RadialTreeLayout\",\"size\":12348},{\"name\":\"RandomLayout\",\"size\":870},{\"name\":\"StackedAreaLayout\",\"size\":9121},{\"name\":\"TreeMapLayout\",\"size\":9191}]},{\"name\":\"Operator\",\"size\":2490},{\"name\":\"OperatorList\",\"size\":5248},{\"name\":\"OperatorSequence\",\"size\":4190},{\"name\":\"OperatorSwitch\",\"size\":2581},{\"name\":\"SortOperator\",\"size\":2023}]},{\"name\":\"Visualization\",\"size\":16540}]}]}",
"options": {
 "type": "partition.arc",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-876" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-876">{ "x": {
 "root": "{\"name\":\"flare\",\"children\":[{\"name\":\"analytics\",\"children\":[{\"name\":\"cluster\",\"children\":[{\"name\":\"AgglomerativeCluster\",\"size\":3938},{\"name\":\"CommunityStructure\",\"size\":3812},{\"name\":\"HierarchicalCluster\",\"size\":6714},{\"name\":\"MergeEdge\",\"size\":743}]},{\"name\":\"graph\",\"children\":[{\"name\":\"BetweennessCentrality\",\"size\":3534},{\"name\":\"LinkDistance\",\"size\":5731},{\"name\":\"MaxFlowMinCut\",\"size\":7840},{\"name\":\"ShortestPaths\",\"size\":5914},{\"name\":\"SpanningTree\",\"size\":3416}]},{\"name\":\"optimization\",\"children\":[{\"name\":\"AspectRatioBanker\",\"size\":7074}]}]},{\"name\":\"animate\",\"children\":[{\"name\":\"Easing\",\"size\":17010},{\"name\":\"FunctionSequence\",\"size\":5842},{\"name\":\"interpolate\",\"children\":[{\"name\":\"ArrayInterpolator\",\"size\":1983},{\"name\":\"ColorInterpolator\",\"size\":2047},{\"name\":\"DateInterpolator\",\"size\":1375},{\"name\":\"Interpolator\",\"size\":8746},{\"name\":\"MatrixInterpolator\",\"size\":2202},{\"name\":\"NumberInterpolator\",\"size\":1382},{\"name\":\"ObjectInterpolator\",\"size\":1629},{\"name\":\"PointInterpolator\",\"size\":1675},{\"name\":\"RectangleInterpolator\",\"size\":2042}]},{\"name\":\"ISchedulable\",\"size\":1041},{\"name\":\"Parallel\",\"size\":5176},{\"name\":\"Pause\",\"size\":449},{\"name\":\"Scheduler\",\"size\":5593},{\"name\":\"Sequence\",\"size\":5534},{\"name\":\"Transition\",\"size\":9201},{\"name\":\"Transitioner\",\"size\":19975},{\"name\":\"TransitionEvent\",\"size\":1116},{\"name\":\"Tween\",\"size\":6006}]},{\"name\":\"data\",\"children\":[{\"name\":\"converters\",\"children\":[{\"name\":\"Converters\",\"size\":721},{\"name\":\"DelimitedTextConverter\",\"size\":4294},{\"name\":\"GraphMLConverter\",\"size\":9800},{\"name\":\"IDataConverter\",\"size\":1314},{\"name\":\"JSONConverter\",\"size\":2220}]},{\"name\":\"DataField\",\"size\":1759},{\"name\":\"DataSchema\",\"size\":2165},{\"name\":\"DataSet\",\"size\":586},{\"name\":\"DataSource\",\"size\":3331},{\"name\":\"DataTable\",\"size\":772},{\"name\":\"DataUtil\",\"size\":3322}]},{\"name\":\"display\",\"children\":[{\"name\":\"DirtySprite\",\"size\":8833},{\"name\":\"LineSprite\",\"size\":1732},{\"name\":\"RectSprite\",\"size\":3623},{\"name\":\"TextSprite\",\"size\":10066}]},{\"name\":\"flex\",\"children\":[{\"name\":\"FlareVis\",\"size\":4116}]},{\"name\":\"physics\",\"children\":[{\"name\":\"DragForce\",\"size\":1082},{\"name\":\"GravityForce\",\"size\":1336},{\"name\":\"IForce\",\"size\":319},{\"name\":\"NBodyForce\",\"size\":10498},{\"name\":\"Particle\",\"size\":2822},{\"name\":\"Simulation\",\"size\":9983},{\"name\":\"Spring\",\"size\":2213},{\"name\":\"SpringForce\",\"size\":1681}]},{\"name\":\"query\",\"children\":[{\"name\":\"AggregateExpression\",\"size\":1616},{\"name\":\"And\",\"size\":1027},{\"name\":\"Arithmetic\",\"size\":3891},{\"name\":\"Average\",\"size\":891},{\"name\":\"BinaryExpression\",\"size\":2893},{\"name\":\"Comparison\",\"size\":5103},{\"name\":\"CompositeExpression\",\"size\":3677},{\"name\":\"Count\",\"size\":781},{\"name\":\"DateUtil\",\"size\":4141},{\"name\":\"Distinct\",\"size\":933},{\"name\":\"Expression\",\"size\":5130},{\"name\":\"ExpressionIterator\",\"size\":3617},{\"name\":\"Fn\",\"size\":3240},{\"name\":\"If\",\"size\":2732},{\"name\":\"IsA\",\"size\":2039},{\"name\":\"Literal\",\"size\":1214},{\"name\":\"Match\",\"size\":3748},{\"name\":\"Maximum\",\"size\":843},{\"name\":\"methods\",\"children\":[{\"name\":\"add\",\"size\":593},{\"name\":\"and\",\"size\":330},{\"name\":\"average\",\"size\":287},{\"name\":\"count\",\"size\":277},{\"name\":\"distinct\",\"size\":292},{\"name\":\"div\",\"size\":595},{\"name\":\"eq\",\"size\":594},{\"name\":\"fn\",\"size\":460},{\"name\":\"gt\",\"size\":603},{\"name\":\"gte\",\"size\":625},{\"name\":\"iff\",\"size\":748},{\"name\":\"isa\",\"size\":461},{\"name\":\"lt\",\"size\":597},{\"name\":\"lte\",\"size\":619},{\"name\":\"max\",\"size\":283},{\"name\":\"min\",\"size\":283},{\"name\":\"mod\",\"size\":591},{\"name\":\"mul\",\"size\":603},{\"name\":\"neq\",\"size\":599},{\"name\":\"not\",\"size\":386},{\"name\":\"or\",\"size\":323},{\"name\":\"orderby\",\"size\":307},{\"name\":\"range\",\"size\":772},{\"name\":\"select\",\"size\":296},{\"name\":\"stddev\",\"size\":363},{\"name\":\"sub\",\"size\":600},{\"name\":\"sum\",\"size\":280},{\"name\":\"update\",\"size\":307},{\"name\":\"variance\",\"size\":335},{\"name\":\"where\",\"size\":299},{\"name\":\"xor\",\"size\":354},{\"name\":\"_\",\"size\":264}]},{\"name\":\"Minimum\",\"size\":843},{\"name\":\"Not\",\"size\":1554},{\"name\":\"Or\",\"size\":970},{\"name\":\"Query\",\"size\":13896},{\"name\":\"Range\",\"size\":1594},{\"name\":\"StringUtil\",\"size\":4130},{\"name\":\"Sum\",\"size\":791},{\"name\":\"Variable\",\"size\":1124},{\"name\":\"Variance\",\"size\":1876},{\"name\":\"Xor\",\"size\":1101}]},{\"name\":\"scale\",\"children\":[{\"name\":\"IScaleMap\",\"size\":2105},{\"name\":\"LinearScale\",\"size\":1316},{\"name\":\"LogScale\",\"size\":3151},{\"name\":\"OrdinalScale\",\"size\":3770},{\"name\":\"QuantileScale\",\"size\":2435},{\"name\":\"QuantitativeScale\",\"size\":4839},{\"name\":\"RootScale\",\"size\":1756},{\"name\":\"Scale\",\"size\":4268},{\"name\":\"ScaleType\",\"size\":1821},{\"name\":\"TimeScale\",\"size\":5833}]},{\"name\":\"util\",\"children\":[{\"name\":\"Arrays\",\"size\":8258},{\"name\":\"Colors\",\"size\":10001},{\"name\":\"Dates\",\"size\":8217},{\"name\":\"Displays\",\"size\":12555},{\"name\":\"Filter\",\"size\":2324},{\"name\":\"Geometry\",\"size\":10993},{\"name\":\"heap\",\"children\":[{\"name\":\"FibonacciHeap\",\"size\":9354},{\"name\":\"HeapNode\",\"size\":1233}]},{\"name\":\"IEvaluable\",\"size\":335},{\"name\":\"IPredicate\",\"size\":383},{\"name\":\"IValueProxy\",\"size\":874},{\"name\":\"math\",\"children\":[{\"name\":\"DenseMatrix\",\"size\":3165},{\"name\":\"IMatrix\",\"size\":2815},{\"name\":\"SparseMatrix\",\"size\":3366}]},{\"name\":\"Maths\",\"size\":17705},{\"name\":\"Orientation\",\"size\":1486},{\"name\":\"palette\",\"children\":[{\"name\":\"ColorPalette\",\"size\":6367},{\"name\":\"Palette\",\"size\":1229},{\"name\":\"ShapePalette\",\"size\":2059},{\"name\":\"SizePalette\",\"size\":2291}]},{\"name\":\"Property\",\"size\":5559},{\"name\":\"Shapes\",\"size\":19118},{\"name\":\"Sort\",\"size\":6887},{\"name\":\"Stats\",\"size\":6557},{\"name\":\"Strings\",\"size\":22026}]},{\"name\":\"vis\",\"children\":[{\"name\":\"axis\",\"children\":[{\"name\":\"Axes\",\"size\":1302},{\"name\":\"Axis\",\"size\":24593},{\"name\":\"AxisGridLine\",\"size\":652},{\"name\":\"AxisLabel\",\"size\":636},{\"name\":\"CartesianAxes\",\"size\":6703}]},{\"name\":\"controls\",\"children\":[{\"name\":\"AnchorControl\",\"size\":2138},{\"name\":\"ClickControl\",\"size\":3824},{\"name\":\"Control\",\"size\":1353},{\"name\":\"ControlList\",\"size\":4665},{\"name\":\"DragControl\",\"size\":2649},{\"name\":\"ExpandControl\",\"size\":2832},{\"name\":\"HoverControl\",\"size\":4896},{\"name\":\"IControl\",\"size\":763},{\"name\":\"PanZoomControl\",\"size\":5222},{\"name\":\"SelectionControl\",\"size\":7862},{\"name\":\"TooltipControl\",\"size\":8435}]},{\"name\":\"data\",\"children\":[{\"name\":\"Data\",\"size\":20544},{\"name\":\"DataList\",\"size\":19788},{\"name\":\"DataSprite\",\"size\":10349},{\"name\":\"EdgeSprite\",\"size\":3301},{\"name\":\"NodeSprite\",\"size\":19382},{\"name\":\"render\",\"children\":[{\"name\":\"ArrowType\",\"size\":698},{\"name\":\"EdgeRenderer\",\"size\":5569},{\"name\":\"IRenderer\",\"size\":353},{\"name\":\"ShapeRenderer\",\"size\":2247}]},{\"name\":\"ScaleBinding\",\"size\":11275},{\"name\":\"Tree\",\"size\":7147},{\"name\":\"TreeBuilder\",\"size\":9930}]},{\"name\":\"events\",\"children\":[{\"name\":\"DataEvent\",\"size\":2313},{\"name\":\"SelectionEvent\",\"size\":1880},{\"name\":\"TooltipEvent\",\"size\":1701},{\"name\":\"VisualizationEvent\",\"size\":1117}]},{\"name\":\"legend\",\"children\":[{\"name\":\"Legend\",\"size\":20859},{\"name\":\"LegendItem\",\"size\":4614},{\"name\":\"LegendRange\",\"size\":10530}]},{\"name\":\"operator\",\"children\":[{\"name\":\"distortion\",\"children\":[{\"name\":\"BifocalDistortion\",\"size\":4461},{\"name\":\"Distortion\",\"size\":6314},{\"name\":\"FisheyeDistortion\",\"size\":3444}]},{\"name\":\"encoder\",\"children\":[{\"name\":\"ColorEncoder\",\"size\":3179},{\"name\":\"Encoder\",\"size\":4060},{\"name\":\"PropertyEncoder\",\"size\":4138},{\"name\":\"ShapeEncoder\",\"size\":1690},{\"name\":\"SizeEncoder\",\"size\":1830}]},{\"name\":\"filter\",\"children\":[{\"name\":\"FisheyeTreeFilter\",\"size\":5219},{\"name\":\"GraphDistanceFilter\",\"size\":3165},{\"name\":\"VisibilityFilter\",\"size\":3509}]},{\"name\":\"IOperator\",\"size\":1286},{\"name\":\"label\",\"children\":[{\"name\":\"Labeler\",\"size\":9956},{\"name\":\"RadialLabeler\",\"size\":3899},{\"name\":\"StackedAreaLabeler\",\"size\":3202}]},{\"name\":\"layout\",\"children\":[{\"name\":\"AxisLayout\",\"size\":6725},{\"name\":\"BundledEdgeRouter\",\"size\":3727},{\"name\":\"CircleLayout\",\"size\":9317},{\"name\":\"CirclePackingLayout\",\"size\":12003},{\"name\":\"DendrogramLayout\",\"size\":4853},{\"name\":\"ForceDirectedLayout\",\"size\":8411},{\"name\":\"IcicleTreeLayout\",\"size\":4864},{\"name\":\"IndentedTreeLayout\",\"size\":3174},{\"name\":\"Layout\",\"size\":7881},{\"name\":\"NodeLinkTreeLayout\",\"size\":12870},{\"name\":\"PieLayout\",\"size\":2728},{\"name\":\"RadialTreeLayout\",\"size\":12348},{\"name\":\"RandomLayout\",\"size\":870},{\"name\":\"StackedAreaLayout\",\"size\":9121},{\"name\":\"TreeMapLayout\",\"size\":9191}]},{\"name\":\"Operator\",\"size\":2490},{\"name\":\"OperatorList\",\"size\":5248},{\"name\":\"OperatorSequence\",\"size\":4190},{\"name\":\"OperatorSwitch\",\"size\":2581},{\"name\":\"SortOperator\",\"size\":2023}]},{\"name\":\"Visualization\",\"size\":16540}]}]}",
"options": {
 "type": "partition.rectangle",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
<div id="htmlwidget-2889" style="width:960px;height:500px;" class="hierNetwork"></div>
<script type="application/json" data-for="htmlwidget-2889">{ "x": {
 "root": "{\"name\":\"flare\",\"children\":[{\"name\":\"analytics\",\"children\":[{\"name\":\"cluster\",\"children\":[{\"name\":\"AgglomerativeCluster\",\"size\":3938},{\"name\":\"CommunityStructure\",\"size\":3812},{\"name\":\"HierarchicalCluster\",\"size\":6714},{\"name\":\"MergeEdge\",\"size\":743}]},{\"name\":\"graph\",\"children\":[{\"name\":\"BetweennessCentrality\",\"size\":3534},{\"name\":\"LinkDistance\",\"size\":5731},{\"name\":\"MaxFlowMinCut\",\"size\":7840},{\"name\":\"ShortestPaths\",\"size\":5914},{\"name\":\"SpanningTree\",\"size\":3416}]},{\"name\":\"optimization\",\"children\":[{\"name\":\"AspectRatioBanker\",\"size\":7074}]}]},{\"name\":\"animate\",\"children\":[{\"name\":\"Easing\",\"size\":17010},{\"name\":\"FunctionSequence\",\"size\":5842},{\"name\":\"interpolate\",\"children\":[{\"name\":\"ArrayInterpolator\",\"size\":1983},{\"name\":\"ColorInterpolator\",\"size\":2047},{\"name\":\"DateInterpolator\",\"size\":1375},{\"name\":\"Interpolator\",\"size\":8746},{\"name\":\"MatrixInterpolator\",\"size\":2202},{\"name\":\"NumberInterpolator\",\"size\":1382},{\"name\":\"ObjectInterpolator\",\"size\":1629},{\"name\":\"PointInterpolator\",\"size\":1675},{\"name\":\"RectangleInterpolator\",\"size\":2042}]},{\"name\":\"ISchedulable\",\"size\":1041},{\"name\":\"Parallel\",\"size\":5176},{\"name\":\"Pause\",\"size\":449},{\"name\":\"Scheduler\",\"size\":5593},{\"name\":\"Sequence\",\"size\":5534},{\"name\":\"Transition\",\"size\":9201},{\"name\":\"Transitioner\",\"size\":19975},{\"name\":\"TransitionEvent\",\"size\":1116},{\"name\":\"Tween\",\"size\":6006}]},{\"name\":\"data\",\"children\":[{\"name\":\"converters\",\"children\":[{\"name\":\"Converters\",\"size\":721},{\"name\":\"DelimitedTextConverter\",\"size\":4294},{\"name\":\"GraphMLConverter\",\"size\":9800},{\"name\":\"IDataConverter\",\"size\":1314},{\"name\":\"JSONConverter\",\"size\":2220}]},{\"name\":\"DataField\",\"size\":1759},{\"name\":\"DataSchema\",\"size\":2165},{\"name\":\"DataSet\",\"size\":586},{\"name\":\"DataSource\",\"size\":3331},{\"name\":\"DataTable\",\"size\":772},{\"name\":\"DataUtil\",\"size\":3322}]},{\"name\":\"display\",\"children\":[{\"name\":\"DirtySprite\",\"size\":8833},{\"name\":\"LineSprite\",\"size\":1732},{\"name\":\"RectSprite\",\"size\":3623},{\"name\":\"TextSprite\",\"size\":10066}]},{\"name\":\"flex\",\"children\":[{\"name\":\"FlareVis\",\"size\":4116}]},{\"name\":\"physics\",\"children\":[{\"name\":\"DragForce\",\"size\":1082},{\"name\":\"GravityForce\",\"size\":1336},{\"name\":\"IForce\",\"size\":319},{\"name\":\"NBodyForce\",\"size\":10498},{\"name\":\"Particle\",\"size\":2822},{\"name\":\"Simulation\",\"size\":9983},{\"name\":\"Spring\",\"size\":2213},{\"name\":\"SpringForce\",\"size\":1681}]},{\"name\":\"query\",\"children\":[{\"name\":\"AggregateExpression\",\"size\":1616},{\"name\":\"And\",\"size\":1027},{\"name\":\"Arithmetic\",\"size\":3891},{\"name\":\"Average\",\"size\":891},{\"name\":\"BinaryExpression\",\"size\":2893},{\"name\":\"Comparison\",\"size\":5103},{\"name\":\"CompositeExpression\",\"size\":3677},{\"name\":\"Count\",\"size\":781},{\"name\":\"DateUtil\",\"size\":4141},{\"name\":\"Distinct\",\"size\":933},{\"name\":\"Expression\",\"size\":5130},{\"name\":\"ExpressionIterator\",\"size\":3617},{\"name\":\"Fn\",\"size\":3240},{\"name\":\"If\",\"size\":2732},{\"name\":\"IsA\",\"size\":2039},{\"name\":\"Literal\",\"size\":1214},{\"name\":\"Match\",\"size\":3748},{\"name\":\"Maximum\",\"size\":843},{\"name\":\"methods\",\"children\":[{\"name\":\"add\",\"size\":593},{\"name\":\"and\",\"size\":330},{\"name\":\"average\",\"size\":287},{\"name\":\"count\",\"size\":277},{\"name\":\"distinct\",\"size\":292},{\"name\":\"div\",\"size\":595},{\"name\":\"eq\",\"size\":594},{\"name\":\"fn\",\"size\":460},{\"name\":\"gt\",\"size\":603},{\"name\":\"gte\",\"size\":625},{\"name\":\"iff\",\"size\":748},{\"name\":\"isa\",\"size\":461},{\"name\":\"lt\",\"size\":597},{\"name\":\"lte\",\"size\":619},{\"name\":\"max\",\"size\":283},{\"name\":\"min\",\"size\":283},{\"name\":\"mod\",\"size\":591},{\"name\":\"mul\",\"size\":603},{\"name\":\"neq\",\"size\":599},{\"name\":\"not\",\"size\":386},{\"name\":\"or\",\"size\":323},{\"name\":\"orderby\",\"size\":307},{\"name\":\"range\",\"size\":772},{\"name\":\"select\",\"size\":296},{\"name\":\"stddev\",\"size\":363},{\"name\":\"sub\",\"size\":600},{\"name\":\"sum\",\"size\":280},{\"name\":\"update\",\"size\":307},{\"name\":\"variance\",\"size\":335},{\"name\":\"where\",\"size\":299},{\"name\":\"xor\",\"size\":354},{\"name\":\"_\",\"size\":264}]},{\"name\":\"Minimum\",\"size\":843},{\"name\":\"Not\",\"size\":1554},{\"name\":\"Or\",\"size\":970},{\"name\":\"Query\",\"size\":13896},{\"name\":\"Range\",\"size\":1594},{\"name\":\"StringUtil\",\"size\":4130},{\"name\":\"Sum\",\"size\":791},{\"name\":\"Variable\",\"size\":1124},{\"name\":\"Variance\",\"size\":1876},{\"name\":\"Xor\",\"size\":1101}]},{\"name\":\"scale\",\"children\":[{\"name\":\"IScaleMap\",\"size\":2105},{\"name\":\"LinearScale\",\"size\":1316},{\"name\":\"LogScale\",\"size\":3151},{\"name\":\"OrdinalScale\",\"size\":3770},{\"name\":\"QuantileScale\",\"size\":2435},{\"name\":\"QuantitativeScale\",\"size\":4839},{\"name\":\"RootScale\",\"size\":1756},{\"name\":\"Scale\",\"size\":4268},{\"name\":\"ScaleType\",\"size\":1821},{\"name\":\"TimeScale\",\"size\":5833}]},{\"name\":\"util\",\"children\":[{\"name\":\"Arrays\",\"size\":8258},{\"name\":\"Colors\",\"size\":10001},{\"name\":\"Dates\",\"size\":8217},{\"name\":\"Displays\",\"size\":12555},{\"name\":\"Filter\",\"size\":2324},{\"name\":\"Geometry\",\"size\":10993},{\"name\":\"heap\",\"children\":[{\"name\":\"FibonacciHeap\",\"size\":9354},{\"name\":\"HeapNode\",\"size\":1233}]},{\"name\":\"IEvaluable\",\"size\":335},{\"name\":\"IPredicate\",\"size\":383},{\"name\":\"IValueProxy\",\"size\":874},{\"name\":\"math\",\"children\":[{\"name\":\"DenseMatrix\",\"size\":3165},{\"name\":\"IMatrix\",\"size\":2815},{\"name\":\"SparseMatrix\",\"size\":3366}]},{\"name\":\"Maths\",\"size\":17705},{\"name\":\"Orientation\",\"size\":1486},{\"name\":\"palette\",\"children\":[{\"name\":\"ColorPalette\",\"size\":6367},{\"name\":\"Palette\",\"size\":1229},{\"name\":\"ShapePalette\",\"size\":2059},{\"name\":\"SizePalette\",\"size\":2291}]},{\"name\":\"Property\",\"size\":5559},{\"name\":\"Shapes\",\"size\":19118},{\"name\":\"Sort\",\"size\":6887},{\"name\":\"Stats\",\"size\":6557},{\"name\":\"Strings\",\"size\":22026}]},{\"name\":\"vis\",\"children\":[{\"name\":\"axis\",\"children\":[{\"name\":\"Axes\",\"size\":1302},{\"name\":\"Axis\",\"size\":24593},{\"name\":\"AxisGridLine\",\"size\":652},{\"name\":\"AxisLabel\",\"size\":636},{\"name\":\"CartesianAxes\",\"size\":6703}]},{\"name\":\"controls\",\"children\":[{\"name\":\"AnchorControl\",\"size\":2138},{\"name\":\"ClickControl\",\"size\":3824},{\"name\":\"Control\",\"size\":1353},{\"name\":\"ControlList\",\"size\":4665},{\"name\":\"DragControl\",\"size\":2649},{\"name\":\"ExpandControl\",\"size\":2832},{\"name\":\"HoverControl\",\"size\":4896},{\"name\":\"IControl\",\"size\":763},{\"name\":\"PanZoomControl\",\"size\":5222},{\"name\":\"SelectionControl\",\"size\":7862},{\"name\":\"TooltipControl\",\"size\":8435}]},{\"name\":\"data\",\"children\":[{\"name\":\"Data\",\"size\":20544},{\"name\":\"DataList\",\"size\":19788},{\"name\":\"DataSprite\",\"size\":10349},{\"name\":\"EdgeSprite\",\"size\":3301},{\"name\":\"NodeSprite\",\"size\":19382},{\"name\":\"render\",\"children\":[{\"name\":\"ArrowType\",\"size\":698},{\"name\":\"EdgeRenderer\",\"size\":5569},{\"name\":\"IRenderer\",\"size\":353},{\"name\":\"ShapeRenderer\",\"size\":2247}]},{\"name\":\"ScaleBinding\",\"size\":11275},{\"name\":\"Tree\",\"size\":7147},{\"name\":\"TreeBuilder\",\"size\":9930}]},{\"name\":\"events\",\"children\":[{\"name\":\"DataEvent\",\"size\":2313},{\"name\":\"SelectionEvent\",\"size\":1880},{\"name\":\"TooltipEvent\",\"size\":1701},{\"name\":\"VisualizationEvent\",\"size\":1117}]},{\"name\":\"legend\",\"children\":[{\"name\":\"Legend\",\"size\":20859},{\"name\":\"LegendItem\",\"size\":4614},{\"name\":\"LegendRange\",\"size\":10530}]},{\"name\":\"operator\",\"children\":[{\"name\":\"distortion\",\"children\":[{\"name\":\"BifocalDistortion\",\"size\":4461},{\"name\":\"Distortion\",\"size\":6314},{\"name\":\"FisheyeDistortion\",\"size\":3444}]},{\"name\":\"encoder\",\"children\":[{\"name\":\"ColorEncoder\",\"size\":3179},{\"name\":\"Encoder\",\"size\":4060},{\"name\":\"PropertyEncoder\",\"size\":4138},{\"name\":\"ShapeEncoder\",\"size\":1690},{\"name\":\"SizeEncoder\",\"size\":1830}]},{\"name\":\"filter\",\"children\":[{\"name\":\"FisheyeTreeFilter\",\"size\":5219},{\"name\":\"GraphDistanceFilter\",\"size\":3165},{\"name\":\"VisibilityFilter\",\"size\":3509}]},{\"name\":\"IOperator\",\"size\":1286},{\"name\":\"label\",\"children\":[{\"name\":\"Labeler\",\"size\":9956},{\"name\":\"RadialLabeler\",\"size\":3899},{\"name\":\"StackedAreaLabeler\",\"size\":3202}]},{\"name\":\"layout\",\"children\":[{\"name\":\"AxisLayout\",\"size\":6725},{\"name\":\"BundledEdgeRouter\",\"size\":3727},{\"name\":\"CircleLayout\",\"size\":9317},{\"name\":\"CirclePackingLayout\",\"size\":12003},{\"name\":\"DendrogramLayout\",\"size\":4853},{\"name\":\"ForceDirectedLayout\",\"size\":8411},{\"name\":\"IcicleTreeLayout\",\"size\":4864},{\"name\":\"IndentedTreeLayout\",\"size\":3174},{\"name\":\"Layout\",\"size\":7881},{\"name\":\"NodeLinkTreeLayout\",\"size\":12870},{\"name\":\"PieLayout\",\"size\":2728},{\"name\":\"RadialTreeLayout\",\"size\":12348},{\"name\":\"RandomLayout\",\"size\":870},{\"name\":\"StackedAreaLayout\",\"size\":9121},{\"name\":\"TreeMapLayout\",\"size\":9191}]},{\"name\":\"Operator\",\"size\":2490},{\"name\":\"OperatorList\",\"size\":5248},{\"name\":\"OperatorSequence\",\"size\":4190},{\"name\":\"OperatorSwitch\",\"size\":2581},{\"name\":\"SortOperator\",\"size\":2023}]},{\"name\":\"Visualization\",\"size\":16540}]}]}",
"options": {
 "type": "treemap",
"value": "size",
"height": null,
"width": null,
"margin":                 0,
"zoomable": true,
"collapsible": true 
} 
},"evals": [  ] }</script>
</body>
</html><!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>rCharts with Slidify</title>
  <meta name="description" content="">
  <meta name="author" content="Ramnath Vaidyanathan">
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/css/reveal.min.css">
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/css/theme/solarized.css" id="theme">
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/highlight.js/css/tomorrow.css" id="theme">
  <!--[if lt IE 9]>
  <script src="lib/js/html5shiv.js"></script>
  <![endif]-->  <link rel="stylesheet" href = "assets/css/ribbons.css">

</head>
<body>
  <div class="reveal">
    <div class="slides">
      <section class='' data-state='' id='slide-1'>
  <h2>rCharts with Slidify</h2>
  
</section>
<section class='class' data-state='' id='id'>
  <h2>rPlot</h2>
  <pre><code class="r">library(rCharts)
r1 &lt;- rPlot(mpg ~ wt | gear, data = mtcars, type = &quot;point&quot;)
r1$print(&quot;chart1&quot;, include_assets = TRUE, cdn = TRUE)
</code></pre>

<script type='text/javascript' src=http://ramnathv.github.io/rCharts/libraries/widgets/polycharts/js/polychart2.standalone.js></script>

<div id = 'chart1' class = 'rChart polycharts'></div>

<script type='text/javascript'>
    var chartParams = {
 "dom": "chart1",
"width":    800,
"height":    400,
"layers": [
 {
 "x": "wt",
"y": "mpg",
"data": {
 "mpg": [     21,     21,   22.8,   21.4,   18.7,   18.1,   14.3,   24.4,   22.8,   19.2,   17.8,   16.4,   17.3,   15.2,   10.4,   10.4,   14.7,   32.4,   30.4,   33.9,   21.5,   15.5,   15.2,   13.3,   19.2,   27.3,     26,   30.4,   15.8,   19.7,     15,   21.4 ],
"cyl": [      6,      6,      4,      6,      8,      6,      8,      4,      4,      6,      6,      8,      8,      8,      8,      8,      8,      4,      4,      4,      4,      8,      8,      8,      8,      4,      4,      4,      8,      6,      8,      4 ],
"disp": [    160,    160,    108,    258,    360,    225,    360,  146.7,  140.8,  167.6,  167.6,  275.8,  275.8,  275.8,    472,    460,    440,   78.7,   75.7,   71.1,  120.1,    318,    304,    350,    400,     79,  120.3,   95.1,    351,    145,    301,    121 ],
"hp": [    110,    110,     93,    110,    175,    105,    245,     62,     95,    123,    123,    180,    180,    180,    205,    215,    230,     66,     52,     65,     97,    150,    150,    245,    175,     66,     91,    113,    264,    175,    335,    109 ],
"drat": [    3.9,    3.9,   3.85,   3.08,   3.15,   2.76,   3.21,   3.69,   3.92,   3.92,   3.92,   3.07,   3.07,   3.07,   2.93,      3,   3.23,   4.08,   4.93,   4.22,    3.7,   2.76,   3.15,   3.73,   3.08,   4.08,   4.43,   3.77,   4.22,   3.62,   3.54,   4.11 ],
"wt": [   2.62,  2.875,   2.32,  3.215,   3.44,   3.46,   3.57,   3.19,   3.15,   3.44,   3.44,   4.07,   3.73,   3.78,   5.25,  5.424,  5.345,    2.2,  1.615,  1.835,  2.465,   3.52,  3.435,   3.84,  3.845,  1.935,   2.14,  1.513,   3.17,   2.77,   3.57,   2.78 ],
"qsec": [  16.46,  17.02,  18.61,  19.44,  17.02,  20.22,  15.84,     20,   22.9,   18.3,   18.9,   17.4,   17.6,     18,  17.98,  17.82,  17.42,  19.47,  18.52,   19.9,  20.01,  16.87,   17.3,  15.41,  17.05,   18.9,   16.7,   16.9,   14.5,   15.5,   14.6,   18.6 ],
"vs": [      0,      0,      1,      1,      0,      1,      0,      1,      1,      1,      1,      0,      0,      0,      0,      0,      0,      1,      1,      1,      1,      0,      0,      0,      0,      1,      0,      1,      0,      0,      0,      1 ],
"am": [      1,      1,      1,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      1,      1,      1,      0,      0,      0,      0,      0,      1,      1,      1,      1,      1,      1,      1 ],
"gear": [      4,      4,      4,      3,      3,      3,      3,      4,      4,      4,      4,      3,      3,      3,      3,      3,      3,      4,      4,      4,      3,      3,      3,      3,      3,      4,      5,      5,      5,      5,      5,      4 ],
"carb": [      4,      4,      1,      1,      2,      1,      4,      2,      2,      4,      4,      3,      3,      3,      4,      4,      4,      1,      2,      1,      1,      2,      2,      4,      2,      1,      2,      2,      4,      6,      8,      2 ] 
},
"facet": "gear",
"type": "point" 
} 
],
"facet": {
 "type": "wrap",
"var": "gear" 
},
"guides": [],
"coord": [],
"id": "chart1" 
}
    _.each(chartParams.layers, function(el){
        el.data = polyjs.data(el.data)
    })
    var graph_chart1 = polyjs.chart(chartParams);
</script>

</section>
    </div>
  </div>
</body>
  <script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/lib/js/head.min.js"></script>
  <script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/js/reveal.min.js"></script>
  <script>
  // Full list of configuration options available here:
  // https://github.com/hakimel/reveal.js#configuration
  Reveal.initialize({
    controls: true,
    progress: true,
    history: true,
    center: true,
    theme: Reveal.getQueryHash().theme || 'solarized', 
    transition: Reveal.getQueryHash().transition || 'default', 
    dependencies: [
    // Cross-browser shim that fully implements classList -
    // https://github.com/eligrey/classList.js/
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/lib/js/classList.js', condition: function() { return !document.body.classList;}},
      // Zoom in and out with Alt+click
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      // Speaker notes
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
      // Remote control your reveal.js presentation using a touch device
      //{ src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]
  });
  </script>  <!-- LOAD HIGHLIGHTER JS FILES -->
<script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/highlight.js/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<!-- DONE LOADING HIGHLIGHTER JS FILES -->
 

</html><!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>rCharts with Slidify</title>
  <meta name="description" content="">
  <meta name="author" content="Ramnath Vaidyanathan">
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/css/reveal.min.css">
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/css/theme/solarized.css" id="theme">
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/highlight.js/css/tomorrow.css" id="theme">
  <!--[if lt IE 9]>
  <script src="lib/js/html5shiv.js"></script>
  <![endif]-->  <link rel="stylesheet" href = "assets/css/ribbons.css">

</head>
<body>
  <div class="reveal">
    <div class="slides">
      <section class='' data-state='' id='slide-1'>
  <h2>rCharts with Slidify</h2>
  
</section>
<section class='class' data-state='' id='id'>
  <h2>rPlot</h2>
  <pre><code class="r">library(rCharts)
r1 &lt;- rPlot(mpg ~ wt | gear, data = mtcars, type = &#39;point&#39;)
r1$print(&#39;chart1&#39;, include_assets = TRUE, cdn = TRUE)
</code></pre>

<script type='text/javascript' src=http://ramnathv.github.io/rCharts/libraries/widgets/polycharts/js/polychart2.standalone.js></script>

<div id = 'chart1' class = 'rChart polycharts'></div>

<script type='text/javascript'>
    var chartParams = {
 "dom": "chart1",
"width":    800,
"height":    400,
"layers": [
 {
 "x": "wt",
"y": "mpg",
"data": {
 "mpg": [     21,     21,   22.8,   21.4,   18.7,   18.1,   14.3,   24.4,   22.8,   19.2,   17.8,   16.4,   17.3,   15.2,   10.4,   10.4,   14.7,   32.4,   30.4,   33.9,   21.5,   15.5,   15.2,   13.3,   19.2,   27.3,     26,   30.4,   15.8,   19.7,     15,   21.4 ],
"cyl": [      6,      6,      4,      6,      8,      6,      8,      4,      4,      6,      6,      8,      8,      8,      8,      8,      8,      4,      4,      4,      4,      8,      8,      8,      8,      4,      4,      4,      8,      6,      8,      4 ],
"disp": [    160,    160,    108,    258,    360,    225,    360,  146.7,  140.8,  167.6,  167.6,  275.8,  275.8,  275.8,    472,    460,    440,   78.7,   75.7,   71.1,  120.1,    318,    304,    350,    400,     79,  120.3,   95.1,    351,    145,    301,    121 ],
"hp": [    110,    110,     93,    110,    175,    105,    245,     62,     95,    123,    123,    180,    180,    180,    205,    215,    230,     66,     52,     65,     97,    150,    150,    245,    175,     66,     91,    113,    264,    175,    335,    109 ],
"drat": [    3.9,    3.9,   3.85,   3.08,   3.15,   2.76,   3.21,   3.69,   3.92,   3.92,   3.92,   3.07,   3.07,   3.07,   2.93,      3,   3.23,   4.08,   4.93,   4.22,    3.7,   2.76,   3.15,   3.73,   3.08,   4.08,   4.43,   3.77,   4.22,   3.62,   3.54,   4.11 ],
"wt": [   2.62,  2.875,   2.32,  3.215,   3.44,   3.46,   3.57,   3.19,   3.15,   3.44,   3.44,   4.07,   3.73,   3.78,   5.25,  5.424,  5.345,    2.2,  1.615,  1.835,  2.465,   3.52,  3.435,   3.84,  3.845,  1.935,   2.14,  1.513,   3.17,   2.77,   3.57,   2.78 ],
"qsec": [  16.46,  17.02,  18.61,  19.44,  17.02,  20.22,  15.84,     20,   22.9,   18.3,   18.9,   17.4,   17.6,     18,  17.98,  17.82,  17.42,  19.47,  18.52,   19.9,  20.01,  16.87,   17.3,  15.41,  17.05,   18.9,   16.7,   16.9,   14.5,   15.5,   14.6,   18.6 ],
"vs": [      0,      0,      1,      1,      0,      1,      0,      1,      1,      1,      1,      0,      0,      0,      0,      0,      0,      1,      1,      1,      1,      0,      0,      0,      0,      1,      0,      1,      0,      0,      0,      1 ],
"am": [      1,      1,      1,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      1,      1,      1,      0,      0,      0,      0,      0,      1,      1,      1,      1,      1,      1,      1 ],
"gear": [      4,      4,      4,      3,      3,      3,      3,      4,      4,      4,      4,      3,      3,      3,      3,      3,      3,      4,      4,      4,      3,      3,      3,      3,      3,      4,      5,      5,      5,      5,      5,      4 ],
"carb": [      4,      4,      1,      1,      2,      1,      4,      2,      2,      4,      4,      3,      3,      3,      4,      4,      4,      1,      2,      1,      1,      2,      2,      4,      2,      1,      2,      2,      4,      6,      8,      2 ] 
},
"facet": "gear",
"type": "point" 
} 
],
"facet": {
 "type": "wrap",
"var": "gear" 
},
"guides": [],
"coord": [],
"id": "chart1" 
}
    _.each(chartParams.layers, function(el){
        el.data = polyjs.data(el.data)
    })
    var graph_chart1 = polyjs.chart(chartParams);
</script>

</section>
<section class='' data-state='' id='slide-3'>
  <h2>nPlot</h2>
  <pre><code class="r">hair_eye_male = subset(as.data.frame(HairEyeColor), Sex == &quot;Male&quot;)
n1 &lt;- nPlot(Freq ~ Hair, group = &#39;Eye&#39;, 
    data = hair_eye_male, type = &#39;multiBarChart&#39;)
cat(&#39;&lt;style&gt;.nvd3{height: 400px;}&lt;/style&gt;&#39;)
</code></pre>

<style>.nvd3{height: 400px;}</style>

<pre><code class="r">n1$print(&#39;chart2&#39;, include_assets = TRUE, cdn = TRUE)
</code></pre>

<p><link rel='stylesheet' href=http://nvd3.org/src/nv.d3.css></p>

<script type='text/javascript' src=http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js></script>

<script type='text/javascript' src=http://d3js.org/d3.v3.min.js></script>

<script type='text/javascript' src=http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js></script>

<script type='text/javascript' src=http://nvd3.org/lib/fisheye.js></script>

<div id = 'chart2' class = 'rChart nvd3'></div>

<script type='text/javascript'>
 $(document).ready(function(){
      drawchart2()
    });
    function drawchart2(){  
      var opts = {
 "dom": "chart2",
"width":    800,
"height":    400,
"x": "Hair",
"y": "Freq",
"group": "Eye",
"type": "multiBarChart",
"id": "chart2" 
},
        data = [
 {
 "Hair": "Black",
"Eye": "Brown",
"Sex": "Male",
"Freq":             32 
},
{
 "Hair": "Brown",
"Eye": "Brown",
"Sex": "Male",
"Freq":             53 
},
{
 "Hair": "Red",
"Eye": "Brown",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Brown",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Black",
"Eye": "Blue",
"Sex": "Male",
"Freq":             11 
},
{
 "Hair": "Brown",
"Eye": "Blue",
"Sex": "Male",
"Freq":             50 
},
{
 "Hair": "Red",
"Eye": "Blue",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Blue",
"Sex": "Male",
"Freq":             30 
},
{
 "Hair": "Black",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Brown",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             25 
},
{
 "Hair": "Red",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              5 
},
{
 "Hair": "Black",
"Eye": "Green",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Brown",
"Eye": "Green",
"Sex": "Male",
"Freq":             15 
},
{
 "Hair": "Red",
"Eye": "Green",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Green",
"Sex": "Male",
"Freq":              8 
} 
]
  
      if(!(opts.type==="pieChart" || opts.type==="sparklinePlus")) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? 'main' : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .x(function(d) { return d[opts.x] })
          .y(function(d) { return d[opts.y] })
          .width(opts.width)
          .height(opts.height)
         
        
          
        

        
        
        
      
       d3.select("#" + opts.id)
        .append('svg')
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
    };
</script>

</section>
    </div>
  </div>
</body>
  <script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/lib/js/head.min.js"></script>
  <script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/js/reveal.min.js"></script>
  <script>
  // Full list of configuration options available here:
  // https://github.com/hakimel/reveal.js#configuration
  Reveal.initialize({
    controls: true,
    progress: true,
    history: true,
    center: true,
    theme: Reveal.getQueryHash().theme || 'solarized', 
    transition: Reveal.getQueryHash().transition || 'default', 
    dependencies: [
    // Cross-browser shim that fully implements classList -
    // https://github.com/eligrey/classList.js/
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/lib/js/classList.js', condition: function() { return !document.body.classList;}},
      // Zoom in and out with Alt+click
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      // Speaker notes
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
      // Remote control your reveal.js presentation using a touch device
      //{ src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]
  });
  </script>  <!-- LOAD HIGHLIGHTER JS FILES -->
<script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/highlight.js/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<!-- DONE LOADING HIGHLIGHTER JS FILES -->
 

</html><!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>rCharts with Slidify</title>
  <meta name="description" content="">
  <meta name="author" content="Ramnath Vaidyanathan">
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/css/reveal.min.css">
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/css/theme/solarized.css" id="theme">
  <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/highlight.js/css/tomorrow.css" id="theme">
  <!--[if lt IE 9]>
  <script src="lib/js/html5shiv.js"></script>
  <![endif]-->  <link rel="stylesheet" href = "assets/css/ribbons.css">

</head>
<body>
  <div class="reveal">
    <div class="slides">
      <section class='' data-state='' id='slide-1'>
  
  <style>
iframe {
  width: 1600px;
  height: 1200px;
}
</style>

<h2>rCharts with Slidify</h2>

</section>
<section class='class' data-state='' id='id'>
  <h2>rPlot</h2>
  <pre><code class="r">library(rCharts)
r1 &lt;- rPlot(mpg ~ wt | gear, data = mtcars, type = &#39;point&#39;)
r1
</code></pre>

<iframe src=chart1.html seamless></iframe>

</section>
<section class='' data-state='' id='slide-3'>
  <h2>nPlot</h2>
  <pre><code class="r">hair_eye_male = subset(as.data.frame(HairEyeColor), Sex == &quot;Male&quot;)
n1 &lt;- nPlot(Freq ~ Hair, group = &#39;Eye&#39;, 
    data = hair_eye_male, type = &#39;multiBarChart&#39;)
n1
</code></pre>

<iframe src=chart2.html seamless></iframe>

</section>
    </div>
  </div>
</body>
  <script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/lib/js/head.min.js"></script>
  <script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/js/reveal.min.js"></script>
  <script>
  // Full list of configuration options available here:
  // https://github.com/hakimel/reveal.js#configuration
  Reveal.initialize({
    controls: true,
    progress: true,
    history: true,
    center: true,
    theme: Reveal.getQueryHash().theme || 'solarized', 
    transition: Reveal.getQueryHash().transition || 'default', 
    dependencies: [
    // Cross-browser shim that fully implements classList -
    // https://github.com/eligrey/classList.js/
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/lib/js/classList.js', condition: function() { return !document.body.classList;}},
      // Zoom in and out with Alt+click
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      // Speaker notes
      { src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
      // Remote control your reveal.js presentation using a touch device
      //{ src: 'http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/revealjs/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]
  });
  </script>  <!-- LOAD HIGHLIGHTER JS FILES -->
<script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/highlight.js/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<!-- DONE LOADING HIGHLIGHTER JS FILES -->
 

</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width: 100%; height: 100%; }
  </style>
</head>

<body>
  <script>
    var margin = {top: 20, right: 10, bottom: 20, left: 10};
    var width = 960 - margin.left - margin.right;
    var height = 500 - margin.top - margin.bottom;
    var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    // Feel free to change or delete any of the code you see!
    svg.append("rect")
      .attr({x: 100, y: 10, width: width - 200, height: height - 20})
      .style({ fill: "#a72d1a"})
      .transition().duration(3000).ease("bounce")
      .style({ fill: "#5db9e3"})
    
    console.log("you are now rocking with d3", d3);
  </script>
</body>
<!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://timelyportfolio.github.io/rCharts_d3_sankey//css/sankey.css'>
    
    <script src='http://timelyportfolio.github.io/rCharts_d3_sankey//js/d3.v3.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_d3_sankey//js/sankey.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 960px;
      height: 500px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart21541f297cdc' class = 'rChart rCharts_d3_sankey'></div>    
    ﻿<!--Attribution:
Mike Bostock https://github.com/d3/d3-plugins/tree/master/sankey
Mike Bostock http://bost.ocks.org/mike/sankey/
-->

<script>
(function(){
var params = {
 "dom": "chart21541f297cdc",
"width":    960,
"height":    500,
"data": {
 "source": [ "area", "bar chart", "bar chart", "block matrix", "blog post", "blog post", "bump chart", "cal-heatmap", "calendar heatmap", "choropleth map", "combination", "combination", "correlation matrix", "cumulative line", "custom", "d3", "d3", "d3", "d3", "d3", "dashboard", "dashifyr", "datamaps", "datatables", "dimple", "dimple", "dimple", "dimple", "dimple", "dygraphs", "error bar", "gallery", "gallery", "heat map", "highcharts", "highcharts", "highcharts", "highcharts", "horizon", "horizon", "leaflet", "line chart", "line chart", "line chart", "map", "morris", "morris", "multiple", "multiple", "multiple", "multiple", "nvd3", "nvd3", "nvd3", "parallel coordinates", "parallel coordinates", "parcoords", "polychart", "polychart", "polychart", "polychart", "rickshaw", "rickshaw", "sankey", "sankey", "sankey", "scatter", "scatter", "scatterplot", "shinyapp", "standalone visualization", "standalone visualization", "standalone visualization", "standalone visualization", "standalone visualization", "standalone visualization", "standalone visualization", "table", "timeline", "timelinejs", "tutorial", "tutorial" ],
"target": [ "standalone visualization", "blog post", "standalone visualization", "standalone visualization", "Kyle Walker", "TimelyPortfolio", "standalone visualization", "calendar heatmap", "standalone visualization", "standalone visualization", "multiple", "scatterplot", "standalone visualization", "tutorial", "standalone visualization", "cumulative line", "custom", "error bar", "horizon", "sankey", "shinyapp", "dashboard", "choropleth map", "table", "bar chart", "block matrix", "multiple", "scatter", "scatterplot", "line chart", "standalone visualization", "TimelyPortfolio", "Vivek Patil", "standalone visualization", "area", "bar chart", "line chart", "scatterplot", "standalone visualization", "tutorial", "map", "blog post", "standalone visualization", "tutorial", "shinyapp", "line chart", "multiple", "gallery", "shinyapp", "standalone visualization", "tutorial", "bar chart", "line chart", "scatterplot", "standalone visualization", "tutorial", "parallel coordinates", "correlation matrix", "heat map", "multiple", "scatterplot", "bump chart", "multiple", "blog post", "standalone visualization", "tutorial", "standalone visualization", "tutorial", "standalone visualization", "Ramnath Vaidyanathan", "Alex Bresler", "Ian Dunham", "pssGuy", "Ramnath Vaidyanathan", "Thomas Reinholdsson", "TimelyPortfolio", "Vivek Patil", "standalone visualization", "standalone visualization", "timeline", "Ramnath Vaidyanathan", "TimelyPortfolio" ],
"value": [ 2, 2, 5, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 5, 1, 1, 1, 4, 4, 1, 3, 2, 1, 2, 1, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 4, 1, 1, 5, 2, 1, 1, 1, 1, 2, 1, 1, 4, 1, 1, 1, 1, 3, 1, 1, 1, 5, 3, 2, 1, 2, 8, 2, 15, 6, 4, 2, 2, 2, 9 ] 
},
"nodeWidth":     15,
"nodePadding":     10,
"layout":     32,
"id": "chart21541f297cdc" 
};

params.units ? units = " " + params.units : units = "";

//hard code these now but eventually make available
var formatNumber = d3.format("0,.0f"),    // zero decimal places
    format = function(d) { return formatNumber(d) + units; },
    color = d3.scale.category20();

if(params.labelFormat){
  formatNumber = d3.format(".2%");
}

var svg = d3.select('#' + params.id).append("svg")
    .attr("width", params.width)
    .attr("height", params.height);
    
var sankey = d3.sankey()
    .nodeWidth(params.nodeWidth)
    .nodePadding(params.nodePadding)
    .layout(params.layout)
    .size([params.width,params.height]);
    
var path = sankey.link();
    
var data = params.data,
    links = [],
    nodes = [];
    
//get all source and target into nodes
//will reduce to unique in the next step
//also get links in object form
data.source.forEach(function (d, i) {
    nodes.push({ "name": data.source[i] });
    nodes.push({ "name": data.target[i] });
    links.push({ "source": data.source[i], "target": data.target[i], "value": +data.value[i] });
}); 

//now get nodes based on links data
//thanks Mike Bostock https://groups.google.com/d/msg/d3-js/pl297cFtIQk/Eso4q_eBu1IJ
//this handy little function returns only the distinct / unique nodes
nodes = d3.keys(d3.nest()
                .key(function (d) { return d.name; })
                .map(nodes));

//it appears d3 with force layout wants a numeric source and target
//so loop through each link replacing the text with its index from node
links.forEach(function (d, i) {
    links[i].source = nodes.indexOf(links[i].source);
    links[i].target = nodes.indexOf(links[i].target);
});

//now loop through each nodes to make nodes an array of objects rather than an array of strings
nodes.forEach(function (d, i) {
    nodes[i] = { "name": d };
});

sankey
  .nodes(nodes)
  .links(links)
  .layout(params.layout);
  
var link = svg.append("g").selectAll(".link")
  .data(links)
.enter().append("path")
  .attr("class", "link")
  .attr("d", path)
  .style("stroke-width", function (d) { return Math.max(1, d.dy); })
  .sort(function (a, b) { return b.dy - a.dy; });

link.append("title")
  .text(function (d) { return d.source.name + " → " + d.target.name + "\n" + format(d.value); });

var node = svg.append("g").selectAll(".node")
  .data(nodes)
.enter().append("g")
  .attr("class", "node")
  .attr("transform", function (d) { return "translate(" + d.x + "," + d.y + ")"; })
.call(d3.behavior.drag()
  .origin(function (d) { return d; })
  .on("dragstart", function () { this.parentNode.appendChild(this); })
  .on("drag", dragmove));

node.append("rect")
  .attr("height", function (d) { return d.dy; })
  .attr("width", sankey.nodeWidth())
  .style("fill", function (d) { return d.color = color(d.name.replace(/ .*/, "")); })
  .style("stroke", function (d) { return d3.rgb(d.color).darker(2); })
.append("title")
  .text(function (d) { return d.name + "\n" + format(d.value); });

node.append("text")
  .attr("x", -6)
  .attr("y", function (d) { return d.dy / 2; })
  .attr("dy", ".35em")
  .attr("text-anchor", "end")
  .attr("transform", null)
  .text(function (d) { return d.name; })
.filter(function (d) { return d.x < params.width / 2; })
  .attr("x", 6 + sankey.nodeWidth())
  .attr("text-anchor", "start");

// the function for moving the nodes
  function dragmove(d) {
    d3.select(this).attr("transform", 
        "translate(" + (
                   d.x = Math.max(0, Math.min(params.width - d.dx, d3.event.x))
                ) + "," + (
                   d.y = Math.max(0, Math.min(params.height - d.dy, d3.event.y))
                ) + ")");
        sankey.relayout();
        link.attr("d", path);
  }
})();
</script>
    
    
    <script>
    // to be specific in case you have more than one chart
    d3.selectAll('#chart21541f297cdc svg path.link')
      .style('stroke', function(d){
        //here we will use the source color
        //if you want target then sub target for source
        //or if you want something other than gray
        //supply a constant
        //or use a categorical scale or gradient
        return d.source.color;
      })
     //note no changes were made to opacity
     //to do uncomment below but will affect mouseover
     //so will need to define mouseover and mouseout
     //happy to show how to do this also
     // .style('stroke-opacity', .7) 
    </script>
        
  </body>
</html>
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title></title>
    <script type='text/javascript' src="http://cdnjs.cloudflare.com/ajax/libs/fabric.js/1.4.0/fabric.min.js"></script>
    <script type='text/javascript' src="https://rawgithub.com/intermine/CDN/master/js/canvg/latest/canvg.js"></script>
</head>
<body>
<svg version="1.1" baseProfile="tiny"
	 xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:a="http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"
	 x="0px" y="0px" width="495px" height="511px" viewBox="-0.5 -0.07 495 511" overflow="visible" xml:space="preserve">
<defs>
</defs>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M61.69,228.71c0,0,0.1,1.89-0.72,1.88
	c-0.82-0.02-17.28-48.09-37.81-45.85C23.16,184.74,40.95,177.38,61.69,228.71z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M65.22,225.69c0,0-0.55,1.82-1.32,1.52
	c-0.77-0.3,0.11-51.1-19.95-55.98C43.95,171.23,63.18,170.37,65.22,225.69z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M92.71,268.02c0,0,1.64,0.96,1.17,1.64
	c-0.47,0.68-49.65-12.12-59.1,6.23C34.78,275.89,38.46,257,92.71,268.02z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M89.9,278.23c0,0,1.86,0.4,1.62,1.19
	c-0.23,0.79-50.94,4.13-54.13,24.53C37.4,303.95,34.94,284.87,89.9,278.23z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M85.69,272.7c0,0,1.78,0.66,1.43,1.41
	c-0.35,0.75-50.99-3.34-57.13,16.38C30,290.49,30.35,271.25,85.69,272.7z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M74.99,254.5c0,0,1.31,1.37,0.67,1.89
	c-0.64,0.52-44.38-25.33-58.53-10.29C17.13,246.1,25.87,228.96,74.99,254.5z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M67.44,258.69c0,0,1.46,1.22,0.88,1.81
	c-0.58,0.59-46.96-20.15-59.32-3.6C9.01,256.9,15.75,238.88,67.44,258.69z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M64.84,262.76c0,0,1.61,1.01,1.12,1.67
	c-0.49,0.66-49.27-13.56-59.25,4.52C6.71,268.95,10.93,250.18,64.84,262.76z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M75.58,263.38c0,0,1.12,1.53,0.42,1.97s-40.77-30.81-56.73-17.71
	C19.27,247.64,30.14,231.75,75.58,263.38z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M55.8,234.43c0,0,0.6,1.8-0.2,2c-0.8,0.2-29.4-41.8-48.6-34.2
	C7,202.23,22.2,190.43,55.8,234.43z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M56.49,241.41c0,0,0.98,1.63,0.24,2
	c-0.74,0.37-37.72-34.48-54.83-22.91C1.9,220.49,14.19,205.69,56.49,241.41z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.172" d="M56.38,245.78c0,0,1.12,1.53,0.42,1.97
	c-0.7,0.43-40.77-30.81-56.73-17.71C0.07,230.04,10.94,214.15,56.38,245.78z"/>
<path fill="#FFFFFF" stroke="#000000" d="M54.17,247.49c0.5,6.05,1.49,12.62,3.23,15.74c0,0-3.6,12.4,5.2,25.6c0,0-0.4,7.2,1.2,10.4
	c0,0,4,8.4,8.8,9.2c3.88,0.65,12.61,3.72,22.47,5.12c0,0,17.13,14.08,13.93,26.88c0,0-0.4,16.4-4,18c0,0,11.6-11.2,2,5.6l-4.4,18.8
	c0,0,25.6-21.6,10-3.2l-10,26c0,0,19.6-18.4,12.4-10l-3.2,8.8c0,0,43.2-27.2,12.4,2.4c0,0,8-3.6,12.4-0.8c0,0,6.8-1.2,6,0.4
	c0,0-20.8,10.4-24.4,28.8c0,0,8.4-10,5.2,0.8l0.4,11.6c0,0,4-21.6,3.6,16c0,0,19.2-18,7.6,2.8v16.8c0,0,15.2-16.4,8.8-3.6
	c0,0,10-8.8,6,6.4c0,0-0.8,10.4,3.6-0.8c0,0,16-30.6,10-4.4c0,0-0.8,19.2,4,4.4c0,0,0.4,10.4,9.6,17.6c0,0-1.2-50.8,11.6-14.8
	l4,16.4c0,0,2.8-9.2,2.4-14.4c0,0,14.8-16.4,8,8c0,0,15.2-22.8,12-9.6c0,0-7.6,16-6,20.8c0,0,16.8-34.8,18-36.4c0,0-2,42.4,8.8,6.4
	c0,0,5.6,12,2.8,16.4c0,0,8-8,7.2-11.2c0,0,4.6-8.2,7.4,5.4c0,0,1.8,9.4,3.4,6.2c0,0,4,24,5.2,1.2c0,0,1.6-13.6-5.6-25.2
	c0,0,0.8-3.2-2-7.2c0,0,13.6,21.6,6.4-7.2c0,0,11.2,8,12.4,8c0,0-13.6-23.2-4.8-18.4c0,0-5.2-10.4,12.8,1.6c0,0-16-16,1.6-6.4
	c0,0,8,6.4,0.4-3.6c0,0-14.4-16,7.6,2c0,0,11.6,16.4,12.4,19.2c0,0-10-29.2-14.4-32c0,0,8.4-36.4,49.6-20.8c0,0,6.8,17.2,11.2-1.2
	c0,0,12.8-6.4,24,21.2c0,0,4-13.6,3.2-16.4c0,0,6.8,1.2,6,0c0,0,13.2,4.4,14.4,3.6c0,0,6.8,6.8,7.2,3.2c0,0,9.2,2.8,7.2-0.8
	c0,0,8.8,15.6,9.2,19.2l2.4-14l2,2.8c0,0,1.6-7.6,0.8-8.8c-0.8-1.2,20,6.8,24.8,27.6l2,8.4c0,0,6-14.8,4.4-18.8c0,0,5.2,0.8,5.6,5.2
	c0,0,4-23.2-0.8-29.2c0,0,4.4-0.8,5.6,2.8v-7.2c0,0,7.2,0.8,7.2-1.6c0,0,4.4-4,6.4,0.8c0,0-12.4-35.2,6-16c0,0,7.2,10.8,3.6-8
	c-3.6-18.8-7.6-20.4-2.8-20.8c0,0,0.8-3.6-1.2-5.2c-2-1.6,1.2,0,1.2,0s4.8,4-0.4-18c0,0,6.4,1.6-5.6-27.6c0,0,2.8-2.4-1.2-10.8
	c0,0,8,4.4,10.8,2.8c0,0-0.4-1.6-3.6-5.6c0,0-21.6-54.8-1.2-32.8c0,0,11.85,13.55,5.45-9.25c0,0-9.11-24.01-8.33-28.31L54.17,247.49
	z"/>
<path fill="#CC7226" stroke="#000000" d="M483.71,224.67c0.63,0.18,2.83,1.3,4.08,2.96c0,0,6.8,10.8,1.6-7.6c0,0-9.2-28.8-0.4-17.6
	c0,0,6,7.2,2.8-6.4c-3.87-16.43-6.4-22.8-6.4-22.8s11.6,4.8-15.2-34.8l8.8,3.6c0,0-19.6-39.6-41.2-44.8l-8-6c0,0,38.4-38,25.6-74.8
	c0,0-6.8-5.2-16.4,4c0,0-6.4,4.8-12.4,3.2c0,0-30.8,1.2-32.8,1.2S357-12.37,291.4,5.23c0,0-5.2,2-9.6,0.8c0,0-18.4-16-67.2,6.8
	c0,0-10,2-11.6,2s-4.4,0-12.4,6.4c-8,6.4-8.4,7.2-10.4,8.8c0,0-16.4,11.2-21.2,12c0,0-11.6,6.4-16,16.4l-3.6,1.2c0,0-1.6,7.2-2,8.4
	c0,0-4.8,3.6-5.6,9.2c0,0-8.8,6-8.4,10.4c0,0-1.6,5.2-2.4,10c0,0-7.2,4.8-6.4,7.6c0,0-7.6,14-6.4,20.8c0,0-6.4-0.4-9.2,2
	c0,0-0.8,4.8-2.4,5.2c0,0-2.8,1.2-0.4,5.2c0,0-1.6,2.8-2,4.4c0,0,0.8,2.8-3.6,8.4c0,0-6.4,18.8-4.4,24c0,0,0.4,4.8-2.4,6.4
	c0,0-3.6-0.4,4.8,11.6c0,0,0.8,1.2-2.4,3.6c0,0-17.2,3.6-19.6,20c0,0-13.6,14.8-13.6,20c0,2.31,0.27,5.45,0.97,10.06
	c0,0-0.57,8.34,27.03,9.14C108.6,256.83,483.71,224.67,483.71,224.67z"/>
<path fill="#CC7226" d="M68.4,247.03c-25-39.4-10.6,17-10.6,17c8.8,34.4,138.4-3.2,138.4-3.2s168.8-30.4,180-34.4
	s106.4,2.4,106.4,2.4l-5.6-16.8c-64.8-46.4-84-23.2-97.6-27.2c-13.6-4-11.2,5.6-14.4,6.4c-3.2,0.8-42.4-24-48.8-23.2
	c-6.4,0.8-31.74-22.95-16.8,8.8c16,34-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4c18.4,20-16,3.2-16,3.2
	c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-8.31-23.1-40,3.2c-20,16.6-33.8-5.4-33.8-5.4L68.4,247.03z"/>
<path fill="#E87F3A" d="M317.51,169.77c-6.4,0.8-31.77-22.94-16.8,8.8c16.6,35.2-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-8.18-22.93-40,3.2
	c-21.24,17.35-34.73-4.11-34.73-4.11l-3.2,10.11c-25-39.8-9.93,18.51-9.93,18.51c8.8,34.4,139.05-4.51,139.05-4.51
	s168.8-30.4,180-34.4c11.2-4,105.53,2.33,105.53,2.33l-5.53-17.31c-64.8-46.4-83.2-22.62-96.8-26.62c-13.6-4-11.2,5.6-14.4,6.4
	C363.11,193.77,323.91,168.97,317.51,169.77z"/>
<path fill="#EA8C4D" d="M318.82,171.52c-6.4,0.8-31.13-23.23-16.8,8.8c16.2,36.2-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-8.05-22.77-40,3.2
	c-22.47,18.09-35.65-2.82-35.65-2.82l-3.6,8.62c-23.8-39-9.25,20.02-9.25,20.02c8.8,34.4,139.71-5.82,139.71-5.82
	s168.8-30.4,180-34.4c11.2-4,104.66,2.25,104.66,2.25l-5.45-17.82c-64.8-46.4-82.4-22.04-96-26.04c-13.6-4-11.2,5.6-14.4,6.4
	C364.42,195.52,325.22,170.72,318.82,171.52z"/>
<path fill="#EC9961" d="M320.13,173.27c-6.4,0.8-31.13-23.23-16.8,8.8c16.8,37.56-58.93,38.84-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7.92-22.6-40,3.2
	c-23.71,18.84-36.58-1.53-36.58-1.53l-4,7.13c-21.8-36.8-8.58,21.53-8.58,21.53c8.8,34.4,140.36-7.13,140.36-7.13
	s168.8-30.4,180-34.4c11.2-4,103.78,2.18,103.78,2.18l-5.38-18.33c-64.8-46.4-81.6-21.45-95.2-25.45c-13.6-4-11.2,5.6-14.4,6.4
	C365.73,197.27,326.52,172.47,320.13,173.27z"/>
<path fill="#EEA575" d="M321.44,175.01c-6.4,0.8-30.62-23.45-16.8,8.8c16.8,39.2-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7.78-22.43-40,3.2
	c-24.95,19.58-37.51-0.24-37.51-0.24l-4.4,5.64c-19.8-34.8-7.91,23.04-7.91,23.04c8.8,34.4,141.02-8.44,141.02-8.44
	s168.8-30.4,180-34.4c11.2-4,102.91,2.11,102.91,2.11l-5.31-18.84c-64.8-46.4-80.8-20.87-94.4-24.87c-13.6-4-11.2,5.6-14.4,6.4
	C367.04,199.01,327.84,174.21,321.44,175.01z"/>
<path fill="#F1B288" d="M322.74,176.76c-6.4,0.8-32.36-22.65-16.8,8.8c19.2,38.8-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7.65-22.26-40,3.2
	c-26.18,20.33-38.44,1.05-38.44,1.05l-4.8,4.15c-18-33.2-7.24,24.55-7.24,24.55c8.8,34.4,141.67-9.75,141.67-9.75
	s168.8-30.4,180-34.4s102.04,2.04,102.04,2.04l-5.24-19.35c-64.8-46.4-80-20.29-93.6-24.29s-11.2,5.6-14.4,6.4
	C368.35,200.76,329.14,175.96,322.74,176.76z"/>
<path fill="#F3BF9C" d="M324.05,178.5c-6.4,0.8-32.74-22.46-16.8,8.8c20.4,40-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7.52-22.1-40,3.2
	c-27.42,21.07-39.36,2.34-39.36,2.34l-5.2,2.66c-16-30.2-6.56,26.05-6.56,26.05c8.8,34.4,142.33-11.05,142.33-11.05
	s168.8-30.4,180-34.4s101.16,1.96,101.16,1.96l-5.16-19.85c-64.8-46.4-79.2-19.71-92.8-23.71c-13.6-4-11.2,5.6-14.4,6.4
	C369.65,202.5,330.45,177.7,324.05,178.5z"/>
<path fill="#F5CCB0" d="M325.36,180.25c-6.4,0.8-33.84-21.88-16.8,8.8c22,39.6-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7.39-21.93-40,3.2
	c-28.66,21.82-40.29,3.64-40.29,3.64l-5.6,1.16c-14.4-28.4-5.89,27.56-5.89,27.56c8.8,34.4,142.98-12.36,142.98-12.36
	s168.8-30.4,180-34.4s100.29,1.89,100.29,1.89l-5.09-20.36c-64.8-46.4-78.4-19.13-92-23.13c-13.6-4-11.2,5.6-14.4,6.4
	C370.96,204.25,331.76,179.45,325.36,180.25z"/>
<path fill="#F8D8C4" d="M326.67,181.99c-6.4,0.8-33.84-21.88-16.8,8.8c22,39.6-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7.26-21.76-40,3.2
	c-29.89,22.56-41.22,4.93-41.22,4.93l-6-0.33c-13.6-26.4-5.22,29.07-5.22,29.07c8.8,34.4,143.64-13.67,143.64-13.67
	s168.8-30.4,180-34.4c11.2-4,99.42,1.82,99.42,1.82l-5.02-20.87c-64.8-46.4-77.6-18.54-91.2-22.54c-13.6-4-11.2,5.6-14.4,6.4
	C372.27,205.99,333.07,181.19,326.67,181.99z"/>
<path fill="#FAE5D7" d="M327.98,183.74c-6.4,0.8-33.45-22.09-16.8,8.8c22,40.8-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7.13-21.59-40,3.2
	c-31.13,23.31-42.15,6.22-42.15,6.22l-6.4-1.82c-13-24-4.54,30.58-4.54,30.58c8.8,34.4,144.29-14.98,144.29-14.98
	s168.8-30.4,180-34.4c11.2-4,98.55,1.75,98.55,1.75l-4.95-21.38c-64.8-46.4-76.8-17.96-90.4-21.96c-13.6-4-11.2,5.6-14.4,6.4
	C373.58,207.74,334.38,182.94,327.98,183.74z"/>
<path fill="#FCF2EB" d="M329.29,185.48c-6.4,0.8-32.38-22.64-16.8,8.8c21.2,42.8-58.4,39.2-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4
	c18.4,20-16,3.2-16,3.2c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-7-21.42-40,3.2
	c-32.36,24.05-43.07,7.51-43.07,7.51l-6.8-3.31c-12.8-23.2-3.87,32.09-3.87,32.09c8.8,34.4,144.95-16.29,144.95-16.29
	s168.8-30.4,180-34.4s97.67,1.67,97.67,1.67l-4.87-21.89c-64.8-46.4-76-17.38-89.6-21.38c-13.6-4-11.2,5.6-14.4,6.4
	C374.89,209.48,335.69,184.68,329.29,185.48z"/>
<path fill="#FFFFFF" d="M68.2,264.03c-12.8-22-3.2,33.6-3.2,33.6c8.8,34.4,145.6-17.6,145.6-17.6s168.8-30.4,180-34.4
	s96.8,1.6,96.8,1.6l-4.8-22.4c-64.8-46.4-75.2-16.8-88.8-20.8c-13.6-4-11.2,5.6-14.4,6.4c-3.2,0.8-42.4-24-48.8-23.2
	c-6.4,0.8-31.62-23.01-16.8,8.8c22.23,47.71-60.76,37.63-75.2,28c-16.8-11.2,7.2,18.4,7.2,18.4c18.4,20-16,3.2-16,3.2
	c-34.4-12.8-58.4,12.8-61.6,13.6c-3.2,0.8-8,4-8.8-2.4c-0.8-6.4-6.86-21.26-40,3.2c-33.6,24.8-44,8.8-44,8.8L68.2,264.03z"/>
<path d="M109.8,294.03c0,0-7.2,11.6,13.6,24.8c0,0,1.4,1.4-16.6-2.8c0,0-6.2-2-7.8-12.4c0,0-4.8-4.4-9.6-10
	C84.6,288.03,109.8,294.03,109.8,294.03z"/>
<path fill="#CCCCCC" d="M249.8,246.43c0,0,17.7,26.82,17.1,31.6c-1.3,10.4-1.5,20,1.7,24c3.2,4,12,37.2,12,37.2s-0.4,1.2,12-36.8
	c0,0,11.6-16-8.4-34.4C284.2,268.03,249,239.23,249.8,246.43z"/>
<path d="M129.8,320.83c0,0,11.2,7.2-3.2,38.4l6.4-2.4c0,0-0.8,11.2-4,13.6l7.2-3.2c0,0,4.8,8,0.8,12.8c0,0,16.8,8,16,14.4
	c0,0,6.4-8,2.4-14.4c-4-6.4-11.2-2.4-10.4-20.8l-8.8,3.2c0,0,5.6-8.8,5.6-15.2l-8,2.4c0,0,15.47-26.58,4.8-28
	C132.6,320.83,129.8,320.83,129.8,320.83z"/>
<path fill="#CCCCCC" d="M162.2,337.63c0,0,2.8-4.4,0-3.6c-2.8,0.8-34,15.6-40,25.2C122.2,359.23,156.6,334.83,162.2,337.63z"/>
<path fill="#CCCCCC" d="M172.6,345.63c0,0,2.8-4.4,0-3.6c-2.8,0.8-34,15.6-40,25.2C132.6,367.23,167,342.83,172.6,345.63z"/>
<path fill="#CCCCCC" d="M185.8,330.43c0,0,2.8-4.4,0-3.6c-2.8,0.8-34,15.6-40,25.2C145.8,352.03,180.2,327.63,185.8,330.43z"/>
<path fill="#CCCCCC" d="M162.6,374.03c0,0,0-6-2.8-5.2c-2.8,0.8-38.8,18.4-44.8,28C115,396.83,157,371.23,162.6,374.03z"/>
<path fill="#CCCCCC" d="M163.8,363.23c0,0,1.2-4.8-1.6-4c-2,0-28.4,11.6-34.4,21.2C127.8,380.43,157.4,358.83,163.8,363.23z"/>
<path fill="#CCCCCC" d="M149.4,410.83l-10,7.6c0,0,10.4-7.6,14-6.4c0,0-6.8,11.2-7.6,16.4c0,0,10.4-12.8,16-12.4
	c0,0,7.6,0.4,7.6,11.2c0,0,5.6-10.4,8.8-10c0,0,1.2,6.4,0,13.2c0,0,4-7.6,8-6c0,0,6.4-2,5.6,9.6c0,0,0,10.4-0.8,13.2
	c0,0,5.6-26.4,8-26.8c0,0,8-1.2,12.8,7.6c0,0-4-7.6,0.8-5.6c0,0,10.8,1.6,14,8.4c0,0-6.8-12-1.2-8.8c0,0,6.8,0,8,6.4
	c0,0,8.4,21.2,10.4,22.8c0,0-7.6-21.6-6-21.6c0,0-2-12,3.2,2.8c0,0-3.2-14,2.4-13.2s10,10.8,18.4,8.4c0,0,9.6,5.6,11.6-63.6
	L149.4,410.83z"/>
<path d="M154.2,318.03c0,0,14.8-6,54.8,0c0,0,7.2,0.4,14-8.4s33.6-16,40-14l9.6,6.4l0.8,1.2c0,0,12.4,10.4,12.8,18
	c0.4,7.6-14.4,55.6-24,71.6s-19.2,28.4-38.4,26c0,0-20.8-4-46.4,0c0,0-29.2-1.6-32-9.6c-2.8-8,11.2-23.2,11.2-23.2s4.4-8.4,3.2-22.8
	C158.6,348.83,159,320.83,154.2,318.03z"/>
<path fill="#E5668C" d="M176.2,320.03c8.4,18.4-21.2,83.6-21.2,83.6c-2,1.6,12.66,7.64,22.8,5.2c10.95-2.64,51.2,1.6,51.2,1.6
	c23.6-15.6,36.4-60,36.4-60s10.4-24-7.2-27.2C240.6,320.03,176.2,320.03,176.2,320.03z"/>
<path fill="#B23259" d="M174.17,350.93c3.33-12.79,4.91-24.59,2.03-30.9c0,0,62.4,6.4,73.6-14.4c4.24-7.88,19,22.8,18.6,32.4
	c0,0-63,14.4-77.8,3.2L174.17,350.93z"/>
<path fill="#A5264C" d="M178.6,367.23c0,0,2,7.2-0.4,11.2c0,0-1.6,0.8-2.8,1.2c0,0,1.2,3.6,7.2,5.2c0,0,2,4.4,4.4,4.8
	c2.4,0.4,7.2,6,11.2,4.8s15.2-5.2,15.2-5.2s5.6-3.2,14.4,0.4c0,0,2.38-0.8,2.8-4.8c0.5-4.7,3.6-8.4,5.6-10.4s11.6-14.8,10.4-15.2
	C245.4,358.83,178.6,367.23,178.6,367.23z"/>
<path fill="#FF727F" stroke="#000000" d="M174.2,318.83c0,0-2.8,22.4,0.4,30.8c3.2,8.4,2.4,10.4,1.6,14.4c-0.8,4,3.6,14,9.2,20
	l12,1.6c0,0,15.2-3.6,24.4-0.8c0,0,8.99,1.34,12.4-13.6c0,0,4.8-6.4,12-9.2c7.2-2.8,14.4-44.4,10.4-52.4s-18.4-12.4-34.4,3.2
	C206.2,328.43,204.2,311.63,174.2,318.83z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M175.8,393.63c0,0-0.8-2-5.2-2.4c0,0-22.4-3.6-30.8-16
	c0,0-6.8-5.6-2.4,6c0,0,10.4,20.4,17.2,23.2C154.6,404.43,171,408.43,175.8,393.63z"/>
<path fill="#CC3F4C" d="M255.74,329.66c0.66-7.91,2.61-16.52,0.86-20.03c-6.45-12.89-23.42-7.51-34.4,3.2c-16,15.6-18-1.2-48,6
	c0,0-1.75,13.96-0.91,23.97c0,0,37.31-11.58,38.1-5.97c0,0,1.6-3.2,10.8-3.2C231.4,333.63,254.14,332.46,255.74,329.66z"/>
<path fill="none" stroke="#A51926" stroke-width="2" d="M212.6,319.63c0,0,4.8,4.8,1.2,14.4c0,0-14.4,16-12.4,30"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M164.6,404.43c0,0-4.4-12.8,4.4-6c0,0,4.8,2,3.6,3.6
	C171.4,403.63,165.8,407.63,164.6,404.43z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M169.64,405.63c0,0-3.52-10.24,3.52-4.8c0,0,4.42,2.45,2.88,2.88
	C171.48,404.99,176.04,407.55,169.64,405.63z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M174.44,405.63c0,0-3.52-10.24,3.52-4.8c0,0,4.38,2.31,2.88,2.88
	C177.48,404.99,180.84,407.55,174.44,405.63z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M181.04,405.83c0,0-3.52-10.24,3.52-4.8c0,0,4.38,2.33,2.88,2.88
	C184.48,404.99,187.44,407.75,181.04,405.83z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M187.52,405.75c0,0-3.52-10.24,3.52-4.8c0,0,3.84,1.6,2.88,2.88
	C192.96,405.11,193.92,407.67,187.52,405.75z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M194.2,406.43c0,0-4.8-12.4,4.4-6c0,0,4.8,2,3.6,3.6
	C201,405.63,202.2,408.83,194.2,406.43z"/>
<path fill="none" stroke="#A5264C" stroke-width="2" d="M165.8,389.23c0,0,13.2-2.8,19.2,0.4c0,0,6,1.2,7.2,0.8
	c1.2-0.4,4.4-0.8,4.4-0.8"/>
<path fill="none" stroke="#A5264C" stroke-width="2" d="M199.8,398.03c0,0,12-13.6,24-9.2c7.02,2.57,6-0.8,6.8-3.6c0.8-2.8,1-7,6-10
	"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M217,382.03c0,0-4-10.8-6.8,2c-2.8,12.8-6,16.4-7.6,19.2
	c0,0,0,5.2,8.4,4.8c0,0,10.8-0.4,11.2-3.2C222.6,402.03,221,390.43,217,382.03z"/>
<path fill="none" stroke="#A5264C" stroke-width="2" d="M231,389.23c0,0,3.6-2.4,6-1.2"/>
<path fill="none" stroke="#A5264C" stroke-width="2" d="M237.5,372.83c0,0,2.9-4.9,7.7-5.7"/>
<path fill="#B2B2B2" d="M158.2,409.63c0,0,18,3.2,22.4,1.6c0,0,8.8,0,0.4,2c0,0-12.8,0-20.8-1.2
	C160.2,412.03,148.6,406.43,158.2,409.63z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M172.2,316.43c0,0,17.6,0,19.6,0.8c0,0,7.2,30.8,3.6,38.4
	c0,0-1.2,2.8-4-2.8c0,0-18.4-32.8-21.6-34.8C166.6,316.03,171,316.43,172.2,316.43z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M95.1,313.73c0,0,8.9,1.7,21.5,4.3c0,0,4.8,22.4,8,27.2
	c3.2,4.8-0.4,4.8-4,2s-18.4-16.8-20.4-21.2C98.2,321.63,95.1,313.73,95.1,313.73z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M116.96,318.25c0,0,5.8,1.55,6.81,3.76c1.01,2.21-1.2,5.51-1.2,5.51
	s-1,3.31-2.2,1.14C119.16,326.5,116.29,318.84,116.96,318.25z"/>
<path d="M117,318.03c0,0,3.6,5.2,7.2,5.2c3.6,0,3.98-0.41,6.8,0.2c4.6,1,4.2-1,10.8,0.2c2.64,0.48,5.2-0.4,8,0.8
	c2.8,1.2,6,0.4,7.2-1.6s6-6.2,6-6.2s-12.8,1.8-15.6,2.6C147.4,319.23,125,320.43,117,318.03z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M161.6,318.23c0,0-6.45,3.5-6.85,5.9c-0.4,2.4,5.25,6.1,5.25,6.1
	s2.75,4.6,3.35,2.2S162.4,318.63,161.6,318.23z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M124.11,323.69c0,0,7.01,11.19,7.22-0.02c0,0,0.56-1.26-1.2-1.28
	C124.06,322.31,125.58,318.21,124.11,323.69z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M131.29,323.94c0,0,7.92,11.19,7.29-0.09c0,0,0.01-0.33-1.75-0.49
	C132.08,322.95,132.43,318.43,131.29,323.94z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M138.5,323.95c0,0,7.96,10.63,7.29,0.96c0,0,0.12-1.23-1.53-1.53
	C140.37,322.67,140.16,319.42,138.5,323.95z"/>
<path fill="#FFFFCC" stroke="#000000" stroke-width="0.5" d="M145.38,324.03c0,0,7.9,11.56,8.25,1.78c0,0,1.64-1.38-0.1-1.6
	C147.71,323.47,148.51,319.02,145.38,324.03z"/>
<path fill="#E5E5B2" d="M109.21,327.56l-7.66-1.53c-2.6-5-4.7-11.15-4.7-11.15s6.35,1,18.85,3.8c0,0,0.88,3.32,2.35,9.11
	L109.21,327.56z"/>
<path fill="#E5E5B2" d="M174.27,322.9c-1.67-2.51-2.98-4.26-3.63-4.67c-3.01-1.88,1.13-1.51,2.26-1.51c0,0,16.57,0,18.45,0.75
	c0,0,0.52,2.24,1.21,5.63C192.56,323.11,182.47,321.1,174.27,322.9z"/>
<path fill="#CC7226" d="M227.88,184.75c27.72,3.96,53.24-31.68,55-41.36c1.76-9.68-8.36-21.56-8.36-21.56
	c1.32-3.08-3.52-17.16-8.8-26.4c-5.28-9.24-21.18-8.27-38.72-9.24c-15.84-0.88-34.32,22.44-35.64,24.2
	c-1.32,1.76,4.84,40.04,6.16,45.76c1.32,5.72-1.32,32.12-1.32,32.12C230.44,179.17,200.16,180.79,227.88,184.75z"/>
<path fill="#EA8E51" d="M192.09,111.04c-1.3,1.73,4.75,39.31,6.05,44.93c1.3,5.62-1.3,31.54-1.3,31.54
	c32.67-8.88,3.89-7.34,31.1-3.46c27.22,3.89,52.27-31.1,54-40.61c1.73-9.5-8.21-21.17-8.21-21.17c1.3-3.02-3.46-16.85-8.64-25.92
	c-5.18-9.07-20.8-8.11-38.02-9.07C211.53,86.41,193.38,109.31,192.09,111.04z"/>
<path fill="#EFAA7C" d="M192.81,111.68c-1.27,1.7,4.66,38.58,5.94,44.1s-1.27,30.95-1.27,30.95c31.4-9.16,3.82-7.21,30.53-3.39
	c26.71,3.82,51.3-30.53,53-39.86c1.7-9.33-8.06-20.78-8.06-20.78c1.27-2.97-3.39-16.54-8.48-25.44c-5.09-8.9-20.41-7.96-37.31-8.9
	C211.89,87.52,194.09,109.99,192.81,111.68z"/>
<path fill="#F4C6A8" d="M193.54,112.33c-1.25,1.66,4.58,37.86,5.82,43.27s-1.25,30.37-1.25,30.37c29.44-9.04,3.74-7.07,29.95-3.33
	c26.21,3.74,50.34-29.95,52-39.1c1.66-9.15-7.9-20.38-7.9-20.38c1.25-2.91-3.33-16.22-8.32-24.96c-4.99-8.74-20.03-7.81-36.61-8.74
	C212.26,88.62,194.79,110.67,193.54,112.33z"/>
<path fill="#F9E2D3" d="M194.27,112.98c-1.22,1.63,4.49,37.13,5.71,42.43c1.22,5.3-1.22,29.78-1.22,29.78
	c27.87-8.92,3.67-6.94,29.38-3.26c25.7,3.67,49.37-29.38,51-38.35c1.63-8.98-7.75-19.99-7.75-19.99c1.22-2.86-3.26-15.91-8.16-24.48
	c-4.9-8.57-19.64-7.67-35.9-8.57C212.63,89.72,195.49,111.35,194.27,112.98z"/>
<path fill="#FFFFFF" d="M228.2,181.23c25.2,3.6,48.4-28.8,50-37.6c1.6-8.8-7.6-19.6-7.6-19.6c1.2-2.8-3.2-15.6-8-24
	c-4.8-8.4-19.25-7.51-35.2-8.4c-14.4-0.8-31.2,20.4-32.4,22c-1.2,1.6,4.4,36.4,5.6,41.6c1.2,5.2-1.2,29.2-1.2,29.2
	C224.9,175.83,203,177.63,228.2,181.23z"/>
<path fill="#CCCCCC" d="M274.6,147.23c0,0-27.8,7.6-39.4,6c0,0-15.8-6.6-24.6,15.2c0,0-3.6,7.2-5.6,9.2S274.6,147.23,274.6,147.23z"
	/>
<path d="M278.4,145.03c0,0-29,12.2-39,11.8c0,0-16.4-4.6-24.8,10c0,0-8.4,9.2-11.6,10.8c0,0-0.4,1.6,6-2.4l10.4,5.2
	c0,0,14.8,9.6,24.4-6.4c0,0,4-11.2,4-13.2s21.2-7.6,22.8-8C272.2,152.43,278.8,148.23,278.4,145.03z"/>
<path fill="#99CC32" d="M231,180.94c-6.87,0-15.25-3.87-15.25-10.11c0-6.25,8.37-12.51,15.25-12.51c6.87,0,12.45,5.06,12.45,11.31
	C243.44,175.88,237.87,180.94,231,180.94z"/>
<path fill="#659900" d="M227.37,164.26c-4.85,0.72-9.94,2.23-9.86,2.01c1.54-4.62,7.9-7.95,13.49-7.95c4.3,0,8.08,1.98,10.32,4.99
	C241.32,163.3,236,162.97,227.37,164.26z"/>
<path fill="#FFFFFF" d="M239.4,164.03c0,0-4.4-3.2-4.4-1C235,163.03,238.6,167.43,239.4,164.03z"/>
<path d="M229.4,172.15c-2.5,0-4.52-2.03-4.52-4.53c0-2.5,2.03-4.53,4.52-4.53c2.5,0,4.53,2.03,4.53,4.53
	C233.92,170.13,231.9,172.15,229.4,172.15z"/>
<path fill="#CC7226" d="M125.4,158.83c0,0-3.2-21.2-0.8-25.6c0,0,10.8-10,10.4-13.6c0,0-0.4-18-1.6-18.8c-1.2-0.8-8.8-6.8-14.8-0.4
	c0,0-10.4,18-9.6,24.4v2c0,0-7.6-0.4-9.2,1.6c0,0-1.2,5.2-2.4,5.6c0,0-2.8,2.4-0.8,5.2c0,0-2,2.4-1.6,6.4l7.6,4
	c0,0,2,14.4,12.8,19.6C120.23,171.56,123.4,164.83,125.4,158.83z"/>
<path fill="#FFFFFF" d="M124.4,156.99c0,0-2.88-19.08-0.72-23.04c0,0,9.72-9,9.36-12.24c0,0-0.36-16.2-1.44-16.92
	c-1.08-0.72-7.92-6.12-13.32-0.36c0,0-9.36,16.2-8.64,21.96v1.8c0,0-6.84-0.36-8.28,1.44c0,0-1.08,4.68-2.16,5.04
	c0,0-2.52,2.16-0.72,4.68c0,0-1.8,2.16-1.44,5.76l6.84,3.6c0,0,1.8,12.96,11.52,17.64C119.75,168.44,122.6,162.39,124.4,156.99z"/>
<path fill="#EB955C" d="M132.95,101.82c-1.09-0.86-8.58-6.63-14.43-0.39c0,0-10.14,17.55-9.36,23.79v1.95c0,0-7.41-0.39-8.97,1.56
	c0,0-1.17,5.07-2.34,5.46c0,0-2.73,2.34-0.78,5.07c0,0-1.95,2.34-1.56,6.24l7.41,3.9c0,0,1.95,14.04,12.48,19.11
	c4.71,2.27,7.8-4.29,9.75-10.14c0,0-3.12-20.67-0.78-24.96c0,0,10.53-9.75,10.14-13.26C134.51,120.15,134.12,102.6,132.95,101.82z"
	/>
<path fill="#F2B892" d="M132.5,102.81c-0.98-0.92-8.36-6.46-14.06-0.38c0,0-9.88,17.1-9.12,23.18v1.9c0,0-7.22-0.38-8.74,1.52
	c0,0-1.14,4.94-2.28,5.32c0,0-2.66,2.28-0.76,4.94c0,0-1.9,2.28-1.52,6.08l7.22,3.8c0,0,1.9,13.68,12.16,18.62
	c4.59,2.21,7.6-4.18,9.5-9.88c0,0-3.04-20.14-0.76-24.32c0,0,10.26-9.5,9.88-12.92C134.02,120.67,133.64,103.57,132.5,102.81z"/>
<path fill="#F8DCC8" d="M132.05,103.8c-0.87-0.98-8.14-6.29-13.69-0.37c0,0-9.62,16.65-8.88,22.57v1.85c0,0-7.03-0.37-8.51,1.48
	c0,0-1.11,4.81-2.22,5.18c0,0-2.59,2.22-0.74,4.81c0,0-1.85,2.22-1.48,5.92l7.03,3.7c0,0,1.85,13.32,11.84,18.13
	c4.47,2.15,7.4-4.07,9.25-9.62c0,0-2.96-19.61-0.74-23.68c0,0,9.99-9.25,9.62-12.58C133.53,121.19,133.16,104.54,132.05,103.8z"/>
<path fill="#FFFFFF" d="M124.4,156.89c0,0-2.88-18.98-0.72-22.94c0,0,9.72-9,9.36-12.24c0,0-0.36-16.2-1.44-16.92
	c-0.76-1.04-7.92-6.12-13.32-0.36c0,0-9.36,16.2-8.64,21.96v1.8c0,0-6.84-0.36-8.28,1.44c0,0-1.08,4.68-2.16,5.04
	c0,0-2.52,2.16-0.72,4.68c0,0-1.8,2.16-1.44,5.76l6.84,3.6c0,0,1.8,12.96,11.52,17.64C119.75,168.44,122.6,162.29,124.4,156.89z"/>
<path fill="#CCCCCC" d="M121.3,150.63c0,0-21.6-10.2-22.5-11c0,0,9.1,8.2,9.9,8.2C109.5,147.83,121.3,150.63,121.3,150.63z"/>
<path d="M104.2,144.43c0,0,18.4,3.6,18.4,8c0,2.91-0.24,16.33-5.6,14.8C108.6,164.83,112.2,150.43,104.2,144.43z"/>
<path fill="#99CC32" d="M112.6,148.23c0,0,8.98,1.47,10,4.2c0.6,1.6,1.26,9.91-4.2,11C113.85,164.34,111.62,154.12,112.6,148.23z"/>
<path d="M198.59,190.78c-0.5-1.74,0.81-1.61,2.6-2.15c2-0.6,14.2-4.4,15-7c0.8-2.6,14,1.8,14,1.8c1.8,0.8,6.2,3.4,6.2,3.4
	c4.8,1.2,11.4,1.6,11.4,1.6c2.4,1,5.8,3.8,5.8,3.8c14.6,10.2,27,3,27,3c20-6.6,14-23.8,14-23.8c-3-9,0.2-12.4,0.2-12.4
	c0.2-3.8,7.4,2.6,7.4,2.6c2.6,4.2,3.4,9.2,3.4,9.2c8,11.2,4.6-6.6,4.6-6.6c0.2-1-2.6-4.6-2.6-5.8s-1.8-4.6-1.8-4.6
	c-3-3.4-0.6-10.4-0.6-10.4c1.8-13.8-0.4-12-0.4-12c-1.2-1.8-10.4,8.2-10.4,8.2c-2.2,3.4-8.2,5-8.2,5c-2.8,1.8-6.2,0.4-6.2,0.4
	c-2.6-0.4-8.2,6.6-8.2,6.6c2.8-0.2,5.2,4.2,7.6,4.4c2.4,0.2,4.2-2.4,5.8-3s4.4,5.2,4.4,5.2c0.4,2.6-5.2,7.4-5.2,7.4
	c-0.4,4.6-2,3-2,3c-3-0.6-4.2,3.2-5.2,7.8s-5.2,5-5.2,5c-1.6,7.4-2.8,4.4-2.8,4.4c-0.2-5.6-6.2,0.2-6.2,0.2c-1.2,2-5.8-0.2-5.8-0.2
	c-6.8-2-4.4-4-4.4-4c1.8-2.2,13,0,13,0c2.2-1.6-5.8-5.6-5.8-5.6c-0.6-1.8,0.4-6.2,0.4-6.2c1.2-3.2,8-8.8,8-8.8
	c9.4-1.2,6.6-2.8,6.6-2.8c-6.2-5.2-12,2.4-12,2.4c-2.2,6.2-19.6,21.2-19.6,21.2c-4.8,3.4-2.2-3.4-6.2,0s-24.6-5.6-24.6-5.6
	c-11.56-1.19-14.29,14.55-17.82,11.43C194.77,187.86,200.19,196.38,198.59,190.78z"/>
<path d="M393.4,24.43c0,0-25.6,8-28.4,26.8c0,0-2.4,22.8,18,40.4c0,0,0.4,6.4,2.4,9.6c0,0-1.6,4.8,17.2-2.8l27.2-8.4
	c0,0,6.4-2.4,11.6-11.2c5.2-8.8,20.4-27.6,16.8-52.8c0,0,1.2-11.2-4.8-11.6c0,0-8.4-1.6-15.6,6c0,0-6.8,3.2-9.2,2.8L393.4,24.43z"/>
<path d="M448.02,23.44c0,0,2.1-8.93-2.74-4.09c0,0-7.04,5.72-14.52,5.72c0,0-14.52,2.2-18.92,15.4c0,0-3.96,26.84,3.96,32.56
	c0,0,4.84,7.48,11.88,0.88C434.72,67.31,450.22,37.08,448.02,23.44z"/>
<path fill="#323232" d="M447.65,23.8c0,0,2.09-8.74-2.66-3.99c0,0-6.91,5.62-14.26,5.62c0,0-14.26,2.16-18.58,15.12
	c0,0-3.89,26.35,3.89,31.97c0,0,4.75,7.34,11.66,0.86C434.62,66.89,449.81,37.19,447.65,23.8z"/>
<path fill="#666666" d="M447.27,24.15c0,0,2.08-8.56-2.58-3.89c0,0-6.78,5.51-13.99,5.51c0,0-13.99,2.12-18.23,14.84
	c0,0-3.82,25.86,3.82,31.38c0,0,4.66,7.21,11.45,0.85C434.51,66.48,449.39,37.3,447.27,24.15z"/>
<path fill="#999999" d="M446.9,24.51c0,0,2.07-8.37-2.51-3.8c0,0-6.66,5.41-13.73,5.41c0,0-13.73,2.08-17.89,14.56
	c0,0-3.74,25.38,3.74,30.78c0,0,4.58,7.07,11.23,0.83C434.41,66.06,448.98,37.41,446.9,24.51z"/>
<path fill="#CCCCCC" d="M446.52,24.87c0,0,2.06-8.19-2.43-3.7c0,0-6.53,5.3-13.46,5.3c0,0-13.46,2.04-17.54,14.28
	c0,0-3.67,24.89,3.67,30.19c0,0,4.49,6.94,11.02,0.82C434.3,65.64,448.56,37.52,446.52,24.87z"/>
<path fill="#FFFFFF" d="M446.15,25.23c0,0,2.05-8-2.35-3.6c0,0-6.4,5.2-13.2,5.2c0,0-13.2,2-17.2,14c0,0-3.6,24.4,3.6,29.6
	c0,0,4.4,6.8,10.8,0.8C434.2,65.23,448.15,37.63,446.15,25.23z"/>
<path fill="#992600" d="M234.6,228.43c0,0-20.4-19.2-28.4-20c0,0-34.4-4-49.2,14c0,0,17.6-20.4,45.2-14.8c0,0-21.6-4.4-34-1.2
	c0,0-16.8,0-26.4,14l-2.8,4.8c0,0,4-14.8,22.4-20.8c0,0,22.8-4.8,33.6,0c0,0-21.6-6.8-31.6-4.8c0,0-30.4-2.4-43.2,24
	c0,0,4-14.4,18.8-21.6c0,0,13.6-8.8,34-6c0,0,14.4,3.2,19.6,5.6c5.2,2.4,4-0.4-4.4-5.2c0,0-5.6-10-19.6-9.6c0,0-42.8,3.6-53.2,15.6
	c0,0,13.6-11.2,24-14c0,0,22.4-8,30.8-7.2c0,0,24.8,1,32.4-3c0,0-11.2,5-8,8.2c3.2,3.2,10,10.8,10,12s24.2,23.3,27.8,27.7
	L234.6,228.43z"/>
<path fill="#CCCCCC" d="M373,422.43c0,0-15.5-36.5-28-46c0,0,26,16,29.5,34C374.5,410.43,374.5,420.43,373,422.43z"/>
<path fill="#CCCCCC" d="M420,429.93c0,0-26.5-55-45-79c0,0,43.5,37.5,48.5,64l0.5,5.5l-3-2.5C421,417.93,420.5,426.93,420,429.93z"
	/>
<path fill="#CCCCCC" d="M476.5,381.43c0,0-62.5-59.5-64-62c0,0,60.5,66,63.5,73.5C476,392.93,474,383.93,476.5,381.43z"/>
<path fill="#CCCCCC" d="M288,424.93c0,0,19.5-52,38.5-29.5c0,0,15,10,14.5,13c0,0-4-6.5-22-6C319,402.43,300,399.43,288,424.93z"/>
<path fill="#CCCCCC" d="M478.5,297.43c0,0-45-28.5-52.5-30c-11.81-2.36,49.5,29,54.5,39.5C480.5,306.93,482.5,304.43,478.5,297.43z"
	/>
<path d="M327.8,404.03c0,0,20.4-2,27.2-8.8l4.4,3.6l17.6-38.4l3.6,5.2c0,0,14.4-14.8,13.6-22.8s12.8,6,12.8,6s-0.8-11.6,6.4-4.8
	c0,0-2.4-15.6,6-7.6c0,0-10.54-30.16,12-4.4c5.6,6.4,1.2-0.4,1.2-0.4s-26-48-4.4-33.6c0,0,2-22.8,0.8-27.2c-1.2-4.4-3.2-26.8-8-32
	c-4.8-5.2,0.4-6.8,6-1.6c0,0-11.2-24,2-12c0,0-3.6-15.2-8-18c0,0-5.6-17.2,9.6-6.4c0,0-4.4-12.4-7.6-15.6c0,0-11.6-27.6-4.4-22.8
	l4.4,3.6c0,0-6.8-14-0.4-9.6c6.4,4.4,6.4,4,6.4,4s-21.2-33.2-0.8-15.6c0,0-8.16-13.92-11.6-20.8c0,0-18.8-20.4-4.4-14l4.8,1.6
	c0,0-8.8-10-16.8-11.6s2.4-8,8.8-6s22,9.6,22,9.6s12.8,18.8,16.8,19.2c0,0-20-7.6-14,0.4c0,0,14.4,14,7.2,13.6c0,0-6,7.2-1.2,16
	c0,0-18.46-18.39-3.6,7.2l6.8,16.4c0,0-24.4-24.8-13.2-2.8c0,0,17.2,23.6,19.2,24c2,0.4,6.4,9.2,6.4,9.2l-4.4-2l5.2,8.8
	c0,0-11.2-12-5.2,1.2l5.6,14.4c0,0-20.4-22-6.8,7.6c0,0-16.4-5.2-7.6,12c0,0-1.6,16-1.2,21.2c0.4,5.2,1.6,33.6-2.8,41.6
	c-4.4,8,6,27.2,8,31.2s5.6,14.8-3.2,5.6s-4.4-3.6-2.4,5.2s8,24.4,7.2,30c0,0-1.2,1.2-4.4-2.4c0,0-14.8-22.8-13.2-8.4
	c0,0-1.2,8-4.4,16.8c0,0-3.2,10.8-3.2,2c0,0-3.2-16.8-6-9.2c-2.8,7.6-6.4,13.6-9.2,16c-2.8,2.4-8-20.4-9.2-10c0,0-12-12.4-16.8,4
	l-11.6,16.4c0,0-0.4-12.4-1.6-6.4C368.2,402.43,338.2,408.43,327.8,404.03z"/>
<path d="M293.4,47.23c0,0-11.6-8-15.6-7.6c-4,0.4,27.6-8.8,68.8,18.8c0,0,4.8,2.8,8.4,2.4c0,0,3.2,2.4,0.4,6c0,0-8.8,9.6,2.4,20.8
	c0,0,18.4,6.8,12.8-2c0,0,10.8,4,13.2,8c2.4,4,1.2,0,1.2,0s-6.4-7.2-12.4-12.4c0,0-5.2-2-8-10.4c-2.8-8.4-5.2-18.4-0.8-21.6
	c0,0-4,4.4-3.2,0.4c0.8-4,4.4-7.6,6-8c1.6-0.4,18-16.2,24.8-16.6c0,0-9.2,1.4-12.2,0.4s-29.6-12.4-35.6-13.6c0,0-16.8-6.6-4.8-4.6
	c0,0,35.8,3.8,54,17c0,0-7.2-8.4-25.6-15.4c0,0-22.2-12.6-57.4-7.6c0,0-17.8,3.2-25.6,5c0,0-2.6-0.6-3.2-1c-0.6-0.4-12.4-9.4-40-2.4
	c0,0-17,4.6-25.6,9.4c0,0-15.2,1.2-18.8,4.4c0,0-18.6,14.6-20.6,15.4c-2,0.8-13.4,8.4-14.2,8.8c0,0,24.6-6.6,27-9
	c2.4-2.4,19.8-5,22.2-3.6c2.4,1.4,10.8,0.8,1.2,1.4c0,0,75.6,14.8,76.4,16.8C289.4,48.43,293.4,47.23,293.4,47.23z"/>
<path fill="#CC7226" d="M364.8,38.03c0,0-10.2-7.4-12.2-7.4s-14.4-10.2-18.6-9.8s-16.4-9.6-43.8-1.4c0,0-0.6-2,3-2.8
	c0,0,6.4-2.2,6.8-2.8c0,0,20.2-4.2,27.4-0.6c0,0,9.2,2.6,15.4,8.8c0,0,11.2,3.2,14.4,2.2c0,0,8.8,2.2,9.2,4c0,0,5.8,3,4,5.6
	C370.4,33.83,370.8,35.43,364.8,38.03z"/>
<path fill="#CC7226" d="M352.33,35.92c0.81,0.63,1.83,0.73,2.43,1.54c0.23,0.31-0.05,0.64-0.37,0.74c-1.04,0.32-2.1-0.25-3.24,0.33
	c-0.4,0.21-1.04,0.02-1.6-0.12c-1.63-0.44-3.46-0.47-5.15,0.22c-1.98-1.13-4.34-0.54-6.43-1.55c-0.06-0.03-0.28,0.32-0.35,0.29
	c-3.05-1.15-6.79-0.86-9.22-3.15c-2.43-0.41-4.78-0.87-7.21-1.55c-1.82-0.51-3.23-1.5-4.85-2.33c-1.38-0.71-2.83-1.23-4.37-1.6
	c-1.86-0.45-3.69-0.34-5.59-0.86c-0.09-0.02-0.28,0.32-0.37,0.29c-0.32-0.11-0.62-0.69-0.79-0.64c-1.68,0.52-3.17-0.45-4.83-0.11
	c-1.18-1.22-2.91-0.98-4.45-1.42c-2.96-0.85-6.12,0.42-9.15-0.58c4.11-1.84,8.8-0.61,12.86-2.68c2.33-1.19,4.99-0.08,7.56-0.84
	c0.49-0.14,1.18-0.35,1.58,0.32c0.13-0.13,0.32-0.37,0.37-0.35c2.45,1.16,4.76,2.43,7.25,3.5c0.34,0.15,0.87-0.09,1.12,0.12
	c1.52,1.22,3.46,1.11,4.85,2.33c1.7-0.5,3.49-0.12,5.22-0.75c0.08-0.03,0.31,0.31,0.34,0.29c1.13-0.75,2.29-0.48,3.18-0.17
	c0.34,0.12,1,0.36,1.31,0.44c1.13,0.28,1.98,0.76,3.16,0.94c0.11,0.02,0.3-0.32,0.37-0.29c1.12,0.44,2.16,0.38,2.82,1.55
	c0.13-0.13,0.3-0.37,0.38-0.35c1.03,0.34,1.68,1.09,2.78,1.33c0.49,0.11,1.1,0.73,1.67,0.91c2.39,0.73,4.24,2.26,6.43,3.16
	C350.82,35.19,351.69,35.42,352.33,35.92z"/>
<path fill="#CC7226" d="M275.69,21.69c-2.52-1.72-4.88-2.83-7.33-4.62c-0.18-0.13-0.54,0.04-0.74-0.08
	c-1.01-0.61-1.89-1.19-2.88-1.89c-0.54-0.38-1.36-0.37-1.87-0.63c-2.54-1.29-5.17-1.85-7.68-3.04c0.68-0.64,1.8-0.39,2.4-1.2
	c0.2,0.28,0.43,0.56,0.79,0.37c1.68-0.9,3.53-1.06,5.2-0.97c1.7,0.09,3.42,0.4,5.2,0.67c0.31,0.05,0.51,0.57,0.83,0.67
	c2.23,0.66,4.62,0.14,6.74,0.98c1.59,0.63,3.16,1.45,4.4,2.73c0.25,0.26-0.07,0.56-0.35,0.75c0.39-0.11,0.66,0.1,0.77,0.41
	c0.08,0.24,0.08,0.54,0,0.78c-0.11,0.31-0.39,0.41-0.76,0.46c-1.41,0.19,0.37-1.19-0.33-0.74c-1.27,0.81-0.53,2.22-1.27,3.49
	c-0.28-0.19-0.51-0.41-0.4-0.8c0.23,0.52-0.37,0.81-0.54,1.13C277.48,20.88,276.58,22.3,275.69,21.69z"/>
<path fill="#CC7226" d="M243.2,29.04c-3.15-0.79-6.2-0.68-9.22-1.96c-0.07-0.03-0.29,0.32-0.35,0.29c-1.37-0.59-2.28-1.56-3.36-2.61
	c-0.91-0.89-2.57-0.5-3.85-0.99c-0.32-0.12-0.53-0.64-0.83-0.68c-1.22-0.16-2.15-1.11-3.19-1.68c2.34-0.79,4.75-0.76,7.21-1.15
	c0.11-0.02,0.26,0.3,0.39,0.3c0.14,0,0.27-0.22,0.4-0.36c0.2,0.28,0.5,0.61,0.75,0.35c0.55-0.54,1.1-0.35,1.64-0.31
	c0.14,0.01,0.27,0.31,0.4,0.31c0.14,0,0.27-0.31,0.4-0.31c0.14,0,0.27,0.31,0.4,0.31c0.14,0,0.27-0.22,0.4-0.36
	c0.69,0.78,1.58,0.23,2.4,0.41c1.04,0.23,1.31,1.38,2.38,1.67c4.71,1.3,8.85,3.45,13.21,5.54c0.31,0.15,0.52,0.4,0.41,0.78
	c0.27,0,0.58-0.09,0.77,0.04c1.06,0.73,2.1,1.28,2.8,2.38c0.22,0.34-0.11,0.75-0.35,0.69C251.59,30.75,247.58,30.14,243.2,29.04z"/>
<path fill="#CC7226" d="M229.34,73.25c-1.59-1.22-2.18-3.25-3.3-5.04c-0.21-0.34,0.06-0.65,0.38-0.74c0.56-0.16,1.1,0.32,1.51,0.52
	c1.75,0.86,3.28,2.1,5.28,2.24c1.99,2.23,6.25,2.62,6.26,6c0,0.86-1.43-0.06-1.86,0.8c-2.45-1-4.84-0.9-7.22-2.37
	C229.76,74.28,230.09,73.83,229.34,73.25z"/>
<path fill="#CC7226" d="M201.8,20.67c0.14,0,7.17,0.23,7.15,0.35c-0.05,0.31-7.78,1.36-8.14,1.19c-0.16-0.08-7.68,2.35-7.81,2.22
	C193.27,24.29,201.53,20.67,201.8,20.67z"/>
<path d="M217.2,30.43c0,0-14.8,1.8-19.2,3s-23,8.8-26,10.8c0,0-13.4,5.4-30.4,25.4c0,0,7.6-3.4,9.8-6.2c0,0,13.6-12.6,13.4-10
	c0,0,12.2-8.6,11.6-6.4c0,0,24.4-11.2,22.4-8c0,0,21.6-4.6,20.6-2.6c0,0,18.8,4.4,16,4.6c0,0-5.8,1.2,0.6,4.8c0,0-3.4,4.4-8.8,0.4
	c-5.4-4-2.4-1.8-7.4-0.8c0,0-2.6,0.8-7.2-3.2c0,0-5.6-4.6-14.4-1c0,0-30.6,12.6-32.6,13.2c0,0-3.6,2.8-6,6.4c0,0-5.8,4.4-8.8,5.8
	c0,0-12.8,11.6-14,13c0,0-3.4,5.2-4.2,5.6c0,0,6.4-3.8,8.4-5.8c0,0,14-10,19.4-10.8c0,0,4.4-3,5.2-4.4c0,0,14.4-9.2,18.6-9.2
	c0,0,9.2,5.2,11.6-1.8c0,0,5.8-1.8,11.4-0.6c0,0,3.2-2.6,2.4-4.8c0,0,1.6-1.8,2.6,2c0,0,3.4,3.6,8.2,1.6c0,0,4-0.2,2,2.2
	c0,0-4.4,3.8-16.2,4c0,0-12.4,0.6-28.8,8.2c0,0-29.8,10.4-39,20.8c0,0-6.4,8.8-11.8,10c0,0-5.8,0.8-11.8,8.2c0,0,9.8-5.8,18.8-5.8
	c0,0,4-2.4,0.2,1.2c0,0-3.6,7.6-2,13c0,0-0.6,5.2-1.4,6.8c0,0-7.8,12.8-7.8,15.2c0,2.4,1.2,12.2,1.6,12.8c0.4,0.6-1-1.6,2.8,0.8
	s6.6,4,7.4,6.8c0.8,2.8-2-5.4-2.2-7.2c-0.2-1.8-4.4-9-3.6-11.4c0,0,1,1,1.8,2.4c0,0-0.6-0.6,0-4.2c0,0,0.8-5.2,2.2-8.4
	c1.4-3.2,3.4-7,3.8-7.8c0.4-0.8,0.4-6.6,1.8-4l3.4,2.6c0,0-2.8-2.6-0.6-4.8c0,0-1-5.6,0.8-8.2c0,0,7-8.4,8.6-9.4s0.2-0.6,0.2-0.6
	s6-4.2,0.2-2.6c0,0-4,1.6-7,1.6c0,0-7.6,2-3.6-2.2s14-9.6,17.8-9.4l0.8,1.6l11.2-2.4l-1.2,0.8c0,0-0.2-0.2,4-0.6
	c4.2-0.4,10,1,11.4-0.8c1.4-1.8,4.8-2.8,4.4-1.4c-0.4,1.4-0.6,3.4-0.6,3.4s5-5.8,4.4-3.6c-0.6,2.2-8.8,7.4-10.2,13.6l10.4-8.2l3.6-3
	c0,0,3.6,2.2,3.8,0.6s4.8-7.4,6-7.2c1.2,0.2,3.2-2.6,3,0s7.4,8,7.4,8s3.2-1.8,4.6-0.4s5.6-19.8,5.6-19.8l25-10.6l43.6-3.4l-17-6.8
	L217.2,30.43z"/>
<path fill="none" stroke="#4C0000" stroke-width="2" d="M235.4,229.43c0,0-15-16.8-23.4-19.4c0,0-13.4-6.8-38,1"/>
<path fill="none" stroke="#4C0000" stroke-width="2" d="M208.8,208.63c0,0-25.2-8-40.6-3.8c0,0-18.4,2-26.8,15.8"/>
<path fill="none" stroke="#4C0000" stroke-width="2" d="M205.2,207.43c0,0-17-7.2-31.8-9.4c0,0-16.6-2.6-33.2,4.6
	c0,0-12.2,6-17.6,16.2"/>
<path fill="none" stroke="#4C0000" stroke-width="2" d="M206.2,207.83c0,0-15.4-11-16.4-12.4c0,0-7-11-20-11.4
	c0,0-21.4,0.8-38.6,8.8"/>
<path d="M204.89,198.84c1.54,1.46,28.5,30.39,28.5,30.39c35.2,36.6,7.2,2.4,7.2,2.4c-7.6-4.8-16.8-23.6-16.8-23.6
	c-1.2-2.8,14,7.2,14,7.2c4,0.8,17.6,20,17.6,20c-6.8-2.4-2,4.8-2,4.8c2.8,2,23.2,17.6,23.2,17.6c3.6,4,7.6,5.6,7.6,5.6
	c14-5.2,7.6,8,7.6,8c2.4,6.8,8-4.8,8-4.8c11.2-16.8-5.2-14.4-5.2-14.4c-30,2.8-36.8-13.2-36.8-13.2c-2.4-2.4,6.4,0,6.4,0
	c8.4,2-7.2-12.4-7.2-12.4c2.4,0,11.6,6.8,11.6,6.8c10.4,9.2,12.4,7.2,12.4,7.2c18-8.8,28.4-1.2,28.4-1.2c2,1.6-3.6,8.4-2,13.6
	c1.6,5.2,6.4,17.6,6.4,17.6c-2.4,1.6-2,12.4-2,12.4c16.8,23.2,7.2,21.2,7.2,21.2c-15.6-0.4-0.8,7.2-0.8,7.2c3.2,2,12,9.2,12,9.2
	c-2.8-1.2-4.4,4-4.4,4c4.8,4,2,8.8,2,8.8c-6,1.2-7.2,5.2-7.2,5.2c6.8,8-3.2,8.4-3.2,8.4c3.6,4.4-1.2,16.4-1.2,16.4
	c-4.8,0-11.2,5.6-11.2,5.6c2.4,4.8-8,10.4-8,10.4c-8.4,1.6-5.6,8.4-5.6,8.4c-8,6-10.4,22-10.4,22c-0.8,10.4-3.2,13.6,2,11.6
	s4.4-14.4,4.4-14.4c-4.8-15.6,38-31.6,38-31.6c4-1.6,4.8-6.8,4.8-6.8c2,0.4,10.8,8,10.8,8c7.6,11.2,8,2,8,2c1.2-3.6-0.4-9.6-0.4-9.6
	c6-21.6-8-28-8-28c-10-33.6,4-25.2,4-25.2c2.8,5.6,13.6,10.8,13.6,10.8l3.6-2.4c-1.6-4.8,6.8-10.8,6.8-10.8c2.8,6.4,8.8-1.6,8.8-1.6
	c3.6-24.4,16-10,16-10c4,1.2,5.2-5.6,5.2-5.6c3.6-10.4,0-24,0-24c3.6-0.4,13.2,5.6,13.2,5.6c2.8-3.6-6.4-20.4-2.4-18
	c4,2.4,8.4,4,8.4,4c0.8-2-9.2-14.4-9.2-14.4c-4.4-2.8-9.6-23.2-9.6-23.2c7.2,3.6-2.8-11.6-2.8-11.6c0-3.2,6-14.4,6-14.4
	c-0.8-6.8,0-6.4,0-6.4c2.8,1.2,10.8,2.8,4-3.6s0.8-11.2,0.8-11.2c4.4-2.8-9.2-2.4-9.2-2.4c-5.2-4.4-4.8-8.4-4.8-8.4
	c8,2-6.4-12.4-8.8-16c-2.4-3.6,7.2-8.8,7.2-8.8c13.2-3.6,1.6-6.8,1.6-6.8c-19.6,0.4-8.8-10.4-8.8-10.4c6,0.4,4.4-2,4.4-2
	c-5.2-1.2-14.8-7.6-14.8-7.6c-4-3.6-0.4-2.8-0.4-2.8c16.8,1.2-12-10-12-10c8,0-10-10.4-10-10.4c-2-1.6-5.2-9.2-5.2-9.2
	c-6-5.2-10.8-12-10.8-12c-0.4-4.4-5.2-9.2-5.2-9.2c-11.6-13.6-17.2-13.2-17.2-13.2c-14.8-3.6-20-2.8-20-2.8l-52.8,4.4
	c-26.4,12.8-18.6,33.8-18.6,33.8c6.4,8.4,15.6,4.6,15.6,4.6c4.6-6.2,16.2-4,16.2-4c20.4,3.2,17.8-0.4,17.8-0.4
	c-2.4-4.6-18.6-10.8-18.8-11.4c-0.2-0.6-9-4-9-4c-3-1.2-7.4-10.4-7.4-10.4c-3.2-3.4,12.6,2.4,12.6,2.4c-1.2,1,6.2,5,6.2,5
	c17.4-1,28,9.8,28,9.8c10.8,16.6,11,8.4,11,8.4c2.8-9.4-9-30.6-9-30.6c0.4-2,8.6,4.6,8.6,4.6c1.4-2,2.2,3.8,2.2,3.8
	c0.2,2.4,4,10.4,4,10.4c2.8,13,6.4,5.6,6.4,5.6l4.6,9.4c1.4,2.6-4.6,10.2-4.6,10.2c-0.2,2.8,0.6,2.6-5,10.2c-5.6,7.6-2.2,12-2.2,12
	c-1.4,6.6,7.4,6.2,7.4,6.2c2.6,2.2,6,2.2,6,2.2c1.8,2,4.2,1.4,4.2,1.4c1.6-3.8,7.8-1.8,7.8-1.8c1.4-2.4,9.6-2.8,9.6-2.8
	c1-2.6,1.4-4.2,4.8-4.8c3.4-0.6-21.2-43.6-21.2-43.6c6.4-0.8-1.8-13.2-1.8-13.2c-2.2-6.6,9.2,8,11.4,9.4c2.2,1.4,3.2,3.6,1.6,3.4
	c-1.6-0.2-3.4,2-2,2.2c1.4,0.2,14.4,15.2,17.8,25.4c3.4,10.2,9.4,14.2,15.6,20.2s5.4,30.2,5.4,30.2c-0.4,8.8,5.6,19.4,5.6,19.4
	c2,3.8-2.2,22-2.2,22c-2,2.2-0.6,3-0.6,3c1,1.2,7.8,14.4,7.8,14.4c-1.8-0.2,1.8,3.4,1.8,3.4c5.2,6-1.2,3-1.2,3c-6-1.6,1,8.2,1,8.2
	c1.2,1.8-7.8-2.8-7.8-2.8c-9.2-0.6,2.4,6.6,2.4,6.6c8.6,7.2-2.8,2.8-2.8,2.8c-4.6-1.8-1.4,5-1.4,5c3.2,1.6,20.4,8.6,20.4,8.6
	c0.4,3.8-2.6,8.8-2.6,8.8c0.4,4-1.8,7.4-1.8,7.4c-1.2,8.2-1.8,9-1.8,9c-4.2,0.2-11.6,14-11.6,14c-1.8,2.6-12,14.6-12,14.6
	c-2,7-20-0.2-20-0.2c-6.6,3.4-4.6,0-4.6,0c-0.4-2.2,4.4-8.2,4.4-8.2c7-2.6,4.4-13.4,4.4-13.4c4-1.4-7.2-4.2-7-5.4
	c0.2-1.2,6-2.6,6-2.6c8-2,3.6-4.4,3.6-4.4c-0.6-4,2.4-9.6,2.4-9.6c11.6-0.8,0-17,0-17c-10.8-7.6-11.8-13.4-11.8-13.4
	c12.6-8.2,4.4-20.6,4.6-24.2c0.2-3.6,1.4-25.2,1.4-25.2c-2-6.2-5-19.8-5-19.8c2.2-5.2,9.6-17.8,9.6-17.8c2.8-4.2,11.6-9,9.4-12
	s-10-1.2-10-1.2c-7.8-1.4-7.2,3.8-7.2,3.8c-1.6,1-2.4,6-2.4,6c-0.72,7.93-9.6,14.2-9.6,14.2c-11.2,6.2-2,10.2-2,10.2
	c6,6.6-3.8,6.8-3.8,6.8c-11-1.8-2.8,8.4-2.8,8.4c10.8,12.8,7.8,15.6,7.8,15.6c-10.2,1,2.4,10.2,2.4,10.2s-0.8-2-0.6-0.2
	c0.2,1.8,3.2,6,4,8c0.8,2-3.2,2.2-3.2,2.2c0.6,9.6-14.8,5.4-14.8,5.4s0,0-1.6,0.2c-1.6,0.2-12.8-0.6-18.6-2.8
	c-5.8-2.2-12.6-2.2-12.6-2.2s-4,1.8-11.6,1.6s-15.6,2.6-15.6,2.6c-4.4-0.4,4.2-4.8,4.4-4.6s5.8-5.4-2.2-4.8
	c-21.8,1.63-32.6-8.6-32.6-8.6c-2-1.4-4.6-4.2-4.6-4.2c-10-2,1.4,12.4,1.4,12.4c1.2,1.4-0.2,2.4-0.2,2.4c-0.8-1.6-8.6-7-8.6-7
	C208.59,202.66,207.22,201.32,204.89,198.84z"/>
<path fill="#4C0000" d="M181,187.23c0,0,11.6,5.6,14.2,8.4c2.6,2.8,16.6,14.2,16.6,14.2s-5.4-2-8-3.8c-2.6-1.8-13.4-10-13.4-10
	S186.6,190.03,181,187.23z"/>
<path fill="#99CC32" d="M122.99,156.03c0.34-0.15-0.19-2.86-0.39-3.4c-1.02-2.73-10-4.2-10-4.2c-0.23,1.37-0.28,2.96-0.18,4.6
	C112.42,153.03,117.29,158.55,122.99,156.03z"/>
<path fill="#659900" d="M122.99,155.83c-0.45,0.16-0.02-2.73-0.19-3.2c-1.02-2.73-10.2-4.3-10.2-4.3c-0.23,1.37-0.28,2.96-0.18,4.6
	C112.42,152.93,116.69,158.05,122.99,155.83z"/>
<path d="M118.6,155.97c-0.62,0-1.13-1.14-1.13-2.55c0-1.4,0.51-2.54,1.13-2.54s1.13,1.14,1.13,2.54
	C119.73,154.83,119.22,155.97,118.6,155.97z"/>
<path d="M73,254.03c0,0-5.6,10,19.2,4c0,0,14-1.2,16.4-3.6c1.2,0.8,9.57,3.73,12.4,4.4c6.8,1.6,15.2-8.4,15.2-8.4s4.6-10.5,7.4-10.5
	c2.8,0-0.4,1.6-0.4,1.6s-6.6,10.1-6.2,11.7c0,0-5.2,20-21.2,20.8c0,0-16.15,0.95-14.8,6.8c0,0,8.8-2.4,11.2,0c0,0,10.8-0.4,2.8,6
	l-6.8,11.6c0,0,0.14,3.92-10,0.4c-9.8-3.4-20.1-16.3-20.1-16.3S62.15,267.98,73,254.03z"/>
<path fill="#E59999" d="M71.8,258.03c0,0-2,9.6,34.8-0.8c0,0,4.4,0,6.8,0.8c2.4,0.8,14.4,3.6,16.4,2.4c0,0-7.2,13.6-18.8,12
	c0,0-13.2,1.6-12.8,6.4c0,0,4,7.2,8.8,9.6c0,0,2.8,2.4,2.4,5.6c-0.4,3.2-3.2,4.8-5.2,5.6s-5.2-2.4-6.8-2.4s-10-6.4-14.4-11.2
	c-4.4-4.8-12.8-16.8-12.4-19.6S71.8,258.03,71.8,258.03z"/>
<path fill="#B26565" d="M75,275.48c2.6,3.95,5.8,8.15,8,10.55c4.4,4.8,12.8,11.2,14.4,11.2s4.8,3.2,6.8,2.4s4.8-2.4,5.2-5.6
	c0.4-3.2-2.4-5.6-2.4-5.6c-3.07-1.53-5.81-5.03-7.38-7.35c0,0,0.18,2.55-5.02,1.75c-5.2-0.8-10.4-3.6-12-6.8c-1.6-3.2-4-5.6-2.4-2
	c1.6,3.6,4,7.2,5.6,7.6c1.6,0.4,1.2,1.6-1.2,1.2c-2.4-0.4-5.2-0.8-9.6-6V275.48z"/>
<path fill="#992600" d="M72.4,254.43c0,0,1.8-13.6,3-17.6c0,0-0.8-6.8,1.6-11c2.4-4.2,4.4-10.4,7.4-15.8s3.2-9.4,7.2-11
	s10-10.2,12.8-11.2c2.8-1,2.6-0.2,2.6-0.2s6.8-14.8,20.4-10.8c0,0-16.2-2.8-0.4-12.2c0,0-4.8,1.1-1.5-5.9c2.2-4.67,1.7,2.1-9.3,13.9
	c0,0-5,8.6-10.2,11.6s-17.2,10-18.4,13.8c-1.2,3.8-4.4,9.6-6.4,11.2c-2,1.6-4.8,5.8-5.2,9.2c0,0-1.2,4-2.6,5.2
	c-1.4,1.2-1.6,4.4-1.6,6.4s-2,4.8-1.8,7.2c0,0,0.8,19,0.4,21L72.4,254.43z"/>
<path fill="#FFFFFF" d="M63.8,259.03c0,0-2-1.4-6.4,4.6c0,0,7.3,33,7.3,34.4c0,0,1.1-2.1-0.2-9.3s-2.2-19.9-2.2-19.9L63.8,259.03z"
	/>
<path fill="#992600" d="M85.4,198.43c0,0-17.6,3.2-17.2,32.4l-0.8,24.8c0,0-1.2-25.6-2.4-27.2s2.8-12.8-0.4-6.8c0,0-14,14-6,35.2
	c0,0,1.5,3.3-1.5-1.3c0,0-4.6-12.6-3.5-19c0,0,0.2-2.2,2.1-5c0,0,8.6-11.7,11.3-14c0,0,1.8-14.4,17.2-19.6
	C84.2,197.93,89.9,195.63,85.4,198.43z"/>
<path d="M224.8,132.23c0.66-0.35,0.65-1.32,1.23-1.5c1.15-0.34,1.31-1.41,1.83-2.2c0.87-1.32,1.07-2.85,1.65-4.34
	c0.27-0.7,0.3-1.66-0.01-2.31c-1.17-2.48-1.88-4.93-3.32-7.36c-0.27-0.45-0.53-1.24-0.73-1.84c-0.46-1.38-1.72-2.38-2.58-3.69
	c-0.29-0.44,0.24-1.37-0.48-1.45c-0.9-0.1-2.35-0.69-2.58,0.34c-0.59,2.59,0.42,5.11,1.39,7.55c-0.78,0.69-0.45,1.61-0.3,2.38
	c0.71,3.61-0.49,6.96-1.25,10.43c-0.02,0.1,0.32,0.3,0.29,0.36c-1.22,2.69-2.67,5.13-4.49,7.51c-0.76,0.99-1.63,1.91-2.13,2.97
	c-0.37,0.79-0.78,1.75-0.53,2.74c-3.43,2.78-5.68,6.62-8.3,10.47c-0.46,0.68-0.17,1.89,0.38,2.16c0.81,0.4,1.77-0.63,2.24-1.47
	c0.39-0.7,0.74-1.35,1.23-1.99c0.13-0.17-0.05-0.59,0.09-0.71c2.63-2.35,4.3-5.28,6.76-7.65c1.95-0.33,3.49-1.33,5.23-2.34
	c0.31-0.18,0.83,0.07,1.12-0.12c1.75-1.18,1.75-3.21,1.86-5.12C223.46,134.16,223.66,132.84,224.8,132.23z"/>
<path d="M215.96,127.76c0.12-0.08-0.03-0.5,0.08-0.72c0.16-0.32,0.56-0.51,0.73-0.84c0.11-0.22-0.05-0.6,0.08-0.74
	c2.33-2.45,2.59-5.47,1.55-8.44c1.02-0.62,1.08-1.88,0.66-2.73c-0.85-1.7-1.05-3.63-2.02-5.17c-0.8-1.27-2.38-2.51-3.75-1.21
	c-0.42,0.4-0.74,1.19-0.46,1.9c0.06,0.16,0.35,0.31,0.32,0.39c-0.11,0.32-0.65,0.55-0.66,0.82c-0.03,1.5-0.98,3.01-0.35,4.34
	c0.77,1.63,1.59,3.49,2.27,5.26c-1.23,2.12-0.2,4.56-1.95,6.44c-0.14,0.15-0.13,0.53,0,0.73c0.29,0.49,0.7,0.89,1.18,1.18
	c0.2,0.12,0.55,0.12,0.75,0C214.95,128.62,215.35,128.14,215.96,127.76z"/>
<path d="M278.77,117.45c1.39,1.79,1.68,4.59-0.37,5.98c0.55,3.31,3.9,1.33,6,0.8c-0.11-0.39,0.12-0.73,0.4-0.74
	c1.06-0.02,1.74-1.05,2.8-0.86c0.43-1.56,2.07-2.26,2.71-3.64c1.73-3.69,1.14-7.97-1.45-11.21c-0.2-0.25,0.01-0.77-0.11-1.13
	c-0.76-2.21-2.82-2.53-4.76-3.21c-1.18-3.88-1.84-7.91-3.6-11.6c-1.61-0.25-2.31-1.99-3.65-2.71c-1.33-0.72-1.9,0.86-1.86,1.91
	c0.01,0.2,0.46,0.43,0.29,0.79c-0.08,0.16-0.34,0.27-0.34,0.41c0,0.14,0.22,0.27,0.36,0.4c-0.92,0.82-2.34,1.3-2.64,2.44
	c-0.95,3.71,1.62,6.83,3.29,10.04c0.59,1.13-0.14,2.41-0.9,3.61c-0.44,0.69-0.33,1.82-0.05,2.68
	C275.64,113.73,277.23,115.47,278.77,117.45z"/>
<path d="M241.61,135.84c-1.49,1.85-4.9,4.42-1.98,6.35c0.19,0.13,0.56,0.13,0.74,0c2.02-1.56,4.02-2.47,6.46-3.05
	c0.12-0.03,0.4,0.44,0.77,0.28c1.61-0.7,3.62-0.65,4.81-1.98c3.77,0.22,7.33-0.89,10.72-2.2c1.16-0.45,2.43-1.01,3.63-1.51
	c1.38-0.58,2.58-1.5,3.69-2.65c0.13-0.14,0.49-0.05,0.75-0.05c-0.04-0.86,0.92-0.99,1.17-1.61c0.09-0.23-0.06-0.63,0.08-0.73
	c2.14-1.63,3.06-3.65,1.89-6.02c-0.29-0.58-0.53-1.2-1.1-1.67c-1.09-0.91-2.19-0.06-3.23-0.36c-0.16,0.63-0.89,0.46-1.27,0.65
	c-0.86,0.44-2.19-0.15-3.05,0.29c-1.36,0.69-2.6,0.86-4.02,1.24c-0.31,0.08-1.09-0.01-1.25,0.61c-0.13-0.13-0.28-0.37-0.39-0.35
	c-1.91,0.4-3.17,0.61-4.47,2.3c-0.1,0.13-0.54-0.05-0.7,0.09c-0.96,0.81-1.36,2.04-2.46,2.71c-0.2,0.12-0.55-0.04-0.75,0.08
	c-0.65,0.43-1.01,1.07-1.65,1.52c-0.33,0.23-0.73-0.1-0.7-0.35c0.25-1.95,0.9-3.73,0.32-5.61c2.08-2.52,4.59-4.47,6.4-7.2
	c0.02-2.17,0.71-4.31,0.59-6.39c-0.01-0.19-0.3-0.93-0.42-1.27c-0.31-0.85,0.59-1.92-0.25-2.64c-1.4-1.2-2.7-0.33-3.52,1.11
	c-1.84,0.39-3.9,1.08-5.48-0.15c-1.01-0.79-1.58-1.69-2.38-2.75c-0.99-1.3-0.65-2.74-0.58-4.3c0.01-0.13-0.31-0.26-0.31-0.4
	c0-0.13,0.22-0.27,0.35-0.4c-0.71-0.63-0.98-1.68-2-2c0.31-1.09-0.37-1.98-1.24-2.28c-1.99-0.69-3.67,1.22-5.56,1.29
	c-0.51,0.02-0.98-1.02-1.63-1.34c-0.43-0.22-1.14-0.25-1.5,0.02c-0.69,0.5-1.28,0.62-2.03,0.82c-1.62,0.44-2.9,1.53-4.38,2.38
	c-1.49,0.86-2.44,2.29-3.52,3.61c-0.94,1.15-1.08,3.57,0.34,4.07c1.84,0.65,3.15-2.05,5.11-1.73c0.31,0.05,0.52,0.36,0.41,0.75
	c0.39,0.11,0.61-0.12,0.8-0.4c0.86,1.02,2.02,1.36,2.96,2.23c0.97,0.9,2.72,0.49,3.73,1.48c1.53,1.5,0.97,4.18,2.91,5.49
	c-0.59,1.31-1.19,2.59-1.53,4.02c-0.28,1.21,0.71,2.4,1.92,2.31c1.26-0.09,1.52-0.85,2-1.93c0.27,0.27,0.74,0.56,0.7,0.78
	c-0.46,2.39-1.48,4.38-1.94,6.81c-0.06,0.32-0.36,0.52-0.75,0.41c-0.47,4.15-4.52,6.54-7.06,9.71c-0.4,0.5-0.41,1.75,0,2.15
	c1.4,1.39,3.36-0.16,5.06-0.66c0.21-1.21,1.07-2.15,2.4-2.09c0.26,0.01,0.49-0.53,0.81-0.66c0.35-0.14,0.85,0.09,1.14-0.11
	c1.73-1.19,3.14-2.3,4.88-3.49c0.19-0.13,0.54,0.03,0.75-0.08c0.32-0.16,0.51-0.55,0.83-0.73c0.35-0.2,0.59,0.09,0.78,0.37
	c-0.65,0.35-0.65,1.31-1.23,1.51c-0.77,0.27-1.34,0.78-2.01,1.23c-0.29,0.19-0.95-0.06-1.06,0.12
	C243.5,134.52,242.32,134.95,241.61,135.84z"/>
<path d="M186.2,86.43c0,0-9.24-2.87-20.4,22.8c0,0-2.4,5.2-4.8,7.2s-13.6,5.6-15.6,9.6l-10.4,16c0,0,14.8-16,18-18.4
	c0,0,8-8.4,4.8-1.6c0,0-14,10.8-12.8,20c0,0-5.6,14.4-6.4,16.4c0,0,16-32,18.4-33.2c2.4-1.2,3.6-1.2,2.4,2.4c-1.2,3.6-1.6,20-4.4,22
	c0,0,8-20.4,7.2-23.6c0,0,3.2-3.6,5.6,1.6l-1.2,16l4.4,12c0,0-2.4-11.2-0.8-26.8c0,0-2-10.4,2-4.8s13.6,11.6,13.6,16.4
	c0,0-5.2-17.6-14.4-22.4l-4,6l-1.2-2c0,0-3.6-0.8,0.8-7.6s4-7.6,4-7.6s6.4,7.2,8,7.2c0,0,13.2-7.6,14.4,16.8c0,0,6.8-14.4-2.4-21.2
	c0,0-14.8-2-13.6-7.2l7.2-12.4c3.6-5.2,2-2.4,2-2.4L186.2,86.43z"/>
<path d="M166.2,102.83c0,0-12.8,0-16,5.2l-7.2,9.6c0,0,17.2-10,21.2-11.2S166.2,102.83,166.2,102.83z"/>
<path d="M126.2,109.23c0,0-2,1.2-2.4,4c-0.4,2.8-2.8,3.2-2,6c0.8,2.8,2.8,5.2,2.8,1.2s1.6-6,2.4-7.2
	C127.8,112.03,129.4,107.63,126.2,109.23z"/>
<path d="M117.4,170.43c0,0-8.4-4-11.6-7.6c-3.2-3.6-2.75,1.57-7.6,1.2c-5.85-0.44-4.8-16.4-4.8-16.4l-4,7.6c0,0-1.2,14.4,6.8,12
	c3.91-1.17,5.2,0.4,3.6,1.2c-1.6,0.8,5.6,1.2,2.8,2.8c-2.8,1.6,11.6-3.6,9.2,6.8L117.4,170.43z"/>
<path d="M104.8,184.83c0,0-15.4,4.4-19-5.2c0,0-4.8,2.4-2.6,5.4c2.2,3,3.4,3.4,3.4,3.4s5.4,1.2,4.8,2s-3,4.2-3,4.2
	S98.6,188.63,104.8,184.83z"/>
<path fill="#FFFFFF" d="M333.2,263.03c-0.43,2.13-2.1,2.94-4,3.6c-1.92-0.96-4.52-4.06-6.4-2c-0.47-0.48-1.25-0.54-1.6-1.2
	c-0.46-0.9-0.19-1.94-0.54-2.74c-0.54-1.27-1.25-2.64-1.07-4.06c1.81-0.71,2.4-2.62,1.93-4.38c-0.07-0.26-0.5-0.45-0.3-0.8
	c0.19-0.32,0.5-0.55,0.77-0.82c-0.13,0.13-0.28,0.37-0.39,0.35c-0.61-0.11-0.49-0.74-0.36-1.13c0.58-1.75,2.6-2.01,3.95-0.82
	c0.26-0.56,0.76-0.37,1.2-0.4c-0.05-0.58,0.36-1.11,0.56-1.53c0.52-1.1,2.15,0.01,2.94-0.6c1.08-0.82,2.14-1.52,3.22-0.92
	c1.81,1.01,3.52,2.23,4.72,3.97c0.58,0.83,0.82,2.12,0.76,3.07c-0.04,0.65-1.42,0.3-1.76,1.22c-0.64,1.75,1.19,2.27,1.94,3.6
	c0.2,0.35-0.07,0.65-0.38,0.75c-0.41,0.13-1.2-0.06-1.06,0.39C338.3,261.78,335.55,262.46,333.2,263.03z"/>
<path fill="#FFFFFF" d="M323.6,282.63c-0.01-1.74-1.61-3.49-0.4-5.2c0.13,0.13,0.27,0.36,0.4,0.36s0.27-0.22,0.4-0.36
	c1.5,2.22,5.15,3.14,5,5.99c-0.02,0.45-1.11,1.37-0.21,2.01c-1.81,1.35-1.87,3.72-2.8,5.6c-1.24-0.29-2.45-0.65-3.6-1.2
	c0.35-1.49,0.24-3.17,1.06-4.49C323.89,284.64,323.6,283.56,323.6,282.63z"/>
<path fill="#CCCCCC" d="M157.4,273.63c0,0-16.86,10.14-2.8-5.2c8.8-9.6,18.8-15.2,18.8-15.2s10.4-4.4,14-5.6
	c3.6-1.2,18.8-6.4,22-6.8c3.2-0.4,12.8-4.4,19.6-0.4s14.8,8.4,14.8,8.4s-16.4-8.4-20-6c-3.6,2.4-10.8,2-16.8,5.2
	c0,0-14.8,4.4-18,6.4s-13.6,13.6-15.2,12.8c-1.6-0.8,0.4-1.2,1.6-4c1.2-2.8-0.8-4.4-8.8,2C158.6,271.63,157.4,273.63,157.4,273.63z"
	/>
<path d="M164.8,267.66c0,0,1.41-13.04,9.89-11.38c0,0,8.23-4.17,10.95-6.14c0,0,8.14-1.7,9.45-2.32c18.48-8.7,33.2-4.18,33.75-5.3
	c0.55-1.12,20.17,6,23.78,10.08c0.39,0.44-10.23-5.6-19.93-7.49c-8.27-1.61-29.88,0.25-40.78,5.78c-2.97,1.51-11.92,7.29-14.45,7.18
	C174.92,257.98,164.8,267.66,164.8,267.66z"/>
<path fill="#CCCCCC" d="M161,293.23c0,0-15.2-2.4,1.6-4c0,0,18-2,22-7.2c0,0,13.6-9.2,16.4-9.6s32.8-7.6,33.2-10
	c0.4-2.4,6-2.4,7.6-1.6c1.6,0.8,0.8,2-2,2.8c-2.8,0.8-34,17.2-40.4,18.4c-6.4,1.2-18,8.8-22.8,10
	C171.8,293.23,161,293.23,161,293.23z"/>
<path d="M180.52,285.83c0,0-8.58-0.83,0.02-1.65c0,0,8.82-3.42,10.86-6.09c0,0,6.96-4.71,8.4-4.92c1.43-0.21,15.39-3.89,15.6-5.12
	s34.27-13.81,38.69-10.62c2.91,2.1-6.99,0.42-16.62,4.83c-1.35,0.62-35.21,15.21-38.48,15.82c-3.28,0.62-9.22,4.51-11.67,5.12
	C184.85,283.83,180.52,285.83,180.52,285.83z"/>
<path d="M172.6,288.03c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L172.6,288.03z"/>
<path d="M165.4,289.63c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L165.4,289.63z"/>
<path d="M155,291.23c0,0,5.2-0.4,4,1.2s-3.6,0.8-3.6,0.8L155,291.23z"/>
<path d="M147.4,292.03c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L147.4,292.03z"/>
<path d="M185.8,252.43c0,0,4.4,0,3.2,1.6c-1.2,1.6-4.4,1.2-4.4,1.2L185.8,252.43z"/>
<path d="M175.8,258.03c0,0,6.51-2.14,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L175.8,258.03z"/>
<path d="M164.6,262.83c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L164.6,262.83z"/>
<path d="M157,268.83c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L157,268.83z"/>
<path d="M150.2,273.63c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L150.2,273.63z"/>
<path d="M189.28,280.03c0,0,6.92-0.53,5.32,1.6c-1.6,2.13-4.79,1.06-4.79,1.06L189.28,280.03z"/>
<path d="M199.68,275.23c0,0,6.92-0.53,5.32,1.6c-1.6,2.13-4.79,1.07-4.79,1.07L199.68,275.23z"/>
<path d="M210.48,270.83c0,0,6.92-0.53,5.32,1.6c-1.6,2.13-4.79,1.06-4.79,1.06L210.48,270.83z"/>
<path d="M220.88,266.03c0,0,6.92-0.53,5.32,1.6c-1.6,2.13-4.79,1.06-4.79,1.06L220.88,266.03z"/>
<path d="M193.28,248.03c0,0,6.92-0.53,5.32,1.6c-1.6,2.13-5.59,1.86-5.59,1.86L193.28,248.03z"/>
<path d="M203.28,244.83c0,0,6.92-0.53,5.32,1.6c-1.6,2.13-5.99,1.86-5.99,1.86L203.28,244.83z"/>
<path d="M180.6,284.83c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L180.6,284.83z"/>
<path fill="#992600" d="M107.4,185.63c0,0-4.4,8.8-4.8,12c0,0,0.8-8.8,2-10.8C105.8,184.83,107.4,185.63,107.4,185.63z"/>
<path fill="#992600" d="M89,199.63c0,0-3.2,14.4-2.8,17.2c0,0-1.2-11.6-0.8-12.8C85.8,202.83,89,199.63,89,199.63z"/>
<path fill="#CCCCCC" d="M109.8,125.03l-0.2,3.2l-2.2,0.2c0,0,14.2,12.6,14.8,20.2C122.2,148.63,123,140.43,109.8,125.03z"/>
<path d="M113.78,126.29c-0.43-0.42-0.21-1.16-0.62-1.42c-0.81-0.52,1.3-0.57,1.07-1.29c-0.38-1.21-0.2-1.23-0.32-2.5
	c-0.06-0.6,0.53-2.14,0.92-2.58c1.45-1.65,0.12-4.58,1.76-6.14c0.3-0.29,0.68-0.84,0.97-1.26c0.66-0.96,1.84-1.45,2.79-2.28
	c0.32-0.28,0.12-1.1,0.69-1.01c0.71,0.11,1.96-0.02,1.91,0.83c-0.11,2.12-1.44,3.84-2.72,5.51c0.45,0.7-0.01,1.34-0.29,1.9
	c-1.33,2.62-1.15,5.46-1.32,8.3c-0.01,0.08-0.31,0.16-0.3,0.22c0.35,2.33,0.94,4.53,1.82,6.76c0.37,0.93,0.84,1.83,0.99,2.75
	c0.11,0.69,0.21,1.52-0.19,2.22c2.04,2.89,0.73,5.54,1.9,9.07c0.21,0.62,1.9,2.54,1.44,2.38c-2.51-0.87-2.62-1.27-2.8-2.02
	c-0.15-0.62-0.48-2-0.71-2.6c-0.06-0.16-0.23-2.05-0.31-2.17c-1.51-2.38-0.15-2.21-1.52-4.56c-1.43-0.68-2.39-1.78-3.52-2.95
	c-0.2-0.2,0.95-0.93,0.76-1.14c-1.09-1.29-2.25-2.06-1.91-3.55C114.39,128.07,114.53,127.01,113.78,126.29z"/>
<path d="M110.2,128.03c0,0,0.4,6.8,2.8,8.4s1.2,0.8-2-0.4c-3.2-1.2-2-2-2-2s-2.8,0.4-0.4,2.4s6,4.4,4.4,4.4s-9.2-4-9.2-6.8
	c0-2.8-1-6.9-1-6.9s1.1-0.8,5.9-0.7C108.7,126.43,110.1,127.13,110.2,128.03z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M109.4,146.63c0,0-8.52-2.79-27,0.6c0,0,9.03-2.08,27.8,0.2
	C120.5,148.68,109.4,146.63,109.4,146.63z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M111.5,146.56c0,0-8.25-3.52-26.95-1.74c0,0,9.18-1.29,27.68,2.6
	C122.38,149.56,111.5,146.56,111.5,146.56z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M113.28,146.65c0,0-7.96-4.12-26.75-3.74c0,0,9.25-0.6,27.41,4.65
	C123.91,150.45,113.28,146.65,113.28,146.65z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M114.55,146.87c0,0-6.82-4.31-23.7-5.4c0,0,8.34,0.17,24.22,6.28
	C123.79,151.1,114.55,146.87,114.55,146.87z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M229.84,157.39c0,0-0.93,0.64-0.72-0.54
	c0.21-1.18,28.42-14.35,32.04-14.1C261.16,142.75,230.91,155.96,229.84,157.39z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M226.44,158.03c0,0-0.88,0.71-0.75-0.48
	c0.12-1.19,27.21-16.54,30.83-16.57C256.52,140.98,227.4,156.52,226.44,158.03z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M223.16,159.4c0,0-0.83,0.77-0.79-0.43
	c0.04-1.2,19.86-16.7,29.67-18.57C252.04,140.41,234.01,148.53,223.16,159.4z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M220.28,161.27c0,0-0.75,0.69-0.71-0.38
	c0.04-1.08,17.87-15.03,26.7-16.71C246.28,144.17,230.05,151.48,220.28,161.27z"/>
<path fill="#CCCCCC" d="M188.6,309.23c0,0-15.2-2.4,1.6-4c0,0,18-2,22-7.2c0,0,13.6-9.2,16.4-9.6c2.8-0.4,19.2-4,19.6-6.4
	c0.4-2.4,6.4-4.8,8-4c1.6,0.8,1.6,10-1.2,10.8c-2.8,0.8-21.6,8-28,9.2c-6.4,1.2-18,8.8-22.8,10
	C199.4,309.23,188.6,309.23,188.6,309.23z"/>
<path d="M261.6,271.83c0,0-3,1.6-4.2,4.2c0,0-6.4,10.6-20.6,13.8c0,0-23,9-30.8,11c0,0-13.4,5-20.8,4.2c0,0-7,0.2-0.8,1.8
	c0,0,20.2-2,23.6-3.8c0,0,15.6-5.2,18.6-7.8c3-2.6,21.2-7.6,23.4-9.6S262,275.23,261.6,271.83z"/>
<path d="M202.88,303.34c0,0,5.23-0.23,4.08,1.32s-3.6,0.68-3.6,0.68L202.88,303.34z"/>
<path d="M195.68,304.69c0,0,5.23-0.23,4.08,1.32c-1.15,1.55-3.6,0.68-3.6,0.68L195.68,304.69z"/>
<path d="M185.25,305.94c0,0,5.23-0.23,4.08,1.32c-1.15,1.55-3.6,0.68-3.6,0.68L185.25,305.94z"/>
<path d="M177.61,306.48c0,0,5.23-0.23,4.08,1.32c-1.15,1.55-3.6,0.68-3.6,0.68L177.61,306.48z"/>
<path d="M219.41,295.94c0,0,6.96-0.3,5.42,1.76c-1.53,2.06-4.79,0.9-4.79,0.9L219.41,295.94z"/>
<path d="M229.73,291.52c0,0,5.96-3.3,5.42,1.76c-0.27,2.56-4.79,0.9-4.79,0.9L229.73,291.52z"/>
<path d="M238.86,288.7c0,0,7.16-3.7,5.43,1.76c-0.78,2.45-4.79,0.9-4.79,0.9L238.86,288.7z"/>
<path d="M248.37,283.88c0,0,4.36-4.9,5.42,1.76c0.41,2.54-4.79,0.9-4.79,0.9L248.37,283.88z"/>
<path d="M210.83,300.43c0,0,5.23-0.23,4.08,1.32c-1.15,1.55-3.6,0.68-3.6,0.68L210.83,300.43z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M246.43,179.03c0,0-0.73,0.67-0.73-0.41
	c0-1.07,17.48-14.33,26.33-15.72C272.03,162.91,255.93,169.64,246.43,179.03z"/>
<path d="M249.4,242.83c0,0,22,22.4,31.2,26c0,0,9.2,11.2,5.2,37.2c0,0-3.2,7.6-6.4-13.2c0,0,3.2-25.2-8-9.2c0,0-8.4-9.9-2-9.6
	c0,0,3.2,2,3.6,0.4s-7.6-15.2-24.8-29.6C231,230.43,249.4,242.83,249.4,242.83z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M191,281.63c0,0-0.2-1.8,1.6-1c1.8,0.8,96,7,127.6,31
	C320.2,311.63,275,288.43,191,281.63z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M201.4,277.23c0,0-0.2-1.8,1.6-1s138.4-0.2,162,32.2
	C365,308.43,343,283.23,201.4,277.23z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M213,273.23c0,0-0.2-1.8,1.6-1c1.8,0.8,175.2-12.2,198.8,20.2
	C413.4,292.43,403.8,266.83,213,273.23z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M223,268.43c0,0-0.2-1.8,1.6-1c1.8,0.8,124-37.8,147.6-5.4
	C372.2,262.03,358.8,237.43,223,268.43z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M165,291.23c0,0-0.2-1.8,1.6-1c1.8,0.8,19.6,3,21.6,41.8
	C188.2,332.03,181,290.03,165,291.23z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M156.2,292.83c0,0-0.2-1.8,1.6-1c1.8,0.8,16-3.8,13.2,35
	C171,326.83,172.2,291.63,156.2,292.83z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M148.2,293.23c0,0-0.2-1.8,1.6-1c1.8,0.8,17.2,1.4,4.8,23.8
	C154.6,316.03,164.2,292.03,148.2,293.23z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M195.52,248.89c0,0-0.44,2,1.1,0.78
	c16.07-12.62,48.51-71.53,104.2-77.16C300.82,172.51,262.52,160.4,195.52,248.89z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M206.72,247.09c0,0-1.36-1.19,0.5-1.82s114.31-73.13,153.6-65.16
	C360.82,180.11,333.72,172.6,206.72,247.09z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M185.88,253.19c0,0-0.51,1.6,1.2,0.62
	c8.98-5.12,12.59-62.33,56.17-63.59C243.25,190.23,210.84,175.52,185.88,253.19z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M165.96,264.22c0,0-1.08,1.29,0.88,1.03
	c10.25-1.33,31.65-42.6,76.09-37.52C242.93,227.73,210.96,213.38,165.96,264.22z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M177.2,258.1c0,0-0.81,1.47,1.06,0.84
	c9.8-3.27,22.88-47.89,67.47-51.43C245.73,207.51,211.6,199.56,177.2,258.1z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M158.92,269.34c0,0-0.87,1.04,0.71,0.84
	c8.3-1.08,25.64-34.51,61.63-30.39C221.26,239.78,195.37,228.16,158.92,269.34z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M151.32,275.25c0,0-1.01,1.04,0.59,0.93
	c4.17-0.31,34.81-33.39,53.27-17.89C205.18,258.29,193.17,239.57,151.32,275.25z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M220.85,243.33c0,0-1.2-1.35,0.73-1.74
	c1.93-0.38,122.63-58.1,160.6-45.23C382.18,196.35,356.24,185.48,220.85,243.33z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M187.4,307.63c0,0-0.2-1.8,1.6-1s17.2,1.4,4.8,23.8
	C193.8,330.43,203.4,306.43,187.4,307.63z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M197.8,306.03c0,0-0.2-1.8,1.6-1c1.8,0.8,19.6,3,21.6,41.8
	C221,346.83,213.8,304.83,197.8,306.03z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M204.6,304.43c0,0-0.2-1.8,1.6-1c1.8,0.8,26.4,4.2,50,36.6
	C256.2,340.03,220.6,303.23,204.6,304.43z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M212.22,302.4c0,0-0.44-1.76,1.45-1.2
	c1.89,0.55,22.32-1.34,60.42,32.83C274.1,334.03,227.92,299.08,212.22,302.4z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M222.62,298c0,0-0.44-1.76,1.45-1.2c1.89,0.55,36.72,5.05,88.42,40.03
	C312.5,336.83,238.32,294.68,222.62,298z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M182.2,286.43c0,0-0.2-1.8,1.6-1c1.8,0.8,55.2,3.4,85.6,30.2
	C269.4,315.63,234.5,290.85,182.2,286.43z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M172.2,290.43c0,0-0.2-1.8,1.6-1c1.8,0.8,26.4,4.2,50,36.6
	C223.8,326.03,188.2,289.23,172.2,290.43z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M233.5,293.39c0,0-0.56-1.72,1.36-1.31c1.93,0.41,37,2.35,91.12,33.44
	C325.98,325.53,248.31,291.13,233.5,293.39z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M241.9,290.99c0,0-0.56-1.72,1.36-1.31c1.93,0.41,37,2.35,91.12,33.44
	C334.38,323.13,257.31,288.33,241.9,290.99z"/>
<path fill="#FFFFFF" stroke="#000000" stroke-width="0.1" d="M251.5,285.99c0,0-0.57-1.72,1.36-1.31c1.93,0.41,45,4.75,134.72,39.04
	C387.58,323.73,266.91,283.33,251.5,285.99z"/>
<path d="M140.2,292.83c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L140.2,292.83z"/>
<path d="M171,306.83c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L171,306.83z"/>
<path d="M162.2,306.43c0,0,5.2-0.4,4,1.2c-1.2,1.6-3.6,0.8-3.6,0.8L162.2,306.43z"/>
<path d="M66.83,294.61c0,0,5.04,1.32,3.39,2.44c-1.66,1.12-3.66-0.42-3.66-0.42L66.83,294.61z"/>
<path d="M68.83,285.01c0,0,5.04,1.32,3.39,2.44c-1.66,1.12-3.66-0.42-3.66-0.42L68.83,285.01z"/>
<path d="M61.63,280.61c0,0,5.04,1.32,3.39,2.44c-1.66,1.12-3.66-0.42-3.66-0.42L61.63,280.61z"/>
<path fill="#CCCCCC" d="M141.4,355.63c0,0-1.6,0-5.6,2c-2,0-13.2,3.6-18.8,13.6C117,371.23,129.4,361.63,141.4,355.63z"/>
<path fill="#CCCCCC" d="M229.11,448.27c0.14,0.26,0.2,0.68,0.49,0.7c0.66,0.04,1.89,0.34,1.77-0.29c-0.85-4.31-1.72-9.24-5.85-11.05
	c-0.64-0.28-2.08,0.13-2.16,1.02c-0.13,1.52-0.24,2.87,0.06,4.34c0.3,1.42,2.46,1.43,3.38,0.05
	C227.73,444.7,228.17,446.54,229.11,448.27z"/>
<path fill="#CCCCCC" d="M218.04,453.01c0.75,1.41,0.62,3.27,2.04,3.83c0.74,0.29,2.59-0.68,2.17-1.75c-0.8-2.06-1.19-4.3-2.58-6.11
	c-0.2-0.26,0.04-0.79-0.12-1.12c-0.59-1.22-1.74-1.96-3.15-1.63c-1.11,2.2,0.03,4.33,1.56,6.04
	C218.09,452.42,217.92,452.8,218.04,453.01z"/>
<path fill="#CCCCCC" d="M178.43,447.82c-0.11-0.38-0.15-0.84,0.02-1.16c0.53-1.03,1.32-2.16,0.99-3.18
	c-0.35-1.06-1.46-0.87-2.11-0.3c-1.14,0.99-1.18,2.82-1.88,4.18c-0.2,0.39-0.15,0.96-0.59,1.35c-0.47,0.42-0.91,1.94-0.82,2.52
	c0.05,0.31-0.13,10.22,0.09,9.96c0.62-0.73,3.67-10.47,3.74-11.36C177.93,449.09,178.67,448.62,178.43,447.82z"/>
<path fill="#CCCCCC" d="M152.8,441.03c2.63-2.5,5.42-5.46,4.98-9.17c-0.12-0.98-1.89-0.45-2.08,0.4c-0.8,3.62-2.84,6.29-5.41,8.68
	c-2.2,2.05-4.06,8.39-4.29,8.9C149.69,444.57,151.95,441.83,152.8,441.03z"/>
<path fill="#CCCCCC" d="M139.22,435.06c0.52-0.37,0.22-0.86,0.44-1.19c0.95-1.46,2.25-2.7,2.27-4.44c0-0.28-0.38-0.59-0.71-0.36
	c-0.28,0.18-0.62,0.31-0.73,0.44c-2.03,2.45-3.43,5.12-4.87,7.93c-0.18,0.36-1.33,4.85-1.01,4.96c0.24,0.08,1.96-4.1,2.17-4.21
	C138.04,437.51,138.05,435.89,139.22,435.06z"/>
<path fill="#CCCCCC" d="M155.95,454.61c0.44-0.87,2.02-2.07,1.91-2.96c-0.12-0.93,0.35-2.37-0.56-1.68c-1.26,0.95-4.71,2.3-4.98,8.1
	C152.3,458.64,155.27,455.95,155.95,454.61z"/>
<path fill="#CCCCCC" d="M170.4,437.43c0.4-0.67,1.11-0.2,1.57-0.46c0.65-0.37,1.26-0.93,1.55-1.58c0.97-2.15,2.74-3.97,2.88-6.36
	c-1.49-1.4-2.17,0.64-2.8,1.6c-1.32-1.65-2.32,0.23-3.62,0.75c-0.07,0.03-0.28-0.32-0.36-0.29c-1.18,0.44-1.86,1.52-2.85,2.3
	c-0.17,0.13-0.58-0.05-0.72,0.09c-0.65,0.6-1.62,0.93-1.9,1.61c-1.11,2.71-4.25,4.8-6.14,12.34c0.38,0.91,4.51-6.64,5-7.34
	c0.84-1.2,0.95,1.66,2.23,1c0.05-0.03,0.24,0.21,0.37,0.34c0.19-0.28,0.41-0.51,0.8-0.4c0-0.4-0.13-0.96,0.07-1.11
	c1.24-0.98,1.15-2.04,1.93-3.29C168.86,437.42,169.92,436.7,170.4,437.43z"/>
<path fill="#CCCCCC" d="M230.2,491.83c0,0,7.4-20.4,3-31.6c0,0,11.4,21.6,6.8,32.8c0,0-0.4-10.4-4.4-15.4
	C235.6,477.63,231.6,490.43,230.2,491.83z"/>
<path fill="#CCCCCC" d="M215.4,489.23c0,0,5.4-8.8-2.6-27.2c0,0-0.8,20.4-7.6,31.4C205.2,493.43,219.4,473.23,215.4,489.23z"/>
<path fill="#CCCCCC" d="M205.4,487.23c0,0-0.2-20,0.2-23c0,0-3.8,16.6-14,26.2C191.6,490.43,206,478.43,205.4,487.23z"/>
<path fill="#CCCCCC" d="M195.8,455.23c0,0,6,13.6-4,32c0,0,6.4-12.2,1.6-19.2C193.4,468.03,196,464.63,195.8,455.23z"/>
<path fill="#CCCCCC" d="M176.6,486.83c0,0-1-15.6,0.8-17.8c0,0,0.2-6.4-0.2-7.4c0,0,4-6.2,4.2,1.2c0,0,1.4,7.8,4.2,12.4
	c0,0,3.6,5.4,3.4,11.8C189,487.03,179,456.83,176.6,486.83z"/>
<path fill="#CCCCCC" d="M173,459.23c0,0-6.6,10.8-8.4,29.8c0,0-1.4-6.2,2.4-20.6C167,468.43,171.2,453.03,173,459.23z"/>
<path fill="#CCCCCC" d="M151.2,479.03c0,0,5-5.4,6.4-10.4c0,0,3.6-15.8-2.8-7.2c0,0,0.2,8-8,15.4
	C146.8,476.83,151.6,474.43,151.2,479.03z"/>
<path fill="#CCCCCC" d="M145.4,474.03c0,0,3.4-17.4,4.2-18.2c0,0,1.8-3.4-1-0.2c0,0-8.8,19.2-12.8,25.8
	C135.8,481.43,143.8,472.23,145.4,474.03z"/>
<path fill="#CCCCCC" d="M139.6,457.43c0,0,11.6-22.4-10.2,3.4C129.4,460.83,140.4,451.03,139.6,457.43z"/>
<path fill="#CCCCCC" d="M124.2,442.83c0,0,4.8-18.8,7.4-18.6c0,0,8.2-9,1.6,1.6c0,0-6,9.6-5.4,19.4
	C127.8,445.23,127.2,435.63,124.2,442.83z"/>
<path fill="#CCCCCC" d="M454.5,431.43c0,0-12-10-14.5-13.5c0,0,13.5,18.5,13.5,25.5C453.5,443.43,456,435.93,454.5,431.43z"/>
<path fill="#CCCCCC" d="M460,409.43c0,0-21-15-24.5-22.5c0,0,26.5,29.5,26.5,34C462,420.93,462.5,411.93,460,409.43z"/>
<path fill="#CCCCCC" d="M477,255.43c0,0-12-8-13.5-6c0,0,10.5,6.5,13,15C476.5,264.43,475,255.43,477,255.43z"/>
<path fill="#CCCCCC" d="M485.5,335.93l-17.5-12c0,0,19,17,19.5,21L485.5,335.93z"/>
<path fill="none" stroke="#000000" d="M94.75,313.43l22,4.75"/>
<path fill="none" stroke="#000000" d="M145,475.43c0,0-0.5-3.5-9.5,7"/>
<path fill="none" stroke="#000000" d="M150.5,480.43c0,0,2-6.5-4.5-2"/>
<path fill="none" stroke="#000000" d="M204.5,488.93c0,0,1.5-11-10,2"/>
</svg>

<canvas id="c1" width="650" height="650" style="border:1px solid #ccc"></canvas>
<canvas id="c2" width="650" height="650" style="border:1px solid #ccc"></canvas>

<script>
(function() {
    console.time('FabricjsRender');
    console.time('CanvgRender');
    var canvas = new fabric.Canvas('c1');
//    fabric.loadSVGFromURL('../lib/tiger.svg', function(objects, options) {
    function onRender1(objects, options){
        var obj = fabric.util.groupSVGElements(objects, options);
        obj.scale(1);
        obj.clone(function(clone){ canvas.add(clone) });
        setTimeout(function(d, i){ console.log('fabricjs: ', canvas.lowerCanvasEl.toDataURL("image/jpeg")); }, 0);
        console.timeEnd('FabricjsRender');
    }

    function onRender2(){
        var canvasNode = document.querySelector('#c2');
        setTimeout(function(d, i){ console.log('canvg: ', canvasNode.toDataURL("image/jpeg")); }, 0);
        console.timeEnd('CanvgRender');
    }

    var svgNode = document.querySelector('svg');
    var serializer = new XMLSerializer();
    var xmlString = serializer.serializeToString(svgNode);
    fabric.loadSVGFromString(xmlString, onRender1);
    canvg('c2', xmlString, {renderCallback: onRender2});

})();
</script>
</body>
</html><!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Random tree II</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
        <script src="index.js"></script>
    </head>
    <body onload="main()"></body>
</html><!doctype html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>leaflet+OpenStreetMapのテスト</title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
    <!--[if lte IE 8]>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.ie.css" />
    <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>

    <style type="text/css">
    #map {
        height: 500px;
        width: 500px;
    }
    </style>
</head>
<body>
    <div id="map"></div>

    <script type="text/javascript">
        // 位置とズームを決めてマップを描画
        var map = L.map('map',{
            center:[35.40, 139.50],
            zoom: 13
        });

        // OpenStreetMapを使うためのおまじない
        var tileLayer = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution : '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        });
        tileLayer.addTo(map);

        // 指定した位置にマーカーを置く
        var mapMarker = L.marker([35.40, 139.50]);
        mapMarker.addTo(map);
        mapMarker.bindPopup('ここですよ！');
        mapMarker.openPopup();
    </script>
</body>
</html><html>
<head>
    <title>Treemap with Wrapping and Truncated Labels</title>
    <meta charset="utf-8">
    <!-- poor man's browser detection -->
    <!--[if IE]><script type="text/javascript">window['isIE'] = true;</script><![endif]-->
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="d3.v3.min.js"></script>
 
    <style type="text/css">
        html, body {
            overflow: hidden;
            margin: 0;
            font-family: "Helvetica Neue", Helvetica;
        }
        rect {
            fill: none;
            stroke: #FFFFFF;
        }
        .labelbody {
            margin: 2px;
        }
        .foreignObject {
            font: 9px sans-serif;
            text-overflow: ellipsis;
            text-align: left;
            word-wrap: break-word;
        }
    </style>
</head>
<body>
<div id="chart"></div>
 
 <p>
<button onclick="switchData('data-to-what.json')">Show: "Adaptive to What?"</button>
<button onclick="switchData('data-what.json')">Show: "Adapting What?"</button>
</p>

<script type="text/javascript">
    var w = 700;
    var h = 700;
    var paddingAllowance = 2;
    var color = d3.scale.category20c();
 
    var treemap = d3.layout.treemap()
        .size([w, h])
        .padding([20, 4, 4, 4])
        .value(function(d) {
            return d.size;
        });
 
    var svg = d3.select("#chart").append("svg")
        .style("position", "relative")
        .style("width", w + "px")
        .style("height", h + "px")
        .append("g")
        .attr("transform", "translate(-.5,-.5)");
 
 function switchData(dataFn) {
	d3.select("svg").remove();
	
	treemap = d3.layout.treemap()
        .size([w, h])
        .padding([20, 4, 4, 4])
        .value(function(d) {
            return d.size;
        });
		
	svg = d3.select("#chart").append("svg")
        .style("position", "relative")
        .style("width", w + "px")
        .style("height", h + "px")
        .append("g")
        .attr("transform", "translate(-.5,-.5)");
		
	drawTreemap(dataFn);
}
function drawTreemap(datFn01) {
    d3.json(datFn01, function(json) {
        var cell = svg.data([json]).selectAll("g")
            .data(treemap)
            .enter().append("g")
            .attr("class", "cell")
            .attr("transform", function(d) {
                return "translate(" + d.x + "," + d.y + ")";
            });
 
        cell.append("rect")
            .attr("width", function(d) {
                return d.dx;
            })
            .attr("height", function(d) {
                return d.dy;
            })
            .style("fill", function(d) {
                return d.children ? color(d.name) : null;
            });
 
        if (window['isIE']) { // IE sucks so you have to manually truncate the labels here
            cell.append("text")
                .attr("class", "foreignObject")
                .attr("transform", "translate(3, 13)")
                .text(function(d) {
                    return (d.dy < 16 ? "" : d.name);
                })
                .filter(function(d) {
                    d.tw = this.getComputedTextLength();
                    return d.dx < d.tw;
                })
                .each(function(d) { // ridiculous routine where we test to see if label is short enough to fit
                    var proposedLabel = d.name;
                    var proposedLabelArray = proposedLabel.split('');
                    while (d.tw > d.dx && proposedLabelArray.length) {
                        // pull out 3 chars at a time to speed things up (one at a time is too slow)
                        proposedLabelArray.pop(); proposedLabelArray.pop(); proposedLabelArray.pop();
                        if (proposedLabelArray.length===0) {
                            proposedLabel = "";
                        } else {
                            proposedLabel = proposedLabelArray.join('') + "..."; // manually truncate with ellipsis
                        }
                        d3.select(this).text(proposedLabel);
                        d.tw = this.getComputedTextLength();
                    }
                });
        } else {
            // normal browsers use these labels; using foreignObject inside SVG allows use of wrapping text inside
            // divs rather than less-flexible svg-text labels
            cell.append("foreignObject")
                .attr("class", "foreignObject")
                .attr("width", function(d) {
                    return d.dx - paddingAllowance;
                })
                .attr("height", function(d) {
                    return d.dy - paddingAllowance;
                })
                .append("xhtml:body")
                .attr("class", "labelbody")
                .append("div")
                .attr("class", "label")
                .text(function(d) {
                    return d.name;
                })
                .attr("text-anchor", "middle")
        }
    });
}
 
</script>

<script type="text/javascript">
drawTreemap('data-to-what.json');
</script>

</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.stroke {
  fill: none;
  stroke: #000;
  stroke-width: .5;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.tile.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.mercator()
    .center([-96, 38.3])
    .scale(890);

var path = d3.geo.path()
    .projection(projection);

var tile = d3.geo.tile()
    .scale(projection.scale() * 2 * Math.PI)
    .translate(projection([0, 0]))
    .zoomDelta((window.devicePixelRatio || 1) - .5);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/us.json", function(error, topology) {
  var tiles = tile();

  var defs = svg.append("defs");

  defs.append("path")
      .attr("id", "land")
      .datum(topojson.feature(topology, topology.objects.land))
      .attr("d", path);

  defs.append("clipPath")
      .attr("id", "clip")
    .append("use")
      .attr("xlink:href", "#land");

  svg.append("g")
      .attr("clip-path", "url(#clip)")
    .selectAll("image")
      .data(tiles)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/mapbox.natural-earth-2/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles.scale))
      .attr("height", Math.round(tiles.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles.translate[0]) * tiles.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles.translate[1]) * tiles.scale); });

  svg.append("use")
      .attr("xlink:href", "#land")
      .attr("class", "stroke");
});

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>D3 Geom</title>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  </head>

	<body>
		<div id="chartArea">
		</div>
		<script src="main.js"></script>
	</body>

</html><!DOCTYPE html>
<head>
<meta charset="utf-8">
<style>

svg {
  background-color: #333;
}

.stroke {
  fill: none;
  stroke: #222;
  stroke-width: .5;
}

</style>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.tile.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.mercator()
    .center([-122, 48.7])
    .scale(7200);

var path = d3.geo.path()
    .projection(projection);

var tile = d3.geo.tile()
    .scale(projection.scale() * 2 * Math.PI)
    .translate(projection([0, 0]))
    .zoomDelta((window.devicePixelRatio || 1) - .5);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

//USA!

d3.json("world-50m.json", function(error, topology) {
 var amurka = topology.objects.countries.geometries.filter(function(d) { return d.id == 840; })[0];
 var canada = topology.objects.countries.geometries.filter(function(d) { return d.id == 124; })[0];
 var mexico = topology.objects.countries.geometries.filter(function(d) { return d.id == 484; })[0];
 var cuba = topology.objects.countries.geometries.filter(function(d) { return d.id == 192; })[0];
 
  var tiles1 = tile();
  var tiles2 = tile();
  var tiles3 = tile();
  var tiles4 = tile();

  var defs = svg.append("defs");

//USA!
  defs.append("path")
      .attr("id", "usa")
      .datum(topojson.feature(topology, amurka))
      .attr("d", path)

  defs.append("clipPath")
      .attr("id", "clip1")
    .append("use")
      .attr("xlink:href", "#usa");

  svg.append("g")
      .attr("clip-path", "url(#clip1)")
    .selectAll("image")
      .data(tiles1)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.ga0g9p2n/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles1.scale))
      .attr("height", Math.round(tiles1.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles1.translate[0]) * tiles1.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles1.translate[1]) * tiles1.scale); });

  svg.append("use")
      .attr("xlink:href", "#usa")
      .attr("class", "stroke");

//CANADA!
  defs.append("path")
      .attr("id", "can")
      .datum(topojson.feature(topology, canada))
      .attr("class", "land can")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip2")
    .append("use")
      .attr("xlink:href", "#can");

  svg.append("g")
      .attr("clip-path", "url(#clip2)")
    .selectAll("image")
      .data(tiles2)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.ghfcid9o/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles2.scale))
      .attr("height", Math.round(tiles2.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles2.translate[0]) * tiles2.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles2.translate[1]) * tiles2.scale); });

  svg.append("use")
      .attr("xlink:href", "#can")
      .attr("class", "stroke");

  //Mexico!

  defs.append("path")
      .attr("id", "mex")
      .datum(topojson.feature(topology, mexico))
      .attr("class", "land mex")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip3")
    .append("use")
      .attr("xlink:href", "#mex");

  svg.append("g")
      .attr("clip-path", "url(#clip3)")
    .selectAll("image")
      .data(tiles3)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.g9caodmg/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles3.scale))
      .attr("height", Math.round(tiles3.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles3.translate[0]) * tiles3.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles3.translate[1]) * tiles3.scale); });

  svg.append("use")
      .attr("xlink:href", "#mex")
      .attr("class", "stroke");

  //Cuba!

  defs.append("path")
      .attr("id", "cub")
      .datum(topojson.feature(topology, cuba))
      .attr("class", "land cub")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip4")
    .append("use")
      .attr("xlink:href", "#cub");

  svg.append("g")
      .attr("clip-path", "url(#clip4)")
    .selectAll("image")
      .data(tiles4)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.gbn69pja/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles4.scale))
      .attr("height", Math.round(tiles4.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles4.translate[0]) * tiles4.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles4.translate[1]) * tiles4.scale); });

  svg.append("use")
      .attr("xlink:href", "#cub")
      .attr("class", "stroke");
});

</script>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body{
  padding:0px;
  margin:0px;
}

path {
  stroke: white;
  stroke-width: 0.25px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 900
var height = 600

var projection1 = d3.geo.mercator()
    .scale((width + 1) / 2 / Math.PI)
    .translate([width / 2, height / 2])
    .precision(.1);

var projection2 = d3.geo.mercator()
    .scale((width + 1) / 2 / Math.PI)
    .translate([width*1.5, height / 2])
    .precision(.1);

var projection3 = d3.geo.mercator()
    .scale((width + 1) / 2 / Math.PI)
    .translate([-width/2, height / 2])
    .precision(.1);

var path1 = d3.geo.path()
    .projection(projection1);

var path2 = d3.geo.path()
    .projection(projection2);

var path3 = d3.geo.path()
    .projection(projection3);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)

var g1 = svg.append("g").attr("class", "active")
var g2 = svg.append("g").attr("class", "active")
var g3 = svg.append("g").attr("class", "active")

d3.json("https://gist.github.com/l-r/7952739#file-world-110m2-json", function(error, world) {
      g1.append("path")
      .datum(topojson.feature(world, world.objects.countries))
      .attr("d", path1);

      g2.append("path")
      .datum(topojson.feature(world, world.objects.countries))
      .attr("d", path2);

      g3.append("path")
      .datum(topojson.feature(world, world.objects.countries))
      .attr("d", path3);

});

var zoom1 = d3.behavior.zoom()
    .on("zoom",function() {
        g1.attr("transform","translate("+ 
        d3.event.translate.join(",")+")scale("+d3.event.scale+")")
        g1.selectAll("path")  
        .attr("d", path1.projection(projection1))

        g2.attr("transform","translate("+ 
        d3.event.translate.join(",")+")scale("+d3.event.scale+")")
        g2.selectAll("path")  
        .attr("d", path2.projection(projection2))

        g3.attr("transform","translate("+ 
        d3.event.translate.join(",")+")scale("+d3.event.scale+")")
        g3.selectAll("path")  
        .attr("d", path3.projection(projection3))

  });
        
svg.call(zoom1)

</script><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  position: relative;
  width: 960px;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

label {
  position: absolute;
  top: 10px;
  right: 10px;
}

</style>
<body>
<label><input type="checkbox"> Sort values</label>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500,
    barHeight = height / 2 - 40;

var formatNumber = d3.format("s");

var color = d3.scale.ordinal()
    .range(["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width/2 + "," + height/2 + ")");

d3.csv("data.csv", function(error, data) {

  var extent = d3.extent(data, function(d) { return d.value; });
  var barScale = d3.scale.linear()
      .domain(extent)
      .range([0, barHeight]);

  var keys = data.map(function(d,i) { return d.name; });
  var numBars = keys.length;

  var x = d3.scale.linear()
      .domain(extent)
      .range([0, -barHeight]);

  var xAxis = d3.svg.axis()
      .scale(x).orient("left")
      .ticks(3)
      .tickFormat(formatNumber);
      
  var circles = svg.selectAll("circle")
          .data(x.ticks(3))
        .enter().append("circle")
          .attr("r", function(d) {return barScale(d);})
          .style("fill", "none")
          .style("stroke", "black")
          .style("stroke-dasharray", "2,2")
          .style("stroke-width",".5px");

  var arc = d3.svg.arc();
  
  var segments = svg.selectAll("path")
          .data(data)
        .enter().append("path")
          .each(function(d,i) { 
            d.innerRadius = 0;
            d.outerRadius = barScale(+d.value); 
            d.startAngle = (i * 2 * Math.PI) / numBars;
            d.endAngle = ((i + 1) * 2 * Math.PI) / numBars;
          })
          .style("fill", function (d) { return color(d.name); })
          .attr("d", arc);

  svg.append("circle")
      .attr("r", barHeight)
      .classed("outer", true)
      .style("fill", "none")
      .style("stroke", "black")
      .style("stroke-width","1.5px");

  var lines = svg.selectAll("line")
      .data(keys)
    .enter().append("line")
      .attr("y2", -barHeight - 20)
      .style("stroke", "black")
      .style("stroke-width",".5px")
      .attr("transform", function(d, i) { return "rotate(" + (i * 360 / numBars) + ")"; });

  svg.append("g")
    .attr("class", "x axis")
    .call(xAxis);

  // Labels
  var labelRadius = barHeight * 1.025;

  var labels = svg.append("g")
      .classed("labels", true);

  labels.append("def")
        .append("path")
        .attr("id", "label-path")
        .attr("d", "m0 " + -labelRadius + " a" + labelRadius + " " + labelRadius + " 0 1,1 -0.01 0");

  labels.selectAll("text")
        .data(data)
      .enter().append("text")
        .style("text-anchor", "middle")
        .style("font-weight","bold")
        .style("fill", function(d, i) {return "#3e3e3e";})
        .append("textPath")
        .attr("class","textpath")
        .attr("xlink:href", "#label-path")
        .attr("startOffset", function(d,i) {return i * 100 / numBars + 50 / numBars + '%';})
        .text(function(d) {return d.name.toUpperCase(); });

  d3.select("input").on("change", change);

  function change() {
    
    if (this.checked) {
     labels.selectAll(".textpath").sort(function(a,b) { return b.value - a.value; });
     segments.sort(function(a,b) { return b.value - a.value; });

    }else {
      labels.selectAll(".textpath").sort(function(a,b) { return d3.ascending(a.name, b.name) });
      segments.sort(function(a,b) { return d3.ascending(a.name, b.name); });
    }; 

    segments.transition().duration(2000).delay(100)
            .attrTween("d", function(d,index) {
              var i = d3.interpolate(d.startAngle, (index * 2 * Math.PI) / numBars );
              var u = d3.interpolate(d.endAngle, ((index + 1) * 2 * Math.PI) / numBars );
              return function(t) { d.endAngle = u(t); d.startAngle = i(t); return arc(d,index); };
            });

   labels.selectAll(".textpath").transition().duration(2000).delay(100)
      .attr("startOffset", function(d,i) {return i * 100 / numBars + 50 / numBars + '%'; })
  }


});

</script>
<!DOCTYPE html>
<head>
<meta charset="utf-8">
<style>

svg {
  background-color: #333;
}

.stroke {
  fill: none;
  stroke: #222;
  stroke-width: .5;
}

</style>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.tile.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.mercator()
    .center([-122, 48.7])
    .scale(7200);

var path = d3.geo.path()
    .projection(projection);

var tile = d3.geo.tile()
    .scale(projection.scale() * 2 * Math.PI)
    .translate(projection([0, 0]))
    .zoomDelta((window.devicePixelRatio || 1) - .5);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

//USA!

d3.json("world-50m.json", function(error, topology) {
 var amurka = topology.objects.countries.geometries.filter(function(d) { return d.id == 840; })[0];
 var canada = topology.objects.countries.geometries.filter(function(d) { return d.id == 124; })[0];
 var mexico = topology.objects.countries.geometries.filter(function(d) { return d.id == 484; })[0];
 var cuba = topology.objects.countries.geometries.filter(function(d) { return d.id == 192; })[0];
 
  var tiles1 = tile();
  var tiles2 = tile();
  var tiles3 = tile();
  var tiles4 = tile();

  var defs = svg.append("defs");

//USA!
  defs.append("path")
      .attr("id", "usa")
      .datum(topojson.feature(topology, amurka))
      .attr("d", path)

  defs.append("clipPath")
      .attr("id", "clip1")
    .append("use")
      .attr("xlink:href", "#usa");

  svg.append("g")
      .attr("clip-path", "url(#clip1)")
    .selectAll("image")
      .data(tiles1)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tile.stamen.com/terrain/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles1.scale))
      .attr("height", Math.round(tiles1.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles1.translate[0]) * tiles1.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles1.translate[1]) * tiles1.scale); });

  svg.append("use")
      .attr("xlink:href", "#usa")
      .attr("class", "stroke");

//CANADA!
  defs.append("path")
      .attr("id", "can")
      .datum(topojson.feature(topology, canada))
      .attr("class", "land can")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip2")
    .append("use")
      .attr("xlink:href", "#can");

  svg.append("g")
      .attr("clip-path", "url(#clip2)")
    .selectAll("image")
      .data(tiles2)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tile.stamen.com/toner/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles2.scale))
      .attr("height", Math.round(tiles2.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles2.translate[0]) * tiles2.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles2.translate[1]) * tiles2.scale); });

  svg.append("use")
      .attr("xlink:href", "#can")
      .attr("class", "stroke");

  //Mexico!

  defs.append("path")
      .attr("id", "mex")
      .datum(topojson.feature(topology, mexico))
      .attr("class", "land mex")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip3")
    .append("use")
      .attr("xlink:href", "#mex");

  svg.append("g")
      .attr("clip-path", "url(#clip3)")
    .selectAll("image")
      .data(tiles3)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.g9caodmg/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles3.scale))
      .attr("height", Math.round(tiles3.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles3.translate[0]) * tiles3.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles3.translate[1]) * tiles3.scale); });

  svg.append("use")
      .attr("xlink:href", "#mex")
      .attr("class", "stroke");

  //Cuba!

  defs.append("path")
      .attr("id", "cub")
      .datum(topojson.feature(topology, cuba))
      .attr("class", "land cub")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip4")
    .append("use")
      .attr("xlink:href", "#cub");

  svg.append("g")
      .attr("clip-path", "url(#clip4)")
    .selectAll("image")
      .data(tiles4)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.gbn69pja/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles4.scale))
      .attr("height", Math.round(tiles4.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles4.translate[0]) * tiles4.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles4.translate[1]) * tiles4.scale); });

  svg.append("use")
      .attr("xlink:href", "#cub")
      .attr("class", "stroke");
});

</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Languages spoken in Chicago</title>
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: crimson;
			}
			
				.axis path,
				.axis line {
					fill: none;
					stroke: black;
					shape-rendering: crispEdges;
				}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1>Chinese as a first language spoken in Chicago</h1>

		<p>The number of Chicagoans who speak Chinese as their first language. Source: <a href="https://data.cityofchicago.org/Health-Human-Services/Census-Data-Languages-spoken-in-Chicago-2008-2012/a2fk-ec6q">City of Chicago</a>, 2008 – 2012</p>

		<script type="text/javascript">		


			var w = 1200;
			var h = 500;
			var padding = [ 20, 10, 30, 50 ];  //Top, right, bottom, left



			var xScale = d3.scale.linear()
				.range([padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
				.range([ padding[0], h - padding[2] ], 0.1);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(15);

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
							.tickFormat(function(d) {
								return d;
							});



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("languages.csv", function(data) {

				xScale.domain([
					d3.min(data, function(d) {
						return +d.CommunityArea;
					}),
					d3.max(data, function(d) {
						return +d.CommunityArea;
					})
				]);
				yScale.domain([
					d3.max(data, function(d){
						return +d.CHINESE; 
					}),
					d3.min(data, function(d){
						return +d.CHINESE;
					})
				]);

				


				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles.attr("cx",function(d) {
					return xScale(d.CommunityArea);
				})
					.attr("cy", function(d) {
						return yScale(d.CHINESE);
					})
					.attr("r", 0.1) 
					.attr("fill", "powderBlue")
					.append("title")
					.text(function(d) {
						return d.CommunityAreaName + " has " + d.CHINESE + " Chicagoans who speak Chinese as their First Language";
					});
				circles.transition()
					.duration(1000)
					.attr("r",4)

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2] + 10) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3] - 10) + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Module 4 - Exercise</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">

		body {
			background-color: white;
			font-family: Helvetica, Arial, sans-serif;
		}

		h1 {
			font-size: 20px;
			margin: 0;

		}

		p {
			font-size: 12px;
			margin: 10px 0 10px 0;
		}

		svg {
			background-color: white;
		}

		rect:hover {
			fill: #5ab4ac;
		}

		.axis path,
		.axis line {
			fill: none;
			stroke: black;
			shape-rendering: crispEdges;
		}

		.axis text {
			font-family: sans-serif;
			font-size: 12px;
		}

		.y.axis path,
		.y.axis line {
			opacity: 0;
		}

		</style>
	</head>
	<body>

<h1> <b> Investing in society </b> </h1>

<p>Social expenditure in OECD countries (as % of GDP). <a href="http://www.oecd-ilibrary.org/social-issues-migration-health/data/social-expenditure/aggregated-data_data-00166-en"> Explore the data </a> </p>

		<script type="text/javascript">

			var w = 600;
			var h = 650;
			var padding = [ 20, 10, 30, 120 ];

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			var widthScale = d3.scale.linear()
						.range([ 0, w - padding[1] - padding[3] ]);

			var heightScale = d3.scale.ordinal()
						.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);

			var xAxis = d3.svg.axis()
						.scale(widthScale)
						.orient("bottom");

			var yAxis = d3.svg.axis()
						.scale(heightScale)
						.orient("left");



			d3.csv("OECD_social.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.Total, +b.Total);
				});



				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.Total;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.Country; } ));



				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", padding [3])
					.attr("y", function(d) {
						return heightScale(d.Country);
					})
					.attr("width", function(d) {
						return widthScale(d.Total);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill", "#d8b365")
					.append("title")
					.text(function(d) {
						return d.Country + "'s social expenditure represents " + d.Total + "% of GDP"
					})

					svg.append("g")
						.attr("class", "x axis")
						.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
						.call(xAxis);

					svg.append("g")
						.attr("class", "y axis")
						.attr("transform", "translate(" + padding[3] + ",0)")
						.call(yAxis);

				var line = svg.append("line")
						.attr("x1", 440)
						.attr("y1", 32)
						.attr("x2", 440)
						.attr("y2", 620)
						.attr("stroke-width", 0.5)
						.attr("stroke", "black");

			});


		</script>

	</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x0 = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var x1 = d3.scale.ordinal();

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.ordinal()
    .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

var xAxis = d3.svg.axis()
    .scale(x0)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(d3.format(".2s"));

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("data.csv", function(error, data) {
  if (error) throw error;

  var ageNames = d3.keys(data[0]).filter(function(key) { return key !== "State"; });

  data.forEach(function(d) {
    d.ages = ageNames.map(function(name) { return {name: name, value: +d[name]}; });
  });

  x0.domain(data.map(function(d) { return d.State; }));
  x1.domain(ageNames).rangeRoundBands([0, x0.rangeBand()]);
  y.domain([0, d3.max(data, function(d) { return d3.max(d.ages, function(d) { return d.value; }); })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Population");

  var state = svg.selectAll(".state")
      .data(data)
    .enter().append("g")
      .attr("class", "g")
      .attr("transform", function(d) { return "translate(" + x0(d.State) + ",0)"; });

  state.selectAll("rect")
      .data(function(d) { return d.ages; })
    .enter().append("rect")
      .attr("width", x1.rangeBand())
      .attr("x", function(d) { return x1(d.name); })
      .attr("y", function(d) { return y(d.value); })
      .attr("height", function(d) { return height - y(d.value); })
      .style("fill", function(d) { return color(d.name); });

  var legend = svg.selectAll(".legend")
      .data(ageNames.slice().reverse())
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  legend.append("rect")
      .attr("x", width - 18)
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", color);

  legend.append("text")
      .attr("x", width - 24)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("text-anchor", "end")
      .text(function(d) { return d; });

});

</script>
<!DOCTYPE html>
<html>
<head>
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <meta charset="utf-8">
  <title>pirulo</title>
</head>
<body>

<input id="bday" type="date" name="bday">
<button onclick="doit()">OK</button>
<img src="">
  
<script>
  function doit() {
    var yyyymmdd = bday.value;
    d3.select("body").append("p").text(bday.value);
  }
</script>  
  
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Barchart with Scales</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
				body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: orange;
			}

			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}


		</style>
	</head>
	<body>

		<h1>Spending on Transportation and Housing</h1>

		<p>Average annual spending on &ldquo;Transportation&rdquo; and &ldquo;Housing&rdquo; by age group in 2010. Source: <a href="http://www.bls.gov/cex/csxstnd.htm#2010">BLS</a>, 2014</p>


		<script type="text/javascript">		


			var w = 700;
			var h = 650;
			var padding = [ 20, 10, 50, 50 ];  //Top, right, bottom, left



			var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);

			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left");

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			d3.csv("agecategories.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.housing, +b.housing);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				xScale.domain([ 
					d3.min(data, function(d) {
						return +d.housing;
					}), 
					d3.max(data, function(d) {
						return +d.housing;
					})
				]);

				yScale.domain([
					d3.max(data, function(d) {
						return +d.Transportation;
					}),
					d3.min(data, function(d) {
						return +d.Transportation;
					})
				]);

				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");



				circles.attr("cx", function(d) {
						return xScale(d.housing);
					})
					.attr("cy", function(d) {
						return yScale(d.Transportation);
					})
					.attr("r", 2)
					.attr("fill", "steelblue")
					.append("title")
					.text(function(d) {
						return "Americans that spend " + d.Transportation + " on Transportation, also spend " + d.housing + " on Housing";
					});

				circles.transition()
					.duration(5000)
					.attr("r", 7);

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2] + 10) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3] - 10) + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href="http://netdna.bootstrapcdn.com/bootswatch/2.3.1/cosmo/bootstrap.min.css">
     <link rel="stylesheet" href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-responsive.min.css" >
    <link rel='stylesheet' href="http://getbootstrap.com/2.3.2/assets/js/google-code-prettify/prettify.css">
    <link rel='stylesheet' href="http://aozora.github.io/bootplus/assets/css/docs.css">
    <link rel='stylesheet' href='http://cdn.jsdelivr.net/cal-heatmap/3.3.10/cal-heatmap.css'>
    
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://cdn.jsdelivr.net/cal-heatmap/3.3.10/cal-heatmap.min.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block
      margin: auto auto;
      width: 100%;
      height: 150px;
    }
    /*
    body {
      margin-top: 60px;
    }
    */
    </style>
    
  </head>
  <body>
    <div class='container'>
      <div class='row'>
        <div class='span8'>
          <div class="bs-docs-example">
            <div id='chart77b7203f5527' class='rChart calmap'>
            </div> 
          <br/>
<pre><code class='r'>library(plyr)
dat &lt;- read.csv('http://t.co/mN2RgcyQFc')[,c('date', 'pts')]
dat2 &lt;- transform(dat, date = as.numeric(as.POSIXct(date)))
dat3 &lt;- setNames(as.list(dat2$pts), dat2$date)

library(rChartsCalendar)
r1 &lt;- plotCalMap(
  data = dat3,
  domain = 'month', 
  start = &quot;2012-10-27&quot;,
  legend = seq(10, 50, 10),
  itemName = 'point',
  range = 7
)
</code></pre>
</div>
        </div>
      </div>
    </div>
      
    <script>
var chartParams = {
 "dom": "chart77b7203f5527",
"width":    700,
"height":    400,
"data": {
 "1288152000": 4,
"1288324800": 8,
"1288411200": 8,
"1288756800": 2,
"1288929600": 10,
"1289278800": 4,
"1290056400": 3,
"1290488400": 0,
"1293598800": 0,
"1293771600": 13,
"1293944400": 5,
"1294376400": 0,
"1294462800": 10,
"1294722000": 2,
"1294808400": 16,
"1294981200": 8,
"1295240400": 6,
"1295413200": 8,
"1295672400": 7,
"1295758800": 17,
"1296018000": 10,
"1296190800": 15,
"1296277200": 8,
"1296450000": 16,
"1296622800": 13,
"1296795600": 6,
"1296968400": 14,
"1297141200": 8,
"1297227600": 7,
"1297400400": 11,
"1297486800": 11,
"1297746000": 14,
"1297832400": 0,
"1298350800": 11,
"1298437200": 10,
"1298610000": 4,
"1298782800": 7,
"1298955600": 12,
"1299042000": 8,
"1299214800": 8,
"1299301200": 8,
"1299560400": 6,
"1299646800": 8,
"1299819600": 10,
"1299992400": 6,
"1300161600": 5,
"1300248000": 15,
"1300420800": 6,
"1300507200": 6,
"1300680000": 2,
"1300852800": 8,
"1301025600": 12,
"1301112000": 5,
"1301284800": 0,
"1301457600": 8,
"1301630400": 6,
"1301803200": 3,
"1302062400": 23,
"1302235200": 7,
"1302408000": 6,
"1302667200": 2,
"1324875600": 12,
"1325048400": 18,
"1325221200": 2,
"1325307600": 7,
"1325480400": 21,
"1325653200": 13,
"1325826000": 12,
"1325912400": 6,
"1326085200": 13,
"1326258000": 5,
"1326430800": 10,
"1326517200": 17,
"1326862800": 10,
"1327035600": 7,
"1327208400": 13,
"1327381200": 7,
"1327467600": 13,
"1327640400": 16,
"1327813200": 6,
"1327986000": 24,
"1328072400": 10,
"1328245200": 30,
"1328331600": 13,
"1328590800": 14,
"1328677200": 5,
"1328850000": 8,
"1328936400": 15,
"1329195600": 12,
"1329282000": 11,
"1329368400": 11,
"1329627600": 7,
"1329800400": 20,
"1329886800": 10,
"1330405200": 11,
"1330750800": 11,
"1330923600": 21,
"1331010000": 11,
"1331355600": 12,
"1331442000": 22,
"1331611200": 11,
"1331697600": 8,
"1331870400": 5,
"1331956800": 18,
"1332216000": 7,
"1332388800": 13,
"1332475200": 15,
"1332561600": 4,
"1332734400": 16,
"1332907200": 22,
"1332993600": 7,
"1333166400": 18,
"1333252800": 9,
"1333425600": 18,
"1333512000": 9,
"1333684800": 8,
"1333771200": 2,
"1333944000": 15,
"1334116800": 6,
"1334289600": 0,
"1334376000": 10,
"1334548800": 18,
"1334635200": 9,
"1334808000": 14,
"1334980800": 16,
"1335153600": 27,
"1335326400": 7,
"1351656000": 14,
"1351828800": 12,
"1351915200": 16,
"1352091600": 14,
"1352264400": 13,
"1352437200": 11,
"1352523600": 20,
"1352782800": 12,
"1352869200": 12,
"1353042000": 11,
"1353214800": 20,
"1353301200": 6,
"1353474000": 37,
"1353646800": 15,
"1353992400": 12,
"1354251600": 4,
"1354338000": 0,
"1354597200": 34,
"1354683600": 22,
"1354856400": 22,
"1355029200": 17,
"1355288400": 27,
"1355461200": 28,
"1355547600": 15,
"1355806800": 16,
"1355893200": 20,
"1356066000": 10,
"1356152400": 17,
"1356670800": 15,
"1356757200": 18,
"1356930000": 21,
"1357102800": 29,
"1357275600": 9,
"1357362000": 8,
"1357621200": 29,
"1357794000": 24,
"1358053200": 15,
"1358226000": 16,
"1358312400": 20,
"1358485200": 31,
"1358744400": 12,
"1358917200": 22,
"1359176400": 23,
"1359349200": 23,
"1359522000": 10,
"1359694800": 15,
"1359954000": 21,
"1360040400": 29,
"1360126800": 15,
"1360299600": 26,
"1360558800": 5,
"1360731600": 23,
"1361336400": 27,
"1361509200": 12,
"1361595600": 12,
"1361854800": 21,
"1362027600": 20,
"1362114000": 22,
"1362286800": 10,
"1362546000": 16,
"1362718800": 25,
"1362891600": 10,
"1363147200": 17,
"1363320000": 20,
"1363406400": 18,
"1363579200": 14,
"1363665600": 19,
"1363924800": 20,
"1364011200": 23,
"1364184000": 13,
"1364356800": 16,
"1364443200": 24,
"1364616000": 25,
"1364788800": 23,
"1365134400": 8,
"1365220800": 2,
"1365480000": 14,
"1365739200": 21,
"1365912000": 9,
"1383019200": 24,
"1383105600": 32,
"1383364800": 21,
"1383627600": 31,
"1383714000": 21,
"1383886800": 23,
"1383973200": 24,
"1384146000": 23,
"1384491600": 22,
"1384578000": 12,
"1384923600": 35,
"1385096400": 27,
"1385182800": 19,
"1385355600": 26,
"1385528400": 15,
"1385701200": 23,
"1385874000": 27,
"1385960400": 43,
"1386133200": 19,
"1386392400": 28,
"1386478800": 32,
"1386651600": 17,
"1386910800": 10 
},
"domain": "month",
"start": "2012-10-27",
"legend": [     10,     20,     30,     40,     50 ],
"itemName": "point",
"range":      7,
"id": "chart77b7203f5527" 
}
chartParams.itemSelector = '#chart77b7203f5527'
if (chartParams.start){
  chartParams.start = new Date(chartParams.start)
}
var calchart77b7203f5527 = new CalHeatMap();
calchart77b7203f5527.init(chartParams);
</script>
    
  </body>
  <!-- Google Prettify -->
  <script src="http://cdnjs.cloudflare.com/ajax/libs/prettify/188.0.0/prettify.js"></script>
  <script 
    src='https://google-code-prettify.googlecode.com/svn-history/r232/trunk/src/lang-r.js'>
  </script>
  <script>
    var pres = document.getElementsByTagName("pre");
    for (var i=0; i < pres.length; ++i) {
      pres[i].className = "prettyprint linenums";
    }
    prettyPrint();
  </script>
</html><!DOCTYPE html>
<head>
	<meta charset="utf-8">
	 <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no">
	<title>Top countries for humanitarian migrants</title>
	<script src="d3.min.js"></script>
	<link rel="stylesheet" href="style.css">
</head>
<body>
	<nav>
		<ul class="navigation"></ul>
	</nav>
	<section>
	</section>
<script src="vis.js"></script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.chord path {
  fill-opacity: .67;
  stroke: #000;
  stroke-width: .5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

// From http://mkweb.bcgsc.ca/circos/guide/tables/
var matrix = [
  [11975,  5871, 8916, 2868, 5, 6, 7, 8, 9, 10],
  [ 1951, 10048, 2060, 6171, 5, 6, 7, 8, 9, 10],
  [  951,  3048, 1060, 4171, 5, 6, 7, 8, 9, 10],
  [ 1751,  9248, 2390, 1171, 5, 6, 7, 8, 9, 10],
  [ 1921, 20048, 1030, 6151, 5, 6, 7, 8, 9, 10],
  [ 1331,   648, 1860, 6071, 5, 6, 7, 8, 9, 10],
  [ 1931, 10042, 1260, 1171, 5, 6, 7, 8, 9, 10],
  [  951,    48,   60,   71, 5, 6, 7, 8, 9, 10],
  [ 8010, 16145, 8090, 8045, 5, 6, 7, 8, 9, 10],
  [ 1013,   990,  940, 6907, 5, 6, 7, 8, 9, 10]
];

var chord = d3.layout.chord()
    .padding(.05)
    .sortSubgroups(d3.descending)
    .matrix(matrix);

var width = 960,
    height = 500,
    innerRadius = Math.min(width, height) * .41,
    outerRadius = innerRadius * 1.1;

var fill = d3.scale.ordinal()
    .domain(d3.range(4))
    .range(["#000000", "#FFDD89", "#957244", "#F26223"]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

svg.append("g").selectAll("path")
    .data(chord.groups)
  .enter().append("path")
    .style("fill", function(d) { return fill(d.index); })
    .style("stroke", function(d) { return fill(d.index); })
    .attr("d", d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius))
    .on("mouseover", fade(.1))
    .on("mouseout", fade(1));

var ticks = svg.append("g").selectAll("g")
    .data(chord.groups)
  .enter().append("g").selectAll("g")
    .data(groupTicks)
  .enter().append("g")
    .attr("transform", function(d) {
      return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
          + "translate(" + outerRadius + ",0)";
    });

ticks.append("line")
    .attr("x1", 1)
    .attr("y1", 0)
    .attr("x2", 5)
    .attr("y2", 0)
    .style("stroke", "#000");

ticks.append("text")
    .attr("x", 8)
    .attr("dy", ".35em")
    .attr("transform", function(d) { return d.angle > Math.PI ? "rotate(180)translate(-16)" : null; })
    .style("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
    .text(function(d) { return d.label; });

svg.append("g")
    .attr("class", "chord")
  .selectAll("path")
    .data(chord.chords)
  .enter().append("path")
    .attr("d", d3.svg.chord().radius(innerRadius))
    .style("fill", function(d) { return fill(d.target.index); })
    .style("opacity", 1);

// Returns an array of tick angles and labels, given a group.
function groupTicks(d) {
  var k = (d.endAngle - d.startAngle) / d.value;
  return d3.range(0, d.value, 1000).map(function(v, i) {
    return {
      angle: v * k + d.startAngle,
      label: i % 5 ? null : v / 1000 + "k"
    };
  });
}

// Returns an event handler for fading a given chord group.
function fade(opacity) {
  return function(g, i) {
    svg.selectAll(".chord path")
        .filter(function(d) { return d.source.index != i && d.target.index != i; })
      .transition()
        .style("opacity", opacity);
  };
}

</script>
<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8'>
    <title>CSS Mask test</title>
    <style>
      .maskicon,
      .maskicon-alpha,
      .icon {
        width: 14px;
        height: 14px;
        display: inline-block;
        line-height: 14px;
        vertical-align: text-top;
        margin-top: 1px; }
      
      .maskicon,
      .maskicon-alpha {
        -webkit-mask-image: url("http://getbootstrap.com/2.3.2/assets/img/glyphicons-halflings.png");
        -webkit-mask-repeat: no-repeat;
        -webkit-mask-position: 0 0px;
      }
      
      .maskicon {
        background-color: green; 
      }
      
      .maskicon-alpha {
        background-color: rgba(0, 0, 0, 0.4);
      }
      
      .icon {
        background-image: url("http://getbootstrap.com/2.3.2/assets/img/glyphicons-halflings.png");
        background-repeat: no-repeat;
        background-position: 0 0px; }
      
      .icon.sprite-glass {
        background-position: 0      0; }
      
      .icon.sprite-music {
        background-position: -24px 0; }
      
      .icon.sprite-search {
        background-position: -48px 0; }
      
      .icon.sprite-envelope {
        background-position: -72px 0; }
      
      .icon.sprite-heart {
        background-position: -96px 0; }
      
      .icon.sprite-star {
        background-position: -120px 0; }
      
      .icon.sprite-star-empty {
        background-position: -144px 0; }
      
      .icon.sprite-user {
        background-position: -168px 0; }
      
      .icon.sprite-film {
        background-position: -192px 0; }
      
      .icon.sprite-th-large {
        background-position: -216px 0; }
      
      .icon.sprite-th {
        background-position: -240px 0; }
      
      .icon.sprite-th-list {
        background-position: -264px 0; }
      
      .icon.sprite-ok {
        background-position: -288px 0; }
      
      .icon.sprite-remove {
        background-position: -312px 0; }
      
      .icon.sprite-zoom-in {
        background-position: -336px 0; }
      
      .icon.sprite-zoom-out {
        background-position: -360px 0; }
      
      .icon.sprite-off {
        background-position: -384px 0; }
      
      .icon.sprite-signal {
        background-position: -408px 0; }
      
      .icon.sprite-cog {
        background-position: -432px 0; }
      
      .icon.sprite-trash {
        background-position: -456px 0; }
      
      .icon.sprite-home {
        background-position: 0 -24px; }
      
      .icon.sprite-file {
        background-position: -24px -24px; }
      
      .icon.sprite-time {
        background-position: -48px -24px; }
      
      .icon.sprite-road {
        background-position: -72px -24px; }
      
      .icon.sprite-download-alt {
        background-position: -96px -24px; }
      
      .icon.sprite-download {
        background-position: -120px -24px; }
      
      .icon.sprite-upload {
        background-position: -144px -24px; }
      
      .icon.sprite-inbox {
        background-position: -168px -24px; }
      
      .icon.sprite-play-circle {
        background-position: -192px -24px; }
      
      .icon.sprite-repeat {
        background-position: -216px -24px; }
      
      .icon.sprite-refresh {
        background-position: -240px -24px; }
      
      .icon.sprite-list-alt {
        background-position: -264px -24px; }
      
      .icon.sprite-lock {
        background-position: -287px -24px; }
      
      .icon.sprite-flag {
        background-position: -312px -24px; }
      
      .icon.sprite-headphones {
        background-position: -336px -24px; }
      
      .icon.sprite-volume-off {
        background-position: -360px -24px; }
      
      .icon.sprite-volume-down {
        background-position: -384px -24px; }
      
      .icon.sprite-volume-up {
        background-position: -408px -24px; }
      
      .icon.sprite-qrcode {
        background-position: -432px -24px; }
      
      .icon.sprite-barcode {
        background-position: -456px -24px; }
      
      .icon.sprite-tag {
        background-position: 0 -48px; }
      
      .icon.sprite-tags {
        background-position: -25px -48px; }
      
      .icon.sprite-book {
        background-position: -48px -48px; }
      
      .icon.sprite-bookmark {
        background-position: -72px -48px; }
      
      .icon.sprite-print {
        background-position: -96px -48px; }
      
      .icon.sprite-camera {
        background-position: -120px -48px; }
      
      .icon.sprite-font {
        background-position: -144px -48px; }
      
      .icon.sprite-bold {
        background-position: -167px -48px; }
      
      .icon.sprite-italic {
        background-position: -192px -48px; }
      
      .icon.sprite-text-height {
        background-position: -216px -48px; }
      
      .icon.sprite-text-width {
        background-position: -240px -48px; }
      
      .icon.sprite-align-left {
        background-position: -264px -48px; }
      
      .icon.sprite-align-center {
        background-position: -288px -48px; }
      
      .icon.sprite-align-right {
        background-position: -312px -48px; }
      
      .icon.sprite-align-justify {
        background-position: -336px -48px; }
      
      .icon.sprite-list {
        background-position: -360px -48px; }
      
      .icon.sprite-indent-left {
        background-position: -384px -48px; }
      
      .icon.sprite-indent-right {
        background-position: -408px -48px; }
      
      .icon.sprite-facetime-video {
        background-position: -432px -48px; }
      
      .icon.sprite-picture {
        background-position: -456px -48px; }
      
      .icon.sprite-pencil {
        background-position: 0 -72px; }
      
      .icon.sprite-map-marker {
        background-position: -24px -72px; }
      
      .icon.sprite-adjust {
        background-position: -48px -72px; }
      
      .icon.sprite-tint {
        background-position: -72px -72px; }
      
      .icon.sprite-edit {
        background-position: -96px -72px; }
      
      .icon.sprite-share {
        background-position: -120px -72px; }
      
      .icon.sprite-check {
        background-position: -144px -72px; }
      
      .icon.sprite-move {
        background-position: -168px -72px; }
      
      .icon.sprite-step-backward {
        background-position: -192px -72px; }
      
      .icon.sprite-fast-backward {
        background-position: -216px -72px; }
      
      .icon.sprite-backward {
        background-position: -240px -72px; }
      
      .icon.sprite-play {
        background-position: -264px -72px; }
      
      .icon.sprite-pause {
        background-position: -288px -72px; }
      
      .icon.sprite-stop {
        background-position: -312px -72px; }
      
      .icon.sprite-forward {
        background-position: -336px -72px; }
      
      .icon.sprite-fast-forward {
        background-position: -360px -72px; }
      
      .icon.sprite-step-forward {
        background-position: -384px -72px; }
      
      .icon.sprite-eject {
        background-position: -408px -72px; }
      
      .icon.sprite-chevron-left {
        background-position: -432px -72px; }
      
      .icon.sprite-chevron-right {
        background-position: -456px -72px; }
      
      .icon.sprite-plus-sign {
        background-position: 0 -96px; }
      
      .icon.sprite-minus-sign {
        background-position: -24px -96px; }
      
      .icon.sprite-remove-sign {
        background-position: -48px -96px; }
      
      .icon.sprite-ok-sign {
        background-position: -72px -96px; }
      
      .icon.sprite-question-sign {
        background-position: -96px -96px; }
      
      .icon.sprite-info-sign {
        background-position: -120px -96px; }
      
      .icon.sprite-screenshot {
        background-position: -144px -96px; }
      
      .icon.sprite-remove-circle {
        background-position: -168px -96px; }
      
      .icon.sprite-ok-circle {
        background-position: -192px -96px; }
      
      .icon.sprite-ban-circle {
        background-position: -216px -96px; }
      
      .icon.sprite-arrow-left {
        background-position: -240px -96px; }
      
      .icon.sprite-arrow-right {
        background-position: -264px -96px; }
      
      .icon.sprite-arrow-up {
        background-position: -289px -96px; }
      
      .icon.sprite-arrow-down {
        background-position: -312px -96px; }
      
      .icon.sprite-share-alt {
        background-position: -336px -96px; }
      
      .icon.sprite-resize-full {
        background-position: -360px -96px; }
      
      .icon.sprite-resize-small {
        background-position: -384px -96px; }
      
      .icon.sprite-plus {
        background-position: -408px -96px; }
      
      .icon.sprite-minus {
        background-position: -433px -96px; }
      
      .icon.sprite-asterisk {
        background-position: -456px -96px; }
      
      .icon.sprite-exclamation-sign {
        background-position: 0 -120px; }
      
      .icon.sprite-gift {
        background-position: -24px -120px; }
      
      .icon.sprite-leaf {
        background-position: -48px -120px; }
      
      .icon.sprite-fire {
        background-position: -72px -120px; }
      
      .icon.sprite-eye-open {
        background-position: -96px -120px; }
      
      .icon.sprite-eye-close {
        background-position: -120px -120px; }
      
      .icon.sprite-warning-sign {
        background-position: -144px -120px; }
      
      .icon.sprite-plane {
        background-position: -168px -120px; }
      
      .icon.sprite-calendar {
        background-position: -192px -120px; }
      
      .icon.sprite-random {
        width: 16px;
        background-position: -216px -120px; }
      
      .icon.sprite-comment {
        background-position: -240px -120px; }
      
      .icon.sprite-magnet {
        background-position: -264px -120px; }
      
      .icon.sprite-chevron-up {
        background-position: -288px -120px; }
      
      .icon.sprite-chevron-down {
        background-position: -313px -119px; }
      
      .icon.sprite-retweet {
        background-position: -336px -120px; }
      
      .icon.sprite-shopping-cart {
        background-position: -360px -120px; }
      
      .icon.sprite-folder-close {
        width: 16px;
        background-position: -384px -120px; }
      
      .icon.sprite-folder-open {
        width: 16px;
        background-position: -408px -120px; }
      
      .icon.sprite-resize-vertical {
        background-position: -432px -119px; }
      
      .icon.sprite-resize-horizontal {
        background-position: -456px -118px; }
      
      .icon.sprite-hdd {
        background-position: 0 -144px; }
      
      .icon.sprite-bullhorn {
        background-position: -24px -144px; }
      
      .icon.sprite-bell {
        background-position: -48px -144px; }
      
      .icon.sprite-certificate {
        background-position: -72px -144px; }
      
      .icon.sprite-thumbs-up {
        background-position: -96px -144px; }
      
      .icon.sprite-thumbs-down {
        background-position: -120px -144px; }
      
      .icon.sprite-hand-right {
        background-position: -144px -144px; }
      
      .icon.sprite-hand-left {
        background-position: -168px -144px; }
      
      .icon.sprite-hand-up {
        background-position: -192px -144px; }
      
      .icon.sprite-hand-down {
        background-position: -216px -144px; }
      
      .icon.sprite-circle-arrow-right {
        background-position: -240px -144px; }
      
      .icon.sprite-circle-arrow-left {
        background-position: -264px -144px; }
      
      .icon.sprite-circle-arrow-up {
        background-position: -288px -144px; }
      
      .icon.sprite-circle-arrow-down {
        background-position: -312px -144px; }
      
      .icon.sprite-globe {
        background-position: -336px -144px; }
      
      .icon.sprite-wrench {
        background-position: -360px -144px; }
      
      .icon.sprite-tasks {
        background-position: -384px -144px; }
      
      .icon.sprite-filter {
        background-position: -408px -144px; }
      
      .icon.sprite-briefcase {
        background-position: -432px -144px; }
      
      .icon.sprite-fullscreen {
        background-position: -456px -144px; }
      
      
      .maskicon.sprite-glass, .maskicon-alpha.sprite-glass {
        -webkit-mask-position: 0      0; }
      
      .maskicon.sprite-music, .maskicon-alpha.sprite-music {
        -webkit-mask-position: -24px 0; }
      
      .maskicon.sprite-search, .maskicon-alpha.sprite-search {
        -webkit-mask-position: -48px 0; }
      
      .maskicon.sprite-envelope, .maskicon-alpha.sprite-envelope {
        -webkit-mask-position: -72px 0; }
      
      .maskicon.sprite-heart, .maskicon-alpha.sprite-heart {
        -webkit-mask-position: -96px 0; }
      
      .maskicon.sprite-star, .maskicon-alpha.sprite-star {
        -webkit-mask-position: -120px 0; }
      
      .maskicon.sprite-star-empty, .maskicon-alpha.sprite-star-empty {
        -webkit-mask-position: -144px 0; }
      
      .maskicon.sprite-user, .maskicon-alpha.sprite-user {
        -webkit-mask-position: -168px 0; }
      
      .maskicon.sprite-film, .maskicon-alpha.sprite-film {
        -webkit-mask-position: -192px 0; }
      
      .maskicon.sprite-th-large, .maskicon-alpha.sprite-th-large {
        -webkit-mask-position: -216px 0; }
      
      .maskicon.sprite-th, .maskicon-alpha.sprite-th {
        -webkit-mask-position: -240px 0; }
      
      .maskicon.sprite-th-list, .maskicon-alpha.sprite-th-list {
        -webkit-mask-position: -264px 0; }
      
      .maskicon.sprite-ok, .maskicon-alpha.sprite-ok {
        -webkit-mask-position: -288px 0; }
      
      .maskicon.sprite-remove, .maskicon-alpha.sprite-remove {
        -webkit-mask-position: -312px 0; }
      
      .maskicon.sprite-zoom-in, .maskicon-alpha.sprite-zoom-in {
        -webkit-mask-position: -336px 0; }
      
      .maskicon.sprite-zoom-out, .maskicon-alpha.sprite-zoom-out {
        -webkit-mask-position: -360px 0; }
      
      .maskicon.sprite-off, .maskicon-alpha.sprite-off {
        -webkit-mask-position: -384px 0; }
      
      .maskicon.sprite-signal, .maskicon-alpha.sprite-signal {
        -webkit-mask-position: -408px 0; }
      
      .maskicon.sprite-cog, .maskicon-alpha.sprite-cog {
        -webkit-mask-position: -432px 0; }
      
      .maskicon.sprite-trash, .maskicon-alpha.sprite-trash {
        -webkit-mask-position: -456px 0; }
      
      .maskicon.sprite-home, .maskicon-alpha.sprite-home {
        -webkit-mask-position: 0 -24px; }
      
      .maskicon.sprite-file, .maskicon-alpha.sprite-file {
        -webkit-mask-position: -24px -24px; }
      
      .maskicon.sprite-time, .maskicon-alpha.sprite-time {
        -webkit-mask-position: -48px -24px; }
      
      .maskicon.sprite-road, .maskicon-alpha.sprite-road {
        -webkit-mask-position: -72px -24px; }
      
      .maskicon.sprite-download-alt, .maskicon-alpha.sprite-download-alt {
        -webkit-mask-position: -96px -24px; }
      
      .maskicon.sprite-download, .maskicon-alpha.sprite-download {
        -webkit-mask-position: -120px -24px; }
      
      .maskicon.sprite-upload, .maskicon-alpha.sprite-upload {
        -webkit-mask-position: -144px -24px; }
      
      .maskicon.sprite-inbox, .maskicon-alpha.sprite-inbox {
        -webkit-mask-position: -168px -24px; }
      
      .maskicon.sprite-play-circle, .maskicon-alpha.sprite-play-circle {
        -webkit-mask-position: -192px -24px; }
      
      .maskicon.sprite-repeat, .maskicon-alpha.sprite-repeat {
        -webkit-mask-position: -216px -24px; }
      
      .maskicon.sprite-refresh, .maskicon-alpha.sprite-refresh {
        -webkit-mask-position: -240px -24px; }
      
      .maskicon.sprite-list-alt, .maskicon-alpha.sprite-list-alt {
        -webkit-mask-position: -264px -24px; }
      
      .maskicon.sprite-lock, .maskicon-alpha.sprite-lock {
        -webkit-mask-position: -287px -24px; }
      
      .maskicon.sprite-flag, .maskicon-alpha.sprite-flag {
        -webkit-mask-position: -312px -24px; }
      
      .maskicon.sprite-headphones, .maskicon-alpha.sprite-headphones {
        -webkit-mask-position: -336px -24px; }
      
      .maskicon.sprite-volume-off, .maskicon-alpha.sprite-volume-off {
        -webkit-mask-position: -360px -24px; }
      
      .maskicon.sprite-volume-down, .maskicon-alpha.sprite-volume-down {
        -webkit-mask-position: -384px -24px; }
      
      .maskicon.sprite-volume-up, .maskicon-alpha.sprite-volume-up {
        -webkit-mask-position: -408px -24px; }
      
      .maskicon.sprite-qrcode, .maskicon-alpha.sprite-qrcode {
        -webkit-mask-position: -432px -24px; }
      
      .maskicon.sprite-barcode, .maskicon-alpha.sprite-barcode {
        -webkit-mask-position: -456px -24px; }
      
      .maskicon.sprite-tag, .maskicon-alpha.sprite-tag {
        -webkit-mask-position: 0 -48px; }
      
      .maskicon.sprite-tags, .maskicon-alpha.sprite-tags {
        -webkit-mask-position: -25px -48px; }
      
      .maskicon.sprite-book, .maskicon-alpha.sprite-book {
        -webkit-mask-position: -48px -48px; }
      
      .maskicon.sprite-bookmark, .maskicon-alpha.sprite-bookmark {
        -webkit-mask-position: -72px -48px; }
      
      .maskicon.sprite-print, .maskicon-alpha.sprite-print {
        -webkit-mask-position: -96px -48px; }
      
      .maskicon.sprite-camera, .maskicon-alpha.sprite-camera {
        -webkit-mask-position: -120px -48px; }
      
      .maskicon.sprite-font, .maskicon-alpha.sprite-font {
        -webkit-mask-position: -144px -48px; }
      
      .maskicon.sprite-bold, .maskicon-alpha.sprite-bold {
        -webkit-mask-position: -167px -48px; }
      
      .maskicon.sprite-italic, .maskicon-alpha.sprite-italic {
        -webkit-mask-position: -192px -48px; }
      
      .maskicon.sprite-text-height, .maskicon-alpha.sprite-text-height {
        -webkit-mask-position: -216px -48px; }
      
      .maskicon.sprite-text-width, .maskicon-alpha.sprite-text-width {
        -webkit-mask-position: -240px -48px; }
      
      .maskicon.sprite-align-left, .maskicon-alpha.sprite-align-left {
        -webkit-mask-position: -264px -48px; }
      
      .maskicon.sprite-align-center, .maskicon-alpha.sprite-align-center {
        -webkit-mask-position: -288px -48px; }
      
      .maskicon.sprite-align-right, .maskicon-alpha.sprite-align-right {
        -webkit-mask-position: -312px -48px; }
      
      .maskicon.sprite-align-justify, .maskicon-alpha.sprite-align-justify {
        -webkit-mask-position: -336px -48px; }
      
      .maskicon.sprite-list, .maskicon-alpha.sprite-list {
        -webkit-mask-position: -360px -48px; }
      
      .maskicon.sprite-indent-left, .maskicon-alpha.sprite-indent-left {
        -webkit-mask-position: -384px -48px; }
      
      .maskicon.sprite-indent-right, .maskicon-alpha.sprite-indent-right {
        -webkit-mask-position: -408px -48px; }
      
      .maskicon.sprite-facetime-video, .maskicon-alpha.sprite-facetime-video {
        -webkit-mask-position: -432px -48px; }
      
      .maskicon.sprite-picture, .maskicon-alpha.sprite-picture {
        -webkit-mask-position: -456px -48px; }
      
      .maskicon.sprite-pencil, .maskicon-alpha.sprite-pencil {
        -webkit-mask-position: 0 -72px; }
      
      .maskicon.sprite-map-marker, .maskicon-alpha.sprite-map-marker {
        -webkit-mask-position: -24px -72px; }
      
      .maskicon.sprite-adjust, .maskicon-alpha.sprite-adjust {
        -webkit-mask-position: -48px -72px; }
      
      .maskicon.sprite-tint, .maskicon-alpha.sprite-tint {
        -webkit-mask-position: -72px -72px; }
      
      .maskicon.sprite-edit, .maskicon-alpha.sprite-edit {
        -webkit-mask-position: -96px -72px; }
      
      .maskicon.sprite-share, .maskicon-alpha.sprite-share {
        -webkit-mask-position: -120px -72px; }
      
      .maskicon.sprite-check, .maskicon-alpha.sprite-check {
        -webkit-mask-position: -144px -72px; }
      
      .maskicon.sprite-move, .maskicon-alpha.sprite-move {
        -webkit-mask-position: -168px -72px; }
      
      .maskicon.sprite-step-backward, .maskicon-alpha.sprite-step-backward {
        -webkit-mask-position: -192px -72px; }
      
      .maskicon.sprite-fast-backward, .maskicon-alpha.sprite-fast-backward {
        -webkit-mask-position: -216px -72px; }
      
      .maskicon.sprite-backward, .maskicon-alpha.sprite-backward {
        -webkit-mask-position: -240px -72px; }
      
      .maskicon.sprite-play, .maskicon-alpha.sprite-play {
        -webkit-mask-position: -264px -72px; }
      
      .maskicon.sprite-pause, .maskicon-alpha.sprite-pause {
        -webkit-mask-position: -288px -72px; }
      
      .maskicon.sprite-stop, .maskicon-alpha.sprite-stop {
        -webkit-mask-position: -312px -72px; }
      
      .maskicon.sprite-forward, .maskicon-alpha.sprite-forward {
        -webkit-mask-position: -336px -72px; }
      
      .maskicon.sprite-fast-forward, .maskicon-alpha.sprite-fast-forward {
        -webkit-mask-position: -360px -72px; }
      
      .maskicon.sprite-step-forward, .maskicon-alpha.sprite-step-forward {
        -webkit-mask-position: -384px -72px; }
      
      .maskicon.sprite-eject, .maskicon-alpha.sprite-eject {
        -webkit-mask-position: -408px -72px; }
      
      .maskicon.sprite-chevron-left, .maskicon-alpha.sprite-chevron-left {
        -webkit-mask-position: -432px -72px; }
      
      .maskicon.sprite-chevron-right, .maskicon-alpha.sprite-chevron-right {
        -webkit-mask-position: -456px -72px; }
      
      .maskicon.sprite-plus-sign, .maskicon-alpha.sprite-plus-sign {
        -webkit-mask-position: 0 -96px; }
      
      .maskicon.sprite-minus-sign, .maskicon-alpha.sprite-minus-sign {
        -webkit-mask-position: -24px -96px; }
      
      .maskicon.sprite-remove-sign, .maskicon-alpha.sprite-remove-sign {
        -webkit-mask-position: -48px -96px; }
      
      .maskicon.sprite-ok-sign, .maskicon-alpha.sprite-ok-sign {
        -webkit-mask-position: -72px -96px; }
      
      .maskicon.sprite-question-sign, .maskicon-alpha.sprite-question-sign {
        -webkit-mask-position: -96px -96px; }
      
      .maskicon.sprite-info-sign, .maskicon-alpha.sprite-info-sign {
        -webkit-mask-position: -120px -96px; }
      
      .maskicon.sprite-screenshot, .maskicon-alpha.sprite-screenshot {
        -webkit-mask-position: -144px -96px; }
      
      .maskicon.sprite-remove-circle, .maskicon-alpha.sprite-remove-circle {
        -webkit-mask-position: -168px -96px; }
      
      .maskicon.sprite-ok-circle, .maskicon-alpha.sprite-ok-circle {
        -webkit-mask-position: -192px -96px; }
      
      .maskicon.sprite-ban-circle, .maskicon-alpha.sprite-ban-circle {
        -webkit-mask-position: -216px -96px; }
      
      .maskicon.sprite-arrow-left, .maskicon-alpha.sprite-arrow-left {
        -webkit-mask-position: -240px -96px; }
      
      .maskicon.sprite-arrow-right, .maskicon-alpha.sprite-arrow-right {
        -webkit-mask-position: -264px -96px; }
      
      .maskicon.sprite-arrow-up, .maskicon-alpha.sprite-arrow-up {
        -webkit-mask-position: -289px -96px; }
      
      .maskicon.sprite-arrow-down, .maskicon-alpha.sprite-arrow-down {
        -webkit-mask-position: -312px -96px; }
      
      .maskicon.sprite-share-alt, .maskicon-alpha.sprite-share-alt {
        -webkit-mask-position: -336px -96px; }
      
      .maskicon.sprite-resize-full, .maskicon-alpha.sprite-resize-full {
        -webkit-mask-position: -360px -96px; }
      
      .maskicon.sprite-resize-small, .maskicon-alpha.sprite-resize-small {
        -webkit-mask-position: -384px -96px; }
      
      .maskicon.sprite-plus, .maskicon-alpha.sprite-plus {
        -webkit-mask-position: -408px -96px; }
      
      .maskicon.sprite-minus, .maskicon-alpha.sprite-minus {
        -webkit-mask-position: -433px -96px; }
      
      .maskicon.sprite-asterisk, .maskicon-alpha.sprite-asterisk {
        -webkit-mask-position: -456px -96px; }
      
      .maskicon.sprite-exclamation-sign, .maskicon-alpha.sprite-exclamation-sign {
        -webkit-mask-position: 0 -120px; }
      
      .maskicon.sprite-gift, .maskicon-alpha.sprite-gift {
        -webkit-mask-position: -24px -120px; }
      
      .maskicon.sprite-leaf, .maskicon-alpha.sprite-leaf {
        -webkit-mask-position: -48px -120px; }
      
      .maskicon.sprite-fire, .maskicon-alpha.sprite-fire {
        -webkit-mask-position: -72px -120px; }
      
      .maskicon.sprite-eye-open, .maskicon-alpha.sprite-eye-open {
        -webkit-mask-position: -96px -120px; }
      
      .maskicon.sprite-eye-close, .maskicon-alpha.sprite-eye-close {
        -webkit-mask-position: -120px -120px; }
      
      .maskicon.sprite-warning-sign, .maskicon-alpha.sprite-warning-sign {
        -webkit-mask-position: -144px -120px; }
      
      .maskicon.sprite-plane, .maskicon-alpha.sprite-plane {
        -webkit-mask-position: -168px -120px; }
      
      .maskicon.sprite-calendar, .maskicon-alpha.sprite-calendar {
        -webkit-mask-position: -192px -120px; }
      
      .maskicon.sprite-random, .maskicon-alpha.sprite-random {
        width: 16px;
        -webkit-mask-position: -216px -120px; }
      
      .maskicon.sprite-comment, .maskicon-alpha.sprite-comment {
        -webkit-mask-position: -240px -120px; }
      
      .maskicon.sprite-magnet, .maskicon-alpha.sprite-magnet {
        -webkit-mask-position: -264px -120px; }
      
      .maskicon.sprite-chevron-up, .maskicon-alpha.sprite-chevron-up {
        -webkit-mask-position: -288px -120px; }
      
      .maskicon.sprite-chevron-down, .maskicon-alpha.sprite-chevron-down {
        -webkit-mask-position: -313px -119px; }
      
      .maskicon.sprite-retweet, .maskicon-alpha.sprite-retweet {
        -webkit-mask-position: -336px -120px; }
      
      .maskicon.sprite-shopping-cart, .maskicon-alpha.sprite-shopping-cart {
        -webkit-mask-position: -360px -120px; }
      
      .maskicon.sprite-folder-close, .maskicon-alpha.sprite-folder-close {
        width: 16px;
        -webkit-mask-position: -384px -120px; }
      
      .maskicon.sprite-folder-open, .maskicon-alpha.sprite-folder-open {
        width: 16px;
        -webkit-mask-position: -408px -120px; }
      
      .maskicon.sprite-resize-vertical, .maskicon-alpha.sprite-resize-vertical {
        -webkit-mask-position: -432px -119px; }
      
      .maskicon.sprite-resize-horizontal, .maskicon-alpha.sprite-resize-horizontal {
        -webkit-mask-position: -456px -118px; }
      
      .maskicon.sprite-hdd, .maskicon-alpha.sprite-hdd {
        -webkit-mask-position: 0 -144px; }
      
      .maskicon.sprite-bullhorn, .maskicon-alpha.sprite-bullhorn {
        -webkit-mask-position: -24px -144px; }
      
      .maskicon.sprite-bell, .maskicon-alpha.sprite-bell {
        -webkit-mask-position: -48px -144px; }
      
      .maskicon.sprite-certificate, .maskicon-alpha.sprite-certificate {
        -webkit-mask-position: -72px -144px; }
      
      .maskicon.sprite-thumbs-up, .maskicon-alpha.sprite-thumbs-up {
        -webkit-mask-position: -96px -144px; }
      
      .maskicon.sprite-thumbs-down, .maskicon-alpha.sprite-thumbs-down {
        -webkit-mask-position: -120px -144px; }
      
      .maskicon.sprite-hand-right, .maskicon-alpha.sprite-hand-right {
        -webkit-mask-position: -144px -144px; }
      
      .maskicon.sprite-hand-left, .maskicon-alpha.sprite-hand-left {
        -webkit-mask-position: -168px -144px; }
      
      .maskicon.sprite-hand-up, .maskicon-alpha.sprite-hand-up {
        -webkit-mask-position: -192px -144px; }
      
      .maskicon.sprite-hand-down, .maskicon-alpha.sprite-hand-down {
        -webkit-mask-position: -216px -144px; }
      
      .maskicon.sprite-circle-arrow-right, .maskicon-alpha.sprite-circle-arrow-right {
        -webkit-mask-position: -240px -144px; }
      
      .maskicon.sprite-circle-arrow-left, .maskicon-alpha.sprite-circle-arrow-left {
        -webkit-mask-position: -264px -144px; }
      
      .maskicon.sprite-circle-arrow-up, .maskicon-alpha.sprite-circle-arrow-up {
        -webkit-mask-position: -288px -144px; }
      
      .maskicon.sprite-circle-arrow-down, .maskicon-alpha.sprite-circle-arrow-down {
        -webkit-mask-position: -312px -144px; }
      
      .maskicon.sprite-globe, .maskicon-alpha.sprite-globe {
        -webkit-mask-position: -336px -144px; }
      
      .maskicon.sprite-wrench, .maskicon-alpha.sprite-wrench {
        -webkit-mask-position: -360px -144px; }
      
      .maskicon.sprite-tasks, .maskicon-alpha.sprite-tasks {
        -webkit-mask-position: -384px -144px; }
      
      .maskicon.sprite-filter, .maskicon-alpha.sprite-filter {
        -webkit-mask-position: -408px -144px; }
      
      .maskicon.sprite-briefcase, .maskicon-alpha.sprite-briefcase {
        -webkit-mask-position: -432px -144px; }
      
      .maskicon.sprite-fullscreen, .maskicon-alpha.sprite-fullscreen {
        -webkit-mask-position: -456px -144px; }
    </style>
  </head>
  <body>
    <h1>Background Sprite</h1>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <i class='icon sprite-glass'></i>
    <i class='icon sprite-music'></i>
    <i class='icon sprite-search'></i>
    <i class='icon sprite-envelope'></i>
    <i class='icon sprite-heart'></i>
    <i class='icon sprite-star'></i>
    <i class='icon sprite-star-empty'></i>
    <i class='icon sprite-user'></i>
    <i class='icon sprite-film'></i>
    <i class='icon sprite-th-large'></i>
    <i class='icon sprite-th'></i>
    <i class='icon sprite-th-list'></i>
    <i class='icon sprite-ok'></i>
    <i class='icon sprite-remove'></i>
    <i class='icon sprite-zoom-in'></i>
    <i class='icon sprite-zoom-out'></i>
    <i class='icon sprite-off'></i>
    <i class='icon sprite-signal'></i>
    <i class='icon sprite-cog'></i>
    <i class='icon sprite-trash'></i>
    <i class='icon sprite-home'></i>
    <i class='icon sprite-file'></i>
    <i class='icon sprite-time'></i>
    <i class='icon sprite-road'></i>
    <i class='icon sprite-download-alt'></i>
    <i class='icon sprite-download'></i>
    <i class='icon sprite-upload'></i>
    <i class='icon sprite-inbox'></i>
    <i class='icon sprite-play-circle'></i>
    <i class='icon sprite-repeat'></i>
    <i class='icon sprite-refresh'></i>
    <i class='icon sprite-list-alt'></i>
    <i class='icon sprite-lock'></i>
    <i class='icon sprite-flag'></i>
    <i class='icon sprite-headphones'></i>
    <i class='icon sprite-volume-off'></i>
    <i class='icon sprite-volume-down'></i>
    <i class='icon sprite-volume-up'></i>
    <i class='icon sprite-qrcode'></i>
    <i class='icon sprite-barcode'></i>
    <i class='icon sprite-tag'></i>
    <i class='icon sprite-tags'></i>
    <i class='icon sprite-book'></i>
    <i class='icon sprite-bookmark'></i>
    <i class='icon sprite-print'></i>
    <i class='icon sprite-camera'></i>
    <i class='icon sprite-font'></i>
    <i class='icon sprite-bold'></i>
    <i class='icon sprite-italic'></i>
    <i class='icon sprite-text-height'></i>
    <i class='icon sprite-text-width'></i>
    <i class='icon sprite-align-left'></i>
    <i class='icon sprite-align-center'></i>
    <i class='icon sprite-align-right'></i>
    <i class='icon sprite-align-justify'></i>
    <i class='icon sprite-list'></i>
    <i class='icon sprite-indent-left'></i>
    <i class='icon sprite-indent-right'></i>
    <i class='icon sprite-facetime-video'></i>
    <i class='icon sprite-picture'></i>
    <i class='icon sprite-pencil'></i>
    <i class='icon sprite-map-marker'></i>
    <i class='icon sprite-adjust'></i>
    <i class='icon sprite-tint'></i>
    <i class='icon sprite-edit'></i>
    <i class='icon sprite-share'></i>
    <i class='icon sprite-check'></i>
    <i class='icon sprite-move'></i>
    <i class='icon sprite-step-backward'></i>
    <i class='icon sprite-fast-backward'></i>
    <i class='icon sprite-backward'></i>
    <i class='icon sprite-play'></i>
    <i class='icon sprite-pause'></i>
    <i class='icon sprite-stop'></i>
    <i class='icon sprite-forward'></i>
    <i class='icon sprite-fast-forward'></i>
    <i class='icon sprite-step-forward'></i>
    <i class='icon sprite-eject'></i>
    <i class='icon sprite-chevron-left'></i>
    <i class='icon sprite-chevron-right'></i>
    <i class='icon sprite-plus-sign'></i>
    <i class='icon sprite-minus-sign'></i>
    <i class='icon sprite-remove-sign'></i>
    <i class='icon sprite-ok-sign'></i>
    <i class='icon sprite-question-sign'></i>
    <i class='icon sprite-info-sign'></i>
    <i class='icon sprite-screenshot'></i>
    <i class='icon sprite-remove-circle'></i>
    <i class='icon sprite-ok-circle'></i>
    <i class='icon sprite-ban-circle'></i>
    <i class='icon sprite-arrow-left'></i>
    <i class='icon sprite-arrow-right'></i>
    <i class='icon sprite-arrow-up'></i>
    <i class='icon sprite-arrow-down'></i>
    <i class='icon sprite-share-alt'></i>
    <i class='icon sprite-resize-full'></i>
    <i class='icon sprite-resize-small'></i>
    <i class='icon sprite-plus'></i>
    <i class='icon sprite-minus'></i>
    <i class='icon sprite-asterisk'></i>
    <i class='icon sprite-exclamation-sign'></i>
    <i class='icon sprite-gift'></i>
    <i class='icon sprite-leaf'></i>
    <i class='icon sprite-fire'></i>
    <i class='icon sprite-eye-open'></i>
    <i class='icon sprite-eye-close'></i>
    <i class='icon sprite-warning-sign'></i>
    <i class='icon sprite-plane'></i>
    <i class='icon sprite-calendar'></i>
    <i class='icon sprite-random'></i>
    <i class='icon sprite-comment'></i>
    <i class='icon sprite-magnet'></i>
    <i class='icon sprite-chevron-up'></i>
    <i class='icon sprite-chevron-down'></i>
    <i class='icon sprite-retweet'></i>
    <i class='icon sprite-shopping-cart'></i>
    <i class='icon sprite-folder-close'></i>
    <i class='icon sprite-folder-open'></i>
    <i class='icon sprite-resize-vertical'></i>
    <i class='icon sprite-resize-horizontal'></i>
    <i class='icon sprite-hdd'></i>
    <i class='icon sprite-bullhorn'></i>
    <i class='icon sprite-bell'></i>
    <i class='icon sprite-certificate'></i>
    <i class='icon sprite-thumbs-up'></i>
    <i class='icon sprite-thumbs-down'></i>
    <i class='icon sprite-hand-right'></i>
    <i class='icon sprite-hand-left'></i>
    <i class='icon sprite-hand-up'></i>
    <i class='icon sprite-hand-down'></i>
    <i class='icon sprite-circle-arrow-right'></i>
    <i class='icon sprite-circle-arrow-left'></i>
    <i class='icon sprite-circle-arrow-up'></i>
    <i class='icon sprite-circle-arrow-down'></i>
    <i class='icon sprite-globe'></i>
    <i class='icon sprite-wrench'></i>
    <i class='icon sprite-tasks'></i>
    <i class='icon sprite-filter'></i>
    <i class='icon sprite-briefcase'></i>
    <i class='icon sprite-fullscreen'></i>
    <h1>Masked</h1>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <i class='maskicon sprite-glass'></i>
    <i class='maskicon sprite-music'></i>
    <i class='maskicon sprite-search'></i>
    <i class='maskicon sprite-envelope'></i>
    <i class='maskicon sprite-heart'></i>
    <i class='maskicon sprite-star'></i>
    <i class='maskicon sprite-star-empty'></i>
    <i class='maskicon sprite-user'></i>
    <i class='maskicon sprite-film'></i>
    <i class='maskicon sprite-th-large'></i>
    <i class='maskicon sprite-th'></i>
    <i class='maskicon sprite-th-list'></i>
    <i class='maskicon sprite-ok'></i>
    <i class='maskicon sprite-remove'></i>
    <i class='maskicon sprite-zoom-in'></i>
    <i class='maskicon sprite-zoom-out'></i>
    <i class='maskicon sprite-off'></i>
    <i class='maskicon sprite-signal'></i>
    <i class='maskicon sprite-cog'></i>
    <i class='maskicon sprite-trash'></i>
    <i class='maskicon sprite-home'></i>
    <i class='maskicon sprite-file'></i>
    <i class='maskicon sprite-time'></i>
    <i class='maskicon sprite-road'></i>
    <i class='maskicon sprite-download-alt'></i>
    <i class='maskicon sprite-download'></i>
    <i class='maskicon sprite-upload'></i>
    <i class='maskicon sprite-inbox'></i>
    <i class='maskicon sprite-play-circle'></i>
    <i class='maskicon sprite-repeat'></i>
    <i class='maskicon sprite-refresh'></i>
    <i class='maskicon sprite-list-alt'></i>
    <i class='maskicon sprite-lock'></i>
    <i class='maskicon sprite-flag'></i>
    <i class='maskicon sprite-headphones'></i>
    <i class='maskicon sprite-volume-off'></i>
    <i class='maskicon sprite-volume-down'></i>
    <i class='maskicon sprite-volume-up'></i>
    <i class='maskicon sprite-qrcode'></i>
    <i class='maskicon sprite-barcode'></i>
    <i class='maskicon sprite-tag'></i>
    <i class='maskicon sprite-tags'></i>
    <i class='maskicon sprite-book'></i>
    <i class='maskicon sprite-bookmark'></i>
    <i class='maskicon sprite-print'></i>
    <i class='maskicon sprite-camera'></i>
    <i class='maskicon sprite-font'></i>
    <i class='maskicon sprite-bold'></i>
    <i class='maskicon sprite-italic'></i>
    <i class='maskicon sprite-text-height'></i>
    <i class='maskicon sprite-text-width'></i>
    <i class='maskicon sprite-align-left'></i>
    <i class='maskicon sprite-align-center'></i>
    <i class='maskicon sprite-align-right'></i>
    <i class='maskicon sprite-align-justify'></i>
    <i class='maskicon sprite-list'></i>
    <i class='maskicon sprite-indent-left'></i>
    <i class='maskicon sprite-indent-right'></i>
    <i class='maskicon sprite-facetime-video'></i>
    <i class='maskicon sprite-picture'></i>
    <i class='maskicon sprite-pencil'></i>
    <i class='maskicon sprite-map-marker'></i>
    <i class='maskicon sprite-adjust'></i>
    <i class='maskicon sprite-tint'></i>
    <i class='maskicon sprite-edit'></i>
    <i class='maskicon sprite-share'></i>
    <i class='maskicon sprite-check'></i>
    <i class='maskicon sprite-move'></i>
    <i class='maskicon sprite-step-backward'></i>
    <i class='maskicon sprite-fast-backward'></i>
    <i class='maskicon sprite-backward'></i>
    <i class='maskicon sprite-play'></i>
    <i class='maskicon sprite-pause'></i>
    <i class='maskicon sprite-stop'></i>
    <i class='maskicon sprite-forward'></i>
    <i class='maskicon sprite-fast-forward'></i>
    <i class='maskicon sprite-step-forward'></i>
    <i class='maskicon sprite-eject'></i>
    <i class='maskicon sprite-chevron-left'></i>
    <i class='maskicon sprite-chevron-right'></i>
    <i class='maskicon sprite-plus-sign'></i>
    <i class='maskicon sprite-minus-sign'></i>
    <i class='maskicon sprite-remove-sign'></i>
    <i class='maskicon sprite-ok-sign'></i>
    <i class='maskicon sprite-question-sign'></i>
    <i class='maskicon sprite-info-sign'></i>
    <i class='maskicon sprite-screenshot'></i>
    <i class='maskicon sprite-remove-circle'></i>
    <i class='maskicon sprite-ok-circle'></i>
    <i class='maskicon sprite-ban-circle'></i>
    <i class='maskicon sprite-arrow-left'></i>
    <i class='maskicon sprite-arrow-right'></i>
    <i class='maskicon sprite-arrow-up'></i>
    <i class='maskicon sprite-arrow-down'></i>
    <i class='maskicon sprite-share-alt'></i>
    <i class='maskicon sprite-resize-full'></i>
    <i class='maskicon sprite-resize-small'></i>
    <i class='maskicon sprite-plus'></i>
    <i class='maskicon sprite-minus'></i>
    <i class='maskicon sprite-asterisk'></i>
    <i class='maskicon sprite-exclamation-sign'></i>
    <i class='maskicon sprite-gift'></i>
    <i class='maskicon sprite-leaf'></i>
    <i class='maskicon sprite-fire'></i>
    <i class='maskicon sprite-eye-open'></i>
    <i class='maskicon sprite-eye-close'></i>
    <i class='maskicon sprite-warning-sign'></i>
    <i class='maskicon sprite-plane'></i>
    <i class='maskicon sprite-calendar'></i>
    <i class='maskicon sprite-random'></i>
    <i class='maskicon sprite-comment'></i>
    <i class='maskicon sprite-magnet'></i>
    <i class='maskicon sprite-chevron-up'></i>
    <i class='maskicon sprite-chevron-down'></i>
    <i class='maskicon sprite-retweet'></i>
    <i class='maskicon sprite-shopping-cart'></i>
    <i class='maskicon sprite-folder-close'></i>
    <i class='maskicon sprite-folder-open'></i>
    <i class='maskicon sprite-resize-vertical'></i>
    <i class='maskicon sprite-resize-horizontal'></i>
    <i class='maskicon sprite-hdd'></i>
    <i class='maskicon sprite-bullhorn'></i>
    <i class='maskicon sprite-bell'></i>
    <i class='maskicon sprite-certificate'></i>
    <i class='maskicon sprite-thumbs-up'></i>
    <i class='maskicon sprite-thumbs-down'></i>
    <i class='maskicon sprite-hand-right'></i>
    <i class='maskicon sprite-hand-left'></i>
    <i class='maskicon sprite-hand-up'></i>
    <i class='maskicon sprite-hand-down'></i>
    <i class='maskicon sprite-circle-arrow-right'></i>
    <i class='maskicon sprite-circle-arrow-left'></i>
    <i class='maskicon sprite-circle-arrow-up'></i>
    <i class='maskicon sprite-circle-arrow-down'></i>
    <i class='maskicon sprite-globe'></i>
    <i class='maskicon sprite-wrench'></i>
    <i class='maskicon sprite-tasks'></i>
    <i class='maskicon sprite-filter'></i>
    <i class='maskicon sprite-briefcase'></i>
    <i class='maskicon sprite-fullscreen'></i>
    <h1>Masked + RGBA</h1>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
    <i class='maskicon-alpha sprite-glass'></i>
    <i class='maskicon-alpha sprite-music'></i>
    <i class='maskicon-alpha sprite-search'></i>
    <i class='maskicon-alpha sprite-envelope'></i>
    <i class='maskicon-alpha sprite-heart'></i>
    <i class='maskicon-alpha sprite-star'></i>
    <i class='maskicon-alpha sprite-star-empty'></i>
    <i class='maskicon-alpha sprite-user'></i>
    <i class='maskicon-alpha sprite-film'></i>
    <i class='maskicon-alpha sprite-th-large'></i>
    <i class='maskicon-alpha sprite-th'></i>
    <i class='maskicon-alpha sprite-th-list'></i>
    <i class='maskicon-alpha sprite-ok'></i>
    <i class='maskicon-alpha sprite-remove'></i>
    <i class='maskicon-alpha sprite-zoom-in'></i>
    <i class='maskicon-alpha sprite-zoom-out'></i>
    <i class='maskicon-alpha sprite-off'></i>
    <i class='maskicon-alpha sprite-signal'></i>
    <i class='maskicon-alpha sprite-cog'></i>
    <i class='maskicon-alpha sprite-trash'></i>
    <i class='maskicon-alpha sprite-home'></i>
    <i class='maskicon-alpha sprite-file'></i>
    <i class='maskicon-alpha sprite-time'></i>
    <i class='maskicon-alpha sprite-road'></i>
    <i class='maskicon-alpha sprite-download-alt'></i>
    <i class='maskicon-alpha sprite-download'></i>
    <i class='maskicon-alpha sprite-upload'></i>
    <i class='maskicon-alpha sprite-inbox'></i>
    <i class='maskicon-alpha sprite-play-circle'></i>
    <i class='maskicon-alpha sprite-repeat'></i>
    <i class='maskicon-alpha sprite-refresh'></i>
    <i class='maskicon-alpha sprite-list-alt'></i>
    <i class='maskicon-alpha sprite-lock'></i>
    <i class='maskicon-alpha sprite-flag'></i>
    <i class='maskicon-alpha sprite-headphones'></i>
    <i class='maskicon-alpha sprite-volume-off'></i>
    <i class='maskicon-alpha sprite-volume-down'></i>
    <i class='maskicon-alpha sprite-volume-up'></i>
    <i class='maskicon-alpha sprite-qrcode'></i>
    <i class='maskicon-alpha sprite-barcode'></i>
    <i class='maskicon-alpha sprite-tag'></i>
    <i class='maskicon-alpha sprite-tags'></i>
    <i class='maskicon-alpha sprite-book'></i>
    <i class='maskicon-alpha sprite-bookmark'></i>
    <i class='maskicon-alpha sprite-print'></i>
    <i class='maskicon-alpha sprite-camera'></i>
    <i class='maskicon-alpha sprite-font'></i>
    <i class='maskicon-alpha sprite-bold'></i>
    <i class='maskicon-alpha sprite-italic'></i>
    <i class='maskicon-alpha sprite-text-height'></i>
    <i class='maskicon-alpha sprite-text-width'></i>
    <i class='maskicon-alpha sprite-align-left'></i>
    <i class='maskicon-alpha sprite-align-center'></i>
    <i class='maskicon-alpha sprite-align-right'></i>
    <i class='maskicon-alpha sprite-align-justify'></i>
    <i class='maskicon-alpha sprite-list'></i>
    <i class='maskicon-alpha sprite-indent-left'></i>
    <i class='maskicon-alpha sprite-indent-right'></i>
    <i class='maskicon-alpha sprite-facetime-video'></i>
    <i class='maskicon-alpha sprite-picture'></i>
    <i class='maskicon-alpha sprite-pencil'></i>
    <i class='maskicon-alpha sprite-map-marker'></i>
    <i class='maskicon-alpha sprite-adjust'></i>
    <i class='maskicon-alpha sprite-tint'></i>
    <i class='maskicon-alpha sprite-edit'></i>
    <i class='maskicon-alpha sprite-share'></i>
    <i class='maskicon-alpha sprite-check'></i>
    <i class='maskicon-alpha sprite-move'></i>
    <i class='maskicon-alpha sprite-step-backward'></i>
    <i class='maskicon-alpha sprite-fast-backward'></i>
    <i class='maskicon-alpha sprite-backward'></i>
    <i class='maskicon-alpha sprite-play'></i>
    <i class='maskicon-alpha sprite-pause'></i>
    <i class='maskicon-alpha sprite-stop'></i>
    <i class='maskicon-alpha sprite-forward'></i>
    <i class='maskicon-alpha sprite-fast-forward'></i>
    <i class='maskicon-alpha sprite-step-forward'></i>
    <i class='maskicon-alpha sprite-eject'></i>
    <i class='maskicon-alpha sprite-chevron-left'></i>
    <i class='maskicon-alpha sprite-chevron-right'></i>
    <i class='maskicon-alpha sprite-plus-sign'></i>
    <i class='maskicon-alpha sprite-minus-sign'></i>
    <i class='maskicon-alpha sprite-remove-sign'></i>
    <i class='maskicon-alpha sprite-ok-sign'></i>
    <i class='maskicon-alpha sprite-question-sign'></i>
    <i class='maskicon-alpha sprite-info-sign'></i>
    <i class='maskicon-alpha sprite-screenshot'></i>
    <i class='maskicon-alpha sprite-remove-circle'></i>
    <i class='maskicon-alpha sprite-ok-circle'></i>
    <i class='maskicon-alpha sprite-ban-circle'></i>
    <i class='maskicon-alpha sprite-arrow-left'></i>
    <i class='maskicon-alpha sprite-arrow-right'></i>
    <i class='maskicon-alpha sprite-arrow-up'></i>
    <i class='maskicon-alpha sprite-arrow-down'></i>
    <i class='maskicon-alpha sprite-share-alt'></i>
    <i class='maskicon-alpha sprite-resize-full'></i>
    <i class='maskicon-alpha sprite-resize-small'></i>
    <i class='maskicon-alpha sprite-plus'></i>
    <i class='maskicon-alpha sprite-minus'></i>
    <i class='maskicon-alpha sprite-asterisk'></i>
    <i class='maskicon-alpha sprite-exclamation-sign'></i>
    <i class='maskicon-alpha sprite-gift'></i>
    <i class='maskicon-alpha sprite-leaf'></i>
    <i class='maskicon-alpha sprite-fire'></i>
    <i class='maskicon-alpha sprite-eye-open'></i>
    <i class='maskicon-alpha sprite-eye-close'></i>
    <i class='maskicon-alpha sprite-warning-sign'></i>
    <i class='maskicon-alpha sprite-plane'></i>
    <i class='maskicon-alpha sprite-calendar'></i>
    <i class='maskicon-alpha sprite-random'></i>
    <i class='maskicon-alpha sprite-comment'></i>
    <i class='maskicon-alpha sprite-magnet'></i>
    <i class='maskicon-alpha sprite-chevron-up'></i>
    <i class='maskicon-alpha sprite-chevron-down'></i>
    <i class='maskicon-alpha sprite-retweet'></i>
    <i class='maskicon-alpha sprite-shopping-cart'></i>
    <i class='maskicon-alpha sprite-folder-close'></i>
    <i class='maskicon-alpha sprite-folder-open'></i>
    <i class='maskicon-alpha sprite-resize-vertical'></i>
    <i class='maskicon-alpha sprite-resize-horizontal'></i>
    <i class='maskicon-alpha sprite-hdd'></i>
    <i class='maskicon-alpha sprite-bullhorn'></i>
    <i class='maskicon-alpha sprite-bell'></i>
    <i class='maskicon-alpha sprite-certificate'></i>
    <i class='maskicon-alpha sprite-thumbs-up'></i>
    <i class='maskicon-alpha sprite-thumbs-down'></i>
    <i class='maskicon-alpha sprite-hand-right'></i>
    <i class='maskicon-alpha sprite-hand-left'></i>
    <i class='maskicon-alpha sprite-hand-up'></i>
    <i class='maskicon-alpha sprite-hand-down'></i>
    <i class='maskicon-alpha sprite-circle-arrow-right'></i>
    <i class='maskicon-alpha sprite-circle-arrow-left'></i>
    <i class='maskicon-alpha sprite-circle-arrow-up'></i>
    <i class='maskicon-alpha sprite-circle-arrow-down'></i>
    <i class='maskicon-alpha sprite-globe'></i>
    <i class='maskicon-alpha sprite-wrench'></i>
    <i class='maskicon-alpha sprite-tasks'></i>
    <i class='maskicon-alpha sprite-filter'></i>
    <i class='maskicon-alpha sprite-briefcase'></i>
    <i class='maskicon-alpha sprite-fullscreen'></i>
  </body>
</html>
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>A Simple Map</title>
  <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
  <script src='//api.tiles.mapbox.com/mapbox.js/v1.5.2/mapbox.js'></script>
  <link href='//api.tiles.mapbox.com/mapbox.js/v1.5.2/mapbox.css' rel='stylesheet' />
  <style>
    body { margin:0; padding:0; }
    #map { position:absolute; top:0; bottom:0; width:100%; }
  </style>
</head>
<body>
<div id='map'></div>
<script>
var map = L.mapbox.map('map', 'examples.map-9ijuk24y')
    .setView([40, -74.50], 9);
var gj = L.geoJson({ type: 'LineString', coordinates: [[-74.5, 40], [-74.2, 40.4]] }).addTo(map);
gj.setStyle({
    color: '#f00'
});
gj.addData({ type: 'LineString', coordinates: [[-74.5, 40], [-74.0, 40.4]] });
</script>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar--positive {
  fill: steelblue;
}

.bar--negative {
  fill: brown;
}

.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 30, bottom: 40, left: 30},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .range([0, width]);

var y = d3.scale.ordinal()
    .rangeRoundBands([0, height], 0.1);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickSize(6, 0);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", type, function(error, data) {
  x.domain(d3.extent(data, function(d) { return d.value; })).nice();
  y.domain(data.map(function(d) { return d.name; }));

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", function(d) { return "bar bar--" + (d.value < 0 ? "negative" : "positive"); })
      .attr("x", function(d) { return x(Math.min(0, d.value)); })
      .attr("y", function(d) { return y(d.name); })
      .attr("width", function(d) { return Math.abs(x(d.value) - x(0)); })
      .attr("height", y.rangeBand());

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  var tickNegative = svg.append("g")
      .attr("class", "y axis")
      .attr("transform", "translate(" + x(0) + ",0)")
      .call(yAxis)
    .selectAll(".tick")
    .filter(function(d, i) { return data[i].value < 0; });

  tickNegative.select("line")
      .attr("x2", 6);

  tickNegative.select("text")
      .attr("x", 9)
      .style("text-anchor", "start");
});

function type(d) {
  d.value = +d.value;
  return d;
}

</script>
<script>(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process,Buffer){
'use strict';
var inherits = require('inherits');
var knex = require('knex');
var AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;
var Iter = require('./iterator');
var fs = require('fs');
var Promise = require('bluebird');
var url = require('url');
var TABLENAME = 'sqldown';
module.exports = SQLdown;
function parseConnectionString(string) {
  if (process.browser) {
    return {
      client: 'websql'
    };
  }
  var parsed = url.parse(string);
  var protocol = parsed.protocol;
  if(protocol === null) {
    return {
      client:'sqlite3',
      connection: {
        filename: string
      }
    };
  }
  if (protocol.slice(-1) === ':') {
    protocol = protocol.slice(0, -1);
  }
  return {
    client: protocol,
    connection: string
  };
}
function getTableName (location, options) {
  if (process.browser) {
    return location;
  }
  var parsed = url.parse(location, true).query;
  return parsed.table || options.table || TABLENAME;
}
// constructor, passes through the 'location' argument to the AbstractLevelDOWN constructor
function SQLdown(location) {
  if (!(this instanceof SQLdown)) {
    return new SQLdown(location);
  }
  AbstractLevelDOWN.call(this, location);
}
SQLdown.destroy = function (location, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = {};
  }
  var conn = parseConnectionString(location);
  if (conn.client === 'sqlite3') {
    fs.unlink(location, callback);
    return;
  }
  var db = knex(conn);
  db.schema.dropTableIfExists(getTableName(location, options)).then(function () {
    return db.destroy();
  }).exec(callback);
};
// our new prototype inherits from AbstractLevelDOWN
inherits(SQLdown, AbstractLevelDOWN);

SQLdown.prototype._open = function (options, callback) {
  var self = this;
  this.db = knex(parseConnectionString(this.location));
  this.tablename = getTableName(this.location, options);
  this.db.schema.hasTable(this.tablename).then(function (exists) {
      if (!exists) {
        return self.db.schema.createTable(self.tablename, function (table) {
          table.increments('id').primary();
          table.text('key');
          table.text('value');
        });
      }
    })
    .nodeify(callback);
};

SQLdown.prototype._get = function (key, options, cb) {
  var self = this;
  var asBuffer = true;
  if (options.asBuffer === false) {
    asBuffer = false;
  }
  if (options.raw) {
    asBuffer = false;
  }
  this.db.select('value').from(this.tablename).whereIn('id', function (){
    this.max('id').from(self.tablename).where({key:key});
  }).exec(function (err, res) {
    if (err) {
      return cb(err.stack);
    }
    if (!res.length) {
      return cb(new Error('NotFound'));
    }
    try {
      var value = JSON.parse(res[0].value);
      if (asBuffer) {
        value = new Buffer(value);
      }
      cb(null, value);
    } catch (e) {
      cb(new Error('NotFound'));
    }
  });
};
SQLdown.prototype._put = function (key, rawvalue, opt, cb) {
  if (!this._isBuffer(rawvalue)) {
    rawvalue = String(rawvalue)
  }
	var value = JSON.stringify(rawvalue);
  this.db(this.tablename).insert({
    key: key,
    value:value
  }).exec(cb);
};
SQLdown.prototype._del = function (key, opt, cb) {
  this.db(this.tablename).where({key: key}).delete().exec(cb);
};
SQLdown.prototype._batch = function (array, options, callback) {
  var self = this;
  this.db.transaction(function (trx) {
    return Promise.all(array.map(function (item) {
      if (item.type === 'del') {
        return self.db(self.tablename).transacting(trx).where({key: item.key}).delete();
      } else {
        return trx.insert({
          key: item.key,
          value:JSON.stringify(item.value)
        }).into(self.tablename);
      }
    }));
  }).nodeify(callback);
};
SQLdown.prototype._close = function (callback) {
  this.db.destroy().exec(callback);
};

SQLdown.prototype.iterator = function (options) {
  return new Iter(this, options);
};

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),require("buffer").Buffer)
},{"./iterator":3,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"abstract-leveldown":6,"bluebird":22,"buffer":171,"fs":170,"inherits":56,"knex":57,"url":190}],2:[function(require,module,exports){
'use strict';
var Queue = require('double-ended-queue');
var through = require('through2').obj;
var EE = require('events').EventEmitter;
var inherits = require('inherits');
module.exports = IterStream;
inherits(IterStream, EE);
function IterStream(stream) {
  if (!(this instanceof IterStream)) {
    return new IterStream(stream);
  }
  var self = this;
  EE.call(self);
  this.stream = stream;
  this.queue = new Queue();
  this.stream.pipe(through(function (chunk, _, next) {
    if (self.queue.isEmpty()) {
      self.once('callback', function () {
        self.queue.shift()(null, chunk);
        next();
      });
    } else {
      self.queue.shift()(null, chunk);
      next();
    }
  }, function (next) {
    while(!self.queue.isEmpty()) {
      self.queue.shift()(new Error('ended'));
    }
    self.on('callback', function () {
      while(!self.queue.isEmpty()) {
        self.queue.shift()(new Error('ended'));
      }
    });
    next();
  }));
}
IterStream.prototype.next = function (callback) {
  this.queue.push(callback);
  this.emit('callback');
};
},{"double-ended-queue":55,"events":174,"inherits":56,"through2":166}],3:[function(require,module,exports){
(function (Buffer){
'use strict';
var inherits = require('util').inherits;
var AbstractIterator = require('abstract-leveldown/abstract-iterator');
var IterStream = require('./iter-stream');
function goodOptions(opts, name) {
  if (!(name in opts)) {
    return;
  }
  var thing = opts[name];
  if (thing === null) {
    delete opts[name];
    return;
  }
  if (Buffer.isBuffer(thing) || typeof thing === 'string') {
    if (!thing.length) {
      delete opts[name];
    }
  }
  
}
inherits(Iterator, AbstractIterator);
module.exports = Iterator;
var names = [
  'start',
  'end',
  'gt',
  'gte',
  'lt',
  'lte'
];
function Iterator(db, options) {
  AbstractIterator.call(this, db);
  this._db = db.db;
  options = options || {};
  this._order = !options.reverse;
  this._options = options;
  names.forEach(function (i) {
    goodOptions(options, i);
  });
  this._count = 0;
  this._limit = options.limit || -1;
  this._sql = this.buildSQL();
  if (this._limit > 0) {
    this._sql.limit(this._limit);
  }
  if ('keyAsBuffer' in options) {
    this._keyAsBuffer = options.keyAsBuffer;
  } else {
    this._keyAsBuffer = true;
  }
  if ('valueAsBuffer' in options) {
    this._valueAsBuffer = options.valueAsBuffer;
  } else {
    this._valueAsBuffer = true;
  }
  this._sql = new IterStream(this._sql.stream());
}
Iterator.prototype._next = function (callback) {
  var self = this;
  if (self._ended) {
    callback();
  }
  this._sql.next(function (err, resp) {
    if (err) {
      return callback();
    }
    var key = resp.key;
    var value = JSON.parse(resp.value);

    if (self._keyAsBuffer) {
      key = new Buffer(key);
    }
    if (self._valueAsBuffer) {
      value = new Buffer(value);
    } else if (typeof value !== 'string') {
      value = String(value);
    }
    callback(null, key, value);
  });
};

Iterator.prototype.buildSQL = function () {
  var self = this;
  var outersql = this._db.select('key', 'value').from(this.db.tablename);
  var innerSQL = this._db.max('id').from(self.db.tablename).groupBy('key');
  if (this._order)  {
    outersql.orderBy('key');
    if ('start' in this._options) {
      if (this._options.exclusiveStart) {
        if ('start' in this._options) {
          this._options.gt = this._options.start;
        }
      } else {
        if ('start' in this._options) {
          this._options.gte = this._options.start;
        }
      }
    }
    if ('end' in this._options) {
      this._options.lte = this._options.end;
    }
  } else {
    outersql.orderBy('key', 'DESC');
    if ('start' in this._options) {
      if (this._options.exclusiveStart) {
        if ('start' in this._options) {
          this._options.lt = this._options.start;
        }
      } else {
        if ('start' in this._options) {
          this._options.lte = this._options.start;
        }
      }
    }
    if ('end' in this._options) {
      this._options.gte = this._options.end;
    }
  }

  if ('lt' in this._options) {
    innerSQL.where('key','<', this._options.lt);
  }
  if ('lte' in this._options) {
    innerSQL.where('key','<=', this._options.lte);
  }
  if ('gt' in this._options) {
    innerSQL.where('key','>', this._options.gt);
  }
  if ('gte' in this._options) {
    innerSQL.where('key','>=', this._options.gte);
  }
  return outersql.whereIn('id', innerSQL);
};
}).call(this,require("buffer").Buffer)
},{"./iter-stream":2,"abstract-leveldown/abstract-iterator":5,"buffer":171,"util":192}],4:[function(require,module,exports){
(function (process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

function AbstractChainedBatch (db) {
  this._db         = db
  this._operations = []
  this._written    = false
}

AbstractChainedBatch.prototype._checkWritten = function () {
  if (this._written)
    throw new Error('write() already called on this batch')
}

AbstractChainedBatch.prototype.put = function (key, value) {
  this._checkWritten()

  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer)
  if (err) throw err
  err = this._db._checkKeyValue(value, 'value', this._db._isBuffer)
  if (err) throw err

  if (!this._db._isBuffer(key)) key = String(key)
  if (!this._db._isBuffer(value)) value = String(value)

  if (typeof this._put == 'function' )
    this._put(key, value)
  else
    this._operations.push({ type: 'put', key: key, value: value })

  return this
}

AbstractChainedBatch.prototype.del = function (key) {
  this._checkWritten()

  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer)
  if (err) throw err

  if (!this._db._isBuffer(key)) key = String(key)

  if (typeof this._del == 'function' )
    this._del(key)
  else
    this._operations.push({ type: 'del', key: key })

  return this
}

AbstractChainedBatch.prototype.clear = function () {
  this._checkWritten()

  this._operations = []

  if (typeof this._clear == 'function' )
    this._clear()

  return this
}

AbstractChainedBatch.prototype.write = function (options, callback) {
  this._checkWritten()

  if (typeof options == 'function')
    callback = options
  if (typeof callback != 'function')
    throw new Error('write() requires a callback argument')
  if (typeof options != 'object')
    options = {}

  this._written = true

  if (typeof this._write == 'function' )
    return this._write(callback)

  if (typeof this._db._batch == 'function')
    return this._db._batch(this._operations, options, callback)

  process.nextTick(callback)
}

module.exports = AbstractChainedBatch
}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],5:[function(require,module,exports){
(function (process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

function AbstractIterator (db) {
  this.db = db
  this._ended = false
  this._nexting = false
}

AbstractIterator.prototype.next = function (callback) {
  var self = this

  if (typeof callback != 'function')
    throw new Error('next() requires a callback argument')

  if (self._ended)
    return callback(new Error('cannot call next() after end()'))
  if (self._nexting)
    return callback(new Error('cannot call next() before previous next() has completed'))

  self._nexting = true
  if (typeof self._next == 'function') {
    return self._next(function () {
      self._nexting = false
      callback.apply(null, arguments)
    })
  }

  process.nextTick(function () {
    self._nexting = false
    callback()
  })
}

AbstractIterator.prototype.end = function (callback) {
  if (typeof callback != 'function')
    throw new Error('end() requires a callback argument')

  if (this._ended)
    return callback(new Error('end() already called on iterator'))

  this._ended = true

  if (typeof this._end == 'function')
    return this._end(callback)

  process.nextTick(callback)
}

module.exports = AbstractIterator

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],6:[function(require,module,exports){
(function (process,Buffer){
/* Copyright (c) 2013 Rod Vagg, MIT License */

var xtend                = require('xtend')
  , AbstractIterator     = require('./abstract-iterator')
  , AbstractChainedBatch = require('./abstract-chained-batch')

function AbstractLevelDOWN (location) {
  if (!arguments.length || location === undefined)
    throw new Error('constructor requires at least a location argument')

  if (typeof location != 'string')
    throw new Error('constructor requires a location string argument')

  this.location = location
}

AbstractLevelDOWN.prototype.open = function (options, callback) {
  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('open() requires a callback argument')

  if (typeof options != 'object')
    options = {}

  if (typeof this._open == 'function')
    return this._open(options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.close = function (callback) {
  if (typeof callback != 'function')
    throw new Error('close() requires a callback argument')

  if (typeof this._close == 'function')
    return this._close(callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.get = function (key, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('get() requires a callback argument')

  if (err = this._checkKeyValue(key, 'key', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  if (typeof options != 'object')
    options = {}

  if (typeof this._get == 'function')
    return this._get(key, options, callback)

  process.nextTick(function () { callback(new Error('NotFound')) })
}

AbstractLevelDOWN.prototype.put = function (key, value, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('put() requires a callback argument')

  if (err = this._checkKeyValue(key, 'key', this._isBuffer))
    return callback(err)

  if (err = this._checkKeyValue(value, 'value', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  // coerce value to string in node, don't touch it in browser
  // (indexeddb can store any JS type)
  if (!this._isBuffer(value) && !process.browser)
    value = String(value)

  if (typeof options != 'object')
    options = {}

  if (typeof this._put == 'function')
    return this._put(key, value, options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.del = function (key, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('del() requires a callback argument')

  if (err = this._checkKeyValue(key, 'key', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  if (typeof options != 'object')
    options = {}

  if (typeof this._del == 'function')
    return this._del(key, options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.batch = function (array, options, callback) {
  if (!arguments.length)
    return this._chainedBatch()

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('batch(array) requires a callback argument')

  if (!Array.isArray(array))
    return callback(new Error('batch(array) requires an array argument'))

  if (typeof options != 'object')
    options = {}

  var i = 0
    , l = array.length
    , e
    , err

  for (; i < l; i++) {
    e = array[i]
    if (typeof e != 'object')
      continue

    if (err = this._checkKeyValue(e.type, 'type', this._isBuffer))
      return callback(err)

    if (err = this._checkKeyValue(e.key, 'key', this._isBuffer))
      return callback(err)

    if (e.type == 'put') {
      if (err = this._checkKeyValue(e.value, 'value', this._isBuffer))
        return callback(err)
    }
  }

  if (typeof this._batch == 'function')
    return this._batch(array, options, callback)

  process.nextTick(callback)
}

//TODO: remove from here, not a necessary primitive
AbstractLevelDOWN.prototype.approximateSize = function (start, end, callback) {
  if (   start == null
      || end == null
      || typeof start == 'function'
      || typeof end == 'function') {
    throw new Error('approximateSize() requires valid `start`, `end` and `callback` arguments')
  }

  if (typeof callback != 'function')
    throw new Error('approximateSize() requires a callback argument')

  if (!this._isBuffer(start))
    start = String(start)

  if (!this._isBuffer(end))
    end = String(end)

  if (typeof this._approximateSize == 'function')
    return this._approximateSize(start, end, callback)

  process.nextTick(function () {
    callback(null, 0)
  })
}

AbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {
  var self = this

  options = xtend(options)

  ;[ 'start', 'end', 'gt', 'gte', 'lt', 'lte' ].forEach(function (o) {
    if (options[o] && self._isBuffer(options[o]) && options[o].length === 0)
      delete options[o]
  })

  options.reverse = !!options.reverse

  // fix `start` so it takes into account gt, gte, lt, lte as appropriate
  if (options.reverse && options.lt)
    options.start = options.lt
  if (options.reverse && options.lte)
    options.start = options.lte
  if (!options.reverse && options.gt)
    options.start = options.gt
  if (!options.reverse && options.gte)
    options.start = options.gte

  if ((options.reverse && options.lt && !options.lte)
    || (!options.reverse && options.gt && !options.gte))
    options.exclusiveStart = true // start should *not* include matching key

  return options
}

AbstractLevelDOWN.prototype.iterator = function (options) {
  if (typeof options != 'object')
    options = {}

  options = this._setupIteratorOptions(options)

  if (typeof this._iterator == 'function')
    return this._iterator(options)

  return new AbstractIterator(this)
}

AbstractLevelDOWN.prototype._chainedBatch = function () {
  return new AbstractChainedBatch(this)
}

AbstractLevelDOWN.prototype._isBuffer = function (obj) {
  return Buffer.isBuffer(obj)
}

AbstractLevelDOWN.prototype._checkKeyValue = function (obj, type) {
  if (obj === null || obj === undefined)
    return new Error(type + ' cannot be `null` or `undefined`')

  if (obj === null || obj === undefined)
    return new Error(type + ' cannot be `null` or `undefined`')

  if (this._isBuffer(obj)) {
    if (obj.length === 0)
      return new Error(type + ' cannot be an empty Buffer')
  } else if (String(obj) === '')
    return new Error(type + ' cannot be an empty String')
}

module.exports.AbstractLevelDOWN    = AbstractLevelDOWN
module.exports.AbstractIterator     = AbstractIterator
module.exports.AbstractChainedBatch = AbstractChainedBatch

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),require("buffer").Buffer)
},{"./abstract-chained-batch":4,"./abstract-iterator":5,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171,"xtend":19}],7:[function(require,module,exports){
(function (Buffer){
var db
  , verifyNotFoundError = require('./util').verifyNotFoundError
  , isTypedArray        = require('./util').isTypedArray

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

module.exports.args = function (test) {
  test('test callback-less, 2-arg, batch() throws', function (t) {
    t.throws(db.batch.bind(db, 'foo', {}), 'callback-less, 2-arg batch() throws')
    t.end()
  })

  test('test batch() with missing `value`', function (t) {
    db.batch([{ type: 'put', key: 'foo1' }], function (err) {
      t.equal(err.message, 'value cannot be `null` or `undefined`', 'correct error message')
      t.end()
    })
  })

  test('test batch() with null `value`', function (t) {
    db.batch([{ type: 'put', key: 'foo1', value: null }], function (err) {
      t.equal(err.message, 'value cannot be `null` or `undefined`', 'correct error message')
      t.end()
    })
  })

  test('test batch() with missing `key`', function (t) {
    db.batch([{ type: 'put', value: 'foo1' }], function (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      t.end()
    })
  })

  test('test batch() with null `key`', function (t) {
    db.batch([{ type: 'put', key: null, value: 'foo1' }], function (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      t.end()
    })
  })

  test('test batch() with missing `key` and `value`', function (t) {
    db.batch([{ type: 'put' }], function (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      t.end()
    })
  })
}

module.exports.batch = function (test) {
  test('test batch() with empty array', function (t) {
    db.batch([], function (err) {
      t.notOk(err, 'no error')
      t.end()
    })
  })

  test('test simple batch()', function (t) {
    db.batch([{ type: 'put', key: 'foo', value: 'bar' }], function (err) {
      t.notOk(err, 'no error')

      db.get('foo', function (err, value) {
        t.notOk(err, 'no error')
        var result
        if (isTypedArray(value)) {
          result = String.fromCharCode.apply(null, new Uint16Array(value))
        } else {
          t.ok(typeof Buffer != 'undefined' && value instanceof Buffer)
          result = value.toString()
        }
        t.equal(result, 'bar')
        t.end()
      })
    })
  })

  test('test multiple batch()', function (t) {
    db.batch([
        { type: 'put', key: 'foobatch1', value: 'bar1' }
      , { type: 'put', key: 'foobatch2', value: 'bar2' }
      , { type: 'put', key: 'foobatch3', value: 'bar3' }
      , { type: 'del', key: 'foobatch2' }
    ], function (err) {
      t.notOk(err, 'no error')

      var r = 0
        , done = function () {
            if (++r == 3)
              t.end()
          }

      db.get('foobatch1', function (err, value) {
        t.notOk(err, 'no error')
        var result
        if (isTypedArray(value)) {
          result = String.fromCharCode.apply(null, new Uint16Array(value))
        } else {
          t.ok(typeof Buffer != 'undefined' && value instanceof Buffer)
          result = value.toString()
        }
        t.equal(result, 'bar1')
        done()
      })

      db.get('foobatch2', function (err, value) {
        t.ok(err, 'entry not found')
        t.ok(typeof value == 'undefined', 'value is undefined')
        t.ok(verifyNotFoundError(err), 'NotFound error')
        done()
      })

      db.get('foobatch3', function (err, value) {
        t.notOk(err, 'no error')
        var result
        if (isTypedArray(value)) {
          result = String.fromCharCode.apply(null, new Uint16Array(value))
        } else {
          t.ok(typeof Buffer != 'undefined' && value instanceof Buffer)
          result = value.toString()
        }
        t.equal(result, 'bar3')
        done()
      })
    })
  })
}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.args(test)
  module.exports.batch(test)
  module.exports.tearDown(test, testCommon)
}

}).call(this,require("buffer").Buffer)
},{"./util":18,"buffer":171}],8:[function(require,module,exports){
var db

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

module.exports.args = function (test) {
  test('test batch#put() with missing `value`', function (t) {
    try {
      db.batch().put('foo1')
    } catch (err) {
      t.equal(err.message, 'value cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#put() with null `value`', function (t) {
    try {
      db.batch().put('foo1', null)
    } catch (err) {
      t.equal(err.message, 'value cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#put() with missing `key`', function (t) {
    try {
      db.batch().put(undefined, 'foo1')
    } catch (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#put() with null `key`', function (t) {
    try {
      db.batch().put(null, 'foo1')
    } catch (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#put() with missing `key` and `value`', function (t) {
    try {
      db.batch().put()
    } catch (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#del() with missing `key`', function (t) {
    try {
      db.batch().del()
    } catch (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#del() with null `key`', function (t) {
    try {
      db.batch().del(null)
    } catch (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#del() with null `key`', function (t) {
    try {
      db.batch().del(null)
    } catch (err) {
      t.equal(err.message, 'key cannot be `null` or `undefined`', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#clear() doesn\'t throw', function (t) {
    db.batch().clear()
    t.end()
  })

  test('test batch#write() with no callback', function (t) {
    try {
      db.batch().write()
    } catch (err) {
      t.equal(err.message, 'write() requires a callback argument', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#put() after write()', function (t) {
    var batch = db.batch().put('foo', 'bar')
    batch.write(function () {})
    try {
      batch.put('boom', 'bang')
    } catch (err) {
      t.equal(err.message, 'write() already called on this batch', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#del() after write()', function (t) {
    var batch = db.batch().put('foo', 'bar')
    batch.write(function () {})
    try {
      batch.del('foo')
    } catch (err) {
      t.equal(err.message, 'write() already called on this batch', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#clear() after write()', function (t) {
    var batch = db.batch().put('foo', 'bar')
    batch.write(function () {})
    try {
      batch.clear()
    } catch (err) {
      t.equal(err.message, 'write() already called on this batch', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })

  test('test batch#write() after write()', function (t) {
    var batch = db.batch().put('foo', 'bar')
    batch.write(function () {})
    try {
      batch.write(function (err) {})
    } catch (err) {
      t.equal(err.message, 'write() already called on this batch', 'correct error message')
      return t.end()
    }
    t.fail('should have thrown')
    t.end()
  })
}

module.exports.batch = function (test, testCommon) {
  test('test basic batch', function (t) {
    db.batch(
        [
            { type: 'put', key: 'one', value: '1' }
          , { type: 'put', key: 'two', value: '2' }
          , { type: 'put', key: 'three', value: '3' }
        ]
      , function (err) {
          t.notOk(err, 'no error')

          db.batch()
            .put('1', 'one')
            .del('2', 'two')
            .put('3', 'three')
            .clear()
            .put('one', 'I')
            .put('two', 'II')
            .del('three')
            .put('foo', 'bar')
            .write(function (err) {
              t.notOk(err, 'no error')
              testCommon.collectEntries(
                  db.iterator({ keyAsBuffer: false, valueAsBuffer: false })
                , function (err, data) {
                    t.notOk(err, 'no error')
                    t.equal(data.length, 3, 'correct number of entries')
                    var expected = [
                        { key: 'foo', value: 'bar' }
                      , { key: 'one', value: 'I' }
                      , { key: 'two', value: 'II' }
                    ]
                    t.deepEqual(data, expected)
                    t.end()
                  }
              )
            })
        }
    )
  })
}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.args(test)
  module.exports.batch(test, testCommon)
  module.exports.tearDown(test, testCommon)
}
},{}],9:[function(require,module,exports){
module.exports.close = function (leveldown, test, testCommon) {
  test('test close()', function (t) {
    var db = leveldown(testCommon.location())

    db.open(function (err) {
      t.notOk(err, 'no error')
      t.throws(
          db.close.bind(db)
        , { name: 'Error', message: 'close() requires a callback argument' }
        , 'no-arg close() throws'
      )
      t.throws(
          db.close.bind(db, 'foo')
        , { name: 'Error', message: 'close() requires a callback argument' }
        , 'non-callback close() throws'
      )

      db.close(function (err) {
        t.notOk(err, 'no error')
        t.end()
      })
    })
  })
}
},{}],10:[function(require,module,exports){
var db
  , verifyNotFoundError = require('./util').verifyNotFoundError
  , isTypedArray        = require('./util').isTypedArray

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

module.exports.args = function (test) {
  test('test argument-less del() throws', function (t) {
    t.throws(
        db.del.bind(db)
      , { name: 'Error', message: 'del() requires a callback argument' }
      , 'no-arg del() throws'
    )
    t.end()
  })

  test('test callback-less, 1-arg, del() throws', function (t) {
    t.throws(
        db.del.bind(db, 'foo')
      , { name: 'Error', message: 'del() requires a callback argument' }
      , 'callback-less, 1-arg del() throws'
    )
    t.end()
  })

  test('test callback-less, 3-arg, del() throws', function (t) {
    t.throws(
        db.del.bind(db, 'foo', {})
      , { name: 'Error', message: 'del() requires a callback argument' }
      , 'callback-less, 2-arg del() throws'
    )
    t.end()
  })
}

module.exports.del = function (test) {
  test('test simple del()', function (t) {
    db.put('foo', 'bar', function (err) {
      t.notOk(err, 'no error')
      db.del('foo', function (err) {
        t.notOk(err, 'no error')
        db.get('foo', function (err) {
          t.ok(err, 'entry propertly deleted')
          t.ok(typeof value == 'undefined', 'value is undefined')
          t.ok(verifyNotFoundError(err), 'NotFound error')
          t.end()
        })
      })
    })
  })

  test('test del on non-existent key', function (t) {
    db.del('blargh', function (err) {
      t.notOk(err, 'should not error on delete')
      t.end()
    })
  })
}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.args(test)
  module.exports.del(test)
  module.exports.tearDown(test, testCommon)
}

},{"./util":18}],11:[function(require,module,exports){
(function (Buffer){
var db
  , verifyNotFoundError = require('./util').verifyNotFoundError
  , isTypedArray        = require('./util').isTypedArray

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

module.exports.args = function (test) {
  test('test argument-less get() throws', function (t) {
    t.throws(
        db.get.bind(db)
      , { name: 'Error', message: 'get() requires a callback argument' }
      , 'no-arg get() throws'
    )
    t.end()
  })

  test('test callback-less, 1-arg, get() throws', function (t) {
    t.throws(
        db.get.bind(db, 'foo')
      , { name: 'Error', message: 'get() requires a callback argument' }
      , 'callback-less, 1-arg get() throws'
    )
    t.end()
  })

  test('test callback-less, 3-arg, get() throws', function (t) {
    t.throws(
        db.get.bind(db, 'foo', {})
      , { name: 'Error', message: 'get() requires a callback argument' }
      , 'callback-less, 2-arg get() throws'
    )
    t.end()
  })
}

module.exports.get = function (test) {
  test('test simple get()', function (t) {
    db.put('foo', 'bar', function (err) {
      t.notOk(err, 'no error')
      db.get('foo', function (err, value) {
        t.notOk(err, 'no error')
        t.ok(typeof value !== 'string', 'should not be string by default')

        var result
        if (isTypedArray(value)) {
          result = String.fromCharCode.apply(null, new Uint16Array(value))
        } else {
          t.ok(typeof Buffer != 'undefined' && value instanceof Buffer)
          result = value.toString()
        }

        t.equal(result, 'bar')

        db.get('foo', {}, function (err, value) { // same but with {}
          t.notOk(err, 'no error')
          t.ok(typeof value !== 'string', 'should not be string by default')

          var result
          if (isTypedArray(value)) {
            result = String.fromCharCode.apply(null, new Uint16Array(value))
          } else {
            t.ok(typeof Buffer != 'undefined' && value instanceof Buffer)
            result = value.toString()
          }

          t.equal(result, 'bar')

          db.get('foo', { asBuffer: false }, function (err, value) {
            t.notOk(err, 'no error')
            t.ok(typeof value === 'string', 'should be string if not buffer')
            t.equal(value, 'bar')
            t.end()
          })
        })
      })
    })
  })

  test('test simultaniously get()', function (t) {
    db.put('hello', 'world', function (err) {
      t.notOk(err, 'should not error')
      var r = 0
        , done = function () {
            if (++r == 20)
              t.end()
          }
        , i = 0
        , j = 0

      for (; i < 10; ++i)
        db.get('hello', function(err, value) {
          t.notOk(err, 'should not error')
          t.equal(value.toString(), 'world')
          done()
        })

      for (; j < 10; ++j)
        db.get('not found', function(err, value) {
          t.ok(err, 'should error')
          t.ok(verifyNotFoundError(err), 'should have correct error message')
          t.ok(typeof value == 'undefined', 'value is undefined')
          done()
        })
    })
  })
}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.args(test)
  module.exports.get(test)
  module.exports.tearDown(test, testCommon)
}
}).call(this,require("buffer").Buffer)
},{"./util":18,"buffer":171}],12:[function(require,module,exports){
(function (process,Buffer){
var db
  , sourceData = (function () {
      var d = []
        , i = 0
        , k
      for (; i < 100; i++) {
        k = (i < 10 ? '0' : '') + i
        d.push({
            type  : 'put'
          , key   : k
          , value : Math.random()
        })
      }
      return d
    }())
  , transformSource = function (d) {
      return { key: d.key, value: String(d.value) }
    }

module.exports.sourceData      = sourceData
module.exports.transformSource = transformSource

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

module.exports.args = function (test) {
  test('test argument-less iterator#next() throws', function (t) {
    var iterator = db.iterator()
    t.throws(
        iterator.next.bind(iterator)
      , { name: 'Error', message: 'next() requires a callback argument' }
      , 'no-arg iterator#next() throws'
    )
    iterator.end(t.end.bind(t))
  })

  test('test argument-less iterator#end() after next() throws', function (t) {
    var iterator = db.iterator()
    iterator.next(function () {
      t.throws(
          iterator.end.bind(iterator)
        , { name: 'Error', message: 'end() requires a callback argument' }
        , 'no-arg iterator#end() throws'
      )
      iterator.end(t.end.bind(t))
    })
  })

  test('test argument-less iterator#end() throws', function (t) {
    var iterator = db.iterator()
    t.throws(
        iterator.end.bind(iterator)
      , { name: 'Error', message: 'end() requires a callback argument' }
      , 'no-arg iterator#end() throws'
    )
    iterator.end(t.end.bind(t))
  })
}

module.exports.sequence = function (test) {
  test('test twice iterator#end() callback with error', function (t) {
    var iterator = db.iterator()
    iterator.end(function (err) {
      t.notOk(err, 'no error')
      iterator.end(function(err2) {
        t.ok(err2, 'returned error')
        t.equal(err2.name, 'Error', 'correct error')
        t.equal(err2.message, 'end() already called on iterator')
        t.end()
      })
    })
  })

  test('test iterator#next after iterator#end() callback with error', function (t) {
    var iterator = db.iterator()
    iterator.end(function (err) {
      t.notOk(err, 'no error')
      iterator.next(function(err2) {
        t.ok(err2, 'returned error')
        t.equal(err2.name, 'Error', 'correct error')
        t.equal(err2.message, 'cannot call next() after end()', 'correct message')
        t.end()
      })
    })
  })

  test('test twice iterator#next() throws', function (t) {
    var iterator = db.iterator()
    iterator.next(function (err) {
      t.notOk(err, 'no error')
      iterator.end(function (err) {
        t.notOk(err, 'no error')
        t.end()
      })
    })

    iterator.next(function(err) {
      t.ok(err, 'returned error')
      t.equal(err.name, 'Error', 'correct error')
      t.equal(err.message, 'cannot call next() before previous next() has completed')
    })
  })
}

module.exports.iterator = function (leveldown, test, testCommon, collectEntries) {
  test('test simple iterator()', function (t) {
    var data = [
            { type: 'put', key: 'foobatch1', value: 'bar1' }
          , { type: 'put', key: 'foobatch2', value: 'bar2' }
          , { type: 'put', key: 'foobatch3', value: 'bar3' }
        ]
      , idx = 0

    db.batch(data, function (err) {
      t.notOk(err, 'no error')
      var iterator = db.iterator()
        , fn = function (err, key, value) {
            t.notOk(err, 'no error')
            if (key && value) {
              t.equal(key.toString(), data[idx].key, 'correct key')
              t.equal(value.toString(), data[idx].value, 'correct value')
              process.nextTick(next)
              idx++
            } else { // end
              t.ok(typeof err === 'undefined', 'err argument is undefined')
              t.ok(typeof key === 'undefined', 'key argument is undefined')
              t.ok(typeof value === 'undefined', 'value argument is undefined')
              t.equal(idx, data.length, 'correct number of entries')
              iterator.end(function () {
                t.end()
              })
            }
          }
        , next = function () {
            iterator.next(fn)
          }

      next()
    })
  })

  /** the following tests are mirroring the same series of tests in
    * LevelUP read-stream-test.js
    */

  test('setUp #2', function (t) {
    db.close(function () {
      db = leveldown(testCommon.location())
      db.open(function () {
        db.batch(sourceData, t.end.bind(t))
      })
    })
  })

  test('test full data collection', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.slice().reverse().map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start=0', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '00' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start=50', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '50' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start=50 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '50', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(49).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key (49.5)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '49.5' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key (49999)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '49999' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '49.5', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end=50', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, end: '50' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice(0, 51).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end being a midway key (50.5)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, end: '50.5' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice(0, 51).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end being a midway key (50555)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, end: '50555' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice(0, 51).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end being a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, end: '50.5', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 49, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(0, 49).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  // end='0', starting key is actually '00' so it should avoid it
  test('test iterator with end=0', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, end: '0' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  test('test iterator with start=30 and end=70', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '30', end: '70' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 41, 'correct number of entries')
      var expected = sourceData.slice(30, 71).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start=30 and end=70 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '70', end: '30', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 41, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(29, 70).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with limit=20', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, limit: 20 }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice(0, 20).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with limit=20 and start=20', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '20', limit: 20 }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice(20, 40).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with limit=20 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, limit: 20, reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(0, 20).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with limit=20 and start=20 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '79', limit: 20, reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(20, 40).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  // the default limit value from levelup is -1
  test('test iterator with limit=-1 should iterate over whole database', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, limit: -1}), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end after limit', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, limit: 20, end: '50' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice(0, 20).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end before limit', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, limit: 50, end: '19' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice(0, 20).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start after database end', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '9a' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  test('test iterator with start after database end and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, start: '9a', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.slice().reverse().map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start and end after database and and reverse=true', function (t) {
    collectEntries(db.iterator({ start: '9b', end: '9a', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  function testIteratorCollectsFullDatabase (name, iteratorOptions) {
    iteratorOptions.keyAsBuffer   = false
    iteratorOptions.valueAsBuffer = false
    test(name, function (t) {
      collectEntries(db.iterator(iteratorOptions), function (err, data) {
        t.notOk(err, 'no error')
        t.equal(data.length, 100, 'correct number of entries')
        var expected = sourceData.map(transformSource)
        t.deepEqual(data, expected)
        t.end()
      })
    })
  }
  if (!process.browser) {
    // Can't use buffers as query keys in indexeddb (I think :P)
    testIteratorCollectsFullDatabase(
        'test iterator with start as empty buffer'
      , { start: new Buffer(0) }
    )
    testIteratorCollectsFullDatabase(
        'test iterator with end as empty buffer'
      , { end: new Buffer(0) }
    )
  }
  testIteratorCollectsFullDatabase(
      'test iterator with start as empty string'
    , { start: '' }
  )
  testIteratorCollectsFullDatabase(
      'test iterator with start as null'
    , { start: null }
  )
  testIteratorCollectsFullDatabase(
      'test iterator with end as empty string'
    , { end: '' }
  )
  testIteratorCollectsFullDatabase(
      'test iterator with end as null'
    , { end: null }
  )
}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.args(test)
  module.exports.sequence(test)
  module.exports.iterator(leveldown, test, testCommon, testCommon.collectEntries)
  module.exports.tearDown(test, testCommon)
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),require("buffer").Buffer)
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171}],13:[function(require,module,exports){
module.exports.args = function (leveldown, test) {
  test('test database creation no-arg throws', function (t) {
    t.throws(
        leveldown
      , { name: 'Error', message: 'constructor requires at least a location argument' }
      , 'no-arg leveldown() throws'
    )
    t.end()
  })

  test('test database open no-arg throws', function (t) {
    var db = leveldown('foo')
    t.ok(db, 'database object returned')
    t.ok(typeof db.open === 'function', 'open() function exists')
    t.end()
  })
}
},{}],14:[function(require,module,exports){
module.exports.setUp = function (test, testCommon) {
  test('setUp', testCommon.setUp)
}

module.exports.args = function (leveldown, test, testCommon) {
  test('test database open no-arg throws', function (t) {
    var db = leveldown(testCommon.location())
    t.throws(
        db.open.bind(db)
      , { name: 'Error', message: 'open() requires a callback argument' }
      , 'no-arg open() throws'
    )
    t.end()
  })

  test('test callback-less, 1-arg, open() throws', function (t) {
    var db = leveldown(testCommon.location())
    t.throws(
        db.open.bind(db, {})
      , { name: 'Error', message: 'open() requires a callback argument' }
      , 'callback-less, 1-arg open() throws'
    )
    t.end()
  })
}

module.exports.open = function (leveldown, test, testCommon) {
  test('test database open, no options', function (t) {
    var db = leveldown(testCommon.location())

    // default createIfMissing=true, errorIfExists=false
    db.open(function (err) {
        t.notOk(err, 'no error')
        db.close(function () {
          t.end()
        })
      })
  })

  test('test database open, options and callback', function (t) {
    var db = leveldown(testCommon.location())

    // default createIfMissing=true, errorIfExists=false
    db.open({}, function (err) {
        t.notOk(err, 'no error')
        db.close(function () {
          t.end()
        })
      })
  })
}

module.exports.openAdvanced = function (leveldown, test, testCommon) {
  test('test database open createIfMissing:false', function (t) {
    var db = leveldown(testCommon.location())

    db.open({ createIfMissing: false }, function (err) {
      t.ok(err, 'error')
      t.ok(/does not exist/.test(err.message), 'error is about dir not existing')
      t.end()
    })
  })

  test('test database open errorIfExists:true', function (t) {
    var location = testCommon.location()
      , db       = leveldown(location)

    // make a valid database first, then close and dispose
    db.open({}, function (err) {
      t.notOk(err, 'no error')
      db.close(function (err) {
        t.notOk(err, 'no error')

        // open again with 'errorIfExists'
        db = leveldown(location)
        db.open({ createIfMissing: false, errorIfExists: true }, function (err) {
          t.ok(err, 'error')
          t.ok(/exists/.test(err.message), 'error is about already existing')
          t.end()
        })
      })
    })
  })
}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', testCommon.tearDown)
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(test, testCommon)
  module.exports.args(leveldown, test, testCommon)
  module.exports.open(leveldown, test, testCommon)
  module.exports.openAdvanced(leveldown, test, testCommon)
  module.exports.tearDown(test, testCommon)
}
},{}],15:[function(require,module,exports){
(function (process,Buffer){
/**** SETUP & UTILITY STUFF ****/


var db
  , testBuffer
  , test
  , verifyNotFoundError = require('./util').verifyNotFoundError
  , isTypedArray        = require('./util').isTypedArray

function makeGetDelErrorTests (type, key, expectedError) {
  test('test get() with ' + type + ' causes error', function (t) {
    db.get(key, function (err) {
      t.ok(err, 'has error')
      t.ok(err instanceof Error)
      t.ok(err.message.match(expectedError), 'correct error message')
      t.end()
    })
  })

  test('test del() with ' + type + ' causes error', function (t) {
    db.del(key, function (err) {
      t.ok(err, 'has error')
      t.ok(err instanceof Error)
      t.ok(err.message.match(expectedError), 'correct error message')
      t.end()
    })
  })
}

function makePutErrorTest (type, key, value, expectedError) {
  test('test put() with ' + type + ' causes error', function (t) {
    db.put(key, value, function (err) {
      t.ok(err, 'has error')
      t.ok(err instanceof Error)
      t.ok(err.message.match(expectedError), 'correct error message')
      t.end()
    })
  })
}

function makePutGetDelSuccessfulTest (type, key, value) {
  test('test put()/get()/del() with ' + type, function (t) {
    db.put(key, value, function (err) {
      t.notOk(err, 'no error')
      db.get(key, function (err, _value) {
        t.notOk(err, 'no error, has key/value for `' + key + '`')
        t.ok(Buffer.isBuffer(_value), 'is a Buffer')
        var result = _value.toString()
        value = value.toString()
        t.equals(result, value)
        db.del(key, function (err) {
          t.notOk(err, 'no error, deleted key/value for `' + key + '`')
          db.get(key, function (err,  value) {
            t.ok(err, 'entry propertly deleted')
            t.ok(verifyNotFoundError(err), 'should have correct error message')
            t.ok(typeof value == 'undefined', 'value is undefined')
            t.end()
          })
        })
      })
    })
  })
}

function makeErrorKeyTest (type, key, expectedError) {
  makeGetDelErrorTests(type, key, expectedError)
  makePutErrorTest(type, key, 'foo', expectedError)
}

/**** SETUP ENVIRONMENT ****/

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

/**** TEST ERROR KEYS ****/

module.exports.errorKeys = function (testFunc, BufferType) {
  if (!BufferType) BufferType = Buffer
  test = testFunc
  makeErrorKeyTest('null key', null, /key cannot be `null` or `undefined`/)
  makeErrorKeyTest('undefined key', undefined, /key cannot be `null` or `undefined`/)
  makeErrorKeyTest('empty String key', '', /key cannot be an empty String/)
  makeErrorKeyTest('empty Buffer key', new BufferType(0), /key cannot be an empty \w*Buffer/)
  makeErrorKeyTest('empty Array key', [], /key cannot be an empty String/)
}

/**** TEST NON-ERROR KEYS ****/

module.exports.nonErrorKeys = function (testFunc) {
  // valid falsey keys
  test = testFunc
  makePutGetDelSuccessfulTest('`false` key', false, 'foo false')
  makePutGetDelSuccessfulTest('`0` key', 0, 'foo 0')
  makePutGetDelSuccessfulTest('`NaN` key', NaN, 'foo NaN')

  // standard String key
  makePutGetDelSuccessfulTest(
      'long String key'
    , 'some long string that I\'m using as a key for this unit test, cross your fingers dude, we\'re going in!'
    , 'foo'
  )

  if (!process.browser) {
    // Buffer key
    makePutGetDelSuccessfulTest('Buffer key', testBuffer, 'foo')
  }

  // non-empty Array as a value
  makePutGetDelSuccessfulTest('Array value', 'foo', [1,2,3,4])
}

/**** TEST ERROR VALUES ****/

module.exports.errorValues = function (testFunc, BufferType) {
  if (!BufferType) BufferType = Buffer
  test = testFunc
  makePutErrorTest('null value', 'foo', null, /value cannot be `null` or `undefined`/)
  makePutErrorTest('undefined value', 'foo', undefined, /value cannot be `null` or `undefined`/)
  makePutErrorTest('empty String value', 'foo', '', /value cannot be an empty String/)
  makePutErrorTest('empty Buffer value', 'foo', new BufferType(0), /value cannot be an empty \w*Buffer/)
  makePutErrorTest('empty Array value', 'foo', [], /value cannot be an empty String/)
}

module.exports.nonErrorKeys = function (testFunc) {
  // valid falsey values
  test = testFunc
  makePutGetDelSuccessfulTest('`false` value', 'foo false', false)
  makePutGetDelSuccessfulTest('`0` value', 'foo 0', 0)
  makePutGetDelSuccessfulTest('`NaN` value', 'foo NaN', NaN)

  // standard String value
  makePutGetDelSuccessfulTest(
      'long String value'
    , 'foo'
    , 'some long string that I\'m using as a key for this unit test, cross your fingers dude, we\'re going in!'
  )

  // standard Buffer value
  makePutGetDelSuccessfulTest('Buffer value', 'foo', testBuffer)

  // non-empty Array as a key
  makePutGetDelSuccessfulTest('Array key', [1,2,3,4], 'foo')
}

/**** CLEANUP ENVIRONMENT ****/

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, testFunc, testCommon, buffer, BufferType) {
  testBuffer = buffer
  test = testFunc
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.errorKeys(test, BufferType)
  module.exports.nonErrorKeys(test)
  module.exports.errorValues(test, BufferType)
  module.exports.nonErrorKeys(test)
  module.exports.tearDown(test, testCommon)
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),require("buffer").Buffer)
},{"./util":18,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171}],16:[function(require,module,exports){
(function (process){
var db
  , verifyNotFoundError = require('./util').verifyNotFoundError
  , isTypedArray        = require('./util').isTypedArray

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

module.exports.args = function (test) {
  test('test argument-less put() throws', function (t) {
    t.throws(
        db.put.bind(db)
      , { name: 'Error', message: 'put() requires a callback argument' }
      , 'no-arg put() throws'
    )
    t.end()
  })

  test('test callback-less, 1-arg, put() throws', function (t) {
    t.throws(
        db.put.bind(db, 'foo')
      , { name: 'Error', message: 'put() requires a callback argument' }
      , 'callback-less, 1-arg put() throws'
    )
    t.end()
  })

  test('test callback-less, 2-arg, put() throws', function (t) {
    t.throws(
        db.put.bind(db, 'foo', 'bar')
      , { name: 'Error', message: 'put() requires a callback argument' }
      , 'callback-less, 2-arg put() throws'
    )
    t.end()
  })

  test('test callback-less, 3-arg, put() throws', function (t) {
    t.throws(
        db.put.bind(db, 'foo', 'bar', {})
      , { name: 'Error', message: 'put() requires a callback argument' }
      , 'callback-less, 3-arg put() throws'
    )
    t.end()
  })
}

module.exports.put = function (test) {
  test('test simple put()', function (t) {
    db.put('foo', 'bar', function (err) {
      t.notOk(err, 'no error')
      db.get('foo', function (err, value) {
        t.notOk(err, 'no error')
        var result = value.toString()
        if (isTypedArray(value))
          result = String.fromCharCode.apply(null, new Uint16Array(value))
        t.equal(result, 'bar')
        t.end()
      })
    })
  })
  
  if (process.browser) {
    test('test object value put()', function (t) {
      db.put('dood', {pete: 'sampras'}, function (err) {
        t.notOk(err, 'no error')
        db.get('dood', { asBuffer: false }, function (err, value) {
          t.notOk(err, 'no error')
          t.equal(JSON.stringify(value), JSON.stringify({pete: 'sampras'}))
          t.end()
        })
      })
    })
  }

}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.args(test)
  module.exports.put(test)
  module.exports.tearDown(test, testCommon)
}
}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./util":18,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],17:[function(require,module,exports){
(function (process,Buffer){
var db
  , sourceData      = require('./iterator-test').sourceData
  , transformSource = require('./iterator-test').transformSource

module.exports.setUp = function (leveldown, test, testCommon) {
  test('setUp common', testCommon.setUp)
  test('setUp db', function (t) {
    db = leveldown(testCommon.location())
    db.open(t.end.bind(t))
  })
}

module.exports.iterator = function (leveldown, test, testCommon, collectEntries) {
  test('test simple iterator()', function (t) {
    var data = [
            { type: 'put', key: 'foobatch1', value: 'bar1' }
          , { type: 'put', key: 'foobatch2', value: 'bar2' }
          , { type: 'put', key: 'foobatch3', value: 'bar3' }
        ]
      , idx = 0

    db.batch(data, function (err) {
      t.notOk(err, 'no error')
      var iterator = db.iterator()
        , fn = function (err, key, value) {
            t.notOk(err, 'no error')
            if (key && value) {
              t.equal(key.toString(), data[idx].key, 'correct key')
              t.equal(value.toString(), data[idx].value, 'correct value')
              process.nextTick(next)
              idx++
            } else { // end
              t.ok(typeof err === 'undefined', 'err argument is undefined')
              t.ok(typeof key === 'undefined', 'key argument is undefined')
              t.ok(typeof value === 'undefined', 'value argument is undefined')
              t.equal(idx, data.length, 'correct number of entries')
              iterator.end(function () {
                t.end()
              })
            }
          }
        , next = function () {
            iterator.next(fn)
          }

      next()
    })
  })

  /** the following tests are mirroring the same series of tests in
    * LevelUP read-stream-test.js
    */

  test('setUp #2', function (t) {
    db.close(function () {
      db = leveldown(testCommon.location())
      db.open(function () {
        db.batch(sourceData, t.end.bind(t))
      })
    })
  })

  test('test full data collection', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.slice().reverse().map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with gte=0', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '00' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with gte=50', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '50' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with lte=50 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '50', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(49).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key (49.5)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '49.5' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key (49999)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '49999' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '49.5', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lt: '49.5', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start being a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lt: '50', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 50, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(50).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end=50', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '50' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice(0, 51).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end being a midway key (50.5)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '50.5' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice(0, 51).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end being a midway key (50555)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '50555' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice(0, 51).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end being a midway key (50555)', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lt: '50555' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 51, 'correct number of entries')
      var expected = sourceData.slice(0, 51).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end being a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '50.5', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 49, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(0, 49).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with gt a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gt: '50.5', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 49, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(0, 49).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with gt a midway key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gt: '50', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 49, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(0, 49).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with gt 50 key and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gt: '50', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 49, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(0, 49).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  // end='0', starting key is actually '00' so it should avoid it
  test('test iterator with end=0', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '0' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  // end='0', starting key is actually '00' so it should avoid it
  test('test iterator with end<0', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lt: '0' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  test('test iterator with start=30 and end=70', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '30', lte: '70' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 41, 'correct number of entries')
      var expected = sourceData.slice(30, 71).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start=30 and end=70', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gt: '29', lt: '71' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 41, 'correct number of entries')
      var expected = sourceData.slice(30, 71).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start=30 and end=70 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '70', gte: '30', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 41, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(29, 70).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start=30 and end=70 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lt: '71', gt: '29', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 41, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(29, 70).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with limit=20 and start=20', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '20', limit: 20 }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice(20, 40).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with limit=20 and start=79 and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '79', limit: 20, reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice().reverse().slice(20, 40).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end after limit', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, limit: 20, lte: '50' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice(0, 20).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with end before limit', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, limit: 50, lte: '19' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 20, 'correct number of entries')
      var expected = sourceData.slice(0, 20).map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start after database end', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gte: '9a' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  test('test iterator with start after database end', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, gt: '9a' }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  test('test iterator with start after database end and reverse=true', function (t) {
    collectEntries(db.iterator({ keyAsBuffer: false, valueAsBuffer: false, lte: '9a', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, sourceData.length, 'correct number of entries')
      var expected = sourceData.slice().reverse().map(transformSource)
      t.deepEqual(data, expected)
      t.end()
    })
  })

  test('test iterator with start and end after database and and reverse=true', function (t) {
    collectEntries(db.iterator({ lte: '9b', gte: '9a', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  test('test iterator with lt and gt after database and and reverse=true', function (t) {
    collectEntries(db.iterator({ lt: '9b', gt: '9a', reverse: true }), function (err, data) {
      t.notOk(err, 'no error')
      t.equal(data.length, 0, 'correct number of entries')
      t.end()
    })
  })

  function testIteratorCollectsFullDatabase (name, iteratorOptions) {
    iteratorOptions.keyAsBuffer   = false
    iteratorOptions.valueAsBuffer = false
    test(name, function (t) {
      collectEntries(db.iterator(iteratorOptions), function (err, data) {
        t.notOk(err, 'no error')
        t.equal(data.length, 100, 'correct number of entries')
        var expected = sourceData.map(transformSource)
        t.deepEqual(data, expected)
        t.end()
      })
    })
  }
  if (!process.browser) {
    // Can't use buffers as query keys in indexeddb (I think :P)
    testIteratorCollectsFullDatabase(
        'test iterator with start as empty buffer'
      , { start: new Buffer(0) }
    )
    testIteratorCollectsFullDatabase(
        'test iterator with end as empty buffer'
      , { end: new Buffer(0) }
    )
  }
  testIteratorCollectsFullDatabase(
      'test iterator with start as empty string'
    , { gte: '' }
  )
  testIteratorCollectsFullDatabase(
      'test iterator with start as null'
    , { gte: null }
  )
  testIteratorCollectsFullDatabase(
      'test iterator with end as empty string'
    , { lte: '' }
  )
  testIteratorCollectsFullDatabase(
      'test iterator with end as null'
    , { lte: null }
  )
}

module.exports.tearDown = function (test, testCommon) {
  test('tearDown', function (t) {
    db.close(testCommon.tearDown.bind(null, t))
  })
}

module.exports.all = function (leveldown, test, testCommon) {
  module.exports.setUp(leveldown, test, testCommon)
  module.exports.iterator(leveldown, test, testCommon, testCommon.collectEntries)
  module.exports.tearDown(test, testCommon)
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),require("buffer").Buffer)
},{"./iterator-test":12,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171}],18:[function(require,module,exports){
module.exports.verifyNotFoundError = function verifyNotFoundError (err) {
  return (/NotFound/i).test(err.message)
}

module.exports.isTypedArray = function isTypedArray (value) {
  return (typeof ArrayBuffer != 'undefined' && value instanceof ArrayBuffer)
      || (typeof Uint8Array != 'undefined' && value instanceof Uint8Array)
}

},{}],19:[function(require,module,exports){
module.exports = extend

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (source.hasOwnProperty(key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],20:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
var SomePromiseArray = Promise._SomePromiseArray;
function Promise$_Any(promises) {
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    if (promise.isRejected()) {
        return promise;
    }
    ret.setHowMany(1);
    ret.setUnwrap();
    ret.init();
    return promise;
}

Promise.any = function Promise$Any(promises) {
    return Promise$_Any(promises);
};

Promise.prototype.any = function Promise$any() {
    return Promise$_Any(this);
};

};

},{}],21:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var schedule = require("./schedule.js");
var Queue = require("./queue.js");
var errorObj = require("./util.js").errorObj;
var tryCatch1 = require("./util.js").tryCatch1;
var _process = typeof process !== "undefined" ? process : void 0;

function Async() {
    this._isTickUsed = false;
    this._schedule = schedule;
    this._length = 0;
    this._lateBuffer = new Queue(16);
    this._functionBuffer = new Queue(65536);
    var self = this;
    this.consumeFunctionBuffer = function Async$consumeFunctionBuffer() {
        self._consumeFunctionBuffer();
    };
}

Async.prototype.haveItemsQueued = function Async$haveItemsQueued() {
    return this._length > 0;
};

Async.prototype.invokeLater = function Async$invokeLater(fn, receiver, arg) {
    if (_process !== void 0 &&
        _process.domain != null &&
        !fn.domain) {
        fn = _process.domain.bind(fn);
    }
    this._lateBuffer.push(fn, receiver, arg);
    this._queueTick();
};

Async.prototype.invoke = function Async$invoke(fn, receiver, arg) {
    if (_process !== void 0 &&
        _process.domain != null &&
        !fn.domain) {
        fn = _process.domain.bind(fn);
    }
    var functionBuffer = this._functionBuffer;
    functionBuffer.push(fn, receiver, arg);
    this._length = functionBuffer.length();
    this._queueTick();
};

Async.prototype._consumeFunctionBuffer =
function Async$_consumeFunctionBuffer() {
    var functionBuffer = this._functionBuffer;
    while (functionBuffer.length() > 0) {
        var fn = functionBuffer.shift();
        var receiver = functionBuffer.shift();
        var arg = functionBuffer.shift();
        fn.call(receiver, arg);
    }
    this._reset();
    this._consumeLateBuffer();
};

Async.prototype._consumeLateBuffer = function Async$_consumeLateBuffer() {
    var buffer = this._lateBuffer;
    while(buffer.length() > 0) {
        var fn = buffer.shift();
        var receiver = buffer.shift();
        var arg = buffer.shift();
        var res = tryCatch1(fn, receiver, arg);
        if (res === errorObj) {
            this._queueTick();
            if (fn.domain != null) {
                fn.domain.emit("error", res.e);
            } else {
                throw res.e;
            }
        }
    }
};

Async.prototype._queueTick = function Async$_queue() {
    if (!this._isTickUsed) {
        this._schedule(this.consumeFunctionBuffer);
        this._isTickUsed = true;
    }
};

Async.prototype._reset = function Async$_reset() {
    this._isTickUsed = false;
    this._length = 0;
};

module.exports = new Async();

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./queue.js":44,"./schedule.js":47,"./util.js":54,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],22:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var Promise = require("./promise.js")();
module.exports = Promise;
},{"./promise.js":39}],23:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var cr = Object.create;
var callerCache = cr && cr(null);
var getterCache = cr && cr(null);
callerCache[" size"] = getterCache[" size"] = 0;
module.exports = function(Promise) {
var util = require("./util.js");
var canEvaluate = util.canEvaluate;
var isIdentifier = util.isIdentifier;

function makeMethodCaller (methodName) {
    return new Function("obj", "                                             \n\
        'use strict'                                                         \n\
        var len = this.length;                                               \n\
        switch(len) {                                                        \n\
            case 1: return obj.methodName(this[0]);                          \n\
            case 2: return obj.methodName(this[0], this[1]);                 \n\
            case 3: return obj.methodName(this[0], this[1], this[2]);        \n\
            case 0: return obj.methodName();                                 \n\
            default: return obj.methodName.apply(obj, this);                 \n\
        }                                                                    \n\
        ".replace(/methodName/g, methodName));
}

function makeGetter (propertyName) {
    return new Function("obj", "                                             \n\
        'use strict';                                                        \n\
        return obj.propertyName;                                             \n\
        ".replace("propertyName", propertyName));
}

function getCompiled(name, compiler, cache) {
    var ret = cache[name];
    if (typeof ret !== "function") {
        if (!isIdentifier(name)) {
            return null;
        }
        ret = compiler(name);
        cache[name] = ret;
        cache[" size"]++;
        if (cache[" size"] > 512) {
            var keys = Object.keys(cache);
            for (var i = 0; i < 256; ++i) delete cache[keys[i]];
            cache[" size"] = keys.length - 256;
        }
    }
    return ret;
}

function getMethodCaller(name) {
    return getCompiled(name, makeMethodCaller, callerCache);
}

function getGetter(name) {
    return getCompiled(name, makeGetter, getterCache);
}

function caller(obj) {
    return obj[this.pop()].apply(obj, this);
}
Promise.prototype.call = function Promise$call(methodName) {
    var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}
    if (canEvaluate) {
        var maybeCaller = getMethodCaller(methodName);
        if (maybeCaller !== null) {
            return this._then(maybeCaller, void 0, void 0, args, void 0);
        }
    }
    args.push(methodName);
    return this._then(caller, void 0, void 0, args, void 0);
};

function namedGetter(obj) {
    return obj[this];
}
function indexedGetter(obj) {
    return obj[this];
}
Promise.prototype.get = function Promise$get(propertyName) {
    var isIndex = (typeof propertyName === "number");
    var getter;
    if (!isIndex) {
        if (canEvaluate) {
            var maybeGetter = getGetter(propertyName);
            getter = maybeGetter !== null ? maybeGetter : namedGetter;
        } else {
            getter = namedGetter;
        }
    } else {
        getter = indexedGetter;
    }
    return this._then(getter, void 0, void 0, propertyName, void 0);
};
};

},{"./util.js":54}],24:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var errors = require("./errors.js");
var canAttach = errors.canAttach;
var async = require("./async.js");
var CancellationError = errors.CancellationError;

Promise.prototype._cancel = function Promise$_cancel(reason) {
    if (!this.isCancellable()) return this;
    var parent;
    var promiseToReject = this;
    while ((parent = promiseToReject._cancellationParent) !== void 0 &&
        parent.isCancellable()) {
        promiseToReject = parent;
    }
    promiseToReject._attachExtraTrace(reason);
    promiseToReject._rejectUnchecked(reason);
};

Promise.prototype.cancel = function Promise$cancel(reason) {
    if (!this.isCancellable()) return this;
    reason = reason !== void 0
        ? (canAttach(reason) ? reason : new Error(reason + ""))
        : new CancellationError();
    async.invokeLater(this._cancel, this, reason);
    return this;
};

Promise.prototype.cancellable = function Promise$cancellable() {
    if (this._cancellable()) return this;
    this._setCancellable();
    this._cancellationParent = void 0;
    return this;
};

Promise.prototype.uncancellable = function Promise$uncancellable() {
    var ret = new Promise(INTERNAL);
    ret._propagateFrom(this, 2 | 4);
    ret._follow(this);
    ret._unsetCancellable();
    return ret;
};

Promise.prototype.fork =
function Promise$fork(didFulfill, didReject, didProgress) {
    var ret = this._then(didFulfill, didReject, didProgress,
                         void 0, void 0);

    ret._setCancellable();
    ret._cancellationParent = void 0;
    return ret;
};
};

},{"./async.js":21,"./errors.js":29}],25:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function() {
var inherits = require("./util.js").inherits;
var defineProperty = require("./es5.js").defineProperty;

var rignore = new RegExp(
    "\\b(?:[a-zA-Z0-9.]+\\$_\\w+|" +
    "tryCatch(?:1|2|3|4|Apply)|new \\w*PromiseArray|" +
    "\\w*PromiseArray\\.\\w*PromiseArray|" +
    "setTimeout|CatchFilter\\$_\\w+|makeNodePromisified|processImmediate|" +
    "process._tickCallback|nextTick|Async\\$\\w+)\\b"
);

var rtraceline = null;
var formatStack = null;

function formatNonError(obj) {
    var str;
    if (typeof obj === "function") {
        str = "[function " +
            (obj.name || "anonymous") +
            "]";
    } else {
        str = obj.toString();
        var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
        if (ruselessToString.test(str)) {
            try {
                var newStr = JSON.stringify(obj);
                str = newStr;
            }
            catch(e) {

            }
        }
        if (str.length === 0) {
            str = "(empty array)";
        }
    }
    return ("(<" + snip(str) + ">, no stack trace)");
}

function snip(str) {
    var maxChars = 41;
    if (str.length < maxChars) {
        return str;
    }
    return str.substr(0, maxChars - 3) + "...";
}

function CapturedTrace(ignoreUntil, isTopLevel) {
    this.captureStackTrace(CapturedTrace, isTopLevel);

}
inherits(CapturedTrace, Error);

CapturedTrace.prototype.captureStackTrace =
function CapturedTrace$captureStackTrace(ignoreUntil, isTopLevel) {
    captureStackTrace(this, ignoreUntil, isTopLevel);
};

CapturedTrace.possiblyUnhandledRejection =
function CapturedTrace$PossiblyUnhandledRejection(reason) {
    if (typeof console === "object") {
        var message;
        if (typeof reason === "object" || typeof reason === "function") {
            var stack = reason.stack;
            message = "Possibly unhandled " + formatStack(stack, reason);
        } else {
            message = "Possibly unhandled " + String(reason);
        }
        if (typeof console.error === "function" ||
            typeof console.error === "object") {
            console.error(message);
        } else if (typeof console.log === "function" ||
            typeof console.log === "object") {
            console.log(message);
        }
    }
};

CapturedTrace.combine = function CapturedTrace$Combine(current, prev) {
    var curLast = current.length - 1;
    for (var i = prev.length - 1; i >= 0; --i) {
        var line = prev[i];
        if (current[curLast] === line) {
            current.pop();
            curLast--;
        } else {
            break;
        }
    }

    current.push("From previous event:");
    var lines = current.concat(prev);

    var ret = [];

    for (var i = 0, len = lines.length; i < len; ++i) {

        if ((rignore.test(lines[i]) ||
            (i > 0 && !rtraceline.test(lines[i])) &&
            lines[i] !== "From previous event:")
       ) {
            continue;
        }
        ret.push(lines[i]);
    }
    return ret;
};

CapturedTrace.protectErrorMessageNewlines = function(stack) {
    for (var i = 0; i < stack.length; ++i) {
        if (rtraceline.test(stack[i])) {
            break;
        }
    }

    if (i <= 1) return;

    var errorMessageLines = [];
    for (var j = 0; j < i; ++j) {
        errorMessageLines.push(stack.shift());
    }
    stack.unshift(errorMessageLines.join("\u0002\u0000\u0001"));
};

CapturedTrace.isSupported = function CapturedTrace$IsSupported() {
    return typeof captureStackTrace === "function";
};

var captureStackTrace = (function stackDetection() {
    if (typeof Error.stackTraceLimit === "number" &&
        typeof Error.captureStackTrace === "function") {
        rtraceline = /^\s*at\s*/;
        formatStack = function(stack, error) {
            if (typeof stack === "string") return stack;

            if (error.name !== void 0 &&
                error.message !== void 0) {
                return error.name + ". " + error.message;
            }
            return formatNonError(error);


        };
        var captureStackTrace = Error.captureStackTrace;
        return function CapturedTrace$_captureStackTrace(
            receiver, ignoreUntil) {
            captureStackTrace(receiver, ignoreUntil);
        };
    }
    var err = new Error();

    if (typeof err.stack === "string" &&
        typeof "".startsWith === "function" &&
        (err.stack.startsWith("stackDetection@")) &&
        stackDetection.name === "stackDetection") {

        defineProperty(Error, "stackTraceLimit", {
            writable: true,
            enumerable: false,
            configurable: false,
            value: 25
        });
        rtraceline = /@/;
        var rline = /[@\n]/;

        formatStack = function(stack, error) {
            if (typeof stack === "string") {
                return (error.name + ". " + error.message + "\n" + stack);
            }

            if (error.name !== void 0 &&
                error.message !== void 0) {
                return error.name + ". " + error.message;
            }
            return formatNonError(error);
        };

        return function captureStackTrace(o) {
            var stack = new Error().stack;
            var split = stack.split(rline);
            var len = split.length;
            var ret = "";
            for (var i = 0; i < len; i += 2) {
                ret += split[i];
                ret += "@";
                ret += split[i + 1];
                ret += "\n";
            }
            o.stack = ret;
        };
    } else {
        formatStack = function(stack, error) {
            if (typeof stack === "string") return stack;

            if ((typeof error === "object" ||
                typeof error === "function") &&
                error.name !== void 0 &&
                error.message !== void 0) {
                return error.name + ". " + error.message;
            }
            return formatNonError(error);
        };

        return null;
    }
})();

return CapturedTrace;
};

},{"./es5.js":31,"./util.js":54}],26:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(NEXT_FILTER) {
var util = require("./util.js");
var errors = require("./errors.js");
var tryCatch1 = util.tryCatch1;
var errorObj = util.errorObj;
var keys = require("./es5.js").keys;
var TypeError = errors.TypeError;

function CatchFilter(instances, callback, promise) {
    this._instances = instances;
    this._callback = callback;
    this._promise = promise;
}

function CatchFilter$_safePredicate(predicate, e) {
    var safeObject = {};
    var retfilter = tryCatch1(predicate, safeObject, e);

    if (retfilter === errorObj) return retfilter;

    var safeKeys = keys(safeObject);
    if (safeKeys.length) {
        errorObj.e = new TypeError(
            "Catch filter must inherit from Error "
          + "or be a simple predicate function");
        return errorObj;
    }
    return retfilter;
}

CatchFilter.prototype.doFilter = function CatchFilter$_doFilter(e) {
    var cb = this._callback;
    var promise = this._promise;
    var boundTo = promise._boundTo;
    for (var i = 0, len = this._instances.length; i < len; ++i) {
        var item = this._instances[i];
        var itemIsErrorType = item === Error ||
            (item != null && item.prototype instanceof Error);

        if (itemIsErrorType && e instanceof item) {
            var ret = tryCatch1(cb, boundTo, e);
            if (ret === errorObj) {
                NEXT_FILTER.e = ret.e;
                return NEXT_FILTER;
            }
            return ret;
        } else if (typeof item === "function" && !itemIsErrorType) {
            var shouldHandle = CatchFilter$_safePredicate(item, e);
            if (shouldHandle === errorObj) {
                var trace = errors.canAttach(errorObj.e)
                    ? errorObj.e
                    : new Error(errorObj.e + "");
                this._promise._attachExtraTrace(trace);
                e = errorObj.e;
                break;
            } else if (shouldHandle) {
                var ret = tryCatch1(cb, boundTo, e);
                if (ret === errorObj) {
                    NEXT_FILTER.e = ret.e;
                    return NEXT_FILTER;
                }
                return ret;
            }
        }
    }
    NEXT_FILTER.e = e;
    return NEXT_FILTER;
};

return CatchFilter;
};

},{"./errors.js":29,"./es5.js":31,"./util.js":54}],27:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var util = require("./util.js");
var isPrimitive = util.isPrimitive;
var wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;

module.exports = function(Promise) {
var returner = function Promise$_returner() {
    return this;
};
var thrower = function Promise$_thrower() {
    throw this;
};

var wrapper = function Promise$_wrapper(value, action) {
    if (action === 1) {
        return function Promise$_thrower() {
            throw value;
        };
    } else if (action === 2) {
        return function Promise$_returner() {
            return value;
        };
    }
};


Promise.prototype["return"] =
Promise.prototype.thenReturn =
function Promise$thenReturn(value) {
    if (wrapsPrimitiveReceiver && isPrimitive(value)) {
        return this._then(
            wrapper(value, 2),
            void 0,
            void 0,
            void 0,
            void 0
       );
    }
    return this._then(returner, void 0, void 0, value, void 0);
};

Promise.prototype["throw"] =
Promise.prototype.thenThrow =
function Promise$thenThrow(reason) {
    if (wrapsPrimitiveReceiver && isPrimitive(reason)) {
        return this._then(
            wrapper(reason, 1),
            void 0,
            void 0,
            void 0,
            void 0
       );
    }
    return this._then(thrower, void 0, void 0, reason, void 0);
};
};

},{"./util.js":54}],28:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var PromiseReduce = Promise.reduce;

Promise.prototype.each = function Promise$each(fn) {
    return PromiseReduce(this, fn, null, INTERNAL);
};

Promise.each = function Promise$Each(promises, fn) {
    return PromiseReduce(promises, fn, null, INTERNAL);
};
};

},{}],29:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var Objectfreeze = require("./es5.js").freeze;
var util = require("./util.js");
var inherits = util.inherits;
var notEnumerableProp = util.notEnumerableProp;

function markAsOriginatingFromRejection(e) {
    try {
        notEnumerableProp(e, "isOperational", true);
    }
    catch(ignore) {}
}

function originatesFromRejection(e) {
    if (e == null) return false;
    return ((e instanceof OperationalError) ||
        e["isOperational"] === true);
}

function isError(obj) {
    return obj instanceof Error;
}

function canAttach(obj) {
    return isError(obj);
}

function subError(nameProperty, defaultMessage) {
    function SubError(message) {
        if (!(this instanceof SubError)) return new SubError(message);
        this.message = typeof message === "string" ? message : defaultMessage;
        this.name = nameProperty;
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        }
    }
    inherits(SubError, Error);
    return SubError;
}

var _TypeError, _RangeError;
var CancellationError = subError("CancellationError", "cancellation error");
var TimeoutError = subError("TimeoutError", "timeout error");
var AggregateError = subError("AggregateError", "aggregate error");
try {
    _TypeError = TypeError;
    _RangeError = RangeError;
} catch(e) {
    _TypeError = subError("TypeError", "type error");
    _RangeError = subError("RangeError", "range error");
}

var methods = ("join pop push shift unshift slice filter forEach some " +
    "every map indexOf lastIndexOf reduce reduceRight sort reverse").split(" ");

for (var i = 0; i < methods.length; ++i) {
    if (typeof Array.prototype[methods[i]] === "function") {
        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];
    }
}

AggregateError.prototype.length = 0;
AggregateError.prototype["isOperational"] = true;
var level = 0;
AggregateError.prototype.toString = function() {
    var indent = Array(level * 4 + 1).join(" ");
    var ret = "\n" + indent + "AggregateError of:" + "\n";
    level++;
    indent = Array(level * 4 + 1).join(" ");
    for (var i = 0; i < this.length; ++i) {
        var str = this[i] === this ? "[Circular AggregateError]" : this[i] + "";
        var lines = str.split("\n");
        for (var j = 0; j < lines.length; ++j) {
            lines[j] = indent + lines[j];
        }
        str = lines.join("\n");
        ret += str + "\n";
    }
    level--;
    return ret;
};

function OperationalError(message) {
    this.name = "OperationalError";
    this.message = message;
    this.cause = message;
    this["isOperational"] = true;

    if (message instanceof Error) {
        this.message = message.message;
        this.stack = message.stack;
    } else if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
    }

}
inherits(OperationalError, Error);

var key = "__BluebirdErrorTypes__";
var errorTypes = Error[key];
if (!errorTypes) {
    errorTypes = Objectfreeze({
        CancellationError: CancellationError,
        TimeoutError: TimeoutError,
        OperationalError: OperationalError,
        RejectionError: OperationalError,
        AggregateError: AggregateError
    });
    notEnumerableProp(Error, key, errorTypes);
}

module.exports = {
    Error: Error,
    TypeError: _TypeError,
    RangeError: _RangeError,
    CancellationError: errorTypes.CancellationError,
    OperationalError: errorTypes.OperationalError,
    TimeoutError: errorTypes.TimeoutError,
    AggregateError: errorTypes.AggregateError,
    originatesFromRejection: originatesFromRejection,
    markAsOriginatingFromRejection: markAsOriginatingFromRejection,
    canAttach: canAttach
};

},{"./es5.js":31,"./util.js":54}],30:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
var TypeError = require('./errors.js').TypeError;

function apiRejection(msg) {
    var error = new TypeError(msg);
    var ret = Promise.rejected(error);
    var parent = ret._peekContext();
    if (parent != null) {
        parent._attachExtraTrace(error);
    }
    return ret;
}

return apiRejection;
};

},{"./errors.js":29}],31:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
var isES5 = (function(){
    "use strict";
    return this === void 0;
})();

if (isES5) {
    module.exports = {
        freeze: Object.freeze,
        defineProperty: Object.defineProperty,
        keys: Object.keys,
        getPrototypeOf: Object.getPrototypeOf,
        isArray: Array.isArray,
        isES5: isES5
    };
} else {
    var has = {}.hasOwnProperty;
    var str = {}.toString;
    var proto = {}.constructor.prototype;

    var ObjectKeys = function ObjectKeys(o) {
        var ret = [];
        for (var key in o) {
            if (has.call(o, key)) {
                ret.push(key);
            }
        }
        return ret;
    }

    var ObjectDefineProperty = function ObjectDefineProperty(o, key, desc) {
        o[key] = desc.value;
        return o;
    }

    var ObjectFreeze = function ObjectFreeze(obj) {
        return obj;
    }

    var ObjectGetPrototypeOf = function ObjectGetPrototypeOf(obj) {
        try {
            return Object(obj).constructor.prototype;
        }
        catch (e) {
            return proto;
        }
    }

    var ArrayIsArray = function ArrayIsArray(obj) {
        try {
            return str.call(obj) === "[object Array]";
        }
        catch(e) {
            return false;
        }
    }

    module.exports = {
        isArray: ArrayIsArray,
        keys: ObjectKeys,
        defineProperty: ObjectDefineProperty,
        freeze: ObjectFreeze,
        getPrototypeOf: ObjectGetPrototypeOf,
        isES5: isES5
    };
}

},{}],32:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var PromiseMap = Promise.map;

Promise.prototype.filter = function Promise$filter(fn, options) {
    return PromiseMap(this, fn, options, INTERNAL);
};

Promise.filter = function Promise$Filter(promises, fn, options) {
    return PromiseMap(promises, fn, options, INTERNAL);
};
};

},{}],33:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, NEXT_FILTER, cast) {
var util = require("./util.js");
var wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;
var isPrimitive = util.isPrimitive;
var thrower = util.thrower;

function returnThis() {
    return this;
}
function throwThis() {
    throw this;
}
function return$(r) {
    return function Promise$_returner() {
        return r;
    };
}
function throw$(r) {
    return function Promise$_thrower() {
        throw r;
    };
}
function promisedFinally(ret, reasonOrValue, isFulfilled) {
    var then;
    if (wrapsPrimitiveReceiver && isPrimitive(reasonOrValue)) {
        then = isFulfilled ? return$(reasonOrValue) : throw$(reasonOrValue);
    } else {
        then = isFulfilled ? returnThis : throwThis;
    }
    return ret._then(then, thrower, void 0, reasonOrValue, void 0);
}

function finallyHandler(reasonOrValue) {
    var promise = this.promise;
    var handler = this.handler;

    var ret = promise._isBound()
                    ? handler.call(promise._boundTo)
                    : handler();

    if (ret !== void 0) {
        var maybePromise = cast(ret, void 0);
        if (maybePromise instanceof Promise) {
            return promisedFinally(maybePromise, reasonOrValue,
                                    promise.isFulfilled());
        }
    }

    if (promise.isRejected()) {
        NEXT_FILTER.e = reasonOrValue;
        return NEXT_FILTER;
    } else {
        return reasonOrValue;
    }
}

function tapHandler(value) {
    var promise = this.promise;
    var handler = this.handler;

    var ret = promise._isBound()
                    ? handler.call(promise._boundTo, value)
                    : handler(value);

    if (ret !== void 0) {
        var maybePromise = cast(ret, void 0);
        if (maybePromise instanceof Promise) {
            return promisedFinally(maybePromise, value, true);
        }
    }
    return value;
}

Promise.prototype._passThroughHandler =
function Promise$_passThroughHandler(handler, isFinally) {
    if (typeof handler !== "function") return this.then();

    var promiseAndHandler = {
        promise: this,
        handler: handler
    };

    return this._then(
            isFinally ? finallyHandler : tapHandler,
            isFinally ? finallyHandler : void 0, void 0,
            promiseAndHandler, void 0);
};

Promise.prototype.lastly =
Promise.prototype["finally"] = function Promise$finally(handler) {
    return this._passThroughHandler(handler, true);
};

Promise.prototype.tap = function Promise$tap(handler) {
    return this._passThroughHandler(handler, false);
};
};

},{"./util.js":54}],34:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, apiRejection, INTERNAL, cast) {
var errors = require("./errors.js");
var TypeError = errors.TypeError;
var deprecated = require("./util.js").deprecated;
var util = require("./util.js");
var errorObj = util.errorObj;
var tryCatch1 = util.tryCatch1;
var yieldHandlers = [];

function promiseFromYieldHandler(value, yieldHandlers) {
    var _errorObj = errorObj;
    var _Promise = Promise;
    var len = yieldHandlers.length;
    for (var i = 0; i < len; ++i) {
        var result = tryCatch1(yieldHandlers[i], void 0, value);
        if (result === _errorObj) {
            return _Promise.reject(_errorObj.e);
        }
        var maybePromise = cast(result, promiseFromYieldHandler);
        if (maybePromise instanceof _Promise) return maybePromise;
    }
    return null;
}

function PromiseSpawn(generatorFunction, receiver, yieldHandler) {
    var promise = this._promise = new Promise(INTERNAL);
    promise._setTrace(void 0);
    this._generatorFunction = generatorFunction;
    this._receiver = receiver;
    this._generator = void 0;
    this._yieldHandlers = typeof yieldHandler === "function"
        ? [yieldHandler].concat(yieldHandlers)
        : yieldHandlers;
}

PromiseSpawn.prototype.promise = function PromiseSpawn$promise() {
    return this._promise;
};

PromiseSpawn.prototype._run = function PromiseSpawn$_run() {
    this._generator = this._generatorFunction.call(this._receiver);
    this._receiver =
        this._generatorFunction = void 0;
    this._next(void 0);
};

PromiseSpawn.prototype._continue = function PromiseSpawn$_continue(result) {
    if (result === errorObj) {
        this._generator = void 0;
        var trace = errors.canAttach(result.e)
            ? result.e : new Error(result.e + "");
        this._promise._attachExtraTrace(trace);
        this._promise._reject(result.e, trace);
        return;
    }

    var value = result.value;
    if (result.done === true) {
        this._generator = void 0;
        if (!this._promise._tryFollow(value)) {
            this._promise._fulfill(value);
        }
    } else {
        var maybePromise = cast(value, void 0);
        if (!(maybePromise instanceof Promise)) {
            maybePromise =
                promiseFromYieldHandler(maybePromise, this._yieldHandlers);
            if (maybePromise === null) {
                this._throw(new TypeError("A value was yielded that could not be treated as a promise"));
                return;
            }
        }
        maybePromise._then(
            this._next,
            this._throw,
            void 0,
            this,
            null
       );
    }
};

PromiseSpawn.prototype._throw = function PromiseSpawn$_throw(reason) {
    if (errors.canAttach(reason))
        this._promise._attachExtraTrace(reason);
    this._continue(
        tryCatch1(this._generator["throw"], this._generator, reason)
   );
};

PromiseSpawn.prototype._next = function PromiseSpawn$_next(value) {
    this._continue(
        tryCatch1(this._generator.next, this._generator, value)
   );
};

Promise.coroutine =
function Promise$Coroutine(generatorFunction, options) {
    if (typeof generatorFunction !== "function") {
        throw new TypeError("generatorFunction must be a function");
    }
    var yieldHandler = Object(options).yieldHandler;
    var PromiseSpawn$ = PromiseSpawn;
    return function () {
        var generator = generatorFunction.apply(this, arguments);
        var spawn = new PromiseSpawn$(void 0, void 0, yieldHandler);
        spawn._generator = generator;
        spawn._next(void 0);
        return spawn.promise();
    };
};

Promise.coroutine.addYieldHandler = function(fn) {
    if (typeof fn !== "function") throw new TypeError("fn must be a function");
    yieldHandlers.push(fn);
};

Promise.spawn = function Promise$Spawn(generatorFunction) {
    deprecated("Promise.spawn is deprecated. Use Promise.coroutine instead.");
    if (typeof generatorFunction !== "function") {
        return apiRejection("generatorFunction must be a function");
    }
    var spawn = new PromiseSpawn(generatorFunction, this);
    var ret = spawn.promise();
    spawn._run(Promise.spawn);
    return ret;
};
};

},{"./errors.js":29,"./util.js":54}],35:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports =
function(Promise, PromiseArray, cast, INTERNAL) {
var util = require("./util.js");
var canEvaluate = util.canEvaluate;
var tryCatch1 = util.tryCatch1;
var errorObj = util.errorObj;


if (canEvaluate) {
    var thenCallback = function(i) {
        return new Function("value", "holder", "                             \n\
            'use strict';                                                    \n\
            holder.pIndex = value;                                           \n\
            holder.checkFulfillment(this);                                   \n\
            ".replace(/Index/g, i));
    };

    var caller = function(count) {
        var values = [];
        for (var i = 1; i <= count; ++i) values.push("holder.p" + i);
        return new Function("holder", "                                      \n\
            'use strict';                                                    \n\
            var callback = holder.fn;                                        \n\
            return callback(values);                                         \n\
            ".replace(/values/g, values.join(", ")));
    };
    var thenCallbacks = [];
    var callers = [void 0];
    for (var i = 1; i <= 5; ++i) {
        thenCallbacks.push(thenCallback(i));
        callers.push(caller(i));
    }

    var Holder = function(total, fn) {
        this.p1 = this.p2 = this.p3 = this.p4 = this.p5 = null;
        this.fn = fn;
        this.total = total;
        this.now = 0;
    };

    Holder.prototype.callers = callers;
    Holder.prototype.checkFulfillment = function(promise) {
        var now = this.now;
        now++;
        var total = this.total;
        if (now >= total) {
            var handler = this.callers[total];
            var ret = tryCatch1(handler, void 0, this);
            if (ret === errorObj) {
                promise._rejectUnchecked(ret.e);
            } else if (!promise._tryFollow(ret)) {
                promise._fulfillUnchecked(ret);
            }
        } else {
            this.now = now;
        }
    };
}




Promise.join = function Promise$Join() {
    var last = arguments.length - 1;
    var fn;
    if (last > 0 && typeof arguments[last] === "function") {
        fn = arguments[last];
        if (last < 6 && canEvaluate) {
            var ret = new Promise(INTERNAL);
            ret._setTrace(void 0);
            var holder = new Holder(last, fn);
            var reject = ret._reject;
            var callbacks = thenCallbacks;
            for (var i = 0; i < last; ++i) {
                var maybePromise = cast(arguments[i], void 0);
                if (maybePromise instanceof Promise) {
                    if (maybePromise.isPending()) {
                        maybePromise._then(callbacks[i], reject,
                                           void 0, ret, holder);
                    } else if (maybePromise.isFulfilled()) {
                        callbacks[i].call(ret,
                                          maybePromise._settledValue, holder);
                    } else {
                        ret._reject(maybePromise._settledValue);
                        maybePromise._unsetRejectionIsUnhandled();
                    }
                } else {
                    callbacks[i].call(ret, maybePromise, holder);
                }
            }
            return ret;
        }
    }
    var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}
    var ret = new PromiseArray(args).promise();
    return fn !== void 0 ? ret.spread(fn) : ret;
};

};

},{"./util.js":54}],36:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray, apiRejection, cast, INTERNAL) {
var util = require("./util.js");
var tryCatch3 = util.tryCatch3;
var errorObj = util.errorObj;
var PENDING = {};
var EMPTY_ARRAY = [];

function MappingPromiseArray(promises, fn, limit, _filter) {
    this.constructor$(promises);
    this._callback = fn;
    this._preservedValues = _filter === INTERNAL
        ? new Array(this.length())
        : null;
    this._limit = limit;
    this._inFlight = 0;
    this._queue = limit >= 1 ? [] : EMPTY_ARRAY;
    this._init$(void 0, -2);
}
util.inherits(MappingPromiseArray, PromiseArray);

MappingPromiseArray.prototype._init = function MappingPromiseArray$_init() {};

MappingPromiseArray.prototype._promiseFulfilled =
function MappingPromiseArray$_promiseFulfilled(value, index) {
    var values = this._values;
    if (values === null) return;

    var length = this.length();
    var preservedValues = this._preservedValues;
    var limit = this._limit;
    if (values[index] === PENDING) {
        values[index] = value;
        if (limit >= 1) {
            this._inFlight--;
            this._drainQueue();
            if (this._isResolved()) return;
        }
    } else {
        if (limit >= 1 && this._inFlight >= limit) {
            values[index] = value;
            this._queue.push(index);
            return;
        }
        if (preservedValues !== null) preservedValues[index] = value;

        var callback = this._callback;
        var receiver = this._promise._boundTo;
        var ret = tryCatch3(callback, receiver, value, index, length);
        if (ret === errorObj) return this._reject(ret.e);

        var maybePromise = cast(ret, void 0);
        if (maybePromise instanceof Promise) {
            if (maybePromise.isPending()) {
                if (limit >= 1) this._inFlight++;
                values[index] = PENDING;
                return maybePromise._proxyPromiseArray(this, index);
            } else if (maybePromise.isFulfilled()) {
                ret = maybePromise.value();
            } else {
                maybePromise._unsetRejectionIsUnhandled();
                return this._reject(maybePromise.reason());
            }
        }
        values[index] = ret;
    }
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= length) {
        if (preservedValues !== null) {
            this._filter(values, preservedValues);
        } else {
            this._resolve(values);
        }

    }
};

MappingPromiseArray.prototype._drainQueue =
function MappingPromiseArray$_drainQueue() {
    var queue = this._queue;
    var limit = this._limit;
    var values = this._values;
    while (queue.length > 0 && this._inFlight < limit) {
        var index = queue.pop();
        this._promiseFulfilled(values[index], index);
    }
};

MappingPromiseArray.prototype._filter =
function MappingPromiseArray$_filter(booleans, values) {
    var len = values.length;
    var ret = new Array(len);
    var j = 0;
    for (var i = 0; i < len; ++i) {
        if (booleans[i]) ret[j++] = values[i];
    }
    ret.length = j;
    this._resolve(ret);
};

MappingPromiseArray.prototype.preservedValues =
function MappingPromiseArray$preserveValues() {
    return this._preservedValues;
};

function map(promises, fn, options, _filter) {
    var limit = typeof options === "object" && options !== null
        ? options.concurrency
        : 0;
    limit = typeof limit === "number" &&
        isFinite(limit) && limit >= 1 ? limit : 0;
    return new MappingPromiseArray(promises, fn, limit, _filter);
}

Promise.prototype.map = function Promise$map(fn, options) {
    if (typeof fn !== "function") return apiRejection("fn must be a function");

    return map(this, fn, options, null).promise();
};

Promise.map = function Promise$Map(promises, fn, options, _filter) {
    if (typeof fn !== "function") return apiRejection("fn must be a function");
    return map(promises, fn, options, _filter).promise();
};


};

},{"./util.js":54}],37:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
var util = require("./util.js");
var async = require("./async.js");
var tryCatch2 = util.tryCatch2;
var tryCatch1 = util.tryCatch1;
var errorObj = util.errorObj;

function thrower(r) {
    throw r;
}

function Promise$_spreadAdapter(val, receiver) {
    if (!util.isArray(val)) return Promise$_successAdapter(val, receiver);
    var ret = util.tryCatchApply(this, [null].concat(val), receiver);
    if (ret === errorObj) {
        async.invokeLater(thrower, void 0, ret.e);
    }
}

function Promise$_successAdapter(val, receiver) {
    var nodeback = this;
    var ret = val === void 0
        ? tryCatch1(nodeback, receiver, null)
        : tryCatch2(nodeback, receiver, null, val);
    if (ret === errorObj) {
        async.invokeLater(thrower, void 0, ret.e);
    }
}
function Promise$_errorAdapter(reason, receiver) {
    var nodeback = this;
    var ret = tryCatch1(nodeback, receiver, reason);
    if (ret === errorObj) {
        async.invokeLater(thrower, void 0, ret.e);
    }
}

Promise.prototype.nodeify = function Promise$nodeify(nodeback, options) {
    if (typeof nodeback == "function") {
        var adapter = Promise$_successAdapter;
        if (options !== void 0 && Object(options).spread) {
            adapter = Promise$_spreadAdapter;
        }
        this._then(
            adapter,
            Promise$_errorAdapter,
            void 0,
            nodeback,
            this._boundTo
        );
    }
    return this;
};
};

},{"./async.js":21,"./util.js":54}],38:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray) {
var util = require("./util.js");
var async = require("./async.js");
var errors = require("./errors.js");
var tryCatch1 = util.tryCatch1;
var errorObj = util.errorObj;

Promise.prototype.progressed = function Promise$progressed(handler) {
    return this._then(void 0, void 0, handler, void 0, void 0);
};

Promise.prototype._progress = function Promise$_progress(progressValue) {
    if (this._isFollowingOrFulfilledOrRejected()) return;
    this._progressUnchecked(progressValue);

};

Promise.prototype._progressHandlerAt =
function Promise$_progressHandlerAt(index) {
    return index === 0
        ? this._progressHandler0
        : this[(index << 2) + index - 5 + 2];
};

Promise.prototype._doProgressWith =
function Promise$_doProgressWith(progression) {
    var progressValue = progression.value;
    var handler = progression.handler;
    var promise = progression.promise;
    var receiver = progression.receiver;

    var ret = tryCatch1(handler, receiver, progressValue);
    if (ret === errorObj) {
        if (ret.e != null &&
            ret.e.name !== "StopProgressPropagation") {
            var trace = errors.canAttach(ret.e)
                ? ret.e : new Error(ret.e + "");
            promise._attachExtraTrace(trace);
            promise._progress(ret.e);
        }
    } else if (ret instanceof Promise) {
        ret._then(promise._progress, null, null, promise, void 0);
    } else {
        promise._progress(ret);
    }
};


Promise.prototype._progressUnchecked =
function Promise$_progressUnchecked(progressValue) {
    if (!this.isPending()) return;
    var len = this._length();
    var progress = this._progress;
    for (var i = 0; i < len; i++) {
        var handler = this._progressHandlerAt(i);
        var promise = this._promiseAt(i);
        if (!(promise instanceof Promise)) {
            var receiver = this._receiverAt(i);
            if (typeof handler === "function") {
                handler.call(receiver, progressValue, promise);
            } else if (receiver instanceof Promise && receiver._isProxied()) {
                receiver._progressUnchecked(progressValue);
            } else if (receiver instanceof PromiseArray) {
                receiver._promiseProgressed(progressValue, promise);
            }
            continue;
        }

        if (typeof handler === "function") {
            async.invoke(this._doProgressWith, this, {
                handler: handler,
                promise: promise,
                receiver: this._receiverAt(i),
                value: progressValue
            });
        } else {
            async.invoke(progress, promise, progressValue);
        }
    }
};
};

},{"./async.js":21,"./errors.js":29,"./util.js":54}],39:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var old;
if (typeof Promise !== "undefined") old = Promise;
function noConflict(bluebird) {
    try { if (Promise === bluebird) Promise = old; }
    catch (e) {}
    return bluebird;
}
module.exports = function() {
var util = require("./util.js");
var async = require("./async.js");
var errors = require("./errors.js");

var INTERNAL = function(){};
var APPLY = {};
var NEXT_FILTER = {e: null};

var cast = require("./thenables.js")(Promise, INTERNAL);
var PromiseArray = require("./promise_array.js")(Promise, INTERNAL, cast);
var CapturedTrace = require("./captured_trace.js")();
var CatchFilter = require("./catch_filter.js")(NEXT_FILTER);
var PromiseResolver = require("./promise_resolver.js");

var isArray = util.isArray;

var errorObj = util.errorObj;
var tryCatch1 = util.tryCatch1;
var tryCatch2 = util.tryCatch2;
var tryCatchApply = util.tryCatchApply;
var RangeError = errors.RangeError;
var TypeError = errors.TypeError;
var CancellationError = errors.CancellationError;
var TimeoutError = errors.TimeoutError;
var OperationalError = errors.OperationalError;
var originatesFromRejection = errors.originatesFromRejection;
var markAsOriginatingFromRejection = errors.markAsOriginatingFromRejection;
var canAttach = errors.canAttach;
var thrower = util.thrower;
var apiRejection = require("./errors_api_rejection")(Promise);


var makeSelfResolutionError = function Promise$_makeSelfResolutionError() {
    return new TypeError("circular promise resolution chain");
};

function Promise(resolver) {
    if (typeof resolver !== "function") {
        throw new TypeError("the promise constructor requires a resolver function");
    }
    if (this.constructor !== Promise) {
        throw new TypeError("the promise constructor cannot be invoked directly");
    }
    this._bitField = 0;
    this._fulfillmentHandler0 = void 0;
    this._rejectionHandler0 = void 0;
    this._promise0 = void 0;
    this._receiver0 = void 0;
    this._settledValue = void 0;
    this._boundTo = void 0;
    if (resolver !== INTERNAL) this._resolveFromResolver(resolver);
}

Promise.prototype.bind = function Promise$bind(thisArg) {
    var ret = new Promise(INTERNAL);
    ret._follow(this);
    ret._propagateFrom(this, 2 | 1);
    ret._setBoundTo(thisArg);
    return ret;
};

Promise.prototype.toString = function Promise$toString() {
    return "[object Promise]";
};

Promise.prototype.caught = Promise.prototype["catch"] =
function Promise$catch(fn) {
    var len = arguments.length;
    if (len > 1) {
        var catchInstances = new Array(len - 1),
            j = 0, i;
        for (i = 0; i < len - 1; ++i) {
            var item = arguments[i];
            if (typeof item === "function") {
                catchInstances[j++] = item;
            } else {
                var catchFilterTypeError =
                    new TypeError(
                        "A catch filter must be an error constructor "
                        + "or a filter function");

                this._attachExtraTrace(catchFilterTypeError);
                async.invoke(this._reject, this, catchFilterTypeError);
                return;
            }
        }
        catchInstances.length = j;
        fn = arguments[i];

        this._resetTrace();
        var catchFilter = new CatchFilter(catchInstances, fn, this);
        return this._then(void 0, catchFilter.doFilter, void 0,
            catchFilter, void 0);
    }
    return this._then(void 0, fn, void 0, void 0, void 0);
};

Promise.prototype.then =
function Promise$then(didFulfill, didReject, didProgress) {
    return this._then(didFulfill, didReject, didProgress,
        void 0, void 0);
};


Promise.prototype.done =
function Promise$done(didFulfill, didReject, didProgress) {
    var promise = this._then(didFulfill, didReject, didProgress,
        void 0, void 0);
    promise._setIsFinal();
};

Promise.prototype.spread = function Promise$spread(didFulfill, didReject) {
    return this._then(didFulfill, didReject, void 0,
        APPLY, void 0);
};

Promise.prototype.isCancellable = function Promise$isCancellable() {
    return !this.isResolved() &&
        this._cancellable();
};

Promise.prototype.toJSON = function Promise$toJSON() {
    var ret = {
        isFulfilled: false,
        isRejected: false,
        fulfillmentValue: void 0,
        rejectionReason: void 0
    };
    if (this.isFulfilled()) {
        ret.fulfillmentValue = this._settledValue;
        ret.isFulfilled = true;
    } else if (this.isRejected()) {
        ret.rejectionReason = this._settledValue;
        ret.isRejected = true;
    }
    return ret;
};

Promise.prototype.all = function Promise$all() {
    return new PromiseArray(this).promise();
};


Promise.is = function Promise$Is(val) {
    return val instanceof Promise;
};

Promise.all = function Promise$All(promises) {
    return new PromiseArray(promises).promise();
};

Promise.prototype.error = function Promise$_error(fn) {
    return this.caught(originatesFromRejection, fn);
};

Promise.prototype._resolveFromSyncValue =
function Promise$_resolveFromSyncValue(value) {
    if (value === errorObj) {
        this._cleanValues();
        this._setRejected();
        this._settledValue = value.e;
        this._ensurePossibleRejectionHandled();
    } else {
        var maybePromise = cast(value, void 0);
        if (maybePromise instanceof Promise) {
            this._follow(maybePromise);
        } else {
            this._cleanValues();
            this._setFulfilled();
            this._settledValue = value;
        }
    }
};

Promise.method = function Promise$_Method(fn) {
    if (typeof fn !== "function") {
        throw new TypeError("fn must be a function");
    }
    return function Promise$_method() {
        var value;
        switch(arguments.length) {
        case 0: value = tryCatch1(fn, this, void 0); break;
        case 1: value = tryCatch1(fn, this, arguments[0]); break;
        case 2: value = tryCatch2(fn, this, arguments[0], arguments[1]); break;
        default:
            var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}
            value = tryCatchApply(fn, args, this); break;
        }
        var ret = new Promise(INTERNAL);
        ret._setTrace(void 0);
        ret._resolveFromSyncValue(value);
        return ret;
    };
};

Promise.attempt = Promise["try"] = function Promise$_Try(fn, args, ctx) {
    if (typeof fn !== "function") {
        return apiRejection("fn must be a function");
    }
    var value = isArray(args)
        ? tryCatchApply(fn, args, ctx)
        : tryCatch1(fn, ctx, args);

    var ret = new Promise(INTERNAL);
    ret._setTrace(void 0);
    ret._resolveFromSyncValue(value);
    return ret;
};

Promise.defer = Promise.pending = function Promise$Defer() {
    var promise = new Promise(INTERNAL);
    promise._setTrace(void 0);
    return new PromiseResolver(promise);
};

Promise.bind = function Promise$Bind(thisArg) {
    var ret = new Promise(INTERNAL);
    ret._setTrace(void 0);
    ret._setFulfilled();
    ret._setBoundTo(thisArg);
    return ret;
};

Promise.cast = function Promise$_Cast(obj) {
    var ret = cast(obj, void 0);
    if (!(ret instanceof Promise)) {
        var val = ret;
        ret = new Promise(INTERNAL);
        ret._setTrace(void 0);
        ret._setFulfilled();
        ret._cleanValues();
        ret._settledValue = val;
    }
    return ret;
};

Promise.resolve = Promise.fulfilled = Promise.cast;

Promise.reject = Promise.rejected = function Promise$Reject(reason) {
    var ret = new Promise(INTERNAL);
    ret._setTrace(void 0);
    markAsOriginatingFromRejection(reason);
    ret._cleanValues();
    ret._setRejected();
    ret._settledValue = reason;
    if (!canAttach(reason)) {
        var trace = new Error(reason + "");
        ret._setCarriedStackTrace(trace);
    }
    ret._ensurePossibleRejectionHandled();
    return ret;
};

Promise.onPossiblyUnhandledRejection =
function Promise$OnPossiblyUnhandledRejection(fn) {
        CapturedTrace.possiblyUnhandledRejection = typeof fn === "function"
                                                    ? fn : void 0;
};

var unhandledRejectionHandled;
Promise.onUnhandledRejectionHandled =
function Promise$onUnhandledRejectionHandled(fn) {
    unhandledRejectionHandled = typeof fn === "function" ? fn : void 0;
};

var debugging = false || !!(
    typeof process !== "undefined" &&
    typeof process.execPath === "string" &&
    typeof process.env === "object" &&
    (process.env["BLUEBIRD_DEBUG"] ||
        process.env["NODE_ENV"] === "development")
);


Promise.longStackTraces = function Promise$LongStackTraces() {
    if (async.haveItemsQueued() &&
        debugging === false
   ) {
        throw new Error("cannot enable long stack traces after promises have been created");
    }
    debugging = CapturedTrace.isSupported();
};

Promise.hasLongStackTraces = function Promise$HasLongStackTraces() {
    return debugging && CapturedTrace.isSupported();
};

Promise.prototype._then =
function Promise$_then(
    didFulfill,
    didReject,
    didProgress,
    receiver,
    internalData
) {
    var haveInternalData = internalData !== void 0;
    var ret = haveInternalData ? internalData : new Promise(INTERNAL);

    if (!haveInternalData) {
        if (debugging) {
            var haveSameContext = this._peekContext() === this._traceParent;
            ret._traceParent = haveSameContext ? this._traceParent : this;
        }
        ret._propagateFrom(this, 7);
    }

    var callbackIndex =
        this._addCallbacks(didFulfill, didReject, didProgress, ret, receiver);

    if (this.isResolved()) {
        async.invoke(this._queueSettleAt, this, callbackIndex);
    }

    return ret;
};

Promise.prototype._length = function Promise$_length() {
    return this._bitField & 262143;
};

Promise.prototype._isFollowingOrFulfilledOrRejected =
function Promise$_isFollowingOrFulfilledOrRejected() {
    return (this._bitField & 939524096) > 0;
};

Promise.prototype._isFollowing = function Promise$_isFollowing() {
    return (this._bitField & 536870912) === 536870912;
};

Promise.prototype._setLength = function Promise$_setLength(len) {
    this._bitField = (this._bitField & -262144) |
        (len & 262143);
};

Promise.prototype._setFulfilled = function Promise$_setFulfilled() {
    this._bitField = this._bitField | 268435456;
};

Promise.prototype._setRejected = function Promise$_setRejected() {
    this._bitField = this._bitField | 134217728;
};

Promise.prototype._setFollowing = function Promise$_setFollowing() {
    this._bitField = this._bitField | 536870912;
};

Promise.prototype._setIsFinal = function Promise$_setIsFinal() {
    this._bitField = this._bitField | 33554432;
};

Promise.prototype._isFinal = function Promise$_isFinal() {
    return (this._bitField & 33554432) > 0;
};

Promise.prototype._cancellable = function Promise$_cancellable() {
    return (this._bitField & 67108864) > 0;
};

Promise.prototype._setCancellable = function Promise$_setCancellable() {
    this._bitField = this._bitField | 67108864;
};

Promise.prototype._unsetCancellable = function Promise$_unsetCancellable() {
    this._bitField = this._bitField & (~67108864);
};

Promise.prototype._setRejectionIsUnhandled =
function Promise$_setRejectionIsUnhandled() {
    this._bitField = this._bitField | 2097152;
};

Promise.prototype._unsetRejectionIsUnhandled =
function Promise$_unsetRejectionIsUnhandled() {
    this._bitField = this._bitField & (~2097152);
    if (this._isUnhandledRejectionNotified()) {
        this._unsetUnhandledRejectionIsNotified();
        this._notifyUnhandledRejectionIsHandled();
    }
};

Promise.prototype._isRejectionUnhandled =
function Promise$_isRejectionUnhandled() {
    return (this._bitField & 2097152) > 0;
};

Promise.prototype._setUnhandledRejectionIsNotified =
function Promise$_setUnhandledRejectionIsNotified() {
    this._bitField = this._bitField | 524288;
};

Promise.prototype._unsetUnhandledRejectionIsNotified =
function Promise$_unsetUnhandledRejectionIsNotified() {
    this._bitField = this._bitField & (~524288);
};

Promise.prototype._isUnhandledRejectionNotified =
function Promise$_isUnhandledRejectionNotified() {
    return (this._bitField & 524288) > 0;
};

Promise.prototype._setCarriedStackTrace =
function Promise$_setCarriedStackTrace(capturedTrace) {
    this._bitField = this._bitField | 1048576;
    this._fulfillmentHandler0 = capturedTrace;
};

Promise.prototype._unsetCarriedStackTrace =
function Promise$_unsetCarriedStackTrace() {
    this._bitField = this._bitField & (~1048576);
    this._fulfillmentHandler0 = void 0;
};

Promise.prototype._isCarryingStackTrace =
function Promise$_isCarryingStackTrace() {
    return (this._bitField & 1048576) > 0;
};

Promise.prototype._getCarriedStackTrace =
function Promise$_getCarriedStackTrace() {
    return this._isCarryingStackTrace()
        ? this._fulfillmentHandler0
        : void 0;
};

Promise.prototype._receiverAt = function Promise$_receiverAt(index) {
    var ret = index === 0
        ? this._receiver0
        : this[(index << 2) + index - 5 + 4];
    if (this._isBound() && ret === void 0) {
        return this._boundTo;
    }
    return ret;
};

Promise.prototype._promiseAt = function Promise$_promiseAt(index) {
    return index === 0
        ? this._promise0
        : this[(index << 2) + index - 5 + 3];
};

Promise.prototype._fulfillmentHandlerAt =
function Promise$_fulfillmentHandlerAt(index) {
    return index === 0
        ? this._fulfillmentHandler0
        : this[(index << 2) + index - 5 + 0];
};

Promise.prototype._rejectionHandlerAt =
function Promise$_rejectionHandlerAt(index) {
    return index === 0
        ? this._rejectionHandler0
        : this[(index << 2) + index - 5 + 1];
};

Promise.prototype._addCallbacks = function Promise$_addCallbacks(
    fulfill,
    reject,
    progress,
    promise,
    receiver
) {
    var index = this._length();

    if (index >= 262143 - 5) {
        index = 0;
        this._setLength(0);
    }

    if (index === 0) {
        this._promise0 = promise;
        if (receiver !== void 0) this._receiver0 = receiver;
        if (typeof fulfill === "function" && !this._isCarryingStackTrace())
            this._fulfillmentHandler0 = fulfill;
        if (typeof reject === "function") this._rejectionHandler0 = reject;
        if (typeof progress === "function") this._progressHandler0 = progress;
    } else {
        var base = (index << 2) + index - 5;
        this[base + 3] = promise;
        this[base + 4] = receiver;
        this[base + 0] = typeof fulfill === "function"
                                            ? fulfill : void 0;
        this[base + 1] = typeof reject === "function"
                                            ? reject : void 0;
        this[base + 2] = typeof progress === "function"
                                            ? progress : void 0;
    }
    this._setLength(index + 1);
    return index;
};

Promise.prototype._setProxyHandlers =
function Promise$_setProxyHandlers(receiver, promiseSlotValue) {
    var index = this._length();

    if (index >= 262143 - 5) {
        index = 0;
        this._setLength(0);
    }
    if (index === 0) {
        this._promise0 = promiseSlotValue;
        this._receiver0 = receiver;
    } else {
        var base = (index << 2) + index - 5;
        this[base + 3] = promiseSlotValue;
        this[base + 4] = receiver;
        this[base + 0] =
        this[base + 1] =
        this[base + 2] = void 0;
    }
    this._setLength(index + 1);
};

Promise.prototype._proxyPromiseArray =
function Promise$_proxyPromiseArray(promiseArray, index) {
    this._setProxyHandlers(promiseArray, index);
};

Promise.prototype._proxyPromise = function Promise$_proxyPromise(promise) {
    promise._setProxied();
    this._setProxyHandlers(promise, -1);
};

Promise.prototype._setBoundTo = function Promise$_setBoundTo(obj) {
    if (obj !== void 0) {
        this._bitField = this._bitField | 8388608;
        this._boundTo = obj;
    } else {
        this._bitField = this._bitField & (~8388608);
    }
};

Promise.prototype._isBound = function Promise$_isBound() {
    return (this._bitField & 8388608) === 8388608;
};

Promise.prototype._resolveFromResolver =
function Promise$_resolveFromResolver(resolver) {
    var promise = this;
    this._setTrace(void 0);
    this._pushContext();

    function Promise$_resolver(val) {
        if (promise._tryFollow(val)) {
            return;
        }
        promise._fulfill(val);
    }
    function Promise$_rejecter(val) {
        var trace = canAttach(val) ? val : new Error(val + "");
        promise._attachExtraTrace(trace);
        markAsOriginatingFromRejection(val);
        promise._reject(val, trace === val ? void 0 : trace);
    }
    var r = tryCatch2(resolver, void 0, Promise$_resolver, Promise$_rejecter);
    this._popContext();

    if (r !== void 0 && r === errorObj) {
        var e = r.e;
        var trace = canAttach(e) ? e : new Error(e + "");
        promise._reject(e, trace);
    }
};

Promise.prototype._spreadSlowCase =
function Promise$_spreadSlowCase(targetFn, promise, values, boundTo) {
    var promiseForAll = new PromiseArray(values).promise();
    var promise2 = promiseForAll._then(function() {
        return targetFn.apply(boundTo, arguments);
    }, void 0, void 0, APPLY, void 0);
    promise._follow(promise2);
};

Promise.prototype._callSpread =
function Promise$_callSpread(handler, promise, value) {
    var boundTo = this._boundTo;
    if (isArray(value)) {
        for (var i = 0, len = value.length; i < len; ++i) {
            if (cast(value[i], void 0) instanceof Promise) {
                this._spreadSlowCase(handler, promise, value, boundTo);
                return;
            }
        }
    }
    promise._pushContext();
    return tryCatchApply(handler, value, boundTo);
};

Promise.prototype._callHandler =
function Promise$_callHandler(
    handler, receiver, promise, value) {
    var x;
    if (receiver === APPLY && !this.isRejected()) {
        x = this._callSpread(handler, promise, value);
    } else {
        promise._pushContext();
        x = tryCatch1(handler, receiver, value);
    }
    promise._popContext();
    return x;
};

Promise.prototype._settlePromiseFromHandler =
function Promise$_settlePromiseFromHandler(
    handler, receiver, value, promise
) {
    if (!(promise instanceof Promise)) {
        handler.call(receiver, value, promise);
        return;
    }
    var x = this._callHandler(handler, receiver, promise, value);
    if (promise._isFollowing()) return;

    if (x === errorObj || x === promise || x === NEXT_FILTER) {
        var err = x === promise
                    ? makeSelfResolutionError()
                    : x.e;
        var trace = canAttach(err) ? err : new Error(err + "");
        if (x !== NEXT_FILTER) promise._attachExtraTrace(trace);
        promise._rejectUnchecked(err, trace);
    } else {
        var castValue = cast(x, promise);
        if (castValue instanceof Promise) {
            if (castValue.isRejected() &&
                !castValue._isCarryingStackTrace() &&
                !canAttach(castValue._settledValue)) {
                var trace = new Error(castValue._settledValue + "");
                promise._attachExtraTrace(trace);
                castValue._setCarriedStackTrace(trace);
            }
            promise._follow(castValue);
            promise._propagateFrom(castValue, 1);
        } else {
            promise._fulfillUnchecked(x);
        }
    }
};

Promise.prototype._follow =
function Promise$_follow(promise) {
    this._setFollowing();

    if (promise.isPending()) {
        this._propagateFrom(promise, 1);
        promise._proxyPromise(this);
    } else if (promise.isFulfilled()) {
        this._fulfillUnchecked(promise._settledValue);
    } else {
        this._rejectUnchecked(promise._settledValue,
            promise._getCarriedStackTrace());
    }

    if (promise._isRejectionUnhandled()) promise._unsetRejectionIsUnhandled();

    if (debugging &&
        promise._traceParent == null) {
        promise._traceParent = this;
    }
};

Promise.prototype._tryFollow =
function Promise$_tryFollow(value) {
    if (this._isFollowingOrFulfilledOrRejected() ||
        value === this) {
        return false;
    }
    var maybePromise = cast(value, void 0);
    if (!(maybePromise instanceof Promise)) {
        return false;
    }
    this._follow(maybePromise);
    return true;
};

Promise.prototype._resetTrace = function Promise$_resetTrace() {
    if (debugging) {
        this._trace = new CapturedTrace(this._peekContext() === void 0);
    }
};

Promise.prototype._setTrace = function Promise$_setTrace(parent) {
    if (debugging) {
        var context = this._peekContext();
        this._traceParent = context;
        var isTopLevel = context === void 0;
        if (parent !== void 0 &&
            parent._traceParent === context) {
            this._trace = parent._trace;
        } else {
            this._trace = new CapturedTrace(isTopLevel);
        }
    }
    return this;
};

Promise.prototype._attachExtraTrace =
function Promise$_attachExtraTrace(error) {
    if (debugging) {
        var promise = this;
        var stack = error.stack;
        stack = typeof stack === "string" ? stack.split("\n") : [];
        CapturedTrace.protectErrorMessageNewlines(stack);
        var headerLineCount = 1;
        var combinedTraces = 1;
        while(promise != null &&
            promise._trace != null) {
            stack = CapturedTrace.combine(
                stack,
                promise._trace.stack.split("\n")
            );
            promise = promise._traceParent;
            combinedTraces++;
        }

        var stackTraceLimit = Error.stackTraceLimit || 10;
        var max = (stackTraceLimit + headerLineCount) * combinedTraces;
        var len = stack.length;
        if (len > max) {
            stack.length = max;
        }

        if (len > 0)
            stack[0] = stack[0].split("\u0002\u0000\u0001").join("\n");

        if (stack.length <= headerLineCount) {
            error.stack = "(No stack trace)";
        } else {
            error.stack = stack.join("\n");
        }
    }
};

Promise.prototype._cleanValues = function Promise$_cleanValues() {
    if (this._cancellable()) {
        this._cancellationParent = void 0;
    }
};

Promise.prototype._propagateFrom =
function Promise$_propagateFrom(parent, flags) {
    if ((flags & 1) > 0 && parent._cancellable()) {
        this._setCancellable();
        this._cancellationParent = parent;
    }
    if ((flags & 4) > 0) {
        this._setBoundTo(parent._boundTo);
    }
    if ((flags & 2) > 0) {
        this._setTrace(parent);
    }
};

Promise.prototype._fulfill = function Promise$_fulfill(value) {
    if (this._isFollowingOrFulfilledOrRejected()) return;
    this._fulfillUnchecked(value);
};

Promise.prototype._reject =
function Promise$_reject(reason, carriedStackTrace) {
    if (this._isFollowingOrFulfilledOrRejected()) return;
    this._rejectUnchecked(reason, carriedStackTrace);
};

Promise.prototype._settlePromiseAt = function Promise$_settlePromiseAt(index) {
    var handler = this.isFulfilled()
        ? this._fulfillmentHandlerAt(index)
        : this._rejectionHandlerAt(index);

    var value = this._settledValue;
    var receiver = this._receiverAt(index);
    var promise = this._promiseAt(index);

    if (typeof handler === "function") {
        this._settlePromiseFromHandler(handler, receiver, value, promise);
    } else {
        var done = false;
        var isFulfilled = this.isFulfilled();
        if (receiver !== void 0) {
            if (receiver instanceof Promise &&
                receiver._isProxied()) {
                receiver._unsetProxied();

                if (isFulfilled) receiver._fulfillUnchecked(value);
                else receiver._rejectUnchecked(value,
                    this._getCarriedStackTrace());
                done = true;
            } else if (receiver instanceof PromiseArray) {
                if (isFulfilled) receiver._promiseFulfilled(value, promise);
                else receiver._promiseRejected(value, promise);
                done = true;
            }
        }

        if (!done) {
            if (isFulfilled) promise._fulfill(value);
            else promise._reject(value, this._getCarriedStackTrace());
        }
    }

    if (index >= 256) {
        this._queueGC();
    }
};

Promise.prototype._isProxied = function Promise$_isProxied() {
    return (this._bitField & 4194304) === 4194304;
};

Promise.prototype._setProxied = function Promise$_setProxied() {
    this._bitField = this._bitField | 4194304;
};

Promise.prototype._unsetProxied = function Promise$_unsetProxied() {
    this._bitField = this._bitField & (~4194304);
};

Promise.prototype._isGcQueued = function Promise$_isGcQueued() {
    return (this._bitField & -1073741824) === -1073741824;
};

Promise.prototype._setGcQueued = function Promise$_setGcQueued() {
    this._bitField = this._bitField | -1073741824;
};

Promise.prototype._unsetGcQueued = function Promise$_unsetGcQueued() {
    this._bitField = this._bitField & (~-1073741824);
};

Promise.prototype._queueGC = function Promise$_queueGC() {
    if (this._isGcQueued()) return;
    this._setGcQueued();
    async.invokeLater(this._gc, this, void 0);
};

Promise.prototype._gc = function Promise$gc() {
    var len = this._length() * 5;
    for (var i = 0; i < len; i++) {
        delete this[i];
    }
    this._setLength(0);
    this._unsetGcQueued();
};

Promise.prototype._queueSettleAt = function Promise$_queueSettleAt(index) {
    if (this._isRejectionUnhandled()) this._unsetRejectionIsUnhandled();
    async.invoke(this._settlePromiseAt, this, index);
};

Promise.prototype._fulfillUnchecked =
function Promise$_fulfillUnchecked(value) {
    if (!this.isPending()) return;
    if (value === this) {
        var err = makeSelfResolutionError();
        this._attachExtraTrace(err);
        return this._rejectUnchecked(err, void 0);
    }
    this._cleanValues();
    this._setFulfilled();
    this._settledValue = value;
    var len = this._length();

    if (len > 0) {
        async.invoke(this._settlePromises, this, len);
    }
};

Promise.prototype._rejectUncheckedCheckError =
function Promise$_rejectUncheckedCheckError(reason) {
    var trace = canAttach(reason) ? reason : new Error(reason + "");
    this._rejectUnchecked(reason, trace === reason ? void 0 : trace);
};

Promise.prototype._rejectUnchecked =
function Promise$_rejectUnchecked(reason, trace) {
    if (!this.isPending()) return;
    if (reason === this) {
        var err = makeSelfResolutionError();
        this._attachExtraTrace(err);
        return this._rejectUnchecked(err);
    }
    this._cleanValues();
    this._setRejected();
    this._settledValue = reason;

    if (this._isFinal()) {
        async.invokeLater(thrower, void 0, trace === void 0 ? reason : trace);
        return;
    }
    var len = this._length();

    if (trace !== void 0) this._setCarriedStackTrace(trace);

    if (len > 0) {
        async.invoke(this._rejectPromises, this, null);
    } else {
        this._ensurePossibleRejectionHandled();
    }
};

Promise.prototype._rejectPromises = function Promise$_rejectPromises() {
    this._settlePromises();
    this._unsetCarriedStackTrace();
};

Promise.prototype._settlePromises = function Promise$_settlePromises() {
    var len = this._length();
    for (var i = 0; i < len; i++) {
        this._settlePromiseAt(i);
    }
};

Promise.prototype._ensurePossibleRejectionHandled =
function Promise$_ensurePossibleRejectionHandled() {
    this._setRejectionIsUnhandled();
    if (CapturedTrace.possiblyUnhandledRejection !== void 0) {
        async.invokeLater(this._notifyUnhandledRejection, this, void 0);
    }
};

Promise.prototype._notifyUnhandledRejectionIsHandled =
function Promise$_notifyUnhandledRejectionIsHandled() {
    if (typeof unhandledRejectionHandled === "function") {
        async.invokeLater(unhandledRejectionHandled, void 0, this);
    }
};

Promise.prototype._notifyUnhandledRejection =
function Promise$_notifyUnhandledRejection() {
    if (this._isRejectionUnhandled()) {
        var reason = this._settledValue;
        var trace = this._getCarriedStackTrace();

        this._setUnhandledRejectionIsNotified();

        if (trace !== void 0) {
            this._unsetCarriedStackTrace();
            reason = trace;
        }
        if (typeof CapturedTrace.possiblyUnhandledRejection === "function") {
            CapturedTrace.possiblyUnhandledRejection(reason, this);
        }
    }
};

var contextStack = [];
Promise.prototype._peekContext = function Promise$_peekContext() {
    var lastIndex = contextStack.length - 1;
    if (lastIndex >= 0) {
        return contextStack[lastIndex];
    }
    return void 0;

};

Promise.prototype._pushContext = function Promise$_pushContext() {
    if (!debugging) return;
    contextStack.push(this);
};

Promise.prototype._popContext = function Promise$_popContext() {
    if (!debugging) return;
    contextStack.pop();
};

Promise.noConflict = function Promise$NoConflict() {
    return noConflict(Promise);
};

Promise.setScheduler = function(fn) {
    if (typeof fn !== "function") throw new TypeError("fn must be a function");
    async._schedule = fn;
};

if (!CapturedTrace.isSupported()) {
    Promise.longStackTraces = function(){};
    debugging = false;
}

Promise._makeSelfResolutionError = makeSelfResolutionError;
require("./finally.js")(Promise, NEXT_FILTER, cast);
require("./direct_resolve.js")(Promise);
require("./synchronous_inspection.js")(Promise);
require("./join.js")(Promise, PromiseArray, cast, INTERNAL);
Promise.RangeError = RangeError;
Promise.CancellationError = CancellationError;
Promise.TimeoutError = TimeoutError;
Promise.TypeError = TypeError;
Promise.OperationalError = OperationalError;
Promise.RejectionError = OperationalError;
Promise.AggregateError = errors.AggregateError;

util.toFastProperties(Promise);
util.toFastProperties(Promise.prototype);
Promise.Promise = Promise;
require('./timers.js')(Promise,INTERNAL,cast);
require('./race.js')(Promise,INTERNAL,cast);
require('./call_get.js')(Promise);
require('./generators.js')(Promise,apiRejection,INTERNAL,cast);
require('./map.js')(Promise,PromiseArray,apiRejection,cast,INTERNAL);
require('./nodeify.js')(Promise);
require('./promisify.js')(Promise,INTERNAL);
require('./props.js')(Promise,PromiseArray,cast);
require('./reduce.js')(Promise,PromiseArray,apiRejection,cast,INTERNAL);
require('./settle.js')(Promise,PromiseArray);
require('./some.js')(Promise,PromiseArray,apiRejection);
require('./progress.js')(Promise,PromiseArray);
require('./cancel.js')(Promise,INTERNAL);
require('./filter.js')(Promise,INTERNAL);
require('./any.js')(Promise,PromiseArray);
require('./each.js')(Promise,INTERNAL);
require('./using.js')(Promise,apiRejection,cast);

Promise.prototype = Promise.prototype;
return Promise;

};

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./any.js":20,"./async.js":21,"./call_get.js":23,"./cancel.js":24,"./captured_trace.js":25,"./catch_filter.js":26,"./direct_resolve.js":27,"./each.js":28,"./errors.js":29,"./errors_api_rejection":30,"./filter.js":32,"./finally.js":33,"./generators.js":34,"./join.js":35,"./map.js":36,"./nodeify.js":37,"./progress.js":38,"./promise_array.js":40,"./promise_resolver.js":41,"./promisify.js":42,"./props.js":43,"./race.js":45,"./reduce.js":46,"./settle.js":48,"./some.js":49,"./synchronous_inspection.js":50,"./thenables.js":51,"./timers.js":52,"./using.js":53,"./util.js":54,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],40:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL, cast) {
var canAttach = require("./errors.js").canAttach;
var util = require("./util.js");
var isArray = util.isArray;

function toResolutionValue(val) {
    switch(val) {
    case -1: return void 0;
    case -2: return [];
    case -3: return {};
    }
}

function PromiseArray(values) {
    var promise = this._promise = new Promise(INTERNAL);
    var parent = void 0;
    if (values instanceof Promise) {
        parent = values;
        promise._propagateFrom(parent, 1 | 4);
    }
    promise._setTrace(parent);
    this._values = values;
    this._length = 0;
    this._totalResolved = 0;
    this._init(void 0, -2);
}
PromiseArray.prototype.length = function PromiseArray$length() {
    return this._length;
};

PromiseArray.prototype.promise = function PromiseArray$promise() {
    return this._promise;
};

PromiseArray.prototype._init =
function PromiseArray$_init(_, resolveValueIfEmpty) {
    var values = cast(this._values, void 0);
    if (values instanceof Promise) {
        this._values = values;
        values._setBoundTo(this._promise._boundTo);
        if (values.isFulfilled()) {
            values = values._settledValue;
            if (!isArray(values)) {
                var err = new Promise.TypeError("expecting an array, a promise or a thenable");
                this.__hardReject__(err);
                return;
            }
        } else if (values.isPending()) {
            values._then(
                PromiseArray$_init,
                this._reject,
                void 0,
                this,
                resolveValueIfEmpty
           );
            return;
        } else {
            values._unsetRejectionIsUnhandled();
            this._reject(values._settledValue);
            return;
        }
    } else if (!isArray(values)) {
        var err = new Promise.TypeError("expecting an array, a promise or a thenable");
        this.__hardReject__(err);
        return;
    }

    if (values.length === 0) {
        if (resolveValueIfEmpty === -5) {
            this._resolveEmptyArray();
        }
        else {
            this._resolve(toResolutionValue(resolveValueIfEmpty));
        }
        return;
    }
    var len = this.getActualLength(values.length);
    var newLen = len;
    var newValues = this.shouldCopyValues() ? new Array(len) : this._values;
    var isDirectScanNeeded = false;
    for (var i = 0; i < len; ++i) {
        var maybePromise = cast(values[i], void 0);
        if (maybePromise instanceof Promise) {
            if (maybePromise.isPending()) {
                maybePromise._proxyPromiseArray(this, i);
            } else {
                maybePromise._unsetRejectionIsUnhandled();
                isDirectScanNeeded = true;
            }
        } else {
            isDirectScanNeeded = true;
        }
        newValues[i] = maybePromise;
    }
    this._values = newValues;
    this._length = newLen;
    if (isDirectScanNeeded) {
        this._scanDirectValues(len);
    }
};

PromiseArray.prototype._settlePromiseAt =
function PromiseArray$_settlePromiseAt(index) {
    var value = this._values[index];
    if (!(value instanceof Promise)) {
        this._promiseFulfilled(value, index);
    } else if (value.isFulfilled()) {
        this._promiseFulfilled(value._settledValue, index);
    } else if (value.isRejected()) {
        this._promiseRejected(value._settledValue, index);
    }
};

PromiseArray.prototype._scanDirectValues =
function PromiseArray$_scanDirectValues(len) {
    for (var i = 0; i < len; ++i) {
        if (this._isResolved()) {
            break;
        }
        this._settlePromiseAt(i);
    }
};

PromiseArray.prototype._isResolved = function PromiseArray$_isResolved() {
    return this._values === null;
};

PromiseArray.prototype._resolve = function PromiseArray$_resolve(value) {
    this._values = null;
    this._promise._fulfill(value);
};

PromiseArray.prototype.__hardReject__ =
PromiseArray.prototype._reject = function PromiseArray$_reject(reason) {
    this._values = null;
    var trace = canAttach(reason) ? reason : new Error(reason + "");
    this._promise._attachExtraTrace(trace);
    this._promise._reject(reason, trace);
};

PromiseArray.prototype._promiseProgressed =
function PromiseArray$_promiseProgressed(progressValue, index) {
    if (this._isResolved()) return;
    this._promise._progress({
        index: index,
        value: progressValue
    });
};


PromiseArray.prototype._promiseFulfilled =
function PromiseArray$_promiseFulfilled(value, index) {
    if (this._isResolved()) return;
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
    }
};

PromiseArray.prototype._promiseRejected =
function PromiseArray$_promiseRejected(reason, index) {
    if (this._isResolved()) return;
    this._totalResolved++;
    this._reject(reason);
};

PromiseArray.prototype.shouldCopyValues =
function PromiseArray$_shouldCopyValues() {
    return true;
};

PromiseArray.prototype.getActualLength =
function PromiseArray$getActualLength(len) {
    return len;
};

return PromiseArray;
};

},{"./errors.js":29,"./util.js":54}],41:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var util = require("./util.js");
var maybeWrapAsError = util.maybeWrapAsError;
var errors = require("./errors.js");
var TimeoutError = errors.TimeoutError;
var OperationalError = errors.OperationalError;
var async = require("./async.js");
var haveGetters = util.haveGetters;
var es5 = require("./es5.js");

function isUntypedError(obj) {
    return obj instanceof Error &&
        es5.getPrototypeOf(obj) === Error.prototype;
}

function wrapAsOperationalError(obj) {
    var ret;
    if (isUntypedError(obj)) {
        ret = new OperationalError(obj);
    } else {
        ret = obj;
    }
    errors.markAsOriginatingFromRejection(ret);
    return ret;
}

function nodebackForPromise(promise) {
    function PromiseResolver$_callback(err, value) {
        if (promise === null) return;

        if (err) {
            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        } else if (arguments.length > 2) {
            var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}
            promise._fulfill(args);
        } else {
            promise._fulfill(value);
        }

        promise = null;
    }
    return PromiseResolver$_callback;
}


var PromiseResolver;
if (!haveGetters) {
    PromiseResolver = function PromiseResolver(promise) {
        this.promise = promise;
        this.asCallback = nodebackForPromise(promise);
        this.callback = this.asCallback;
    };
}
else {
    PromiseResolver = function PromiseResolver(promise) {
        this.promise = promise;
    };
}
if (haveGetters) {
    var prop = {
        get: function() {
            return nodebackForPromise(this.promise);
        }
    };
    es5.defineProperty(PromiseResolver.prototype, "asCallback", prop);
    es5.defineProperty(PromiseResolver.prototype, "callback", prop);
}

PromiseResolver._nodebackForPromise = nodebackForPromise;

PromiseResolver.prototype.toString = function PromiseResolver$toString() {
    return "[object PromiseResolver]";
};

PromiseResolver.prototype.resolve =
PromiseResolver.prototype.fulfill = function PromiseResolver$resolve(value) {
    if (!(this instanceof PromiseResolver)) {
        throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.");
    }

    var promise = this.promise;
    if (promise._tryFollow(value)) {
        return;
    }
    async.invoke(promise._fulfill, promise, value);
};

PromiseResolver.prototype.reject = function PromiseResolver$reject(reason) {
    if (!(this instanceof PromiseResolver)) {
        throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.");
    }

    var promise = this.promise;
    errors.markAsOriginatingFromRejection(reason);
    var trace = errors.canAttach(reason) ? reason : new Error(reason + "");
    promise._attachExtraTrace(trace);
    async.invoke(promise._reject, promise, reason);
    if (trace !== reason) {
        async.invoke(this._setCarriedStackTrace, this, trace);
    }
};

PromiseResolver.prototype.progress =
function PromiseResolver$progress(value) {
    if (!(this instanceof PromiseResolver)) {
        throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.");
    }
    async.invoke(this.promise._progress, this.promise, value);
};

PromiseResolver.prototype.cancel = function PromiseResolver$cancel() {
    async.invoke(this.promise.cancel, this.promise, void 0);
};

PromiseResolver.prototype.timeout = function PromiseResolver$timeout() {
    this.reject(new TimeoutError("timeout"));
};

PromiseResolver.prototype.isResolved = function PromiseResolver$isResolved() {
    return this.promise.isResolved();
};

PromiseResolver.prototype.toJSON = function PromiseResolver$toJSON() {
    return this.promise.toJSON();
};

PromiseResolver.prototype._setCarriedStackTrace =
function PromiseResolver$_setCarriedStackTrace(trace) {
    if (this.promise.isRejected()) {
        this.promise._setCarriedStackTrace(trace);
    }
};

module.exports = PromiseResolver;

},{"./async.js":21,"./errors.js":29,"./es5.js":31,"./util.js":54}],42:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var THIS = {};
var util = require("./util.js");
var nodebackForPromise = require("./promise_resolver.js")
    ._nodebackForPromise;
var withAppended = util.withAppended;
var maybeWrapAsError = util.maybeWrapAsError;
var canEvaluate = util.canEvaluate;
var TypeError = require("./errors").TypeError;
var defaultSuffix = "Async";
var defaultFilter = function(name, func) {
    return util.isIdentifier(name) &&
        name.charAt(0) !== "_" &&
        !util.isClass(func);
};
var defaultPromisified = {__isPromisified__: true};


function escapeIdentRegex(str) {
    return str.replace(/([$])/, "\\$");
}

function isPromisified(fn) {
    try {
        return fn.__isPromisified__ === true;
    }
    catch (e) {
        return false;
    }
}

function hasPromisified(obj, key, suffix) {
    var val = util.getDataPropertyOrDefault(obj, key + suffix,
                                            defaultPromisified);
    return val ? isPromisified(val) : false;
}
function checkValid(ret, suffix, suffixRegexp) {
    for (var i = 0; i < ret.length; i += 2) {
        var key = ret[i];
        if (suffixRegexp.test(key)) {
            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, "");
            for (var j = 0; j < ret.length; j += 2) {
                if (ret[j] === keyWithoutAsyncSuffix) {
                    throw new TypeError("Cannot promisify an API " +
                        "that has normal methods with '"+suffix+"'-suffix");
                }
            }
        }
    }
}

function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
    var keys = util.inheritedDataKeys(obj);
    var ret = [];
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var value = obj[key];
        if (typeof value === "function" &&
            !isPromisified(value) &&
            !hasPromisified(obj, key, suffix) &&
            filter(key, value, obj)) {
            ret.push(key, value);
        }
    }
    checkValid(ret, suffix, suffixRegexp);
    return ret;
}

function switchCaseArgumentOrder(likelyArgumentCount) {
    var ret = [likelyArgumentCount];
    var min = Math.max(0, likelyArgumentCount - 1 - 5);
    for(var i = likelyArgumentCount - 1; i >= min; --i) {
        if (i === likelyArgumentCount) continue;
        ret.push(i);
    }
    for(var i = likelyArgumentCount + 1; i <= 5; ++i) {
        ret.push(i);
    }
    return ret;
}

function argumentSequence(argumentCount) {
    return util.filledRange(argumentCount, "arguments[", "]");
}

function parameterDeclaration(parameterCount) {
    return util.filledRange(parameterCount, "_arg", "");
}

function parameterCount(fn) {
    if (typeof fn.length === "number") {
        return Math.max(Math.min(fn.length, 1023 + 1), 0);
    }
    return 0;
}

function generatePropertyAccess(key) {
    if (util.isIdentifier(key)) {
        return "." + key;
    }
    else return "['" + key.replace(/(['\\])/g, "\\$1") + "']";
}

function makeNodePromisifiedEval(callback, receiver, originalName, fn, suffix) {
    var newParameterCount = Math.max(0, parameterCount(fn) - 1);
    var argumentOrder = switchCaseArgumentOrder(newParameterCount);
    var callbackName =
        (typeof originalName === "string" && util.isIdentifier(originalName)
            ? originalName + suffix
            : "promisified");

    function generateCallForArgumentCount(count) {
        var args = argumentSequence(count).join(", ");
        var comma = count > 0 ? ", " : "";
        var ret;
        if (typeof callback === "string") {
            ret = "                                                          \n\
                this.method(args, fn);                                       \n\
                break;                                                       \n\
            ".replace(".method", generatePropertyAccess(callback));
        } else if (receiver === THIS) {
            ret =  "                                                         \n\
                callback.call(this, args, fn);                               \n\
                break;                                                       \n\
            ";
        } else if (receiver !== void 0) {
            ret =  "                                                         \n\
                callback.call(receiver, args, fn);                           \n\
                break;                                                       \n\
            ";
        } else {
            ret =  "                                                         \n\
                callback(args, fn);                                          \n\
                break;                                                       \n\
            ";
        }
        return ret.replace("args", args).replace(", ", comma);
    }

    function generateArgumentSwitchCase() {
        var ret = "";
        for(var i = 0; i < argumentOrder.length; ++i) {
            ret += "case " + argumentOrder[i] +":" +
                generateCallForArgumentCount(argumentOrder[i]);
        }
        var codeForCall;
        if (typeof callback === "string") {
            codeForCall = "                                                  \n\
                this.property.apply(this, args);                             \n\
            "
                .replace(".property", generatePropertyAccess(callback));
        } else if (receiver === THIS) {
            codeForCall = "                                                  \n\
                callback.apply(this, args);                                  \n\
            ";
        } else {
            codeForCall = "                                                  \n\
                callback.apply(receiver, args);                              \n\
            ";
        }

        ret += "                                                             \n\
        default:                                                             \n\
            var args = new Array(len + 1);                                   \n\
            var i = 0;                                                       \n\
            for (var i = 0; i < len; ++i) {                                  \n\
               args[i] = arguments[i];                                       \n\
            }                                                                \n\
            args[i] = fn;                                                    \n\
            [CodeForCall]                                                    \n\
            break;                                                           \n\
        ".replace("[CodeForCall]", codeForCall);
        return ret;
    }

    return new Function("Promise",
                        "callback",
                        "receiver",
                        "withAppended",
                        "maybeWrapAsError",
                        "nodebackForPromise",
                        "INTERNAL","                                         \n\
        var ret = function FunctionName(Parameters) {                        \n\
            'use strict';                                                    \n\
            var len = arguments.length;                                      \n\
            var promise = new Promise(INTERNAL);                             \n\
            promise._setTrace(void 0);                                       \n\
            var fn = nodebackForPromise(promise);                            \n\
            try {                                                            \n\
                switch(len) {                                                \n\
                    [CodeForSwitchCase]                                      \n\
                }                                                            \n\
            } catch (e) {                                                    \n\
                var wrapped = maybeWrapAsError(e);                           \n\
                promise._attachExtraTrace(wrapped);                          \n\
                promise._reject(wrapped);                                    \n\
            }                                                                \n\
            return promise;                                                  \n\
        };                                                                   \n\
        ret.__isPromisified__ = true;                                        \n\
        return ret;                                                          \n\
        "
        .replace("FunctionName", callbackName)
        .replace("Parameters", parameterDeclaration(newParameterCount))
        .replace("[CodeForSwitchCase]", generateArgumentSwitchCase()))(
            Promise,
            callback,
            receiver,
            withAppended,
            maybeWrapAsError,
            nodebackForPromise,
            INTERNAL
        );
}

function makeNodePromisifiedClosure(callback, receiver) {
    function promisified() {
        var _receiver = receiver;
        if (receiver === THIS) _receiver = this;
        if (typeof callback === "string") {
            callback = _receiver[callback];
        }
        var promise = new Promise(INTERNAL);
        promise._setTrace(void 0);
        var fn = nodebackForPromise(promise);
        try {
            callback.apply(_receiver, withAppended(arguments, fn));
        } catch(e) {
            var wrapped = maybeWrapAsError(e);
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        }
        return promise;
    }
    promisified.__isPromisified__ = true;
    return promisified;
}

var makeNodePromisified = canEvaluate
    ? makeNodePromisifiedEval
    : makeNodePromisifiedClosure;

function promisifyAll(obj, suffix, filter, promisifier) {
    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + "$");
    var methods =
        promisifiableMethods(obj, suffix, suffixRegexp, filter);

    for (var i = 0, len = methods.length; i < len; i+= 2) {
        var key = methods[i];
        var fn = methods[i+1];
        var promisifiedKey = key + suffix;
        obj[promisifiedKey] = promisifier === makeNodePromisified
                ? makeNodePromisified(key, THIS, key, fn, suffix)
                : promisifier(fn);
    }
    util.toFastProperties(obj);
    return obj;
}

function promisify(callback, receiver) {
    return makeNodePromisified(callback, receiver, void 0, callback);
}

Promise.promisify = function Promise$Promisify(fn, receiver) {
    if (typeof fn !== "function") {
        throw new TypeError("fn must be a function");
    }
    if (isPromisified(fn)) {
        return fn;
    }
    return promisify(fn, arguments.length < 2 ? THIS : receiver);
};

Promise.promisifyAll = function Promise$PromisifyAll(target, options) {
    if (typeof target !== "function" && typeof target !== "object") {
        throw new TypeError("the target of promisifyAll must be an object or a function");
    }
    options = Object(options);
    var suffix = options.suffix;
    if (typeof suffix !== "string") suffix = defaultSuffix;
    var filter = options.filter;
    if (typeof filter !== "function") filter = defaultFilter;
    var promisifier = options.promisifier;
    if (typeof promisifier !== "function") promisifier = makeNodePromisified;

    if (!util.isIdentifier(suffix)) {
        throw new RangeError("suffix must be a valid identifier");
    }

    var keys = util.inheritedDataKeys(target, {includeHidden: true});
    for (var i = 0; i < keys.length; ++i) {
        var value = target[keys[i]];
        if (keys[i] !== "constructor" &&
            util.isClass(value)) {
            promisifyAll(value.prototype, suffix, filter, promisifier);
            promisifyAll(value, suffix, filter, promisifier);
        }
    }

    return promisifyAll(target, suffix, filter, promisifier);
};
};


},{"./errors":29,"./promise_resolver.js":41,"./util.js":54}],43:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray, cast) {
var util = require("./util.js");
var apiRejection = require("./errors_api_rejection")(Promise);
var isObject = util.isObject;
var es5 = require("./es5.js");

function PropertiesPromiseArray(obj) {
    var keys = es5.keys(obj);
    var len = keys.length;
    var values = new Array(len * 2);
    for (var i = 0; i < len; ++i) {
        var key = keys[i];
        values[i] = obj[key];
        values[i + len] = key;
    }
    this.constructor$(values);
}
util.inherits(PropertiesPromiseArray, PromiseArray);

PropertiesPromiseArray.prototype._init =
function PropertiesPromiseArray$_init() {
    this._init$(void 0, -3) ;
};

PropertiesPromiseArray.prototype._promiseFulfilled =
function PropertiesPromiseArray$_promiseFulfilled(value, index) {
    if (this._isResolved()) return;
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        var val = {};
        var keyOffset = this.length();
        for (var i = 0, len = this.length(); i < len; ++i) {
            val[this._values[i + keyOffset]] = this._values[i];
        }
        this._resolve(val);
    }
};

PropertiesPromiseArray.prototype._promiseProgressed =
function PropertiesPromiseArray$_promiseProgressed(value, index) {
    if (this._isResolved()) return;

    this._promise._progress({
        key: this._values[index + this.length()],
        value: value
    });
};

PropertiesPromiseArray.prototype.shouldCopyValues =
function PropertiesPromiseArray$_shouldCopyValues() {
    return false;
};

PropertiesPromiseArray.prototype.getActualLength =
function PropertiesPromiseArray$getActualLength(len) {
    return len >> 1;
};

function Promise$_Props(promises) {
    var ret;
    var castValue = cast(promises, void 0);

    if (!isObject(castValue)) {
        return apiRejection("cannot await properties of a non-object");
    } else if (castValue instanceof Promise) {
        ret = castValue._then(Promise.props, void 0, void 0, void 0, void 0);
    } else {
        ret = new PropertiesPromiseArray(castValue).promise();
    }

    if (castValue instanceof Promise) {
        ret._propagateFrom(castValue, 4);
    }
    return ret;
}

Promise.prototype.props = function Promise$props() {
    return Promise$_Props(this);
};

Promise.props = function Promise$Props(promises) {
    return Promise$_Props(promises);
};
};

},{"./errors_api_rejection":30,"./es5.js":31,"./util.js":54}],44:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
function arrayCopy(src, srcIndex, dst, dstIndex, len) {
    for (var j = 0; j < len; ++j) {
        dst[j + dstIndex] = src[j + srcIndex];
    }
}

function Queue(capacity) {
    this._capacity = capacity;
    this._length = 0;
    this._front = 0;
    this._makeCapacity();
}

Queue.prototype._willBeOverCapacity =
function Queue$_willBeOverCapacity(size) {
    return this._capacity < size;
};

Queue.prototype._pushOne = function Queue$_pushOne(arg) {
    var length = this.length();
    this._checkCapacity(length + 1);
    var i = (this._front + length) & (this._capacity - 1);
    this[i] = arg;
    this._length = length + 1;
};

Queue.prototype.push = function Queue$push(fn, receiver, arg) {
    var length = this.length() + 3;
    if (this._willBeOverCapacity(length)) {
        this._pushOne(fn);
        this._pushOne(receiver);
        this._pushOne(arg);
        return;
    }
    var j = this._front + length - 3;
    this._checkCapacity(length);
    var wrapMask = this._capacity - 1;
    this[(j + 0) & wrapMask] = fn;
    this[(j + 1) & wrapMask] = receiver;
    this[(j + 2) & wrapMask] = arg;
    this._length = length;
};

Queue.prototype.shift = function Queue$shift() {
    var front = this._front,
        ret = this[front];

    this[front] = void 0;
    this._front = (front + 1) & (this._capacity - 1);
    this._length--;
    return ret;
};

Queue.prototype.length = function Queue$length() {
    return this._length;
};

Queue.prototype._makeCapacity = function Queue$_makeCapacity() {
    var len = this._capacity;
    for (var i = 0; i < len; ++i) {
        this[i] = void 0;
    }
};

Queue.prototype._checkCapacity = function Queue$_checkCapacity(size) {
    if (this._capacity < size) {
        this._resizeTo(this._capacity << 3);
    }
};

Queue.prototype._resizeTo = function Queue$_resizeTo(capacity) {
    var oldFront = this._front;
    var oldCapacity = this._capacity;
    var oldQueue = new Array(oldCapacity);
    var length = this.length();

    arrayCopy(this, 0, oldQueue, 0, oldCapacity);
    this._capacity = capacity;
    this._makeCapacity();
    this._front = 0;
    if (oldFront + length <= oldCapacity) {
        arrayCopy(oldQueue, oldFront, this, 0, length);
    } else {        var lengthBeforeWrapping =
            length - ((oldFront + length) & (oldCapacity - 1));

        arrayCopy(oldQueue, oldFront, this, 0, lengthBeforeWrapping);
        arrayCopy(oldQueue, 0, this, lengthBeforeWrapping,
                    length - lengthBeforeWrapping);
    }
};

module.exports = Queue;

},{}],45:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL, cast) {
var apiRejection = require("./errors_api_rejection.js")(Promise);
var isArray = require("./util.js").isArray;

var raceLater = function Promise$_raceLater(promise) {
    return promise.then(function(array) {
        return Promise$_Race(array, promise);
    });
};

var hasOwn = {}.hasOwnProperty;
function Promise$_Race(promises, parent) {
    var maybePromise = cast(promises, void 0);

    if (maybePromise instanceof Promise) {
        return raceLater(maybePromise);
    } else if (!isArray(promises)) {
        return apiRejection("expecting an array, a promise or a thenable");
    }

    var ret = new Promise(INTERNAL);
    if (parent !== void 0) {
        ret._propagateFrom(parent, 7);
    } else {
        ret._setTrace(void 0);
    }
    var fulfill = ret._fulfill;
    var reject = ret._reject;
    for (var i = 0, len = promises.length; i < len; ++i) {
        var val = promises[i];

        if (val === void 0 && !(hasOwn.call(promises, i))) {
            continue;
        }

        Promise.cast(val)._then(fulfill, reject, void 0, ret, null);
    }
    return ret;
}

Promise.race = function Promise$Race(promises) {
    return Promise$_Race(promises, void 0);
};

Promise.prototype.race = function Promise$race() {
    return Promise$_Race(this, void 0);
};

};

},{"./errors_api_rejection.js":30,"./util.js":54}],46:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray, apiRejection, cast, INTERNAL) {
var util = require("./util.js");
var tryCatch4 = util.tryCatch4;
var tryCatch3 = util.tryCatch3;
var errorObj = util.errorObj;
function ReductionPromiseArray(promises, fn, accum, _each) {
    this.constructor$(promises);
    this._preservedValues = _each === INTERNAL ? [] : null;
    this._zerothIsAccum = (accum === void 0);
    this._gotAccum = false;
    this._reducingIndex = (this._zerothIsAccum ? 1 : 0);
    this._valuesPhase = undefined;

    var maybePromise = cast(accum, void 0);
    var rejected = false;
    var isPromise = maybePromise instanceof Promise;
    if (isPromise) {
        if (maybePromise.isPending()) {
            maybePromise._proxyPromiseArray(this, -1);
        } else if (maybePromise.isFulfilled()) {
            accum = maybePromise.value();
            this._gotAccum = true;
        } else {
            maybePromise._unsetRejectionIsUnhandled();
            this._reject(maybePromise.reason());
            rejected = true;
        }
    }
    if (!(isPromise || this._zerothIsAccum)) this._gotAccum = true;
    this._callback = fn;
    this._accum = accum;
    if (!rejected) this._init$(void 0, -5);
}
util.inherits(ReductionPromiseArray, PromiseArray);

ReductionPromiseArray.prototype._init =
function ReductionPromiseArray$_init() {};

ReductionPromiseArray.prototype._resolveEmptyArray =
function ReductionPromiseArray$_resolveEmptyArray() {
    if (this._gotAccum || this._zerothIsAccum) {
        this._resolve(this._preservedValues !== null
                        ? [] : this._accum);
    }
};

ReductionPromiseArray.prototype._promiseFulfilled =
function ReductionPromiseArray$_promiseFulfilled(value, index) {
    var values = this._values;
    if (values === null) return;
    var length = this.length();
    var preservedValues = this._preservedValues;
    var isEach = preservedValues !== null;
    var gotAccum = this._gotAccum;
    var valuesPhase = this._valuesPhase;
    var valuesPhaseIndex;
    if (!valuesPhase) {
        valuesPhase = this._valuesPhase = Array(length);
        for (valuesPhaseIndex=0; valuesPhaseIndex<length; ++valuesPhaseIndex) {
            valuesPhase[valuesPhaseIndex] = 0;
        }
    }
    valuesPhaseIndex = valuesPhase[index];

    if (index === 0 && this._zerothIsAccum) {
        if (!gotAccum) {
            this._accum = value;
            this._gotAccum = gotAccum = true;
        }
        valuesPhase[index] = ((valuesPhaseIndex === 0)
            ? 1 : 2);
    } else if (index === -1) {
        if (!gotAccum) {
            this._accum = value;
            this._gotAccum = gotAccum = true;
        }
    } else {
        if (valuesPhaseIndex === 0) {
            valuesPhase[index] = 1;
        }
        else {
            valuesPhase[index] = 2;
            if (gotAccum) {
                this._accum = value;
            }
        }
    }
    if (!gotAccum) return;

    var callback = this._callback;
    var receiver = this._promise._boundTo;
    var ret;

    for (var i = this._reducingIndex; i < length; ++i) {
        valuesPhaseIndex = valuesPhase[i];
        if (valuesPhaseIndex === 2) {
            this._reducingIndex = i + 1;
            continue;
        }
        if (valuesPhaseIndex !== 1) return;

        value = values[i];
        if (value instanceof Promise) {
            if (value.isFulfilled()) {
                value = value._settledValue;
            } else if (value.isPending()) {
                return;
            } else {
                value._unsetRejectionIsUnhandled();
                return this._reject(value.reason());
            }
        }

        if (isEach) {
            preservedValues.push(value);
            ret = tryCatch3(callback, receiver, value, i, length);
        }
        else {
            ret = tryCatch4(callback, receiver, this._accum, value, i, length);
        }

        if (ret === errorObj) return this._reject(ret.e);

        var maybePromise = cast(ret, void 0);
        if (maybePromise instanceof Promise) {
            if (maybePromise.isPending()) {
                valuesPhase[i] = 4;
                return maybePromise._proxyPromiseArray(this, i);
            } else if (maybePromise.isFulfilled()) {
                ret = maybePromise.value();
            } else {
                maybePromise._unsetRejectionIsUnhandled();
                return this._reject(maybePromise.reason());
            }
        }

        this._reducingIndex = i + 1;
        this._accum = ret;
    }

    if (this._reducingIndex < length) return;
    this._resolve(isEach ? preservedValues : this._accum);
};

function reduce(promises, fn, initialValue, _each) {
    if (typeof fn !== "function") return apiRejection("fn must be a function");
    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
    return array.promise();
}

Promise.prototype.reduce = function Promise$reduce(fn, initialValue) {
    return reduce(this, fn, initialValue, null);
};

Promise.reduce = function Promise$Reduce(promises, fn, initialValue, _each) {
    return reduce(promises, fn, initialValue, _each);
};
};

},{"./util.js":54}],47:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var schedule;
var _MutationObserver;
if (typeof process === "object" && typeof process.version === "string") {
    schedule = function Promise$_Scheduler(fn) {
        process.nextTick(fn);
    };
}
else if ((typeof MutationObserver !== "undefined" &&
         (_MutationObserver = MutationObserver)) ||
         (typeof WebKitMutationObserver !== "undefined" &&
         (_MutationObserver = WebKitMutationObserver))) {
    schedule = (function() {
        var div = document.createElement("div");
        var queuedFn = void 0;
        var observer = new _MutationObserver(
            function Promise$_Scheduler() {
                var fn = queuedFn;
                queuedFn = void 0;
                fn();
            }
       );
        observer.observe(div, {
            attributes: true
        });
        return function Promise$_Scheduler(fn) {
            queuedFn = fn;
            div.setAttribute("class", "foo");
        };

    })();
}
else if (typeof setTimeout !== "undefined") {
    schedule = function Promise$_Scheduler(fn) {
        setTimeout(fn, 0);
    };
}
else throw new Error("no async scheduler available");
module.exports = schedule;

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],48:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports =
    function(Promise, PromiseArray) {
var PromiseInspection = Promise.PromiseInspection;
var util = require("./util.js");

function SettledPromiseArray(values) {
    this.constructor$(values);
}
util.inherits(SettledPromiseArray, PromiseArray);

SettledPromiseArray.prototype._promiseResolved =
function SettledPromiseArray$_promiseResolved(index, inspection) {
    this._values[index] = inspection;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
    }
};

SettledPromiseArray.prototype._promiseFulfilled =
function SettledPromiseArray$_promiseFulfilled(value, index) {
    if (this._isResolved()) return;
    var ret = new PromiseInspection();
    ret._bitField = 268435456;
    ret._settledValue = value;
    this._promiseResolved(index, ret);
};
SettledPromiseArray.prototype._promiseRejected =
function SettledPromiseArray$_promiseRejected(reason, index) {
    if (this._isResolved()) return;
    var ret = new PromiseInspection();
    ret._bitField = 134217728;
    ret._settledValue = reason;
    this._promiseResolved(index, ret);
};

Promise.settle = function Promise$Settle(promises) {
    return new SettledPromiseArray(promises).promise();
};

Promise.prototype.settle = function Promise$settle() {
    return new SettledPromiseArray(this).promise();
};
};

},{"./util.js":54}],49:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports =
function(Promise, PromiseArray, apiRejection) {
var util = require("./util.js");
var RangeError = require("./errors.js").RangeError;
var AggregateError = require("./errors.js").AggregateError;
var isArray = util.isArray;


function SomePromiseArray(values) {
    this.constructor$(values);
    this._howMany = 0;
    this._unwrap = false;
    this._initialized = false;
}
util.inherits(SomePromiseArray, PromiseArray);

SomePromiseArray.prototype._init = function SomePromiseArray$_init() {
    if (!this._initialized) {
        return;
    }
    if (this._howMany === 0) {
        this._resolve([]);
        return;
    }
    this._init$(void 0, -5);
    var isArrayResolved = isArray(this._values);
    if (!this._isResolved() &&
        isArrayResolved &&
        this._howMany > this._canPossiblyFulfill()) {
        this._reject(this._getRangeError(this.length()));
    }
};

SomePromiseArray.prototype.init = function SomePromiseArray$init() {
    this._initialized = true;
    this._init();
};

SomePromiseArray.prototype.setUnwrap = function SomePromiseArray$setUnwrap() {
    this._unwrap = true;
};

SomePromiseArray.prototype.howMany = function SomePromiseArray$howMany() {
    return this._howMany;
};

SomePromiseArray.prototype.setHowMany =
function SomePromiseArray$setHowMany(count) {
    if (this._isResolved()) return;
    this._howMany = count;
};

SomePromiseArray.prototype._promiseFulfilled =
function SomePromiseArray$_promiseFulfilled(value) {
    if (this._isResolved()) return;
    this._addFulfilled(value);
    if (this._fulfilled() === this.howMany()) {
        this._values.length = this.howMany();
        if (this.howMany() === 1 && this._unwrap) {
            this._resolve(this._values[0]);
        } else {
            this._resolve(this._values);
        }
    }

};
SomePromiseArray.prototype._promiseRejected =
function SomePromiseArray$_promiseRejected(reason) {
    if (this._isResolved()) return;
    this._addRejected(reason);
    if (this.howMany() > this._canPossiblyFulfill()) {
        var e = new AggregateError();
        for (var i = this.length(); i < this._values.length; ++i) {
            e.push(this._values[i]);
        }
        this._reject(e);
    }
};

SomePromiseArray.prototype._fulfilled = function SomePromiseArray$_fulfilled() {
    return this._totalResolved;
};

SomePromiseArray.prototype._rejected = function SomePromiseArray$_rejected() {
    return this._values.length - this.length();
};

SomePromiseArray.prototype._addRejected =
function SomePromiseArray$_addRejected(reason) {
    this._values.push(reason);
};

SomePromiseArray.prototype._addFulfilled =
function SomePromiseArray$_addFulfilled(value) {
    this._values[this._totalResolved++] = value;
};

SomePromiseArray.prototype._canPossiblyFulfill =
function SomePromiseArray$_canPossiblyFulfill() {
    return this.length() - this._rejected();
};

SomePromiseArray.prototype._getRangeError =
function SomePromiseArray$_getRangeError(count) {
    var message = "Input array must contain at least " +
            this._howMany + " items but contains only " + count + " items";
    return new RangeError(message);
};

SomePromiseArray.prototype._resolveEmptyArray =
function SomePromiseArray$_resolveEmptyArray() {
    this._reject(this._getRangeError(0));
};

function Promise$_Some(promises, howMany) {
    if ((howMany | 0) !== howMany || howMany < 0) {
        return apiRejection("expecting a positive integer");
    }
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    if (promise.isRejected()) {
        return promise;
    }
    ret.setHowMany(howMany);
    ret.init();
    return promise;
}

Promise.some = function Promise$Some(promises, howMany) {
    return Promise$_Some(promises, howMany);
};

Promise.prototype.some = function Promise$some(howMany) {
    return Promise$_Some(this, howMany);
};

Promise._SomePromiseArray = SomePromiseArray;
};

},{"./errors.js":29,"./util.js":54}],50:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
function PromiseInspection(promise) {
    if (promise !== void 0) {
        this._bitField = promise._bitField;
        this._settledValue = promise.isResolved()
            ? promise._settledValue
            : void 0;
    }
    else {
        this._bitField = 0;
        this._settledValue = void 0;
    }
}

PromiseInspection.prototype.isFulfilled =
Promise.prototype.isFulfilled = function Promise$isFulfilled() {
    return (this._bitField & 268435456) > 0;
};

PromiseInspection.prototype.isRejected =
Promise.prototype.isRejected = function Promise$isRejected() {
    return (this._bitField & 134217728) > 0;
};

PromiseInspection.prototype.isPending =
Promise.prototype.isPending = function Promise$isPending() {
    return (this._bitField & 402653184) === 0;
};

PromiseInspection.prototype.value =
Promise.prototype.value = function Promise$value() {
    if (!this.isFulfilled()) {
        throw new TypeError("cannot get fulfillment value of a non-fulfilled promise");
    }
    return this._settledValue;
};

PromiseInspection.prototype.error =
PromiseInspection.prototype.reason =
Promise.prototype.reason = function Promise$reason() {
    if (!this.isRejected()) {
        throw new TypeError("cannot get rejection reason of a non-rejected promise");
    }
    return this._settledValue;
};

PromiseInspection.prototype.isResolved =
Promise.prototype.isResolved = function Promise$isResolved() {
    return (this._bitField & 402653184) > 0;
};

Promise.PromiseInspection = PromiseInspection;
};

},{}],51:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var util = require("./util.js");
var canAttach = require("./errors.js").canAttach;
var errorObj = util.errorObj;
var isObject = util.isObject;

function getThen(obj) {
    try {
        return obj.then;
    }
    catch(e) {
        errorObj.e = e;
        return errorObj;
    }
}

function Promise$_Cast(obj, originalPromise) {
    if (isObject(obj)) {
        if (obj instanceof Promise) {
            return obj;
        }
        else if (isAnyBluebirdPromise(obj)) {
            var ret = new Promise(INTERNAL);
            ret._setTrace(void 0);
            obj._then(
                ret._fulfillUnchecked,
                ret._rejectUncheckedCheckError,
                ret._progressUnchecked,
                ret,
                null
            );
            ret._setFollowing();
            return ret;
        }
        var then = getThen(obj);
        if (then === errorObj) {
            if (originalPromise !== void 0 && canAttach(then.e)) {
                originalPromise._attachExtraTrace(then.e);
            }
            return Promise.reject(then.e);
        } else if (typeof then === "function") {
            return Promise$_doThenable(obj, then, originalPromise);
        }
    }
    return obj;
}

var hasProp = {}.hasOwnProperty;
function isAnyBluebirdPromise(obj) {
    return hasProp.call(obj, "_promise0");
}

function Promise$_doThenable(x, then, originalPromise) {
    var resolver = Promise.defer();
    var called = false;
    try {
        then.call(
            x,
            Promise$_resolveFromThenable,
            Promise$_rejectFromThenable,
            Promise$_progressFromThenable
        );
    } catch(e) {
        if (!called) {
            called = true;
            var trace = canAttach(e) ? e : new Error(e + "");
            if (originalPromise !== void 0) {
                originalPromise._attachExtraTrace(trace);
            }
            resolver.promise._reject(e, trace);
        }
    }
    return resolver.promise;

    function Promise$_resolveFromThenable(y) {
        if (called) return;
        called = true;

        if (x === y) {
            var e = Promise._makeSelfResolutionError();
            if (originalPromise !== void 0) {
                originalPromise._attachExtraTrace(e);
            }
            resolver.promise._reject(e, void 0);
            return;
        }
        resolver.resolve(y);
    }

    function Promise$_rejectFromThenable(r) {
        if (called) return;
        called = true;
        var trace = canAttach(r) ? r : new Error(r + "");
        if (originalPromise !== void 0) {
            originalPromise._attachExtraTrace(trace);
        }
        resolver.promise._reject(r, trace);
    }

    function Promise$_progressFromThenable(v) {
        if (called) return;
        var promise = resolver.promise;
        if (typeof promise._progress === "function") {
            promise._progress(v);
        }
    }
}

return Promise$_Cast;
};

},{"./errors.js":29,"./util.js":54}],52:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var _setTimeout = function(fn, ms) {
    var len = arguments.length;
    var arg0 = arguments[2];
    var arg1 = arguments[3];
    var arg2 = len >= 5 ? arguments[4] : void 0;
    setTimeout(function() {
        fn(arg0, arg1, arg2);
    }, ms);
};

module.exports = function(Promise, INTERNAL, cast) {
var util = require("./util.js");
var errors = require("./errors.js");
var apiRejection = require("./errors_api_rejection")(Promise);
var TimeoutError = Promise.TimeoutError;

var afterTimeout = function Promise$_afterTimeout(promise, message, ms) {
    if (!promise.isPending()) return;
    if (typeof message !== "string") {
        message = "operation timed out after" + " " + ms + " ms"
    }
    var err = new TimeoutError(message);
    errors.markAsOriginatingFromRejection(err);
    promise._attachExtraTrace(err);
    promise._cancel(err);
};

var afterDelay = function Promise$_afterDelay(value, promise) {
    promise._fulfill(value);
};

var delay = Promise.delay = function Promise$Delay(value, ms) {
    if (ms === void 0) {
        ms = value;
        value = void 0;
    }
    ms = +ms;
    var maybePromise = cast(value, void 0);
    var promise = new Promise(INTERNAL);

    if (maybePromise instanceof Promise) {
        promise._propagateFrom(maybePromise, 7);
        promise._follow(maybePromise);
        return promise.then(function(value) {
            return Promise.delay(value, ms);
        });
    } else {
        promise._setTrace(void 0);
        _setTimeout(afterDelay, ms, value, promise);
    }
    return promise;
};

Promise.prototype.delay = function Promise$delay(ms) {
    return delay(this, ms);
};

Promise.prototype.timeout = function Promise$timeout(ms, message) {
    ms = +ms;

    var ret = new Promise(INTERNAL);
    ret._propagateFrom(this, 7);
    ret._follow(this);
    _setTimeout(afterTimeout, ms, ret, message, ms);
    return ret.cancellable();
};

};

},{"./errors.js":29,"./errors_api_rejection":30,"./util.js":54}],53:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function (Promise, apiRejection, cast) {
    var TypeError = require("./errors.js").TypeError;
    var inherits = require("./util.js").inherits;
    var PromiseInspection = Promise.PromiseInspection;

    function inspectionMapper(inspections) {
        var len = inspections.length;
        for (var i = 0; i < len; ++i) {
            var inspection = inspections[i];
            if (inspection.isRejected()) {
                return Promise.reject(inspection.error());
            }
            inspections[i] = inspection.value();
        }
        return inspections;
    }

    function thrower(e) {
        setTimeout(function(){throw e;}, 0);
    }

    function dispose(resources, inspection) {
        var i = 0;
        var len = resources.length;
        var ret = Promise.defer();
        function iterator() {
            if (i >= len) return ret.resolve();
            var maybePromise = cast(resources[i++], void 0);
            if (maybePromise instanceof Promise &&
                maybePromise._isDisposable()) {
                try {
                    maybePromise = cast(maybePromise._getDisposer()
                                        .tryDispose(inspection), void 0);
                } catch (e) {
                    return thrower(e);
                }
                if (maybePromise instanceof Promise) {
                    return maybePromise._then(iterator, thrower,
                                              null, null, null);
                }
            }
            iterator();
        }
        iterator();
        return ret.promise;
    }

    function disposerSuccess(value) {
        var inspection = new PromiseInspection();
        inspection._settledValue = value;
        inspection._bitField = 268435456;
        return dispose(this, inspection).thenReturn(value);
    }

    function disposerFail(reason) {
        var inspection = new PromiseInspection();
        inspection._settledValue = reason;
        inspection._bitField = 134217728;
        return dispose(this, inspection).thenThrow(reason);
    }

    function Disposer(data, promise) {
        this._data = data;
        this._promise = promise;
    }

    Disposer.prototype.data = function Disposer$data() {
        return this._data;
    };

    Disposer.prototype.promise = function Disposer$promise() {
        return this._promise;
    };

    Disposer.prototype.resource = function Disposer$resource() {
        if (this.promise().isFulfilled()) {
            return this.promise().value();
        }
        return null;
    };

    Disposer.prototype.tryDispose = function(inspection) {
        var resource = this.resource();
        var ret = resource !== null
            ? this.doDispose(resource, inspection) : null;
        this._promise._unsetDisposable();
        this._data = this._promise = null;
        return ret;
    };

    function FunctionDisposer(fn, promise) {
        this.constructor$(fn, promise);
    }
    inherits(FunctionDisposer, Disposer);

    FunctionDisposer.prototype.doDispose = function (resource, inspection) {
        var fn = this.data();
        return fn.call(resource, resource, inspection);
    };

    Promise.using = function Promise$using() {
        var len = arguments.length;
        if (len < 2) return apiRejection(
                        "you must pass at least 2 arguments to Promise.using");
        var fn = arguments[len - 1];
        if (typeof fn !== "function") return apiRejection("fn must be a function");
        len--;
        var resources = new Array(len);
        for (var i = 0; i < len; ++i) {
            var resource = arguments[i];
            if (resource instanceof Disposer) {
                var disposer = resource;
                resource = resource.promise();
                resource._setDisposable(disposer);
            }
            resources[i] = resource;
        }

        return Promise.settle(resources)
            .then(inspectionMapper)
            .spread(fn)
            ._then(disposerSuccess, disposerFail, void 0, resources, void 0);
    };

    Promise.prototype._setDisposable =
    function Promise$_setDisposable(disposer) {
        this._bitField = this._bitField | 262144;
        this._disposer = disposer;
    };

    Promise.prototype._isDisposable = function Promise$_isDisposable() {
        return (this._bitField & 262144) > 0;
    };

    Promise.prototype._getDisposer = function Promise$_getDisposer() {
        return this._disposer;
    };

    Promise.prototype._unsetDisposable = function Promise$_unsetDisposable() {
        this._bitField = this._bitField & (~262144);
        this._disposer = void 0;
    };

    Promise.prototype.disposer = function Promise$disposer(fn) {
        if (typeof fn === "function") {
            return new FunctionDisposer(fn, this);
        }
        throw new TypeError();
    };

};

},{"./errors.js":29,"./util.js":54}],54:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var es5 = require("./es5.js");
var haveGetters = (function(){
    try {
        var o = {};
        es5.defineProperty(o, "f", {
            get: function () {
                return 3;
            }
        });
        return o.f === 3;
    }
    catch (e) {
        return false;
    }

})();
var canEvaluate = typeof navigator == "undefined";
var errorObj = {e: {}};
function tryCatch1(fn, receiver, arg) {
    try { return fn.call(receiver, arg); }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

function tryCatch2(fn, receiver, arg, arg2) {
    try { return fn.call(receiver, arg, arg2); }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

function tryCatch3(fn, receiver, arg, arg2, arg3) {
    try { return fn.call(receiver, arg, arg2, arg3); }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

function tryCatch4(fn, receiver, arg, arg2, arg3, arg4) {
    try { return fn.call(receiver, arg, arg2, arg3, arg4); }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

function tryCatchApply(fn, args, receiver) {
    try { return fn.apply(receiver, args); }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

var inherits = function(Child, Parent) {
    var hasProp = {}.hasOwnProperty;

    function T() {
        this.constructor = Child;
        this.constructor$ = Parent;
        for (var propertyName in Parent.prototype) {
            if (hasProp.call(Parent.prototype, propertyName) &&
                propertyName.charAt(propertyName.length-1) !== "$"
           ) {
                this[propertyName + "$"] = Parent.prototype[propertyName];
            }
        }
    }
    T.prototype = Parent.prototype;
    Child.prototype = new T();
    return Child.prototype;
};

function asString(val) {
    return typeof val === "string" ? val : ("" + val);
}

function isPrimitive(val) {
    return val == null || val === true || val === false ||
        typeof val === "string" || typeof val === "number";

}

function isObject(value) {
    return !isPrimitive(value);
}

function maybeWrapAsError(maybeError) {
    if (!isPrimitive(maybeError)) return maybeError;

    return new Error(asString(maybeError));
}

function withAppended(target, appendee) {
    var len = target.length;
    var ret = new Array(len + 1);
    var i;
    for (i = 0; i < len; ++i) {
        ret[i] = target[i];
    }
    ret[i] = appendee;
    return ret;
}

function getDataPropertyOrDefault(obj, key, defaultValue) {
    if (es5.isES5) {
        var desc = Object.getOwnPropertyDescriptor(obj, key);
        if (desc != null) {
            return desc.get == null && desc.set == null
                    ? desc.value
                    : defaultValue;
        }
    } else {
        return {}.hasOwnProperty.call(obj, key) ? obj[key] : void 0;
    }
}

function notEnumerableProp(obj, name, value) {
    if (isPrimitive(obj)) return obj;
    var descriptor = {
        value: value,
        configurable: true,
        enumerable: false,
        writable: true
    };
    es5.defineProperty(obj, name, descriptor);
    return obj;
}


var wrapsPrimitiveReceiver = (function() {
    return this !== "string";
}).call("string");

function thrower(r) {
    throw r;
}

var inheritedDataKeys = (function() {
    if (es5.isES5) {
        return function(obj, opts) {
            var ret = [];
            var visitedKeys = Object.create(null);
            var getKeys = Object(opts).includeHidden
                ? Object.getOwnPropertyNames
                : Object.keys;
            while (obj != null) {
                var keys;
                try {
                    keys = getKeys(obj);
                } catch (e) {
                    return ret;
                }
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (visitedKeys[key]) continue;
                    visitedKeys[key] = true;
                    var desc = Object.getOwnPropertyDescriptor(obj, key);
                    if (desc != null && desc.get == null && desc.set == null) {
                        ret.push(key);
                    }
                }
                obj = es5.getPrototypeOf(obj);
            }
            return ret;
        };
    } else {
        return function(obj) {
            var ret = [];
            /*jshint forin:false */
            for (var key in obj) {
                ret.push(key);
            }
            return ret;
        };
    }

})();

function isClass(fn) {
    try {
        if (typeof fn === "function") {
            var keys = es5.keys(fn.prototype);
            return keys.length > 0 &&
                   !(keys.length === 1 && keys[0] === "constructor");
        }
        return false;
    } catch (e) {
        return false;
    }
}

function toFastProperties(obj) {
    /*jshint -W027*/
    function f() {}
    f.prototype = obj;
    return f;
    eval(obj);
}

var rident = /^[a-z$_][a-z$_0-9]*$/i;
function isIdentifier(str) {
    return rident.test(str);
}

function filledRange(count, prefix, suffix) {
    var ret = new Array(count);
    for(var i = 0; i < count; ++i) {
        ret[i] = prefix + i + suffix;
    }
    return ret;
}

var ret = {
    isClass: isClass,
    isIdentifier: isIdentifier,
    inheritedDataKeys: inheritedDataKeys,
    getDataPropertyOrDefault: getDataPropertyOrDefault,
    thrower: thrower,
    isArray: es5.isArray,
    haveGetters: haveGetters,
    notEnumerableProp: notEnumerableProp,
    isPrimitive: isPrimitive,
    isObject: isObject,
    canEvaluate: canEvaluate,
    errorObj: errorObj,
    tryCatch1: tryCatch1,
    tryCatch2: tryCatch2,
    tryCatch3: tryCatch3,
    tryCatch4: tryCatch4,
    tryCatchApply: tryCatchApply,
    inherits: inherits,
    withAppended: withAppended,
    asString: asString,
    maybeWrapAsError: maybeWrapAsError,
    wrapsPrimitiveReceiver: wrapsPrimitiveReceiver,
    toFastProperties: toFastProperties,
    filledRange: filledRange
};

module.exports = ret;

},{"./es5.js":31}],55:[function(require,module,exports){
/**
 * Copyright (c) 2013 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
"use strict";
function Deque(capacity) {
    this._capacity = getCapacity(capacity);
    this._length = 0;
    this._front = 0;
    this._makeCapacity();
    if (isArray(capacity)) {
        var len = capacity.length;
        for (var i = 0; i < len; ++i) {
            this[i] = capacity[i];
        }
        this._length = len;
    }
}

Deque.prototype.toArray = function Deque$toArray() {
    var len = this._length;
    var ret = new Array(len);
    var front = this._front;
    var capacity = this._capacity;
    for (var j = 0; j < len; ++j) {
        ret[j] = this[(front + j) & (capacity - 1)];
    }
    return ret;
};

Deque.prototype.push = function Deque$push(item) {
    var argsLength = arguments.length;
    var length = this._length;
    if (argsLength > 1) {
        var capacity = this._capacity;
        if (length + argsLength > capacity) {
            for (var i = 0; i < argsLength; ++i) {
                this._checkCapacity(length + 1);
                var j = (this._front + length) & (this._capacity - 1);
                this[j] = arguments[i];
                length++;
                this._length = length;
            }
            return length;
        }
        else {
            var j = this._front;
            for (var i = 0; i < argsLength; ++i) {
                this[(j + length) & (capacity - 1)] = arguments[i];
                j++;
            }
            this._length = length + argsLength;
            return length + argsLength;
        }

    }

    if (argsLength === 0) return length;

    this._checkCapacity(length + 1);
    var i = (this._front + length) & (this._capacity - 1);
    this[i] = item;
    this._length = length + 1;
    return length + 1;
};

Deque.prototype.pop = function Deque$pop() {
    var length = this._length;
    if (length === 0) {
        return void 0;
    }
    var i = (this._front + length - 1) & (this._capacity - 1);
    var ret = this[i];
    this[i] = void 0;
    this._length = length - 1;
    return ret;
};

Deque.prototype.shift = function Deque$shift() {
    var length = this._length;
    if (length === 0) {
        return void 0;
    }
    var front = this._front;
    var ret = this[front];
    this[front] = void 0;
    this._front = (front + 1) & (this._capacity - 1);
    this._length = length - 1;
    return ret;
};

Deque.prototype.unshift = function Deque$unshift(item) {
    var length = this._length;
    var argsLength = arguments.length;


    if (argsLength > 1) {
        var capacity = this._capacity;
        if (length + argsLength > capacity) {
            for (var i = argsLength - 1; i >= 0; i--) {
                this._checkCapacity(length + 1);
                var capacity = this._capacity;
                var j = (((( this._front - 1 ) &
                    ( capacity - 1) ) ^ capacity ) - capacity );
                this[j] = arguments[i];
                length++;
                this._length = length;
                this._front = j;
            }
            return length;
        }
        else {
            var front = this._front;
            for (var i = argsLength - 1; i >= 0; i--) {
                var j = (((( front - 1 ) &
                    ( capacity - 1) ) ^ capacity ) - capacity );
                this[j] = arguments[i];
                front = j;
            }
            this._front = front;
            this._length = length + argsLength;
            return length + argsLength;
        }
    }

    if (argsLength === 0) return length;

    this._checkCapacity(length + 1);
    var capacity = this._capacity;
    var i = (((( this._front - 1 ) &
        ( capacity - 1) ) ^ capacity ) - capacity );
    this[i] = item;
    this._length = length + 1;
    this._front = i;
    return length + 1;
};

Deque.prototype.peekBack = function Deque$peekBack() {
    var length = this._length;
    if (length === 0) {
        return void 0;
    }
    var index = (this._front + length - 1) & (this._capacity - 1);
    return this[index];
};

Deque.prototype.peekFront = function Deque$peekFront() {
    if (this._length === 0) {
        return void 0;
    }
    return this[this._front];
};

Deque.prototype.get = function Deque$get(index) {
    var i = index;
    if ((i !== (i | 0))) {
        return void 0;
    }
    var len = this._length;
    if (i < 0) {
        i = i + len;
    }
    if (i < 0 || i >= len) {
        return void 0;
    }
    return this[(this._front + i) & (this._capacity - 1)];
};

Deque.prototype.isEmpty = function Deque$isEmpty() {
    return this._length === 0;
};

Deque.prototype.clear = function Deque$clear() {
    this._length = 0;
    this._front = 0;
    this._makeCapacity();
};

Deque.prototype.toString = function Deque$toString() {
    return this.toArray().toString();
};

Deque.prototype.valueOf = Deque.prototype.toString;
Deque.prototype.removeFront = Deque.prototype.shift;
Deque.prototype.removeBack = Deque.prototype.pop;
Deque.prototype.insertFront = Deque.prototype.unshift;
Deque.prototype.insertBack = Deque.prototype.push;
Deque.prototype.enqueue = Deque.prototype.push;
Deque.prototype.dequeue = Deque.prototype.shift;
Deque.prototype.toJSON = Deque.prototype.toArray;

Object.defineProperty(Deque.prototype, "length", {
    get: function() {
        return this._length;
    },
    set: function() {
        throw new RangeError("");
    }
});

Deque.prototype._makeCapacity = function Deque$_makeCapacity() {
    var len = this._capacity;
    for (var i = 0; i < len; ++i) {
        this[i] = void 0;
    }
};

Deque.prototype._checkCapacity = function Deque$_checkCapacity(size) {
    if (this._capacity < size) {
        this._resizeTo(getCapacity(this._capacity * 1.5 + 16));
    }
};

Deque.prototype._resizeTo = function Deque$_resizeTo(capacity) {
    var oldFront = this._front;
    var oldCapacity = this._capacity;
    var oldDeque = new Array(oldCapacity);
    var length = this._length;

    arrayCopy(this, 0, oldDeque, 0, oldCapacity);
    this._capacity = capacity;
    this._makeCapacity();
    this._front = 0;
    if (oldFront + length <= oldCapacity) {
        arrayCopy(oldDeque, oldFront, this, 0, length);
    } else {        var lengthBeforeWrapping =
            length - ((oldFront + length) & (oldCapacity - 1));

        arrayCopy(oldDeque, oldFront, this, 0, lengthBeforeWrapping);
        arrayCopy(oldDeque, 0, this, lengthBeforeWrapping,
            length - lengthBeforeWrapping);
    }
};


var isArray = Array.isArray;

function arrayCopy(src, srcIndex, dst, dstIndex, len) {
    for (var j = 0; j < len; ++j) {
        dst[j + dstIndex] = src[j + srcIndex];
    }
}

function pow2AtLeast(n) {
    n = n >>> 0;
    n = n - 1;
    n = n | (n >> 1);
    n = n | (n >> 2);
    n = n | (n >> 4);
    n = n | (n >> 8);
    n = n | (n >> 16);
    return n + 1;
}

function getCapacity(capacity) {
    if (typeof capacity !== "number") {
        if (isArray(capacity)) {
            capacity = capacity.length;
        }
        else {
            return 16;
        }
    }
    return pow2AtLeast(
        Math.min(
            Math.max(16, capacity), 1073741824)
    );
}

module.exports = Deque;

},{}],56:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],57:[function(require,module,exports){
// Knex.js  0.6.22
// --------------

//     (c) 2014 Tim Griesser
//     Knex may be freely distributed under the MIT license.
//     For details and documentation:
//     http://knexjs.org

// The "Knex" object we're exporting is just a passthrough to `Knex.initialize`.
function Knex() {
  return Knex.initialize.apply(null, arguments);
}

// Run a "raw" query, though we can't do anything with it other than put
// it in a query statement.
Knex.raw = function(sql, bindings) {
  return new Raw(sql, bindings);
};

// Require the main constructors necessary for a `Knex` instance,
// each of which are injected with the current instance, so they maintain
// the correct client reference & grammar.
var Raw = require('./lib/raw');

// Doing it this way makes it easier to build for browserify.
var mysql = function() { return require('./lib/dialects/mysql'); };
var mysql2 = function() { return require('./lib/dialects/mysql2'); };
var maria = function() { return require('./lib/dialects/maria'); };
var pg = function() { return require('./lib/dialects/postgres'); };
var sqlite3 = function() { return require('./lib/dialects/sqlite3'); };
var websql = function() { return require('./lib/dialects/websql'); };

// The client names we'll allow in the `{name: lib}` pairing.
var Clients = Knex.Clients = {
  'mysql'      : mysql,
  'mysql2'     : mysql2,
  'maria'      : maria,
  'mariadb'    : maria,
  'mariasql'   : maria,
  'pg'         : pg,
  'postgres'   : pg,
  'postgresql' : pg,
  'sqlite'     : sqlite3,
  'sqlite3'    : sqlite3,
  'websql'     : websql
};

// Require lodash.
var _ = require('lodash');
var Promise = require('./lib/promise');

// Each of the methods which may be statically chained from knex.
var QueryInterface   = require('./lib/query/methods');
var SchemaInterface  = require('./lib/schema/methods');
var MigrateInterface = require('./lib/migrate/methods');

// Create a new "knex" instance with the appropriate configured client.
Knex.initialize = function(config) {
  var Dialect, client;
  var EventEmitter = require('events').EventEmitter;

  // The object we're potentially using to kick off an
  // initial chain. It is assumed that `knex` isn't a
  // constructor, so we have no reference to 'this' just
  // in case it's called with `new`.
  function knex(tableName) {
    var qb = new client.QueryBuilder;
    if (config.__transactor__) qb.transacting(config.__transactor__);
    return tableName ? qb.table(tableName) : qb;
  }

  // Hook up the "knex" object as an EventEmitter.
  var ee = new EventEmitter();
  for (var key in ee) {
    knex[key] = ee[key];
  }

  // The `__knex__` is used if you need to duck-type check whether this
  // is a knex builder, without a full on `instanceof` check.
  knex.VERSION = knex.__knex__  = '0.6.21';
  knex.raw = function(sql, bindings) {
    var raw = new client.Raw(sql, bindings);
    if (config.__transactor__) raw.transacting(config.__transactor__);
    return raw;
  };

  // Runs a new transaction, taking a container and returning a promise
  // for when the transaction is resolved.
  knex.transaction = function(container) {
    return new client.Transaction(container);
  };

  // Convenience method for tearing down the pool.
  knex.destroy = function (callback) {
    var pool = this.client.pool;
    var promise = new Promise(function(resolver, rejecter) {
      if (!pool) resolver();
      pool.destroy(function(err) {
        if (err) return rejecter(err);
        resolver();
      });
    });
    // Allow either a callback or promise interface for destruction.
    if (_.isFunction(callback)) {
      promise.exec(callback);
    } else {
      return promise;
    }
  };

  if (config.__client__) {
    client = config.__client__;
  } else {
    
    // Build the "client"
    var clientName = config.client || config.dialect;
    if (!Clients[clientName]) {
      throw new Error(clientName + ' is not a valid Knex client, did you misspell it?');
    }
    knex.toString = function() {
      return '[object Knex:' + clientName + ']';
    };
    Dialect = Clients[clientName]();
    client  = new Dialect(config);

    // Passthrough all "start" and "query" events to the knex object.
    client.on('start', function(obj) {
      knex.emit('start', obj);
    });
    client.on('query', function(obj) {
      knex.emit('query', obj);
    });
  }

  // Allow chaining methods from the root object, before
  // any other information is specified.
  _.each(QueryInterface, function(method) {
    knex[method] = function() {
      var builder = knex();
      return builder[method].apply(builder, arguments);
    };
  });
  knex.client = client;

  // Namespaces for additional library components.
  var schema  = knex.schema  = {};
  var migrate = knex.migrate = {};

  // Attach each of the `Schema` "interface" methods directly onto to `knex.schema` namespace, e.g.:
  // `knex.schema.table('tableName', function() {...`
  // `knex.schema.createTable('tableName', function() {...`
  // `knex.schema.dropTableIfExists('tableName');`
  _.each(SchemaInterface, function(key) {
    schema[key] = function() {
      if (!client.SchemaBuilder) client.initSchema();
      var builder = new client.SchemaBuilder();
      if (config.__transactor__) builder.transacting(config.__transactor__);
      return builder[key].apply(builder, arguments);
    };
  });

  // Attach each of the `Migrator` "interface" methods directly onto to `knex.migrate` namespace, e.g.:
  // knex.migrate.latest().then(...
  // knex.migrate.currentVersion(...
  _.each(MigrateInterface, function(method) {
    migrate[method] = function() {
      if (!client.Migrator) client.initMigrator();
      var migrator = new client.Migrator(knex);
      return migrator[method].apply(migrator, arguments);
    };
  });

  // Add a few additional misc utils.
  knex.utils = _.extend({}, require('./lib/utils'));

  return knex;
};

module.exports = Knex;

},{"./lib/dialects/maria":170,"./lib/dialects/mysql":170,"./lib/dialects/mysql2":170,"./lib/dialects/postgres":170,"./lib/dialects/sqlite3":170,"./lib/dialects/websql":73,"./lib/migrate/methods":79,"./lib/promise":81,"./lib/query/methods":85,"./lib/raw":86,"./lib/schema/methods":93,"./lib/utils":97,"events":174,"lodash":135}],58:[function(require,module,exports){
// "Base Client"
// ------
var Promise    = require('./promise');
var _          = require('lodash');
var inherits   = require('inherits');
var EventEmitter = require('events').EventEmitter;

// The base client provides the general structure
// for a dialect specific client object. The client
// object attaches fresh constructors for each component
// of the library.
function Client(config) {
  this.initFormatter();
  this.initRaw();
  this.initTransaction();
  this.initQuery();
  this.migrationConfig = _.clone(config && config.migrations);
}
inherits(Client, EventEmitter);

// Set the "isDebugging" flag on the client to "true" to log
// all queries run by the client.
Client.prototype.isDebugging = false;

// Acquire a connection from the pool.
Client.prototype.acquireConnection = function() {
  var pool = this.pool;
  return new Promise(function(resolver, rejecter) {
    if (!pool) return rejecter(new Error('There is no pool defined on the current client'));
    pool.acquire(function(err, connection) {
      if (err) return rejecter(err);
      resolver(connection);
    });
  });
};

// Releases a connection from the connection pool,
// returning a promise resolved when the connection is released.
Client.prototype.releaseConnection = function(connection) {
  var pool = this.pool;
  return new Promise(function(resolver, rejecter) {
    pool.release(connection, function(err) {
      if (err) return rejecter(err);
      resolver(connection);
    });
  });
};

// Return the database being used by this client.
Client.prototype.database = function() {
  return this.connectionSettings.database;
};

module.exports = Client;
},{"./promise":81,"events":174,"inherits":56,"lodash":135}],59:[function(require,module,exports){
(function (Buffer){
var SqlString = exports;

SqlString.escapeId = function (val, forbidQualified) {
  if (Array.isArray(val)) {
    return val.map(function(v) {
      return SqlString.escapeId(v, forbidQualified);
    }).join(', ');
  }

  if (forbidQualified) {
    return '`' + val.replace(/`/g, '``') + '`';
  }
  return '`' + val.replace(/`/g, '``').replace(/\./g, '`.`') + '`';
};

SqlString.escape = function(val, stringifyObjects, timeZone) {
  if (val === undefined || val === null) {
    return 'NULL';
  }

  switch (typeof val) {
    case 'boolean': return (val) ? 'true' : 'false';
    case 'number': return val+'';
  }

  if (val instanceof Date) {
    val = SqlString.dateToString(val, timeZone || 'local');
  }

  if (Buffer.isBuffer(val)) {
    return SqlString.bufferToString(val);
  }

  if (Array.isArray(val)) {
    return SqlString.arrayToList(val, timeZone);
  }

  if (typeof val === 'object') {
    if (stringifyObjects) {
      val = val.toString();
    } else {
      return SqlString.objectToValues(val, timeZone);
    }
  }

  val = val.replace(/[\0\n\r\b\t\\\'\"\x1a]/g, function(s) {
    switch(s) {
      case "\0": return "\\0";
      case "\n": return "\\n";
      case "\r": return "\\r";
      case "\b": return "\\b";
      case "\t": return "\\t";
      case "\x1a": return "\\Z";
      default: return "\\"+s;
    }
  });
  return "'"+val+"'";
};

SqlString.arrayToList = function(array, timeZone) {
  return array.map(function(v) {
    if (Array.isArray(v)) return '(' + SqlString.arrayToList(v, timeZone) + ')';
    return SqlString.escape(v, true, timeZone);
  }).join(', ');
};

SqlString.format = function(sql, values, stringifyObjects, timeZone) {
  values = values == null ? [] : [].concat(values);

  return sql.replace(/\?\??/g, function(match) {
    if (!values.length) {
      return match;
    }

    if (match == "??") {
      return SqlString.escapeId(values.shift());
    }
    return SqlString.escape(values.shift(), stringifyObjects, timeZone);
  });
};

SqlString.dateToString = function(date, timeZone) {
  var dt = new Date(date);

  if (timeZone != 'local') {
    var tz = convertTimezone(timeZone);

    dt.setTime(dt.getTime() + (dt.getTimezoneOffset() * 60000));
    if (tz !== false) {
      dt.setTime(dt.getTime() + (tz * 60000));
    }
  }

  var year   = dt.getFullYear();
  var month  = zeroPad(dt.getMonth() + 1, 2);
  var day    = zeroPad(dt.getDate(), 2);
  var hour   = zeroPad(dt.getHours(), 2);
  var minute = zeroPad(dt.getMinutes(), 2);
  var second = zeroPad(dt.getSeconds(), 2);
  var millisecond = zeroPad(dt.getMilliseconds(), 3);

  return year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second + '.' + millisecond;
};

SqlString.bufferToString = function(buffer) {
  var hex = '';
  try {
    hex = buffer.toString('hex');
  } catch (err) {
    // node v0.4.x does not support hex / throws unknown encoding error
    for (var i = 0; i < buffer.length; i++) {
      var byte = buffer[i];
      hex += zeroPad(byte.toString(16));
    }
  }

  return "X'" + hex+ "'";
};

SqlString.objectToValues = function(object, timeZone) {
  var values = [];
  for (var key in object) {
    var value = object[key];
    if(typeof value === 'function') {
      continue;
    }

    values.push(this.escapeId(key) + ' = ' + SqlString.escape(value, true, timeZone));
  }

  return values.join(', ');
};

function zeroPad(number, length) {
  number = number.toString();
  while (number.length < length) {
    number = '0' + number;
  }

  return number;
}

function convertTimezone(tz) {
  if (tz == "Z") return 0;

  var m = tz.match(/([\+\-\s])(\d\d):?(\d\d)?/);
  if (m) {
    return (m[1] == '-' ? -1 : 1) * (parseInt(m[2], 10) + ((m[3] ? parseInt(m[3], 10) : 0) / 60)) * 60;
  }
  return false;
}
}).call(this,require("buffer").Buffer)
},{"buffer":171}],60:[function(require,module,exports){
// SQLite3 Formatter
// -------
module.exports = function(client) {

var Formatter = require('../../formatter');
var inherits  = require('inherits');

// The "formatter" is used to ensure all output is properly
// escaped & parameterized.
function Formatter_SQLite3() {
  this.client = client;
  Formatter.apply(this, arguments);
}
inherits(Formatter_SQLite3, Formatter);

Formatter_SQLite3.prototype.operators = [
  '=', '<', '>', '<=', '>=', '<>', '!=',
  'like', 'not like', 'between', 'ilike',
  '&', '|', '<<', '>>'
];

// Wraps a value (column, tableName) with the correct ticks.
Formatter_SQLite3.prototype.wrapValue = function(value) {
  return (value !== '*' ? '"' + value + '"' : '*');
};

// Memoize the calls to "wrap" for a little extra perf.
var wrapperMemo = (function(){
  var memo = Object.create(null);
  return function(key) {
    if (memo[key] === void 0) {
      memo[key] = this._wrapString(key);
    }
    return memo[key];
  };
}());

Formatter_SQLite3.prototype._wrap = wrapperMemo;

// Assign the formatter to the the client.
client.Formatter = Formatter_SQLite3;

};
},{"../../formatter":75,"inherits":56}],61:[function(require,module,exports){
// SQLite3
// -------

var inherits = require('inherits');

var Client  = require('../../client');
var Promise = require('../../promise');

function Client_SQLite3(config) {
  Client.apply(this, arguments);
  if (config.debug) this.isDebugging = true;
  if (config.connection) {
    this.initDriver();
    this.initRunner();
    this.connectionSettings = config.connection;
    this.initPool();
    this.pool = new this.Pool(config.pool);
  }
  // Todo: Plugins here possibly??
}
inherits(Client_SQLite3, Client);

// Lazy load the sqlite3 module, since we might just be using
// the client to generate SQL strings.
var sqlite3;

Client_SQLite3.prototype.dialect = 'sqlite3',

Client_SQLite3.prototype.initTransaction = function() {
  require('./transaction')(this);
};

Client_SQLite3.prototype.initFormatter = function() {
  require('./formatter')(this);
};

// Lazy-load the sqlite3 dependency.
Client_SQLite3.prototype.initDriver = function() {
  sqlite3 = sqlite3 || require('sqlite3');
};

// Initialize the raw connection on the client.
Client_SQLite3.prototype.initRaw = function() {
  require('./raw')(this);
};

// Always initialize with the "Query" and "QueryCompiler"
// objects, each of which is unique to this client (and thus)
// can be altered without messing up anything for anyone else.
Client_SQLite3.prototype.initQuery = function() {
  require('./query')(this);
};

// Initializes a new pool instance for the current client.
Client_SQLite3.prototype.initPool = function() {
  require('./pool')(this);
};

// Initialize the query "runner"
Client_SQLite3.prototype.initRunner = function() {
  require('./runner')(this);
};

// Lazy-load the schema dependencies.
Client_SQLite3.prototype.initSchema = function() {
  require('./schema')(this);
};

// Lazy-load the migration dependency
Client_SQLite3.prototype.initMigrator = function() {
  require('./migrator')(this);
};

// Get a raw connection from the database, returning a promise with the connection object.
Client_SQLite3.prototype.acquireRawConnection = function() {
  var driver = this;
  return new Promise(function(resolve, reject) {
    var db = new sqlite3.Database(driver.connectionSettings.filename, function(err) {
      if (err) return reject(err);
      resolve(db);
    });
  });
};

// Used to explicitly close a connection, called internally by the pool
// when a connection times out or the pool is shutdown.
Client_SQLite3.prototype.destroyRawConnection = Promise.method(function(connection) {
  connection.close();
});

module.exports = Client_SQLite3;
},{"../../client":58,"../../promise":81,"./formatter":60,"./migrator":62,"./pool":63,"./query":64,"./raw":65,"./runner":66,"./schema":69,"./transaction":72,"inherits":56,"sqlite3":170}],62:[function(require,module,exports){
module.exports = function(client) {

var Migrator = require('../../migrate');
var inherits = require('inherits');

// Inherit from the `Migrator` constructor's prototype,
// so we can add the correct `then` method.
function Migrator_SQLite3() {
  this.client = client;
  Migrator.apply(this, arguments);
}
inherits(Migrator_SQLite3, Migrator);

// Assign the newly extended `Migrator` constructor to the client object.
client.Migrator = Migrator_SQLite3;

};
},{"../../migrate":78,"inherits":56}],63:[function(require,module,exports){
module.exports = function(client) {

var Pool     = require('../../pool');
var inherits = require('inherits');
var _        = require('lodash');

// Inherit from the `Pool` constructor's prototype.
function Pool_SQLite3() {
  this.client = client;
  Pool.apply(this, arguments);
}
inherits(Pool_SQLite3, Pool);

Pool_SQLite3.prototype.defaults = function() {
  return _.extend(Pool.prototype.defaults.call(this), {
    max: 1,
    min: 1,
    destroy: function(client) { client.close(); }
  });
};

// Assign the newly extended `Pool` constructor to the client object.
client.Pool = Pool_SQLite3;

};
},{"../../pool":80,"inherits":56,"lodash":135}],64:[function(require,module,exports){
// SQLite3 Query Builder & Compiler
// -------
module.exports = function(client) {

var _        = require('lodash');
var inherits = require('inherits');

var QueryBuilder  = require('../../query/builder');
var QueryCompiler = require('../../query/compiler');

// Query Builder
// -------
function QueryBuilder_SQLite3() {
  this.client = client;
  QueryBuilder.apply(this, arguments);
}
inherits(QueryBuilder_SQLite3, QueryBuilder);

// Query Compiler
// -------
function QueryCompiler_SQLite3() {
  this.formatter = new client.Formatter();
  QueryCompiler.apply(this, arguments);
}
inherits(QueryCompiler_SQLite3, QueryCompiler);

// The locks are not applicable in SQLite3
QueryCompiler_SQLite3.prototype.forShare =
QueryCompiler_SQLite3.prototype.forUpdate = function() {
  return '';
};

// SQLite requires us to build the multi-row insert as a listing of select with
// unions joining them together. So we'll build out this list of columns and
// then join them all together with select unions to complete the queries.
QueryCompiler_SQLite3.prototype.insert = function() {
  var insert = this.single.insert;
  var sql = 'insert into ' + this.tableName + ' ';
  if (_.isEmpty(this.single.insert)) return sql + 'default values';
  var insertData = this._prepInsert(insert);
  sql += '(' + this.formatter.columnize(insertData.columns) + ')';
  if (insertData.values.length === 1) {
    return sql + ' values (' + this.formatter.parameterize(insertData.values[0]) + ')';
  }
  var blocks = [];
  for (var i = 0, l = insertData.values.length; i < l; i++) {
    var block = blocks[i] = [];
    var current = insertData.values[i];
    for (var i2 = 0, l2 = insertData.columns.length; i2 < l2; i2++) {
      block.push(this.formatter.parameter(current[i2]) + ' as ' + this.formatter.wrap(insertData.columns[i2]));
    }
    blocks[i] = block.join(', ');
  }
  return sql + ' select ' + blocks.join(' union all select ');
};

// Adds a `order by` clause to the query, using "collate nocase" for the sort.
QueryCompiler_SQLite3.prototype.order = function() {
  var orders = this.grouped.order;
  if (!orders) return '';
  return 'order by ' + _.map(orders, function(order) {
    var cols = _.isArray(order.value) ? order.value : [order.value];
    return this.formatter.columnize(cols) + ' collate nocase ' + this.formatter.direction(order.direction);
  }, this).join(', ');
};

// Compiles an `update` query.
QueryCompiler_SQLite3.prototype.update = function() {
  var updateData = this._prepUpdate(this.single.update);
  var joins      = this.join();
  var wheres     = this.where();
  return 'update ' + this.tableName +
    (joins ? ' ' + joins : '') +
    ' set ' + updateData.join(', ') +
    (wheres ? ' ' + wheres : '');
};

// Compile a truncate table statement into SQL.
QueryCompiler_SQLite3.prototype.truncate = function() {
  var table = this.tableName;
  return {
    sql: 'delete from sqlite_sequence where name = ' + this.tableName,
    output: function() {
      return this.query({sql: 'delete from ' + table});
    }
  };
};

// Compiles a `columnInfo` query
QueryCompiler_SQLite3.prototype.columnInfo = function() {
  var column = this.single.columnInfo;
  return {
    sql: 'PRAGMA table_info(' + this.single.table +')',
    output: function(resp) {
      var maxLengthRegex = /.*\((\d+)\)/;
      var out = _.reduce(resp, function (columns, val) {
        var type = val.type;
        var maxLength = (maxLength = type.match(maxLengthRegex)) && maxLength[1];
        type = maxLength ? type.split('(')[0] : type;
        columns[val.name] = {
          type: type.toLowerCase(),
          maxLength: maxLength,
          nullable: !val.notnull,
          defaultValue: val.dflt_value
        };
        return columns;
      }, {});
      return column && out[column] || out;
    }
  };
};

client.QueryBuilder = QueryBuilder_SQLite3;
client.QueryCompiler = QueryCompiler_SQLite3;

};
},{"../../query/builder":82,"../../query/compiler":83,"inherits":56,"lodash":135}],65:[function(require,module,exports){
// Raw
// -------
module.exports = function(client) {

var Raw = require('../../raw');
var inherits = require('inherits');

// Inherit from the `Raw` constructor's prototype,
// so we can add the correct `then` method.
function Raw_SQLite3() {
  this.client = client;
  Raw.apply(this, arguments);
}
inherits(Raw_SQLite3, Raw);

// Assign the newly extended `Raw` constructor to the client object.
client.Raw = Raw_SQLite3;

};
},{"../../raw":86,"inherits":56}],66:[function(require,module,exports){
// Runner
// -------
module.exports = function(client) {

var _        = require('lodash');
var Promise  = require('../../promise');
var Runner   = require('../../runner');
var helpers  = require('../../helpers');

var inherits = require('inherits');

// Inherit from the `Runner` constructor's prototype,
// so we can add the correct `then` method.
function Runner_SQLite3() {
  this.client = client;
  Runner.apply(this, arguments);
}
inherits(Runner_SQLite3, Runner);

Runner_SQLite3.prototype._beginTransaction = 'begin transaction;';

// Runs the query on the specified connection, providing the bindings and any other necessary prep work.
Runner_SQLite3.prototype._query = Promise.method(function(obj) {
  var method = obj.method;
  if (this.isDebugging()) this.debug(obj);
  var callMethod;
  switch (method) {
    case 'insert':
    case 'update':
    case 'counter':
    case 'del':
      callMethod = 'run';
      break;
    default:
      callMethod = 'all';
  }
  var connection = this.connection;
  return new Promise(function(resolver, rejecter) {
    if (!connection || !connection[callMethod]) {
      return rejecter(new Error('Error calling ' + callMethod + ' on connection.'));
    }
    connection[callMethod](obj.sql, obj.bindings, function(err, response) {
      if (err) return rejecter(err);
      obj.response = response;

      // We need the context here, as it contains
      // the "this.lastID" or "this.changes"
      obj.context  = this;
      return resolver(obj);
    });
  });
});

// Sounds like .each doesn't work great for
Runner_SQLite3.prototype._stream = Promise.method(function(sql, stream, options) {
  var runner = this;
  return new Promise(function(resolver, rejecter) {
    stream.on('error', rejecter);
    stream.on('end', resolver);
    return runner.query(sql).map(function(row) {
      stream.write(row);
    }).catch(function(err) {
      stream.emit('error', err);
    }).then(function() {
      stream.end();
    });
  });
});

// Ensures the response is returned in the same format as other clients.
Runner_SQLite3.prototype.processResponse = function(obj) {
  var ctx      = obj.context;
  var response = obj.response;
  if (obj.output) return obj.output.call(this, response);
  switch (obj.method) {
    case 'select':
    case 'pluck':
    case 'first':
      response = helpers.skim(response);
      if (obj.method === 'pluck') response = _.pluck(response, obj.pluck);
      return obj.method === 'first' ? response[0] : response;
    case 'insert':
      return [ctx.lastID];
    case 'del':
    case 'update':
    case 'counter':
      return ctx.changes;
    default:
      return response;
  }
};

// Assign the newly extended `Runner` constructor to the client object.
client.Runner = Runner_SQLite3;

};

},{"../../helpers":76,"../../promise":81,"../../runner":87,"inherits":56,"lodash":135}],67:[function(require,module,exports){
// SQLite3: Column Builder & Compiler
// -------
module.exports = function(client) {

var inherits = require('inherits');
var Schema   = require('../../../schema');

// Column Builder
// -------

function ColumnBuilder_SQLite3() {
  this.client = client;
  Schema.ColumnBuilder.apply(this, arguments);
}
inherits(ColumnBuilder_SQLite3, Schema.ColumnBuilder);

// Column Compiler
// -------

function ColumnCompiler_SQLite3() {
  this.modifiers = ['nullable', 'defaultTo'];
  this.Formatter = client.Formatter;
  Schema.ColumnCompiler.apply(this, arguments);
}
inherits(ColumnCompiler_SQLite3, Schema.ColumnCompiler);

// Types
// -------

ColumnCompiler_SQLite3.prototype.double =
ColumnCompiler_SQLite3.prototype.decimal =
ColumnCompiler_SQLite3.prototype.floating = 'float';
ColumnCompiler_SQLite3.prototype.timestamp = 'datetime';

client.ColumnBuilder = ColumnBuilder_SQLite3;
client.ColumnCompiler = ColumnCompiler_SQLite3;

};
},{"../../../schema":92,"inherits":56}],68:[function(require,module,exports){
// SQLite3_DDL
//
// All of the SQLite3 specific DDL helpers for renaming/dropping
// columns and changing datatypes.
// -------
module.exports = function(client) {

var _       = require('lodash');
var Promise = require('../../../promise');

// So altering the schema in SQLite3 is a major pain.
// We have our own object to deal with the renaming and altering the types
// for sqlite3 things.
function SQLite3_DDL(runner, tableCompiler, pragma) {
  this.tableCompiler = tableCompiler;
  this.pragma = pragma;
  this.runner = runner;
  this.formatter = new client.Formatter;
  this.tableName = this.tableCompiler.tableNameRaw;
  this.alteredName = '_knex_temp_alter' + _.uniqueId();
}

SQLite3_DDL.prototype.getColumn = Promise.method(function(column) {
  var currentCol = _.findWhere(this.pragma, {name: column});
  if (!currentCol) throw new Error('The column ' + column + ' is not in the ' + this.tableName + ' table');
  return currentCol;
});

SQLite3_DDL.prototype.ensureTransaction = Promise.method(function() {
  if (!this.runner.transaction) {
    return this.runner.query({sql: 'begin transaction;'});
  }
});

SQLite3_DDL.prototype.commitTransaction = Promise.method(function() {
  return this.runner.commitTransaction();
});

SQLite3_DDL.prototype.rollbackTransaction = function(e) {
  return this.runner.rollbackTransaction().then(function() {
    throw e;
  });
};

SQLite3_DDL.prototype.getTableSql = function() {
  return this.runner.query({sql: 'SELECT name, sql FROM sqlite_master WHERE type="table" AND name="' + this.tableName + '"'});
};

SQLite3_DDL.prototype.renameTable = Promise.method(function() {
  return this.runner.query({sql: 'ALTER TABLE "' + this.tableName + '" RENAME TO "' + this.alteredName + '"'});
});

SQLite3_DDL.prototype.dropOriginal = function() {
  return this.runner.query({sql: 'DROP TABLE "' + this.tableName + '"'});
};

SQLite3_DDL.prototype.dropTempTable = function() {
  return this.runner.query({sql: 'DROP TABLE "' + this.alteredName + '"'});
};

SQLite3_DDL.prototype.copyData = function() {
  return this.runner.query({sql: 'SELECT * FROM "' + this.tableName + '"'})
    .bind(this)
    .then(this.insertChunked(20, this.alteredName));
};

SQLite3_DDL.prototype.reinsertData = function(iterator) {
  return function() {
    return this.runner.query({sql: 'SELECT * FROM "' + this.alteredName + '"'})
      .bind(this)
      .then(this.insertChunked(20, this.tableName, iterator));
  };
};

SQLite3_DDL.prototype.insertChunked = function(amount, target, iterator) {
  iterator = iterator || function(noop) { return noop; };
  return function(result) {
    var batch = [];
    var ddl = this;
    return Promise.reduce(result, function(memo, row) {
      memo++;
      if (memo % 20 === 0 || memo === result.length) {
        return new client.QueryBuilder()
          .connection(ddl.runner.connection)
          .table(target)
          .insert(_.map(batch, iterator))
          .then(function() { batch = []; })
          .thenReturn(memo);
      }
      batch.push(row);
      return memo;
    }, 0);
  };
};

SQLite3_DDL.prototype.createTempTable = function(createTable) {
  return function() {
    return this.runner.query({sql: createTable.sql.replace(this.tableName, this.alteredName)});
  };
};

// Boy, this is quite a method.
SQLite3_DDL.prototype.renameColumn = Promise.method(function(from, to) {
  var currentCol;
  return this.getColumn(from)
    .bind(this)
    .tap(function(col) { currentCol = col; })
    .then(this.ensureTransaction)
    .then(this.getTableSql)
    .then(function(sql) {
      var createTable = sql[0];
      var a = this.formatter.wrap(from) + ' ' + currentCol.type;
      var b = this.formatter.wrap(to)   + ' ' + currentCol.type;
      if (createTable.sql.indexOf(a) === -1) {
        throw new Error('Unable to find the column to change');
      }
      return Promise.bind(this)
      .then(this.createTempTable(createTable))
      .then(this.copyData)
      .then(this.dropOriginal)
      .then(function() {
        return this.runner.query({sql: createTable.sql.replace(a, b)});
      })
      .then(this.reinsertData(function(row) {
        row[to] = row[from];
        return _.omit(row, from);
      }))
      .then(this.dropTempTable);
    })
    .tap(this.commitTransaction)
    .catch(this.rollbackTransaction);
});

SQLite3_DDL.prototype.dropColumn = Promise.method(function(column) {
   var currentCol;
   return this.getColumn(column)
    .bind(this)
    .tap(function(col) { currentCol = col; })
    .then(this.ensureTransaction)
    .then(this.getTableSql)
    .then(function(sql) {
      var createTable = sql[0];
      var a = this.formatter.wrap(column) + ' ' + currentCol.type + ', ';
      if (createTable.sql.indexOf(a) === -1) {
        throw new Error('Unable to find the column to change');
      }
      return Promise.bind(this)
        .then(this.createTempTable(createTable))
        .then(this.copyData)
        .then(this.dropOriginal)
        .then(function() {
          return this.runner.query({sql: createTable.sql.replace(a, '')});
        })
        .then(this.reinsertData(function(row) {
          return _.omit(row, column);
        }))
        .then(this.dropTempTable);
    })
    .tap(this.commitTransaction)
    .catch(this.rollbackTransaction);
});

client.SQLite3_DDL = SQLite3_DDL;

};
},{"../../../promise":81,"lodash":135}],69:[function(require,module,exports){
module.exports = function(client) {
  require('./ddl')(client);
  require('./schema')(client);
  require('./table')(client);
  require('./column')(client);
};
},{"./column":67,"./ddl":68,"./schema":70,"./table":71}],70:[function(require,module,exports){
// SQLite3: Column Builder & Compiler
// -------
module.exports = function(client) {

var _        = require('lodash');
var inherits = require('inherits');
var Schema   = require('../../../schema');

// Schema Builder
// -------

function SchemaBuilder_SQLite3() {
  this.client = client;
  Schema.Builder.apply(this, arguments);
}
inherits(SchemaBuilder_SQLite3, Schema.Builder);

// Schema Compiler
// -------

function SchemaCompiler_SQLite3() {
  this.client = client;
  this.Formatter = client.Formatter;
  Schema.Compiler.apply(this, arguments);
}
inherits(SchemaCompiler_SQLite3, Schema.Compiler);

// Compile the query to determine if a table exists.
SchemaCompiler_SQLite3.prototype.hasTable = function(tableName) {
  this.pushQuery({
    sql: "select * from sqlite_master where type = 'table' and name = " + this.formatter.parameter(tableName),
    output: function(resp) {
      return resp.length > 0;
    }
  });
};

// Compile the query to determine if a column exists.
SchemaCompiler_SQLite3.prototype.hasColumn = function(tableName, column) {
  this.pushQuery({
    sql: 'PRAGMA table_info(' + this.formatter.wrap(tableName) + ')',
    output: function(resp) {
      return _.findWhere(resp, {name: column}) != null;
    }
  });
};

// Compile a rename table command.
SchemaCompiler_SQLite3.prototype.renameTable = function(from, to) {
  this.pushQuery('alter table ' + this.formatter.wrap(from) + ' rename to ' + this.formatter.wrap(to));
};

client.SchemaBuilder = SchemaBuilder_SQLite3;
client.SchemaCompiler = SchemaCompiler_SQLite3;

};
},{"../../../schema":92,"inherits":56,"lodash":135}],71:[function(require,module,exports){
// SQLite3: Column Builder & Compiler
// -------
module.exports = function(client) {

var _        = require('lodash');
var inherits = require('inherits');
var Schema   = require('../../../schema');

// Table Builder
// -------

function TableBuilder_SQLite3() {
  this.client = client;
  Schema.TableBuilder.apply(this, arguments);
}
inherits(TableBuilder_SQLite3, Schema.TableBuilder);

// Table Compiler
// -------

function TableCompiler_SQLite3() {
  this.client = client;
  this.Formatter = client.Formatter;
  this.SQLite3_DDL = client.SQLite3_DDL;
  this.primaryKey = void 0;
  Schema.TableCompiler.apply(this, arguments);
}
inherits(TableCompiler_SQLite3, Schema.TableCompiler);

// Create a new table.
TableCompiler_SQLite3.prototype.createQuery = function(columns) {
  var sql = 'create table ' + this.tableName() + ' (' + columns.sql.join(', ');

  // SQLite forces primary keys to be added when the table is initially created
  // so we will need to check for a primary key commands and add the columns
  // to the table's declaration here so they can be created on the tables.
  sql += this.foreignKeys() || '';
  sql += this.primaryKeys() || '';
  sql += ')';

  this.pushQuery(sql);
};

TableCompiler_SQLite3.prototype.addColumns = function(columns) {
  for (var i = 0, l = columns.sql.length; i < l; i++) {
    this.pushQuery({
      sql: 'alter table ' + this.tableName() + ' add column ' + columns.sql[i],
      bindings: columns.bindings[i]
    });
  }
};

// Compile a drop unique key command.
TableCompiler_SQLite3.prototype.dropUnique = function(columns, indexName) {
  indexName = indexName || this._indexCommand('unique', this.tableNameRaw, columns);
  this.pushQuery('drop index ' + indexName);
};

TableCompiler_SQLite3.prototype.dropIndex = function(columns, indexName) {
  indexName = indexName || this._indexCommand('index', this.tableNameRaw, columns);
  this.pushQuery('drop index ' + indexName);
};

// Compile a unique key command.
TableCompiler_SQLite3.prototype.unique = function(columns, indexName) {
  indexName = indexName || this._indexCommand('unique', this.tableNameRaw, columns);
  columns = this.formatter.columnize(columns);
  this.pushQuery('create unique index ' + indexName + ' on ' + this.tableName() + ' (' + columns + ')');
};

// Compile a plain index key command.
TableCompiler_SQLite3.prototype.index = function(columns, indexName) {
  indexName = indexName || this._indexCommand('index', this.tableNameRaw, columns);
  columns = this.formatter.columnize(columns);
  this.pushQuery('create index ' + indexName + ' on ' + this.tableName() + ' (' + columns + ')');
};

TableCompiler_SQLite3.prototype.primary =
TableCompiler_SQLite3.prototype.foreign = function() {
  if (this.method !== 'create') {
    console.warn('SQLite3 Foreign & Primary keys may only be added on create');
  }
};

TableCompiler_SQLite3.prototype.primaryKeys = function() {
  var pks = _.where(this.grouped.alterTable || [], {method: 'primary'});
  if (pks.length > 0 && pks[0].args.length > 0) {
    return ', primary key (' + this.formatter.columnize(pks[0].args) + ')';
  }
};

TableCompiler_SQLite3.prototype.foreignKeys = function() {
  var sql = '';
  var foreignKeys = _.where(this.grouped.alterTable || [], {method: 'foreign'});
  for (var i = 0, l = foreignKeys.length; i < l; i++) {
    var foreign       = foreignKeys[i].args[0];
    var column        = this.formatter.columnize(foreign.column);
    var references    = this.formatter.columnize(foreign.references);
    var foreignTable  = this.formatter.wrap(foreign.inTable);
    sql += ', foreign key(' + column + ') references ' + foreignTable + '(' + references + ')';
    if (foreign.onDelete) sql += ' on delete ' + foreign.onDelete;
    if (foreign.onUpdate) sql += ' on update ' + foreign.onUpdate;
  }
  return sql;
};

TableCompiler_SQLite3.prototype.createTableBlock = function() {
  return this.getColumns().concat().join(',');
};

// Compile a rename column command... very complex in sqlite
TableCompiler_SQLite3.prototype.renameColumn = function(from, to) {
  var compiler = this;
  this.pushQuery({
    sql: 'PRAGMA table_info(' + this.tableName() + ')',
    output: function(pragma) {
      return new compiler.SQLite3_DDL(this, compiler, pragma).renameColumn(from, to);
    }
  });
};

TableCompiler_SQLite3.prototype.dropColumn = function(column) {
  var compiler = this;
  this.pushQuery({
    sql: 'PRAGMA table_info(' + this.tableName() + ')',
    output: function(pragma) {
      return new compiler.SQLite3_DDL(this, compiler, pragma).dropColumn(column);
    }
  });
};

client.TableBuilder = TableBuilder_SQLite3;
client.TableCompiler = TableCompiler_SQLite3;

};
},{"../../../schema":92,"inherits":56,"lodash":135}],72:[function(require,module,exports){
// SQLite3 Transaction
// -------
module.exports = function(client) {

var inherits = require('inherits');
var Transaction = require('../../transaction');

function Transaction_SQLite3() {
  this.client = client;
  Transaction.apply(this, arguments);
}
inherits(Transaction_SQLite3, Transaction);

client.Transaction = Transaction_SQLite3;

};
},{"../../transaction":96,"inherits":56}],73:[function(require,module,exports){
// WebSQL
// -------
var inherits = require('inherits');
var _        = require('lodash');

var Client_SQLite3 = require('../sqlite3/index');
var Promise = require('../../promise');

function Client_WebSQL(config) {
  config = config || {};
  Client_SQLite3.super_.apply(this, arguments);
  if (config.debug) this.isDebugging = true;
  this.name = config.name || 'knex_database';
  this.version = config.version || '1.0';
  this.displayName = config.displayName || this.name;
  this.estimatedSize = config.estimatedSize || 5 * 1024 * 1024;
  this.initDriver();
  this.initRunner();
}
inherits(Client_WebSQL, Client_SQLite3);

Client_WebSQL.prototype.dialect = 'websql',
Client_WebSQL.prototype.initDriver = function() {};
Client_WebSQL.prototype.initPool = function() {};
Client_WebSQL.prototype.initMigrator = function() {};

// Initialize the query "runner"
Client_WebSQL.prototype.initRunner = function() {
  require('./runner')(this);
};

// Get a raw connection from the database, returning a promise with the connection object.
Client_WebSQL.prototype.acquireConnection = function() {
  var client = this;
  return new Promise(function(resolve, reject) {
    try {
      var db = openDatabase(client.name, client.version, client.displayName, client.estimatedSize);
      db.transaction(function(t) {
        t.__cid = _.uniqueId('__cid');
        resolve(t);
      });
    } catch (e) {
      reject(e);
    }
  });
};

// Used to explicitly close a connection, called internally by the pool
// when a connection times out or the pool is shutdown.
Client_WebSQL.prototype.releaseConnection = Promise.method(function(connection) {});

module.exports = Client_WebSQL;
},{"../../promise":81,"../sqlite3/index":61,"./runner":74,"inherits":56,"lodash":135}],74:[function(require,module,exports){
// Runner
// -------
module.exports = function(client) {

var Promise  = require('../../promise');

// Require the SQLite3 Runner.
require('../sqlite3/runner')(client);
var Runner_SQLite3 = client.Runner;

var inherits = require('inherits');
var _        = require('lodash');

// Inherit from the `Runner` constructor's prototype,
// so we can add the correct `then` method.
function Runner_WebSQL() {
  Runner_SQLite3.apply(this, arguments);
}
inherits(Runner_WebSQL, Runner_SQLite3);

// Runs the query on the specified connection, providing the bindings and any other necessary prep work.
Runner_WebSQL.prototype._query = Promise.method(function(obj) {
  if (this.isDebugging()) this.debug(obj);
  var connection = this.connection;
  return new Promise(function(resolver, rejecter) {
    if (!connection) {
      return rejecter(new Error('No connection provided.'));
    }
    connection.executeSql(obj.sql, obj.bindings, function(trx, response) {
      obj.response = response;
      return resolver(obj);
    }, function(trx, err) {
      console.error(err);
      rejecter(err);
    });
  });
});

// Ensures the response is returned in the same format as other clients.
Runner_WebSQL.prototype.processResponse = function(obj) {
  var resp = obj.response;
  if (obj.output) return obj.output.call(this, resp);
  switch (obj.method) {
    case 'pluck':
    case 'first':
    case 'select':
      var results = [];
      for (var i = 0, l = resp.rows.length; i < l; i++) {
        results[i] = _.clone(resp.rows.item(i));
      }
      if (obj.method === 'pluck') results = _.pluck(results, obj.pluck);
      return obj.method === 'first' ? results[0] : results;
    case 'insert':
      return [resp.insertId];
    case 'delete':
    case 'update':
    case 'counter':
      return resp.rowsAffected;
    default:
      return resp;
  }
};

// Assign the newly extended `Runner` constructor to the client object.
client.Runner = Runner_WebSQL;

};
},{"../../promise":81,"../sqlite3/runner":66,"inherits":56,"lodash":135}],75:[function(require,module,exports){
// Mixed into the query compiler & schema pieces. Assumes a `grammar`
// property exists on the current object.
var _            = require('lodash');
var QueryBuilder = require('./query/builder');

var Raw  = require('./raw');
var push = Array.prototype.push;

// Valid values for the `order by` clause generation.
var orderBys  = ['asc', 'desc'];

// A "formatter" instance is used to both determine how wrap, bind, and
// parameterize values within a query, keeping track of all bindings
// added to the query. This allows us to easily keep track of raw statements
// arbitrarily added to queries.
function Formatter() {
  this.bindings = [];
}

// Turns a list of values into a list of ?'s, joining them with commas unless
// a "joining" value is specified (e.g. ' and ')
Formatter.prototype.parameterize = function(values) {
  if (_.isFunction(values)) return this.parameter(values);
  values = _.isArray(values) ? values : [values];
  return _.map(values, this.parameter, this).join(', ');
};

// Checks whether a value is a function... if it is, we compile it
// otherwise we check whether it's a raw
Formatter.prototype.parameter = function(value) {
  if (_.isFunction(value)) {
    return this.outputQuery(this.compileCallback(value), true);
  }
  return this.checkRaw(value, true) || '?';
};

Formatter.prototype.checkRaw = function(value, parameter) {
  if (value instanceof QueryBuilder) {
    var query = value.toSQL();
    if (query.bindings) push.apply(this.bindings, query.bindings);
    return this.outputQuery(query);
  }
  if (value instanceof Raw) {
    if (value.bindings) push.apply(this.bindings, value.bindings);
    return value.sql;
  }
  if (parameter) this.bindings.push(value);
};

Formatter.prototype.rawOrFn = function(value, method) {
  if (_.isFunction(value)) {
    return this.outputQuery(this.compileCallback(value, method));
  }
  return this.checkRaw(value) || '';
};

// Puts the appropriate wrapper around a value depending on the database
// engine, unless it's a knex.raw value, in which case it's left alone.
Formatter.prototype.wrap = function(value) {
  var raw;
  if (_.isFunction(value)) {
    return this.outputQuery(this.compileCallback(value), true);
  }
  if (raw = this.checkRaw(value)) return raw;
  if (_.isNumber(value)) return value;
  return this._wrap(value + '');
};

// Coerce to string to prevent strange errors when it's not a string.
Formatter.prototype._wrapString = function(value) {
  var segments, asIndex = value.toLowerCase().indexOf(' as ');
  if (asIndex !== -1) {
    var first  = value.slice(0, asIndex);
    var second = value.slice(asIndex + 4);
    return this.wrap(first) + ' as ' + this.wrap(second);
  }
  var wrapped = [];
  segments = value.split('.');
  for (var i = 0, l = segments.length; i < l; i = ++i) {
    value = segments[i];
    if (i === 0 && segments.length > 1) {
      wrapped.push(this.wrap(value));
    } else {
      wrapped.push(this.wrapValue(value));
    }
  }
  return wrapped.join('.');
};

// Accepts a string or array of columns to wrap as appropriate.
Formatter.prototype.columnize = function(target) {
  var columns = (_.isString(target) ? [target] : target);
  return _.map(columns, this.wrap, this).join(', ');
};

// The operator method takes a value and returns something or other.
Formatter.prototype.operator = function(value) {
  var raw;
  if (raw = this.checkRaw(value)) return raw;
  if (!_.contains(this.operators, (value || '').toLowerCase())) {
    throw new TypeError('The operator "' + value + '" is not permitted');
  }
  return value;
};

// Specify the direction of the ordering.
Formatter.prototype.direction = function(value) {
  var raw;
  if (raw = this.checkRaw(value)) return raw;
  return _.contains(orderBys, (value || '').toLowerCase()) ? value : 'asc';
};

// Compiles a callback using the query builder.
Formatter.prototype.compileCallback = function(callback, method) {
  var client = this.client;

  // Build the callback
  var builder  = new client.QueryBuilder();
  callback.call(builder, builder);

  // Compile the callback, using the current formatter (to track all bindings).
  var compiler = new client.QueryCompiler(builder);
  compiler.formatter = this;

  // Return the compiled & parameterized sql.
  return compiler.toSQL(method || 'select');
};

// Ensures the query is aliased if necessary.
Formatter.prototype.outputQuery = function(compiled, alwaysWrapped) {
  var sql = compiled.sql || '';
  if (sql) {
    if (compiled.method === 'select' && alwaysWrapped || compiled.as) {
      sql = '(' + sql + ')';
      if (compiled.as) sql += ' as ' + this.wrap(compiled.as);
    }
  }
  return sql;
};

module.exports = Formatter;
},{"./query/builder":82,"./raw":86,"lodash":135}],76:[function(require,module,exports){
// helpers.js
// -------

// Just some common functions needed in multiple places within the library.
var _ = require('lodash');

var helpers = {

  // Pick off the attributes from only the current layer of the object.
  skim: function(data) {
    return _.map(data, function(obj) {
      return _.pick(obj, _.keys(obj));
    });
  },

  // Check if the first argument is an array, otherwise
  // uses all arguments as an array.
  normalizeArr: function() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    if (_.isArray(args[0])) {
      return args[0];
    }
    return args;
  },

  // Used to signify deprecated functionality.
  deprecate: function(msg) {
    this.warn(msg);
  },

  // Used to warn about incorrect use, without error'ing
  warn: function(msg) {
    if (typeof console !== "undefined" && console !== null &&
      typeof console.warn === "function") {
      console.warn("Knex: " + msg);
    }
  },

  // Sort the keys for the insert
  sortObject: function(obj) {
    return _.sortBy(_.pairs(obj), function(a) {
      return a[0];
    });
  }

};

module.exports = helpers;
},{"lodash":135}],77:[function(require,module,exports){
module.exports = function(Target) {
var _ = require('lodash');
var SqlString = require('./dialects/mysql/string');

Target.prototype.toQuery = function(tz) {
  var data = this.toSQL(this._method);
  if (this._errors && this._errors.length > 0) throw this._errors[0];
  if (!_.isArray(data)) data = [data];
  return _.map(data, function(statement) {
    return this._formatQuery(statement.sql, statement.bindings, tz);
  }, this).join(';\n');
};

// Format the query as sql, prepping bindings as necessary.
Target.prototype._formatQuery = function(sql, bindings, tz) {
  if (this.client && this.client.prepBindings) {
    bindings = this.client.prepBindings(bindings, tz);
  }
  return SqlString.format(sql, bindings, true, tz);
};

// Create a new instance of the `Runner`, passing in the current object.
Target.prototype.then = function(onFulfilled, onRejected) {
  var Runner = this.client.Runner;
  return new Runner(this).run().then(onFulfilled, onRejected);
};

// Add additional "options" to the builder. Typically used for client specific
// items, like the `mysql` and `sqlite3` drivers.
Target.prototype.options = function(opts) {
  this._options = this._options || [];
  this._options.push(_.clone(opts) || {});
  return this;
};

// Sets an explicit "connnection" we wish to use for this query.
Target.prototype.connection = function(connection) {
  this._connection = connection;
  return this;
};

// Set a debug flag for the current schema query stack.
Target.prototype.debug = function(val) {
  this._debug = (val == null ? true : val);
  return this;
};

// Set the transaction object for this query.
Target.prototype.transacting = function(t) {
  this._transacting = t;
  return this;
};

// Initializes a stream.
Target.prototype.stream = function(options) {
  var Runner = this.client.Runner;
  return new Runner(this).stream(options);
};

// Initialize a stream & pipe automatically.
Target.prototype.pipe = function(writable) {
  var Runner = this.client.Runner;
  return new Runner(this).pipe(writable);
};

// Creates a method which "coerces" to a promise, by calling a
// "then" method on the current `Target`
_.each(['bind', 'catch', 'spread', 'otherwise', 'map', 'reduce', 'tap', 'thenReturn',
  'return', 'yield', 'ensure', 'nodeify', 'exec'], function(method) {
  Target.prototype[method] = function() {
    var then = this.then();
    return then[method].apply(then, arguments);
  };
});

};
},{"./dialects/mysql/string":59,"lodash":135}],78:[function(require,module,exports){
(function (process,__dirname){
// Migrator
// -------
"use strict";

var fs       = require('fs');
var path     = require('path');
var _        = require('lodash');
var mkdirp   = require('mkdirp');
var Promise  = require('../promise');

// The new migration we're performing, typically called from the `knex.migrate`
// interface on the main `knex` object. Passes the `knex` instance performing
// the migration.
function Migrator(knex) {
  this.knex   = knex;
  this.config = this.setConfig(knex.client.migrationConfig);
}

// Migrators to the latest configuration.
Migrator.prototype.latest = Promise.method(function(config) {
  this.config = this.setConfig(config);
  return this._migrationData()
    .tap(validateMigrationList)
    .bind(this)
    .spread(function(all, completed) {
      return this._runBatch(_.difference(all, completed), 'up');
    });
});

// Rollback the last "batch" of migrations that were run.
Migrator.prototype.rollback = Promise.method(function(config) {
  this.config = this.setConfig(config);
  return this._migrationData()
    .tap(validateMigrationList)
    .bind(this)
    .then(this._getLastBatch)
    .then(function(migrations) {
      return this._runBatch(_.pluck(migrations, 'name'), 'down');
    });
});

// Retrieves and returns the current migration version
// we're on, as a promise. If there aren't any migrations run yet,
// return "none" as the value for the `currentVersion`.
Migrator.prototype.currentVersion = function(config) {
  this.config = this.setConfig(config);
  return this._listCompleted(config).then(function(completed) {
    var val = _.chain(completed).map(function(value) {
      return value.split('_')[0];
    }).max().value();
    return (val === -Infinity ? 'none' : val);
  });
};

// Creates a new migration, with a given name.
Migrator.prototype.make = function(name, config) {
  this.config = this.setConfig(config);
  if (!name) Promise.rejected(new Error('A name must be specified for the generated migration'));
  return this._ensureFolder(config)
    .bind(this)
    .then(this._generateStubTemplate)
    .then(this._writeNewMigration(name));
};

// Lists all available migration versions, as a sorted array.
Migrator.prototype._listAll = Promise.method(function(config) {
  this.config = this.setConfig(config);
  return Promise.promisify(fs.readdir, fs)(this.config.directory)
    .bind(this)
    .then(function(migrations) {
      return _.filter(migrations, function(value) {
        var extension = path.extname(value);
        return _.contains(['.co', '.coffee', '.iced', '.js', '.litcoffee', '.ls'], extension);
      }).sort();
    });
});

// Ensures a folder for the migrations exist, dependent on the
// migration config settings.
Migrator.prototype._ensureFolder = function() {
  var dir = this.config.directory;
  return Promise.promisify(fs.stat, fs)(dir)
    .catch(function() {
      return Promise.promisify(mkdirp)(dir);
    });
};

// Ensures that the proper table has been created,
// dependent on the migration config settings.
Migrator.prototype._ensureTable = Promise.method(function() {
  var table = this.config.tableName;
  return this.knex.schema.hasTable(table)
    .bind(this)
    .then(function(exists) {
      if (!exists) return this._createMigrationTable(table);
    });
});

// Create the migration table, if it doesn't already exist.
Migrator.prototype._createMigrationTable = function(tableName) {
  return this.knex.schema.createTable(tableName, function(t) {
    t.increments();
    t.string('name');
    t.integer('batch');
    t.timestamp('migration_time');
  });
};

// Run a batch of current migrations, in sequence.
Migrator.prototype._runBatch = function(migrations, direction) {
  return Promise.all(_.map(migrations, this._validateMigrationStructure, this))
    .bind(this)
    .then(function(migrations) {
      return Promise.bind(this)
        .then(this._latestBatchNumber)
        .then(function(batchNo) {
          if (direction === 'up') batchNo++;
          return batchNo;
        })
        .then(function(batchNo) {
          return this._waterfallBatch(batchNo, migrations, direction);
        });
    });
};

// Validates some migrations by requiring and checking for an `up` and `down` function.
Migrator.prototype._validateMigrationStructure = function(name) {
  var migration = require(this.config.directory + '/' + name);
  if (!_.isFunction(migration.up) || !_.isFunction(migration.down)) {
    throw new Error('Invalid migration: ' + name + ' must have both an up and down function');
  }
  return name;
};

// Lists all migrations that have been completed for the current db, as an array.
Migrator.prototype._listCompleted = Promise.method(function() {
  var tableName = this.config.tableName;
  return this._ensureTable(tableName)
    .bind(this)
    .then(function () {
      return this.knex(tableName).orderBy('id').select('name');
    })
    .then(function(migrations) {
      return _.pluck(migrations, 'name');
    });
});

// Gets the migration list from the specified migration directory,
// as well as the list of completed migrations to check what
// should be run.
Migrator.prototype._migrationData = function() {
  return Promise.all([
    this._listAll(),
    this._listCompleted()
  ]);
};

// Generates the stub template for the current migration, returning a compiled template.
Migrator.prototype._generateStubTemplate = function() {
  var stubPath = this.config.stub || path.join(__dirname, 'stub', this.config.extension + '.stub');
  return Promise.promisify(fs.readFile, fs)(stubPath).then(function(stub) {
    return _.template(stub.toString(), null, {variable: 'd'});
  });
};

// Write a new migration to disk, using the config and generated filename,
// passing any `variables` given in the config to the template.
Migrator.prototype._writeNewMigration = function(name) {
  var config = this.config;
  return function(tmpl) {
    if (name[0] === '-') name = name.slice(1);
    var filename  = yyyymmddhhmmss() + '_' + name + '.' + config.extension;
    return Promise.promisify(fs.writeFile, fs)(
      path.join(config.directory, filename),
      tmpl(config.variables || {})
    ).return(filename);
  };
};

// Get the last batch of migrations, by name, ordered by insert id
// in reverse order.
Migrator.prototype._getLastBatch = function() {
  var knex = this.knex;
  var tableName = this.config.tableName;
  return this.knex(tableName)
    .where('batch', function() {
      this.select(knex.raw('MAX(batch)')).from(tableName);
    })
    .orderBy('id', 'desc');
};

// Returns the latest batch number.
Migrator.prototype._latestBatchNumber = function() {
  return this.knex(this.config.tableName)
    .max('batch as batchNo').then(function(obj) {
      return (obj[0].batchNo || 0);
    });
};

// Runs a batch of `migrations` in a specified `direction`,
// saving the appropriate database information as the migrations are run.
Migrator.prototype._waterfallBatch = function(batchNo, migrations, direction) {
  var knex      = this.knex;
  var tableName = this.config.tableName;
  var directory = this.config.directory;
  var current   = Promise.bind({failed: false, failedOn: 0});
  var log       = [];
  _.each(migrations, function(migration, i) {
    var name  = migration;
    migration = require(directory + '/' + name);

    // We're going to run each of the migrations in the current "up"
    current = current.then(function() {
      return migration[direction](knex, Promise);
    }).then(function() {
      log.push(name);
      if (direction === 'up') {
        return knex(tableName).insert({
          name: name,
          batch: batchNo,
          migration_time: new Date()
        });
      }
      if (direction === 'down') {
        return knex(tableName).where({name: name}).del();
      }
    });
  });

  return current.thenReturn([batchNo, log]);
};

Migrator.prototype.setConfig = function(config) {
  return _.extend({
    extension: 'js',
    tableName: 'knex_migrations',
    directory: process.cwd() + '/migrations'
  }, this.config || {}, config);
};

// Validates that migrations are present in the appropriate directories.
function validateMigrationList(all, completed) {
  var diff = _.difference(completed, all);
  if (!_.isEmpty(diff)) {
    throw new Error(
      'The migration directory is corrupt, the following files are missing: ' + diff.join(', ')
    );
  }
}

// Get a date object in the correct format, without requiring
// a full out library like "moment.js".
var yyyymmddhhmmss = function() {
  var d = new Date();
  return d.getFullYear().toString() +
      padDate(d.getMonth() + 1) +
      padDate(d.getDate()) +
      padDate(d.getHours()) +
      padDate(d.getMinutes()) +
      padDate(d.getSeconds());
};

// Ensure that we have 2 places for each of the date segments
var padDate = function(segment) {
  segment = segment.toString();
  return segment[1] ? segment : '0' + segment;
};

module.exports = Migrator;
}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),"/../node_modules/knex/lib/migrate")
},{"../promise":81,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"fs":169,"lodash":135,"mkdirp":136,"path":177}],79:[function(require,module,exports){
module.exports = ['make', 'latest', 'rollback', 'currentVersion'];
},{}],80:[function(require,module,exports){
// Pool
// -------
var _           = require('lodash');
var GenericPool = require('generic-pool-redux').Pool;
var Promise     = require('./promise');

// The "Pool" object is a thin wrapper around the
// "generic-pool-redux" library, exposing a `destroy`
// method for explicitly draining the pool. The
// `init` method is called internally and initializes
// the pool if it doesn't already exist.
var Pool = function(config) {
  this.config = _.clone(config) || {};
  this.genericPool = this.initialize();
};

// Typically only called internally, this initializes
// a new `GenericPool` instance, based on the `config`
// options passed into the constructor.
Pool.prototype.initialize = function() {
  return new GenericPool(_.defaults(this.config, _.result(this, 'defaults')));
};

// Some basic defaults for the pool...
Pool.prototype.defaults = function() {
  var pool = this;
  return {
    min: 2,
    max: 10,
    create: function(callback) {
      pool.client.acquireRawConnection()
        .tap(function(connection) {
          connection.__cid = _.uniqueId('__cid');
          if (pool.config.afterCreate) {
            return Promise.promisify(pool.config.afterCreate)(connection);
          }
        }).exec(callback);
    },
    destroy: function(connection) {
      if (pool.config.beforeDestroy) {
        return pool.config.beforeDestroy(connection, function() {
          connection.end();
        });
      }
      connection.end();
    }
  };
};

// Acquires a connection from the pool.
Pool.prototype.acquire = function(callback, priority) {
  if (this.genericPool) {
    this.genericPool.acquire(callback, priority);
  } else {
    callback(new Error('The genericPool is not initialized.'));
  }
};

// Release a connection back to the connection pool.
Pool.prototype.release = function(connection, callback) {
  if (this.genericPool) {
    this.genericPool.release(connection, callback);
  } else {
    callback(new Error('The genericPool is not initialized.'));
  }
};

// Tear down the pool, only necessary if you need it.
Pool.prototype.destroy = function(callback) {
  var genericPool = this.genericPool;
  if (genericPool) {
    genericPool.drain(function() {
      genericPool.destroyAllNow(callback);
    });
    this.genericPool = void 0;
  } else {
    callback();
  }
  return this;
};

module.exports = Pool;
},{"./promise":81,"generic-pool-redux":134,"lodash":135}],81:[function(require,module,exports){
var Promise = require('bluebird/js/main/promise')();

Promise.prototype.yield     = Promise.prototype.thenReturn;
Promise.prototype.ensure    = Promise.prototype.lastly;
Promise.prototype.otherwise = Promise.prototype.caught;
Promise.prototype.exec      = Promise.prototype.nodeify;

module.exports = Promise;

},{"bluebird/js/main/promise":115}],82:[function(require,module,exports){
// Builder
// -------
var _            = require('lodash');
var inherits     = require('inherits');
var EventEmitter = require('events').EventEmitter;

var Raw          = require('../raw');
var helpers      = require('../helpers');

var JoinClause  = require('./joinclause');

// Typically called from `knex.builder`,
// start a new query building chain.
function QueryBuilder() {
  this._single     = {};
  this._statements = [];
  this._errors     = [];

  // Internal flags used in the builder.
  this._joinFlag  = 'inner';
  this._boolFlag  = 'and';

  this.and = this;
}
inherits(QueryBuilder, EventEmitter);

QueryBuilder.prototype.toString = function() {
  return this.toQuery();
};

// Convert the current query "toSQL"
QueryBuilder.prototype.toSQL = function() {
  var QueryCompiler = this.client.QueryCompiler;
  return new QueryCompiler(this).toSQL(this._method || 'select');
};

// Create a shallow clone of the current query builder.
// TODO: Test this!!
QueryBuilder.prototype.clone = function() {
  var cloned            = new this.constructor();
    cloned._method      = this._method;
    cloned._single      = _.clone(this._single);
    cloned._options     = _.clone(this._options);
    cloned._statements  = this._statements.slice();
    cloned._errors      = this._errors.slice();
    cloned._debug       = this._debug;
    cloned._transacting = this._transacting;
    cloned._connection  = this._connection;
  return cloned;
};

// Select
// ------

// Sets the values for a `select` query,
// which is the same as specifying the columns.
QueryBuilder.prototype.select =

// Adds a column or columns to the list of "columns"
// being selected on the query.
QueryBuilder.prototype.columns =
QueryBuilder.prototype.column = function(column) {
  if (column == null) return this;
  this._statements.push({
    grouping: 'columns',
    value: helpers.normalizeArr.apply(null, arguments)
  });
  return this;
};

// Allow for a sub-select to be explicitly aliased as a column,
// without needing to compile the query in a where.
QueryBuilder.prototype.as = function(column) {
  this._single.as = column;
  return this;
};

// Sets the `tableName` on the query.
// Alias to "from" for select and "into" for insert statements
// e.g. builder.insert({a: value}).into('tableName')
QueryBuilder.prototype.table = function(tableName) {
  this._single.table = tableName;
  return this;
};
QueryBuilder.prototype.from = QueryBuilder.prototype.table;
QueryBuilder.prototype.into = QueryBuilder.prototype.table;

// Adds a `distinct` clause to the query.
QueryBuilder.prototype.distinct = function() {
  this._statements.push({
    grouping: 'columns',
    value: helpers.normalizeArr.apply(null, arguments),
    distinct: true
  });
  return this;
};

// Adds a join clause to the query, allowing for advanced joins
// with an anonymous function as the second argument.
QueryBuilder.prototype.join = function(table, first, operator, second) {
  var i, args = new Array(arguments.length);
  for (i = 0; i < args.length; i++) {
    args[i] = arguments[i];
  }
  if (args.length === 5) {
    helpers.deprecate('The five argument join syntax is now deprecated, ' +
      'please check the docs and update your code.');
    return this._joinType(args[4]).join(table, first, operator, second);
  }
  var join;
  if (_.isFunction(first)) {
    if (args.length > 2) {
      helpers.deprecate('The [table, fn, type] join syntax is deprecated, ' +
        'please check the docs and update your code.');
      return this._joinType(args[2]).join(table, first);
    }
    join = new JoinClause(table, this._joinType());
    first.call(join, join);
  } else {
    join = new JoinClause(table, this._joinType());
    join.on.apply(join, args.slice(1));
  }
  this._statements.push(join);
  return this;
};

// JOIN blocks:
QueryBuilder.prototype.innerJoin = function() {
  return this._joinType('inner').join.apply(this, arguments);
};
QueryBuilder.prototype.leftJoin = function() {
  return this._joinType('left').join.apply(this, arguments);
};
QueryBuilder.prototype.leftOuterJoin = function() {
  return this._joinType('left outer').join.apply(this, arguments);
};
QueryBuilder.prototype.rightJoin = function() {
  return this._joinType('right').join.apply(this, arguments);
};
QueryBuilder.prototype.rightOuterJoin = function() {
  return this._joinType('right outer').join.apply(this, arguments);
};
QueryBuilder.prototype.outerJoin = function() {
  return this._joinType('outer').join.apply(this, arguments);
};
QueryBuilder.prototype.fullOuterJoin = function() {
  return this._joinType('full outer').join.apply(this, arguments);
};
QueryBuilder.prototype.crossJoin = function() {
  return this._joinType('cross').join.apply(this, arguments);
};

// The where function can be used in several ways:
// The most basic is `where(key, value)`, which expands to
// where key = value.
QueryBuilder.prototype.where =
QueryBuilder.prototype.andWhere = function(column, operator, value) {

  // Check if the column is a function, in which case it's
  // a where statement wrapped in parens.
  if (_.isFunction(column)) {
    return this.whereWrapped(column);
  }

  // Allow a raw statement to be passed along to the query.
  if (column instanceof Raw) return this.whereRaw(column);

  // Allows `where({id: 2})` syntax.
  if (_.isObject(column)) return this._objectWhere(column);

  // Enable the where('key', value) syntax, only when there
  // are explicitly two arguments passed, so it's not possible to
  // do where('key', '!=') and have that turn into where key != null
  if (arguments.length === 2) {
    value    = operator;
    operator = '=';

    // If the value is null, and it's a two argument query,
    // we assume we're going for a `whereNull`.
    if (value === null) {
      return this.whereNull(column);
    }
  }

  // lower case the operator for comparison purposes
  var checkOperator = ('' + operator).toLowerCase().trim();

  // If there are 3 arguments, check whether 'in' is one of them.
  if (arguments.length === 3) {
    if (checkOperator === 'in' || checkOperator === 'not in') {
      return this.whereIn(arguments[0], arguments[2], (checkOperator === 'not in'));
    }
    if (checkOperator === 'between' || checkOperator === 'not between') {
      return this.whereBetween(arguments[0], arguments[2], (checkOperator === 'not between'));
    }
  }

  // If the value is still null, check whether they're meaning
  // where value is null
  if (value === null) {

    // Check for .where(key, 'is', null) or .where(key, 'is not', 'null');
    if (checkOperator === 'is' || checkOperator === 'is not') {
      return this.whereNull(column, bool, (checkOperator === 'is not'));
    }
  }

  // Push onto the where statement stack.
  this._statements.push({
    grouping: 'where',
    type: 'whereBasic',
    column: column,
    operator: operator,
    value: value,
    bool: this._bool()
  });
  return this;
};
// Adds an `or where` clause to the query.
QueryBuilder.prototype.orWhere = function() {
  return this._bool('or').where.apply(this, arguments);
};

// Processes an object literal provided in a "where" clause.
QueryBuilder.prototype._objectWhere = function(obj) {
  var boolVal = this._bool();
  for (var key in obj) {
    this[boolVal + 'Where'](key, obj[key]);
  }
  return this;
};

// Adds a raw `where` clause to the query.
QueryBuilder.prototype.whereRaw =
QueryBuilder.prototype.andWhereRaw = function(sql, bindings) {
  var raw = (sql instanceof Raw ? sql : new Raw(sql, bindings));
  this._statements.push({
    grouping: 'where',
    type: 'whereRaw',
    value: raw,
    bool: this._bool()
  });
  return this;
};
QueryBuilder.prototype.orWhereRaw = function(sql, bindings) {
  return this._bool('or').whereRaw(sql, bindings);
};

// Helper for compiling any advanced `where` queries.
QueryBuilder.prototype.whereWrapped = function(callback) {
  this._statements.push({
    grouping: 'where',
    type: 'whereWrapped',
    value: callback,
    bool: this._bool()
  });
  return this;
};

// Adds a `where exists` clause to the query.
QueryBuilder.prototype.whereExists = function(callback, not) {
  not = this._not() || not;
  this._statements.push({
    grouping: 'where',
    type: 'whereExists',
    value: callback,
    not: not || false,
    bool: this._bool(),
  });
  return this;
};

// Adds an `or where exists` clause to the query.
QueryBuilder.prototype.orWhereExists = function(callback) {
  return this._bool('or').whereExists(callback);
};

// Adds a `where not exists` clause to the query.
QueryBuilder.prototype.whereNotExists = function(callback) {
  return this.whereExists(callback, true);
};

// Adds a `or where not exists` clause to the query.
QueryBuilder.prototype.orWhereNotExists = function(callback) {
  return this._bool('or').whereExists(callback, true);
};

// Adds a `where in` clause to the query.
QueryBuilder.prototype.whereIn = function(column, values, not) {
  not = this._not() || not;
  this._statements.push({
    grouping: 'where',
    type: 'whereIn',
    column: column,
    value: values,
    not: not || false,
    bool: this._bool()
  });
  return this;
};

// Adds a `or where in` clause to the query.
QueryBuilder.prototype.orWhereIn = function(column, values) {
  return this._bool('or').whereIn(column, values);
};

// Adds a `where not in` clause to the query.
QueryBuilder.prototype.whereNotIn = function(column, values) {
  return this.whereIn(column, values, true);
};

// Adds a `or where not in` clause to the query.
QueryBuilder.prototype.orWhereNotIn = function(column, values) {
  return this._bool('or').whereIn(column, values, true);
};

// Adds a `where null` clause to the query.
QueryBuilder.prototype.whereNull = function(column, not) {
  not = this._not() || not;
  this._statements.push({
    grouping: 'where',
    type: 'whereNull',
    column: column,
    not: not || false,
    bool: this._bool()
  });
  return this;
};

// Adds a `or where null` clause to the query.
QueryBuilder.prototype.orWhereNull = function(column) {
  return this._bool('or').whereNull(column);
};

// Adds a `where not null` clause to the query.
QueryBuilder.prototype.whereNotNull = function(column) {
  return this.whereNull(column, ' is not null');
};

// Adds a `or where not null` clause to the query.
QueryBuilder.prototype.orWhereNotNull = function(column) {
  return this._bool('or').whereNull(column, ' is not null');
};

// Adds a `where between` clause to the query.
QueryBuilder.prototype.whereBetween = function(column, values, not) {
  if (!_.isArray(values)) {
    return this._errors.push(new Error('The second argument to whereBetween must be an array.'));
  }
  if (values.length !== 2) {
    return this._errors.push(new Error('You must specify 2 values for the whereBetween clause'));
  }
  not = this._not() || not;
  this._statements.push({
    grouping: 'where',
    type: 'whereBetween',
    column: column,
    value: values,
    not: not || false,
    bool: this._bool()
  });
  return this;
};

// Adds a `where not between` clause to the query.
QueryBuilder.prototype.whereNotBetween = function(column, values) {
  return this.whereBetween(column, values, true);
};

// Adds a `or where between` clause to the query.
QueryBuilder.prototype.orWhereBetween = function(column, values) {
  return this._bool('or').whereBetween(column, values);
};

// Adds a `or where not between` clause to the query.
QueryBuilder.prototype.orWhereNotBetween = function(column, values) {
  return this._bool('or').whereNotBetwen(column, values);
};

// Adds a `group by` clause to the query.
QueryBuilder.prototype.groupBy = function(item) {
  if (item instanceof Raw) {
    return this.groupByRaw.apply(this, arguments);
  }
  this._statements.push({
    grouping: 'group',
    type: 'groupByBasic',
    value: helpers.normalizeArr.apply(null, arguments)
  });
  return this;
};

// Adds a raw `group by` clause to the query.
QueryBuilder.prototype.groupByRaw = function(sql, bindings) {
  var raw = (sql instanceof Raw ? sql : new Raw(sql, bindings));
  this._statements.push({
    grouping: 'group',
    type: 'groupByRaw',
    value: raw
  });
  return this;
};

// Adds a `order by` clause to the query.
QueryBuilder.prototype.orderBy = function(column, direction) {
  this._statements.push({
    grouping: 'order',
    type: 'orderByBasic',
    value: column,
    direction: direction
  });
  return this;
};

// Add a raw `order by` clause to the query.
QueryBuilder.prototype.orderByRaw = function(sql, bindings) {
  var raw = (sql instanceof Raw ? sql : new Raw(sql, bindings));
  this._statements.push({
    grouping: 'order',
    type: 'orderByRaw',
    value: raw
  });
  return this;
};

// Add a union statement to the query.
QueryBuilder.prototype.union = function(callback, wrap) {
  if (arguments.length > 1) {
    var args = new Array(arguments.length);
    for (var i = 0, l = args.length; i < l; i++) {
      args[i] = arguments[i];
      this.union(args[i]);
    }
    return this;
  }
  this._statements.push({
    grouping: 'union',
    clause: 'union',
    value: callback,
    wrap: wrap || false
  });
  return this;
};

// Adds a union all statement to the query.
QueryBuilder.prototype.unionAll = function(callback, wrap) {
  this._statements.push({
    grouping: 'union',
    clause: 'union all',
    value: callback,
    wrap: wrap || false
  });
  return this;
};

// Adds a `having` clause to the query.
QueryBuilder.prototype.having =
QueryBuilder.prototype.andHaving = function(column, operator, value) {
  if (column instanceof Raw && arguments.length === 1) {
    return this._havingRaw(column);
  }
  this._statements.push({
    grouping: 'having',
    type: 'havingBasic',
    column: column,
    operator: operator,
    value: value,
    bool: this._bool()
  });
  return this;
};
// Adds an `or having` clause to the query.
QueryBuilder.prototype.orHaving = function() {
  return this._bool('or').having.apply(this, arguments);
};
QueryBuilder.prototype.havingRaw = function(sql, bindings) {
  return this._havingRaw(sql, bindings);
};
QueryBuilder.prototype.orHavingRaw = function(sql, bindings) {
  return this._bool('or').havingRaw(sql, bindings);
};
// Adds a raw `having` clause to the query.
QueryBuilder.prototype._havingRaw = function(sql, bindings) {
  var raw = (sql instanceof Raw ? sql : new Raw(sql, bindings));
  this._statements.push({
    grouping: 'having',
    type: 'havingRaw',
    value: raw,
    bool: this._bool()
  });
  return this;
};

// Only allow a single "offset" to be set for the current query.
QueryBuilder.prototype.offset = function(value) {
  this._single.offset = value;
  return this;
};

// Only allow a single "limit" to be set for the current query.
QueryBuilder.prototype.limit = function(value) {
  this._single.limit = value;
  return this;
};

// Retrieve the "count" result of the query.
QueryBuilder.prototype.count = function(column) {
  return this._aggregate('count', (column || '*'));
};

// Retrieve the minimum value of a given column.
QueryBuilder.prototype.min = function(column) {
  return this._aggregate('min', column);
};

// Retrieve the maximum value of a given column.
QueryBuilder.prototype.max = function(column) {
  return this._aggregate('max', column);
};

// Retrieve the sum of the values of a given column.
QueryBuilder.prototype.sum = function(column) {
  return this._aggregate('sum', column);
};

// Retrieve the average of the values of a given column.
QueryBuilder.prototype.avg = function(column) {
  return this._aggregate('avg', column);
};

// Increments a column's value by the specified amount.
QueryBuilder.prototype.increment = function(column, amount) {
  return this._counter(column, amount);
};

// Decrements a column's value by the specified amount.
QueryBuilder.prototype.decrement = function(column, amount) {
  return this._counter(column, amount, '-');
};

// Sets the values for a `select` query, informing that only the first
// row should be returned (limit 1).
QueryBuilder.prototype.first = function() {
  var i, args = new Array(arguments.length);
  for (i = 0; i < args.length; i++) {
    args[i] = arguments[i];
  }
  this.select.apply(this, args);
  this._method = 'first';
  this.limit(1);
  return this;
};

// Pluck a column from a query.
QueryBuilder.prototype.pluck = function(column) {
  this._method = 'pluck';
  this._single.pluck = column;
  this._statements.push({
    grouping: 'columns',
    type: 'pluck',
    value: column
  });
  return this;
};

// Insert & Update
// ------

// Sets the values for an `insert` query.
QueryBuilder.prototype.insert = function(values, returning) {
  this._method = 'insert';
  if (!_.isEmpty(returning)) this.returning(returning);
  this._single.insert = values;
  return this;
};

// Sets the values for an `update`, allowing for both
// `.update(key, value, [returning])` and `.update(obj, [returning])` syntaxes.
QueryBuilder.prototype.update = function(values, returning) {
  var ret, obj = {};
  this._method = 'update';
  var i, args = new Array(arguments.length);
  for (i = 0; i < args.length; i++) {
    args[i] = arguments[i];
  }
  if (_.isString(values)) {
    obj[values] = returning;
    if (args.length > 2) {
      ret = args[2];
    }
  } else {
    obj = values;
    ret = args[1];
  }
  if (!_.isEmpty(ret)) this.returning(ret);
  this._single.update = obj;
  return this;
};

// Sets the returning value for the query.
QueryBuilder.prototype.returning = function(returning) {
  this._single.returning = returning;
  return this;
};

// Delete
// ------

// Executes a delete statement on the query;
QueryBuilder.prototype.del =
QueryBuilder.prototype.delete = function(ret) {
  this._method = 'del';
  if (!_.isEmpty(ret)) this.returning(ret);
  return this;
};

// Truncates a table, ends the query chain.
QueryBuilder.prototype.truncate = function() {
  this._method = 'truncate';
  return this;
};

// Retrieves columns for the table specified by `knex(tableName)`
QueryBuilder.prototype.columnInfo = function(column) {
  this._method = 'columnInfo';
  this._single.columnInfo = column;
  return this;
};

// Set a lock for update constraint.
QueryBuilder.prototype.forUpdate = function() {
  this._single.lock = 'forUpdate';
  return this;
};

// Set a lock for share constraint.
QueryBuilder.prototype.forShare = function() {
  this._single.lock = 'forShare';
  return this;
};

// ----------------------------------------------------------------------

// Helper for the incrementing/decrementing queries.
QueryBuilder.prototype._counter = function(column, amount, symbol) {
  var amt = parseInt(amount, 10);
  if (isNaN(amt)) amt = 1;
  this._method = 'counter';
  this._single.counter = {
    column: column,
    amount: amt,
    symbol: (symbol || '+')
  };
  return this;
};

// Helper to get or set the "boolFlag" value.
QueryBuilder.prototype._bool = function(val) {
  if (arguments.length === 1) {
    this._boolFlag = val;
    return this;
  }
  var ret = this._boolFlag;
  this._boolFlag = 'and';
  return ret;
};

// Helper to get or set the "notFlag" value.
QueryBuilder.prototype._not = function(val) {
  if (arguments.length === 1) {
    this._notFlag = val;
    return this;
  }
  var ret = this._notFlag;
  this._notFlag = false;
  return ret;
};

// Helper to get or set the "joinFlag" value.
QueryBuilder.prototype._joinType = function (val) {
  if (arguments.length === 1) {
    this._joinFlag = val;
    return this;
  }
  var ret = this._joinFlag || 'inner';
  this._joinFlag = 'inner';
  return ret;
};

// Helper for compiling any aggregate queries.
QueryBuilder.prototype._aggregate = function(method, column) {
  this._statements.push({
    grouping: 'columns',
    type: 'aggregate',
    method: method,
    value: column
  });
  return this;
};

Object.defineProperty(QueryBuilder.prototype, 'or', {
  get: function () {
    return this._bool('or');
  }
});


Object.defineProperty(QueryBuilder.prototype, 'not', {
  get: function () {
    return this._not(true);
  }
});

// Attach all of the top level promise methods that should be chainable.
require('../interface')(QueryBuilder);

module.exports = QueryBuilder;
},{"../helpers":76,"../interface":77,"../raw":86,"./joinclause":84,"events":174,"inherits":56,"lodash":135}],83:[function(require,module,exports){
// Query Compiler
// -------

var _       = require('lodash');
var helpers = require('../helpers');
var Raw     = require('../raw');

// The "QueryCompiler" takes all of the query statements which have been
// gathered in the "QueryBuilder" and turns them into a properly formatted / bound
// query string.
function QueryCompiler(queryBuilder) {
  this.method      = queryBuilder._method || 'select';
  this.options     = queryBuilder._options;
  this.single      = queryBuilder._single;
  this.transacting = queryBuilder._transacting;
  this.grouped     = _.groupBy(queryBuilder._statements, 'grouping');
  this.tableName   = this.single.table ? this.formatter.wrap(this.single.table) : '';
}

// Collapse the builder into a single object
QueryCompiler.prototype.toSQL = function(method) {
  var val = this[method]();
  var defaults = {
    method: method,
    options: this.options && this.options.length > 0 ?
      _.extend.apply(_, this.options) : void 0,
    bindings: this.formatter.bindings
  };
  if (_.isString(val)) {
    val = {sql: val};
  }
  if (method === 'select' && this.single.as) {
    defaults.as = this.single.as;
  }
  return _.extend(defaults, val);
};

var components = [
  'columns', 'join', 'where', 'union', 'group',
  'having', 'order', 'limit', 'offset', 'lock'
];

// Compiles the `select` statement, or nested sub-selects
// by calling each of the component compilers, trimming out
// the empties, and returning a generated query string.
QueryCompiler.prototype.select = function() {
  var statements = [];
  for (var i = 0, l = components.length; i < l; i++) {
    var component = components[i];
    statements.push(this[component](this));
  }
  return _.compact(statements).join(' ');
};
QueryCompiler.prototype.first = QueryCompiler.prototype.select;
QueryCompiler.prototype.pluck = function() {
  return {
    sql: this.select(),
    pluck: this.single.pluck
  };
};

// Compiles an "insert" query, allowing for multiple
// inserts using a single query statement.
QueryCompiler.prototype.insert = function() {
  var sql = 'insert into ' + this.tableName + ' ';
  if (_.isEmpty(this.single.insert)) {
    sql += this._emptyInsertValue;
  } else {
    var insertData = this._prepInsert(this.single.insert);
    if (_.isString(insertData)) {
      sql += insertData;
    } else  {
      sql += '(' + this.formatter.columnize(insertData.columns) + ') values (' +
        _.map(insertData.values, this.formatter.parameterize, this.formatter).join('), (') + ')';
    }
  }
  return sql;
};

// Compiles the "update" query.
QueryCompiler.prototype.update = function() {
  obj = helpers.sortObject(obj);
  var vals = [];
  for (var i = 0; i < obj.length; i++) {
    var value = obj[i];
    vals.push(this.formatter.wrap(value[0]) + ' = ' + this.formatter.parameter(value[1]));
  }
  if (!_.isEmpty(ret)) this.returning(ret);
  return {
    grouping: 'update',
    columns: vals.join(', ')
  };
};

// Compiles the columns in the query, specifying if an item was distinct.
QueryCompiler.prototype.columns = function() {
  var distinct = false;
  if (this.onlyUnions()) return '';
  var columns = this.grouped.columns || [];
  var sql = [];
  if (columns) {
    for (var i = 0, l = columns.length; i < l; i++) {
      var stmt = columns[i];
      if (stmt.distinct) distinct = true;
      if (stmt.type === 'aggregate') {
        sql.push(this.aggregate(stmt));
      } else if (stmt.value && stmt.value.length > 0) {
        sql.push(this.formatter.columnize(stmt.value));
      }
    }
  }
  if (sql.length === 0) sql.push('*');
  return 'select ' + (distinct ? 'distinct ' : '') +
      (sql.join(', ') || '*') + (this.tableName ? ' from ' + this.tableName : '');
};

QueryCompiler.prototype.aggregate = function(stmt) {
  var val = stmt.value;
  var splitOn = val.toLowerCase().indexOf(' as ');
  // Allows us to speciy an alias for the aggregate types.
  if (splitOn !== -1) {
    var col = val.slice(0, splitOn);
    var alias = val.slice(splitOn + 4);
    return stmt.method + '(' + this.formatter.wrap(col) + ') as ' + this.formatter.wrap(alias);
  }
  return stmt.method + '(' + this.formatter.wrap(val) + ')';
};

// Compiles all each of the `join` clauses on the query,
// including any nested join queries.
QueryCompiler.prototype.join = function() {
  var joins = this.grouped.join;
  if (!joins) return '';
  var sql = [];
  for (var i = 0, l = joins.length; i < l; i++) {
    var stmt = joins[i];
    var str  = stmt.joinType + ' join ' + this.formatter.wrap(stmt.table);
    for (var i2 = 0, l2 = stmt.clauses.length; i2 < l2; i2++) {
      var clause = stmt.clauses[i2];
      if (i2 > 0) {
        str += ' ' + clause[1] + ' ';
      } else {
        str += ' on ';
      }
      str += this.formatter.wrap(clause[2]) + ' ' + this.formatter.operator(clause[3]) +
        ' ' + this.formatter.wrap(clause[4]);
    }
    sql.push(str);
  }
  return sql.length > 0 ? sql.join(' ') : '';
};

// Compiles all `where` statements on the query.
QueryCompiler.prototype.where = function() {
  var wheres = this.grouped.where;
  if (!wheres) return;
  var sql = [];
  sql[0] = 'where';
  for (var i = 0, l = wheres.length; i < l; i++) {
    var stmt = wheres[i];
    if (i !== 0) sql.push(stmt.bool);
    sql.push(this[stmt.type](stmt));
  }
  return sql.length > 1 ? sql.join(' ') : '';
};

QueryCompiler.prototype.group = function() {
  return this._groupsOrders('group');
};
QueryCompiler.prototype.order = function() {
  return this._groupsOrders('order');
};

// Compiles the `having` statements.
QueryCompiler.prototype.having = function() {
  var havings = this.grouped.having;
  if (!havings) return '';
  var sql = ['having'];
  for (var i = 0, l = havings.length; i < l; i++) {
    var str = '', s = havings[i];
    if (i !== 0) str = s.bool + ' ';
    if (s.type === 'havingBasic') {
      sql.push(str + this.formatter.columnize(s.column) + ' ' +
        this.formatter.operator(s.operator) + ' ' + this.formatter.parameter(s.value));
    } else {
      sql.push(str + this.formatter.checkRaw(s.value));
    }
  }
  return sql.length > 1 ? sql.join(' ') : '';
};

// Compile the "union" queries attached to the main query.
QueryCompiler.prototype.union = function() {
  var onlyUnions = this.onlyUnions();
  var unions = this.grouped.union;
  if (!unions) return '';
  var sql = '';
  for (var i = 0, l = unions.length; i < l; i++) {
    var union = unions[i];
    if (i > 0) sql += ' ';
    if (i > 0 || !onlyUnions) sql += union.clause + ' ';
    var statement = this.formatter.rawOrFn(union.value);
    if (statement) {
      if (union.wrap) sql += '(';
      sql += statement;
      if (union.wrap) sql += ')';
    }
  }
  return sql;
};

// If we haven't specified any columns or a `tableName`, we're assuming this
// is only being used for unions.
QueryCompiler.prototype.onlyUnions = function() {
  return (!this.grouped.columns && this.grouped.union && !this.tableName);
};

QueryCompiler.prototype.limit = function() {
  if (this.single.limit == void 0) return '';
  return 'limit ' + this.formatter.parameter(this.single.limit);
};

QueryCompiler.prototype.offset = function() {
  if (this.single.offset == void 0) return '';
  return 'offset ' + this.formatter.parameter(this.single.offset);
};

// Compiles a `delete` query.
QueryCompiler.prototype.del = function() {
  var wheres = this.where();
  return 'delete from ' + this.tableName +
    (wheres ? ' ' + wheres : '');
};

// Compiles a `truncate` query.
QueryCompiler.prototype.truncate = function() {
  return 'truncate ' + this.tableName;
};

// Compiles the "locks".
QueryCompiler.prototype.lock = function() {
  if (this.single.lock) {
    if (!this.transacting) {
      helpers.warn('You are attempting to perform a "lock" command outside of a transaction.');
    } else {
      return this[this.single.lock]();
    }
  }
};

// Compile the "counter".
QueryCompiler.prototype.counter = function() {
  var counter = this.single.counter;
  var toUpdate = {};
  toUpdate[counter.column] = new Raw(this.formatter.wrap(counter.column) +
    ' ' + (counter.symbol || '+') +
    ' ' + counter.amount);
  this.single.update = toUpdate;
  return this.update();
};

// Compiles the `order by` statements.
QueryCompiler.prototype._groupsOrders = function(type) {
  var items = this.grouped[type];
  if (!items) return '';
  var sql = [];
  for (var i = 0, l = items.length; i < l; i++) {
    var str, item = items[i];
    if (item.value instanceof Raw) {
      str = this.formatter.checkRaw(item.value);
    } else {
      str = this.formatter.columnize(item.value);
      if (type === 'order') {
        str += ' ' + this.formatter.direction(item.direction);
      }
    }
    sql.push(str);
  }
  return sql.length > 0 ? type + ' by ' + sql.join(', ') : '';
};

// Where Clause
// ------

QueryCompiler.prototype.whereIn = function(statement) {
  if (_.isArray(statement.column)) return this.multiWhereIn(statement);
  return this.formatter.wrap(statement.column) + ' ' + this._not(statement, 'in ') +
    this.wrap(this.formatter.parameterize(statement.value));
};

QueryCompiler.prototype.multiWhereIn = function(statement) {
  return '(' + _.map(statement.column, this.formatter.wrap, this.formatter) + ') ' +
    this._not(statement, 'in ') + '((' +
    _.map(statement.value, this.formatter.parameterize, this.formatter).join('),(') + '))';
};

QueryCompiler.prototype.whereNull = function(statement) {
  return this.formatter.wrap(statement.column) + ' is ' + this._not(statement, 'null');
};

// Compiles a basic "where" clause.
QueryCompiler.prototype.whereBasic = function(statement) {
  return this.formatter.wrap(statement.column) + ' ' +
    this.formatter.operator(statement.operator) + ' ' +
    this.formatter.parameter(statement.value);
};

QueryCompiler.prototype.whereExists = function(statement) {
  return this._not(statement, 'exists') + ' (' + this.formatter.rawOrFn(statement.value) + ')';
};

QueryCompiler.prototype.whereWrapped = function(statement) {
  return '(' + this.formatter.rawOrFn(statement.value, 'where').slice(6) + ')';
};

QueryCompiler.prototype.whereBetween = function(statement) {
  return this.formatter.wrap(statement.column) + ' ' + this._not(statement, 'between') + ' ' +
    _.map(statement.value, this.formatter.parameter, this.formatter).join(' and ');
};

// Compiles a "whereRaw" query.
QueryCompiler.prototype.whereRaw = function(statement) {
  return this.formatter.checkRaw(statement.value);
};

QueryCompiler.prototype.wrap = function(str) {
  if (str.charAt(0) !== '(') return '(' + str + ')';
  return str;
};

// Determines whether to add a "not" prefix to the where clause.
QueryCompiler.prototype._not = function(statement, str) {
  if (statement.not) return 'not ' + str;
  return str;
};

// "Preps" the insert.
QueryCompiler.prototype._prepInsert = function(data) {
  var isRaw = this.formatter.rawOrFn(data);
  if (isRaw) return isRaw;
  var values = [];
  var columns, colList;
  if (!_.isArray(data)) data = data ? [data] : [];
  for (var i = 0, l = data.length; i<l; i++) {
    var sorted = helpers.sortObject(data[i]);
    columns = _.pluck(sorted, 0);
    colList = colList || columns;
    if (!_.isEqual(columns, colList)) {
      return this._prepInsert(this._normalizeInsert(data));
    }
    values.push(_.pluck(sorted, 1));
  }
  return {
    columns: columns,
    values: values
  };
};

// If we are running an insert with variable object keys, we need to normalize
// for the missing keys, presumably setting the values to undefined.
QueryCompiler.prototype._normalizeInsert = function(data) {
  if (!_.isArray(data)) return _.clone(data);
  var defaultObj = _.reduce(_.union.apply(_, _.map(data, function(val) {
    return _.keys(val);
  })), function(memo, key) {
    memo[key] = void 0;
    return memo;
  }, {});
  return _.map(data, function(row) { return _.defaults(row, defaultObj); });
};

// "Preps" the update.
QueryCompiler.prototype._prepUpdate = function(data) {
  var vals = [];
  var sorted = helpers.sortObject(data);
  for (var i = 0, l = sorted.length; i < l; i++) {
    vals.push(this.formatter.wrap(sorted[i][0]) + ' = ' + this.formatter.parameter(sorted[i][1]));
  }
  return vals;
};

module.exports = QueryCompiler;

},{"../helpers":76,"../raw":86,"lodash":135}],84:[function(require,module,exports){
// JoinClause
// -------

// The "JoinClause" is an object holding any necessary info about a join,
// including the type, and any associated tables & columns being joined.
function JoinClause(table, type) {
  this.table    = table;
  this.joinType = type;
  this.clauses  = [];
  this.and = this;
}

JoinClause.prototype.grouping = 'join';

// Adds an "on" clause to the current join object.
JoinClause.prototype.on = function(first, operator, second) {
  if (arguments.length === 2) {
    data = ['on', this._bool(), first, '=', operator];
  } else {
    data = ['on', this._bool(), first, operator, second];
  }
  this.clauses.push(data);
  return this;
};

// Adds an "and on" clause to the current join object.
JoinClause.prototype.andOn = function() {
  return this.on.apply(this, arguments);
};

// Adds an "or on" clause to the current join object.
JoinClause.prototype.orOn = function(first, operator, second) {
  return this._bool('or').on.apply(this, arguments);
};

// Explicitly set the type of join, useful within a function when creating a grouped join.
JoinClause.prototype.type = function(type) {
  this.joinType = type;
  return this;
};

JoinClause.prototype._bool = function(bool) {
  if (arguments.length === 1) {
    this._boolFlag = bool;
    return this;
  }
  var ret = this._boolFlag || 'and';
  this._boolFlag = 'and';
  return ret;
};

Object.defineProperty(JoinClause.prototype, 'or', {
  get: function () {
    return this._bool('or');
  }
});

module.exports = JoinClause;
},{}],85:[function(require,module,exports){
// All properties we can use to start a query chain
// from the `knex` object, e.g. `knex.select('*').from(...`
module.exports = [
  'select',
  'as',
  'columns',
  'column',
  'from',
  'into',
  'table',
  'distinct',
  'join',
  'innerJoin',
  'leftJoin',
  'leftOuterJoin',
  'rightJoin',
  'rightOuterJoin',
  'outerJoin',
  'fullOuterJoin',
  'crossJoin',
  'where',
  'andWhere',
  'orWhere',
  'whereRaw',
  'whereWrapped',
  'orWhereRaw',
  'whereExists',
  'orWhereExists',
  'whereNotExists',
  'orWhereNotExists',
  'whereIn',
  'orWhereIn',
  'whereNotIn',
  'orWhereNotIn',
  'whereNull',
  'orWhereNull',
  'whereNotNull',
  'orWhereNotNull',
  'whereBetween',
  'whereNotBetween',
  'orWhereBetween',
  'orWhereNotBetween',
  'groupBy',
  'groupByRaw',
  'orderBy',
  'orderByRaw',
  'union',
  'unionAll',
  'having',
  'havingRaw',
  'orHaving',
  'orHavingRaw',
  'offset',
  'limit',
  'count',
  'min',
  'max',
  'sum',
  'avg',
  'increment',
  'decrement',
  'first',
  'debug',
  'pluck',
  'insert',
  'update',
  'returning',
  'del',
  'delete',
  'truncate',
  'transacting',
  'connection'
];
},{}],86:[function(require,module,exports){
// Raw
// -------
var _ = require('lodash');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;

function Raw(sql, bindings) {
  if (sql && sql.toSQL) {
    var output = sql.toSQL();
    sql = output.sql;
    bindings = output.bindings;
  }
  this.sql = sql;
  this.bindings = _.isArray(bindings) ? bindings :
    bindings ? [bindings] : [];
  this._debug = void 0;
  this._transacting = void 0;
}
inherits(Raw, EventEmitter);

// Wraps the current sql with `before` and `after`.
Raw.prototype.wrap = function(before, after) {
  this.sql = before + this.sql + after;
  return this;
};

// Calls `toString` on the Knex object.
Raw.prototype.toString = function() {
  return this.toQuery();
};

// Returns the raw sql for the query.
Raw.prototype.toSQL = function() {
  return {
    sql: this.sql,
    method: 'raw',
    bindings: this.bindings
  };
};

// Allow the `Raw` object to be utilized with full access to the relevant
// promise API.
require('./interface')(Raw);

module.exports = Raw;
},{"./interface":77,"events":174,"inherits":56,"lodash":135}],87:[function(require,module,exports){
var _            = require('lodash');
var Promise      = require('./promise');

// The "Runner" constructor takes a "builder" (query, schema, or raw)
// and runs through each of the query statements, calling any additional
// "output" method provided alongside the query and bindings.
function Runner(builder) {
  this.builder = builder;
  this.queries = [];

  // The "connection" object is set on the runner when
  // "run" is called.
  this.connection = void 0;
}

Runner.prototype._beginTransaction = 'begin;';
Runner.prototype._commitTransaction = 'commit;';
Runner.prototype._rollbackTransaction = 'rollback;';

// "Run" the target, calling "toSQL" on the builder, returning
// an object or array of queries to run, each of which are run on
// a single connection.
Runner.prototype.run = Promise.method(function() {
  if (this.builder._transacting) {
    return this.transactionQuery();
  }
  return Promise.bind(this)
    .then(this.ensureConnection)
    .then(function(connection) {
      this.connection = connection;

      // Emit a "start" event on both the builder and the client,
      // allowing us to listen in on any events. We fire on the "client"
      // before building the SQL, and on the builder after building the SQL
      // in case we want to determine at how long it actually
      // took to build the query.
      this.client.emit('start', this.builder);
      var sql = this.builder.toSQL();
      this.builder.emit('start', this.builder);

      if (_.isArray(sql)) {
        return this.queryArray(sql);
      }
      return this.query(sql);
    })

    // If there are any "error" listeners, we fire an error event
    // and then re-throw the error to be eventually handled by
    // the promise chain. Useful if you're wrapping in a custom `Promise`.
    .catch(function(err) {
      if (this.builder._events && this.builder._events.error) {
        this.builder.emit('error', err);
      }
      throw err;
    })

    // Fire a single "end" event on the builder when
    // all queries have successfully completed.
    .tap(function() {
      this.builder.emit('end');
    })
    .finally(this.cleanupConnection);
});

// Stream the result set, by passing through to the dialect's streaming
// capabilities. If the options are
var PassThrough;
Runner.prototype.stream = function(options, handler) {
  // If we specify stream(handler).then(...
  if (arguments.length === 1) {
    if (_.isFunction(options)) {
      handler = options;
      options = {};
    }
  }

  // Determines whether we emit an error or throw here.
  var hasHandler = _.isFunction(handler);

  // Lazy-load the "PassThrough" dependency.
  PassThrough = PassThrough || require('readable-stream').PassThrough;
  var stream  = new PassThrough({objectMode: true});
  var promise = Promise.bind(this)
    .then(this.ensureConnection)
    .then(function(connection) {
      this.connection = connection;
      var sql = this.builder.toSQL();
      var err = new Error('The stream may only be used with a single query statement.');
      if (_.isArray(sql)) {
        if (hasHandler) throw err;
        stream.emit('error', err);
      }
      return sql;
    }).then(function(sql) {
      return this._stream(sql, stream, options);
    }).finally(this.cleanupConnection);

  // If a function is passed to handle the stream, send the stream
  // there and return the promise, otherwise just return the stream
  // and the promise will take care of itsself.
  if (hasHandler) {
    handler(stream);
    return promise;
  }
  return stream;
};

// Allow you to pipe the stream to a writable stream.
Runner.prototype.pipe = function(writable) {
  return this.stream().pipe(writable);
};

// "Runs" a query, returning a promise. All queries specified by the builder are guaranteed
// to run in sequence, and on the same connection, especially helpful when schema building
// and dealing with foreign key constraints, etc.
Runner.prototype.query = Promise.method(function(obj) {
  obj.__cid = this.connection.__cid;
  this.builder.emit('query', obj);
  this.client.emit('query', obj);
  return this._query(obj).bind(this).then(this.processResponse);
});

// In the case of the "schema builder" we call `queryArray`, which runs each
// of the queries in sequence.
Runner.prototype.queryArray = Promise.method(function(queries) {
  return queries.length === 1 ? this.query(queries[0]) : Promise.bind(this)
    .thenReturn(queries)
    .reduce(function(memo, query) {
      return this.query(query).then(function(resp) {
        memo.push(resp);
        return memo;
      });
    }, []);
});

// Check whether there's a transaction flag, and that it has a connection.
Runner.prototype.ensureConnection = Promise.method(function() {
  if (this.builder._connection) {
    return this.builder._connection;
  }
  return this.client.acquireConnection();
});

// "Debug" the query being run.
Runner.prototype.debug = function(obj) {
  console.dir(_.extend({__cid: this.connection.__cid}, obj));
};

// Check whether we're "debugging", based on either calling `debug` on the query.
Runner.prototype.isDebugging = function() {
  return (this.client.isDebugging === true || this.builder._debug === true);
};

// Transaction Methods:
// -------

// Run the transaction on the correct "runner" instance.
Runner.prototype.transactionQuery = Promise.method(function() {
  var runner = this.builder._transacting._runner;
  if (!(runner instanceof Runner)) {
    throw new Error('Invalid transaction object provided.');
  }
  var sql = this.builder.toSQL();
  if (_.isArray(sql)) {
    return runner.queryArray(sql);
  }
  return runner.query(sql);
});

// Begins a transaction statement on the instance,
// resolving with the connection of the current transaction.
Runner.prototype.startTransaction = Promise.method(function() {
  return Promise.bind(this)
    .then(this.ensureConnection)
    .then(function(connection) {
      this.connection  = connection;
      this.transaction = true;
      return this.query({sql: this._beginTransaction});
    }).thenReturn(this);
});

// Finishes the transaction statement and handles disposing of the connection,
// resolving / rejecting the transaction's promise, and ensuring the transaction object's
// `_runner` property is `null`'ed out so it cannot continue to be used.
Runner.prototype.finishTransaction = Promise.method(function(action, containerObject, msg) {
  var query, dfd = containerObject.__dfd__;

  // Run the query to commit / rollback the transaction.
  switch (action) {
    case 0:
      query = this.commitTransaction();
      break;
    case 1:
      query = this.rollbackTransaction();
      break;
  }

  return query.then(function(resp) {
    msg = (msg === void 0) ? resp : msg;
    switch (action) {
      case 0:
        dfd.fulfill(msg);
        break;
      case 1:
        dfd.reject(msg);
        break;
    }

  // If there was a problem committing the transaction,
  // reject the transaction block (to reject the entire transaction block),
  // then re-throw the error for any promises chained off the commit.
  }).catch(function(e) {
    dfd.reject(e);
    throw e;
  }).bind(this).finally(function() {

    // Kill the "_runner" object on the containerObject,
    // so it's not possible to continue using the transaction object.
    containerObject._runner = void 0;

    return this.cleanupConnection();
  });
});

Runner.prototype.commitTransaction = function() {
  return this.query({sql: this._commitTransaction});
};
Runner.prototype.rollbackTransaction = function() {
  return this.query({sql: this._rollbackTransaction});
};

// Cleanup the connection as necessary, if the `_connection` was
// explicitly set on the query we don't need to do anything here,
// otherwise we
Runner.prototype.cleanupConnection = Promise.method(function() {
  if (!this.builder._connection) {
    return this.client.releaseConnection(this.connection);
  }
});

module.exports = Runner;
},{"./promise":81,"lodash":135,"readable-stream":145}],88:[function(require,module,exports){
var _            = require('lodash');
var inherits     = require('inherits');
var EventEmitter = require('events').EventEmitter;

// Constructor for the builder instance, typically called from
// `knex.builder`, accepting the current `knex` instance,
// and pulling out the `client` and `grammar` from the current
// knex instance.
function SchemaBuilder() {
  this._sequence = [];
  this._errors = [];
}
inherits(SchemaBuilder, EventEmitter);

// Each of the schema builder methods just add to the
// "_sequence" array for consistency.
_.each([
  'createTable', 'table', 'alterTable', 'hasTable', 'hasColumn',
  'dropTable', 'renameTable', 'dropTableIfExists', 'raw', 'debug'
], function(method) {
  SchemaBuilder.prototype[method] = function() {
    if (method === 'table') method = 'alterTable';
    this._sequence.push({
      method: method,
      args: _.toArray(arguments)
    });
    return this;
  };
});

SchemaBuilder.prototype.toString = function() {
  return this.toQuery();
};

SchemaBuilder.prototype.toSQL = function() {
  var SchemaCompiler = this.client.SchemaCompiler;
  return new SchemaCompiler(this).toSQL();
};

require('../interface')(SchemaBuilder);

module.exports = SchemaBuilder;
},{"../interface":77,"events":174,"inherits":56,"lodash":135}],89:[function(require,module,exports){
var _ = require('lodash');

// Alias a few methods for clarity when processing.
var columnAlias = {
  'float'  : 'floating',
  'enum'   : 'enu',
  'boolean': 'bool',
  'string' : 'varchar',
  'bigint' : 'bigInteger'
};

// The chainable interface off the original "column" method.
function ColumnBuilder(tableBuilder, type, args) {
  this._single       = {};
  this._modifiers    = {};
  this._statements   = [];
  this._type         = columnAlias[type] || type;
  this._args         = args;
  this._tableBuilder = tableBuilder;

  // If we're altering the table, extend the object
  // with the available "alter" methods.
  if (tableBuilder._method === 'alter') {
    _.extend(this, AlterMethods);
  }
}

var AlterMethods = {};

// Specify that the column is to be dropped. This takes precedence
// over all other rules for the column.
AlterMethods.drop = function() {
  this._single.drop = true;
  return this;
};

// Specify the "type" that we're looking to set the
// Knex takes no responsibility for any data-loss that may
// occur when changing data types.
AlterMethods.alterType = function(type) {
  this._statements.push({
    grouping: 'alterType',
    value: type
  });
  return this;
};

// All of the modifier methods that can be used to modify the current query.
var modifiers = [
  'defaultsTo', 'defaultTo', 'unsigned',
  'nullable', 'notNull', 'notNullable',
  'after', 'comment'
];

// Aliases for convenience.
var aliasMethod = {
  defaultsTo: 'defaultTo',
  notNull: 'notNullable'
};

// If we call any of the modifiers (index or otherwise) on the chainable, we pretend
// as though we're calling `table.method(column)` directly.
_.each(modifiers, function(method) {
  ColumnBuilder.prototype[method] = function() {
    if (aliasMethod[method]) {
      method = aliasMethod[method];
    }
    if (method === 'notNullable') return this.nullable(false);
    this._modifiers[method] = _.toArray(arguments);
    return this;
  };
});

_.each(['index', 'primary', 'unique'], function(method) {
  ColumnBuilder.prototype[method] = function() {
    if (this._type.toLowerCase().indexOf('increments') === -1) {
      this._tableBuilder[method].apply(this._tableBuilder,
        [this._args[0]].concat(_.toArray(arguments)));
    }
    return this;
  };
});

// Specify that the current column "references" a column,
// which may be tableName.column or just "column"
ColumnBuilder.prototype.references = function(value) {
  return this._tableBuilder.foreign.call(this._tableBuilder, this._args[0], this)
    ._columnBuilder(this)
    .references(value);
};

module.exports = ColumnBuilder;
},{"lodash":135}],90:[function(require,module,exports){
// Column Compiler
// Used for designating column definitions
// during the table "create" / "alter" statements.
// -------
var _ = require('lodash');
var Raw = require('../raw');

function ColumnCompiler(tableCompiler, columnBuilder) {
  this.tableCompiler = tableCompiler;
  this.columnBuilder = columnBuilder;
  this.args = columnBuilder._args;
  this.type = columnBuilder._type.toLowerCase();
  this.grouped = _.groupBy(columnBuilder._statements, 'grouping');
  this.modified = columnBuilder._modifiers;
  this.isIncrements = (this.type.indexOf('increments') !== -1);
  this.initCompiler();
}

// To convert to sql, we first go through and build the
// column as it would be in the insert statement
ColumnCompiler.prototype.toSQL = function() {
  this.pushQuery(this.compileColumn());
  if (this.sequence.additional) {
    this.sequence = this.sequence.concat(this.sequence.additional);
  }
  return this.sequence;
};

// Compiles a column.
ColumnCompiler.prototype.compileColumn = function() {
  return this.formatter.wrap(this.getColumnName()) + ' ' +
    this.getColumnType() + this.getModifiers();
};

// Assumes the autoincrementing key is named `id` if not otherwise specified.
ColumnCompiler.prototype.getColumnName = function() {
  var value = _.first(this.args);
  if (value) return value;
  if (this.isIncrements) {
    return 'id';
  } else {
    throw new Error('You did not specify a column name for the ' + this.type + 'column.');
  }
};

ColumnCompiler.prototype.getColumnType = function() {
  var type = this[this.type];
  return _.isFunction(type) ? type.apply(this, _.rest(this.args)) : type;
};

ColumnCompiler.prototype.getModifiers = function() {
  var modifiers = [];
  if (this.type.indexOf('increments') === -1) {
    for (var i = 0, l = this.modifiers.length; i < l; i++) {
      var modifier = this.modifiers[i];
      if (_.has(this.modified, modifier)) {
        var val = this[modifier].apply(this, this.modified[modifier]);
        if (val) modifiers.push(val);
      }
    }
  }
  return modifiers.length > 0 ? ' ' + modifiers.join(' ') : '';
};

// Types
// ------

ColumnCompiler.prototype.increments = 'integer not null primary key autoincrement';
ColumnCompiler.prototype.bigincrements = 'integer not null primary key autoincrement';
ColumnCompiler.prototype.integer =
ColumnCompiler.prototype.smallint =
ColumnCompiler.prototype.mediumint = 'integer';
ColumnCompiler.prototype.biginteger = 'bigint';
ColumnCompiler.prototype.varchar = function(length) {
  return 'varchar(' + this._num(length, 255) + ')';
};
ColumnCompiler.prototype.text = 'text';
ColumnCompiler.prototype.tinyint = 'tinyint';
ColumnCompiler.prototype.floating = function(precision, scale) {
  return 'float(' + this._num(precision, 8) + ', ' + this._num(scale, 2) + ')';
};
ColumnCompiler.prototype.decimal = function(precision, scale) {
  return 'decimal(' + this._num(precision, 8) + ', ' + this._num(scale, 2) + ')';
};
ColumnCompiler.prototype.binary = 'blob';
ColumnCompiler.prototype.bool = 'boolean';
ColumnCompiler.prototype.date = 'date';
ColumnCompiler.prototype.datetime = 'datetime';
ColumnCompiler.prototype.time = 'time';
ColumnCompiler.prototype.timestamp = 'timestamp';
ColumnCompiler.prototype.enu = 'varchar';

ColumnCompiler.prototype.bit =
ColumnCompiler.prototype.json = 'text';

ColumnCompiler.prototype.uuid = 'char(36)';
ColumnCompiler.prototype.specifictype = function(type) {
  return type;
};

// Modifiers
// -------

ColumnCompiler.prototype.nullable = function(nullable) {
  return nullable === false ? 'not null' : 'null';
};
ColumnCompiler.prototype.notNullable = function() {
  return this.nullable(false);
};
ColumnCompiler.prototype.defaultTo = function(value) {
  if (value === void 0) {
    return '';
  } else if (value instanceof Raw) {
    value = value.toQuery();
  } else if (this.type === 'bool') {
    if (value === 'false') value = 0;
    value = "'" + (value ? 1 : 0) + "'";
  } else if (this.type === 'json' && _.isObject(value)) {
    return JSON.stringify(value);
  } else {
    value = "'" + value + "'";
  }
  return 'default ' + value;
};
ColumnCompiler.prototype._num = function(val, fallback) {
  if (val == null) return fallback;
  var number = parseInt(val, 10);
  return isNaN(number) ? fallback : number;
};

module.exports = ColumnCompiler;
},{"../raw":86,"lodash":135}],91:[function(require,module,exports){
// The "SchemaCompiler" takes all of the query statements which have been
// gathered in the "SchemaBuilder" and turns them into an array of
// properly formatted / bound query strings.
function SchemaCompiler(builder) {
  this.builder = builder;
  this.initCompiler();
}

function buildTable(type) {
  return function(tableName, fn) {
    var TableBuilder = this.client.TableBuilder;
    var sql = new TableBuilder(type, tableName, fn).toSQL();
    for (var i = 0, l = sql.length; i < l; i++) {
      this.sequence.push(sql[i]);
    }
  };
}

SchemaCompiler.prototype.createTable = buildTable('create');
SchemaCompiler.prototype.alterTable  = buildTable('alter');
SchemaCompiler.prototype.dropTable = function(tableName) {
  this.pushQuery('drop table ' + this.formatter.wrap(tableName));
};
SchemaCompiler.prototype.dropTableIfExists = function(tableName) {
  this.pushQuery('drop table if exists ' + this.formatter.wrap(tableName));
};
SchemaCompiler.prototype.toSQL = function() {
  var sequence = this.builder._sequence;
  for (var i = 0, l = sequence.length; i < l; i++) {
    var query = sequence[i];
    this[query.method].apply(this, query.args);
  }
  return this.sequence;
};
SchemaCompiler.prototype.raw = function(sql, bindings) {
  this.sequence.push(new this.client.Raw(sql, bindings).toSQL());
};

module.exports = SchemaCompiler;
},{}],92:[function(require,module,exports){
var _ = require('lodash');

var Builder = require('./builder');
var Compiler = require('./compiler');
var TableBuilder = require('./tablebuilder');
var TableCompiler = require('./tablecompiler');
var ColumnBuilder = require('./columnbuilder');
var ColumnCompiler = require('./columncompiler');

// Initialize the compiler.
Compiler.prototype.initCompiler =
TableCompiler.prototype.initCompiler =
ColumnCompiler.prototype.initCompiler = function() {
  this.formatter = new this.Formatter();
  this.sequence  = [];
};

// Push a new query onto the compiled "sequence" stack,
// creating a new formatter, returning the compiler.
Compiler.prototype.pushQuery =
TableCompiler.prototype.pushQuery =
ColumnCompiler.prototype.pushQuery = function(query) {
  if (!query) return;
  if (_.isString(query)) {
    query = {sql: query};
  } else {
    query = query;
  }
  if (!query.bindings) {
    query.bindings = this.formatter.bindings;
  }
  this.sequence.push(query);
  this.formatter = new this.Formatter();
};

// Used in cases where we need to push some additional column specific statements.
ColumnCompiler.prototype.pushAdditional = function(fn) {
  var child = new this.constructor(this.tableCompiler, this.columnBuilder);
  fn.call(child, _.rest(arguments));
  this.sequence.additional = (this.sequence.additional || []).concat(child.sequence);
};

module.exports = {
  Builder: Builder,
  Compiler: Compiler,
  TableBuilder: TableBuilder,
  TableCompiler: TableCompiler,
  ColumnBuilder: ColumnBuilder,
  ColumnCompiler: ColumnCompiler
};
},{"./builder":88,"./columnbuilder":89,"./columncompiler":90,"./compiler":91,"./tablebuilder":94,"./tablecompiler":95,"lodash":135}],93:[function(require,module,exports){
module.exports = ['table', 'createTable', 'editTable', 'dropTable',
  'dropTableIfExists',  'renameTable', 'hasTable', 'hasColumn', 'raw', 'debug'];
},{}],94:[function(require,module,exports){
// TableBuilder

// Takes the function passed to the "createTable" or "table/editTable"
// functions and calls it with the "TableBuilder" as both the context and
// the first argument. Inside this function we can specify what happens to the
// method, pushing everything we want to do onto the "allStatements" array,
// which is then compiled into sql.
// ------
var _ = require('lodash');

function TableBuilder(method, tableName, fn) {
  this._fn         = fn;
  this._method     = method;
  this._tableName  = tableName;
  this._statements = [];
  this._single     = {};
}

// Convert the current tableBuilder object "toSQL"
// giving us additional methods if we're altering
// rather than creating the table.
TableBuilder.prototype.toSQL = function() {
  if (this._method === 'alter') {
    _.extend(this, AlterMethods);
  }
  this._fn.call(this, this);
  var TableCompiler = this.client.TableCompiler;
  return new TableCompiler(this).toSQL();
};

var AlterMethods = {

  // Renames the current column `from` the current
  // TODO: this.column(from).rename(to)
  renameColumn: function(from, to) {
    this._statements.push({
      grouping: 'alterTable',
      method: 'renameColumn',
      args: [from, to]
    });
    return this;
  },

  dropTimestamps: function() {
    return this.dropColumns(['created_at', 'updated_at']);
  }

  // TODO: changeType
};

// Drop a column from the current table.
// TODO: Enable this.column(columnName).drop();
AlterMethods.dropColumn =
AlterMethods.dropColumns = function() {
  this._statements.push({
    grouping: 'alterTable',
    method: 'dropColumn',
    args: _.toArray(arguments)
  });
  return this;
};

_.each([

  // Each of the index methods can be called individually, with the
  // column name to be used, e.g. table.unique('column').
  'index', 'primary', 'unique',

  // Key specific
  'dropPrimary', 'dropUnique', 'dropIndex', 'dropForeign'

], function(method) {
  TableBuilder.prototype[method] = function() {
    this._statements.push({
      grouping: 'alterTable',
      method: method,
      args: _.toArray(arguments)
    });
    return this;
  };
});

// Warn if we're not in MySQL, since that's the only time these
// three are supported.
var specialMethods = ['engine', 'charset', 'collate'];
_.each(specialMethods, function(method) {
  TableBuilder.prototype[method] = function(value) {
    if (false) {
      warn('Knex only supports ' + method + ' statement with mysql.');
    } if (this.__method === 'alter') {
      warn('Knex does not support altering the ' + method + ' outside of the create table, please use knex.raw statement.');
    }
    this._single[method] = value;
  };
});

// Each of the column types that we can add, we create a new ColumnBuilder
// instance and push it onto the statements array.
var columnTypes = [

  // Numeric
  'tinyint',
  'smallint',
  'mediumint',
  'int',
  'bigint',
  'decimal',
  'float',
  'double',
  'real',
  'bit',
  'boolean',
  'serial',

  // Date / Time
  'date',
  'datetime',
  'timestamp',
  'time',
  'year',

  // String
  'char',
  'varchar',
  'tinytext',
  'tinyText',
  'text',
  'mediumtext',
  'mediumText',
  'longtext',
  'longText',
  'binary',
  'varbinary',
  'tinyblob',
  'tinyBlob',
  'mediumblob',
  'mediumBlob',
  'blob',
  'longblob',
  'longBlob',
  'enum',
  'set',

  // Increments, Aliases, and Additional
  'bool',
  'dateTime',
  'increments',
  'bigincrements',
  'bigIncrements',
  'integer',
  'biginteger',
  'bigInteger',
  'string',
  'timestamps',
  'json',
  'uuid',
  'enu',
  'specificType'
];

// For each of the column methods, create a new "ColumnBuilder" interface,
// push it onto the "allStatements" stack, and then return the interface,
// with which we can add indexes, etc.
_.each(columnTypes, function(type) {
  TableBuilder.prototype[type] = function() {
    var args = _.toArray(arguments);

    // The "timestamps" call is really a compound call to set the
    // `created_at` and `updated_at` columns.
    if (type === 'timestamps') {
      if (args[0] === true) {
        this.timestamp('created_at');
        this.timestamp('updated_at');
      } else {
        this.datetime('created_at');
        this.datetime('updated_at');
      }
      return;
    }
    var ColumnBuilder = this.client.ColumnBuilder;
    var builder       = new ColumnBuilder(this, type, args);

    this._statements.push({
      grouping: 'columns',
      builder: builder
    });
    return builder;
  };

});

// Set the comment value for a table, they're only allowed to be called
// once per table.
TableBuilder.prototype.comment = function(value) {
  this._single.comment = value;
};

// Set a foreign key on the table, calling
// `table.foreign('column_name').references('column').on('table').onDelete()...
// Also called from the ColumnBuilder context when chaining.
TableBuilder.prototype.foreign = function(column) {
  var foreignData = {column: column};
  this._statements.push({
    grouping: 'alterTable',
    method: 'foreign',
    args: [foreignData]
  });
  var returnObj = {
    references: function(tableColumn) {
      var pieces;
      if (_.isString(tableColumn)) {
        pieces = tableColumn.split('.');
      }
      if (!pieces || pieces.length === 1) {
        foreignData.references = pieces ? pieces[0] : tableColumn;
        return {
          on: function(tableName) {
            foreignData.inTable = tableName;
            return returnObj;
          },
          inTable: function() {
            return this.on.apply(this, arguments);
          }
        };
      }
      foreignData.inTable = pieces[0];
      foreignData.references = pieces[1];
      return returnObj;
    },
    onUpdate: function(statement) {
      foreignData.onUpdate = statement;
      return returnObj;
    },
    onDelete: function(statement) {
      foreignData.onDelete = statement;
      return returnObj;
    },
    _columnBuilder: function(builder) {
      _.extend(builder, returnObj);
      returnObj = builder;
      return builder;
    }
  };
  return returnObj;
};

module.exports = TableBuilder;
},{"lodash":135}],95:[function(require,module,exports){
// Table Compiler
// -------
var _ = require('lodash');

var helpers = require('../helpers');

function TableCompiler(tableBuilder) {
  this.method         = tableBuilder._method;
  this.tableNameRaw   = tableBuilder._tableName;
  this.single         = tableBuilder._single;
  this.grouped        = _.groupBy(tableBuilder._statements, 'grouping');
  this.initCompiler();
}

// Convert the tableCompiler toSQL
TableCompiler.prototype.toSQL = function() {
  this[this.method]();
  return this.sequence;
};

// Column Compilation
// -------

// If this is a table "creation", we need to first run through all
// of the columns to build them into a single string,
// and then run through anything else and push it to the query sequence.
TableCompiler.prototype.create = function() {
  var columns = this.getColumns();
  var columnTypes = this.getColumnTypes(columns);
  this.createQuery(columnTypes);
  this.columnQueries(columns);
  delete this.single.comment;
  this.alterTable();
};

// If we're altering the table, we need to one-by-one
// go through and handle each of the queries associated
// with altering the table's schema.
TableCompiler.prototype.alter = function() {
  var columns = this.getColumns();
  var columnTypes = this.getColumnTypes(columns);
  this.addColumns(columnTypes);
  this.columnQueries(columns);
  this.alterTable();
};

TableCompiler.prototype.foreign = function(foreignData) {
  if (foreignData.inTable && foreignData.references) {
    var keyName    = this._indexCommand('foreign', this.tableNameRaw, foreignData.column);
    var column     = this.formatter.columnize(foreignData.column);
    var references = this.formatter.columnize(foreignData.references);
    var inTable    = this.formatter.wrap(foreignData.inTable);
    var onUpdate   = foreignData.onUpdate ? ' on update ' + foreignData.onUpdate : '';
    var onDelete   = foreignData.onDelete ? ' on delete ' + foreignData.onDelete : '';
    this.pushQuery('alter table ' + this.tableName() + ' add constraint ' + keyName + ' ' +
      'foreign key (' + column + ') references ' + inTable + ' (' + references + ')' + onUpdate + onDelete);
  }
};

// Get all of the column sql & bindings individually for building the table queries.
TableCompiler.prototype.getColumnTypes = function(columns) {
  return _.reduce(_.map(columns, _.first), function(memo, column) {
    memo.sql.push(column.sql);
    memo.bindings.concat(column.bindings);
    return memo;
  }, {sql: [], bindings: []});
};

// Adds all of the additional queries from the "column"
TableCompiler.prototype.columnQueries = function(columns) {
  var queries = _.reduce(_.map(columns, _.rest), function(memo, column) {
    if (!_.isEmpty(column)) return memo.concat(column);
    return memo;
  }, []);
  for (var i = 0, l = queries.length; i < l; i++) {
    this.pushQuery(queries[i]);
  }
};

// Add a new column.
TableCompiler.prototype.addColumnsPrefix = 'add column ';

// All of the columns to "add" for the query
TableCompiler.prototype.addColumns = function(columns) {
  if (columns.sql.length > 0) {
    var columnSql = _.map(columns.sql, function(column) {
      return this.addColumnsPrefix + column;
    }, this);
    this.pushQuery({
      sql: 'alter table ' + this.tableName() + ' ' + columnSql.join(', '),
      bindings: columns.bindings
    });
  }
};

// Compile the columns as needed for the current create or alter table
TableCompiler.prototype.getColumns = function() {
  var compiledColumns = [], columns = this.grouped.columns || [];
  var ColumnCompiler = this.client.ColumnCompiler;
  for (var i = 0, l = columns.length; i < l; i++) {
    compiledColumns.push(new ColumnCompiler(this, columns[i].builder).toSQL());
  }
  return compiledColumns;
};

TableCompiler.prototype.tableName = function() {
  return this.formatter.wrap(this.tableNameRaw);
};

// Generate all of the alter column statements necessary for the query.
TableCompiler.prototype.alterTable = function() {
  var alterTable = this.grouped.alterTable || [];
  for (var i = 0, l = alterTable.length; i < l; i++) {
    var statement = alterTable[i];
    if (this[statement.method]) {
      this[statement.method].apply(this, statement.args);
    } else {
      console.error('Debug: ' + statement.method + ' does not exist');
    }
  }
  for (var item in this.single) {
    if (_.isFunction(this[item])) this[item](this.single[item]);
  }
};

// Drop the index on the current table.
TableCompiler.prototype.dropIndex = function(value) {
  this.pushQuery('drop index' + value);
};

// Drop the unique
TableCompiler.prototype.dropUnique =
TableCompiler.prototype.dropForeign = function() {
  throw new Error('Method implemented in the dialect driver');
};

TableCompiler.prototype.dropColumnPrefix = 'drop column ';
TableCompiler.prototype.dropColumn = function() {
  var columns = helpers.normalizeArr.apply(null, arguments);
  var drops = _.map(_.isArray(columns) ? columns : [columns], function(column) {
    return this.dropColumnPrefix + this.formatter.wrap(column);
  }, this);
  this.pushQuery('alter table ' + this.tableName() + ' ' + drops.join(', '));
};

// If no name was specified for this index, we will create one using a basic
// convention of the table name, followed by the columns, followed by an
// index type, such as primary or index, which makes the index unique.
TableCompiler.prototype._indexCommand = function(type, tableName, columns) {
  if (!_.isArray(columns)) columns = columns ? [columns] : [];
  var table = tableName.replace(/\.|-/g, '_');
  return (table + '_' + columns.join('_') + '_' + type).toLowerCase();
};

module.exports = TableCompiler;
},{"../helpers":76,"lodash":135}],96:[function(require,module,exports){
// Transaction
// -------
var Promise = require('./promise');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;

// Creates a new wrapper object for constructing a transaction.
// Called by the `knex.transaction`, which sets the correct client
// and handles the `container` object, passing along the correct
// `connection` to keep all of the transactions on the correct connection.
function Transaction(container) {
  this.container = container;
}
inherits(Transaction, EventEmitter);

// Build the knex instance passed around inside the transaction container.
// It can be used both as a fully functional knex instance, or assimilated
// into existing knex chains via the ".transacting" method call.
Transaction.prototype.containerObject = function(runner) {
  var Knex = require('../knex');

  // Create an entirely new knex instance just for this transaction
  var transactor = Knex.initialize({
    __client__     : this.client,
    __transactor__ : {_runner: runner}
  });

  // Remove the ability to start a transaction or destroy
  // the entire pool within a transaction.
  transactor.destroy = transactor.transaction = void 0;

  // Commits the transaction:
  transactor.commit = function(message) {
    runner.finishTransaction(0, transactor, message);
  };

  // Rolls back the transaction.
  transactor.rollback = function(error) {
    runner.finishTransaction(1, transactor, error);
  };

  transactor._runner = runner;

  return transactor;
};

Transaction.prototype.initiateDeferred = function(transactor) {

  // Initiate a deferred object, bound to the container object,
  // so we know when the transaction completes or fails
  // and can continue from there.
  var dfd = transactor.__dfd__ = Promise.pending();

  // Call the container with the transaction
  // commit & rollback objects.
  var result = this.container(transactor);

  // If we've returned a "thenable" from the transaction container,
  // and it's got the transaction object we're running for this, assume
  // the rollback and commit are chained to this object's success / failure.
  if (result && result.then && typeof result.then === 'function') {
    result.then(function(val) { transactor.commit(val); }).catch(function(err) { transactor.rollback(err); });
  }

  // Return the promise for the entire transaction.
  return dfd.promise;
};

// Allow the `Transaction` object to be utilized with full access to the relevant
// promise API.
require('./interface')(Transaction);

// Passed a `container` function, this method runs the current
// transaction, returning a promise.
Transaction.prototype.then = function(onFulfilled, onRejected) {
  var Runner = this.client.Runner;

  // Create a new "runner" object, passing the "runner"
  // object along, so we can easily keep track of every
  // query run on the current connection.
  return new Runner(this)
    .startTransaction()
    .bind(this)
    .then(this.containerObject)
    .then(this.initiateDeferred)
    .then(onFulfilled, onRejected)
    .bind();
};

module.exports = Transaction;
},{"../knex":57,"./interface":77,"./promise":81,"events":174,"inherits":56}],97:[function(require,module,exports){
module.exports = {

  pgBindings: function(sql) {
    var questionCount = 0;
    return sql.replace(/\?/g, function() {
      questionCount++;
      return '$' + questionCount;
    });
  }

};
},{}],98:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, Promise$_CreatePromiseArray, PromiseArray) {

var SomePromiseArray = require("./some_promise_array.js")(PromiseArray);
function Promise$_Any(promises, useBound) {
    var ret = Promise$_CreatePromiseArray(
        promises,
        SomePromiseArray,
        useBound === true && promises._isBound()
            ? promises._boundTo
            : void 0
   );
    var promise = ret.promise();
    if (promise.isRejected()) {
        return promise;
    }
    ret.setHowMany(1);
    ret.setUnwrap();
    ret.init();
    return promise;
}

Promise.any = function Promise$Any(promises) {
    return Promise$_Any(promises, false);
};

Promise.prototype.any = function Promise$any() {
    return Promise$_Any(this, true);
};

};

},{"./some_promise_array.js":129}],99:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var schedule = require("./schedule.js");
var Queue = require("./queue.js");
var errorObj = require("./util.js").errorObj;
var tryCatch1 = require("./util.js").tryCatch1;
var process = require("./global.js").process;

function Async() {
    this._isTickUsed = false;
    this._length = 0;
    this._lateBuffer = new Queue();
    this._functionBuffer = new Queue(25000 * 3);
    var self = this;
    this.consumeFunctionBuffer = function Async$consumeFunctionBuffer() {
        self._consumeFunctionBuffer();
    };
}

Async.prototype.haveItemsQueued = function Async$haveItemsQueued() {
    return this._length > 0;
};

Async.prototype.invokeLater = function Async$invokeLater(fn, receiver, arg) {
    if (process !== void 0 &&
        process.domain != null &&
        !fn.domain) {
        fn = process.domain.bind(fn);
    }
    this._lateBuffer.push(fn, receiver, arg);
    this._queueTick();
};

Async.prototype.invoke = function Async$invoke(fn, receiver, arg) {
    if (process !== void 0 &&
        process.domain != null &&
        !fn.domain) {
        fn = process.domain.bind(fn);
    }
    var functionBuffer = this._functionBuffer;
    functionBuffer.push(fn, receiver, arg);
    this._length = functionBuffer.length();
    this._queueTick();
};

Async.prototype._consumeFunctionBuffer =
function Async$_consumeFunctionBuffer() {
    var functionBuffer = this._functionBuffer;
    while(functionBuffer.length() > 0) {
        var fn = functionBuffer.shift();
        var receiver = functionBuffer.shift();
        var arg = functionBuffer.shift();
        fn.call(receiver, arg);
    }
    this._reset();
    this._consumeLateBuffer();
};

Async.prototype._consumeLateBuffer = function Async$_consumeLateBuffer() {
    var buffer = this._lateBuffer;
    while(buffer.length() > 0) {
        var fn = buffer.shift();
        var receiver = buffer.shift();
        var arg = buffer.shift();
        var res = tryCatch1(fn, receiver, arg);
        if (res === errorObj) {
            this._queueTick();
            if (fn.domain != null) {
                fn.domain.emit("error", res.e);
            }
            else {
                throw res.e;
            }
        }
    }
};

Async.prototype._queueTick = function Async$_queue() {
    if (!this._isTickUsed) {
        schedule(this.consumeFunctionBuffer);
        this._isTickUsed = true;
    }
};

Async.prototype._reset = function Async$_reset() {
    this._isTickUsed = false;
    this._length = 0;
};

module.exports = new Async();

},{"./global.js":111,"./queue.js":122,"./schedule.js":125,"./util.js":133}],100:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
Promise.prototype.call = function Promise$call(propertyName) {
    var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}

    return this._then(function(obj) {
            return obj[propertyName].apply(obj, args);
        },
        void 0,
        void 0,
        void 0,
        void 0
   );
};

function Promise$getter(obj) {
    var prop = typeof this === "string"
        ? this
        : ("" + this);
    return obj[prop];
}
Promise.prototype.get = function Promise$get(propertyName) {
    return this._then(
        Promise$getter,
        void 0,
        void 0,
        propertyName,
        void 0
   );
};
};

},{}],101:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var errors = require("./errors.js");
var async = require("./async.js");
var CancellationError = errors.CancellationError;

Promise.prototype._cancel = function Promise$_cancel() {
    if (!this.isCancellable()) return this;
    var parent;
    var promiseToReject = this;
    while ((parent = promiseToReject._cancellationParent) !== void 0 &&
        parent.isCancellable()) {
        promiseToReject = parent;
    }
    var err = new CancellationError();
    promiseToReject._attachExtraTrace(err);
    promiseToReject._rejectUnchecked(err);
};

Promise.prototype.cancel = function Promise$cancel() {
    if (!this.isCancellable()) return this;
    async.invokeLater(this._cancel, this, void 0);
    return this;
};

Promise.prototype.cancellable = function Promise$cancellable() {
    if (this._cancellable()) return this;
    this._setCancellable();
    this._cancellationParent = void 0;
    return this;
};

Promise.prototype.uncancellable = function Promise$uncancellable() {
    var ret = new Promise(INTERNAL);
    ret._setTrace(this);
    ret._follow(this);
    ret._unsetCancellable();
    if (this._isBound()) ret._setBoundTo(this._boundTo);
    return ret;
};

Promise.prototype.fork =
function Promise$fork(didFulfill, didReject, didProgress) {
    var ret = this._then(didFulfill, didReject, didProgress,
                         void 0, void 0);

    ret._setCancellable();
    ret._cancellationParent = void 0;
    return ret;
};
};

},{"./async.js":99,"./errors.js":105}],102:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function() {
var inherits = require("./util.js").inherits;
var defineProperty = require("./es5.js").defineProperty;

var rignore = new RegExp(
    "\\b(?:[a-zA-Z0-9.]+\\$_\\w+|" +
    "tryCatch(?:1|2|Apply)|new \\w*PromiseArray|" +
    "\\w*PromiseArray\\.\\w*PromiseArray|" +
    "setTimeout|CatchFilter\\$_\\w+|makeNodePromisified|processImmediate|" +
    "process._tickCallback|nextTick|Async\\$\\w+)\\b"
);

var rtraceline = null;
var formatStack = null;

function formatNonError(obj) {
    var str;
    if (typeof obj === "function") {
        str = "[function " +
            (obj.name || "anonymous") +
            "]";
    }
    else {
        str = obj.toString();
        var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
        if (ruselessToString.test(str)) {
            try {
                var newStr = JSON.stringify(obj);
                str = newStr;
            }
            catch(e) {

            }
        }
        if (str.length === 0) {
            str = "(empty array)";
        }
    }
    return ("(<" + snip(str) + ">, no stack trace)");
}

function snip(str) {
    var maxChars = 41;
    if (str.length < maxChars) {
        return str;
    }
    return str.substr(0, maxChars - 3) + "...";
}

function CapturedTrace(ignoreUntil, isTopLevel) {
    this.captureStackTrace(CapturedTrace, isTopLevel);

}
inherits(CapturedTrace, Error);

CapturedTrace.prototype.captureStackTrace =
function CapturedTrace$captureStackTrace(ignoreUntil, isTopLevel) {
    captureStackTrace(this, ignoreUntil, isTopLevel);
};

CapturedTrace.possiblyUnhandledRejection =
function CapturedTrace$PossiblyUnhandledRejection(reason) {
    if (typeof console === "object") {
        var message;
        if (typeof reason === "object" || typeof reason === "function") {
            var stack = reason.stack;
            message = "Possibly unhandled " + formatStack(stack, reason);
        }
        else {
            message = "Possibly unhandled " + String(reason);
        }
        if (typeof console.error === "function" ||
            typeof console.error === "object") {
            console.error(message);
        }
        else if (typeof console.log === "function" ||
            typeof console.log === "object") {
            console.log(message);
        }
    }
};

CapturedTrace.combine = function CapturedTrace$Combine(current, prev) {
    var curLast = current.length - 1;
    for (var i = prev.length - 1; i >= 0; --i) {
        var line = prev[i];
        if (current[curLast] === line) {
            current.pop();
            curLast--;
        }
        else {
            break;
        }
    }

    current.push("From previous event:");
    var lines = current.concat(prev);

    var ret = [];

    for (var i = 0, len = lines.length; i < len; ++i) {

        if ((rignore.test(lines[i]) ||
            (i > 0 && !rtraceline.test(lines[i])) &&
            lines[i] !== "From previous event:")
       ) {
            continue;
        }
        ret.push(lines[i]);
    }
    return ret;
};

CapturedTrace.isSupported = function CapturedTrace$IsSupported() {
    return typeof captureStackTrace === "function";
};

var captureStackTrace = (function stackDetection() {
    if (typeof Error.stackTraceLimit === "number" &&
        typeof Error.captureStackTrace === "function") {
        rtraceline = /^\s*at\s*/;
        formatStack = function(stack, error) {
            if (typeof stack === "string") return stack;

            if (error.name !== void 0 &&
                error.message !== void 0) {
                return error.name + ". " + error.message;
            }
            return formatNonError(error);


        };
        var captureStackTrace = Error.captureStackTrace;
        return function CapturedTrace$_captureStackTrace(
            receiver, ignoreUntil) {
            captureStackTrace(receiver, ignoreUntil);
        };
    }
    var err = new Error();

    if (typeof err.stack === "string" &&
        typeof "".startsWith === "function" &&
        (err.stack.startsWith("stackDetection@")) &&
        stackDetection.name === "stackDetection") {

        defineProperty(Error, "stackTraceLimit", {
            writable: true,
            enumerable: false,
            configurable: false,
            value: 25
        });
        rtraceline = /@/;
        var rline = /[@\n]/;

        formatStack = function(stack, error) {
            if (typeof stack === "string") {
                return (error.name + ". " + error.message + "\n" + stack);
            }

            if (error.name !== void 0 &&
                error.message !== void 0) {
                return error.name + ". " + error.message;
            }
            return formatNonError(error);
        };

        return function captureStackTrace(o) {
            var stack = new Error().stack;
            var split = stack.split(rline);
            var len = split.length;
            var ret = "";
            for (var i = 0; i < len; i += 2) {
                ret += split[i];
                ret += "@";
                ret += split[i + 1];
                ret += "\n";
            }
            o.stack = ret;
        };
    }
    else {
        formatStack = function(stack, error) {
            if (typeof stack === "string") return stack;

            if ((typeof error === "object" ||
                typeof error === "function") &&
                error.name !== void 0 &&
                error.message !== void 0) {
                return error.name + ". " + error.message;
            }
            return formatNonError(error);
        };

        return null;
    }
})();

return CapturedTrace;
};

},{"./es5.js":107,"./util.js":133}],103:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(NEXT_FILTER) {
var util = require("./util.js");
var errors = require("./errors.js");
var tryCatch1 = util.tryCatch1;
var errorObj = util.errorObj;
var keys = require("./es5.js").keys;
var TypeError = errors.TypeError;

function CatchFilter(instances, callback, promise) {
    this._instances = instances;
    this._callback = callback;
    this._promise = promise;
}

function CatchFilter$_safePredicate(predicate, e) {
    var safeObject = {};
    var retfilter = tryCatch1(predicate, safeObject, e);

    if (retfilter === errorObj) return retfilter;

    var safeKeys = keys(safeObject);
    if (safeKeys.length) {
        errorObj.e = new TypeError(
            "Catch filter must inherit from Error "
          + "or be a simple predicate function");
        return errorObj;
    }
    return retfilter;
}

CatchFilter.prototype.doFilter = function CatchFilter$_doFilter(e) {
    var cb = this._callback;
    var promise = this._promise;
    var boundTo = promise._isBound() ? promise._boundTo : void 0;
    for (var i = 0, len = this._instances.length; i < len; ++i) {
        var item = this._instances[i];
        var itemIsErrorType = item === Error ||
            (item != null && item.prototype instanceof Error);

        if (itemIsErrorType && e instanceof item) {
            var ret = tryCatch1(cb, boundTo, e);
            if (ret === errorObj) {
                NEXT_FILTER.e = ret.e;
                return NEXT_FILTER;
            }
            return ret;
        } else if (typeof item === "function" && !itemIsErrorType) {
            var shouldHandle = CatchFilter$_safePredicate(item, e);
            if (shouldHandle === errorObj) {
                var trace = errors.canAttach(errorObj.e)
                    ? errorObj.e
                    : new Error(errorObj.e + "");
                this._promise._attachExtraTrace(trace);
                e = errorObj.e;
                break;
            } else if (shouldHandle) {
                var ret = tryCatch1(cb, boundTo, e);
                if (ret === errorObj) {
                    NEXT_FILTER.e = ret.e;
                    return NEXT_FILTER;
                }
                return ret;
            }
        }
    }
    NEXT_FILTER.e = e;
    return NEXT_FILTER;
};

return CatchFilter;
};

},{"./errors.js":105,"./es5.js":107,"./util.js":133}],104:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var util = require("./util.js");
var isPrimitive = util.isPrimitive;
var wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;

module.exports = function(Promise) {
var returner = function Promise$_returner() {
    return this;
};
var thrower = function Promise$_thrower() {
    throw this;
};

var wrapper = function Promise$_wrapper(value, action) {
    if (action === 1) {
        return function Promise$_thrower() {
            throw value;
        };
    }
    else if (action === 2) {
        return function Promise$_returner() {
            return value;
        };
    }
};


Promise.prototype["return"] =
Promise.prototype.thenReturn =
function Promise$thenReturn(value) {
    if (wrapsPrimitiveReceiver && isPrimitive(value)) {
        return this._then(
            wrapper(value, 2),
            void 0,
            void 0,
            void 0,
            void 0
       );
    }
    return this._then(returner, void 0, void 0, value, void 0);
};

Promise.prototype["throw"] =
Promise.prototype.thenThrow =
function Promise$thenThrow(reason) {
    if (wrapsPrimitiveReceiver && isPrimitive(reason)) {
        return this._then(
            wrapper(reason, 1),
            void 0,
            void 0,
            void 0,
            void 0
       );
    }
    return this._then(thrower, void 0, void 0, reason, void 0);
};
};

},{"./util.js":133}],105:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var global = require("./global.js");
var Objectfreeze = require("./es5.js").freeze;
var util = require("./util.js");
var inherits = util.inherits;
var notEnumerableProp = util.notEnumerableProp;
var Error = global.Error;

function markAsOriginatingFromRejection(e) {
    try {
        notEnumerableProp(e, "isAsync", true);
    }
    catch(ignore) {}
}

function originatesFromRejection(e) {
    if (e == null) return false;
    return ((e instanceof RejectionError) ||
        e["isAsync"] === true);
}

function isError(obj) {
    return obj instanceof Error;
}

function canAttach(obj) {
    return isError(obj);
}

function subError(nameProperty, defaultMessage) {
    function SubError(message) {
        if (!(this instanceof SubError)) return new SubError(message);
        this.message = typeof message === "string" ? message : defaultMessage;
        this.name = nameProperty;
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        }
    }
    inherits(SubError, Error);
    return SubError;
}

var TypeError = global.TypeError;
if (typeof TypeError !== "function") {
    TypeError = subError("TypeError", "type error");
}
var RangeError = global.RangeError;
if (typeof RangeError !== "function") {
    RangeError = subError("RangeError", "range error");
}
var CancellationError = subError("CancellationError", "cancellation error");
var TimeoutError = subError("TimeoutError", "timeout error");

function RejectionError(message) {
    this.name = "RejectionError";
    this.message = message;
    this.cause = message;
    this.isAsync = true;

    if (message instanceof Error) {
        this.message = message.message;
        this.stack = message.stack;
    }
    else if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
    }

}
inherits(RejectionError, Error);

var key = "__BluebirdErrorTypes__";
var errorTypes = global[key];
if (!errorTypes) {
    errorTypes = Objectfreeze({
        CancellationError: CancellationError,
        TimeoutError: TimeoutError,
        RejectionError: RejectionError
    });
    notEnumerableProp(global, key, errorTypes);
}

module.exports = {
    Error: Error,
    TypeError: TypeError,
    RangeError: RangeError,
    CancellationError: errorTypes.CancellationError,
    RejectionError: errorTypes.RejectionError,
    TimeoutError: errorTypes.TimeoutError,
    originatesFromRejection: originatesFromRejection,
    markAsOriginatingFromRejection: markAsOriginatingFromRejection,
    canAttach: canAttach
};

},{"./es5.js":107,"./global.js":111,"./util.js":133}],106:[function(require,module,exports){
arguments[4][30][0].apply(exports,arguments)
},{"./errors.js":105}],107:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
var isES5 = (function(){
    "use strict";
    return this === void 0;
})();

if (isES5) {
    module.exports = {
        freeze: Object.freeze,
        defineProperty: Object.defineProperty,
        keys: Object.keys,
        getPrototypeOf: Object.getPrototypeOf,
        isArray: Array.isArray,
        isES5: isES5
    };
}

else {
    var has = {}.hasOwnProperty;
    var str = {}.toString;
    var proto = {}.constructor.prototype;

    var ObjectKeys = function ObjectKeys(o) {
        var ret = [];
        for (var key in o) {
            if (has.call(o, key)) {
                ret.push(key);
            }
        }
        return ret;
    }

    var ObjectDefineProperty = function ObjectDefineProperty(o, key, desc) {
        o[key] = desc.value;
        return o;
    }

    var ObjectFreeze = function ObjectFreeze(obj) {
        return obj;
    }

    var ObjectGetPrototypeOf = function ObjectGetPrototypeOf(obj) {
        try {
            return Object(obj).constructor.prototype;
        }
        catch (e) {
            return proto;
        }
    }

    var ArrayIsArray = function ArrayIsArray(obj) {
        try {
            return str.call(obj) === "[object Array]";
        }
        catch(e) {
            return false;
        }
    }

    module.exports = {
        isArray: ArrayIsArray,
        keys: ObjectKeys,
        defineProperty: ObjectDefineProperty,
        freeze: ObjectFreeze,
        getPrototypeOf: ObjectGetPrototypeOf,
        isES5: isES5
    };
}

},{}],108:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
var isArray = require("./util.js").isArray;

function Promise$_filter(booleans) {
    var values = this instanceof Promise ? this._settledValue : this;
    var len = values.length;
    var ret = new Array(len);
    var j = 0;

    for (var i = 0; i < len; ++i) {
        if (booleans[i]) ret[j++] = values[i];

    }
    ret.length = j;
    return ret;
}

var ref = {ref: null};
Promise.filter = function Promise$Filter(promises, fn) {
    return Promise.map(promises, fn, ref)
                  ._then(Promise$_filter, void 0, void 0, ref.ref, void 0);
};

Promise.prototype.filter = function Promise$filter(fn) {
    return this.map(fn, ref)
               ._then(Promise$_filter, void 0, void 0, ref.ref, void 0);
};
};

},{"./util.js":133}],109:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, NEXT_FILTER) {
var util = require("./util.js");
var wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;
var isPrimitive = util.isPrimitive;
var thrower = util.thrower;


function returnThis() {
    return this;
}
function throwThis() {
    throw this;
}
function return$(r) {
    return function Promise$_returner() {
        return r;
    };
}
function throw$(r) {
    return function Promise$_thrower() {
        throw r;
    };
}
function promisedFinally(ret, reasonOrValue, isFulfilled) {
    var then;
    if (wrapsPrimitiveReceiver && isPrimitive(reasonOrValue)) {
        then = isFulfilled ? return$(reasonOrValue) : throw$(reasonOrValue);
    }
    else {
        then = isFulfilled ? returnThis : throwThis;
    }
    return ret._then(then, thrower, void 0, reasonOrValue, void 0);
}

function finallyHandler(reasonOrValue) {
    var promise = this.promise;
    var handler = this.handler;

    var ret = promise._isBound()
                    ? handler.call(promise._boundTo)
                    : handler();

    if (ret !== void 0) {
        var maybePromise = Promise._cast(ret, void 0);
        if (maybePromise instanceof Promise) {
            return promisedFinally(maybePromise, reasonOrValue,
                                    promise.isFulfilled());
        }
    }

    if (promise.isRejected()) {
        NEXT_FILTER.e = reasonOrValue;
        return NEXT_FILTER;
    }
    else {
        return reasonOrValue;
    }
}

function tapHandler(value) {
    var promise = this.promise;
    var handler = this.handler;

    var ret = promise._isBound()
                    ? handler.call(promise._boundTo, value)
                    : handler(value);

    if (ret !== void 0) {
        var maybePromise = Promise._cast(ret, void 0);
        if (maybePromise instanceof Promise) {
            return promisedFinally(maybePromise, value, true);
        }
    }
    return value;
}

Promise.prototype._passThroughHandler =
function Promise$_passThroughHandler(handler, isFinally) {
    if (typeof handler !== "function") return this.then();

    var promiseAndHandler = {
        promise: this,
        handler: handler
    };

    return this._then(
            isFinally ? finallyHandler : tapHandler,
            isFinally ? finallyHandler : void 0, void 0,
            promiseAndHandler, void 0);
};

Promise.prototype.lastly =
Promise.prototype["finally"] = function Promise$finally(handler) {
    return this._passThroughHandler(handler, true);
};

Promise.prototype.tap = function Promise$tap(handler) {
    return this._passThroughHandler(handler, false);
};
};

},{"./util.js":133}],110:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, apiRejection, INTERNAL) {
var PromiseSpawn = require("./promise_spawn.js")(Promise, INTERNAL);
var errors = require("./errors.js");
var TypeError = errors.TypeError;
var deprecated = require("./util.js").deprecated;

Promise.coroutine = function Promise$Coroutine(generatorFunction) {
    if (typeof generatorFunction !== "function") {
        throw new TypeError("generatorFunction must be a function");
    }
    var PromiseSpawn$ = PromiseSpawn;
    return function () {
        var generator = generatorFunction.apply(this, arguments);
        var spawn = new PromiseSpawn$(void 0, void 0);
        spawn._generator = generator;
        spawn._next(void 0);
        return spawn.promise();
    };
};

Promise.coroutine.addYieldHandler = PromiseSpawn.addYieldHandler;

Promise.spawn = function Promise$Spawn(generatorFunction) {
    deprecated("Promise.spawn is deprecated. Use Promise.coroutine instead.");
    if (typeof generatorFunction !== "function") {
        return apiRejection("generatorFunction must be a function");
    }
    var spawn = new PromiseSpawn(generatorFunction, this);
    var ret = spawn.promise();
    spawn._run(Promise.spawn);
    return ret;
};
};

},{"./errors.js":105,"./promise_spawn.js":118,"./util.js":133}],111:[function(require,module,exports){
(function (global){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
module.exports = (function() {
    if (this !== void 0) return this;
    try {return global;}
    catch(e) {}
    try {return window;}
    catch(e) {}
    try {return self;}
    catch(e) {}
})();

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],112:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray, INTERNAL, apiRejection) {

var all = Promise.all;
var util = require("./util.js");
var canAttach = require("./errors.js").canAttach;
var isArray = util.isArray;
var _cast = Promise._cast;

function unpack(values) {
    return Promise$_Map(values, this[0], this[1], this[2]);
}

function Promise$_Map(promises, fn, useBound, ref) {
    if (typeof fn !== "function") {
        return apiRejection("fn must be a function");
    }

    var receiver = void 0;
    if (useBound === true) {
        if (promises._isBound()) {
            receiver = promises._boundTo;
        }
    }
    else if (useBound !== false) {
        receiver = useBound;
    }

    var shouldUnwrapItems = ref !== void 0;
    if (shouldUnwrapItems) ref.ref = promises;

    if (promises instanceof Promise) {
        var pack = [fn, receiver, ref];
        return promises._then(unpack, void 0, void 0, pack, void 0);
    }
    else if (!isArray(promises)) {
        return apiRejection("expecting an array, a promise or a thenable");
    }

    var promise = new Promise(INTERNAL);
    if (receiver !== void 0) promise._setBoundTo(receiver);
    promise._setTrace(void 0);

    var mapping = new Mapping(promise,
                                fn,
                                promises,
                                receiver,
                                shouldUnwrapItems);
    mapping.init();
    return promise;
}

var pending = {};
function Mapping(promise, callback, items, receiver, shouldUnwrapItems) {
    this.shouldUnwrapItems = shouldUnwrapItems;
    this.index = 0;
    this.items = items;
    this.callback = callback;
    this.receiver = receiver;
    this.promise = promise;
    this.result = new Array(items.length);
}
util.inherits(Mapping, PromiseArray);

Mapping.prototype.init = function Mapping$init() {
    var items = this.items;
    var len = items.length;
    var result = this.result;
    var isRejected = false;
    for (var i = 0; i < len; ++i) {
        var maybePromise = _cast(items[i], void 0);
        if (maybePromise instanceof Promise) {
            if (maybePromise.isPending()) {
                result[i] = pending;
                maybePromise._proxyPromiseArray(this, i);
            }
            else if (maybePromise.isFulfilled()) {
                result[i] = maybePromise.value();
            }
            else {
                maybePromise._unsetRejectionIsUnhandled();
                if (!isRejected) {
                    this.reject(maybePromise.reason());
                    isRejected = true;
                }
            }
        }
        else {
            result[i] = maybePromise;
        }
    }
    if (!isRejected) this.iterate();
};

Mapping.prototype.isResolved = function Mapping$isResolved() {
    return this.promise === null;
};

Mapping.prototype._promiseProgressed =
function Mapping$_promiseProgressed(value) {
    if (this.isResolved()) return;
    this.promise._progress(value);
};

Mapping.prototype._promiseFulfilled =
function Mapping$_promiseFulfilled(value, index) {
    if (this.isResolved()) return;
    this.result[index] = value;
    if (this.shouldUnwrapItems) this.items[index] = value;
    if (this.index === index) this.iterate();
};

Mapping.prototype._promiseRejected =
function Mapping$_promiseRejected(reason) {
    this.reject(reason);
};

Mapping.prototype.reject = function Mapping$reject(reason) {
    if (this.isResolved()) return;
    var trace = canAttach(reason) ? reason : new Error(reason + "");
    this.promise._attachExtraTrace(trace);
    this.promise._reject(reason, trace);
};

Mapping.prototype.iterate = function Mapping$iterate() {
    var i = this.index;
    var items = this.items;
    var result = this.result;
    var len = items.length;
    var result = this.result;
    var receiver = this.receiver;
    var callback = this.callback;

    for (; i < len; ++i) {
        var value = result[i];
        if (value === pending) {
            this.index = i;
            return;
        }
        try { result[i] = callback.call(receiver, value, i, len); }
        catch (e) { return this.reject(e); }
    }
    this.promise._follow(all(result));
    this.items = this.result = this.callback = this.promise = null;
};

Promise.prototype.map = function Promise$map(fn, ref) {
    return Promise$_Map(this, fn, true, ref);
};

Promise.map = function Promise$Map(promises, fn, ref) {
    return Promise$_Map(promises, fn, false, ref);
};
};

},{"./errors.js":105,"./util.js":133}],113:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
var util = require("./util.js");
var async = require("./async.js");
var tryCatch2 = util.tryCatch2;
var tryCatch1 = util.tryCatch1;
var errorObj = util.errorObj;

function thrower(r) {
    throw r;
}

function Promise$_successAdapter(val, receiver) {
    var nodeback = this;
    var ret = val === void 0
        ? tryCatch1(nodeback, receiver, null)
        : tryCatch2(nodeback, receiver, null, val);
    if (ret === errorObj) {
        async.invokeLater(thrower, void 0, ret.e);
    }
}
function Promise$_errorAdapter(reason, receiver) {
    var nodeback = this;
    var ret = tryCatch1(nodeback, receiver, reason);
    if (ret === errorObj) {
        async.invokeLater(thrower, void 0, ret.e);
    }
}

Promise.prototype.nodeify = function Promise$nodeify(nodeback) {
    if (typeof nodeback == "function") {
        this._then(
            Promise$_successAdapter,
            Promise$_errorAdapter,
            void 0,
            nodeback,
            this._isBound() ? this._boundTo : null
        );
    }
    return this;
};
};

},{"./async.js":99,"./util.js":133}],114:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, isPromiseArrayProxy) {
var util = require("./util.js");
var async = require("./async.js");
var errors = require("./errors.js");
var tryCatch1 = util.tryCatch1;
var errorObj = util.errorObj;

Promise.prototype.progressed = function Promise$progressed(handler) {
    return this._then(void 0, void 0, handler, void 0, void 0);
};

Promise.prototype._progress = function Promise$_progress(progressValue) {
    if (this._isFollowingOrFulfilledOrRejected()) return;
    this._progressUnchecked(progressValue);

};

Promise.prototype._progressHandlerAt =
function Promise$_progressHandlerAt(index) {
    if (index === 0) return this._progressHandler0;
    return this[index + 2 - 5];
};

Promise.prototype._doProgressWith =
function Promise$_doProgressWith(progression) {
    var progressValue = progression.value;
    var handler = progression.handler;
    var promise = progression.promise;
    var receiver = progression.receiver;

    this._pushContext();
    var ret = tryCatch1(handler, receiver, progressValue);
    this._popContext();

    if (ret === errorObj) {
        if (ret.e != null &&
            ret.e.name !== "StopProgressPropagation") {
            var trace = errors.canAttach(ret.e)
                ? ret.e : new Error(ret.e + "");
            promise._attachExtraTrace(trace);
            promise._progress(ret.e);
        }
    }
    else if (ret instanceof Promise) {
        ret._then(promise._progress, null, null, promise, void 0);
    }
    else {
        promise._progress(ret);
    }
};


Promise.prototype._progressUnchecked =
function Promise$_progressUnchecked(progressValue) {
    if (!this.isPending()) return;
    var len = this._length();
    var progress = this._progress;
    for (var i = 0; i < len; i += 5) {
        var handler = this._progressHandlerAt(i);
        var promise = this._promiseAt(i);
        if (!(promise instanceof Promise)) {
            var receiver = this._receiverAt(i);
            if (typeof handler === "function") {
                handler.call(receiver, progressValue, promise);
            }
            else if (receiver instanceof Promise && receiver._isProxied()) {
                receiver._progressUnchecked(progressValue);
            }
            else if (isPromiseArrayProxy(receiver, promise)) {
                receiver._promiseProgressed(progressValue, promise);
            }
            continue;
        }

        if (typeof handler === "function") {
            async.invoke(this._doProgressWith, this, {
                handler: handler,
                promise: promise,
                receiver: this._receiverAt(i),
                value: progressValue
            });
        }
        else {
            async.invoke(progress, promise, progressValue);
        }
    }
};
};

},{"./async.js":99,"./errors.js":105,"./util.js":133}],115:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function() {
var global = require("./global.js");
var util = require("./util.js");
var async = require("./async.js");
var errors = require("./errors.js");

var INTERNAL = function(){};
var APPLY = {};
var NEXT_FILTER = {e: null};

var PromiseArray = require("./promise_array.js")(Promise, INTERNAL);
var CapturedTrace = require("./captured_trace.js")();
var CatchFilter = require("./catch_filter.js")(NEXT_FILTER);
var PromiseResolver = require("./promise_resolver.js");

var isArray = util.isArray;

var errorObj = util.errorObj;
var tryCatch1 = util.tryCatch1;
var tryCatch2 = util.tryCatch2;
var tryCatchApply = util.tryCatchApply;
var RangeError = errors.RangeError;
var TypeError = errors.TypeError;
var CancellationError = errors.CancellationError;
var TimeoutError = errors.TimeoutError;
var RejectionError = errors.RejectionError;
var originatesFromRejection = errors.originatesFromRejection;
var markAsOriginatingFromRejection = errors.markAsOriginatingFromRejection;
var canAttach = errors.canAttach;
var thrower = util.thrower;
var apiRejection = require("./errors_api_rejection")(Promise);


var makeSelfResolutionError = function Promise$_makeSelfResolutionError() {
    return new TypeError("circular promise resolution chain");
};

function isPromise(obj) {
    if (obj === void 0) return false;
    return obj instanceof Promise;
}

function isPromiseArrayProxy(receiver, promiseSlotValue) {
    if (receiver instanceof PromiseArray) {
        return promiseSlotValue >= 0;
    }
    return false;
}

function Promise(resolver) {
    if (typeof resolver !== "function") {
        throw new TypeError("the promise constructor requires a resolver function");
    }
    if (this.constructor !== Promise) {
        throw new TypeError("the promise constructor cannot be invoked directly");
    }
    this._bitField = 0;
    this._fulfillmentHandler0 = void 0;
    this._rejectionHandler0 = void 0;
    this._promise0 = void 0;
    this._receiver0 = void 0;
    this._settledValue = void 0;
    this._boundTo = void 0;
    if (resolver !== INTERNAL) this._resolveFromResolver(resolver);
}

Promise.prototype.bind = function Promise$bind(thisArg) {
    var ret = new Promise(INTERNAL);
    ret._setTrace(this);
    ret._follow(this);
    ret._setBoundTo(thisArg);
    if (this._cancellable()) {
        ret._setCancellable();
        ret._cancellationParent = this;
    }
    return ret;
};

Promise.prototype.toString = function Promise$toString() {
    return "[object Promise]";
};

Promise.prototype.caught = Promise.prototype["catch"] =
function Promise$catch(fn) {
    var len = arguments.length;
    if (len > 1) {
        var catchInstances = new Array(len - 1),
            j = 0, i;
        for (i = 0; i < len - 1; ++i) {
            var item = arguments[i];
            if (typeof item === "function") {
                catchInstances[j++] = item;
            }
            else {
                var catchFilterTypeError =
                    new TypeError(
                        "A catch filter must be an error constructor "
                        + "or a filter function");

                this._attachExtraTrace(catchFilterTypeError);
                async.invoke(this._reject, this, catchFilterTypeError);
                return;
            }
        }
        catchInstances.length = j;
        fn = arguments[i];

        this._resetTrace();
        var catchFilter = new CatchFilter(catchInstances, fn, this);
        return this._then(void 0, catchFilter.doFilter, void 0,
            catchFilter, void 0);
    }
    return this._then(void 0, fn, void 0, void 0, void 0);
};

Promise.prototype.then =
function Promise$then(didFulfill, didReject, didProgress) {
    return this._then(didFulfill, didReject, didProgress,
        void 0, void 0);
};


Promise.prototype.done =
function Promise$done(didFulfill, didReject, didProgress) {
    var promise = this._then(didFulfill, didReject, didProgress,
        void 0, void 0);
    promise._setIsFinal();
};

Promise.prototype.spread = function Promise$spread(didFulfill, didReject) {
    return this._then(didFulfill, didReject, void 0,
        APPLY, void 0);
};

Promise.prototype.isCancellable = function Promise$isCancellable() {
    return !this.isResolved() &&
        this._cancellable();
};

Promise.prototype.toJSON = function Promise$toJSON() {
    var ret = {
        isFulfilled: false,
        isRejected: false,
        fulfillmentValue: void 0,
        rejectionReason: void 0
    };
    if (this.isFulfilled()) {
        ret.fulfillmentValue = this._settledValue;
        ret.isFulfilled = true;
    }
    else if (this.isRejected()) {
        ret.rejectionReason = this._settledValue;
        ret.isRejected = true;
    }
    return ret;
};

Promise.prototype.all = function Promise$all() {
    return Promise$_all(this, true);
};


Promise.is = isPromise;

function Promise$_all(promises, useBound) {
    return Promise$_CreatePromiseArray(
        promises,
        PromiseArray,
        useBound === true && promises._isBound()
            ? promises._boundTo
            : void 0
   ).promise();
}
Promise.all = function Promise$All(promises) {
    return Promise$_all(promises, false);
};

Promise.join = function Promise$Join() {
    var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}
    return Promise$_CreatePromiseArray(args, PromiseArray, void 0).promise();
};

Promise.resolve = Promise.fulfilled =
function Promise$Resolve(value) {
    var ret = new Promise(INTERNAL);
    ret._setTrace(void 0);
    if (ret._tryFollow(value)) {
        return ret;
    }
    ret._cleanValues();
    ret._setFulfilled();
    ret._settledValue = value;
    return ret;
};

Promise.reject = Promise.rejected = function Promise$Reject(reason) {
    var ret = new Promise(INTERNAL);
    ret._setTrace(void 0);
    markAsOriginatingFromRejection(reason);
    ret._cleanValues();
    ret._setRejected();
    ret._settledValue = reason;
    if (!canAttach(reason)) {
        var trace = new Error(reason + "");
        ret._setCarriedStackTrace(trace);
    }
    ret._ensurePossibleRejectionHandled();
    return ret;
};

Promise.prototype.error = function Promise$_error(fn) {
    return this.caught(originatesFromRejection, fn);
};

Promise.prototype._resolveFromSyncValue =
function Promise$_resolveFromSyncValue(value) {
    if (value === errorObj) {
        this._cleanValues();
        this._setRejected();
        this._settledValue = value.e;
        this._ensurePossibleRejectionHandled();
    }
    else {
        var maybePromise = Promise._cast(value, void 0);
        if (maybePromise instanceof Promise) {
            this._follow(maybePromise);
        }
        else {
            this._cleanValues();
            this._setFulfilled();
            this._settledValue = value;
        }
    }
};

Promise.method = function Promise$_Method(fn) {
    if (typeof fn !== "function") {
        throw new TypeError("fn must be a function");
    }
    return function Promise$_method() {
        var value;
        switch(arguments.length) {
        case 0: value = tryCatch1(fn, this, void 0); break;
        case 1: value = tryCatch1(fn, this, arguments[0]); break;
        case 2: value = tryCatch2(fn, this, arguments[0], arguments[1]); break;
        default:
            var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}
            value = tryCatchApply(fn, args, this); break;
        }
        var ret = new Promise(INTERNAL);
        ret._setTrace(void 0);
        ret._resolveFromSyncValue(value);
        return ret;
    };
};

Promise.attempt = Promise["try"] = function Promise$_Try(fn, args, ctx) {
    if (typeof fn !== "function") {
        return apiRejection("fn must be a function");
    }
    var value = isArray(args)
        ? tryCatchApply(fn, args, ctx)
        : tryCatch1(fn, ctx, args);

    var ret = new Promise(INTERNAL);
    ret._setTrace(void 0);
    ret._resolveFromSyncValue(value);
    return ret;
};

Promise.defer = Promise.pending = function Promise$Defer() {
    var promise = new Promise(INTERNAL);
    promise._setTrace(void 0);
    return new PromiseResolver(promise);
};

Promise.bind = function Promise$Bind(thisArg) {
    var ret = new Promise(INTERNAL);
    ret._setTrace(void 0);
    ret._setFulfilled();
    ret._setBoundTo(thisArg);
    return ret;
};

Promise.cast = function Promise$_Cast(obj) {
    var ret = Promise._cast(obj, void 0);
    if (!(ret instanceof Promise)) {
        return Promise.resolve(ret);
    }
    return ret;
};

Promise.onPossiblyUnhandledRejection =
function Promise$OnPossiblyUnhandledRejection(fn) {
        CapturedTrace.possiblyUnhandledRejection = typeof fn === "function"
                                                    ? fn : void 0;
};

var unhandledRejectionHandled;
Promise.onUnhandledRejectionHandled =
function Promise$onUnhandledRejectionHandled(fn) {
    unhandledRejectionHandled = typeof fn === "function" ? fn : void 0;
};

var debugging = false || !!(
    typeof process !== "undefined" &&
    typeof process.execPath === "string" &&
    typeof process.env === "object" &&
    (process.env["BLUEBIRD_DEBUG"] ||
        process.env["NODE_ENV"] === "development")
);


Promise.longStackTraces = function Promise$LongStackTraces() {
    if (async.haveItemsQueued() &&
        debugging === false
   ) {
        throw new Error("cannot enable long stack traces after promises have been created");
    }
    debugging = CapturedTrace.isSupported();
};

Promise.hasLongStackTraces = function Promise$HasLongStackTraces() {
    return debugging && CapturedTrace.isSupported();
};

Promise.prototype._setProxyHandlers =
function Promise$_setProxyHandlers(receiver, promiseSlotValue) {
    var index = this._length();

    if (index >= 524287 - 5) {
        index = 0;
        this._setLength(0);
    }
    if (index === 0) {
        this._promise0 = promiseSlotValue;
        this._receiver0 = receiver;
    }
    else {
        var i = index - 5;
        this[i + 3] = promiseSlotValue;
        this[i + 4] = receiver;
        this[i + 0] =
        this[i + 1] =
        this[i + 2] = void 0;
    }
    this._setLength(index + 5);
};

Promise.prototype._proxyPromiseArray =
function Promise$_proxyPromiseArray(promiseArray, index) {
    this._setProxyHandlers(promiseArray, index);
};

Promise.prototype._proxyPromise = function Promise$_proxyPromise(promise) {
    promise._setProxied();
    this._setProxyHandlers(promise, -1);
};

Promise.prototype._then =
function Promise$_then(
    didFulfill,
    didReject,
    didProgress,
    receiver,
    internalData
) {
    var haveInternalData = internalData !== void 0;
    var ret = haveInternalData ? internalData : new Promise(INTERNAL);

    if (debugging && !haveInternalData) {
        var haveSameContext = this._peekContext() === this._traceParent;
        ret._traceParent = haveSameContext ? this._traceParent : this;
        ret._setTrace(this);
    }

    if (!haveInternalData && this._isBound()) {
        ret._setBoundTo(this._boundTo);
    }

    var callbackIndex =
        this._addCallbacks(didFulfill, didReject, didProgress, ret, receiver);

    if (!haveInternalData && this._cancellable()) {
        ret._setCancellable();
        ret._cancellationParent = this;
    }

    if (this.isResolved()) {
        async.invoke(this._queueSettleAt, this, callbackIndex);
    }

    return ret;
};

Promise.prototype._length = function Promise$_length() {
    return this._bitField & 524287;
};

Promise.prototype._isFollowingOrFulfilledOrRejected =
function Promise$_isFollowingOrFulfilledOrRejected() {
    return (this._bitField & 939524096) > 0;
};

Promise.prototype._isFollowing = function Promise$_isFollowing() {
    return (this._bitField & 536870912) === 536870912;
};

Promise.prototype._setLength = function Promise$_setLength(len) {
    this._bitField = (this._bitField & -524288) |
        (len & 524287);
};

Promise.prototype._setFulfilled = function Promise$_setFulfilled() {
    this._bitField = this._bitField | 268435456;
};

Promise.prototype._setRejected = function Promise$_setRejected() {
    this._bitField = this._bitField | 134217728;
};

Promise.prototype._setFollowing = function Promise$_setFollowing() {
    this._bitField = this._bitField | 536870912;
};

Promise.prototype._setIsFinal = function Promise$_setIsFinal() {
    this._bitField = this._bitField | 33554432;
};

Promise.prototype._isFinal = function Promise$_isFinal() {
    return (this._bitField & 33554432) > 0;
};

Promise.prototype._cancellable = function Promise$_cancellable() {
    return (this._bitField & 67108864) > 0;
};

Promise.prototype._setCancellable = function Promise$_setCancellable() {
    this._bitField = this._bitField | 67108864;
};

Promise.prototype._unsetCancellable = function Promise$_unsetCancellable() {
    this._bitField = this._bitField & (~67108864);
};

Promise.prototype._setRejectionIsUnhandled =
function Promise$_setRejectionIsUnhandled() {
    this._bitField = this._bitField | 2097152;
};

Promise.prototype._unsetRejectionIsUnhandled =
function Promise$_unsetRejectionIsUnhandled() {
    this._bitField = this._bitField & (~2097152);
    if (this._isUnhandledRejectionNotified()) {
        this._unsetUnhandledRejectionIsNotified();
        this._notifyUnhandledRejectionIsHandled();
    }
};

Promise.prototype._isRejectionUnhandled =
function Promise$_isRejectionUnhandled() {
    return (this._bitField & 2097152) > 0;
};

Promise.prototype._setUnhandledRejectionIsNotified =
function Promise$_setUnhandledRejectionIsNotified() {
    this._bitField = this._bitField | 524288;
};

Promise.prototype._unsetUnhandledRejectionIsNotified =
function Promise$_unsetUnhandledRejectionIsNotified() {
    this._bitField = this._bitField & (~524288);
};

Promise.prototype._isUnhandledRejectionNotified =
function Promise$_isUnhandledRejectionNotified() {
    return (this._bitField & 524288) > 0;
};

Promise.prototype._setCarriedStackTrace =
function Promise$_setCarriedStackTrace(capturedTrace) {
    this._bitField = this._bitField | 1048576;
    this._fulfillmentHandler0 = capturedTrace;
};

Promise.prototype._unsetCarriedStackTrace =
function Promise$_unsetCarriedStackTrace() {
    this._bitField = this._bitField & (~1048576);
    this._fulfillmentHandler0 = void 0;
};

Promise.prototype._isCarryingStackTrace =
function Promise$_isCarryingStackTrace() {
    return (this._bitField & 1048576) > 0;
};

Promise.prototype._getCarriedStackTrace =
function Promise$_getCarriedStackTrace() {
    return this._isCarryingStackTrace()
        ? this._fulfillmentHandler0
        : void 0;
};

Promise.prototype._receiverAt = function Promise$_receiverAt(index) {
    var ret;
    if (index === 0) {
        ret = this._receiver0;
    }
    else {
        ret = this[index + 4 - 5];
    }
    if (this._isBound() && ret === void 0) {
        return this._boundTo;
    }
    return ret;
};

Promise.prototype._promiseAt = function Promise$_promiseAt(index) {
    if (index === 0) return this._promise0;
    return this[index + 3 - 5];
};

Promise.prototype._fulfillmentHandlerAt =
function Promise$_fulfillmentHandlerAt(index) {
    if (index === 0) return this._fulfillmentHandler0;
    return this[index + 0 - 5];
};

Promise.prototype._rejectionHandlerAt =
function Promise$_rejectionHandlerAt(index) {
    if (index === 0) return this._rejectionHandler0;
    return this[index + 1 - 5];
};

Promise.prototype._unsetAt = function Promise$_unsetAt(index) {
     if (index === 0) {
        this._rejectionHandler0 =
        this._progressHandler0 =
        this._promise0 =
        this._receiver0 = void 0;
        if (!this._isCarryingStackTrace()) {
            this._fulfillmentHandler0 = void 0;
        }
    }
    else {
        this[index - 5 + 0] =
        this[index - 5 + 1] =
        this[index - 5 + 2] =
        this[index - 5 + 3] =
        this[index - 5 + 4] = void 0;
    }
};

Promise.prototype._resolveFromResolver =
function Promise$_resolveFromResolver(resolver) {
    var promise = this;
    this._setTrace(void 0);
    this._pushContext();

    function Promise$_resolver(val) {
        if (promise._tryFollow(val)) {
            return;
        }
        promise._fulfill(val);
    }
    function Promise$_rejecter(val) {
        var trace = canAttach(val) ? val : new Error(val + "");
        promise._attachExtraTrace(trace);
        markAsOriginatingFromRejection(val);
        promise._reject(val, trace === val ? void 0 : trace);
    }
    var r = tryCatch2(resolver, void 0, Promise$_resolver, Promise$_rejecter);
    this._popContext();

    if (r !== void 0 && r === errorObj) {
        var e = r.e;
        var trace = canAttach(e) ? e : new Error(e + "");
        promise._reject(e, trace);
    }
};

Promise.prototype._addCallbacks = function Promise$_addCallbacks(
    fulfill,
    reject,
    progress,
    promise,
    receiver
) {
    var index = this._length();

    if (index >= 524287 - 5) {
        index = 0;
        this._setLength(0);
    }

    if (index === 0) {
        this._promise0 = promise;
        if (receiver !== void 0) this._receiver0 = receiver;
        if (typeof fulfill === "function" && !this._isCarryingStackTrace())
            this._fulfillmentHandler0 = fulfill;
        if (typeof reject === "function") this._rejectionHandler0 = reject;
        if (typeof progress === "function") this._progressHandler0 = progress;
    }
    else {
        var i = index - 5;
        this[i + 3] = promise;
        this[i + 4] = receiver;
        this[i + 0] = typeof fulfill === "function"
                                            ? fulfill : void 0;
        this[i + 1] = typeof reject === "function"
                                            ? reject : void 0;
        this[i + 2] = typeof progress === "function"
                                            ? progress : void 0;
    }
    this._setLength(index + 5);
    return index;
};



Promise.prototype._setBoundTo = function Promise$_setBoundTo(obj) {
    if (obj !== void 0) {
        this._bitField = this._bitField | 8388608;
        this._boundTo = obj;
    }
    else {
        this._bitField = this._bitField & (~8388608);
    }
};

Promise.prototype._isBound = function Promise$_isBound() {
    return (this._bitField & 8388608) === 8388608;
};

Promise.prototype._spreadSlowCase =
function Promise$_spreadSlowCase(targetFn, promise, values, boundTo) {
    var promiseForAll =
            Promise$_CreatePromiseArray
                (values, PromiseArray, boundTo)
            .promise()
            ._then(function() {
                return targetFn.apply(boundTo, arguments);
            }, void 0, void 0, APPLY, void 0);

    promise._follow(promiseForAll);
};

Promise.prototype._callSpread =
function Promise$_callSpread(handler, promise, value, localDebugging) {
    var boundTo = this._isBound() ? this._boundTo : void 0;
    if (isArray(value)) {
        for (var i = 0, len = value.length; i < len; ++i) {
            if (isPromise(Promise._cast(value[i], void 0))) {
                this._spreadSlowCase(handler, promise, value, boundTo);
                return;
            }
        }
    }
    if (localDebugging) promise._pushContext();
    return tryCatchApply(handler, value, boundTo);
};

Promise.prototype._callHandler =
function Promise$_callHandler(
    handler, receiver, promise, value, localDebugging) {
    var x;
    if (receiver === APPLY && !this.isRejected()) {
        x = this._callSpread(handler, promise, value, localDebugging);
    }
    else {
        if (localDebugging) promise._pushContext();
        x = tryCatch1(handler, receiver, value);
    }
    if (localDebugging) promise._popContext();
    return x;
};

Promise.prototype._settlePromiseFromHandler =
function Promise$_settlePromiseFromHandler(
    handler, receiver, value, promise
) {
    if (!isPromise(promise)) {
        handler.call(receiver, value, promise);
        return;
    }

    var localDebugging = debugging;
    var x = this._callHandler(handler, receiver,
                                promise, value, localDebugging);

    if (promise._isFollowing()) return;

    if (x === errorObj || x === promise || x === NEXT_FILTER) {
        var err = x === promise
                    ? makeSelfResolutionError()
                    : x.e;
        var trace = canAttach(err) ? err : new Error(err + "");
        if (x !== NEXT_FILTER) promise._attachExtraTrace(trace);
        promise._rejectUnchecked(err, trace);
    }
    else {
        var castValue = Promise._cast(x, promise);
        if (isPromise(castValue)) {
            if (castValue.isRejected() &&
                !castValue._isCarryingStackTrace() &&
                !canAttach(castValue._settledValue)) {
                var trace = new Error(castValue._settledValue + "");
                promise._attachExtraTrace(trace);
                castValue._setCarriedStackTrace(trace);
            }
            promise._follow(castValue);
            if (castValue._cancellable()) {
                promise._cancellationParent = castValue;
                promise._setCancellable();
            }
        }
        else {
            promise._fulfillUnchecked(x);
        }
    }
};

Promise.prototype._follow =
function Promise$_follow(promise) {
    this._setFollowing();

    if (promise.isPending()) {
        if (promise._cancellable() ) {
            this._cancellationParent = promise;
            this._setCancellable();
        }
        promise._proxyPromise(this);
    }
    else if (promise.isFulfilled()) {
        this._fulfillUnchecked(promise._settledValue);
    }
    else {
        this._rejectUnchecked(promise._settledValue,
            promise._getCarriedStackTrace());
    }

    if (promise._isRejectionUnhandled()) promise._unsetRejectionIsUnhandled();

    if (debugging &&
        promise._traceParent == null) {
        promise._traceParent = this;
    }
};

Promise.prototype._tryFollow =
function Promise$_tryFollow(value) {
    if (this._isFollowingOrFulfilledOrRejected() ||
        value === this) {
        return false;
    }
    var maybePromise = Promise._cast(value, void 0);
    if (!isPromise(maybePromise)) {
        return false;
    }
    this._follow(maybePromise);
    return true;
};

Promise.prototype._resetTrace = function Promise$_resetTrace() {
    if (debugging) {
        this._trace = new CapturedTrace(this._peekContext() === void 0);
    }
};

Promise.prototype._setTrace = function Promise$_setTrace(parent) {
    if (debugging) {
        var context = this._peekContext();
        this._traceParent = context;
        var isTopLevel = context === void 0;
        if (parent !== void 0 &&
            parent._traceParent === context) {
            this._trace = parent._trace;
        }
        else {
            this._trace = new CapturedTrace(isTopLevel);
        }
    }
    return this;
};

Promise.prototype._attachExtraTrace =
function Promise$_attachExtraTrace(error) {
    if (debugging) {
        var promise = this;
        var stack = error.stack;
        stack = typeof stack === "string"
            ? stack.split("\n") : [];
        var headerLineCount = 1;

        while(promise != null &&
            promise._trace != null) {
            stack = CapturedTrace.combine(
                stack,
                promise._trace.stack.split("\n")
           );
            promise = promise._traceParent;
        }

        var max = Error.stackTraceLimit + headerLineCount;
        var len = stack.length;
        if (len  > max) {
            stack.length = max;
        }
        if (stack.length <= headerLineCount) {
            error.stack = "(No stack trace)";
        }
        else {
            error.stack = stack.join("\n");
        }
    }
};

Promise.prototype._cleanValues = function Promise$_cleanValues() {
    if (this._cancellable()) {
        this._cancellationParent = void 0;
    }
};

Promise.prototype._fulfill = function Promise$_fulfill(value) {
    if (this._isFollowingOrFulfilledOrRejected()) return;
    this._fulfillUnchecked(value);
};

Promise.prototype._reject =
function Promise$_reject(reason, carriedStackTrace) {
    if (this._isFollowingOrFulfilledOrRejected()) return;
    this._rejectUnchecked(reason, carriedStackTrace);
};

Promise.prototype._settlePromiseAt = function Promise$_settlePromiseAt(index) {
    var handler = this.isFulfilled()
        ? this._fulfillmentHandlerAt(index)
        : this._rejectionHandlerAt(index);

    var value = this._settledValue;
    var receiver = this._receiverAt(index);
    var promise = this._promiseAt(index);

    if (typeof handler === "function") {
        this._settlePromiseFromHandler(handler, receiver, value, promise);
    }
    else {
        var done = false;
        var isFulfilled = this.isFulfilled();
        if (receiver !== void 0) {
            if (receiver instanceof Promise &&
                receiver._isProxied()) {
                receiver._unsetProxied();

                if (isFulfilled) receiver._fulfillUnchecked(value);
                else receiver._rejectUnchecked(value,
                    this._getCarriedStackTrace());
                done = true;
            }
            else if (isPromiseArrayProxy(receiver, promise)) {
                if (isFulfilled) receiver._promiseFulfilled(value, promise);
                else receiver._promiseRejected(value, promise);
                done = true;
            }
        }

        if (!done) {
            if (isFulfilled) promise._fulfill(value);
            else promise._reject(value, this._getCarriedStackTrace());
        }
    }

    if (index >= 256) {
        this._queueGC();
    }
};

Promise.prototype._isProxied = function Promise$_isProxied() {
    return (this._bitField & 4194304) === 4194304;
};

Promise.prototype._setProxied = function Promise$_setProxied() {
    this._bitField = this._bitField | 4194304;
};

Promise.prototype._unsetProxied = function Promise$_unsetProxied() {
    this._bitField = this._bitField & (~4194304);
};

Promise.prototype._isGcQueued = function Promise$_isGcQueued() {
    return (this._bitField & -1073741824) === -1073741824;
};

Promise.prototype._setGcQueued = function Promise$_setGcQueued() {
    this._bitField = this._bitField | -1073741824;
};

Promise.prototype._unsetGcQueued = function Promise$_unsetGcQueued() {
    this._bitField = this._bitField & (~-1073741824);
};

Promise.prototype._queueGC = function Promise$_queueGC() {
    if (this._isGcQueued()) return;
    this._setGcQueued();
    async.invokeLater(this._gc, this, void 0);
};

Promise.prototype._gc = function Promise$gc() {
    var len = this._length();
    this._unsetAt(0);
    for (var i = 0; i < len; i++) {
        delete this[i];
    }
    this._setLength(0);
    this._unsetGcQueued();
};

Promise.prototype._queueSettleAt = function Promise$_queueSettleAt(index) {
    if (this._isRejectionUnhandled()) this._unsetRejectionIsUnhandled();
    async.invoke(this._settlePromiseAt, this, index);
};

Promise.prototype._fulfillUnchecked =
function Promise$_fulfillUnchecked(value) {
    if (!this.isPending()) return;
    if (value === this) {
        var err = makeSelfResolutionError();
        this._attachExtraTrace(err);
        return this._rejectUnchecked(err, void 0);
    }
    this._cleanValues();
    this._setFulfilled();
    this._settledValue = value;
    var len = this._length();

    if (len > 0) {
        async.invoke(this._settlePromises, this, len);
    }
};

Promise.prototype._rejectUncheckedCheckError =
function Promise$_rejectUncheckedCheckError(reason) {
    var trace = canAttach(reason) ? reason : new Error(reason + "");
    this._rejectUnchecked(reason, trace === reason ? void 0 : trace);
};

Promise.prototype._rejectUnchecked =
function Promise$_rejectUnchecked(reason, trace) {
    if (!this.isPending()) return;
    if (reason === this) {
        var err = makeSelfResolutionError();
        this._attachExtraTrace(err);
        return this._rejectUnchecked(err);
    }
    this._cleanValues();
    this._setRejected();
    this._settledValue = reason;

    if (this._isFinal()) {
        async.invokeLater(thrower, void 0, trace === void 0 ? reason : trace);
        return;
    }
    var len = this._length();

    if (trace !== void 0) this._setCarriedStackTrace(trace);

    if (len > 0) {
        async.invoke(this._rejectPromises, this, null);
    }
    else {
        this._ensurePossibleRejectionHandled();
    }
};

Promise.prototype._rejectPromises = function Promise$_rejectPromises() {
    this._settlePromises();
    this._unsetCarriedStackTrace();
};

Promise.prototype._settlePromises = function Promise$_settlePromises() {
    var len = this._length();
    for (var i = 0; i < len; i+= 5) {
        this._settlePromiseAt(i);
    }
};

Promise.prototype._ensurePossibleRejectionHandled =
function Promise$_ensurePossibleRejectionHandled() {
    this._setRejectionIsUnhandled();
    if (CapturedTrace.possiblyUnhandledRejection !== void 0) {
        async.invokeLater(this._notifyUnhandledRejection, this, void 0);
    }
};

Promise.prototype._notifyUnhandledRejectionIsHandled =
function Promise$_notifyUnhandledRejectionIsHandled() {
    if (typeof unhandledRejectionHandled === "function") {
        async.invokeLater(unhandledRejectionHandled, void 0, this);
    }
};

Promise.prototype._notifyUnhandledRejection =
function Promise$_notifyUnhandledRejection() {
    if (this._isRejectionUnhandled()) {
        var reason = this._settledValue;
        var trace = this._getCarriedStackTrace();

        this._setUnhandledRejectionIsNotified();

        if (trace !== void 0) {
            this._unsetCarriedStackTrace();
            reason = trace;
        }
        if (typeof CapturedTrace.possiblyUnhandledRejection === "function") {
            CapturedTrace.possiblyUnhandledRejection(reason, this);
        }
    }
};

var contextStack = [];
Promise.prototype._peekContext = function Promise$_peekContext() {
    var lastIndex = contextStack.length - 1;
    if (lastIndex >= 0) {
        return contextStack[lastIndex];
    }
    return void 0;

};

Promise.prototype._pushContext = function Promise$_pushContext() {
    if (!debugging) return;
    contextStack.push(this);
};

Promise.prototype._popContext = function Promise$_popContext() {
    if (!debugging) return;
    contextStack.pop();
};

function Promise$_CreatePromiseArray(
    promises, PromiseArrayConstructor, boundTo) {

    var list = null;
    if (isArray(promises)) {
        list = promises;
    }
    else {
        list = Promise._cast(promises, void 0);
        if (list !== promises) {
            list._setBoundTo(boundTo);
        }
        else if (!isPromise(list)) {
            list = null;
        }
    }
    if (list !== null) {
        return new PromiseArrayConstructor(list, boundTo);
    }
    return {
        promise: function() {return apiRejection("expecting an array, a promise or a thenable");}
    };
}

var old = global.Promise;
Promise.noConflict = function() {
    if (global.Promise === Promise) {
        global.Promise = old;
    }
    return Promise;
};

if (!CapturedTrace.isSupported()) {
    Promise.longStackTraces = function(){};
    debugging = false;
}

Promise._makeSelfResolutionError = makeSelfResolutionError;
require("./finally.js")(Promise, NEXT_FILTER);
require("./direct_resolve.js")(Promise);
require("./thenables.js")(Promise, INTERNAL);
require("./synchronous_inspection.js")(Promise);
Promise.RangeError = RangeError;
Promise.CancellationError = CancellationError;
Promise.TimeoutError = TimeoutError;
Promise.TypeError = TypeError;
Promise.RejectionError = RejectionError;

util.toFastProperties(Promise);
util.toFastProperties(Promise.prototype);
require('./timers.js')(Promise,INTERNAL);
require('./any.js')(Promise,Promise$_CreatePromiseArray,PromiseArray);
require('./race.js')(Promise,INTERNAL);
require('./call_get.js')(Promise);
require('./filter.js')(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection);
require('./generators.js')(Promise,apiRejection,INTERNAL);
require('./map.js')(Promise,PromiseArray,INTERNAL,apiRejection);
require('./nodeify.js')(Promise);
require('./promisify.js')(Promise,INTERNAL);
require('./props.js')(Promise,PromiseArray);
require('./reduce.js')(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection,INTERNAL);
require('./settle.js')(Promise,Promise$_CreatePromiseArray,PromiseArray);
require('./some.js')(Promise,Promise$_CreatePromiseArray,PromiseArray,apiRejection);
require('./progress.js')(Promise,isPromiseArrayProxy);
require('./cancel.js')(Promise,INTERNAL);

Promise.prototype = Promise.prototype;
return Promise;

};

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./any.js":98,"./async.js":99,"./call_get.js":100,"./cancel.js":101,"./captured_trace.js":102,"./catch_filter.js":103,"./direct_resolve.js":104,"./errors.js":105,"./errors_api_rejection":106,"./filter.js":108,"./finally.js":109,"./generators.js":110,"./global.js":111,"./map.js":112,"./nodeify.js":113,"./progress.js":114,"./promise_array.js":116,"./promise_resolver.js":117,"./promisify.js":119,"./props.js":121,"./race.js":123,"./reduce.js":124,"./settle.js":126,"./some.js":128,"./synchronous_inspection.js":130,"./thenables.js":131,"./timers.js":132,"./util.js":133,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],116:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var canAttach = require("./errors.js").canAttach;
var util = require("./util.js");
var async = require("./async.js");
var hasOwn = {}.hasOwnProperty;
var isArray = util.isArray;

function toResolutionValue(val) {
    switch(val) {
    case -1: return void 0;
    case -2: return [];
    case -3: return {};
    }
}

function PromiseArray(values, boundTo) {
    var promise = this._promise = new Promise(INTERNAL);
    var parent = void 0;
    if (values instanceof Promise) {
        parent = values;
        if (values._cancellable()) {
            promise._setCancellable();
            promise._cancellationParent = values;
        }
        if (values._isBound()) {
            promise._setBoundTo(boundTo);
        }
    }
    promise._setTrace(parent);
    this._values = values;
    this._length = 0;
    this._totalResolved = 0;
    this._init(void 0, -2);
}
PromiseArray.PropertiesPromiseArray = function() {};

PromiseArray.prototype.length = function PromiseArray$length() {
    return this._length;
};

PromiseArray.prototype.promise = function PromiseArray$promise() {
    return this._promise;
};

PromiseArray.prototype._init =
function PromiseArray$_init(_, resolveValueIfEmpty) {
    var values = this._values;
    if (values instanceof Promise) {
        if (values.isFulfilled()) {
            values = values._settledValue;
            if (!isArray(values)) {
                var err = new Promise.TypeError("expecting an array, a promise or a thenable");
                this.__hardReject__(err);
                return;
            }
            this._values = values;
        }
        else if (values.isPending()) {
            values._then(
                this._init,
                this._reject,
                void 0,
                this,
                resolveValueIfEmpty
           );
            return;
        }
        else {
            values._unsetRejectionIsUnhandled();
            this._reject(values._settledValue);
            return;
        }
    }

    if (values.length === 0) {
        this._resolve(toResolutionValue(resolveValueIfEmpty));
        return;
    }
    var len = values.length;
    var newLen = len;
    var newValues;
    if (this instanceof PromiseArray.PropertiesPromiseArray) {
        newValues = this._values;
    }
    else {
        newValues = new Array(len);
    }
    var isDirectScanNeeded = false;
    for (var i = 0; i < len; ++i) {
        var promise = values[i];
        if (promise === void 0 && !hasOwn.call(values, i)) {
            newLen--;
            continue;
        }
        var maybePromise = Promise._cast(promise, void 0);
        if (maybePromise instanceof Promise) {
            if (maybePromise.isPending()) {
                maybePromise._proxyPromiseArray(this, i);
            }
            else {
                maybePromise._unsetRejectionIsUnhandled();
                isDirectScanNeeded = true;
            }
        }
        else {
            isDirectScanNeeded = true;
        }
        newValues[i] = maybePromise;
    }
    if (newLen === 0) {
        if (resolveValueIfEmpty === -2) {
            this._resolve(newValues);
        }
        else {
            this._resolve(toResolutionValue(resolveValueIfEmpty));
        }
        return;
    }
    this._values = newValues;
    this._length = newLen;
    if (isDirectScanNeeded) {
        var scanMethod = newLen === len
            ? this._scanDirectValues
            : this._scanDirectValuesHoled;
        async.invoke(scanMethod, this, len);
    }
};

PromiseArray.prototype._settlePromiseAt =
function PromiseArray$_settlePromiseAt(index) {
    var value = this._values[index];
    if (!(value instanceof Promise)) {
        this._promiseFulfilled(value, index);
    }
    else if (value.isFulfilled()) {
        this._promiseFulfilled(value._settledValue, index);
    }
    else if (value.isRejected()) {
        this._promiseRejected(value._settledValue, index);
    }
};

PromiseArray.prototype._scanDirectValuesHoled =
function PromiseArray$_scanDirectValuesHoled(len) {
    for (var i = 0; i < len; ++i) {
        if (this._isResolved()) {
            break;
        }
        if (hasOwn.call(this._values, i)) {
            this._settlePromiseAt(i);
        }
    }
};

PromiseArray.prototype._scanDirectValues =
function PromiseArray$_scanDirectValues(len) {
    for (var i = 0; i < len; ++i) {
        if (this._isResolved()) {
            break;
        }
        this._settlePromiseAt(i);
    }
};

PromiseArray.prototype._isResolved = function PromiseArray$_isResolved() {
    return this._values === null;
};

PromiseArray.prototype._resolve = function PromiseArray$_resolve(value) {
    this._values = null;
    this._promise._fulfill(value);
};

PromiseArray.prototype.__hardReject__ =
PromiseArray.prototype._reject = function PromiseArray$_reject(reason) {
    this._values = null;
    var trace = canAttach(reason) ? reason : new Error(reason + "");
    this._promise._attachExtraTrace(trace);
    this._promise._reject(reason, trace);
};

PromiseArray.prototype._promiseProgressed =
function PromiseArray$_promiseProgressed(progressValue, index) {
    if (this._isResolved()) return;
    this._promise._progress({
        index: index,
        value: progressValue
    });
};


PromiseArray.prototype._promiseFulfilled =
function PromiseArray$_promiseFulfilled(value, index) {
    if (this._isResolved()) return;
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
    }
};

PromiseArray.prototype._promiseRejected =
function PromiseArray$_promiseRejected(reason, index) {
    if (this._isResolved()) return;
    this._totalResolved++;
    this._reject(reason);
};

return PromiseArray;
};

},{"./async.js":99,"./errors.js":105,"./util.js":133}],117:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var util = require("./util.js");
var maybeWrapAsError = util.maybeWrapAsError;
var errors = require("./errors.js");
var TimeoutError = errors.TimeoutError;
var RejectionError = errors.RejectionError;
var async = require("./async.js");
var haveGetters = util.haveGetters;
var es5 = require("./es5.js");

function isUntypedError(obj) {
    return obj instanceof Error &&
        es5.getPrototypeOf(obj) === Error.prototype;
}

function wrapAsRejectionError(obj) {
    var ret;
    if (isUntypedError(obj)) {
        ret = new RejectionError(obj);
    }
    else {
        ret = obj;
    }
    errors.markAsOriginatingFromRejection(ret);
    return ret;
}

function nodebackForPromise(promise) {
    function PromiseResolver$_callback(err, value) {
        if (promise === null) return;

        if (err) {
            var wrapped = wrapAsRejectionError(maybeWrapAsError(err));
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        }
        else {
            if (arguments.length > 2) {
                var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}
                promise._fulfill(args);
            }
            else {
                promise._fulfill(value);
            }
        }

        promise = null;
    }
    return PromiseResolver$_callback;
}


var PromiseResolver;
if (!haveGetters) {
    PromiseResolver = function PromiseResolver(promise) {
        this.promise = promise;
        this.asCallback = nodebackForPromise(promise);
        this.callback = this.asCallback;
    };
}
else {
    PromiseResolver = function PromiseResolver(promise) {
        this.promise = promise;
    };
}
if (haveGetters) {
    var prop = {
        get: function() {
            return nodebackForPromise(this.promise);
        }
    };
    es5.defineProperty(PromiseResolver.prototype, "asCallback", prop);
    es5.defineProperty(PromiseResolver.prototype, "callback", prop);
}

PromiseResolver._nodebackForPromise = nodebackForPromise;

PromiseResolver.prototype.toString = function PromiseResolver$toString() {
    return "[object PromiseResolver]";
};

PromiseResolver.prototype.resolve =
PromiseResolver.prototype.fulfill = function PromiseResolver$resolve(value) {
    var promise = this.promise;
    if ((promise === void 0) || (promise._tryFollow === void 0)) {
        throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.");
    }
    if (promise._tryFollow(value)) {
        return;
    }
    async.invoke(promise._fulfill, promise, value);
};

PromiseResolver.prototype.reject = function PromiseResolver$reject(reason) {
    var promise = this.promise;
    if ((promise === void 0) || (promise._attachExtraTrace === void 0)) {
        throw new TypeError("Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.");
    }
    errors.markAsOriginatingFromRejection(reason);
    var trace = errors.canAttach(reason) ? reason : new Error(reason + "");
    promise._attachExtraTrace(trace);
    async.invoke(promise._reject, promise, reason);
    if (trace !== reason) {
        async.invoke(this._setCarriedStackTrace, this, trace);
    }
};

PromiseResolver.prototype.progress =
function PromiseResolver$progress(value) {
    async.invoke(this.promise._progress, this.promise, value);
};

PromiseResolver.prototype.cancel = function PromiseResolver$cancel() {
    async.invoke(this.promise.cancel, this.promise, void 0);
};

PromiseResolver.prototype.timeout = function PromiseResolver$timeout() {
    this.reject(new TimeoutError("timeout"));
};

PromiseResolver.prototype.isResolved = function PromiseResolver$isResolved() {
    return this.promise.isResolved();
};

PromiseResolver.prototype.toJSON = function PromiseResolver$toJSON() {
    return this.promise.toJSON();
};

PromiseResolver.prototype._setCarriedStackTrace =
function PromiseResolver$_setCarriedStackTrace(trace) {
    if (this.promise.isRejected()) {
        this.promise._setCarriedStackTrace(trace);
    }
};

module.exports = PromiseResolver;

},{"./async.js":99,"./errors.js":105,"./es5.js":107,"./util.js":133}],118:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var errors = require("./errors.js");
var TypeError = errors.TypeError;
var util = require("./util.js");
var isArray = util.isArray;
var errorObj = util.errorObj;
var tryCatch1 = util.tryCatch1;
var yieldHandlers = [];

function promiseFromYieldHandler(value) {
    var _yieldHandlers = yieldHandlers;
    var _errorObj = errorObj;
    var _Promise = Promise;
    var len = _yieldHandlers.length;
    for (var i = 0; i < len; ++i) {
        var result = tryCatch1(_yieldHandlers[i], void 0, value);
        if (result === _errorObj) {
            return _Promise.reject(_errorObj.e);
        }
        var maybePromise = _Promise._cast(result,
            promiseFromYieldHandler, void 0);
        if (maybePromise instanceof _Promise) return maybePromise;
    }
    return null;
}

function PromiseSpawn(generatorFunction, receiver) {
    var promise = this._promise = new Promise(INTERNAL);
    promise._setTrace(void 0);
    this._generatorFunction = generatorFunction;
    this._receiver = receiver;
    this._generator = void 0;
}

PromiseSpawn.prototype.promise = function PromiseSpawn$promise() {
    return this._promise;
};

PromiseSpawn.prototype._run = function PromiseSpawn$_run() {
    this._generator = this._generatorFunction.call(this._receiver);
    this._receiver =
        this._generatorFunction = void 0;
    this._next(void 0);
};

PromiseSpawn.prototype._continue = function PromiseSpawn$_continue(result) {
    if (result === errorObj) {
        this._generator = void 0;
        var trace = errors.canAttach(result.e)
            ? result.e : new Error(result.e + "");
        this._promise._attachExtraTrace(trace);
        this._promise._reject(result.e, trace);
        return;
    }

    var value = result.value;
    if (result.done === true) {
        this._generator = void 0;
        if (!this._promise._tryFollow(value)) {
            this._promise._fulfill(value);
        }
    }
    else {
        var maybePromise = Promise._cast(value, PromiseSpawn$_continue, void 0);
        if (!(maybePromise instanceof Promise)) {
            if (isArray(maybePromise)) {
                maybePromise = Promise.all(maybePromise);
            }
            else {
                maybePromise = promiseFromYieldHandler(maybePromise);
            }
            if (maybePromise === null) {
                this._throw(new TypeError("A value was yielded that could not be treated as a promise"));
                return;
            }
        }
        maybePromise._then(
            this._next,
            this._throw,
            void 0,
            this,
            null
       );
    }
};

PromiseSpawn.prototype._throw = function PromiseSpawn$_throw(reason) {
    if (errors.canAttach(reason))
        this._promise._attachExtraTrace(reason);
    this._continue(
        tryCatch1(this._generator["throw"], this._generator, reason)
   );
};

PromiseSpawn.prototype._next = function PromiseSpawn$_next(value) {
    this._continue(
        tryCatch1(this._generator.next, this._generator, value)
   );
};

PromiseSpawn.addYieldHandler = function PromiseSpawn$AddYieldHandler(fn) {
    if (typeof fn !== "function") throw new TypeError("fn must be a function");
    yieldHandlers.push(fn);
};

return PromiseSpawn;
};

},{"./errors.js":105,"./util.js":133}],119:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var THIS = {};
var util = require("./util.js");
var es5 = require("./es5.js");
var nodebackForPromise = require("./promise_resolver.js")
    ._nodebackForPromise;
var withAppended = util.withAppended;
var maybeWrapAsError = util.maybeWrapAsError;
var canEvaluate = util.canEvaluate;
var deprecated = util.deprecated;
var TypeError = require("./errors").TypeError;


var rasyncSuffix = new RegExp("Async" + "$");
function isPromisified(fn) {
    return fn.__isPromisified__ === true;
}
function hasPromisified(obj, key) {
    var containsKey = ((key + "Async") in obj);
    return containsKey ? isPromisified(obj[key + "Async"])
                       : false;
}
function checkValid(ret) {
    for (var i = 0; i < ret.length; i += 2) {
        var key = ret[i];
        if (rasyncSuffix.test(key)) {
            var keyWithoutAsyncSuffix = key.replace(rasyncSuffix, "");
            for (var j = 0; j < ret.length; j += 2) {
                if (ret[j] === keyWithoutAsyncSuffix) {
                    throw new TypeError("Cannot promisify an API " +
                        "that has normal methods with Async-suffix");
                }
            }
        }
    }
}
var inheritedMethods = (function() {
    if (es5.isES5) {
        var create = Object.create;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        return function(cur) {
            var ret = [];
            var visitedKeys = create(null);
            var original = cur;
            while (cur !== null) {
                var keys = es5.keys(cur);
                for (var i = 0, len = keys.length; i < len; ++i) {
                    var key = keys[i];
                    if (visitedKeys[key]) continue;
                    visitedKeys[key] = true;
                    var desc = getOwnPropertyDescriptor(cur, key);

                    if (desc != null &&
                        typeof desc.value === "function" &&
                        !isPromisified(desc.value) &&
                        !hasPromisified(original, key)) {
                        ret.push(key, desc.value);
                    }
                }
                cur = es5.getPrototypeOf(cur);
            }
            checkValid(ret);
            return ret;
        };
    }
    else {
        return function(obj) {
            var ret = [];
            /*jshint forin:false */
            for (var key in obj) {
                var fn = obj[key];
                if (typeof fn === "function" &&
                    !isPromisified(fn) &&
                    !hasPromisified(obj, key)) {
                    ret.push(key, fn);
                }
            }
            checkValid(ret);
            return ret;
        };
    }
})();

function switchCaseArgumentOrder(likelyArgumentCount) {
    var ret = [likelyArgumentCount];
    var min = Math.max(0, likelyArgumentCount - 1 - 5);
    for(var i = likelyArgumentCount - 1; i >= min; --i) {
        if (i === likelyArgumentCount) continue;
        ret.push(i);
    }
    for(var i = likelyArgumentCount + 1; i <= 5; ++i) {
        ret.push(i);
    }
    return ret;
}

function parameterDeclaration(parameterCount) {
    var ret = new Array(parameterCount);
    for(var i = 0; i < ret.length; ++i) {
        ret[i] = "_arg" + i;
    }
    return ret.join(", ");
}

function parameterCount(fn) {
    if (typeof fn.length === "number") {
        return Math.max(Math.min(fn.length, 1023 + 1), 0);
    }
    return 0;
}

var rident = /^[a-z$_][a-z$_0-9]*$/i;
function propertyAccess(id) {
    if (rident.test(id)) {
        return "." + id;
    }
    else return "['" + id.replace(/(['\\])/g, "\\$1") + "']";
}

function makeNodePromisifiedEval(callback, receiver, originalName, fn) {
    var newParameterCount = Math.max(0, parameterCount(fn) - 1);
    var argumentOrder = switchCaseArgumentOrder(newParameterCount);

    var callbackName = (typeof originalName === "string" ?
        originalName + "Async" :
        "promisified");

    function generateCallForArgumentCount(count) {
        var args = new Array(count);
        for (var i = 0, len = args.length; i < len; ++i) {
            args[i] = "arguments[" + i + "]";
        }
        var comma = count > 0 ? "," : "";

        if (typeof callback === "string" &&
            receiver === THIS) {
            return "this" + propertyAccess(callback) + "("+args.join(",") +
                comma +" fn);"+
                "break;";
        }
        return (receiver === void 0
            ? "callback("+args.join(",")+ comma +" fn);"
            : "callback.call("+(receiver === THIS
                ? "this"
                : "receiver")+", "+args.join(",") + comma + " fn);") +
        "break;";
    }

    if (!rident.test(callbackName)) {
        callbackName = "promisified";
    }

    function generateArgumentSwitchCase() {
        var ret = "";
        for(var i = 0; i < argumentOrder.length; ++i) {
            ret += "case " + argumentOrder[i] +":" +
                generateCallForArgumentCount(argumentOrder[i]);
        }
        ret += "default: var args = new Array(len + 1);" +
            "var i = 0;" +
            "for (var i = 0; i < len; ++i) { " +
            "   args[i] = arguments[i];" +
            "}" +
            "args[i] = fn;" +

            (typeof callback === "string"
            ? "this" + propertyAccess(callback) + ".apply("
            : "callback.apply(") +

            (receiver === THIS ? "this" : "receiver") +
            ", args); break;";
        return ret;
    }

    return new Function("Promise", "callback", "receiver",
            "withAppended", "maybeWrapAsError", "nodebackForPromise",
            "INTERNAL",
        "var ret = function " + callbackName +
        "(" + parameterDeclaration(newParameterCount) + ") {\"use strict\";" +
        "var len = arguments.length;" +
        "var promise = new Promise(INTERNAL);"+
        "promise._setTrace(void 0);" +
        "var fn = nodebackForPromise(promise);"+
        "try {" +
        "switch(len) {" +
        generateArgumentSwitchCase() +
        "}" +
        "}" +
        "catch(e){ " +
        "var wrapped = maybeWrapAsError(e);" +
        "promise._attachExtraTrace(wrapped);" +
        "promise._reject(wrapped);" +
        "}" +
        "return promise;" +
        "" +
        "}; ret.__isPromisified__ = true; return ret;"
   )(Promise, callback, receiver, withAppended,
        maybeWrapAsError, nodebackForPromise, INTERNAL);
}

function makeNodePromisifiedClosure(callback, receiver) {
    function promisified() {
        var _receiver = receiver;
        if (receiver === THIS) _receiver = this;
        if (typeof callback === "string") {
            callback = _receiver[callback];
        }
        var promise = new Promise(INTERNAL);
        promise._setTrace(void 0);
        var fn = nodebackForPromise(promise);
        try {
            callback.apply(_receiver, withAppended(arguments, fn));
        }
        catch(e) {
            var wrapped = maybeWrapAsError(e);
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        }
        return promise;
    }
    promisified.__isPromisified__ = true;
    return promisified;
}

var makeNodePromisified = canEvaluate
    ? makeNodePromisifiedEval
    : makeNodePromisifiedClosure;

function _promisify(callback, receiver, isAll) {
    if (isAll) {
        var methods = inheritedMethods(callback);
        for (var i = 0, len = methods.length; i < len; i+= 2) {
            var key = methods[i];
            var fn = methods[i+1];
            var promisifiedKey = key + "Async";
            callback[promisifiedKey] = makeNodePromisified(key, THIS, key, fn);
        }
        util.toFastProperties(callback);
        return callback;
    }
    else {
        return makeNodePromisified(callback, receiver, void 0, callback);
    }
}

Promise.promisify = function Promise$Promisify(fn, receiver) {
    if (typeof fn === "object" && fn !== null) {
        deprecated("Promise.promisify for promisifying entire objects is deprecated. Use Promise.promisifyAll instead.");
        return _promisify(fn, receiver, true);
    }
    if (typeof fn !== "function") {
        throw new TypeError("fn must be a function");
    }
    if (isPromisified(fn)) {
        return fn;
    }
    return _promisify(
        fn,
        arguments.length < 2 ? THIS : receiver,
        false);
};

Promise.promisifyAll = function Promise$PromisifyAll(target) {
    if (typeof target !== "function" && typeof target !== "object") {
        throw new TypeError("the target of promisifyAll must be an object or a function");
    }
    return _promisify(target, void 0, true);
};
};


},{"./errors":105,"./es5.js":107,"./promise_resolver.js":117,"./util.js":133}],120:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray) {
var util = require("./util.js");
var inherits = util.inherits;
var es5 = require("./es5.js");

function PropertiesPromiseArray(obj, boundTo) {
    var keys = es5.keys(obj);
    var values = new Array(keys.length);
    for (var i = 0, len = values.length; i < len; ++i) {
        values[i] = obj[keys[i]];
    }
    this.constructor$(values, boundTo);
    if (!this._isResolved()) {
        for (var i = 0, len = keys.length; i < len; ++i) {
            values.push(keys[i]);
        }
    }
}
inherits(PropertiesPromiseArray, PromiseArray);

PropertiesPromiseArray.prototype._init =
function PropertiesPromiseArray$_init() {
    this._init$(void 0, -3) ;
};

PropertiesPromiseArray.prototype._promiseFulfilled =
function PropertiesPromiseArray$_promiseFulfilled(value, index) {
    if (this._isResolved()) return;
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        var val = {};
        var keyOffset = this.length();
        for (var i = 0, len = this.length(); i < len; ++i) {
            val[this._values[i + keyOffset]] = this._values[i];
        }
        this._resolve(val);
    }
};

PropertiesPromiseArray.prototype._promiseProgressed =
function PropertiesPromiseArray$_promiseProgressed(value, index) {
    if (this._isResolved()) return;

    this._promise._progress({
        key: this._values[index + this.length()],
        value: value
    });
};

PromiseArray.PropertiesPromiseArray = PropertiesPromiseArray;

return PropertiesPromiseArray;
};

},{"./es5.js":107,"./util.js":133}],121:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray) {
var PropertiesPromiseArray = require("./properties_promise_array.js")(
    Promise, PromiseArray);
var util = require("./util.js");
var apiRejection = require("./errors_api_rejection")(Promise);
var isObject = util.isObject;

function Promise$_Props(promises, useBound) {
    var ret;
    var castValue = Promise._cast(promises, void 0);

    if (!isObject(castValue)) {
        return apiRejection("cannot await properties of a non-object");
    }
    else if (castValue instanceof Promise) {
        ret = castValue._then(Promise.props, void 0, void 0,
                        void 0, void 0);
    }
    else {
        ret = new PropertiesPromiseArray(
            castValue,
            useBound === true && castValue._isBound()
                        ? castValue._boundTo
                        : void 0
       ).promise();
        useBound = false;
    }
    if (useBound === true && castValue._isBound()) {
        ret._setBoundTo(castValue._boundTo);
    }
    return ret;
}

Promise.prototype.props = function Promise$props() {
    return Promise$_Props(this, true);
};

Promise.props = function Promise$Props(promises) {
    return Promise$_Props(promises, false);
};
};

},{"./errors_api_rejection":106,"./properties_promise_array.js":120,"./util.js":133}],122:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
function arrayCopy(src, srcIndex, dst, dstIndex, len) {
    for (var j = 0; j < len; ++j) {
        dst[j + dstIndex] = src[j + srcIndex];
    }
}

function pow2AtLeast(n) {
    n = n >>> 0;
    n = n - 1;
    n = n | (n >> 1);
    n = n | (n >> 2);
    n = n | (n >> 4);
    n = n | (n >> 8);
    n = n | (n >> 16);
    return n + 1;
}

function getCapacity(capacity) {
    if (typeof capacity !== "number") return 16;
    return pow2AtLeast(
        Math.min(
            Math.max(16, capacity), 1073741824)
   );
}

function Queue(capacity) {
    this._capacity = getCapacity(capacity);
    this._length = 0;
    this._front = 0;
    this._makeCapacity();
}

Queue.prototype._willBeOverCapacity =
function Queue$_willBeOverCapacity(size) {
    return this._capacity < size;
};

Queue.prototype._pushOne = function Queue$_pushOne(arg) {
    var length = this.length();
    this._checkCapacity(length + 1);
    var i = (this._front + length) & (this._capacity - 1);
    this[i] = arg;
    this._length = length + 1;
};

Queue.prototype.push = function Queue$push(fn, receiver, arg) {
    var length = this.length() + 3;
    if (this._willBeOverCapacity(length)) {
        this._pushOne(fn);
        this._pushOne(receiver);
        this._pushOne(arg);
        return;
    }
    var j = this._front + length - 3;
    this._checkCapacity(length);
    var wrapMask = this._capacity - 1;
    this[(j + 0) & wrapMask] = fn;
    this[(j + 1) & wrapMask] = receiver;
    this[(j + 2) & wrapMask] = arg;
    this._length = length;
};

Queue.prototype.shift = function Queue$shift() {
    var front = this._front,
        ret = this[front];

    this[front] = void 0;
    this._front = (front + 1) & (this._capacity - 1);
    this._length--;
    return ret;
};

Queue.prototype.length = function Queue$length() {
    return this._length;
};

Queue.prototype._makeCapacity = function Queue$_makeCapacity() {
    var len = this._capacity;
    for (var i = 0; i < len; ++i) {
        this[i] = void 0;
    }
};

Queue.prototype._checkCapacity = function Queue$_checkCapacity(size) {
    if (this._capacity < size) {
        this._resizeTo(this._capacity << 3);
    }
};

Queue.prototype._resizeTo = function Queue$_resizeTo(capacity) {
    var oldFront = this._front;
    var oldCapacity = this._capacity;
    var oldQueue = new Array(oldCapacity);
    var length = this.length();

    arrayCopy(this, 0, oldQueue, 0, oldCapacity);
    this._capacity = capacity;
    this._makeCapacity();
    this._front = 0;
    if (oldFront + length <= oldCapacity) {
        arrayCopy(oldQueue, oldFront, this, 0, length);
    }
    else {        var lengthBeforeWrapping =
            length - ((oldFront + length) & (oldCapacity - 1));

        arrayCopy(oldQueue, oldFront, this, 0, lengthBeforeWrapping);
        arrayCopy(oldQueue, 0, this, lengthBeforeWrapping,
                    length - lengthBeforeWrapping);
    }
};

module.exports = Queue;

},{}],123:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var apiRejection = require("./errors_api_rejection.js")(Promise);
var isArray = require("./util.js").isArray;

var raceLater = function Promise$_raceLater(promise) {
    return promise.then(function(array) {
        return Promise$_Race(array, promise);
    });
};

var hasOwn = {}.hasOwnProperty;
function Promise$_Race(promises, parent) {
    var maybePromise = Promise._cast(promises, void 0);

    if (maybePromise instanceof Promise) {
        return raceLater(maybePromise);
    }
    else if (!isArray(promises)) {
        return apiRejection("expecting an array, a promise or a thenable");
    }

    var ret = new Promise(INTERNAL);
    ret._setTrace(parent);
    if (parent !== void 0) {
        if (parent._isBound()) {
            ret._setBoundTo(parent._boundTo);
        }
        if (parent._cancellable()) {
            ret._setCancellable();
            ret._cancellationParent = parent;
        }
    }
    var fulfill = ret._fulfill;
    var reject = ret._reject;
    for (var i = 0, len = promises.length; i < len; ++i) {
        var val = promises[i];

        if (val === void 0 && !(hasOwn.call(promises, i))) {
            continue;
        }

        Promise.cast(val)._then(
            fulfill,
            reject,
            void 0,
            ret,
            null
       );
    }
    return ret;
}

Promise.race = function Promise$Race(promises) {
    return Promise$_Race(promises, void 0);
};

Promise.prototype.race = function Promise$race() {
    return Promise$_Race(this, void 0);
};

};

},{"./errors_api_rejection.js":106,"./util.js":133}],124:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(
    Promise, Promise$_CreatePromiseArray,
    PromiseArray, apiRejection, INTERNAL) {

function Reduction(callback, index, accum, items, receiver) {
    this.promise = new Promise(INTERNAL);
    this.index = index;
    this.length = items.length;
    this.items = items;
    this.callback = callback;
    this.receiver = receiver;
    this.accum = accum;
}

Reduction.prototype.reject = function Reduction$reject(e) {
    this.promise._reject(e);
};

Reduction.prototype.fulfill = function Reduction$fulfill(value, index) {
    this.accum = value;
    this.index = index + 1;
    this.iterate();
};

Reduction.prototype.iterate = function Reduction$iterate() {
    var i = this.index;
    var len = this.length;
    var items = this.items;
    var result = this.accum;
    var receiver = this.receiver;
    var callback = this.callback;

    for (; i < len; ++i) {
        result = callback.call(receiver, result, items[i], i, len);
        result = Promise._cast(result, void 0);

        if (result instanceof Promise) {
            result._then(
                this.fulfill, this.reject, void 0, this, i);
            return;
        }
    }
    this.promise._fulfill(result);
};

function Promise$_reducer(fulfilleds, initialValue) {
    var fn = this;
    var receiver = void 0;
    if (typeof fn !== "function")  {
        receiver = fn.receiver;
        fn = fn.fn;
    }
    var len = fulfilleds.length;
    var accum = void 0;
    var startIndex = 0;

    if (initialValue !== void 0) {
        accum = initialValue;
        startIndex = 0;
    }
    else {
        startIndex = 1;
        if (len > 0) accum = fulfilleds[0];
    }
    var i = startIndex;

    if (i >= len) {
        return accum;
    }

    var reduction = new Reduction(fn, i, accum, fulfilleds, receiver);
    reduction.iterate();
    return reduction.promise;
}

function Promise$_unpackReducer(fulfilleds) {
    var fn = this.fn;
    var initialValue = this.initialValue;
    return Promise$_reducer.call(fn, fulfilleds, initialValue);
}

function Promise$_slowReduce(
    promises, fn, initialValue, useBound) {
    return initialValue._then(function(initialValue) {
        return Promise$_Reduce(
            promises, fn, initialValue, useBound);
    }, void 0, void 0, void 0, void 0);
}

function Promise$_Reduce(promises, fn, initialValue, useBound) {
    if (typeof fn !== "function") {
        return apiRejection("fn must be a function");
    }

    if (useBound === true && promises._isBound()) {
        fn = {
            fn: fn,
            receiver: promises._boundTo
        };
    }

    if (initialValue !== void 0) {
        if (initialValue instanceof Promise) {
            if (initialValue.isFulfilled()) {
                initialValue = initialValue._settledValue;
            }
            else {
                return Promise$_slowReduce(promises,
                    fn, initialValue, useBound);
            }
        }

        return Promise$_CreatePromiseArray(promises, PromiseArray,
            useBound === true && promises._isBound()
                ? promises._boundTo
                : void 0)
            .promise()
            ._then(Promise$_unpackReducer, void 0, void 0, {
                fn: fn,
                initialValue: initialValue
            }, void 0);
    }
    return Promise$_CreatePromiseArray(promises, PromiseArray,
            useBound === true && promises._isBound()
                ? promises._boundTo
                : void 0).promise()
        ._then(Promise$_reducer, void 0, void 0, fn, void 0);
}


Promise.reduce = function Promise$Reduce(promises, fn, initialValue) {
    return Promise$_Reduce(promises, fn, initialValue, false);
};

Promise.prototype.reduce = function Promise$reduce(fn, initialValue) {
    return Promise$_Reduce(this, fn, initialValue, true);
};
};

},{}],125:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var global = require("./global.js");
var schedule;
if (typeof process !== "undefined" && process !== null &&
    typeof process.cwd === "function" &&
    typeof process.nextTick === "function" &&
    typeof process.version === "string") {
    schedule = function Promise$_Scheduler(fn) {
        process.nextTick(fn);
    };
}
else if ((typeof global.MutationObserver === "function" ||
        typeof global.WebkitMutationObserver === "function" ||
        typeof global.WebKitMutationObserver === "function") &&
        typeof document !== "undefined" &&
        typeof document.createElement === "function") {


    schedule = (function(){
        var MutationObserver = global.MutationObserver ||
            global.WebkitMutationObserver ||
            global.WebKitMutationObserver;
        var div = document.createElement("div");
        var queuedFn = void 0;
        var observer = new MutationObserver(
            function Promise$_Scheduler() {
                var fn = queuedFn;
                queuedFn = void 0;
                fn();
            }
       );
        observer.observe(div, {
            attributes: true
        });
        return function Promise$_Scheduler(fn) {
            queuedFn = fn;
            div.setAttribute("class", "foo");
        };

    })();
}
else if (typeof global.postMessage === "function" &&
    typeof global.importScripts !== "function" &&
    typeof global.addEventListener === "function" &&
    typeof global.removeEventListener === "function") {

    var MESSAGE_KEY = "bluebird_message_key_" + Math.random();
    schedule = (function(){
        var queuedFn = void 0;

        function Promise$_Scheduler(e) {
            if (e.source === global &&
                e.data === MESSAGE_KEY) {
                var fn = queuedFn;
                queuedFn = void 0;
                fn();
            }
        }

        global.addEventListener("message", Promise$_Scheduler, false);

        return function Promise$_Scheduler(fn) {
            queuedFn = fn;
            global.postMessage(
                MESSAGE_KEY, "*"
           );
        };

    })();
}
else if (typeof global.MessageChannel === "function") {
    schedule = (function(){
        var queuedFn = void 0;

        var channel = new global.MessageChannel();
        channel.port1.onmessage = function Promise$_Scheduler() {
                var fn = queuedFn;
                queuedFn = void 0;
                fn();
        };

        return function Promise$_Scheduler(fn) {
            queuedFn = fn;
            channel.port2.postMessage(null);
        };
    })();
}
else if (global.setTimeout) {
    schedule = function Promise$_Scheduler(fn) {
        setTimeout(fn, 4);
    };
}
else {
    schedule = function Promise$_Scheduler(fn) {
        fn();
    };
}

module.exports = schedule;

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./global.js":111,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],126:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports =
    function(Promise, Promise$_CreatePromiseArray, PromiseArray) {

var SettledPromiseArray = require("./settled_promise_array.js")(
    Promise, PromiseArray);

function Promise$_Settle(promises, useBound) {
    return Promise$_CreatePromiseArray(
        promises,
        SettledPromiseArray,
        useBound === true && promises._isBound()
            ? promises._boundTo
            : void 0
   ).promise();
}

Promise.settle = function Promise$Settle(promises) {
    return Promise$_Settle(promises, false);
};

Promise.prototype.settle = function Promise$settle() {
    return Promise$_Settle(this, true);
};
};

},{"./settled_promise_array.js":127}],127:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, PromiseArray) {
var PromiseInspection = Promise.PromiseInspection;
var util = require("./util.js");
var inherits = util.inherits;
function SettledPromiseArray(values, boundTo) {
    this.constructor$(values, boundTo);
}
inherits(SettledPromiseArray, PromiseArray);

SettledPromiseArray.prototype._promiseResolved =
function SettledPromiseArray$_promiseResolved(index, inspection) {
    this._values[index] = inspection;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
    }
};

SettledPromiseArray.prototype._promiseFulfilled =
function SettledPromiseArray$_promiseFulfilled(value, index) {
    if (this._isResolved()) return;
    var ret = new PromiseInspection();
    ret._bitField = 268435456;
    ret._settledValue = value;
    this._promiseResolved(index, ret);
};
SettledPromiseArray.prototype._promiseRejected =
function SettledPromiseArray$_promiseRejected(reason, index) {
    if (this._isResolved()) return;
    var ret = new PromiseInspection();
    ret._bitField = 134217728;
    ret._settledValue = reason;
    this._promiseResolved(index, ret);
};

return SettledPromiseArray;
};

},{"./util.js":133}],128:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports =
function(Promise, Promise$_CreatePromiseArray, PromiseArray, apiRejection) {

var SomePromiseArray = require("./some_promise_array.js")(PromiseArray);
function Promise$_Some(promises, howMany, useBound) {
    if ((howMany | 0) !== howMany || howMany < 0) {
        return apiRejection("expecting a positive integer");
    }
    var ret = Promise$_CreatePromiseArray(
        promises,
        SomePromiseArray,
        useBound === true && promises._isBound()
            ? promises._boundTo
            : void 0
   );
    var promise = ret.promise();
    if (promise.isRejected()) {
        return promise;
    }
    ret.setHowMany(howMany);
    ret.init();
    return promise;
}

Promise.some = function Promise$Some(promises, howMany) {
    return Promise$_Some(promises, howMany, false);
};

Promise.prototype.some = function Promise$some(count) {
    return Promise$_Some(this, count, true);
};

};

},{"./some_promise_array.js":129}],129:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function (PromiseArray) {
var util = require("./util.js");
var RangeError = require("./errors.js").RangeError;
var inherits = util.inherits;
var isArray = util.isArray;

function SomePromiseArray(values, boundTo) {
    this.constructor$(values, boundTo);
    this._howMany = 0;
    this._unwrap = false;
    this._initialized = false;
}
inherits(SomePromiseArray, PromiseArray);

SomePromiseArray.prototype._init = function SomePromiseArray$_init() {
    if (!this._initialized) {
        return;
    }
    if (this._howMany === 0) {
        this._resolve([]);
        return;
    }
    this._init$(void 0, -2);
    var isArrayResolved = isArray(this._values);
    this._holes = isArrayResolved ? this._values.length - this.length() : 0;

    if (!this._isResolved() &&
        isArrayResolved &&
        this._howMany > this._canPossiblyFulfill()) {
        var message = "(Promise.some) input array contains less than " +
                        this._howMany  + " promises";
        this._reject(new RangeError(message));
    }
};

SomePromiseArray.prototype.init = function SomePromiseArray$init() {
    this._initialized = true;
    this._init();
};

SomePromiseArray.prototype.setUnwrap = function SomePromiseArray$setUnwrap() {
    this._unwrap = true;
};

SomePromiseArray.prototype.howMany = function SomePromiseArray$howMany() {
    return this._howMany;
};

SomePromiseArray.prototype.setHowMany =
function SomePromiseArray$setHowMany(count) {
    if (this._isResolved()) return;
    this._howMany = count;
};

SomePromiseArray.prototype._promiseFulfilled =
function SomePromiseArray$_promiseFulfilled(value) {
    if (this._isResolved()) return;
    this._addFulfilled(value);
    if (this._fulfilled() === this.howMany()) {
        this._values.length = this.howMany();
        if (this.howMany() === 1 && this._unwrap) {
            this._resolve(this._values[0]);
        }
        else {
            this._resolve(this._values);
        }
    }

};
SomePromiseArray.prototype._promiseRejected =
function SomePromiseArray$_promiseRejected(reason) {
    if (this._isResolved()) return;
    this._addRejected(reason);
    if (this.howMany() > this._canPossiblyFulfill()) {
        if (this._values.length === this.length()) {
            this._reject([]);
        }
        else {
            this._reject(this._values.slice(this.length() + this._holes));
        }
    }
};

SomePromiseArray.prototype._fulfilled = function SomePromiseArray$_fulfilled() {
    return this._totalResolved;
};

SomePromiseArray.prototype._rejected = function SomePromiseArray$_rejected() {
    return this._values.length - this.length() - this._holes;
};

SomePromiseArray.prototype._addRejected =
function SomePromiseArray$_addRejected(reason) {
    this._values.push(reason);
};

SomePromiseArray.prototype._addFulfilled =
function SomePromiseArray$_addFulfilled(value) {
    this._values[this._totalResolved++] = value;
};

SomePromiseArray.prototype._canPossiblyFulfill =
function SomePromiseArray$_canPossiblyFulfill() {
    return this.length() - this._rejected();
};

return SomePromiseArray;
};

},{"./errors.js":105,"./util.js":133}],130:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise) {
function PromiseInspection(promise) {
    if (promise !== void 0) {
        this._bitField = promise._bitField;
        this._settledValue = promise.isResolved()
            ? promise._settledValue
            : void 0;
    }
    else {
        this._bitField = 0;
        this._settledValue = void 0;
    }
}

PromiseInspection.prototype.isFulfilled =
Promise.prototype.isFulfilled = function Promise$isFulfilled() {
    return (this._bitField & 268435456) > 0;
};

PromiseInspection.prototype.isRejected =
Promise.prototype.isRejected = function Promise$isRejected() {
    return (this._bitField & 134217728) > 0;
};

PromiseInspection.prototype.isPending =
Promise.prototype.isPending = function Promise$isPending() {
    return (this._bitField & 402653184) === 0;
};

PromiseInspection.prototype.value =
Promise.prototype.value = function Promise$value() {
    if (!this.isFulfilled()) {
        throw new TypeError("cannot get fulfillment value of a non-fulfilled promise");
    }
    return this._settledValue;
};

PromiseInspection.prototype.error =
Promise.prototype.reason = function Promise$reason() {
    if (!this.isRejected()) {
        throw new TypeError("cannot get rejection reason of a non-rejected promise");
    }
    return this._settledValue;
};

PromiseInspection.prototype.isResolved =
Promise.prototype.isResolved = function Promise$isResolved() {
    return (this._bitField & 402653184) > 0;
};

Promise.prototype.inspect = function Promise$inspect() {
    return new PromiseInspection(this);
};

Promise.PromiseInspection = PromiseInspection;
};

},{}],131:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
module.exports = function(Promise, INTERNAL) {
var util = require("./util.js");
var canAttach = require("./errors.js").canAttach;
var errorObj = util.errorObj;
var isObject = util.isObject;

function getThen(obj) {
    try {
        return obj.then;
    }
    catch(e) {
        errorObj.e = e;
        return errorObj;
    }
}

function Promise$_Cast(obj, originalPromise) {
    if (isObject(obj)) {
        if (obj instanceof Promise) {
            return obj;
        }
        else if (isAnyBluebirdPromise(obj)) {
            var ret = new Promise(INTERNAL);
            ret._setTrace(void 0);
            obj._then(
                ret._fulfillUnchecked,
                ret._rejectUncheckedCheckError,
                ret._progressUnchecked,
                ret,
                null
            );
            ret._setFollowing();
            return ret;
        }
        var then = getThen(obj);
        if (then === errorObj) {
            if (originalPromise !== void 0 && canAttach(then.e)) {
                originalPromise._attachExtraTrace(then.e);
            }
            return Promise.reject(then.e);
        }
        else if (typeof then === "function") {
            return Promise$_doThenable(obj, then, originalPromise);
        }
    }
    return obj;
}

var hasProp = {}.hasOwnProperty;
function isAnyBluebirdPromise(obj) {
    return hasProp.call(obj, "_promise0");
}

function Promise$_doThenable(x, then, originalPromise) {
    var resolver = Promise.defer();
    var called = false;
    try {
        then.call(
            x,
            Promise$_resolveFromThenable,
            Promise$_rejectFromThenable,
            Promise$_progressFromThenable
        );
    }
    catch(e) {
        if (!called) {
            called = true;
            var trace = canAttach(e) ? e : new Error(e + "");
            if (originalPromise !== void 0) {
                originalPromise._attachExtraTrace(trace);
            }
            resolver.promise._reject(e, trace);
        }
    }
    return resolver.promise;

    function Promise$_resolveFromThenable(y) {
        if (called) return;
        called = true;

        if (x === y) {
            var e = Promise._makeSelfResolutionError();
            if (originalPromise !== void 0) {
                originalPromise._attachExtraTrace(e);
            }
            resolver.promise._reject(e, void 0);
            return;
        }
        resolver.resolve(y);
    }

    function Promise$_rejectFromThenable(r) {
        if (called) return;
        called = true;
        var trace = canAttach(r) ? r : new Error(r + "");
        if (originalPromise !== void 0) {
            originalPromise._attachExtraTrace(trace);
        }
        resolver.promise._reject(r, trace);
    }

    function Promise$_progressFromThenable(v) {
        if (called) return;
        var promise = resolver.promise;
        if (typeof promise._progress === "function") {
            promise._progress(v);
        }
    }
}

Promise._cast = Promise$_Cast;
};

},{"./errors.js":105,"./util.js":133}],132:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var global = require("./global.js");
var setTimeout = function(fn, ms) {
    var $_len = arguments.length;var args = new Array($_len - 2); for(var $_i = 2; $_i < $_len; ++$_i) {args[$_i - 2] = arguments[$_i];}
    global.setTimeout(function(){
        fn.apply(void 0, args);
    }, ms);
};

module.exports = function(Promise, INTERNAL) {
var util = require("./util.js");
var errors = require("./errors.js");
var apiRejection = require("./errors_api_rejection")(Promise);
var TimeoutError = Promise.TimeoutError;

var afterTimeout = function Promise$_afterTimeout(promise, message, ms) {
    if (!promise.isPending()) return;
    if (typeof message !== "string") {
        message = "operation timed out after" + " " + ms + " ms"
    }
    var err = new TimeoutError(message);
    errors.markAsOriginatingFromRejection(err);
    promise._attachExtraTrace(err);
    promise._rejectUnchecked(err);
};

var afterDelay = function Promise$_afterDelay(value, promise) {
    promise._fulfill(value);
};

var delay = Promise.delay = function Promise$Delay(value, ms) {
    if (ms === void 0) {
        ms = value;
        value = void 0;
    }
    ms = +ms;
    var maybePromise = Promise._cast(value, void 0);
    var promise = new Promise(INTERNAL);

    if (maybePromise instanceof Promise) {
        if (maybePromise._isBound()) {
            promise._setBoundTo(maybePromise._boundTo);
        }
        if (maybePromise._cancellable()) {
            promise._setCancellable();
            promise._cancellationParent = maybePromise;
        }
        promise._setTrace(maybePromise);
        promise._follow(maybePromise);
        return promise.then(function(value) {
            return Promise.delay(value, ms);
        });
    }
    else {
        promise._setTrace(void 0);
        setTimeout(afterDelay, ms, value, promise);
    }
    return promise;
};

Promise.prototype.delay = function Promise$delay(ms) {
    return delay(this, ms);
};

Promise.prototype.timeout = function Promise$timeout(ms, message) {
    ms = +ms;

    var ret = new Promise(INTERNAL);
    ret._setTrace(this);

    if (this._isBound()) ret._setBoundTo(this._boundTo);
    if (this._cancellable()) {
        ret._setCancellable();
        ret._cancellationParent = this;
    }
    ret._follow(this);
    setTimeout(afterTimeout, ms, ret, message, ms);
    return ret;
};

};

},{"./errors.js":105,"./errors_api_rejection":106,"./global.js":111,"./util.js":133}],133:[function(require,module,exports){
/**
 * Copyright (c) 2014 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:</p>
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
"use strict";
var global = require("./global.js");
var es5 = require("./es5.js");
var haveGetters = (function(){
    try {
        var o = {};
        es5.defineProperty(o, "f", {
            get: function () {
                return 3;
            }
        });
        return o.f === 3;
    }
    catch (e) {
        return false;
    }

})();

var canEvaluate = (function() {
    if (typeof window !== "undefined" && window !== null &&
        typeof window.document !== "undefined" &&
        typeof navigator !== "undefined" && navigator !== null &&
        typeof navigator.appName === "string" &&
        window === global) {
        return false;
    }
    return true;
})();

function deprecated(msg) {
    if (typeof console !== "undefined" && console !== null &&
        typeof console.warn === "function") {
        console.warn("Bluebird: " + msg);
    }
}

var errorObj = {e: {}};
function tryCatch1(fn, receiver, arg) {
    try {
        return fn.call(receiver, arg);
    }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

function tryCatch2(fn, receiver, arg, arg2) {
    try {
        return fn.call(receiver, arg, arg2);
    }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

function tryCatchApply(fn, args, receiver) {
    try {
        return fn.apply(receiver, args);
    }
    catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

var inherits = function(Child, Parent) {
    var hasProp = {}.hasOwnProperty;

    function T() {
        this.constructor = Child;
        this.constructor$ = Parent;
        for (var propertyName in Parent.prototype) {
            if (hasProp.call(Parent.prototype, propertyName) &&
                propertyName.charAt(propertyName.length-1) !== "$"
           ) {
                this[propertyName + "$"] = Parent.prototype[propertyName];
            }
        }
    }
    T.prototype = Parent.prototype;
    Child.prototype = new T();
    return Child.prototype;
};

function asString(val) {
    return typeof val === "string" ? val : ("" + val);
}

function isPrimitive(val) {
    return val == null || val === true || val === false ||
        typeof val === "string" || typeof val === "number";

}

function isObject(value) {
    return !isPrimitive(value);
}

function maybeWrapAsError(maybeError) {
    if (!isPrimitive(maybeError)) return maybeError;

    return new Error(asString(maybeError));
}

function withAppended(target, appendee) {
    var len = target.length;
    var ret = new Array(len + 1);
    var i;
    for (i = 0; i < len; ++i) {
        ret[i] = target[i];
    }
    ret[i] = appendee;
    return ret;
}


function notEnumerableProp(obj, name, value) {
    if (isPrimitive(obj)) return obj;
    var descriptor = {
        value: value,
        configurable: true,
        enumerable: false,
        writable: true
    };
    es5.defineProperty(obj, name, descriptor);
    return obj;
}


var wrapsPrimitiveReceiver = (function() {
    return this !== "string";
}).call("string");

function thrower(r) {
    throw r;
}


function toFastProperties(obj) {
    /*jshint -W027*/
    function f() {}
    f.prototype = obj;
    return f;
    eval(obj);
}

var ret = {
    thrower: thrower,
    isArray: es5.isArray,
    haveGetters: haveGetters,
    notEnumerableProp: notEnumerableProp,
    isPrimitive: isPrimitive,
    isObject: isObject,
    canEvaluate: canEvaluate,
    deprecated: deprecated,
    errorObj: errorObj,
    tryCatch1: tryCatch1,
    tryCatch2: tryCatch2,
    tryCatchApply: tryCatchApply,
    inherits: inherits,
    withAppended: withAppended,
    asString: asString,
    maybeWrapAsError: maybeWrapAsError,
    wrapsPrimitiveReceiver: wrapsPrimitiveReceiver,
    toFastProperties: toFastProperties
};

module.exports = ret;

},{"./es5.js":107,"./global.js":111}],134:[function(require,module,exports){
// Generic Pool Redux
//
// Fork of https://github.com/coopernurse/node-pool
// with prototypes, api changes, and support for the client.
// License: MIT
// ------------------------------------------------
(function(define) {

"use strict";

define(function(require, exports, module) {

  // Initialize arrays to hold queue elements.
  var PriorityQueue = function(size) {
    this.slots = [];
    this.queueSize = Math.max(+size | 0, 1);
    for (var i = 0; i < this.queueSize; i += 1) {
      this.slots.push([]);
    }
  };

  PriorityQueue.prototype = {

    total: null,

    // Calculates the size of the queue, and sets
    // the value to total.
    size: function() {
      if (this.total === null) {
        this.total = 0;
        for (var i = 0; i < this.queueSize; i += 1) {
          this.total += this.slots[i].length;
        }
      }
      return this.total;
    },

    // Clears the cache for total and adds an
    // object to the queue, based on an optional priority.
    enqueue: function(obj, priority) {
      priority = priority && +priority | 0 || 0;
      this.total = null;
      if (priority) {
        var priorityOrig = priority;
        if (priority < 0 || priority >= this.queueSize) {
          priority = (this.size - 1);
        }
      }
      this.slots[priority].push(obj);
    },

    // Clears the cache for total and removes an object
    // from the queue.
    dequeue: function() {
      var obj = null, i, sl = this.slots.length;
      this.total = null;
      for (i = 0; i < sl; i += 1) {
        if (this.slots[i].length) {
          obj = this.slots[i].shift();
          break;
        }
      }
      return obj;
    }

  };

  // Constructor for a new pool.
  var Pool = function(options) {
    if (!(this instanceof Pool)) return new Pool(options);
    this.idleTimeoutMillis = options.idleTimeoutMillis  || 30000;
    this.reapInterval      = options.reapIntervalMillis || 1000;
    this.destroyHandler    = options.destroy || function() {};
    this.refreshIdle       = ('refreshIdle' in options) ? options.refreshIdle : true;
    this.availableObjects  = [];
    this.waitingClients    = new PriorityQueue(options.priorityRange || 1);
    this.create            = options.create || (function() {
      throw new Error('A create method must be defined for the connection pool.');
    })();

    // If a validate method is provided, use that instead of the default.
    if (options.validate) this.validate = options.validate;

    // Set the max & min's on the options.
    var max = parseInt(options.max, 10);
    var min = parseInt(options.min, 10);
    this.max = Math.max(isNaN(max) ? 1 : max, 1);
    this.min = Math.min(isNaN(min) ? 0 : min, this.max - 1);

    // Ensure the minimum is created.
    this.ensureMinimum();
  };

  Pool.prototype = {

    count: 0,

    draining: false,

    removeIdleTimer: null,

    removeIdleScheduled: false,

    // Default validate.
    validate: function() {
      return true;
    },

    // Request a new client. The callback will be called,
    // when a new client will be availabe, passing the client to it.
    // Optionally, yoy may specify a priority of the caller if there are no
    // available resources.  Lower numbers mean higher priority.
    acquire: function(callback, priority) {
      if (this.draining) return callback(new Error("Pool is draining and cannot accept work"));
      this.waitingClients.enqueue(callback, priority);
      this.dispense();
      return (this.count < this.max);
    },

    // Return the client to the pool, in case it is no longer required.
    release: function(obj, callback) {
      // Check to see if this object has already been released (i.e., is back in the pool of availableObjects)
      if (this.availableObjects.some(function(objWithTimeout) {
        return (objWithTimeout.obj === obj);
      })) {
        if (callback) callback(new Error('Release called multiple times on the same object'));
        return;
      }
      var objWithTimeout = {
        obj: obj,
        timeout: (new Date().getTime() + this.idleTimeoutMillis)
      };
      this.availableObjects.push(objWithTimeout);
      this.dispense();
      this.scheduleRemoveIdle();
      if (callback) callback(null);
    },

    // Try to get a new client to work, and clean up pool unused (idle) items.
    //
    // - If there are available clients waiting, shift the first one out (LIFO),
    //   and call its callback.
    // - If there are no waiting clients, try to create one if it won't exceed
    //   the maximum number of clients.
    // - If creating a new client would exceed the maximum, add the client to
    //   the wait list.
    dispense: function() {
      var obj = null,
        objWithTimeout = null,
        err = null,
        clientCb = null,
        waitingCount = this.waitingClients.size();

      if (waitingCount > 0) {
        while (this.availableObjects.length > 0) {
          objWithTimeout = this.availableObjects[0];
          if (!this.validate(objWithTimeout.obj)) {
            this.destroy(objWithTimeout.obj);
            continue;
          }
          this.availableObjects.shift();
          clientCb = this.waitingClients.dequeue();
          return clientCb(err, objWithTimeout.obj);
        }
        if (this.count < this.max) {
          this.createResource();
        }
      }
    },

    // Disallow any new requests and let the request backlog dissapate,
    // Setting the `draining` flag so as to let any additional work on the queue
    // dissapate.
    drain: function(callback) {
      this.draining = true;
      var pool = this;
      var checking = function() {
        if (pool.waitingClients.size() > 0 || pool.availableObjects.length != pool.count) {
          setTimeout(checking, 100);
        } else {
          if (callback) callback();
        }
      };
      checking();
    },

    // Forcibly destroys all clients regardless of timeout. Intended to be
    // invoked as part of a drain. Does not prevent the creation of new
    // clients as a result of subsequent calls to acquire.
    //
    // Note that if this.min > 0, the pool will destroy all idle resources
    // in the pool, but replace them with newly created resources up to the
    // specified this.min value.  If this is not desired, set this.min
    // to zero before calling destroyAllNow()
    destroyAllNow: function(callback) {
      var willDie = this.availableObjects;
      this.availableObjects = [];
      var obj = willDie.shift();
      while (obj !== null && obj !== undefined) {
        this.destroy(obj.obj);
        obj = willDie.shift();
      }
      this.removeIdleScheduled = false;
      clearTimeout(this.removeIdleTimer);
      if (callback) callback();
    },

    // Decorates a function to use a acquired client from the object pool when called.
    pooled: function(decorated, priority) {
      var pool = this;
      return function() {
        var callerArgs = arguments;
        var callerCallback = callerArgs[callerArgs.length - 1];
        var callerHasCallback = typeof callerCallback === 'function';
        pool.acquire(function(err, client) {
          if (err) {
            if (callerHasCallback) callerCallback(err, null);
            return;
          }
          var args = [client].concat(slice.call(callerArgs, 0, callerHasCallback ? -1 : undefined));
          args.push(function() {
            pool.release.call(pool, client);
            if (callerHasCallback) callerCallback.apply(null, arguments);
          });
          decorated.apply(null, args);
        }, priority);
      };
    },

    // Request the client to be destroyed. The factory's destroy handler
    // will also be called. This should be called within an acquire()
    // block as an alternative to release().
    destroy: function(obj) {
      this.count -= 1;
      this.availableObjects = this.availableObjects.filter(function(objWithTimeout) {
        return (objWithTimeout.obj !== obj);
      });
      this.destroyHandler(obj);
      this.ensureMinimum();
    },

    // Checks and removes the available (idle) clients that have timed out.
    removeIdle: function() {
      var toRemove = [],
        now = new Date().getTime(),
        i, availableLength, tr, timeout;

      this.removeIdleScheduled = false;

      // Go through the available (idle) items,
      // check if they have timed out
      for (i = 0, availableLength = this.availableObjects.length; i < availableLength && (this.refreshIdle || (this.count - this.min > toRemove.length)); i += 1) {
        timeout = this.availableObjects[i].timeout;
        if (now >= timeout) {
          // Client timed out, so destroy it.
          toRemove.push(this.availableObjects[i].obj);
        }
      }

      for (i = 0, tr = toRemove.length; i < tr; i += 1) {
        this.destroy(toRemove[i]);
      }

      // Replace the available items with the ones to keep.
      availableLength = this.availableObjects.length;

      if (availableLength > 0) {
        this.scheduleRemoveIdle();
      }
    },

    // Schedule removal of idle items in the pool.
    // More schedules cannot run concurrently.
    scheduleRemoveIdle: function() {
      if (!this.removeIdleScheduled) {
        this.removeIdleScheduled = true;
        var pool = this;
        this.removeIdleTimer = setTimeout(function() {
          pool.removeIdle.call(pool);
        }, this.reapInterval);
      }
    },

    // Creates a new resource, adding an object to the pool
    createResource: function() {
      var pool = this;
      this.count += 1;
      this.create(function(err, obj) {
        var clientCb = pool.waitingClients.dequeue();
        if (err) {
          pool.count -= 1;
          if (clientCb) clientCb(err, null);
          setTimeout(function() {
            pool.dispense.call(pool);
          }, 0);
        } else {
          if (clientCb) return clientCb(null, obj);
          pool.release(obj);
        }
      });
    },

    // If the client isn't in the process of draining, this ensures
    // that the minimum number of resources are always around.
    ensureMinimum: function() {
      var i, diff;
      if (!this.draining && (this.count < this.min)) {
        diff = this.min - this.count;
        for (i = 0; i < diff; i++) {
          this.createResource();
        }
      }
    }
  };

  var slice = Array.prototype.slice;

  module.exports = {

    // Export the `Pool` constructor.
    Pool: Pool,

    // Export the PriorityQueue constructor, in case anyone wants to fiddle with that.
    PriorityQueue: PriorityQueue

  };

});

})(
  typeof define === 'function' && define.amd ? define : function (factory) { factory(require, exports, module); }
);
},{}],135:[function(require,module,exports){
(function (global){
/**
 * @license
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modern -o ./dist/lodash.js`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre ES5 environments */
  var undefined;

  /** Used to pool arrays and objects used internally */
  var arrayPool = [],
      objectPool = [];

  /** Used to generate unique IDs */
  var idCounter = 0;

  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */
  var keyPrefix = +new Date + '';

  /** Used as the size when optimizations are enabled for large arrays */
  var largeArraySize = 75;

  /** Used as the max size of the `arrayPool` and `objectPool` */
  var maxPoolSize = 40;

  /** Used to detect and test whitespace */
  var whitespace = (
    // whitespace
    ' \t\x0B\f\xA0\ufeff' +

    // line terminators
    '\n\r\u2028\u2029' +

    // unicode category "Zs" space separators
    '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
  );

  /** Used to match empty string literals in compiled template source */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /**
   * Used to match ES6 template delimiters
   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match regexp flags from their coerced string values */
  var reFlags = /\w*$/;

  /** Used to detected named functions */
  var reFuncName = /^\s*function[ \n\r\t]+\w/;

  /** Used to match "interpolate" template delimiters */
  var reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match leading whitespace and zeros to be removed */
  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');

  /** Used to ensure capturing order of template delimiters */
  var reNoMatch = /($^)/;

  /** Used to detect functions containing a `this` reference */
  var reThis = /\bthis\b/;

  /** Used to match unescaped characters in compiled string literals */
  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

  /** Used to assign default `context` object properties */
  var contextProps = [
    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',
    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',
    'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify */
  var templateCounter = 0;

  /** `Object#toString` result shortcuts */
  var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

  /** Used to identify object classifications that `_.clone` supports */
  var cloneableClasses = {};
  cloneableClasses[funcClass] = false;
  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

  /** Used as an internal `_.debounce` options object */
  var debounceOptions = {
    'leading': false,
    'maxWait': 0,
    'trailing': false
  };

  /** Used as the property descriptor for `__bindData__` */
  var descriptor = {
    'configurable': false,
    'enumerable': false,
    'value': null,
    'writable': false
  };

  /** Used to determine if values are of the language type Object */
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };

  /** Used to escape characters for inclusion in compiled string literals */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\t': 't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Used as a reference to the global object */
  var root = (objectTypes[typeof window] && window) || this;

  /** Detect free variable `exports` */
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  /** Detect free variable `module` */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports` */
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
  var freeGlobal = objectTypes[typeof global] && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    root = freeGlobal;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * The base implementation of `_.indexOf` without support for binary searches
   * or `fromIndex` constraints.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {number} Returns the index of the matched value or `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    var index = (fromIndex || 0) - 1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * An implementation of `_.contains` for cache objects that mimics the return
   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
   *
   * @private
   * @param {Object} cache The cache object to inspect.
   * @param {*} value The value to search for.
   * @returns {number} Returns `0` if `value` is found, else `-1`.
   */
  function cacheIndexOf(cache, value) {
    var type = typeof value;
    cache = cache.cache;

    if (type == 'boolean' || value == null) {
      return cache[value] ? 0 : -1;
    }
    if (type != 'number' && type != 'string') {
      type = 'object';
    }
    var key = type == 'number' ? value : keyPrefix + value;
    cache = (cache = cache[type]) && cache[key];

    return type == 'object'
      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)
      : (cache ? 0 : -1);
  }

  /**
   * Adds a given value to the corresponding cache object.
   *
   * @private
   * @param {*} value The value to add to the cache.
   */
  function cachePush(value) {
    var cache = this.cache,
        type = typeof value;

    if (type == 'boolean' || value == null) {
      cache[value] = true;
    } else {
      if (type != 'number' && type != 'string') {
        type = 'object';
      }
      var key = type == 'number' ? value : keyPrefix + value,
          typeCache = cache[type] || (cache[type] = {});

      if (type == 'object') {
        (typeCache[key] || (typeCache[key] = [])).push(value);
      } else {
        typeCache[key] = true;
      }
    }
  }

  /**
   * Used by `_.max` and `_.min` as the default callback when a given
   * collection is a string value.
   *
   * @private
   * @param {string} value The character to inspect.
   * @returns {number} Returns the code unit of given character.
   */
  function charAtCallback(value) {
    return value.charCodeAt(0);
  }

  /**
   * Used by `sortBy` to compare transformed `collection` elements, stable sorting
   * them in ascending order.
   *
   * @private
   * @param {Object} a The object to compare to `b`.
   * @param {Object} b The object to compare to `a`.
   * @returns {number} Returns the sort order indicator of `1` or `-1`.
   */
  function compareAscending(a, b) {
    var ac = a.criteria,
        bc = b.criteria,
        index = -1,
        length = ac.length;

    while (++index < length) {
      var value = ac[index],
          other = bc[index];

      if (value !== other) {
        if (value > other || typeof value == 'undefined') {
          return 1;
        }
        if (value < other || typeof other == 'undefined') {
          return -1;
        }
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to return the same value for
    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247
    //
    // This also ensures a stable sort in V8 and other engines.
    // See http://code.google.com/p/v8/issues/detail?id=90
    return a.index - b.index;
  }

  /**
   * Creates a cache object to optimize linear searches of large arrays.
   *
   * @private
   * @param {Array} [array=[]] The array to search.
   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.
   */
  function createCache(array) {
    var index = -1,
        length = array.length,
        first = array[0],
        mid = array[(length / 2) | 0],
        last = array[length - 1];

    if (first && typeof first == 'object' &&
        mid && typeof mid == 'object' && last && typeof last == 'object') {
      return false;
    }
    var cache = getObject();
    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

    var result = getObject();
    result.array = array;
    result.cache = cache;
    result.push = cachePush;

    while (++index < length) {
      result.push(array[index]);
    }
    return result;
  }

  /**
   * Used by `template` to escape characters for inclusion in compiled
   * string literals.
   *
   * @private
   * @param {string} match The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(match) {
    return '\\' + stringEscapes[match];
  }

  /**
   * Gets an array from the array pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Array} The array from the pool.
   */
  function getArray() {
    return arrayPool.pop() || [];
  }

  /**
   * Gets an object from the object pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Object} The object from the pool.
   */
  function getObject() {
    return objectPool.pop() || {
      'array': null,
      'cache': null,
      'criteria': null,
      'false': false,
      'index': 0,
      'null': false,
      'number': null,
      'object': null,
      'push': null,
      'string': null,
      'true': false,
      'undefined': false,
      'value': null
    };
  }

  /**
   * Releases the given array back to the array pool.
   *
   * @private
   * @param {Array} [array] The array to release.
   */
  function releaseArray(array) {
    array.length = 0;
    if (arrayPool.length < maxPoolSize) {
      arrayPool.push(array);
    }
  }

  /**
   * Releases the given object back to the object pool.
   *
   * @private
   * @param {Object} [object] The object to release.
   */
  function releaseObject(object) {
    var cache = object.cache;
    if (cache) {
      releaseObject(cache);
    }
    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
    if (objectPool.length < maxPoolSize) {
      objectPool.push(object);
    }
  }

  /**
   * Slices the `collection` from the `start` index up to, but not including,
   * the `end` index.
   *
   * Note: This function is used instead of `Array#slice` to support node lists
   * in IE < 9 and to ensure dense arrays are returned.
   *
   * @private
   * @param {Array|Object|string} collection The collection to slice.
   * @param {number} start The start index.
   * @param {number} end The end index.
   * @returns {Array} Returns the new array.
   */
  function slice(array, start, end) {
    start || (start = 0);
    if (typeof end == 'undefined') {
      end = array ? array.length : 0;
    }
    var index = -1,
        length = end - start || 0,
        result = Array(length < 0 ? 0 : length);

    while (++index < length) {
      result[index] = array[start + index];
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new `lodash` function using the given context object.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns the `lodash` function.
   */
  function runInContext(context) {
    // Avoid issues with some ES3 environments that attempt to use values, named
    // after built-in constructors like `Object`, for the creation of literals.
    // ES5 clears this up by stating that literals must use built-in constructors.
    // See http://es5.github.io/#x11.1.5.
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

    /** Native constructor references */
    var Array = context.Array,
        Boolean = context.Boolean,
        Date = context.Date,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /**
     * Used for `Array` method references.
     *
     * Normally `Array.prototype` would suffice, however, using an array literal
     * avoids issues in Narwhal.
     */
    var arrayRef = [];

    /** Used for native method references */
    var objectProto = Object.prototype;

    /** Used to restore the original `_` reference in `noConflict` */
    var oldDash = context._;

    /** Used to resolve the internal [[Class]] of values */
    var toString = objectProto.toString;

    /** Used to detect if a method is native */
    var reNative = RegExp('^' +
      String(toString)
        .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        .replace(/toString| for [^\]]+/g, '.*?') + '$'
    );

    /** Native method shortcuts */
    var ceil = Math.ceil,
        clearTimeout = context.clearTimeout,
        floor = Math.floor,
        fnToString = Function.prototype.toString,
        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
        hasOwnProperty = objectProto.hasOwnProperty,
        push = arrayRef.push,
        setTimeout = context.setTimeout,
        splice = arrayRef.splice,
        unshift = arrayRef.unshift;

    /** Used to set meta data on functions */
    var defineProperty = (function() {
      // IE 8 only accepts DOM elements
      try {
        var o = {},
            func = isNative(func = Object.defineProperty) && func,
            result = func(o, o, o) && func;
      } catch(e) { }
      return result;
    }());

    /* Native method shortcuts for methods with the same name as other `lodash` methods */
    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
        nativeIsFinite = context.isFinite,
        nativeIsNaN = context.isNaN,
        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;

    /** Used to lookup a built-in constructor by [[Class]] */
    var ctorByClass = {};
    ctorByClass[arrayClass] = Array;
    ctorByClass[boolClass] = Boolean;
    ctorByClass[dateClass] = Date;
    ctorByClass[funcClass] = Function;
    ctorByClass[objectClass] = Object;
    ctorByClass[numberClass] = Number;
    ctorByClass[regexpClass] = RegExp;
    ctorByClass[stringClass] = String;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps the given value to enable intuitive
     * method chaining.
     *
     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:
     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,
     * and `unshift`
     *
     * Chaining is supported in custom builds as long as the `value` method is
     * implicitly or explicitly included in the build.
     *
     * The chainable wrapper functions are:
     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,
     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,
     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,
     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,
     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,
     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,
     * and `zip`
     *
     * The non-chainable wrapper functions are:
     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,
     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,
     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,
     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,
     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,
     * `template`, `unescape`, `uniqueId`, and `value`
     *
     * The wrapper functions `first` and `last` return wrapped values when `n` is
     * provided, otherwise they return unwrapped values.
     *
     * Explicit chaining can be enabled by using the `_.chain` method.
     *
     * @name _
     * @constructor
     * @category Chaining
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns a `lodash` instance.
     * @example
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // returns an unwrapped value
     * wrapped.reduce(function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * // returns a wrapped value
     * var squares = wrapped.map(function(num) {
     *   return num * num;
     * });
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor
      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))
       ? value
       : new lodashWrapper(value);
    }

    /**
     * A fast path for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap in a `lodash` instance.
     * @param {boolean} chainAll A flag to enable chaining for all methods
     * @returns {Object} Returns a `lodash` instance.
     */
    function lodashWrapper(value, chainAll) {
      this.__chain__ = !!chainAll;
      this.__wrapped__ = value;
    }
    // ensure `new lodashWrapper` is an instance of `lodash`
    lodashWrapper.prototype = lodash.prototype;

    /**
     * An object used to flag environments features.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    var support = lodash.support = {};

    /**
     * Detect if functions can be decompiled by `Function#toString`
     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);

    /**
     * Detect if `Function#name` is supported (all but IE).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcNames = typeof Function.name == 'string';

    /**
     * By default, the template delimiters used by Lo-Dash are similar to those in
     * embedded Ruby (ERB). Change the following template settings to use alternative
     * delimiters.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'escape': /<%-([\s\S]+?)%>/g,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'evaluate': /<%([\s\S]+?)%>/g,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type string
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type Object
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type Function
         */
        '_': lodash
      }
    };

    /*--------------------------------------------------------------------------*/

    /**
     * The base implementation of `_.bind` that creates the bound function and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new bound function.
     */
    function baseBind(bindData) {
      var func = bindData[0],
          partialArgs = bindData[2],
          thisArg = bindData[4];

      function bound() {
        // `Function#bind` spec
        // http://es5.github.io/#x15.3.4.5
        if (partialArgs) {
          // avoid `arguments` object deoptimizations by using `slice` instead
          // of `Array.prototype.slice.call` and not assigning `arguments` to a
          // variable as a ternary expression
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        // mimic the constructor's `return` behavior
        // http://es5.github.io/#x13.2.2
        if (this instanceof bound) {
          // ensure `new bound` is an instance of `func`
          var thisBinding = baseCreate(func.prototype),
              result = func.apply(thisBinding, args || arguments);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisArg, args || arguments);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.clone` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates clones with source counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, callback, stackA, stackB) {
      if (callback) {
        var result = callback(value);
        if (typeof result != 'undefined') {
          return result;
        }
      }
      // inspect [[Class]]
      var isObj = isObject(value);
      if (isObj) {
        var className = toString.call(value);
        if (!cloneableClasses[className]) {
          return value;
        }
        var ctor = ctorByClass[className];
        switch (className) {
          case boolClass:
          case dateClass:
            return new ctor(+value);

          case numberClass:
          case stringClass:
            return new ctor(value);

          case regexpClass:
            result = ctor(value.source, reFlags.exec(value));
            result.lastIndex = value.lastIndex;
            return result;
        }
      } else {
        return value;
      }
      var isArr = isArray(value);
      if (isDeep) {
        // check for circular references and return corresponding clone
        var initedStack = !stackA;
        stackA || (stackA = getArray());
        stackB || (stackB = getArray());

        var length = stackA.length;
        while (length--) {
          if (stackA[length] == value) {
            return stackB[length];
          }
        }
        result = isArr ? ctor(value.length) : {};
      }
      else {
        result = isArr ? slice(value) : assign({}, value);
      }
      // add array properties assigned by `RegExp#exec`
      if (isArr) {
        if (hasOwnProperty.call(value, 'index')) {
          result.index = value.index;
        }
        if (hasOwnProperty.call(value, 'input')) {
          result.input = value.input;
        }
      }
      // exit for shallow clone
      if (!isDeep) {
        return result;
      }
      // add the source value to the stack of traversed objects
      // and associate it with its clone
      stackA.push(value);
      stackB.push(result);

      // recursively populate clone (susceptible to call stack limits)
      (isArr ? forEach : forOwn)(value, function(objValue, key) {
        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
      });

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(prototype, properties) {
      return isObject(prototype) ? nativeCreate(prototype) : {};
    }
    // fallback for browsers without `Object.create`
    if (!nativeCreate) {
      baseCreate = (function() {
        function Object() {}
        return function(prototype) {
          if (isObject(prototype)) {
            Object.prototype = prototype;
            var result = new Object;
            Object.prototype = null;
          }
          return result || context.Object();
        };
      }());
    }

    /**
     * The base implementation of `_.createCallback` without support for creating
     * "_.pluck" or "_.where" style callbacks.
     *
     * @private
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     */
    function baseCreateCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      // exit early for no `thisArg` or already bound by `Function#bind`
      if (typeof thisArg == 'undefined' || !('prototype' in func)) {
        return func;
      }
      var bindData = func.__bindData__;
      if (typeof bindData == 'undefined') {
        if (support.funcNames) {
          bindData = !func.name;
        }
        bindData = bindData || !support.funcDecomp;
        if (!bindData) {
          var source = fnToString.call(func);
          if (!support.funcNames) {
            bindData = !reFuncName.test(source);
          }
          if (!bindData) {
            // checks if `func` references the `this` keyword and stores the result
            bindData = reThis.test(source);
            setBindData(func, bindData);
          }
        }
      }
      // exit early if there are no `this` references or `func` is bound
      if (bindData === false || (bindData !== true && bindData[1] & 1)) {
        return func;
      }
      switch (argCount) {
        case 1: return function(value) {
          return func.call(thisArg, value);
        };
        case 2: return function(a, b) {
          return func.call(thisArg, a, b);
        };
        case 3: return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
        case 4: return function(accumulator, value, index, collection) {
          return func.call(thisArg, accumulator, value, index, collection);
        };
      }
      return bind(func, thisArg);
    }

    /**
     * The base implementation of `createWrapper` that creates the wrapper and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new function.
     */
    function baseCreateWrapper(bindData) {
      var func = bindData[0],
          bitmask = bindData[1],
          partialArgs = bindData[2],
          partialRightArgs = bindData[3],
          thisArg = bindData[4],
          arity = bindData[5];

      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          key = func;

      function bound() {
        var thisBinding = isBind ? thisArg : this;
        if (partialArgs) {
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        if (partialRightArgs || isCurry) {
          args || (args = slice(arguments));
          if (partialRightArgs) {
            push.apply(args, partialRightArgs);
          }
          if (isCurry && args.length < arity) {
            bitmask |= 16 & ~32;
            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
          }
        }
        args || (args = arguments);
        if (isBindKey) {
          func = thisBinding[key];
        }
        if (this instanceof bound) {
          thisBinding = baseCreate(func.prototype);
          var result = func.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisBinding, args);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.difference` that accepts a single array
     * of values to exclude.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {Array} [values] The array of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     */
    function baseDifference(array, values) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          isLarge = length >= largeArraySize && indexOf === baseIndexOf,
          result = [];

      if (isLarge) {
        var cache = createCache(values);
        if (cache) {
          indexOf = cacheIndexOf;
          values = cache;
        } else {
          isLarge = false;
        }
      }
      while (++index < length) {
        var value = array[index];
        if (indexOf(values, value) < 0) {
          result.push(value);
        }
      }
      if (isLarge) {
        releaseObject(values);
      }
      return result;
    }

    /**
     * The base implementation of `_.flatten` without support for callback
     * shorthands or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.
     * @param {number} [fromIndex=0] The index to start from.
     * @returns {Array} Returns a new flattened array.
     */
    function baseFlatten(array, isShallow, isStrict, fromIndex) {
      var index = (fromIndex || 0) - 1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value && typeof value == 'object' && typeof value.length == 'number'
            && (isArray(value) || isArguments(value))) {
          // recursively flatten arrays (susceptible to call stack limits)
          if (!isShallow) {
            value = baseFlatten(value, isShallow, isStrict);
          }
          var valIndex = -1,
              valLength = value.length,
              resIndex = result.length;

          result.length += valLength;
          while (++valIndex < valLength) {
            result[resIndex++] = value[valIndex];
          }
        } else if (!isStrict) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.isEqual`, without support for `thisArg` binding,
     * that allows partial "_.where" style comparisons.
     *
     * @private
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.
     * @param {Array} [stackA=[]] Tracks traversed `a` objects.
     * @param {Array} [stackB=[]] Tracks traversed `b` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
      // used to indicate that when comparing objects, `a` has at least the properties of `b`
      if (callback) {
        var result = callback(a, b);
        if (typeof result != 'undefined') {
          return !!result;
        }
      }
      // exit early for identical values
      if (a === b) {
        // treat `+0` vs. `-0` as not equal
        return a !== 0 || (1 / a == 1 / b);
      }
      var type = typeof a,
          otherType = typeof b;

      // exit early for unlike primitive values
      if (a === a &&
          !(a && objectTypes[type]) &&
          !(b && objectTypes[otherType])) {
        return false;
      }
      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior
      // http://es5.github.io/#x15.3.4.4
      if (a == null || b == null) {
        return a === b;
      }
      // compare [[Class]] names
      var className = toString.call(a),
          otherClass = toString.call(b);

      if (className == argsClass) {
        className = objectClass;
      }
      if (otherClass == argsClass) {
        otherClass = objectClass;
      }
      if (className != otherClass) {
        return false;
      }
      switch (className) {
        case boolClass:
        case dateClass:
          // coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal
          return +a == +b;

        case numberClass:
          // treat `NaN` vs. `NaN` as equal
          return (a != +a)
            ? b != +b
            // but treat `+0` vs. `-0` as not equal
            : (a == 0 ? (1 / a == 1 / b) : a == +b);

        case regexpClass:
        case stringClass:
          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)
          // treat string primitives and their corresponding object instances as equal
          return a == String(b);
      }
      var isArr = className == arrayClass;
      if (!isArr) {
        // unwrap any `lodash` wrapped values
        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
            bWrapped = hasOwnProperty.call(b, '__wrapped__');

        if (aWrapped || bWrapped) {
          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
        }
        // exit for functions and DOM nodes
        if (className != objectClass) {
          return false;
        }
        // in older versions of Opera, `arguments` objects have `Array` constructors
        var ctorA = a.constructor,
            ctorB = b.constructor;

        // non `Object` object instances with different constructors are not equal
        if (ctorA != ctorB &&
              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&
              ('constructor' in a && 'constructor' in b)
            ) {
          return false;
        }
      }
      // assume cyclic structures are equal
      // the algorithm for detecting cyclic structures is adapted from ES 5.1
      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)
      var initedStack = !stackA;
      stackA || (stackA = getArray());
      stackB || (stackB = getArray());

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == a) {
          return stackB[length] == b;
        }
      }
      var size = 0;
      result = true;

      // add `a` and `b` to the stack of traversed objects
      stackA.push(a);
      stackB.push(b);

      // recursively compare objects and arrays (susceptible to call stack limits)
      if (isArr) {
        // compare lengths to determine if a deep comparison is necessary
        length = a.length;
        size = b.length;
        result = size == length;

        if (result || isWhere) {
          // deep compare the contents, ignoring non-numeric properties
          while (size--) {
            var index = length,
                value = b[size];

            if (isWhere) {
              while (index--) {
                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
                  break;
                }
              }
            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
              break;
            }
          }
        }
      }
      else {
        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
        // which, in this case, is more costly
        forIn(b, function(value, key, b) {
          if (hasOwnProperty.call(b, key)) {
            // count the number of properties.
            size++;
            // deep compare each property value.
            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
          }
        });

        if (result && !isWhere) {
          // ensure both objects have the same number of properties
          forIn(a, function(value, key, a) {
            if (hasOwnProperty.call(a, key)) {
              // `size` will be `-1` if `a` has more properties than `b`
              return (result = --size > -1);
            }
          });
        }
      }
      stackA.pop();
      stackB.pop();

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.merge` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     */
    function baseMerge(object, source, callback, stackA, stackB) {
      (isArray(source) ? forEach : forOwn)(source, function(source, key) {
        var found,
            isArr,
            result = source,
            value = object[key];

        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
          // avoid merging previously merged cyclic sources
          var stackLength = stackA.length;
          while (stackLength--) {
            if ((found = stackA[stackLength] == source)) {
              value = stackB[stackLength];
              break;
            }
          }
          if (!found) {
            var isShallow;
            if (callback) {
              result = callback(value, source);
              if ((isShallow = typeof result != 'undefined')) {
                value = result;
              }
            }
            if (!isShallow) {
              value = isArr
                ? (isArray(value) ? value : [])
                : (isPlainObject(value) ? value : {});
            }
            // add `source` and associated `value` to the stack of traversed objects
            stackA.push(source);
            stackB.push(value);

            // recursively merge objects and arrays (susceptible to call stack limits)
            if (!isShallow) {
              baseMerge(value, source, callback, stackA, stackB);
            }
          }
        }
        else {
          if (callback) {
            result = callback(value, source);
            if (typeof result == 'undefined') {
              result = source;
            }
          }
          if (typeof result != 'undefined') {
            value = result;
          }
        }
        object[key] = value;
      });
    }

    /**
     * The base implementation of `_.random` without argument juggling or support
     * for returning floating-point numbers.
     *
     * @private
     * @param {number} min The minimum possible value.
     * @param {number} max The maximum possible value.
     * @returns {number} Returns a random number.
     */
    function baseRandom(min, max) {
      return min + floor(nativeRandom() * (max - min + 1));
    }

    /**
     * The base implementation of `_.uniq` without support for callback shorthands
     * or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function} [callback] The function called per iteration.
     * @returns {Array} Returns a duplicate-value-free array.
     */
    function baseUniq(array, isSorted, callback) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          result = [];

      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
          seen = (callback || isLarge) ? getArray() : result;

      if (isLarge) {
        var cache = createCache(seen);
        indexOf = cacheIndexOf;
        seen = cache;
      }
      while (++index < length) {
        var value = array[index],
            computed = callback ? callback(value, index, array) : value;

        if (isSorted
              ? !index || seen[seen.length - 1] !== computed
              : indexOf(seen, computed) < 0
            ) {
          if (callback || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      if (isLarge) {
        releaseArray(seen.array);
        releaseObject(seen);
      } else if (callback) {
        releaseArray(seen);
      }
      return result;
    }

    /**
     * Creates a function that aggregates a collection, creating an object composed
     * of keys generated from the results of running each element of the collection
     * through a callback. The given `setter` function sets the keys and values
     * of the composed object.
     *
     * @private
     * @param {Function} setter The setter function.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter) {
      return function(collection, callback, thisArg) {
        var result = {};
        callback = lodash.createCallback(callback, thisArg, 3);

        var index = -1,
            length = collection ? collection.length : 0;

        if (typeof length == 'number') {
          while (++index < length) {
            var value = collection[index];
            setter(result, value, callback(value, index, collection), collection);
          }
        } else {
          forOwn(collection, function(value, key, collection) {
            setter(result, value, callback(value, key, collection), collection);
          });
        }
        return result;
      };
    }

    /**
     * Creates a function that, when called, either curries or invokes `func`
     * with an optional `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of method flags to compose.
     *  The bitmask may be composed of the following flags:
     *  1 - `_.bind`
     *  2 - `_.bindKey`
     *  4 - `_.curry`
     *  8 - `_.curry` (bound)
     *  16 - `_.partial`
     *  32 - `_.partialRight`
     * @param {Array} [partialArgs] An array of arguments to prepend to those
     *  provided to the new function.
     * @param {Array} [partialRightArgs] An array of arguments to append to those
     *  provided to the new function.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new function.
     */
    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          isPartial = bitmask & 16,
          isPartialRight = bitmask & 32;

      if (!isBindKey && !isFunction(func)) {
        throw new TypeError;
      }
      if (isPartial && !partialArgs.length) {
        bitmask &= ~16;
        isPartial = partialArgs = false;
      }
      if (isPartialRight && !partialRightArgs.length) {
        bitmask &= ~32;
        isPartialRight = partialRightArgs = false;
      }
      var bindData = func && func.__bindData__;
      if (bindData && bindData !== true) {
        // clone `bindData`
        bindData = slice(bindData);
        if (bindData[2]) {
          bindData[2] = slice(bindData[2]);
        }
        if (bindData[3]) {
          bindData[3] = slice(bindData[3]);
        }
        // set `thisBinding` is not previously bound
        if (isBind && !(bindData[1] & 1)) {
          bindData[4] = thisArg;
        }
        // set if previously bound but not currently (subsequent curried functions)
        if (!isBind && bindData[1] & 1) {
          bitmask |= 8;
        }
        // set curried arity if not yet set
        if (isCurry && !(bindData[1] & 4)) {
          bindData[5] = arity;
        }
        // append partial left arguments
        if (isPartial) {
          push.apply(bindData[2] || (bindData[2] = []), partialArgs);
        }
        // append partial right arguments
        if (isPartialRight) {
          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
        }
        // merge flags
        bindData[1] |= bitmask;
        return createWrapper.apply(null, bindData);
      }
      // fast path for `_.bind`
      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
    }

    /**
     * Used by `escape` to convert characters to HTML entities.
     *
     * @private
     * @param {string} match The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    function escapeHtmlChar(match) {
      return htmlEscapes[match];
    }

    /**
     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
     * customized, this method returns the custom method, otherwise it returns
     * the `baseIndexOf` function.
     *
     * @private
     * @returns {Function} Returns the "indexOf" function.
     */
    function getIndexOf() {
      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
      return result;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
     */
    function isNative(value) {
      return typeof value == 'function' && reNative.test(value);
    }

    /**
     * Sets `this` binding data on a given function.
     *
     * @private
     * @param {Function} func The function to set data on.
     * @param {Array} value The data array to set.
     */
    var setBindData = !defineProperty ? noop : function(func, value) {
      descriptor.value = value;
      defineProperty(func, '__bindData__', descriptor);
    };

    /**
     * A fallback implementation of `isPlainObject` which checks if a given value
     * is an object created by the `Object` constructor, assuming objects created
     * by the `Object` constructor have no inherited enumerable properties and that
     * there are no `Object.prototype` extensions.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     */
    function shimIsPlainObject(value) {
      var ctor,
          result;

      // avoid non Object objects, `arguments` objects, and DOM elements
      if (!(value && toString.call(value) == objectClass) ||
          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {
        return false;
      }
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      forIn(value, function(value, key) {
        result = key;
      });
      return typeof result == 'undefined' || hasOwnProperty.call(value, result);
    }

    /**
     * Used by `unescape` to convert HTML entities to characters.
     *
     * @private
     * @param {string} match The matched character to unescape.
     * @returns {string} Returns the unescaped character.
     */
    function unescapeHtmlChar(match) {
      return htmlUnescapes[match];
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Checks if `value` is an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
     * @example
     *
     * (function() { return _.isArguments(arguments); })(1, 2, 3);
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == argsClass || false;
    }

    /**
     * Checks if `value` is an array.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.
     * @example
     *
     * (function() { return _.isArray(arguments); })();
     * // => false
     *
     * _.isArray([1, 2, 3]);
     * // => true
     */
    var isArray = nativeIsArray || function(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == arrayClass || false;
    };

    /**
     * A fallback implementation of `Object.keys` which produces an array of the
     * given object's own enumerable property names.
     *
     * @private
     * @type Function
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     */
    var shimKeys = function(object) {
      var index, iterable = object, result = [];
      if (!iterable) return result;
      if (!(objectTypes[typeof object])) return result;
        for (index in iterable) {
          if (hasOwnProperty.call(iterable, index)) {
            result.push(index);
          }
        }
      return result
    };

    /**
     * Creates an array composed of the own enumerable property names of an object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     * @example
     *
     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
     */
    var keys = !nativeKeys ? shimKeys : function(object) {
      if (!isObject(object)) {
        return [];
      }
      return nativeKeys(object);
    };

    /**
     * Used to convert characters to HTML entities:
     *
     * Though the `>` character is escaped for symmetry, characters like `>` and `/`
     * don't require escaping in HTML and have no special meaning unless they're part
     * of a tag or an unquoted attribute value.
     * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
     */
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    /** Used to convert HTML entities to characters */
    var htmlUnescapes = invert(htmlEscapes);

    /** Used to match HTML entities and HTML characters */
    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

    /*--------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object. Subsequent sources will overwrite property assignments of previous
     * sources. If a callback is provided it will be executed to produce the
     * assigned values. The callback is bound to `thisArg` and invoked with two
     * arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @type Function
     * @alias extend
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize assigning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });
     * // => { 'name': 'fred', 'employer': 'slate' }
     *
     * var defaults = _.partialRight(_.assign, function(a, b) {
     *   return typeof a == 'undefined' ? b : a;
     * });
     *
     * var object = { 'name': 'barney' };
     * defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var assign = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {
        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);
      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {
        callback = args[--argsLength];
      }
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];
        }
        }
      }
      return result
    };

    /**
     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also
     * be cloned, otherwise they will be assigned by reference. If a callback
     * is provided it will be executed to produce the cloned values. If the
     * callback returns `undefined` cloning will be handled by the method instead.
     * The callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var shallow = _.clone(characters);
     * shallow[0] === characters[0];
     * // => true
     *
     * var deep = _.clone(characters, true);
     * deep[0] === characters[0];
     * // => false
     *
     * _.mixin({
     *   'clone': _.partialRight(_.clone, function(value) {
     *     return _.isElement(value) ? value.cloneNode(false) : undefined;
     *   })
     * });
     *
     * var clone = _.clone(document.body);
     * clone.childNodes.length;
     * // => 0
     */
    function clone(value, isDeep, callback, thisArg) {
      // allows working with "Collections" methods without using their `index`
      // and `collection` arguments for `isDeep` and `callback`
      if (typeof isDeep != 'boolean' && isDeep != null) {
        thisArg = callback;
        callback = isDeep;
        isDeep = false;
      }
      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates a deep clone of `value`. If a callback is provided it will be
     * executed to produce the cloned values. If the callback returns `undefined`
     * cloning will be handled by the method instead. The callback is bound to
     * `thisArg` and invoked with one argument; (value).
     *
     * Note: This method is loosely based on the structured clone algorithm. Functions
     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and
     * objects created by constructors other than `Object` are cloned to plain `Object` objects.
     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var deep = _.cloneDeep(characters);
     * deep[0] === characters[0];
     * // => false
     *
     * var view = {
     *   'label': 'docs',
     *   'node': element
     * };
     *
     * var clone = _.cloneDeep(view, function(value) {
     *   return _.isElement(value) ? value.cloneNode(true) : undefined;
     * });
     *
     * clone.node == view.node;
     * // => false
     */
    function cloneDeep(value, callback, thisArg) {
      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates an object that inherits from the given `prototype` object. If a
     * `properties` object is provided its own enumerable properties are assigned
     * to the created object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? assign(result, properties) : result;
    }

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object for all destination properties that resolve to `undefined`. Once a
     * property is set, additional defaults of the same property will be ignored.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param- {Object} [guard] Allows working with `_.reduce` without using its
     *  `key` and `object` arguments as sources.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var object = { 'name': 'barney' };
     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var defaults = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (typeof result[index] == 'undefined') result[index] = iterable[index];
        }
        }
      }
      return result
    };

    /**
     * This method is like `_.findIndex` except that it returns the key of the
     * first element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': false },
     *   'fred': {    'age': 40, 'blocked': true },
     *   'pebbles': { 'age': 1,  'blocked': false }
     * };
     *
     * _.findKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => 'barney' (property order is not guaranteed across environments)
     *
     * // using "_.where" callback shorthand
     * _.findKey(characters, { 'age': 1 });
     * // => 'pebbles'
     *
     * // using "_.pluck" callback shorthand
     * _.findKey(characters, 'blocked');
     * // => 'fred'
     */
    function findKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwn(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': true },
     *   'fred': {    'age': 40, 'blocked': false },
     *   'pebbles': { 'age': 1,  'blocked': true }
     * };
     *
     * _.findLastKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => returns `pebbles`, assuming `_.findKey` returns `barney`
     *
     * // using "_.where" callback shorthand
     * _.findLastKey(characters, { 'age': 40 });
     * // => 'fred'
     *
     * // using "_.pluck" callback shorthand
     * _.findLastKey(characters, 'blocked');
     * // => 'pebbles'
     */
    function findLastKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwnRight(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over own and inherited enumerable properties of an object,
     * executing the callback for each property. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, key, object). Callbacks may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forIn(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)
     */
    var forIn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        for (index in iterable) {
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forIn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forInRight(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'
     */
    function forInRight(object, callback, thisArg) {
      var pairs = [];

      forIn(object, function(value, key) {
        pairs.push(key, value);
      });

      var length = pairs.length;
      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(pairs[length--], pairs[length], object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Iterates over own enumerable properties of an object, executing the callback
     * for each property. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, key, object). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
     */
    var forOwn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forOwn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'
     */
    function forOwnRight(object, callback, thisArg) {
      var props = keys(object),
          length = props.length;

      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        var key = props[length];
        if (callback(object[key], key, object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Creates a sorted array of property names of all enumerable properties,
     * own and inherited, of `object` that have function values.
     *
     * @static
     * @memberOf _
     * @alias methods
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names that have function values.
     * @example
     *
     * _.functions(_);
     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
     */
    function functions(object) {
      var result = [];
      forIn(object, function(value, key) {
        if (isFunction(value)) {
          result.push(key);
        }
      });
      return result.sort();
    }

    /**
     * Checks if the specified property name exists as a direct property of `object`,
     * instead of an inherited property.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to check.
     * @returns {boolean} Returns `true` if key is a direct property, else `false`.
     * @example
     *
     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
     * // => true
     */
    function has(object, key) {
      return object ? hasOwnProperty.call(object, key) : false;
    }

    /**
     * Creates an object composed of the inverted keys and values of the given object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the created inverted object.
     * @example
     *
     * _.invert({ 'first': 'fred', 'second': 'barney' });
     * // => { 'fred': 'first', 'barney': 'second' }
     */
    function invert(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index];
        result[object[key]] = key;
      }
      return result;
    }

    /**
     * Checks if `value` is a boolean value.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.
     * @example
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        value && typeof value == 'object' && toString.call(value) == boolClass || false;
    }

    /**
     * Checks if `value` is a date.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     */
    function isDate(value) {
      return value && typeof value == 'object' && toString.call(value) == dateClass || false;
    }

    /**
     * Checks if `value` is a DOM element.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     */
    function isElement(value) {
      return value && value.nodeType === 1 || false;
    }

    /**
     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
     * length of `0` and objects with no own enumerable properties are considered
     * "empty".
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object|string} value The value to inspect.
     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({});
     * // => true
     *
     * _.isEmpty('');
     * // => true
     */
    function isEmpty(value) {
      var result = true;
      if (!value) {
        return result;
      }
      var className = toString.call(value),
          length = value.length;

      if ((className == arrayClass || className == stringClass || className == argsClass ) ||
          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
        return !length;
      }
      forOwn(value, function() {
        return (result = false);
      });
      return result;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent to each other. If a callback is provided it will be executed
     * to compare values. If the callback returns `undefined` comparisons will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (a, b).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var copy = { 'name': 'fred' };
     *
     * object == copy;
     * // => false
     *
     * _.isEqual(object, copy);
     * // => true
     *
     * var words = ['hello', 'goodbye'];
     * var otherWords = ['hi', 'goodbye'];
     *
     * _.isEqual(words, otherWords, function(a, b) {
     *   var reGreet = /^(?:hello|hi)$/i,
     *       aGreet = _.isString(a) && reGreet.test(a),
     *       bGreet = _.isString(b) && reGreet.test(b);
     *
     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;
     * });
     * // => true
     */
    function isEqual(a, b, callback, thisArg) {
      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
    }

    /**
     * Checks if `value` is, or can be coerced to, a finite number.
     *
     * Note: This is not the same as native `isFinite` which will return true for
     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.
     * @example
     *
     * _.isFinite(-101);
     * // => true
     *
     * _.isFinite('10');
     * // => true
     *
     * _.isFinite(true);
     * // => false
     *
     * _.isFinite('');
     * // => false
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
    }

    /**
     * Checks if `value` is a function.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     */
    function isFunction(value) {
      return typeof value == 'function';
    }

    /**
     * Checks if `value` is the language type of Object.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(1);
     * // => false
     */
    function isObject(value) {
      // check if the value is the ECMAScript language type of Object
      // http://es5.github.io/#x8
      // and avoid a V8 bug
      // http://code.google.com/p/v8/issues/detail?id=2291
      return !!(value && objectTypes[typeof value]);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * Note: This is not the same as native `isNaN` which will return `true` for
     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // `NaN` as a primitive is the only value that is not equal to itself
      // (perform the [[Class]] check first to avoid errors with some host objects in IE)
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(undefined);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is a number.
     *
     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(8.4 * 5);
     * // => true
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        value && typeof value == 'object' && toString.call(value) == numberClass || false;
    }

    /**
     * Checks if `value` is an object created by the `Object` constructor.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * _.isPlainObject(new Shape);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     */
    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
      if (!(value && toString.call(value) == objectClass)) {
        return false;
      }
      var valueOf = value.valueOf,
          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

      return objProto
        ? (value == objProto || getPrototypeOf(value) == objProto)
        : shimIsPlainObject(value);
    };

    /**
     * Checks if `value` is a regular expression.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.
     * @example
     *
     * _.isRegExp(/fred/);
     * // => true
     */
    function isRegExp(value) {
      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;
    }

    /**
     * Checks if `value` is a string.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.
     * @example
     *
     * _.isString('fred');
     * // => true
     */
    function isString(value) {
      return typeof value == 'string' ||
        value && typeof value == 'object' && toString.call(value) == stringClass || false;
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     */
    function isUndefined(value) {
      return typeof value == 'undefined';
    }

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new object with values of the results of each `callback` execution.
     * @example
     *
     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     *
     * var characters = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // using "_.pluck" callback shorthand
     * _.mapValues(characters, 'age');
     * // => { 'fred': 40, 'pebbles': 1 }
     */
    function mapValues(object, callback, thisArg) {
      var result = {};
      callback = lodash.createCallback(callback, thisArg, 3);

      forOwn(object, function(value, key, object) {
        result[key] = callback(value, key, object);
      });
      return result;
    }

    /**
     * Recursively merges own enumerable properties of the source object(s), that
     * don't resolve to `undefined` into the destination object. Subsequent sources
     * will overwrite property assignments of previous sources. If a callback is
     * provided it will be executed to produce the merged values of the destination
     * and source properties. If the callback returns `undefined` merging will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var names = {
     *   'characters': [
     *     { 'name': 'barney' },
     *     { 'name': 'fred' }
     *   ]
     * };
     *
     * var ages = {
     *   'characters': [
     *     { 'age': 36 },
     *     { 'age': 40 }
     *   ]
     * };
     *
     * _.merge(names, ages);
     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }
     *
     * var food = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var otherFood = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.merge(food, otherFood, function(a, b) {
     *   return _.isArray(a) ? a.concat(b) : undefined;
     * });
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }
     */
    function merge(object) {
      var args = arguments,
          length = 2;

      if (!isObject(object)) {
        return object;
      }
      // allows working with `_.reduce` and `_.reduceRight` without using
      // their `index` and `collection` arguments
      if (typeof args[2] != 'number') {
        length = args.length;
      }
      if (length > 3 && typeof args[length - 2] == 'function') {
        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
      } else if (length > 2 && typeof args[length - 1] == 'function') {
        callback = args[--length];
      }
      var sources = slice(arguments, 1, length),
          index = -1,
          stackA = getArray(),
          stackB = getArray();

      while (++index < length) {
        baseMerge(object, sources[index], callback, stackA, stackB);
      }
      releaseArray(stackA);
      releaseArray(stackB);
      return object;
    }

    /**
     * Creates a shallow clone of `object` excluding the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` omitting the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The properties to omit or the
     *  function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object without the omitted properties.
     * @example
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');
     * // => { 'name': 'fred' }
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {
     *   return typeof value == 'number';
     * });
     * // => { 'name': 'fred' }
     */
    function omit(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var props = [];
        forIn(object, function(value, key) {
          props.push(key);
        });
        props = baseDifference(props, baseFlatten(arguments, true, false, 1));

        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          result[key] = object[key];
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (!callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * Creates a two dimensional array of an object's key-value pairs,
     * i.e. `[[key1, value1], [key2, value2]]`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns new array of key-value pairs.
     * @example
     *
     * _.pairs({ 'barney': 36, 'fred': 40 });
     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)
     */
    function pairs(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }

    /**
     * Creates a shallow clone of `object` composed of the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` picking the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The function called per
     *  iteration or property names to pick, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object composed of the picked properties.
     * @example
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');
     * // => { 'name': 'fred' }
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {
     *   return key.charAt(0) != '_';
     * });
     * // => { 'name': 'fred' }
     */
    function pick(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var index = -1,
            props = baseFlatten(arguments, true, false, 1),
            length = isObject(object) ? props.length : 0;

        while (++index < length) {
          var key = props[index];
          if (key in object) {
            result[key] = object[key];
          }
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * An alternative to `_.reduce` this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable properties through a callback, with each callback execution
     * potentially mutating the `accumulator` object. The callback is bound to
     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).
     * Callbacks may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {
     *   num *= num;
     *   if (num % 2) {
     *     return result.push(num) < 3;
     *   }
     * });
     * // => [1, 9, 25]
     *
     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     * });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function transform(object, callback, accumulator, thisArg) {
      var isArr = isArray(object);
      if (accumulator == null) {
        if (isArr) {
          accumulator = [];
        } else {
          var ctor = object && object.constructor,
              proto = ctor && ctor.prototype;

          accumulator = baseCreate(proto);
        }
      }
      if (callback) {
        callback = lodash.createCallback(callback, thisArg, 4);
        (isArr ? forEach : forOwn)(object, function(value, index, object) {
          return callback(accumulator, value, index, object);
        });
      }
      return accumulator;
    }

    /**
     * Creates an array composed of the own enumerable property values of `object`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property values.
     * @example
     *
     * _.values({ 'one': 1, 'two': 2, 'three': 3 });
     * // => [1, 2, 3] (property order is not guaranteed across environments)
     */
    function values(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array of elements from the specified indexes, or keys, of the
     * `collection`. Indexes may be specified as individual arguments or as arrays
     * of indexes.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`
     *   to retrieve, specified as individual indexes or arrays of indexes.
     * @returns {Array} Returns a new array of elements corresponding to the
     *  provided indexes.
     * @example
     *
     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
     * // => ['a', 'c', 'e']
     *
     * _.at(['fred', 'barney', 'pebbles'], 0, 2);
     * // => ['fred', 'pebbles']
     */
    function at(collection) {
      var args = arguments,
          index = -1,
          props = baseFlatten(args, true, false, 1),
          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
          result = Array(length);

      while(++index < length) {
        result[index] = collection[props[index]];
      }
      return result;
    }

    /**
     * Checks if a given value is present in a collection using strict equality
     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the
     * offset from the end of the collection.
     *
     * @static
     * @memberOf _
     * @alias include
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {*} target The value to check for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.
     * @example
     *
     * _.contains([1, 2, 3], 1);
     * // => true
     *
     * _.contains([1, 2, 3], 1, 2);
     * // => false
     *
     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.contains('pebbles', 'eb');
     * // => true
     */
    function contains(collection, target, fromIndex) {
      var index = -1,
          indexOf = getIndexOf(),
          length = collection ? collection.length : 0,
          result = false;

      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
      if (isArray(collection)) {
        result = indexOf(collection, target, fromIndex) > -1;
      } else if (typeof length == 'number') {
        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
      } else {
        forOwn(collection, function(value) {
          if (++index >= fromIndex) {
            return !(result = value === target);
          }
        });
      }
      return result;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through the callback. The corresponding value
     * of each key is the number of times the key was returned by the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
    });

    /**
     * Checks if the given callback returns truey value for **all** elements of
     * a collection. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias all
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if all elements passed the callback check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes']);
     * // => false
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.every(characters, 'age');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.every(characters, { 'age': 36 });
     * // => false
     */
    function every(collection, callback, thisArg) {
      var result = true;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if (!(result = !!callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return (result = !!callback(value, index, collection));
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning an array of all elements
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias select
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that passed the callback check.
     * @example
     *
     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [2, 4, 6]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.filter(characters, 'blocked');
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     *
     * // using "_.where" callback shorthand
     * _.filter(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     */
    function filter(collection, callback, thisArg) {
      var result = [];
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            result.push(value);
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result.push(value);
          }
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning the first element that
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias detect, findWhere
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.find(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => { 'name': 'barney', 'age': 36, 'blocked': false }
     *
     * // using "_.where" callback shorthand
     * _.find(characters, { 'age': 1 });
     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }
     *
     * // using "_.pluck" callback shorthand
     * _.find(characters, 'blocked');
     * // => { 'name': 'fred', 'age': 40, 'blocked': true }
     */
    function find(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            return value;
          }
        }
      } else {
        var result;
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result = value;
            return false;
          }
        });
        return result;
      }
    }

    /**
     * This method is like `_.find` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(num) {
     *   return num % 2 == 1;
     * });
     * // => 3
     */
    function findLast(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forEachRight(collection, function(value, index, collection) {
        if (callback(value, index, collection)) {
          result = value;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over elements of a collection, executing the callback for each
     * element. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * Note: As with other "Collections" methods, objects with a `length` property
     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
     * may be used for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
     * // => logs each number and returns '1,2,3'
     *
     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
     * // => logs each number and returns the object (property order is not guaranteed across environments)
     */
    function forEach(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (++index < length) {
          if (callback(collection[index], index, collection) === false) {
            break;
          }
        }
      } else {
        forOwn(collection, callback);
      }
      return collection;
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');
     * // => logs each number from right to left and returns '3,2,1'
     */
    function forEachRight(collection, callback, thisArg) {
      var length = collection ? collection.length : 0;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (length--) {
          if (callback(collection[length], length, collection) === false) {
            break;
          }
        }
      } else {
        var props = keys(collection);
        length = props.length;
        forOwn(collection, function(value, key, collection) {
          key = props ? props[--length] : --length;
          return callback(collection[key], key, collection);
        });
      }
      return collection;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of a collection through the callback. The corresponding value
     * of each key is an array of the elements responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * // using "_.pluck" callback shorthand
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of the collection through the given callback. The corresponding
     * value of each key is the last element responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var keys = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.indexBy(keys, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     */
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Invokes the method named by `methodName` on each element in the `collection`
     * returning an array of the results of each invoked method. Additional arguments
     * will be provided to each invoked method. If `methodName` is a function it
     * will be invoked for, and `this` bound to, each element in the `collection`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|string} methodName The name of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [arg] Arguments to invoke the method with.
     * @returns {Array} Returns a new array of the results of each invoked method.
     * @example
     *
     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invoke([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    function invoke(collection, methodName) {
      var args = slice(arguments, 2),
          index = -1,
          isFunc = typeof methodName == 'function',
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
      });
      return result;
    }

    /**
     * Creates an array of values by running each element in the collection
     * through the callback. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias collect
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of the results of each `callback` execution.
     * @example
     *
     * _.map([1, 2, 3], function(num) { return num * 3; });
     * // => [3, 6, 9]
     *
     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
     * // => [3, 6, 9] (property order is not guaranteed across environments)
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(characters, 'name');
     * // => ['barney', 'fred']
     */
    function map(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        var result = Array(length);
        while (++index < length) {
          result[index] = callback(collection[index], index, collection);
        }
      } else {
        result = [];
        forOwn(collection, function(value, key, collection) {
          result[++index] = callback(value, key, collection);
        });
      }
      return result;
    }

    /**
     * Retrieves the maximum value of a collection. If the collection is empty or
     * falsey `-Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.max(characters, function(chr) { return chr.age; });
     * // => { 'name': 'fred', 'age': 40 };
     *
     * // using "_.pluck" callback shorthand
     * _.max(characters, 'age');
     * // => { 'name': 'fred', 'age': 40 };
     */
    function max(collection, callback, thisArg) {
      var computed = -Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value > result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current > computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the minimum value of a collection. If the collection is empty or
     * falsey `Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.min(characters, function(chr) { return chr.age; });
     * // => { 'name': 'barney', 'age': 36 };
     *
     * // using "_.pluck" callback shorthand
     * _.min(characters, 'age');
     * // => { 'name': 'barney', 'age': 36 };
     */
    function min(collection, callback, thisArg) {
      var computed = Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value < result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current < computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the value of a specified property from all elements in the collection.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {string} property The name of the property to pluck.
     * @returns {Array} Returns a new array of property values.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.pluck(characters, 'name');
     * // => ['barney', 'fred']
     */
    var pluck = map;

    /**
     * Reduces a collection to a value which is the accumulated result of running
     * each element in the collection through the callback, where each successive
     * callback execution consumes the return value of the previous execution. If
     * `accumulator` is not provided the first element of the collection will be
     * used as the initial `accumulator` value. The callback is bound to `thisArg`
     * and invoked with four arguments; (accumulator, value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @alias foldl, inject
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var sum = _.reduce([1, 2, 3], function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     *   return result;
     * }, {});
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function reduce(collection, callback, accumulator, thisArg) {
      if (!collection) return accumulator;
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);

      var index = -1,
          length = collection.length;

      if (typeof length == 'number') {
        if (noaccum) {
          accumulator = collection[++index];
        }
        while (++index < length) {
          accumulator = callback(accumulator, collection[index], index, collection);
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          accumulator = noaccum
            ? (noaccum = false, value)
            : callback(accumulator, value, index, collection)
        });
      }
      return accumulator;
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias foldr
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var list = [[0, 1], [2, 3], [4, 5]];
     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, callback, accumulator, thisArg) {
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);
      forEachRight(collection, function(value, index, collection) {
        accumulator = noaccum
          ? (noaccum = false, value)
          : callback(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * The opposite of `_.filter` this method returns the elements of a
     * collection that the callback does **not** return truey for.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that failed the callback check.
     * @example
     *
     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [1, 3, 5]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.reject(characters, 'blocked');
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     *
     * // using "_.where" callback shorthand
     * _.reject(characters, { 'age': 36 });
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     */
    function reject(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);
      return filter(collection, function(value, index, collection) {
        return !callback(value, index, collection);
      });
    }

    /**
     * Retrieves a random element or `n` random elements from a collection.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to sample.
     * @param {number} [n] The number of elements to sample.
     * @param- {Object} [guard] Allows working with functions like `_.map`
     *  without using their `index` arguments as `n`.
     * @returns {Array} Returns the random sample(s) of `collection`.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     *
     * _.sample([1, 2, 3, 4], 2);
     * // => [3, 1]
     */
    function sample(collection, n, guard) {
      if (collection && typeof collection.length != 'number') {
        collection = values(collection);
      }
      if (n == null || guard) {
        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
      }
      var result = shuffle(collection);
      result.length = nativeMin(nativeMax(0, n), result.length);
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the Fisher-Yates
     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to shuffle.
     * @returns {Array} Returns a new shuffled collection.
     * @example
     *
     * _.shuffle([1, 2, 3, 4, 5, 6]);
     * // => [4, 1, 6, 3, 5, 2]
     */
    function shuffle(collection) {
      var index = -1,
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        var rand = baseRandom(0, ++index);
        result[index] = result[rand];
        result[rand] = value;
      });
      return result;
    }

    /**
     * Gets the size of the `collection` by returning `collection.length` for arrays
     * and array-like objects or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns `collection.length` or number of own enumerable properties.
     * @example
     *
     * _.size([1, 2]);
     * // => 2
     *
     * _.size({ 'one': 1, 'two': 2, 'three': 3 });
     * // => 3
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      var length = collection ? collection.length : 0;
      return typeof length == 'number' ? length : keys(collection).length;
    }

    /**
     * Checks if the callback returns a truey value for **any** element of a
     * collection. The function returns as soon as it finds a passing value and
     * does not iterate over the entire collection. The callback is bound to
     * `thisArg` and invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias any
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if any element passed the callback check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.some(characters, 'blocked');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.some(characters, { 'age': 1 });
     * // => false
     */
    function some(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if ((result = callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return !(result = callback(value, index, collection));
        });
      }
      return !!result;
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through the callback. This method
     * performs a stable sort, that is, it will preserve the original sort order
     * of equal elements. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an array of property names is provided for `callback` the collection
     * will be sorted by each property value.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of sorted elements.
     * @example
     *
     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
     * // => [3, 1, 2]
     *
     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
     * // => [3, 1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'barney',  'age': 26 },
     *   { 'name': 'fred',    'age': 30 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(_.sortBy(characters, 'age'), _.values);
     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]
     *
     * // sorting by multiple properties
     * _.map(_.sortBy(characters, ['name', 'age']), _.values);
     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]
     */
    function sortBy(collection, callback, thisArg) {
      var index = -1,
          isArr = isArray(callback),
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      if (!isArr) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      forEach(collection, function(value, key, collection) {
        var object = result[++index] = getObject();
        if (isArr) {
          object.criteria = map(callback, function(key) { return value[key]; });
        } else {
          (object.criteria = getArray())[0] = callback(value, key, collection);
        }
        object.index = index;
        object.value = value;
      });

      length = result.length;
      result.sort(compareAscending);
      while (length--) {
        var object = result[length];
        result[length] = object.value;
        if (!isArr) {
          releaseArray(object.criteria);
        }
        releaseObject(object);
      }
      return result;
    }

    /**
     * Converts the `collection` to an array.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to convert.
     * @returns {Array} Returns the new converted array.
     * @example
     *
     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
     * // => [2, 3, 4]
     */
    function toArray(collection) {
      if (collection && typeof collection.length == 'number') {
        return slice(collection);
      }
      return values(collection);
    }

    /**
     * Performs a deep comparison of each element in a `collection` to the given
     * `properties` object, returning an array of all elements that have equivalent
     * property values.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Object} props The object of property values to filter by.
     * @returns {Array} Returns a new array of elements that have the given properties.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * _.where(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]
     *
     * _.where(characters, { 'pets': ['dino'] });
     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]
     */
    var where = filter;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are all falsey.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to compact.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array excluding all values of the provided arrays using strict
     * equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {...Array} [values] The arrays of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
     * // => [1, 3, 4]
     */
    function difference(array) {
      return baseDifference(array, baseFlatten(arguments, true, true, 1));
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.findIndex(characters, function(chr) {
     *   return chr.age < 20;
     * });
     * // => 2
     *
     * // using "_.where" callback shorthand
     * _.findIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findIndex(characters, 'blocked');
     * // => 1
     */
    function findIndex(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        if (callback(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': true },
     *   { 'name': 'fred',    'age': 40, 'blocked': false },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }
     * ];
     *
     * _.findLastIndex(characters, function(chr) {
     *   return chr.age > 30;
     * });
     * // => 1
     *
     * // using "_.where" callback shorthand
     * _.findLastIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findLastIndex(characters, 'blocked');
     * // => 2
     */
    function findLastIndex(array, callback, thisArg) {
      var length = array ? array.length : 0;
      callback = lodash.createCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(array[length], length, array)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Gets the first element or first `n` elements of an array. If a callback
     * is provided elements at the beginning of the array are returned as long
     * as the callback returns truey. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias head, take
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the first element(s) of `array`.
     * @example
     *
     * _.first([1, 2, 3]);
     * // => 1
     *
     * _.first([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.first([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.first(characters, 'blocked');
     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');
     * // => ['barney', 'fred']
     */
    function first(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = -1;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[0] : undefined;
        }
      }
      return slice(array, 0, nativeMin(nativeMax(0, n), length));
    }

    /**
     * Flattens a nested array (the nesting can be to any depth). If `isShallow`
     * is truey, the array will only be flattened a single level. If a callback
     * is provided each element of the array is passed through the callback before
     * flattening. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new flattened array.
     * @example
     *
     * _.flatten([1, [2], [3, [[4]]]]);
     * // => [1, 2, 3, 4];
     *
     * _.flatten([1, [2], [3, [[4]]]], true);
     * // => [1, 2, 3, [[4]]];
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.flatten(characters, 'pets');
     * // => ['hoppy', 'baby puss', 'dino']
     */
    function flatten(array, isShallow, callback, thisArg) {
      // juggle arguments
      if (typeof isShallow != 'boolean' && isShallow != null) {
        thisArg = callback;
        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
        isShallow = false;
      }
      if (callback != null) {
        array = map(array, callback, thisArg);
      }
      return baseFlatten(array, isShallow);
    }

    /**
     * Gets the index at which the first occurrence of `value` is found using
     * strict equality for comparisons, i.e. `===`. If the array is already sorted
     * providing `true` for `fromIndex` will run a faster binary search.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
     *  to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 1
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 4
     *
     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
     * // => 2
     */
    function indexOf(array, value, fromIndex) {
      if (typeof fromIndex == 'number') {
        var length = array ? array.length : 0;
        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
      } else if (fromIndex) {
        var index = sortedIndex(array, value);
        return array[index] === value ? index : -1;
      }
      return baseIndexOf(array, value, fromIndex);
    }

    /**
     * Gets all but the last element or last `n` elements of an array. If a
     * callback is provided elements at the end of the array are excluded from
     * the result as long as the callback returns truey. The callback is bound
     * to `thisArg` and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     *
     * _.initial([1, 2, 3], 2);
     * // => [1]
     *
     * _.initial([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [1]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.initial(characters, 'blocked');
     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');
     * // => ['barney', 'fred']
     */
    function initial(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : callback || n;
      }
      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
    }

    /**
     * Creates an array of unique values present in all provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of shared values.
     * @example
     *
     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2]
     */
    function intersection() {
      var args = [],
          argsIndex = -1,
          argsLength = arguments.length,
          caches = getArray(),
          indexOf = getIndexOf(),
          trustIndexOf = indexOf === baseIndexOf,
          seen = getArray();

      while (++argsIndex < argsLength) {
        var value = arguments[argsIndex];
        if (isArray(value) || isArguments(value)) {
          args.push(value);
          caches.push(trustIndexOf && value.length >= largeArraySize &&
            createCache(argsIndex ? args[argsIndex] : seen));
        }
      }
      var array = args[0],
          index = -1,
          length = array ? array.length : 0,
          result = [];

      outer:
      while (++index < length) {
        var cache = caches[0];
        value = array[index];

        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
          argsIndex = argsLength;
          (cache || seen).push(value);
          while (--argsIndex) {
            cache = caches[argsIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
              continue outer;
            }
          }
          result.push(value);
        }
      }
      while (argsLength--) {
        cache = caches[argsLength];
        if (cache) {
          releaseObject(cache);
        }
      }
      releaseArray(caches);
      releaseArray(seen);
      return result;
    }

    /**
     * Gets the last element or last `n` elements of an array. If a callback is
     * provided elements at the end of the array are returned as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the last element(s) of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     *
     * _.last([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.last([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [2, 3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.last(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.last(characters, { 'employer': 'na' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function last(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[length - 1] : undefined;
        }
      }
      return slice(array, nativeMax(0, length - n));
    }

    /**
     * Gets the index at which the last occurrence of `value` is found using strict
     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
     * as the offset from the end of the collection.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 4
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var index = array ? array.length : 0;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all provided values from the given array using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {...*} [value] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    function pull(array) {
      var args = arguments,
          argsIndex = 0,
          argsLength = args.length,
          length = array ? array.length : 0;

      while (++argsIndex < argsLength) {
        var index = -1,
            value = args[argsIndex];
        while (++index < length) {
          if (array[index] === value) {
            splice.call(array, index--, 1);
            length--;
          }
        }
      }
      return array;
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to but not including `end`. If `start` is less than `stop` a
     * zero-length range is created unless a negative `step` is specified.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns a new range array.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    function range(start, end, step) {
      start = +start || 0;
      step = typeof step == 'number' ? step : (+step || 1);

      if (end == null) {
        end = start;
        start = 0;
      }
      // use `Array(length)` so engines like Chakra and V8 avoid slower modes
      // http://youtu.be/XAqIpGU8ZZk#t=17m25s
      var index = -1,
          length = nativeMax(0, ceil((end - start) / (step || 1))),
          result = Array(length);

      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Removes all elements from an array that the callback returns truey for
     * and returns an array of removed elements. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4, 5, 6];
     * var evens = _.remove(array, function(num) { return num % 2 == 0; });
     *
     * console.log(array);
     * // => [1, 3, 5]
     *
     * console.log(evens);
     * // => [2, 4, 6]
     */
    function remove(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (callback(value, index, array)) {
          result.push(value);
          splice.call(array, index--, 1);
          length--;
        }
      }
      return result;
    }

    /**
     * The opposite of `_.initial` this method gets all but the first element or
     * first `n` elements of an array. If a callback function is provided elements
     * at the beginning of the array are excluded from the result as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias drop, tail
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.rest([1, 2, 3]);
     * // => [2, 3]
     *
     * _.rest([1, 2, 3], 2);
     * // => [3]
     *
     * _.rest([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.rest(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.rest(characters, { 'employer': 'slate' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function rest(array, callback, thisArg) {
      if (typeof callback != 'number' && callback != null) {
        var n = 0,
            index = -1,
            length = array ? array.length : 0;

        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
      }
      return slice(array, n);
    }

    /**
     * Uses a binary search to determine the smallest index at which a value
     * should be inserted into a given sorted array in order to maintain the sort
     * order of the array. If a callback is provided it will be executed for
     * `value` and each element of `array` to compute their sort ranking. The
     * callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([20, 30, 50], 40);
     * // => 2
     *
     * // using "_.pluck" callback shorthand
     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
     * // => 2
     *
     * var dict = {
     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
     * };
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return dict.wordToNumber[word];
     * });
     * // => 2
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return this.wordToNumber[word];
     * }, dict);
     * // => 2
     */
    function sortedIndex(array, value, callback, thisArg) {
      var low = 0,
          high = array ? array.length : low;

      // explicitly reference `identity` for better inlining in Firefox
      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
      value = callback(value);

      while (low < high) {
        var mid = (low + high) >>> 1;
        (callback(array[mid]) < value)
          ? low = mid + 1
          : high = mid;
      }
      return low;
    }

    /**
     * Creates an array of unique values, in order, of the provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of combined values.
     * @example
     *
     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2, 3, 5, 4]
     */
    function union() {
      return baseUniq(baseFlatten(arguments, true, true));
    }

    /**
     * Creates a duplicate-value-free version of an array using strict equality
     * for comparisons, i.e. `===`. If the array is sorted, providing
     * `true` for `isSorted` will use a faster algorithm. If a callback is provided
     * each element of `array` is passed through the callback before uniqueness
     * is computed. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias unique
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a duplicate-value-free array.
     * @example
     *
     * _.uniq([1, 2, 1, 3, 1]);
     * // => [1, 2, 3]
     *
     * _.uniq([1, 1, 2, 2, 3], true);
     * // => [1, 2, 3]
     *
     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });
     * // => ['A', 'b', 'C']
     *
     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);
     * // => [1, 2.5, 3]
     *
     * // using "_.pluck" callback shorthand
     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniq(array, isSorted, callback, thisArg) {
      // juggle arguments
      if (typeof isSorted != 'boolean' && isSorted != null) {
        thisArg = callback;
        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
        isSorted = false;
      }
      if (callback != null) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      return baseUniq(array, isSorted, callback);
    }

    /**
     * Creates an array excluding all provided values using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to filter.
     * @param {...*} [value] The values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
     * // => [2, 3, 4]
     */
    function without(array) {
      return baseDifference(array, slice(arguments, 1));
    }

    /**
     * Creates an array that is the symmetric difference of the provided arrays.
     * See http://en.wikipedia.org/wiki/Symmetric_difference.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of values.
     * @example
     *
     * _.xor([1, 2, 3], [5, 2, 1, 4]);
     * // => [3, 5, 4]
     *
     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);
     * // => [1, 4, 5]
     */
    function xor() {
      var index = -1,
          length = arguments.length;

      while (++index < length) {
        var array = arguments[index];
        if (isArray(array) || isArguments(array)) {
          var result = result
            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))
            : array;
        }
      }
      return result || [];
    }

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second
     * elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @alias unzip
     * @category Arrays
     * @param {...Array} [array] Arrays to process.
     * @returns {Array} Returns a new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    function zip() {
      var array = arguments.length > 1 ? arguments : arguments[0],
          index = -1,
          length = array ? max(pluck(array, 'length')) : 0,
          result = Array(length < 0 ? 0 : length);

      while (++index < length) {
        result[index] = pluck(array, index);
      }
      return result;
    }

    /**
     * Creates an object composed from arrays of `keys` and `values`. Provide
     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`
     * or two arrays, one of `keys` and one of corresponding `values`.
     *
     * @static
     * @memberOf _
     * @alias object
     * @category Arrays
     * @param {Array} keys The array of keys.
     * @param {Array} [values=[]] The array of values.
     * @returns {Object} Returns an object composed of the given keys and
     *  corresponding values.
     * @example
     *
     * _.zipObject(['fred', 'barney'], [30, 40]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function zipObject(keys, values) {
      var index = -1,
          length = keys ? keys.length : 0,
          result = {};

      if (!values && length && !isArray(keys[0])) {
        values = [];
      }
      while (++index < length) {
        var key = keys[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that executes `func`, with  the `this` binding and
     * arguments of the created function, only after being called `n` times.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {number} n The number of times the function must be called before
     *  `func` is executed.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('Done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'Done saving!', after all saves have completed
     */
    function after(n, func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with the `this`
     * binding of `thisArg` and prepends any additional `bind` arguments to those
     * provided to the bound function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to bind.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var func = function(greeting) {
     *   return greeting + ' ' + this.name;
     * };
     *
     * func = _.bind(func, { 'name': 'fred' }, 'hi');
     * func();
     * // => 'hi fred'
     */
    function bind(func, thisArg) {
      return arguments.length > 2
        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
        : createWrapper(func, 1, null, null, thisArg);
    }

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method. Method names may be specified as individual arguments or as arrays
     * of method names. If no method names are provided all the function properties
     * of `object` will be bound.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...string} [methodName] The object method names to
     *  bind, specified as individual method names or arrays of method names.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() { console.log('clicked ' + this.label); }
     * };
     *
     * _.bindAll(view);
     * jQuery('#docs').on('click', view.onClick);
     * // => logs 'clicked docs', when the button is clicked
     */
    function bindAll(object) {
      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
          index = -1,
          length = funcs.length;

      while (++index < length) {
        var key = funcs[index];
        object[key] = createWrapper(object[key], 1, null, null, object);
      }
      return object;
    }

    /**
     * Creates a function that, when called, invokes the method at `object[key]`
     * and prepends any additional `bindKey` arguments to those provided to the bound
     * function. This method differs from `_.bind` by allowing bound functions to
     * reference methods that will be redefined or don't yet exist.
     * See http://michaux.ca/articles/lazy-function-definition-pattern.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object the method belongs to.
     * @param {string} key The key of the method.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'name': 'fred',
     *   'greet': function(greeting) {
     *     return greeting + ' ' + this.name;
     *   }
     * };
     *
     * var func = _.bindKey(object, 'greet', 'hi');
     * func();
     * // => 'hi fred'
     *
     * object.greet = function(greeting) {
     *   return greeting + 'ya ' + this.name + '!';
     * };
     *
     * func();
     * // => 'hiya fred!'
     */
    function bindKey(object, key) {
      return arguments.length > 2
        ? createWrapper(key, 19, slice(arguments, 2), null, object)
        : createWrapper(key, 3, null, null, object);
    }

    /**
     * Creates a function that is the composition of the provided functions,
     * where each function consumes the return value of the function that follows.
     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
     * Each function is executed with the `this` binding of the composed function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {...Function} [func] Functions to compose.
     * @returns {Function} Returns the new composed function.
     * @example
     *
     * var realNameMap = {
     *   'pebbles': 'penelope'
     * };
     *
     * var format = function(name) {
     *   name = realNameMap[name.toLowerCase()] || name;
     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
     * };
     *
     * var greet = function(formatted) {
     *   return 'Hiya ' + formatted + '!';
     * };
     *
     * var welcome = _.compose(greet, format);
     * welcome('pebbles');
     * // => 'Hiya Penelope!'
     */
    function compose() {
      var funcs = arguments,
          length = funcs.length;

      while (length--) {
        if (!isFunction(funcs[length])) {
          throw new TypeError;
        }
      }
      return function() {
        var args = arguments,
            length = funcs.length;

        while (length--) {
          args = [funcs[length].apply(this, args)];
        }
        return args[0];
      };
    }

    /**
     * Creates a function which accepts one or more arguments of `func` that when
     * invoked either executes `func` returning its result, if all `func` arguments
     * have been provided, or returns a function that accepts one or more of the
     * remaining `func` arguments, and so on. The arity of `func` can be specified
     * if `func.length` is not sufficient.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var curried = _.curry(function(a, b, c) {
     *   console.log(a + b + c);
     * });
     *
     * curried(1)(2)(3);
     * // => 6
     *
     * curried(1, 2)(3);
     * // => 6
     *
     * curried(1, 2, 3);
     * // => 6
     */
    function curry(func, arity) {
      arity = typeof arity == 'number' ? arity : (+arity || func.length);
      return createWrapper(func, 4, null, null, null, arity);
    }

    /**
     * Creates a function that will delay the execution of `func` until after
     * `wait` milliseconds have elapsed since the last time it was invoked.
     * Provide an options object to indicate that `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
     * to the debounced function will return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to debounce.
     * @param {number} wait The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // avoid costly calculations while the window size is in flux
     * var lazyLayout = _.debounce(calculateLayout, 150);
     * jQuery(window).on('resize', lazyLayout);
     *
     * // execute `sendMail` when the click event is fired, debouncing subsequent calls
     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * });
     *
     * // ensure `batchLog` is executed once after 1 second of debounced calls
     * var source = new EventSource('/stream');
     * source.addEventListener('message', _.debounce(batchLog, 250, {
     *   'maxWait': 1000
     * }, false);
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      wait = nativeMax(0, wait) || 0;
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = options.leading;
        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      var delayed = function() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0) {
          if (maxTimeoutId) {
            clearTimeout(maxTimeoutId);
          }
          var isCalled = trailingCall;
          maxTimeoutId = timeoutId = trailingCall = undefined;
          if (isCalled) {
            lastCalled = now();
            result = func.apply(thisArg, args);
            if (!timeoutId && !maxTimeoutId) {
              args = thisArg = null;
            }
          }
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      };

      var maxDelayed = function() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (trailing || (maxWait !== wait)) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = null;
          }
        }
      };

      return function() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0;

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = null;
        }
        return result;
      };
    }

    /**
     * Defers executing the `func` function until the current call stack has cleared.
     * Additional arguments will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to defer.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) { console.log(text); }, 'deferred');
     * // logs 'deferred' after one or more milliseconds
     */
    function defer(func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 1);
      return setTimeout(function() { func.apply(undefined, args); }, 1);
    }

    /**
     * Executes the `func` function after `wait` milliseconds. Additional arguments
     * will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay execution.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) { console.log(text); }, 1000, 'later');
     * // => logs 'later' after one second
     */
    function delay(func, wait) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 2);
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it will be used to determine the cache key for storing the result
     * based on the arguments provided to the memoized function. By default, the
     * first argument provided to the memoized function is used as the cache key.
     * The `func` is executed with the `this` binding of the memoized function.
     * The result cache is exposed as the `cache` property on the memoized function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] A function used to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var fibonacci = _.memoize(function(n) {
     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
     * });
     *
     * fibonacci(9)
     * // => 34
     *
     * var data = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // modifying the result cache
     * var get = _.memoize(function(name) { return data[name]; }, _.identity);
     * get('pebbles');
     * // => { 'name': 'pebbles', 'age': 1 }
     *
     * get.cache.pebbles.name = 'penelope';
     * get('pebbles');
     * // => { 'name': 'penelope', 'age': 1 }
     */
    function memoize(func, resolver) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var memoized = function() {
        var cache = memoized.cache,
            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];

        return hasOwnProperty.call(cache, key)
          ? cache[key]
          : (cache[key] = func.apply(this, arguments));
      }
      memoized.cache = {};
      return memoized;
    }

    /**
     * Creates a function that is restricted to execute `func` once. Repeat calls to
     * the function will return the value of the first call. The `func` is executed
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` executes `createApplication` once
     */
    function once(func) {
      var ran,
          result;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (ran) {
          return result;
        }
        ran = true;
        result = func.apply(this, arguments);

        // clear the `func` variable so the function may be garbage collected
        func = null;
        return result;
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with any additional
     * `partial` arguments prepended to those provided to the new function. This
     * method is similar to `_.bind` except it does **not** alter the `this` binding.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) { return greeting + ' ' + name; };
     * var hi = _.partial(greet, 'hi');
     * hi('fred');
     * // => 'hi fred'
     */
    function partial(func) {
      return createWrapper(func, 16, slice(arguments, 1));
    }

    /**
     * This method is like `_.partial` except that `partial` arguments are
     * appended to those provided to the new function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var defaultsDeep = _.partialRight(_.merge, _.defaults);
     *
     * var options = {
     *   'variable': 'data',
     *   'imports': { 'jq': $ }
     * };
     *
     * defaultsDeep(options, _.templateSettings);
     *
     * options.variable
     * // => 'data'
     *
     * options.imports
     * // => { '_': _, 'jq': $ }
     */
    function partialRight(func) {
      return createWrapper(func, 32, null, slice(arguments, 1));
    }

    /**
     * Creates a function that, when executed, will only call the `func` function
     * at most once per every `wait` milliseconds. Provide an options object to
     * indicate that `func` should be invoked on the leading and/or trailing edge
     * of the `wait` timeout. Subsequent calls to the throttled function will
     * return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to throttle.
     * @param {number} wait The number of milliseconds to throttle executions to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // avoid excessively updating the position while scrolling
     * var throttled = _.throttle(updatePosition, 100);
     * jQuery(window).on('scroll', throttled);
     *
     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
     *   'trailing': false
     * }));
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? options.leading : leading;
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      debounceOptions.leading = leading;
      debounceOptions.maxWait = wait;
      debounceOptions.trailing = trailing;

      return debounce(func, wait, debounceOptions);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Additional arguments provided to the function are appended
     * to those provided to the wrapper function. The wrapper is executed with
     * the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {*} value The value to wrap.
     * @param {Function} wrapper The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('Fred, Wilma, & Pebbles');
     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'
     */
    function wrap(value, wrapper) {
      return createWrapper(wrapper, 16, [value]);
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var getter = _.constant(object);
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Produces a callback bound to an optional `thisArg`. If `func` is a property
     * name the created callback will return the property value for a given element.
     * If `func` is an object the created callback will return `true` for elements
     * that contain the equivalent object properties, otherwise it will return `false`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // wrap to create custom callback shorthands
     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {
     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);
     *   return !match ? func(callback, thisArg) : function(object) {
     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];
     *   };
     * });
     *
     * _.filter(characters, 'age__gt38');
     * // => [{ 'name': 'fred', 'age': 40 }]
     */
    function createCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (func == null || type == 'function') {
        return baseCreateCallback(func, thisArg, argCount);
      }
      // handle "_.pluck" style callback shorthands
      if (type != 'object') {
        return property(func);
      }
      var props = keys(func),
          key = props[0],
          a = func[key];

      // handle "_.where" style callback shorthands
      if (props.length == 1 && a === a && !isObject(a)) {
        // fast path the common case of providing an object with a single
        // property containing a primitive value
        return function(object) {
          var b = object[key];
          return a === b && (a !== 0 || (1 / a == 1 / b));
        };
      }
      return function(object) {
        var length = props.length,
            result = false;

        while (length--) {
          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
            break;
          }
        }
        return result;
      };
    }

    /**
     * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
     * corresponding HTML entities.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('Fred, Wilma, & Pebbles');
     * // => 'Fred, Wilma, &amp; Pebbles'
     */
    function escape(string) {
      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
    }

    /**
     * This method returns the first argument provided to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Adds function properties of a source object to the destination object.
     * If `object` is a function methods will be added to its prototype as well.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Function|Object} [object=lodash] object The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.
     * @example
     *
     * function capitalize(string) {
     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
     * }
     *
     * _.mixin({ 'capitalize': capitalize });
     * _.capitalize('fred');
     * // => 'Fred'
     *
     * _('fred').capitalize().value();
     * // => 'Fred'
     *
     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });
     * _('fred').capitalize();
     * // => 'Fred'
     */
    function mixin(object, source, options) {
      var chain = true,
          methodNames = source && functions(source);

      if (!source || (!options && !methodNames.length)) {
        if (options == null) {
          options = source;
        }
        ctor = lodashWrapper;
        source = object;
        object = lodash;
        methodNames = functions(source);
      }
      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      var ctor = object,
          isFunc = isFunction(ctor);

      forEach(methodNames, function(methodName) {
        var func = object[methodName] = source[methodName];
        if (isFunc) {
          ctor.prototype[methodName] = function() {
            var chainAll = this.__chain__,
                value = this.__wrapped__,
                args = [value];

            push.apply(args, arguments);
            var result = func.apply(object, args);
            if (chain || chainAll) {
              if (value === result && isObject(result)) {
                return this;
              }
              result = new ctor(result);
              result.__chain__ = chainAll;
            }
            return result;
          };
        }
      });
    }

    /**
     * Reverts the '_' variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      context._ = oldDash;
      return this;
    }

    /**
     * A no-operation function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // no operation performed
    }

    /**
     * Gets the number of milliseconds that have elapsed since the Unix epoch
     * (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var stamp = _.now();
     * _.defer(function() { console.log(_.now() - stamp); });
     * // => logs the number of milliseconds it took for the deferred function to be called
     */
    var now = isNative(now = Date.now) && now || function() {
      return new Date().getTime();
    };

    /**
     * Converts the given value into an integer of the specified radix.
     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the
     * `value` is a hexadecimal, in which case a `radix` of `16` is used.
     *
     * Note: This method avoids differences in native ES3 and ES5 `parseInt`
     * implementations. See http://es5.github.io/#E.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} value The value to parse.
     * @param {number} [radix] The radix used to interpret the value to parse.
     * @returns {number} Returns the new integer value.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     */
    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`
      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
    };

    /**
     * Creates a "_.pluck" style function, which returns the `key` value of a
     * given object.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} key The name of the property to retrieve.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var characters = [
     *   { 'name': 'fred',   'age': 40 },
     *   { 'name': 'barney', 'age': 36 }
     * ];
     *
     * var getName = _.property('name');
     *
     * _.map(characters, getName);
     * // => ['barney', 'fred']
     *
     * _.sortBy(characters, getName);
     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]
     */
    function property(key) {
      return function(object) {
        return object[key];
      };
    }

    /**
     * Produces a random number between `min` and `max` (inclusive). If only one
     * argument is provided a number between `0` and the given number will be
     * returned. If `floating` is truey or either `min` or `max` are floats a
     * floating-point number will be returned instead of an integer.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} [min=0] The minimum possible value.
     * @param {number} [max=1] The maximum possible value.
     * @param {boolean} [floating=false] Specify returning a floating-point number.
     * @returns {number} Returns a random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(min, max, floating) {
      var noMin = min == null,
          noMax = max == null;

      if (floating == null) {
        if (typeof min == 'boolean' && noMax) {
          floating = min;
          min = 1;
        }
        else if (!noMax && typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);
      }
      return baseRandom(min, max);
    }

    /**
     * Resolves the value of property `key` on `object`. If `key` is a function
     * it will be invoked with the `this` binding of `object` and its result returned,
     * else the property value is returned. If `object` is falsey then `undefined`
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to resolve.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = {
     *   'cheese': 'crumpets',
     *   'stuff': function() {
     *     return 'nonsense';
     *   }
     * };
     *
     * _.result(object, 'cheese');
     * // => 'crumpets'
     *
     * _.result(object, 'stuff');
     * // => 'nonsense'
     */
    function result(object, key) {
      if (object) {
        var value = object[key];
        return isFunction(value) ? object[key]() : value;
      }
    }

    /**
     * A micro-templating method that handles arbitrary delimiters, preserves
     * whitespace, and correctly escapes quotes within interpolated code.
     *
     * Note: In the development build, `_.template` utilizes sourceURLs for easier
     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
     *
     * For more information on precompiling templates see:
     * http://lodash.com/custom-builds
     *
     * For more information on Chrome extension sandboxes see:
     * http://developer.chrome.com/stable/extensions/sandboxingEval.html
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} text The template text.
     * @param {Object} data The data object used to populate the text.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as local variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [variable] The data object variable name.
     * @returns {Function|string} Returns a compiled function when no `data` object
     *  is given, else it returns the interpolated text.
     * @example
     *
     * // using the "interpolate" delimiter to create a compiled template
     * var compiled = _.template('hello <%= name %>');
     * compiled({ 'name': 'fred' });
     * // => 'hello fred'
     *
     * // using the "escape" delimiter to escape HTML in data property values
     * _.template('<b><%- value %></b>', { 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // using the "evaluate" delimiter to generate HTML
     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
     * _.template('hello ${ name }', { 'name': 'pebbles' });
     * // => 'hello pebbles'
     *
     * // using the internal `print` function in "evaluate" delimiters
     * _.template('<% print("hello " + name); %>!', { 'name': 'barney' });
     * // => 'hello barney!'
     *
     * // using a custom template delimiters
     * _.templateSettings = {
     *   'interpolate': /{{([\s\S]+?)}}/g
     * };
     *
     * _.template('hello {{ name }}!', { 'name': 'mustache' });
     * // => 'hello mustache!'
     *
     * // using the `imports` option to import jQuery
     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the `sourceURL` option to specify a custom sourceURL for the template
     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     *   var __t, __p = '', __e = _.escape;
     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
     *   return __p;
     * }
     *
     * // using the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and a stack trace
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(text, data, options) {
      // based on John Resig's `tmpl` implementation
      // http://ejohn.org/blog/javascript-micro-templating/
      // and Laura Doktorova's doT.js
      // https://github.com/olado/doT
      var settings = lodash.templateSettings;
      text = String(text || '');

      // avoid missing dependencies when `iteratorTemplate` is not defined
      options = defaults({}, options, settings);

      var imports = defaults({}, options.imports, settings.imports),
          importsKeys = keys(imports),
          importsValues = values(imports);

      var isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // compile the regexp to match each delimiter
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // escape characters that cannot be included in string literals
        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // replace delimiters with snippets
        if (escapeValue) {
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // the JS engine embedded in Adobe products requires returning the `match`
        // string in order to produce the correct `offset` value
        return match;
      });

      source += "';\n";

      // if `variable` is not specified, wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain
      var variable = options.variable,
          hasVariable = variable;

      if (!hasVariable) {
        variable = 'obj';
        source = 'with (' + variable + ') {\n' + source + '\n}\n';
      }
      // cleanup code by stripping empty strings
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // frame code as the function body
      source = 'function(' + variable + ') {\n' +
        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
        "var __t, __p = '', __e = _.escape" +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      // Use a sourceURL for easier debugging.
      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
      var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';

      try {
        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
      } catch(e) {
        e.source = source;
        throw e;
      }
      if (data) {
        return result(data);
      }
      // provide the compiled function's source by its `toString` method, in
      // supported environments, or the `source` property as a convenience for
      // inlining compiled templates during the build process
      result.source = source;
      return result;
    }

    /**
     * Executes the callback `n` times, returning an array of the results
     * of each callback execution. The callback is bound to `thisArg` and invoked
     * with one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} n The number of times to execute the callback.
     * @param {Function} callback The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns an array of the results of each `callback` execution.
     * @example
     *
     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
     * // => [3, 6, 4]
     *
     * _.times(3, function(n) { mage.castSpell(n); });
     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
     *
     * _.times(3, function(n) { this.cast(n); }, mage);
     * // => also calls `mage.castSpell(n)` three times
     */
    function times(n, callback, thisArg) {
      n = (n = +n) > -1 ? n : 0;
      var index = -1,
          result = Array(n);

      callback = baseCreateCallback(callback, thisArg, 1);
      while (++index < n) {
        result[index] = callback(index);
      }
      return result;
    }

    /**
     * The inverse of `_.escape` this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their
     * corresponding characters.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('Fred, Barney &amp; Pebbles');
     * // => 'Fred, Barney & Pebbles'
     */
    function unescape(string) {
      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
    }

    /**
     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} [prefix] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return String(prefix == null ? '' : prefix) + id;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps the given value with explicit
     * method chaining enabled.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _.chain(characters)
     *     .sortBy('age')
     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })
     *     .first()
     *     .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      value = new lodashWrapper(value);
      value.__chain__ = true;
      return value;
    }

    /**
     * Invokes `interceptor` with the `value` as the first argument and then
     * returns `value`. The purpose of this method is to "tap into" a method
     * chain in order to perform operations on intermediate results within
     * the chain.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3, 4])
     *  .tap(function(array) { array.pop(); })
     *  .reverse()
     *  .value();
     * // => [3, 2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Chaining
     * @returns {*} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // without explicit chaining
     * _(characters).first();
     * // => { 'name': 'barney', 'age': 36 }
     *
     * // with explicit chaining
     * _(characters).chain()
     *   .first()
     *   .pick('age')
     *   .value();
     * // => { 'age': 36 }
     */
    function wrapperChain() {
      this.__chain__ = true;
      return this;
    }

    /**
     * Produces the `toString` result of the wrapped value.
     *
     * @name toString
     * @memberOf _
     * @category Chaining
     * @returns {string} Returns the string result.
     * @example
     *
     * _([1, 2, 3]).toString();
     * // => '1,2,3'
     */
    function wrapperToString() {
      return String(this.__wrapped__);
    }

    /**
     * Extracts the wrapped value.
     *
     * @name valueOf
     * @memberOf _
     * @alias value
     * @category Chaining
     * @returns {*} Returns the wrapped value.
     * @example
     *
     * _([1, 2, 3]).valueOf();
     * // => [1, 2, 3]
     */
    function wrapperValueOf() {
      return this.__wrapped__;
    }

    /*--------------------------------------------------------------------------*/

    // add functions that return wrapped values when chaining
    lodash.after = after;
    lodash.assign = assign;
    lodash.at = at;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.chain = chain;
    lodash.compact = compact;
    lodash.compose = compose;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.createCallback = createCallback;
    lodash.curry = curry;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.map = map;
    lodash.mapValues = mapValues;
    lodash.max = max;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.min = min;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.pull = pull;
    lodash.range = range;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.shuffle = shuffle;
    lodash.sortBy = sortBy;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.values = values;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;

    // add aliases
    lodash.collect = map;
    lodash.drop = rest;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;
    lodash.unzip = zip;

    // add functions to `lodash.prototype`
    mixin(lodash);

    /*--------------------------------------------------------------------------*/

    // add functions that return unwrapped values when chaining
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.contains = contains;
    lodash.escape = escape;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.has = has;
    lodash.identity = identity;
    lodash.indexOf = indexOf;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isNaN = isNaN;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isUndefined = isUndefined;
    lodash.lastIndexOf = lastIndexOf;
    lodash.mixin = mixin;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.result = result;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.template = template;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;

    // add aliases
    lodash.all = every;
    lodash.any = some;
    lodash.detect = find;
    lodash.findWhere = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.include = contains;
    lodash.inject = reduce;

    mixin(function() {
      var source = {}
      forOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }(), false);

    /*--------------------------------------------------------------------------*/

    // add functions capable of returning wrapped and unwrapped values when chaining
    lodash.first = first;
    lodash.last = last;
    lodash.sample = sample;

    // add aliases
    lodash.take = first;
    lodash.head = first;

    forOwn(lodash, function(func, methodName) {
      var callbackable = methodName !== 'sample';
      if (!lodash.prototype[methodName]) {
        lodash.prototype[methodName]= function(n, guard) {
          var chainAll = this.__chain__,
              result = func(this.__wrapped__, n, guard);

          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))
            ? result
            : new lodashWrapper(result, chainAll);
        };
      }
    });

    /*--------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type string
     */
    lodash.VERSION = '2.4.1';

    // add "Chaining" functions to the wrapper
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.value = wrapperValueOf;
    lodash.prototype.valueOf = wrapperValueOf;

    // add `Array` functions that return unwrapped values
    forEach(['join', 'pop', 'shift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        var chainAll = this.__chain__,
            result = func.apply(this.__wrapped__, arguments);

        return chainAll
          ? new lodashWrapper(result, chainAll)
          : result;
      };
    });

    // add `Array` functions that return the existing wrapped value
    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        func.apply(this.__wrapped__, arguments);
        return this;
      };
    });

    // add `Array` functions that return new wrapped values
    forEach(['concat', 'slice', 'splice'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
      };
    });

    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // expose Lo-Dash
  var _ = runInContext();

  // some AMD build optimizers like r.js check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lo-Dash to the global object even when an AMD loader is present in
    // case Lo-Dash is loaded with a RequireJS shim config.
    // See http://requirejs.org/docs/api.html#config-shim
    root._ = _;

    // define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module
    define(function() {
      return _;
    });
  }
  // check for `exports` after `define` in case a build optimizer adds an `exports` object
  else if (freeExports && freeModule) {
    // in Node.js or RingoJS
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // in Narwhal or Rhino -require
    else {
      freeExports._ = _;
    }
  }
  else {
    // in a browser or Rhino
    root._ = _;
  }
}.call(this));

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],136:[function(require,module,exports){
(function (process){
var path = require('path');
var fs = require('fs');

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"fs":169,"path":177}],137:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}
/*</replacement>*/


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

forEach(objectKeys(Writable.prototype), function(method) {
  if (!Duplex.prototype[method])
    Duplex.prototype[method] = Writable.prototype[method];
});

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(this.end.bind(this));
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./_stream_readable":139,"./_stream_writable":141,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"core-util-is":142,"inherits":56}],138:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./_stream_transform":140,"core-util-is":142,"inherits":56}],139:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/


/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;

/*<replacement>*/
if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

var Stream = require('stream');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var StringDecoder;


/*<replacement>*/
var debug = require('util');
if (debug && debug.debuglog) {
  debug = debug.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/


util.inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (util.isString(chunk) && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (util.isNullOrUndefined(chunk)) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      if (!addToFront)
        state.reading = false;

      // if we want the data now, just emit it.
      if (state.flowing && state.length === 0 && !state.sync) {
        stream.emit('data', chunk);
        stream.read(0);
      } else {
        // update the buffer info.
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);

        if (state.needReadable)
          emitReadable(stream);
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (isNaN(n) || util.isNull(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  debug('read', n);
  var state = this._readableState;
  var nOrig = n;

  if (!util.isNumber(n) || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended)
      endReadable(this);
    else
      emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  }

  if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read pushed data synchronously, then `reading` will be false,
  // and we need to re-evaluate how much data we can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (util.isNull(ret)) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we tried to read() past the EOF, then emit end on the next tick.
  if (nOrig !== n && state.ended && state.length === 0)
    endReadable(this);

  if (!util.isNull(ret))
    this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!util.isBuffer(chunk) &&
      !util.isString(chunk) &&
      !util.isNullOrUndefined(chunk) &&
      !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync)
      process.nextTick(function() {
        emitReadable_(stream);
      });
    else
      emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain &&
        (!dest._writableState || dest._writableState.needDrain))
      ondrain();
  }

  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    if (false === ret) {
      debug('false write response, pause',
            src._readableState.awaitDrain);
      src._readableState.awaitDrain++;
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error)
    dest.on('error', onerror);
  else if (isArray(dest._events.error))
    dest._events.error.unshift(onerror);
  else
    dest._events.error = [onerror, dest._events.error];



  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain)
      state.awaitDrain--;
    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  // If listening to data, and it has not explicitly been paused,
  // then call resume to start the flow of data on the next tick.
  if (ev === 'data' && false !== this._readableState.flowing) {
    this.resume();
  }

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        var self = this;
        process.nextTick(function() {
          debug('readable nexttick read 0');
          self.read(0);
        });
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    if (!state.reading) {
      debug('resume read 0');
      this.read(0);
    }
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(function() {
      resume_(stream, state);
    });
  }
}

function resume_(stream, state) {
  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading)
    stream.read(0);
}

Readable.prototype.pause = function() {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  if (state.flowing) {
    do {
      var chunk = stream.read();
    } while (null !== chunk && state.flowing);
  }
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    debug('wrapped data');
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    if (!chunk || !state.objectMode && !chunk.length)
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171,"core-util-is":142,"events":174,"inherits":56,"isarray":143,"stream":183,"string_decoder/":144,"util":170}],140:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (!util.isNullOrUndefined(data))
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('prefinish', function() {
    if (util.isFunction(this._flush))
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./_stream_duplex":137,"core-util-is":142,"inherits":56}],141:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Stream = require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
}

function Writable(options) {
  var Duplex = require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  process.nextTick(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!util.isBuffer(chunk) &&
      !util.isString(chunk) &&
      !util.isNullOrUndefined(chunk) &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    process.nextTick(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (util.isFunction(encoding)) {
    cb = encoding;
    encoding = null;
  }

  if (util.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (!util.isFunction(cb))
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function() {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function() {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing &&
        !state.corked &&
        !state.finished &&
        !state.bufferProcessing &&
        state.buffer.length)
      clearBuffer(this, state);
  }
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      util.isString(chunk)) {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  if (util.isBuffer(chunk))
    encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;

  if (state.writing || state.corked)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, false, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev)
    stream._writev(chunk, state.onwrite);
  else
    stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    process.nextTick(function() {
      state.pendingcb--;
      cb(er);
    });
  else {
    state.pendingcb--;
    cb(er);
  }

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished &&
        !state.corked &&
        !state.bufferProcessing &&
        state.buffer.length) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  if (stream._writev && state.buffer.length > 1) {
    // Fast case, write everything using _writev()
    var cbs = [];
    for (var c = 0; c < state.buffer.length; c++)
      cbs.push(state.buffer[c].callback);

    // count the one we are adding, as well.
    // TODO(isaacs) clean this up
    state.pendingcb++;
    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {
      for (var i = 0; i < cbs.length; i++) {
        state.pendingcb--;
        cbs[i](err);
      }
    });

    // Clear buffer
    state.buffer = [];
  } else {
    // Slow case, write chunks one-by-one
    for (var c = 0; c < state.buffer.length; c++) {
      var entry = state.buffer[c];
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);

      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        c++;
        break;
      }
    }

    if (c < state.buffer.length)
      state.buffer = state.buffer.slice(c);
    else
      state.buffer.length = 0;
  }

  state.bufferProcessing = false;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));

};

Writable.prototype._writev = null;

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (util.isFunction(chunk)) {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (util.isFunction(encoding)) {
    cb = encoding;
    encoding = null;
  }

  if (!util.isNullOrUndefined(chunk))
    this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else
      prefinish(stream, state);
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./_stream_duplex":137,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171,"core-util-is":142,"inherits":56,"stream":183}],142:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

function isBuffer(arg) {
  return Buffer.isBuffer(arg);
}
exports.isBuffer = isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}
}).call(this,require("buffer").Buffer)
},{"buffer":171}],143:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],144:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  this.charBuffer = new Buffer(6);
  this.charReceived = 0;
  this.charLength = 0;
};


StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  var offset = 0;

  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var i = (buffer.length >= this.charLength - this.charReceived) ?
                this.charLength - this.charReceived :
                buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, offset, i);
    this.charReceived += (i - offset);
    offset = i;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (i == buffer.length) return charStr;

    // otherwise cut off the characters end from the beginning of this buffer
    buffer = buffer.slice(i, buffer.length);
    break;
  }

  var lenIncomplete = this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - lenIncomplete, end);
    this.charReceived = lenIncomplete;
    end -= lenIncomplete;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    this.charBuffer.write(charStr.charAt(charStr.length - 1), this.encoding);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }

  return i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 2;
  this.charLength = incomplete ? 2 : 0;
  return incomplete;
}

function base64DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 3;
  this.charLength = incomplete ? 3 : 0;
  return incomplete;
}

},{"buffer":171}],145:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = require('stream');
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":137,"./lib/_stream_passthrough.js":138,"./lib/_stream_readable.js":139,"./lib/_stream_transform.js":140,"./lib/_stream_writable.js":141,"stream":183}],146:[function(require,module,exports){
(function (process){
var defined = require('defined');
var createDefaultStream = require('./lib/default_stream');
var Test = require('./lib/test');
var createResult = require('./lib/results');
var through = require('through');

var canEmitExit = typeof process !== 'undefined' && process
    && typeof process.on === 'function' && process.browser !== true
;
var canExit = typeof process !== 'undefined' && process
    && typeof process.exit === 'function'
;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

exports = module.exports = (function () {
    var harness;
    var lazyLoad = function () {
        return getHarness().apply(this, arguments);
    };
    
    lazyLoad.only = function () {
        return getHarness().only.apply(this, arguments);
    };
    
    lazyLoad.createStream = function (opts) {
        if (!opts) opts = {};
        if (!harness) {
            var output = through();
            getHarness({ stream: output, objectMode: opts.objectMode });
            return output;
        }
        return harness.createStream(opts);
    };
    
    return lazyLoad
    
    function getHarness (opts) {
        if (!opts) opts = {};
        opts.autoclose = !canEmitExit;
        if (!harness) harness = createExitHarness(opts);
        return harness;
    }
})();

function createExitHarness (conf) {
    if (!conf) conf = {};
    var harness = createHarness({
        autoclose: defined(conf.autoclose, false)
    });
    
    var stream = harness.createStream({ objectMode: conf.objectMode });
    var es = stream.pipe(conf.stream || createDefaultStream());
    if (canEmitExit) {
        es.on('error', function (err) { harness._exitCode = 1 });
    }
    
    var ended = false;
    stream.on('end', function () { ended = true });
    
    if (conf.exit === false) return harness;
    if (!canEmitExit || !canExit) return harness;
    
    var _error;

    process.on('uncaughtException', function (err) {
        if (err && err.code === 'EPIPE' && err.errno === 'EPIPE'
        && err.syscall === 'write') return;
        
        _error = err
        
        throw err
    })

    process.on('exit', function (code) {
        if (_error) {
            return
        }

        if (!ended) {
            var only = harness._results._only;
            for (var i = 0; i < harness._tests.length; i++) {
                var t = harness._tests[i];
                if (only && t.name !== only) continue;
                t._exit();
            }
        }
        harness.close();
        process.exit(code || harness._exitCode);
    });
    
    return harness;
}

exports.createHarness = createHarness;
exports.Test = Test;
exports.test = exports; // tap compat
exports.test.skip = Test.skip;

var exitInterval;

function createHarness (conf_) {
    if (!conf_) conf_ = {};
    var results = createResult();
    if (conf_.autoclose !== false) {
        results.once('done', function () { results.close() });
    }
    
    var test = function (name, conf, cb) {
        var t = new Test(name, conf, cb);
        test._tests.push(t);
        
        (function inspectCode (st) {
            st.on('test', function sub (st_) {
                inspectCode(st_);
            });
            st.on('result', function (r) {
                if (!r.ok) test._exitCode = 1
            });
        })(t);
        
        results.push(t);
        return t;
    };
    test._results = results;
    
    test._tests = [];
    
    test.createStream = function (opts) {
        return results.createStream(opts);
    };
    
    var only = false;
    test.only = function (name) {
        if (only) throw new Error('there can only be one only test');
        results.only(name);
        only = true;
        return test.apply(null, arguments);
    };
    test._exitCode = 0;
    
    test.close = function () { results.close() };
    
    return test;
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./lib/default_stream":147,"./lib/results":148,"./lib/test":149,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"defined":153,"through":156}],147:[function(require,module,exports){
(function (process){
var through = require('through');
var fs = require('fs');

module.exports = function () {
    var line = '';
    var stream = through(write, flush);
    return stream;
    
    function write (buf) {
        for (var i = 0; i < buf.length; i++) {
            var c = typeof buf === 'string'
                ? buf.charAt(i)
                : String.fromCharCode(buf[i])
            ;
            if (c === '\n') flush();
            else line += c;
        }
    }
    
    function flush () {
        if (fs.writeSync && /^win/.test(process.platform)) {
            try { fs.writeSync(1, line + '\n'); }
            catch (e) { stream.emit('error', e) }
        }
        else {
            try { console.log(line) }
            catch (e) { stream.emit('error', e) }
        }
        line = '';
    }
};

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"fs":169,"through":156}],148:[function(require,module,exports){
(function (process){
var EventEmitter = require('events').EventEmitter;
var inherits = require('inherits');
var through = require('through');
var resumer = require('resumer');
var inspect = require('object-inspect');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = Results;
inherits(Results, EventEmitter);

function Results () {
    if (!(this instanceof Results)) return new Results;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
    this._stream = through();
    this.tests = [];
}

Results.prototype.createStream = function (opts) {
    if (!opts) opts = {};
    var self = this;
    var output, testId = 0;
    if (opts.objectMode) {
        output = through();
        self.on('_push', function ontest (t, extra) {
            if (!extra) extra = {};
            var id = testId++;
            t.once('prerun', function () {
                var row = {
                    type: 'test',
                    name: t.name,
                    id: id
                };
                if (has(extra, 'parent')) {
                    row.parent = extra.parent;
                }
                output.queue(row);
            });
            t.on('test', function (st) {
                ontest(st, { parent: id });
            });
            t.on('result', function (res) {
                res.test = id;
                res.type = 'assert';
                output.queue(res);
            });
            t.on('end', function () {
                output.queue({ type: 'end', test: id });
            });
        });
        self.on('done', function () { output.queue(null) });
    }
    else {
        output = resumer();
        output.queue('TAP version 13\n');
        self._stream.pipe(output);
    }
    
    nextTick(function next() {
        var t;
        while (t = getNextTest(self)) {
            t.run();
            if (!t.ended) return t.once('end', function(){ nextTick(next); });
        }
        self.emit('done');
    });
    
    return output;
};

Results.prototype.push = function (t) {
    var self = this;
    self.tests.push(t);
    self._watch(t);
    self.emit('_push', t);
};

Results.prototype.only = function (name) {
    if (this._only) {
        self.count ++;
        self.fail ++;
        write('not ok ' + self.count + ' already called .only()\n');
    }
    this._only = name;
};

Results.prototype._watch = function (t) {
    var self = this;
    var write = function (s) { self._stream.queue(s) };
    t.once('prerun', function () {
        write('# ' + t.name + '\n');
    });
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            write('# ' + res + '\n');
            return;
        }
        write(encodeResult(res, self.count + 1));
        self.count ++;

        if (res.ok) self.pass ++
        else self.fail ++
    });
    
    t.on('test', function (st) { self._watch(st) });
};

Results.prototype.close = function () {
    var self = this;
    if (self.closed) self._stream.emit('error', new Error('ALREADY CLOSED'));
    self.closed = true;
    var write = function (s) { self._stream.queue(s) };
    
    write('\n1..' + self.count + '\n');
    write('# tests ' + self.count + '\n');
    write('# pass  ' + self.pass + '\n');
    if (self.fail) write('# fail  ' + self.fail + '\n')
    else write('\n# ok\n')

    self._stream.queue(null);
};

function encodeResult (res, count) {
    var output = '';
    output += (res.ok ? 'ok ' : 'not ok ') + count;
    output += res.name ? ' ' + res.name.toString().replace(/\s+/g, ' ') : '';
    
    if (res.skip) output += ' # SKIP';
    else if (res.todo) output += ' # TODO';
    
    output += '\n';
    if (res.ok) return output;
    
    var outer = '  ';
    var inner = outer + '  ';
    output += outer + '---\n';
    output += inner + 'operator: ' + res.operator + '\n';
    
    if (has(res, 'expected') || has(res, 'actual')) {
        var ex = inspect(res.expected);
        var ac = inspect(res.actual);
        
        if (Math.max(ex.length, ac.length) > 65) {
            output += inner + 'expected:\n' + inner + '  ' + ex + '\n';
            output += inner + 'actual:\n' + inner + '  ' + ac + '\n';
        }
        else {
            output += inner + 'expected: ' + ex + '\n';
            output += inner + 'actual:   ' + ac + '\n';
        }
    }
    if (res.at) {
        output += inner + 'at: ' + res.at + '\n';
    }
    if (res.operator === 'error' && res.actual && res.actual.stack) {
        var lines = String(res.actual.stack).split('\n');
        output += inner + 'stack:\n';
        output += inner + '  ' + lines[0] + '\n';
        for (var i = 1; i < lines.length; i++) {
            output += inner + lines[i] + '\n';
        }
    }
    
    output += outer + '...\n';
    return output;
}

function getNextTest (results) {
    if (!results._only) {
        return results.tests.shift();
    }
    
    do {
        var t = results.tests.shift();
        if (!t) continue;
        if (results._only === t.name) {
            return t;
        }
    } while (results.tests.length !== 0)
}

function has (obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"events":174,"inherits":56,"object-inspect":154,"resumer":155,"through":156}],149:[function(require,module,exports){
(function (process,__dirname){
var Stream = require('stream');
var deepEqual = require('deep-equal');
var defined = require('defined');
var path = require('path');
var inherits = require('inherits');
var EventEmitter = require('events').EventEmitter;

module.exports = Test;

var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

inherits(Test, EventEmitter);

var getTestArgs = function (name_, opts_, cb_) {
    var name = '(anonymous)';
    var opts = {};
    var cb;
    
    for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        var t = typeof arg;
        if (t === 'string') {
            name = arg;
        }
        else if (t === 'object') {
            opts = arg || opts;
        }
        else if (t === 'function') {
            cb = arg;
        }
    }
    return { name: name, opts: opts, cb: cb };
};

function Test (name_, opts_, cb_) {
    if (! (this instanceof Test)) {
        return new Test(name_, opts_, cb_);
    }

    var args = getTestArgs(name_, opts_, cb_);

    this.readable = true;
    this.name = args.name || '(anonymous)';
    this.assertCount = 0;
    this.pendingCount = 0;
    this._skip = args.opts.skip || false;
    this._plan = undefined;
    this._cb = args.cb;
    this._progeny = [];
    this._ok = true;

    for (prop in this) {
        this[prop] = (function bind(self, val) {
            if (typeof val === 'function') {
                return function bound() {
                    return val.apply(self, arguments);
                };
            }
            else return val;
        })(this, this[prop]);
    }
}

Test.prototype.run = function () {
    if (!this._cb || this._skip) {
        return this._end();
    }
    this.emit('prerun');
    try {
        this._cb(this);
    }
    catch (err) {
        this.error(err);
        this._end();
        return;
    }
    this.emit('run');
};

Test.prototype.test = function (name, opts, cb) {
    var self = this;
    var t = new Test(name, opts, cb);
    this._progeny.push(t);
    this.pendingCount++;
    this.emit('test', t);
    t.on('prerun', function () {
        self.assertCount++;
    })
    
    if (!self._pendingAsserts()) {
        nextTick(function () {
            self._end();
        });
    }
    
    nextTick(function() {
        if (!self._plan && self.pendingCount == self._progeny.length) {
            self._end();
        }
    });
};

Test.prototype.comment = function (msg) {
    this.emit('result', msg.trim().replace(/^#\s*/, ''));
};

Test.prototype.plan = function (n) {
    this._plan = n;
    this.emit('plan', n);
};

Test.prototype.end = function (err) { 
    var self = this;
    if (arguments.length >= 1) {
        this.ifError(err);
    }
    
    if (this.calledEnd) {
        this.fail('.end() called twice');
    }
    this.calledEnd = true;
    this._end();
};

Test.prototype._end = function (err) {
    var self = this;
    if (this._progeny.length) {
        var t = this._progeny.shift();
        t.on('end', function () { self._end() });
        t.run();
        return;
    }
    
    if (!this.ended) this.emit('end');
    var pendingAsserts = this._pendingAsserts();
    if (!this._planError && this._plan !== undefined && pendingAsserts) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount
        });
    }
    this.ended = true;
};

Test.prototype._exit = function () {
    if (this._plan !== undefined &&
        !this._planError && this.assertCount !== this._plan) {
        this._planError = true;
        this.fail('plan != count', {
            expected : this._plan,
            actual : this.assertCount,
            exiting : true
        });
    }
    else if (!this.ended) {
        this.fail('test exited without ending', {
            exiting: true
        });
    }
};

Test.prototype._pendingAsserts = function () {
    if (this._plan === undefined) {
        return 1;
    }
    else {
        return this._plan - (this._progeny.length + this.assertCount);
    }
};

Test.prototype._assert = function assert (ok, opts) {
    var self = this;
    var extra = opts.extra || {};
    
    var res = {
        id : self.assertCount ++,
        ok : Boolean(ok),
        skip : defined(extra.skip, opts.skip),
        name : defined(extra.message, opts.message, '(unnamed assert)'),
        operator : defined(extra.operator, opts.operator)
    };
    if (has(opts, 'actual') || has(extra, 'actual')) {
        res.actual = defined(extra.actual, opts.actual);
    }
    if (has(opts, 'expected') || has(extra, 'expected')) {
        res.expected = defined(extra.expected, opts.expected);
    }
    this._ok = Boolean(this._ok && ok);
    
    if (!ok) {
        res.error = defined(extra.error, opts.error, new Error(res.name));
    }
    
    var e = new Error('exception');
    var err = (e.stack || '').split('\n');
    var dir = path.dirname(__dirname) + '/';
    
    for (var i = 0; i < err.length; i++) {
        var m = /^\s*\bat\s+(.+)/.exec(err[i]);
        if (!m) continue;
        
        var s = m[1].split(/\s+/);
        var filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[1]);
        if (!filem) {
            filem = /(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(s[3]);
            
            if (!filem) continue;
        }
        
        if (filem[1].slice(0, dir.length) === dir) continue;
        
        res.functionName = s[0];
        res.file = filem[1];
        res.line = Number(filem[2]);
        if (filem[3]) res.column = filem[3];
        
        res.at = m[1];
        break;
    }
    
    self.emit('result', res);
    
    var pendingAsserts = self._pendingAsserts();
    if (!pendingAsserts) {
        if (extra.exiting) {
            self._end();
        } else {
            nextTick(function () {
                self._end();
            });
        }
    }
    
    if (!self._planError && pendingAsserts < 0) {
        self._planError = true;
        self.fail('plan != count', {
            expected : self._plan,
            actual : self._plan - pendingAsserts
        });
    }
};

Test.prototype.fail = function (msg, extra) {
    this._assert(false, {
        message : msg,
        operator : 'fail',
        extra : extra
    });
};

Test.prototype.pass = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'pass',
        extra : extra
    });
};

Test.prototype.skip = function (msg, extra) {
    this._assert(true, {
        message : msg,
        operator : 'skip',
        skip : true,
        extra : extra
    });
};

Test.prototype.ok
= Test.prototype['true']
= Test.prototype.assert
= function (value, msg, extra) {
    this._assert(value, {
        message : msg,
        operator : 'ok',
        expected : true,
        actual : value,
        extra : extra
    });
};

Test.prototype.notOk
= Test.prototype['false']
= Test.prototype.notok
= function (value, msg, extra) {
    this._assert(!value, {
        message : msg,
        operator : 'notOk',
        expected : false,
        actual : value,
        extra : extra
    });
};

Test.prototype.error
= Test.prototype.ifError
= Test.prototype.ifErr
= Test.prototype.iferror
= function (err, msg, extra) {
    this._assert(!err, {
        message : defined(msg, String(err)),
        operator : 'error',
        actual : err,
        extra : extra
    });
};

Test.prototype.equal
= Test.prototype.equals
= Test.prototype.isEqual
= Test.prototype.is
= Test.prototype.strictEqual
= Test.prototype.strictEquals
= function (a, b, msg, extra) {
    this._assert(a === b, {
        message : defined(msg, 'should be equal'),
        operator : 'equal',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notEqual
= Test.prototype.notEquals
= Test.prototype.notStrictEqual
= Test.prototype.notStrictEquals
= Test.prototype.isNotEqual
= Test.prototype.isNot
= Test.prototype.not
= Test.prototype.doesNotEqual
= Test.prototype.isInequal
= function (a, b, msg, extra) {
    this._assert(a !== b, {
        message : defined(msg, 'should not be equal'),
        operator : 'notEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.deepEqual
= Test.prototype.deepEquals
= Test.prototype.isEquivalent
= Test.prototype.same
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.deepLooseEqual
= Test.prototype.looseEqual
= Test.prototype.looseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'deepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype.notDeepEqual
= Test.prototype.notEquivalent
= Test.prototype.notDeeply
= Test.prototype.notSame
= Test.prototype.isNotDeepEqual
= Test.prototype.isNotDeeply
= Test.prototype.isNotEquivalent
= Test.prototype.isInequivalent
= function (a, b, msg, extra) {
    this._assert(!deepEqual(a, b, { strict: true }), {
        message : defined(msg, 'should not be equivalent'),
        operator : 'notDeepEqual',
        actual : a,
        notExpected : b,
        extra : extra
    });
};

Test.prototype.notDeepLooseEqual
= Test.prototype.notLooseEqual
= Test.prototype.notLooseEquals
= function (a, b, msg, extra) {
    this._assert(deepEqual(a, b), {
        message : defined(msg, 'should be equivalent'),
        operator : 'notDeepLooseEqual',
        actual : a,
        expected : b,
        extra : extra
    });
};

Test.prototype['throws'] = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
        var message = err.message;
        delete err.message;
        err.message = message;
    }

    var passed = caught;

    if (expected instanceof RegExp) {
        passed = expected.test(caught && caught.error);
        expected = String(expected);
    }

    this._assert(passed, {
        message : defined(msg, 'should throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error: !passed && caught && caught.error,
        extra : extra
    });
};

Test.prototype.doesNotThrow = function (fn, expected, msg, extra) {
    if (typeof expected === 'string') {
        msg = expected;
        expected = undefined;
    }
    var caught = undefined;
    try {
        fn();
    }
    catch (err) {
        caught = { error : err };
    }
    this._assert(!caught, {
        message : defined(msg, 'should not throw'),
        operator : 'throws',
        actual : caught && caught.error,
        expected : expected,
        error : caught && caught.error,
        extra : extra
    });
};

function has (obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
}

Test.skip = function (name_, _opts, _cb) {
    var args = getTestArgs.apply(null, arguments);
    args.opts.skip = true;
    return Test(args.name, args.opts, args.cb);
};

// vim: set softtabstop=4 shiftwidth=4:

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),"/../node_modules/tape/lib")
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"deep-equal":150,"defined":153,"events":174,"inherits":56,"path":177,"stream":183}],150:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return true;
}

},{"./lib/is_arguments.js":151,"./lib/keys.js":152}],151:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],152:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],153:[function(require,module,exports){
module.exports = function () {
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== undefined) return arguments[i];
    }
};

},{}],154:[function(require,module,exports){
module.exports = function inspect_ (obj, opts, depth, seen) {
    if (!opts) opts = {};
    
    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
    if (depth === undefined) depth = 0;
    if (depth > maxDepth && maxDepth > 0) return '...';
    
    if (seen === undefined) seen = [];
    else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }
    
    function inspect (value, from) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    
    if (typeof obj === 'string') {
        return inspectString(obj);
    }
    else if (typeof obj === 'function') {
        var name = nameOf(obj);
        return '[Function' + (name ? ': ' + name : '') + ']';
    }
    else if (obj === null) {
        return 'null';
    }
    else if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.tagName).toLowerCase() + '>';
        return s;
    }
    else if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = Array(obj.length);
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {
        return obj.inspect();
    }
    else if (typeof obj === 'object' && !isDate(obj) && !isRegExp(obj)) {
        var xs = [], keys = [];
        for (var key in obj) {
            if (has(obj, key)) keys.push(key);
        }
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (/[^\w$]/.test(key)) {
                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
            }
            else xs.push(key + ': ' + inspect(obj[key], obj));
        }
        if (xs.length === 0) return '{}';
        return '{ ' + xs.join(', ') + ' }';
    }
    else return String(obj);
};

function quote (s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray (obj) {
    return {}.toString.call(obj) === '[object Array]';
}

function isDate (obj) {
    return {}.toString.call(obj) === '[object Date]';
}

function isRegExp (obj) {
    return {}.toString.call(obj) === '[object RegExp]';
}

function has (obj, key) {
    if (!{}.hasOwnProperty) return key in obj;
    return {}.hasOwnProperty.call(obj, key);
}

function nameOf (f) {
    if (f.name) return f.name;
    var m = f.toString().match(/^function\s*([\w$]+)/);
    if (m) return m[1];
}

function indexOf (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
}

function isElement (x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined') {
        return x instanceof HTMLElement;
    }
    else return typeof x.nodeName === 'string'
        && typeof x.getAttribute === 'function'
    ;
}

function inspectString (str) {
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return "'" + s + "'";
    
    function lowbyte (c) {
        var n = c.charCodeAt(0);
        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
        if (x) return '\\' + x;
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
    }
}

},{}],155:[function(require,module,exports){
(function (process){
var through = require('through');
var nextTick = typeof setImmediate !== 'undefined'
    ? setImmediate
    : process.nextTick
;

module.exports = function (write, end) {
    var tr = through(write, end);
    tr.pause();
    var resume = tr.resume;
    var pause = tr.pause;
    var paused = false;
    
    tr.pause = function () {
        paused = true;
        return pause.apply(this, arguments);
    };
    
    tr.resume = function () {
        paused = false;
        return resume.apply(this, arguments);
    };
    
    nextTick(function () {
        if (!paused) tr.resume();
    });
    
    return tr;
};

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"through":156}],156:[function(require,module,exports){
(function (process){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data == null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"stream":183}],157:[function(require,module,exports){
arguments[4][137][0].apply(exports,arguments)
},{"./_stream_readable":158,"./_stream_writable":160,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"core-util-is":161,"inherits":56}],158:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/


/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;

/*<replacement>*/
if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

var Stream = require('stream');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var StringDecoder;

util.inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = false;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // In streams that never have any data, and do push(null) right away,
  // the consumer can miss the 'end' event if they do some I/O before
  // consuming the stream.  So, we don't emit('end') until some reading
  // happens.
  this.calledRead = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (typeof chunk === 'string' && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null || chunk === undefined) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      // update the buffer info.
      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront) {
        state.buffer.unshift(chunk);
      } else {
        state.reading = false;
        state.buffer.push(chunk);
      }

      if (state.needReadable)
        emitReadable(stream);

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (isNaN(n) || n === null) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  var state = this._readableState;
  state.calledRead = true;
  var nOrig = n;

  if (typeof n !== 'number' || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;

  // if we currently have less than the highWaterMark, then also read some
  if (state.length - n <= state.highWaterMark)
    doRead = true;

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading)
    doRead = false;

  if (doRead) {
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read called its callback synchronously, then `reading`
  // will be false, and we need to re-evaluate how much data we
  // can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we happened to read() exactly the remaining amount in the
  // buffer, and the EOF has been seen at this point, then make sure
  // that we emit 'end' on the very next tick.
  if (state.ended && !state.endEmitted && state.length === 0)
    endReadable(this);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode &&
      !er) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // if we've ended and we have some data left, then emit
  // 'readable' now to make sure it gets picked up.
  if (state.length > 0)
    emitReadable(stream);
  else
    endReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (state.emittedReadable)
    return;

  state.emittedReadable = true;
  if (state.sync)
    process.nextTick(function() {
      emitReadable_(stream);
    });
  else
    emitReadable_(stream);
}

function emitReadable_(stream) {
  stream.emit('readable');
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    if (readable !== src) return;
    cleanup();
  }

  function onend() {
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (!dest._writableState || dest._writableState.needDrain)
      ondrain();
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error)
    dest.on('error', onerror);
  else if (isArray(dest._events.error))
    dest._events.error.unshift(onerror);
  else
    dest._events.error = [onerror, dest._events.error];



  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    // the handler that waits for readable events after all
    // the data gets sucked out in flow.
    // This would be easier to follow with a .once() handler
    // in flow(), but that is too slow.
    this.on('readable', pipeOnReadable);

    state.flowing = true;
    process.nextTick(function() {
      flow(src);
    });
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var dest = this;
    var state = src._readableState;
    state.awaitDrain--;
    if (state.awaitDrain === 0)
      flow(src);
  };
}

function flow(src) {
  var state = src._readableState;
  var chunk;
  state.awaitDrain = 0;

  function write(dest, i, list) {
    var written = dest.write(chunk);
    if (false === written) {
      state.awaitDrain++;
    }
  }

  while (state.pipesCount && null !== (chunk = src.read())) {

    if (state.pipesCount === 1)
      write(state.pipes, 0, null);
    else
      forEach(state.pipes, write);

    src.emit('data', chunk);

    // if anyone needs a drain, then we have to wait for that.
    if (state.awaitDrain > 0)
      return;
  }

  // if every destination was unpiped, either before entering this
  // function, or in the while loop, then stop flowing.
  //
  // NB: This is a pretty rare edge case.
  if (state.pipesCount === 0) {
    state.flowing = false;

    // if there were data event listeners added, then switch to old mode.
    if (EE.listenerCount(src, 'data') > 0)
      emitDataEvents(src);
    return;
  }

  // at this point, no one needed a drain, so we just ran out of data
  // on the next readable event, start it over again.
  state.ranOut = true;
}

function pipeOnReadable() {
  if (this._readableState.ranOut) {
    this._readableState.ranOut = false;
    flow(this);
  }
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data' && !this._readableState.flowing)
    emitDataEvents(this);

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        this.read(0);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  emitDataEvents(this);
  this.read(0);
  this.emit('resume');
};

Readable.prototype.pause = function() {
  emitDataEvents(this, true);
  this.emit('pause');
};

function emitDataEvents(stream, startPaused) {
  var state = stream._readableState;

  if (state.flowing) {
    // https://github.com/isaacs/readable-stream/issues/16
    throw new Error('Cannot switch to old mode now.');
  }

  var paused = startPaused || false;
  var readable = false;

  // convert to an old-style stream.
  stream.readable = true;
  stream.pipe = Stream.prototype.pipe;
  stream.on = stream.addListener = Stream.prototype.on;

  stream.on('readable', function() {
    readable = true;

    var c;
    while (!paused && (null !== (c = stream.read())))
      stream.emit('data', c);

    if (c === null) {
      readable = false;
      stream._readableState.needReadable = true;
    }
  });

  stream.pause = function() {
    paused = true;
    this.emit('pause');
  };

  stream.resume = function() {
    paused = false;
    if (readable)
      process.nextTick(function() {
        stream.emit('readable');
      });
    else
      this.read(0);
    this.emit('resume');
  };

  // now make it start, just in case it hadn't already.
  stream.emit('readable');
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    if (!chunk || !state.objectMode && !chunk.length)
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (typeof stream[i] === 'function' &&
        typeof this[i] === 'undefined') {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted && state.calledRead) {
    state.ended = true;
    process.nextTick(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171,"core-util-is":161,"events":174,"inherits":56,"isarray":162,"stream":183,"string_decoder/":163}],159:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined)
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  var ts = this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('finish', function() {
    if ('function' === typeof this._flush)
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var rs = stream._readableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./_stream_duplex":157,"core-util-is":161,"inherits":56}],160:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/


var Stream = require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
}

function Writable(options) {
  var Duplex = require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  process.nextTick(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    process.nextTick(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (typeof cb !== 'function')
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb))
    ret = writeOrBuffer(this, state, chunk, encoding, cb);

  return ret;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;

  if (state.writing)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    process.nextTick(function() {
      cb(er);
    });
  else
    cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished && !state.bufferProcessing && state.buffer.length)
      clearBuffer(stream, state);

    if (sync) {
      process.nextTick(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  cb();
  if (finished)
    finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  for (var c = 0; c < state.buffer.length; c++) {
    var entry = state.buffer[c];
    var chunk = entry.chunk;
    var encoding = entry.encoding;
    var cb = entry.callback;
    var len = state.objectMode ? 1 : chunk.length;

    doWrite(stream, state, len, chunk, encoding, cb);

    // if we didn't call the onwrite immediately, then
    // it means that we need to wait until it does.
    // also, that means that the chunk and cb are currently
    // being processed, so move the buffer counter past them.
    if (state.writing) {
      c++;
      break;
    }
  }

  state.bufferProcessing = false;
  if (c < state.buffer.length)
    state.buffer = state.buffer.slice(c);
  else
    state.buffer.length = 0;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (typeof chunk !== 'undefined' && chunk !== null)
    this.write(chunk, encoding);

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    state.finished = true;
    stream.emit('finish');
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./_stream_duplex":157,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171,"core-util-is":161,"inherits":56,"stream":183}],161:[function(require,module,exports){
module.exports=require(142)
},{"buffer":171}],162:[function(require,module,exports){
module.exports=require(143)
},{}],163:[function(require,module,exports){
module.exports=require(144)
},{"buffer":171}],164:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":159}],165:[function(require,module,exports){
module.exports=require(19)
},{}],166:[function(require,module,exports){
var Transform = require('readable-stream/transform')
  , inherits  = require('util').inherits
  , xtend     = require('xtend')


// a noop _transform function
function noop (chunk, enc, callback) {
  callback(null, chunk)
}


// create a new export function, used by both the main export and
// the .ctor export, contains common logic for dealing with arguments
function through2 (construct) {
  return function (options, transform, flush) {
    if (typeof options == 'function') {
      flush     = transform
      transform = options
      options   = {}
    }

    if (typeof transform != 'function')
      transform = noop

    if (typeof flush != 'function')
      flush = null

    return construct(options, transform, flush)
  }
}


// main export, just make me a transform stream!
module.exports = through2(function (options, transform, flush) {
  var t2 = new Transform(options)

  t2._transform = transform

  if (flush)
    t2._flush = flush

  return t2
})


// make me a reusable prototype that I can `new`, or implicitly `new`
// with a constructor call
module.exports.ctor = through2(function (options, transform, flush) {
  function Through2 (override) {
    if (!(this instanceof Through2))
      return new Through2(override)

    this.options = xtend(options, override)

    Transform.call(this, this.options)
  }

  inherits(Through2, Transform)

  Through2.prototype._transform = transform

  if (flush)
    Through2.prototype._flush = flush

  return Through2
})


module.exports.obj = through2(function (options, transform, flush) {
  var t2 = new Transform(xtend({ objectMode: true, highWaterMark: 16 }, options))

  t2._transform = transform

  if (flush)
    t2._flush = flush

  return t2
})

},{"readable-stream/transform":164,"util":192,"xtend":165}],167:[function(require,module,exports){
(function (process,Buffer){
var tape   = require('tape')
var leveljs = require('../')
var testCommon = require('./testCommon')

var testBuffer = new Buffer('foo')

/*** compatibility with basic LevelDOWN API ***/
function test(testCommon) {
  require('abstract-leveldown/abstract/leveldown-test').args(leveljs, tape, testCommon);
  require('abstract-leveldown/abstract/open-test').open(leveljs, tape, testCommon);
  require('abstract-leveldown/abstract/put-test').all(leveljs, tape, testCommon);
  require('abstract-leveldown/abstract/del-test').all(leveljs, tape, testCommon);
  require('abstract-leveldown/abstract/get-test').all(leveljs, tape, testCommon);
  require('abstract-leveldown/abstract/put-get-del-test').all(leveljs, tape, testCommon, testBuffer);
  require('abstract-leveldown/abstract/batch-test').all(leveljs, tape, testCommon)
  require('abstract-leveldown/abstract/chained-batch-test').all(leveljs, tape, testCommon)
  require('abstract-leveldown/abstract/close-test').close(leveljs, tape, testCommon);
  require('abstract-leveldown/abstract/iterator-test').all(leveljs, tape, testCommon)
  require('abstract-leveldown/abstract/ranges-test').all(leveljs, tape, testCommon)
}
if (process.env.DB === 'postgres') {
  test(testCommon('postgres://localhost/sqldown?table=_leveldown_test_db_'));
}  else if (process.env.DB === 'mysql') {
    test(testCommon('mysql://travis:@localhost/sqldown?table=_leveldown_test_db_'));
} else {
    test(testCommon('_leveldown_test_db_'));
}
}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),require("buffer").Buffer)
},{"../":1,"./testCommon":168,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"abstract-leveldown/abstract/batch-test":7,"abstract-leveldown/abstract/chained-batch-test":8,"abstract-leveldown/abstract/close-test":9,"abstract-leveldown/abstract/del-test":10,"abstract-leveldown/abstract/get-test":11,"abstract-leveldown/abstract/iterator-test":12,"abstract-leveldown/abstract/leveldown-test":13,"abstract-leveldown/abstract/open-test":14,"abstract-leveldown/abstract/put-get-del-test":15,"abstract-leveldown/abstract/put-test":16,"abstract-leveldown/abstract/ranges-test":17,"buffer":171,"tape":146}],168:[function(require,module,exports){
(function (process){
module.exports = function (root) {
  var dbidx = 0
    , leveljs = require('../')
    , location = function () {
        return root + dbidx++
      }

    , lastLocation = function () {
        return root + dbidx
      }

    , cleanup = function (callback) {
        var list = []
        if (dbidx === 0) return callback()
        for (var i = 0; i < dbidx; i++) {
          list.push(root + i)
        }
        
        function destroy() {
          if (list.length === 0) return callback()
          var f = list.pop()
          leveljs.destroy(f, destroy)
        }
        
        destroy()
      }

    , setUp = function (t) {
        cleanup(function (err) {
          t.notOk(err, 'cleanup returned an error')
          t.end()
        })
      }

    , tearDown = function (t) {
        setUp(t) // same cleanup!
      }

    , collectEntries = function (iterator, callback) {
        var data = []
          , next = function () {
              iterator.next(function (err, key, value) {
                if (err) return callback(err)
                if (!arguments.length) {
                  return iterator.end(function (err) {
                    callback(err, data)
                  })
                }
                data.push({ key: key, value: value })
                process.nextTick(next)
              })
            }
        next()
      }

    , makeExistingDbTest = function (name, test, leveldown, testFn) {
        test(name, function (t) {
          cleanup(function () {
            var loc  = location()
              , db   = leveldown(loc)
              , done = function (close) {
                  if (close === false)
                    return cleanup(t.end.bind(t))
                  db.close(function (err) {
                    t.notOk(err, 'no error from close()')
                    cleanup(t.end.bind(t))
                  })
                }
            db.open(function (err) {
             t.notOk(err, 'no error from open()')
              db.batch(
                  [
                      { type: 'put', key: 'one', value: '1' }
                    , { type: 'put', key: 'two', value: '2' }
                    , { type: 'put', key: 'three', value: '3' }
                  ]
                , function (err) {
                    t.notOk(err, 'no error from batch()')
                    testFn(db, t, done, loc)
                  }
              )
            })
          })
        })
      }

  return {
      location       : location
    , cleanup        : cleanup
    , lastLocation   : lastLocation
    , setUp          : setUp
    , tearDown       : tearDown
    , collectEntries : collectEntries
    , makeExistingDbTest : makeExistingDbTest
  }
};
}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"../":1,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],169:[function(require,module,exports){

},{}],170:[function(require,module,exports){
module.exports=require(169)
},{}],171:[function(require,module,exports){
/**
 * The buffer module from node.js, for the browser.
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install buffer`
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = Buffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192

/**
 * If `Buffer._useTypedArrays`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (compatible down to IE6)
 */
Buffer._useTypedArrays = (function () {
   // Detect if browser supports Typed Arrays. Supported browsers are IE 10+,
   // Firefox 4+, Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+.
  if (typeof Uint8Array !== 'function' || typeof ArrayBuffer !== 'function')
    return false

  // Does the browser support adding properties to `Uint8Array` instances? If
  // not, then that's the same as no `Uint8Array` support. We need to be able to
  // add all the node Buffer API methods.
  // Bug in Firefox 4-29, now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438
  try {
    var arr = new Uint8Array(0)
    arr.foo = function () { return 42 }
    return 42 === arr.foo() &&
        typeof arr.subarray === 'function' // Chrome 9-10 lack `subarray`
  } catch (e) {
    return false
  }
})()

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (subject, encoding, noZero) {
  if (!(this instanceof Buffer))
    return new Buffer(subject, encoding, noZero)

  var type = typeof subject

  // Workaround: node's base64 implementation allows for non-padded strings
  // while base64-js does not.
  if (encoding === 'base64' && type === 'string') {
    subject = stringtrim(subject)
    while (subject.length % 4 !== 0) {
      subject = subject + '='
    }
  }

  // Find the length
  var length
  if (type === 'number')
    length = coerce(subject)
  else if (type === 'string')
    length = Buffer.byteLength(subject, encoding)
  else if (type === 'object')
    length = coerce(subject.length) // Assume object is an array
  else
    throw new Error('First argument needs to be a number, array or string.')

  var buf
  if (Buffer._useTypedArrays) {
    // Preferred: Return an augmented `Uint8Array` instance for best performance
    buf = augment(new Uint8Array(length))
  } else {
    // Fallback: Return THIS instance of Buffer (created by `new`)
    buf = this
    buf.length = length
    buf._isBuffer = true
  }

  var i
  if (Buffer._useTypedArrays && typeof Uint8Array === 'function' &&
      subject instanceof Uint8Array) {
    // Speed optimization -- use set if we're copying from a Uint8Array
    buf._set(subject)
  } else if (isArrayish(subject)) {
    // Treat array-ish objects as a byte array
    for (i = 0; i < length; i++) {
      if (Buffer.isBuffer(subject))
        buf[i] = subject.readUInt8(i)
      else
        buf[i] = subject[i]
    }
  } else if (type === 'string') {
    buf.write(subject, 0, encoding)
  } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {
    for (i = 0; i < length; i++) {
      buf[i] = 0
    }
  }

  return buf
}

// STATIC METHODS
// ==============

Buffer.isEncoding = function (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.isBuffer = function (b) {
  return !!(b !== null && b !== undefined && b._isBuffer)
}

Buffer.byteLength = function (str, encoding) {
  var ret
  str = str + ''
  switch (encoding || 'utf8') {
    case 'hex':
      ret = str.length / 2
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8ToBytes(str).length
      break
    case 'ascii':
    case 'binary':
    case 'raw':
      ret = str.length
      break
    case 'base64':
      ret = base64ToBytes(str).length
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = str.length * 2
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.concat = function (list, totalLength) {
  assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\n' +
      'list should be an Array.')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (typeof totalLength !== 'number') {
    totalLength = 0
    for (i = 0; i < list.length; i++) {
      totalLength += list[i].length
    }
  }

  var buf = new Buffer(totalLength)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

// BUFFER INSTANCE METHODS
// =======================

function _hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  assert(strLen % 2 === 0, 'Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var byte = parseInt(string.substr(i * 2, 2), 16)
    assert(!isNaN(byte), 'Invalid hex string')
    buf[offset + i] = byte
  }
  Buffer._charsWritten = i * 2
  return i
}

function _utf8Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(utf8ToBytes(string), buf, offset, length)
  return charsWritten
}

function _asciiWrite (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(asciiToBytes(string), buf, offset, length)
  return charsWritten
}

function _binaryWrite (buf, string, offset, length) {
  return _asciiWrite(buf, string, offset, length)
}

function _base64Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(base64ToBytes(string), buf, offset, length)
  return charsWritten
}

function _utf16leWrite (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(utf16leToBytes(string), buf, offset, length)
  return charsWritten
}

Buffer.prototype.write = function (string, offset, length, encoding) {
  // Support both (string, offset, length, encoding)
  // and the legacy (string, encoding, offset, length)
  if (isFinite(offset)) {
    if (!isFinite(length)) {
      encoding = length
      length = undefined
    }
  } else {  // legacy
    var swap = encoding
    encoding = offset
    offset = length
    length = swap
  }

  offset = Number(offset) || 0
  var remaining = this.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }
  encoding = String(encoding || 'utf8').toLowerCase()

  var ret
  switch (encoding) {
    case 'hex':
      ret = _hexWrite(this, string, offset, length)
      break
    case 'utf8':
    case 'utf-8':
      ret = _utf8Write(this, string, offset, length)
      break
    case 'ascii':
      ret = _asciiWrite(this, string, offset, length)
      break
    case 'binary':
      ret = _binaryWrite(this, string, offset, length)
      break
    case 'base64':
      ret = _base64Write(this, string, offset, length)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = _utf16leWrite(this, string, offset, length)
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.prototype.toString = function (encoding, start, end) {
  var self = this

  encoding = String(encoding || 'utf8').toLowerCase()
  start = Number(start) || 0
  end = (end !== undefined)
    ? Number(end)
    : end = self.length

  // Fastpath empty strings
  if (end === start)
    return ''

  var ret
  switch (encoding) {
    case 'hex':
      ret = _hexSlice(self, start, end)
      break
    case 'utf8':
    case 'utf-8':
      ret = _utf8Slice(self, start, end)
      break
    case 'ascii':
      ret = _asciiSlice(self, start, end)
      break
    case 'binary':
      ret = _binarySlice(self, start, end)
      break
    case 'base64':
      ret = _base64Slice(self, start, end)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = _utf16leSlice(self, start, end)
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.prototype.toJSON = function () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function (target, target_start, start, end) {
  var source = this

  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (!target_start) target_start = 0

  // Copy 0 bytes; we're done
  if (end === start) return
  if (target.length === 0 || source.length === 0) return

  // Fatal error conditions
  assert(end >= start, 'sourceEnd < sourceStart')
  assert(target_start >= 0 && target_start < target.length,
      'targetStart out of bounds')
  assert(start >= 0 && start < source.length, 'sourceStart out of bounds')
  assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length)
    end = this.length
  if (target.length - target_start < end - start)
    end = target.length - target_start + start

  // copy!
  for (var i = 0; i < end - start; i++)
    target[i + target_start] = this[i + start]
}

function _base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function _utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function _asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++)
    ret += String.fromCharCode(buf[i])
  return ret
}

function _binarySlice (buf, start, end) {
  return _asciiSlice(buf, start, end)
}

function _hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function _utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i+1] * 256)
  }
  return res
}

Buffer.prototype.slice = function (start, end) {
  var len = this.length
  start = clamp(start, len, 0)
  end = clamp(end, len, len)

  if (Buffer._useTypedArrays) {
    return augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    var newBuf = new Buffer(sliceLen, undefined, true)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
    return newBuf
  }
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

Buffer.prototype.readUInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  return this[offset]
}

function _readUInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    val = buf[offset]
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
  } else {
    val = buf[offset] << 8
    if (offset + 1 < len)
      val |= buf[offset + 1]
  }
  return val
}

Buffer.prototype.readUInt16LE = function (offset, noAssert) {
  return _readUInt16(this, offset, true, noAssert)
}

Buffer.prototype.readUInt16BE = function (offset, noAssert) {
  return _readUInt16(this, offset, false, noAssert)
}

function _readUInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    if (offset + 2 < len)
      val = buf[offset + 2] << 16
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
    val |= buf[offset]
    if (offset + 3 < len)
      val = val + (buf[offset + 3] << 24 >>> 0)
  } else {
    if (offset + 1 < len)
      val = buf[offset + 1] << 16
    if (offset + 2 < len)
      val |= buf[offset + 2] << 8
    if (offset + 3 < len)
      val |= buf[offset + 3]
    val = val + (buf[offset] << 24 >>> 0)
  }
  return val
}

Buffer.prototype.readUInt32LE = function (offset, noAssert) {
  return _readUInt32(this, offset, true, noAssert)
}

Buffer.prototype.readUInt32BE = function (offset, noAssert) {
  return _readUInt32(this, offset, false, noAssert)
}

Buffer.prototype.readInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null,
        'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  var neg = this[offset] & 0x80
  if (neg)
    return (0xff - this[offset] + 1) * -1
  else
    return this[offset]
}

function _readInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt16(buf, offset, littleEndian, true)
  var neg = val & 0x8000
  if (neg)
    return (0xffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt16LE = function (offset, noAssert) {
  return _readInt16(this, offset, true, noAssert)
}

Buffer.prototype.readInt16BE = function (offset, noAssert) {
  return _readInt16(this, offset, false, noAssert)
}

function _readInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt32(buf, offset, littleEndian, true)
  var neg = val & 0x80000000
  if (neg)
    return (0xffffffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt32LE = function (offset, noAssert) {
  return _readInt32(this, offset, true, noAssert)
}

Buffer.prototype.readInt32BE = function (offset, noAssert) {
  return _readInt32(this, offset, false, noAssert)
}

function _readFloat (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 23, 4)
}

Buffer.prototype.readFloatLE = function (offset, noAssert) {
  return _readFloat(this, offset, true, noAssert)
}

Buffer.prototype.readFloatBE = function (offset, noAssert) {
  return _readFloat(this, offset, false, noAssert)
}

function _readDouble (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 7 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 52, 8)
}

Buffer.prototype.readDoubleLE = function (offset, noAssert) {
  return _readDouble(this, offset, true, noAssert)
}

Buffer.prototype.readDoubleBE = function (offset, noAssert) {
  return _readDouble(this, offset, false, noAssert)
}

Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'trying to write beyond buffer length')
    verifuint(value, 0xff)
  }

  if (offset >= this.length) return

  this[offset] = value
}

function _writeUInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {
    buf[offset + i] =
        (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
            (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, false, noAssert)
}

function _writeUInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffffffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {
    buf[offset + i] =
        (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, false, noAssert)
}

Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7f, -0x80)
  }

  if (offset >= this.length)
    return

  if (value >= 0)
    this.writeUInt8(value, offset, noAssert)
  else
    this.writeUInt8(0xff + value + 1, offset, noAssert)
}

function _writeInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fff, -0x8000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt16(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, false, noAssert)
}

function _writeInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fffffff, -0x80000000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt32(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, false, noAssert)
}

function _writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 23, 4)
}

Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, false, noAssert)
}

function _writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 7 < buf.length,
        'Trying to write beyond buffer length')
    verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 52, 8)
}

Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, false, noAssert)
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (typeof value === 'string') {
    value = value.charCodeAt(0)
  }

  assert(typeof value === 'number' && !isNaN(value), 'value is not a number')
  assert(end >= start, 'end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  assert(start >= 0 && start < this.length, 'start out of bounds')
  assert(end >= 0 && end <= this.length, 'end out of bounds')

  for (var i = start; i < end; i++) {
    this[i] = value
  }
}

Buffer.prototype.inspect = function () {
  var out = []
  var len = this.length
  for (var i = 0; i < len; i++) {
    out[i] = toHex(this[i])
    if (i === exports.INSPECT_MAX_BYTES) {
      out[i + 1] = '...'
      break
    }
  }
  return '<Buffer ' + out.join(' ') + '>'
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function () {
  if (typeof Uint8Array === 'function') {
    if (Buffer._useTypedArrays) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1)
        buf[i] = this[i]
      return buf.buffer
    }
  } else {
    throw new Error('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

var BP = Buffer.prototype

/**
 * Augment the Uint8Array *instance* (not the class!) with Buffer methods
 */
function augment (arr) {
  arr._isBuffer = true

  // save reference to original Uint8Array get/set methods before overwriting
  arr._get = arr.get
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

// slice(start, end)
function clamp (index, len, defaultValue) {
  if (typeof index !== 'number') return defaultValue
  index = ~~index;  // Coerce to integer.
  if (index >= len) return len
  if (index >= 0) return index
  index += len
  if (index >= 0) return index
  return 0
}

function coerce (length) {
  // Coerce length to a number (possibly NaN), round up
  // in case it's fractional (e.g. 123.456) then do a
  // double negate to coerce a NaN to 0. Easy, right?
  length = ~~Math.ceil(+length)
  return length < 0 ? 0 : length
}

function isArray (subject) {
  return (Array.isArray || function (subject) {
    return Object.prototype.toString.call(subject) === '[object Array]'
  })(subject)
}

function isArrayish (subject) {
  return isArray(subject) || Buffer.isBuffer(subject) ||
      subject && typeof subject === 'object' &&
      typeof subject.length === 'number'
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    var b = str.charCodeAt(i)
    if (b <= 0x7F)
      byteArray.push(str.charCodeAt(i))
    else {
      var start = i
      if (b >= 0xD800 && b <= 0xDFFF) i++
      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')
      for (var j = 0; j < h.length; j++)
        byteArray.push(parseInt(h[j], 16))
    }
  }
  return byteArray
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(str)
}

function blitBuffer (src, dst, offset, length) {
  var pos
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length))
      break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

/*
 * We have to make sure that the value is a valid integer. This means that it
 * is non-negative. It has no fractional component and that it does not
 * exceed the maximum allowed value.
 */
function verifuint (value, max) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value >= 0, 'specified a negative value for writing an unsigned value')
  assert(value <= max, 'value is larger than maximum value for type')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifsint (value, max, min) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifIEEE754 (value, max, min) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
}

function assert (test, message) {
  if (!test) throw new Error(message || 'Failed assertion')
}

},{"base64-js":172,"ieee754":173}],172:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var ZERO   = '0'.charCodeAt(0)
	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS)
			return 62 // '+'
		if (code === SLASH)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	module.exports.toByteArray = b64ToByteArray
	module.exports.fromByteArray = uint8ToBase64
}())

},{}],173:[function(require,module,exports){
exports.read = function(buffer, offset, isLE, mLen, nBytes) {
  var e, m,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      nBits = -7,
      i = isLE ? (nBytes - 1) : 0,
      d = isLE ? -1 : 1,
      s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity);
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),
      i = isLE ? 0 : (nBytes - 1),
      d = isLE ? 1 : -1,
      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);

  buffer[offset + i - d] |= s * 128;
};

},{}],174:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        throw TypeError('Uncaught, unspecified "error" event.');
      }
      return false;
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      console.trace();
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],175:[function(require,module,exports){
module.exports=require(56)
},{}],176:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],177:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176}],178:[function(require,module,exports){
(function (global){
/*! http://mths.be/punycode v1.2.4 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports;
	var freeModule = typeof module == 'object' && module &&
		module.exports == freeExports && module;
	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /\x2E|\u3002|\uFF0E|\uFF61/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		while (length--) {
			array[length] = fn(array[length]);
		}
		return array;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings.
	 * @private
	 * @param {String} domain The domain name.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		return map(string.split(regexSeparators), fn).join('.');
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <http://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * http://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols to a Punycode string of ASCII-only
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name to Unicode. Only the
	 * Punycoded parts of the domain name will be converted, i.e. it doesn't
	 * matter if you call it on a string that has already been converted to
	 * Unicode.
	 * @memberOf punycode
	 * @param {String} domain The Punycode domain name to convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(domain) {
		return mapDomain(domain, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name to Punycode. Only the
	 * non-ASCII parts of the domain name will be converted, i.e. it doesn't
	 * matter if you call it with a domain that's already in ASCII.
	 * @memberOf punycode
	 * @param {String} domain The domain name to convert, as a Unicode string.
	 * @returns {String} The Punycode representation of the given domain name.
	 */
	function toASCII(domain) {
		return mapDomain(domain, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.2.4',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <http://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && !freeExports.nodeType) {
		if (freeModule) { // in Node.js or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else { // in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else { // in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],179:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],180:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return obj[k].map(function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],181:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":179,"./encode":180}],182:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;
var inherits = require('inherits');
var setImmediate = require('process/browser.js').nextTick;
var Readable = require('./readable.js');
var Writable = require('./writable.js');

inherits(Duplex, Readable);

Duplex.prototype.write = Writable.prototype.write;
Duplex.prototype.end = Writable.prototype.end;
Duplex.prototype._write = Writable.prototype._write;

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  var self = this;
  setImmediate(function () {
    self.end();
  });
}

},{"./readable.js":186,"./writable.js":188,"inherits":175,"process/browser.js":184}],183:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('./readable.js');
Stream.Writable = require('./writable.js');
Stream.Duplex = require('./duplex.js');
Stream.Transform = require('./transform.js');
Stream.PassThrough = require('./passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"./duplex.js":182,"./passthrough.js":185,"./readable.js":186,"./transform.js":187,"./writable.js":188,"events":174,"inherits":175}],184:[function(require,module,exports){
module.exports=require(176)
},{}],185:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./transform.js');
var inherits = require('inherits');
inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./transform.js":187,"inherits":175}],186:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;
Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;
var Stream = require('./index.js');
var Buffer = require('buffer').Buffer;
var setImmediate = require('process/browser.js').nextTick;
var StringDecoder;

var inherits = require('inherits');
inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = false;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // In streams that never have any data, and do push(null) right away,
  // the consumer can miss the 'end' event if they do some I/O before
  // consuming the stream.  So, we don't emit('end') until some reading
  // happens.
  this.calledRead = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (typeof chunk === 'string' && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null || chunk === undefined) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      // update the buffer info.
      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront) {
        state.buffer.unshift(chunk);
      } else {
        state.reading = false;
        state.buffer.push(chunk);
      }

      if (state.needReadable)
        emitReadable(stream);

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (isNaN(n) || n === null) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  var state = this._readableState;
  state.calledRead = true;
  var nOrig = n;

  if (typeof n !== 'number' || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;

  // if we currently have less than the highWaterMark, then also read some
  if (state.length - n <= state.highWaterMark)
    doRead = true;

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading)
    doRead = false;

  if (doRead) {
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read called its callback synchronously, then `reading`
  // will be false, and we need to re-evaluate how much data we
  // can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we happened to read() exactly the remaining amount in the
  // buffer, and the EOF has been seen at this point, then make sure
  // that we emit 'end' on the very next tick.
  if (state.ended && !state.endEmitted && state.length === 0)
    endReadable(this);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode &&
      !er) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // if we've ended and we have some data left, then emit
  // 'readable' now to make sure it gets picked up.
  if (state.length > 0)
    emitReadable(stream);
  else
    endReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (state.emittedReadable)
    return;

  state.emittedReadable = true;
  if (state.sync)
    setImmediate(function() {
      emitReadable_(stream);
    });
  else
    emitReadable_(stream);
}

function emitReadable_(stream) {
  stream.emit('readable');
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    setImmediate(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    setImmediate(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    if (readable !== src) return;
    cleanup();
  }

  function onend() {
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (!dest._writableState || dest._writableState.needDrain)
      ondrain();
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  // check for listeners before emit removes one-time listeners.
  var errListeners = EE.listenerCount(dest, 'error');
  function onerror(er) {
    unpipe();
    if (errListeners === 0 && EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  dest.once('error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    // the handler that waits for readable events after all
    // the data gets sucked out in flow.
    // This would be easier to follow with a .once() handler
    // in flow(), but that is too slow.
    this.on('readable', pipeOnReadable);

    state.flowing = true;
    setImmediate(function() {
      flow(src);
    });
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var dest = this;
    var state = src._readableState;
    state.awaitDrain--;
    if (state.awaitDrain === 0)
      flow(src);
  };
}

function flow(src) {
  var state = src._readableState;
  var chunk;
  state.awaitDrain = 0;

  function write(dest, i, list) {
    var written = dest.write(chunk);
    if (false === written) {
      state.awaitDrain++;
    }
  }

  while (state.pipesCount && null !== (chunk = src.read())) {

    if (state.pipesCount === 1)
      write(state.pipes, 0, null);
    else
      forEach(state.pipes, write);

    src.emit('data', chunk);

    // if anyone needs a drain, then we have to wait for that.
    if (state.awaitDrain > 0)
      return;
  }

  // if every destination was unpiped, either before entering this
  // function, or in the while loop, then stop flowing.
  //
  // NB: This is a pretty rare edge case.
  if (state.pipesCount === 0) {
    state.flowing = false;

    // if there were data event listeners added, then switch to old mode.
    if (EE.listenerCount(src, 'data') > 0)
      emitDataEvents(src);
    return;
  }

  // at this point, no one needed a drain, so we just ran out of data
  // on the next readable event, start it over again.
  state.ranOut = true;
}

function pipeOnReadable() {
  if (this._readableState.ranOut) {
    this._readableState.ranOut = false;
    flow(this);
  }
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data' && !this._readableState.flowing)
    emitDataEvents(this);

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        this.read(0);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  emitDataEvents(this);
  this.read(0);
  this.emit('resume');
};

Readable.prototype.pause = function() {
  emitDataEvents(this, true);
  this.emit('pause');
};

function emitDataEvents(stream, startPaused) {
  var state = stream._readableState;

  if (state.flowing) {
    // https://github.com/isaacs/readable-stream/issues/16
    throw new Error('Cannot switch to old mode now.');
  }

  var paused = startPaused || false;
  var readable = false;

  // convert to an old-style stream.
  stream.readable = true;
  stream.pipe = Stream.prototype.pipe;
  stream.on = stream.addListener = Stream.prototype.on;

  stream.on('readable', function() {
    readable = true;

    var c;
    while (!paused && (null !== (c = stream.read())))
      stream.emit('data', c);

    if (c === null) {
      readable = false;
      stream._readableState.needReadable = true;
    }
  });

  stream.pause = function() {
    paused = true;
    this.emit('pause');
  };

  stream.resume = function() {
    paused = false;
    if (readable)
      setImmediate(function() {
        stream.emit('readable');
      });
    else
      this.read(0);
    this.emit('resume');
  };

  // now make it start, just in case it hadn't already.
  stream.emit('readable');
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    if (!chunk || !state.objectMode && !chunk.length)
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (typeof stream[i] === 'function' &&
        typeof this[i] === 'undefined') {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, function (x) {
      return self.emit.apply(self, ev, x);
    });
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted && state.calledRead) {
    state.ended = true;
    setImmediate(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"))
},{"./index.js":183,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"buffer":171,"events":174,"inherits":175,"process/browser.js":184,"string_decoder":189}],187:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./duplex.js');
var inherits = require('inherits');
inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined)
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  var ts = this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('finish', function() {
    if ('function' === typeof this._flush)
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (ts.writechunk && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var rs = stream._readableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./duplex.js":182,"inherits":175}],188:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;
Writable.WritableState = WritableState;

var isUint8Array = typeof Uint8Array !== 'undefined'
  ? function (x) { return x instanceof Uint8Array }
  : function (x) {
    return x && x.constructor && x.constructor.name === 'Uint8Array'
  }
;
var isArrayBuffer = typeof ArrayBuffer !== 'undefined'
  ? function (x) { return x instanceof ArrayBuffer }
  : function (x) {
    return x && x.constructor && x.constructor.name === 'ArrayBuffer'
  }
;

var inherits = require('inherits');
var Stream = require('./index.js');
var setImmediate = require('process/browser.js').nextTick;
var Buffer = require('buffer').Buffer;

inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];
}

function Writable(options) {
  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Stream.Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  setImmediate(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    setImmediate(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (!Buffer.isBuffer(chunk) && isUint8Array(chunk))
    chunk = new Buffer(chunk);
  if (isArrayBuffer(chunk) && typeof Uint8Array !== 'undefined')
    chunk = new Buffer(new Uint8Array(chunk));
  
  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (typeof cb !== 'function')
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb))
    ret = writeOrBuffer(this, state, chunk, encoding, cb);

  return ret;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  state.needDrain = !ret;

  if (state.writing)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    setImmediate(function() {
      cb(er);
    });
  else
    cb(er);

  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished && !state.bufferProcessing && state.buffer.length)
      clearBuffer(stream, state);

    if (sync) {
      setImmediate(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  cb();
  if (finished)
    finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  for (var c = 0; c < state.buffer.length; c++) {
    var entry = state.buffer[c];
    var chunk = entry.chunk;
    var encoding = entry.encoding;
    var cb = entry.callback;
    var len = state.objectMode ? 1 : chunk.length;

    doWrite(stream, state, len, chunk, encoding, cb);

    // if we didn't call the onwrite immediately, then
    // it means that we need to wait until it does.
    // also, that means that the chunk and cb are currently
    // being processed, so move the buffer counter past them.
    if (state.writing) {
      c++;
      break;
    }
  }

  state.bufferProcessing = false;
  if (c < state.buffer.length)
    state.buffer = state.buffer.slice(c);
  else
    state.buffer.length = 0;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (typeof chunk !== 'undefined' && chunk !== null)
    this.write(chunk, encoding);

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    state.finished = true;
    stream.emit('finish');
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      setImmediate(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

},{"./index.js":183,"buffer":171,"inherits":175,"process/browser.js":184}],189:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

function assertEncoding(encoding) {
  if (encoding && !Buffer.isEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  this.charBuffer = new Buffer(6);
  this.charReceived = 0;
  this.charLength = 0;
};


StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  var offset = 0;

  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var i = (buffer.length >= this.charLength - this.charReceived) ?
                this.charLength - this.charReceived :
                buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, offset, i);
    this.charReceived += (i - offset);
    offset = i;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (i == buffer.length) return charStr;

    // otherwise cut off the characters end from the beginning of this buffer
    buffer = buffer.slice(i, buffer.length);
    break;
  }

  var lenIncomplete = this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - lenIncomplete, end);
    this.charReceived = lenIncomplete;
    end -= lenIncomplete;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    this.charBuffer.write(charStr.charAt(charStr.length - 1), this.encoding);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }

  return i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 2;
  this.charLength = incomplete ? 2 : 0;
  return incomplete;
}

function base64DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 3;
  this.charLength = incomplete ? 3 : 0;
  return incomplete;
}

},{"buffer":171}],190:[function(require,module,exports){
/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/
(function () {
  "use strict";

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var punycode = require('punycode');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '~', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(delims),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#']
      .concat(unwise).concat(autoEscape),
    nonAuthChars = ['/', '@', '?', '#'].concat(delims),
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[a-zA-Z0-9][a-z0-9A-Z_-]{0,62}$/,
    hostnamePartStart = /^([a-zA-Z0-9][a-z0-9A-Z_-]{0,62})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always have a path component.
    pathedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && typeof(url) === 'object' && url.href) return url;

  if (typeof url !== 'string') {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  var out = {},
      rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    out.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      out.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    // don't enforce full RFC correctness, just be unstupid about it.

    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the first @ sign, unless some non-auth character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    var atSign = rest.indexOf('@');
    if (atSign !== -1) {
      var auth = rest.slice(0, atSign);

      // there *may be* an auth
      var hasAuth = true;
      for (var i = 0, l = nonAuthChars.length; i < l; i++) {
        if (auth.indexOf(nonAuthChars[i]) !== -1) {
          // not a valid auth.  Something like http://foo.com/bar@baz/
          hasAuth = false;
          break;
        }
      }

      if (hasAuth) {
        // pluck off the auth portion.
        out.auth = decodeURIComponent(auth);
        rest = rest.substr(atSign + 1);
      }
    }

    var firstNonHost = -1;
    for (var i = 0, l = nonHostChars.length; i < l; i++) {
      var index = rest.indexOf(nonHostChars[i]);
      if (index !== -1 &&
          (firstNonHost < 0 || index < firstNonHost)) firstNonHost = index;
    }

    if (firstNonHost !== -1) {
      out.host = rest.substr(0, firstNonHost);
      rest = rest.substr(firstNonHost);
    } else {
      out.host = rest;
      rest = '';
    }

    // pull out port.
    var p = parseHost(out.host);
    var keys = Object.keys(p);
    for (var i = 0, l = keys.length; i < l; i++) {
      var key = keys[i];
      out[key] = p[key];
    }

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    out.hostname = out.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = out.hostname[0] === '[' &&
        out.hostname[out.hostname.length - 1] === ']';

    // validate a little.
    if (out.hostname.length > hostnameMaxLen) {
      out.hostname = '';
    } else if (!ipv6Hostname) {
      var hostparts = out.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            out.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    // hostnames are always lower case.
    out.hostname = out.hostname.toLowerCase();

    if (!ipv6Hostname) {
      // IDNA Support: Returns a puny coded representation of "domain".
      // It only converts the part of the domain name that
      // has non ASCII characters. I.e. it dosent matter if
      // you call it with a domain that already is in ASCII.
      var domainArray = out.hostname.split('.');
      var newOut = [];
      for (var i = 0; i < domainArray.length; ++i) {
        var s = domainArray[i];
        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?
            'xn--' + punycode.encode(s) : s);
      }
      out.hostname = newOut.join('.');
    }

    out.host = (out.hostname || '') +
        ((out.port) ? ':' + out.port : '');
    out.href += out.host;

    // strip [ and ] from the hostname
    if (ipv6Hostname) {
      out.hostname = out.hostname.substr(1, out.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    out.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    out.search = rest.substr(qm);
    out.query = rest.substr(qm + 1);
    if (parseQueryString) {
      out.query = querystring.parse(out.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    out.search = '';
    out.query = {};
  }
  if (rest) out.pathname = rest;
  if (slashedProtocol[proto] &&
      out.hostname && !out.pathname) {
    out.pathname = '/';
  }

  //to support http.request
  if (out.pathname || out.search) {
    out.path = (out.pathname ? out.pathname : '') +
               (out.search ? out.search : '');
  }

  // finally, reconstruct the href based on what has been validated.
  out.href = urlFormat(out);
  return out;
}

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (typeof(obj) === 'string') obj = urlParse(obj);

  var auth = obj.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = obj.protocol || '',
      pathname = obj.pathname || '',
      hash = obj.hash || '',
      host = false,
      query = '';

  if (obj.host !== undefined) {
    host = auth + obj.host;
  } else if (obj.hostname !== undefined) {
    host = auth + (obj.hostname.indexOf(':') === -1 ?
        obj.hostname :
        '[' + obj.hostname + ']');
    if (obj.port) {
      host += ':' + obj.port;
    }
  }

  if (obj.query && typeof obj.query === 'object' &&
      Object.keys(obj.query).length) {
    query = querystring.stringify(obj.query);
  }

  var search = obj.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (obj.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  return protocol + host + pathname + search + hash;
}

function urlResolve(source, relative) {
  return urlFormat(urlResolveObject(source, relative));
}

function urlResolveObject(source, relative) {
  if (!source) return relative;

  source = urlParse(urlFormat(source), false, true);
  relative = urlParse(urlFormat(relative), false, true);

  // hash is always overridden, no matter what.
  source.hash = relative.hash;

  if (relative.href === '') {
    source.href = urlFormat(source);
    return source;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    relative.protocol = source.protocol;
    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[relative.protocol] &&
        relative.hostname && !relative.pathname) {
      relative.path = relative.pathname = '/';
    }
    relative.href = urlFormat(relative);
    return relative;
  }

  if (relative.protocol && relative.protocol !== source.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      relative.href = urlFormat(relative);
      return relative;
    }
    source.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      relative.pathname = relPath.join('/');
    }
    source.pathname = relative.pathname;
    source.search = relative.search;
    source.query = relative.query;
    source.host = relative.host || '';
    source.auth = relative.auth;
    source.hostname = relative.hostname || relative.host;
    source.port = relative.port;
    //to support http.request
    if (source.pathname !== undefined || source.search !== undefined) {
      source.path = (source.pathname ? source.pathname : '') +
                    (source.search ? source.search : '');
    }
    source.slashes = source.slashes || relative.slashes;
    source.href = urlFormat(source);
    return source;
  }

  var isSourceAbs = (source.pathname && source.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host !== undefined ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (source.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = source.pathname && source.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = source.protocol &&
          !slashedProtocol[source.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // source.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {

    delete source.hostname;
    delete source.port;
    if (source.host) {
      if (srcPath[0] === '') srcPath[0] = source.host;
      else srcPath.unshift(source.host);
    }
    delete source.host;
    if (relative.protocol) {
      delete relative.hostname;
      delete relative.port;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      delete relative.host;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    source.host = (relative.host || relative.host === '') ?
                      relative.host : source.host;
    source.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : source.hostname;
    source.search = relative.search;
    source.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    source.search = relative.search;
    source.query = relative.query;
  } else if ('search' in relative) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      source.hostname = source.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especialy happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = source.host && source.host.indexOf('@') > 0 ?
                       source.host.split('@') : false;
      if (authInHost) {
        source.auth = authInHost.shift();
        source.host = source.hostname = authInHost.shift();
      }
    }
    source.search = relative.search;
    source.query = relative.query;
    //to support http.request
    if (source.pathname !== undefined || source.search !== undefined) {
      source.path = (source.pathname ? source.pathname : '') +
                    (source.search ? source.search : '');
    }
    source.href = urlFormat(source);
    return source;
  }
  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    delete source.pathname;
    //to support http.request
    if (!source.search) {
      source.path = '/' + source.search;
    } else {
      delete source.path;
    }
    source.href = urlFormat(source);
    return source;
  }
  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (source.host || relative.host) && (last === '.' || last === '..') ||
      last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last == '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    source.hostname = source.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especialy happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = source.host && source.host.indexOf('@') > 0 ?
                     source.host.split('@') : false;
    if (authInHost) {
      source.auth = authInHost.shift();
      source.host = source.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (source.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  source.pathname = srcPath.join('/');
  //to support request.http
  if (source.pathname !== undefined || source.search !== undefined) {
    source.path = (source.pathname ? source.pathname : '') +
                  (source.search ? source.search : '');
  }
  source.auth = relative.auth || source.auth;
  source.slashes = source.slashes || relative.slashes;
  source.href = urlFormat(source);
  return source;
}

function parseHost(host) {
  var out = {};
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      out.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) out.hostname = host;
  return out;
}

}());

},{"punycode":178,"querystring":181}],191:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],192:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require("/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":191,"/usr/local/share/npm/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js":176,"inherits":175}]},{},[167])</script><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Adding Tooltips</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: #ddddff;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 500)
						.attr("height", 1500);



			d3.csv("CorruptionPerceptionsIndex2014.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.CPI_2014_Score, +b.CPI_2014_Score);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 8;
					})
					.attr("width", function(d) {
						return d.CPI_2014_Score * 5;
					})
					.attr("height", 6)
					.append("title")
					.text(function(d) {
						return d.Country + "'s CPI 2014 is " + d.CPI_2014_Score;
					});

			});


		</script>

	</body>
</html><link href="style.css" rel="stylesheet"></link>

# Let's make the Web prettier.

Markdown.css is better default styling for your Markdown files. It's heavily
inspired by the [Space](http://getspace.org) WordPress theme. This page is
itself a Markdown file using the `markdown.css` stylesheet. View the source
code [here](http://kevinburke.bitbucket.org/markdowncss/index.md).

### Sample File

View a sample file that implements most of the Markdown spec
[here](http://kevinburke.bitbucket.org/markdowncss/sample.html).

### Get Started

Just add the following line to the top of your `.markdown`
files:

    <link href="http://kevinburke.bitbucket.org/markdowncss/markdown.css" rel="stylesheet"></link>

##### Note:
    
For the markdown to parse correctly, you need to add the closing `<link>`
tag. This is not technically correct HTML, but it will parse in any browser.


### Contribute

Let's make the Web prettier. Add your own Markdown theme, or contribute to
mine, [here](http://bitbucket.org/kevinburke/markdowncss).<!DOCTYPE html>
<meta charset="utf-8">
<style>

.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.link {
  stroke: black;
  stroke-opacity: 0.5;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

var width = 960,
    height = 800;

var color = d3.scale.category20();

var force = d3.layout.force()
    .charge(-4000)
    .linkDistance(350)
    .size([width, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("raw.json", function(error, graph) {
  force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();

  var link = svg.selectAll(".link")
      .data(graph.links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return 10; });

  var circle = svg.append("g").selectAll(".node")
      .data(graph.nodes)
    .enter().append("rect")
      .attr("class", "node")
      .attr("width", function(d) {return d.size*75;})
      .attr("height", function(d) {return d.size*55;})
      .style("stroke","green")
      .style("stroke-width", function(d) {return d.size*5;})
      .style("fill", function(d) { return "black"; })
      .call(force.drag);
      
   var text = svg.append("g").selectAll(".text")
   .data(graph.nodes)
   .enter()
   .append("text")
   .attr("x",0)
   .attr("y",".31em")
   .text(function(d) {return d.name;})
   .style("fill","white")
   .style("font-family","helvetica")
   .style("font-size",function(d) {return d.size*15;})


  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    circle.attr("x", function(d) { return d.x-(d.size*10); })
        .attr("y", function(d) { return d.y-(d.size*10); });
        
        
    text.attr("x", function(d) { return d.x; })
        .attr("y", function(d) { return d.y+(d.size*10); });
        
  });
});

</script><html>
<head>
  <title>Multi-mark nodes</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
</head>
<style>
  svg {
    height: 500px;
    width: 500px;
    border: 1px solid gray;
  }
</style>
<body>

<div id="viz">
  <svg>
  </svg>
</div>
</body>
  <footer>
<script>

d3.csv("firm.csv",function(error,data) {createNetwork(data)});

function createNetwork(edgelist) {
  var nodeHash = {};
  var nodes = [];
  var edges = [];

  edgelist.forEach(function (edge) {
    if (!nodeHash[edge.source]) {
      nodeHash[edge.source] = {id: edge.source, label: edge.source};
      nodes.push(nodeHash[edge.source]);
    }
    if (!nodeHash[edge.target]) {
      nodeHash[edge.target] = {id: edge.target, label: edge.target};
      nodes.push(nodeHash[edge.target]);
    }
    if (edge.weight >= 5) {
      edges.push({source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});
    }
  });
  createForceNetwork(nodes, edges);
}

function createForceNetwork(nodes, edges) {

//create a network from an edgelist

  var force = d3.layout.force().nodes(nodes).links(edges)
  .size([500,500])
  .charge(-200)
  .on("tick", updateNetwork);

  d3.select("svg").selectAll("line")
  .data(edges)
  .enter()
  .append("line")
  .style("stroke-width", "1px")
  .style("stroke", "#996666");

  var nodeEnter = d3.select("svg").selectAll("g.node")
  .data(nodes)
  .enter()
  .append("g")
  .attr("class", "node")
  .call(force.drag());

  nodeEnter.append("circle")
  .attr("r", 5)
  .style("fill", "#CC9999");

  nodeEnter.append("text")
  .style("text-anchor", "middle")
  .attr("y", 15)
  .text(function (d) {return d.id})

  force.start();

  function updateNetwork() {
    d3.select("svg").selectAll("line")
    .attr("x1", function (d) {return d.source.x})
    .attr("y1", function (d) {return d.source.y})
    .attr("x2", function (d) {return d.target.x})
    .attr("y2", function (d) {return d.target.y});

    d3.select("svg").selectAll("g.node")
      .attr("transform", function (d) {return "translate(" + d.x + "," + d.y + ")"});

  }



}
</script>
  </footer>

</html>
<!DOCTYPE html>
<head>
  <style>
    .chart {
  margin-left: 42px;
}

.chart rect {
  fill: steelblue;
  stroke: white;
}

.chart text {
  fill: white;
  font: 10px sans-serif;
  text-anchor: end;
}

.graph-svg-component {
    background-color: darkslategray;
}
  </style>
</head>
<body>
    <div class="content">
    </div>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>
      var t = 1297110663,
    v = 70,
    data = d3.range(1).map(next);

function next() {

    
  return {
    time: ++t,
    color: (Math.random(1)*100>50),
    value: v = ~~Math.max(10, Math.min(90, v + 10 * (Math.random() - .5)))
  };
}
var h = 1000;
var y = d3.scale.linear()
    .domain([0, 100])
    .rangeRound([0, h]);

setInterval(function() {
  data.shift();
  data.push(next());
 redraw3();

}, 1500);

var chart3 = d3.select(".content")
  .append("svg:svg")
    .attr("class", "chart")
    .attr("width", 400)
    .attr("height", h).attr("class", "graph-svg-component");



redraw3();

function redraw3() {

  var rect = chart3.selectAll("g")
      .data(data, function(d) { return d.time; })
      .enter()
      .append("g");

  rect.append("svg:rect", "line")
      .attr("x", 0)
      .attr("y", 0)
      .style("fill",function(d){
          if(d.color) {return "steelblue"} else{ return "blue"}
      })
      .attr("width", 400)
  .attr("height", 30);
    
  rect.append("text")
  .attr("x",0)
  .attr("y",20)
  .text("bla")
   .attr("font-family", "sans-serif")
.attr("font-size", "20px")
            .attr("fill", "red");


chart3.selectAll("g").transition().duration(2000).attr("transform", "translate(0,300)").remove();
    
//chart3.selectAll("g").data(data, function(d) { return d.time;}).exit().remove()    


}
    </script>
    <body><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Setting Attribute Values from Data</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
			}

			svg {
				background-color: white;
				font-family: sans-serif;
			}

			h1 {font-size: 24px;
				margin: 0;

			}

			p {font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg{
				background-color: white;
			}

			rect:hover { fill:orange;
			}

			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering; crispEdges;
			}

				.axis text {
					font-family: sans-serif;
					font-size: 10px;
				}

				.y.axis path,
				.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1> WIC Participants by State </h>
		<p> The Special Supplemental Nutrition Program for Women, Infants, and Children (WIC) provides Federal grants to States for supplemental foods, health care referrals, and nutrition education for low-income pregnant, breastfeeding, and non-breastfeeding postpartum women, and to infants and children up to age five who are found to be at nutritional risk.</p>


		<script type="text/javascript">		

			var w = 700; //this creates a dymanic chart to re-size if you need to quickly. This is referenced below
			var h = 800;
			var padding = [20, 20, 30, 100] ;//top, right, bottom, left

			var widthScale = d3.scale.linear()
									.range([ 0, w - padding[1] - padding[3] ]);

			var heightScale = d3.scale.ordinal()
							.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);

			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient ("bottom");

			var yAxis = d3.svg.axis()
						.scale(heightScale)
						.orient("left");


			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)//added the variable from above "w" and "h" to keep chart dynamic 
						.attr("height", h);



			d3.csv("School Lunch Programs By State_2009-2012 CSV1.csv", function(data) {

				data.sort(function(a, b){
					return d3.descending(+a.WICParticipants, +b.WICParticipants);
					
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.WICParticipants;
				}) ]);

			heightScale.domain(data.map(function(d) { return d.State; } ));


				var rects = svg.selectAll("rect")
							.data(data)
							.enter()
							.append("rect");

				rects.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.State);
					})
					.attr("width", function(d) {
						return widthScale(d.WICParticipants);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill","lightseagreen")
					.append("title")
					.text(function(d) {
						return d.State + " has " + d.WICParticipants + " WIC Participants";
					});

					
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);



			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">

<style>
circle{
	fill: #eee;
	stroke: black;
}
.q{
	stroke: black;
	stroke-dasharray: 2 4 2 6;
}

.connection{
	stroke: black;
}

.check{
	stroke: black;
}

html{
	width: 960px;
	height: 500px;
}
</style>



<script src="/1wheel/raw/67b47524ed8ed829d021/d3-3.5.5.js"></script>
<script src="/1wheel/raw/67b47524ed8ed829d021/lodash-3.8.0.js"></script>
<script src='/1wheel/raw/1b6758978dc2d52d3a37/d3-jetpack.js'></script>
<script src='/1wheel/raw/1b6758978dc2d52d3a37/d3-starterkit.js'></script>
<script src='/1wheel/raw/5d32ecb8a54b42f53646/geometry.js'></script>

<script src='disjoint-sections.js'></script><!DOCTYPE html>
<html>
	<head>
        <meta charset="utf-8">
        <meta name="description" content="Word cloud treemap (flare)" />
        <title>Word cloud treemap (flare)</title>
		<link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://davidbau.com/encode/seedrandom-min.js"></script>
        <script src="http://d3js.org/d3.v3.min.js"></script>
	</head>
	<body>
        <svg height="500" width="960"></svg>
        <script src="index.js"></script>
	</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 100% }
  </style>
</head>

<body>
  
</body>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 100% }
  </style>
</head>

<body>
  <script>
	d3.select("body").append("p").text("New paragraph!");
  </script>
</body>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Orbit Layout Modes</title>
  <meta charset="utf-8" />
</head>
<style>

  #viz, svg {
    width: 100%;
    height: 100%;
  }

  text {
    pointer-events: none;
  }

  #buttons {
    position: fixed;
    top:0;
    left:0;
  }

  circle.ring {
    fill: none;
    stroke: black;
    stroke-width: 1px;
    stroke-opacity: .15;

  }
  
</style>
<script>


function makeViz() {

  d3.json("d3.json", function(data) {drawOrbit(data)});

}

function drawOrbit(_data) {

  var center = {};
  var recenter = false;


  for (var x=0;x<_data.children.length;x++) {
    _data.children[x].size = _data.children[x].children ? _data.children[x].children.length : 0;
  }

  _data.children.sort(function(a,b) {
        if (a.size > b.size) {
          return 1;
        }
        if (a.size < b.size) {
          return -1;
        }
        return 0;
  })


  sizeScale = d3.scale.linear().domain([0,1,5,10,20]).range([4,6,8,10,12]).clamp(true);
  colorScale = d3.scale.linear().domain([0,1,2,3,4]).range(["rgb(161,208,120)","rgb(247,148,72)","rgb(225,203,208)","rgb(174,223,228)","rgb(245,132,102)"]);

  planetColors = {Mercury: "gray", Venus: "#d6bb87", Earth: "#677188", Mars: "#7c5541", Jupiter: "#a36a3e", Saturn: "#e9ba85", Uranus: "#73cbf0", Neptune: "#6383d1"}


  orbit = d3.layout.orbit().size([800,800])
  .revolution(customRevolution)
  .orbitSize(function(d) {return d.depth >= 2 ? 6 : 4})
  .speed(.25)
  .mode([35,36,8,3,1])
  .nodes(_data);

  center = orbit.nodes()[0];

  d3.select("svg")
.append("g")
.attr("class", "viz")
.attr("transform", "translate(50,50)")
  .selectAll("g.node").data(orbit.nodes())
  .enter()
  .append("g")
  .attr("class", "node")
  .attr("transform", function(d) {return "translate(" +d.x +"," + d.y+")"})
  .on("mouseover", nodeOver)
  .on("click", recenter)

  d3.selectAll("g.node")
  .append("circle")
  .attr("class", "satellite")
  .attr("r", function(d) {return sizeScale(d.children ? d.children.length : 0)})
  .style("fill", function(d) {return colorScale(d.depth)})
  .style("stroke", "brown")
  .style("stroke-width", "1px")

  d3.selectAll("g.node").filter(function(d) {return d.depth == 1})
  .append("text")
  .text(function(d) {return d.depth == 0 ? "Sun" : d.key})
  .attr("y", 20)
  .style("text-anchor", "middle")

  d3.select("g.viz")
  .selectAll("circle.ring")
  .data(orbit.orbitalRings())
  .enter()
  .insert("circle", "g")
  .attr("class", "ring")
  .attr("r", function(d) {return d.r})
  .attr("cx", function(d) {return d.x})
  .attr("cy", function(d) {return d.y})

  orbit.on("tick", orbitTick);

  orbit.start();

  function orbitTick() {

    var newX = 200- center.x;
    var newY = 200 - center.y;

    d3.select("g.viz")
    .attr("transform", "scale("+(1 + (center.depth *.1)) +") translate(" + newX + "," + newY + ")")


    d3.selectAll("g.node")
      .attr("transform", function(d) {return "translate(" +d.x +"," + d.y+")"});

    d3.selectAll("circle.ring")
    .attr("cx", function(d) {return d.x})
    .attr("cy", function(d) {return d.y});

        d3.selectAll("line.visible")
        .attr("x1", function(p) {return p.source.x})
        .attr("x2", function(p) {return p.target.x})
        .attr("y1", function(p) {return p.source.y})
        .attr("y2", function(p) {return p.target.y})

  }

  function changeCenter() {
        recenter = false;
        orbit.stop();
    var newX = 200 - center.x;
    var newY = 200 - center.y;

    d3.select("g.viz")
    .transition()
    .duration(1000)
    .attr("transform", "scale("+(1 + (center.depth *.1)) +") translate(" + newX + "," + newY + ")")
    .each("end", function() {orbit.start()})

  }

  function customRevolution(d) 
  {
    if (d.name == "time") {
      return d.depth * .25;
    }
    if (d.name == "geo") {
      return -d.depth * .25;      
    }
    return d.depth
  }

  function nodeOver(d) {
    orbit.stop();

      center = d;
      changeCenter();

      d3.selectAll("text.sat").remove();

      d3.selectAll("line.visible").remove();

      if (d.children) {
        var lines = d.children.map(function(p) {return {source: d, target: p}})
        d3.select("g.viz").selectAll("line.visible")
        .data(lines)
        .enter()
        .insert("line", "g")
        .attr("x1", function(p) {return p.source.x})
        .attr("x2", function(p) {return p.target.x})
        .attr("y1", function(p) {return p.source.y})
        .attr("y2", function(p) {return p.target.y})
        .attr("class", "visible")
        .style("stroke", "rgb(73,106,154)")
        .style("stroke-width", 2)
      }

      if (d.parent) {

        d3.select("g.viz").selectAll("line.fake")
        .data([{source:d, target: d.parent}])
        .enter()
        .insert("line", "g")
        .attr("x1", function(p) {return p.source.x})
        .attr("x2", function(p) {return p.target.x})
        .attr("y1", function(p) {return p.source.y})
        .attr("y2", function(p) {return p.target.y})
        .attr("class", "visible")
        .style("stroke", "rgb(165,127,124)")
        .style("stroke-width", 3)
      }


      d3.selectAll("g.node")
      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})
      .append("text")
      .text(function(p) {return p.name})
      .style("text-anchor", "middle")
      .attr("y", 15)
      .attr("class", "sat")
      .style("fill", "none")
      .style("stroke", "white")
      .style("stroke-width", 3)
      .style("stroke-opacity", .7);

      d3.selectAll("g.node")
      .filter(function(p) {return p == d || p == d.parent || (d.children ? d.children.indexOf(p) > -1 : false)})
      .append("text")
      .text(function(p) {return p.name})
      .style("text-anchor", "middle")
      .attr("y", 15)
      .attr("class", "sat");

    d3.selectAll("g.node > circle").style("stroke", "brown").style("stroke-width", 1);    

    d3.select(this).select("circle").style("stroke", "black").style("stroke-width", 3);

  }


}

</script>
<body onload="makeViz()">
<div id="viz"><svg></svg><div id="buttons"></div></div>
<footer>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="d3.layout.orbit.js" charset="utf-8" type="text/javascript"></script>
</footer>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Bar Chart, Framed</title>
		<script type="text/javascript" src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<style type="text/css">
			
			body {
				margin: 0;
				background-color: white;
				font-family: sans-serif;
			}

			#container {
				width: 650px;
				margin-left: auto;
				margin-right: auto;
				margin-bottom: 50px;
				margin-top: 50px;
				padding-top: 20px;
				padding-left: 20px;
				padding-right: 0px;
				padding-bottom: 10px;
				background-color: white;
				box-shadow: 2px 2px 3px 3px #fcfcfc;
				border-width:1px;
 							}


		p {
				font-size: 14px;
				margin: 0px 0 0px 10px;
				}

			a:link {
				text-decoration: none;
				color: gray;
			}

			a:hover {
				text-decoration: underline;
			}

			a:visited {
				color: gray;
			}

			a:active {
				color: steelBlue;
			}

			svg {
				background-color: white;
			}

			g.bar  {
				cursor: pointer;
			}

			g.bar text {
				font-size: 13px;
				font-family: helvetica;
				font-weight: bold;
				text-anchor: start;
				opacity: 0;
			}

			g.bar:hover rect {
				fill: orange;
			}

			g.bar:hover text {
				opacity: 1;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			
			.x.axis text {
				font-family: helvetica;
				font-size: 11px;
			}

			.y.axis text {
				font-family: helvetica;
				font-size: 12px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<div id="container">

		</div>

		<script type="text/javascript">		


			var w = 600;
			var h = 475;
			var padding = [ 35, 10, 30, 160 ]; //Top, right, bottom, left



			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.15);



			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom")
							.tickFormat(function(d) { return d; })
							.ticks(6)
							.outerTickSize(0);

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");


			//Now SVG goes into #container instead of body
			var svg = d3.select("#container")
						.append("svg")
						.attr("width", w)
						.attr("height", h);


			d3.csv("20villes.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.catastrophes, +b.catastrophes);
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.catastrophes;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.département; } ));

				//Bind data to groups (not bars directly)
				var groups = svg.selectAll("g")
								.data(data)
								.enter()
								.append("g")
								.attr("class", "bar");

				//Add a rect to each group
				var rects = groups.append("rect")
					.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.département);
					})
					.attr("width", 0)
					.attr("height", heightScale.rangeBand())
					.attr("fill", "#0B74C7");

				//Add a text element to each group
				groups.append("text")
					.attr("x", 170)
					.attr("y", function(d) {
						return heightScale(d.département) + 14;
					})
					.text(function(d) {
						return d.catastrophes + " arrêtés depuis 1982" ;
					});

				rects.transition()
					.delay(function(d, i) {
						return i * 50;
					})
					.duration(2000)
					.attr("width", function(d) {
						return widthScale(d.catastrophes);
					})

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

				svg.append("text")
				.attr ("x", 30)
				.attr ("y", (padding[0] / 2))
				.style("font-size", "14px")
				.style("font-family", "Helvetica")
				.style("font-weight", "none")
				.style("font-style", "italic")
				.text("Nombre d’arrêtés de catastrophe naturelle par commune depuis 1982");

			});


		</script>
	</body>
</html><!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>California Rainfall</title>
  <style>
    .subunit-California {
      fill: #ddc;
      stroke: red; }

    .subunit {
      fill: none;
      stroke: #999;
      stroke-size: 1px; }

    .voronoi {
      fill: none;
      fill-opacity: 0.5;
      stroke: white;
      stroke-width: .5px; }
  </style>
</head>
<body>
  <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
  <script src="//d3js.org/d3.v3.min.js"></script>
  <script src="script.js"></script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Loading CSV Data with D3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>
	<body>

		<p>Not much to see here; try looking in the console!</p>

		<script type="text/javascript">		


			//Load in contents of CSV file
			d3.csv("betterlifeindex.csv", function(data) {

				//Now CSV contents have been transformed into
				//an array of JSON objects.

				//Log 'data' to the console, for verification.
				console.log(data);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>#KnightD3 - Exercise Module 4: Adding scales and axes</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			rect:hover {
				fill: orange;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1>Facebook Government Report</h1>

		<p>Top 25 countries around the world for data requests to Facebook in 2013. Source: <a href="https://govtrequests.facebook.com/" target="_blank">Facebook</a>, 2013</p>

		<script type="text/javascript">		


			var w = 700;
			var h = 600;
			var padding = [ 20, 10, 30, 120 ];  //Top, right, bottom, left



			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);



			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("FacebookGovRep.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.year2013, +b.year2013);
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.year2013;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.country; } ));

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.country);
					})
					.attr("width", function(d) {
						return widthScale(d.year2013);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill", "steelblue")
					.append("title")
					.text(function(d) {
						return d.year2013 + " " + d.country + "'s Government requests to Facebook";
					});

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">

</head>
<body style="background-color:white;">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 758 436" version="1.1">
  <metadata xmlns:gridsvg="http://www.stat.auckland.ac.nz/~paul/R/gridSVG/">
    <gridsvg:generator name="gridSVG" version="1.4-0" time="2015-03-26 12:58:03"></gridsvg:generator>
    <gridsvg:argument name="name" value=""></gridsvg:argument>
    <gridsvg:argument name="exportCoords" value="none"></gridsvg:argument>
    <gridsvg:argument name="exportMappings" value="none"></gridsvg:argument>
    <gridsvg:argument name="exportJS" value="none"></gridsvg:argument>
    <gridsvg:argument name="res" value="72"></gridsvg:argument>
    <gridsvg:argument name="prefix" value=""></gridsvg:argument>
    <gridsvg:argument name="addClasses" value="FALSE"></gridsvg:argument>
    <gridsvg:argument name="indent" value="TRUE"></gridsvg:argument>
    <gridsvg:argument name="htmlWrapper" value="FALSE"></gridsvg:argument>
    <gridsvg:argument name="usePaths" value="vpPaths"></gridsvg:argument>
    <gridsvg:argument name="uniqueNames" value="TRUE"></gridsvg:argument>
    <gridsvg:separator name="id.sep" value="."></gridsvg:separator>
    <gridsvg:separator name="gPath.sep" value="::"></gridsvg:separator>
    <gridsvg:separator name="vpPath.sep" value="::"></gridsvg:separator>
  </metadata>
  <g transform="translate(0, 436) scale(1, -1)">
    <g id="gridSVG" fill="rgb(255,255,255)" stroke="rgb(0,0,0)" stroke-dasharray="none" stroke-width="0.75" font-size="16" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" opacity="1" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
      <defs>
        <symbol id="gridSVG.pch15" viewBox="-5 -5 10 10" overflow="visible">
          <rect x="-3.75" y="-3.75" width="7.5" height="7.5"></rect>
        </symbol>
        <symbol id="gridSVG.pch16" viewBox="-5 -5 10 10" overflow="visible">
          <circle cx="0" cy="0" r="3.75"></circle>
        </symbol>
      </defs>
      <g id="layout.1">
        <g id="GRID.gTableParent.1855.1">
          <defs>
            <clipPath id="layout::background.1-6-6-1.1.clipPath">
              <rect x="0" y="132.13" width="758" height="171.74" fill="none" stroke="none"></rect>
            </clipPath>
          </defs>
          <g id="layout::background.1-6-6-1.1" clip-path="url(#layout::background.1-6-6-1.1.clipPath)"></g>
          <g id="layout::spacer.4-3-4-3.1"></g>
          <defs>
            <clipPath id="layout::panel.3-4-3-4.1.clipPath">
              <rect x="0" y="132.13" width="629.71" height="171.74" fill="none" stroke="none"></rect>
            </clipPath>
          </defs>
          <g id="layout::panel.3-4-3-4.1" clip-path="url(#layout::panel.3-4-3-4.1.clipPath)">
            <g id="panel.3-4-3-4.1">
              <g id="grill.gTree.1819.1"></g>
              <g id="geom_rect.rect.1808.1">
                <rect id="geom_rect.rect.1808.1.1" x="0" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.2" x="0" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.3" x="0" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.4" x="57.25" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.5" x="57.25" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.6" x="57.25" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.7" x="114.49" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.8" x="114.49" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.9" x="114.49" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.10" x="171.74" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.11" x="171.74" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.12" x="171.74" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.13" x="228.98" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.14" x="228.98" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.15" x="228.98" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.16" x="286.23" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.17" x="286.23" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.18" x="286.23" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.19" x="343.48" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.20" x="343.48" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.21" x="343.48" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.22" x="400.72" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.23" x="400.72" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.24" x="400.72" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.25" x="457.97" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.26" x="457.97" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.27" x="457.97" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.28" x="515.21" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.29" x="515.21" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.30" x="515.21" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.31" x="572.46" y="132.13" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.32" x="572.46" y="189.38" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
                <rect id="geom_rect.rect.1808.1.33" x="572.46" y="246.62" width="57.25" height="57.25" stroke="none" fill="none" stroke-width="17.01" stroke-dasharray="none" stroke-linecap="butt" stroke-opacity="0" fill-opacity="0"></rect>
              </g>
              <g id="geom_point.points.1810.1">
                <use id="geom_point.points.1810.1.1" xlink:href="#gridSVG.pch16" x="28.62" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.2" xlink:href="#gridSVG.pch16" x="28.62" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.3" xlink:href="#gridSVG.pch16" x="28.62" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.4" xlink:href="#gridSVG.pch16" x="85.87" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.5" xlink:href="#gridSVG.pch16" x="85.87" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.6" xlink:href="#gridSVG.pch16" x="85.87" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.7" xlink:href="#gridSVG.pch16" x="143.12" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.8" xlink:href="#gridSVG.pch16" x="143.12" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.9" xlink:href="#gridSVG.pch16" x="143.12" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.10" xlink:href="#gridSVG.pch16" x="200.36" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.11" xlink:href="#gridSVG.pch16" x="200.36" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.12" xlink:href="#gridSVG.pch16" x="200.36" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.13" xlink:href="#gridSVG.pch16" x="257.61" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.14" xlink:href="#gridSVG.pch16" x="257.61" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.15" xlink:href="#gridSVG.pch16" x="257.61" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.16" xlink:href="#gridSVG.pch16" x="314.85" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.17" xlink:href="#gridSVG.pch16" x="314.85" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.18" xlink:href="#gridSVG.pch16" x="314.85" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.19" xlink:href="#gridSVG.pch16" x="372.1" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.20" xlink:href="#gridSVG.pch16" x="372.1" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.21" xlink:href="#gridSVG.pch16" x="372.1" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.22" xlink:href="#gridSVG.pch16" x="429.35" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(150,150,150)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.23" xlink:href="#gridSVG.pch16" x="429.35" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(24,121,191)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.24" xlink:href="#gridSVG.pch16" x="429.35" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(0,155,218)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.25" xlink:href="#gridSVG.pch16" x="486.59" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(0,155,218)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.26" xlink:href="#gridSVG.pch16" x="486.59" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(0,155,218)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.27" xlink:href="#gridSVG.pch16" x="486.59" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(0,155,218)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.28" xlink:href="#gridSVG.pch16" x="543.84" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(0,155,218)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.29" xlink:href="#gridSVG.pch16" x="543.84" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(0,155,218)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.30" xlink:href="#gridSVG.pch16" x="543.84" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="rgb(0,155,218)" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="1"></use>
                <use id="geom_point.points.1810.1.31" xlink:href="#gridSVG.pch16" x="601.08" y="160.75" width="0" height="0" transform="translate(0,0)" stroke="none" fill="none" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="0"></use>
                <use id="geom_point.points.1810.1.32" xlink:href="#gridSVG.pch16" x="601.08" y="218" width="0" height="0" transform="translate(0,0)" stroke="none" fill="none" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="0"></use>
                <use id="geom_point.points.1810.1.33" xlink:href="#gridSVG.pch16" x="601.08" y="275.25" width="0" height="0" transform="translate(0,0)" stroke="none" fill="none" font-size="0" stroke-width="Inf" stroke-opacity="0" fill-opacity="0"></use>
              </g>
              <g id="GRID.text.1811.1">
                <g id="GRID.text.1811.1.1" transform="translate(28.62, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.1.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.1.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.1.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.2" transform="translate(28.62, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.2.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.2.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.2.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.3" transform="translate(28.62, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.3.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.3.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.3.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.4" transform="translate(85.87, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.4.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.4.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.4.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.5" transform="translate(85.87, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.5.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.5.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.5.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.6" transform="translate(85.87, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.6.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.6.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.6.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.7" transform="translate(143.12, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.7.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.7.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.7.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.8" transform="translate(143.12, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.8.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.8.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.8.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.9" transform="translate(143.12, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.9.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.9.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.9.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.10" transform="translate(200.36, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.10.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.10.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.10.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.11" transform="translate(200.36, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.11.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.11.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.11.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.12" transform="translate(200.36, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.12.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.12.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.12.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.13" transform="translate(257.61, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.13.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.13.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.13.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.14" transform="translate(257.61, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.14.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.14.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.14.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.15" transform="translate(257.61, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.15.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.15.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.15.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.16" transform="translate(314.85, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.16.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.16.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.16.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.17" transform="translate(314.85, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.17.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.17.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.17.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.18" transform="translate(314.85, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.18.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.18.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.18.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.19" transform="translate(372.1, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.19.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.19.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.19.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.20" transform="translate(372.1, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.20.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.20.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.20.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.21" transform="translate(372.1, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.21.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.21.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.21.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.22" transform="translate(429.35, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.22.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.22.text" text-anchor="middle" stroke="rgb(150,150,150)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(150,150,150)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.22.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.23" transform="translate(429.35, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.23.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.23.text" text-anchor="middle" stroke="rgb(24,121,191)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(24,121,191)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.23.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.24" transform="translate(429.35, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.24.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.24.text" text-anchor="middle" stroke="rgb(0,155,218)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,155,218)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.24.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.25" transform="translate(486.59, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.25.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.25.text" text-anchor="middle" stroke="rgb(0,155,218)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,155,218)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.25.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.26" transform="translate(486.59, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.26.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.26.text" text-anchor="middle" stroke="rgb(0,155,218)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,155,218)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.26.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.27" transform="translate(486.59, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.27.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.27.text" text-anchor="middle" stroke="rgb(0,155,218)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,155,218)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.27.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.28" transform="translate(543.84, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.28.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.28.text" text-anchor="middle" stroke="rgb(0,155,218)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,155,218)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.28.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.29" transform="translate(543.84, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.29.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.29.text" text-anchor="middle" stroke="rgb(0,155,218)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,155,218)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.29.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.30" transform="translate(543.84, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.30.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.30.text" text-anchor="middle" stroke="rgb(0,155,218)" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,155,218)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.30.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.31" transform="translate(601.08, 160.75)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.31.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.31.text" text-anchor="middle" stroke="none" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="none" stroke-opacity="0" fill-opacity="0" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.31.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.32" transform="translate(601.08, 218)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.32.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.32.text" text-anchor="middle" stroke="none" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="none" stroke-opacity="0" fill-opacity="0" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.32.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
                <g id="GRID.text.1811.1.33" transform="translate(601.08, 275.25)" stroke-width="0.1">
                  <g id="GRID.text.1811.1.33.scale" transform="scale(1, -1)">
                    <text x="0" y="0" id="GRID.text.1811.1.33.text" text-anchor="middle" stroke="none" font-size="34.02" font-family="FontAwesome, Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="none" stroke-opacity="0" fill-opacity="0" font-weight="normal" font-style="normal">
                      <tspan id="GRID.text.1811.1.33.tspan.1" dy="15" x="0"></tspan>
                    </text>
                  </g>
                </g>
              </g>
            </g>
          </g>
          <g id="layout::axis-l.3-3-3-3.1">
            <g id="layout::axis-l.3-3-3-3::GRID.VP.466.1">
              <g id="axis-l.3-3-3-3.1">
                <g id="layout::axis-l.3-3-3-3::GRID.VP.466::axis.1">
                  <g id="GRID.gTableParent.1902.1">
                    <g id="layout::axis-l.3-3-3-3::GRID.VP.466::axis::axis.1-1-1-1.1"></g>
                    <g id="layout::axis-l.3-3-3-3::GRID.VP.466::axis::axis.1-2-1-2.1"></g>
                  </g>
                </g>
              </g>
            </g>
          </g>
          <g id="layout::axis-b.4-4-4-4.1">
            <g id="layout::axis-b.4-4-4-4::GRID.VP.465.1">
              <g id="axis-b.4-4-4-4.1">
                <g id="layout::axis-b.4-4-4-4::GRID.VP.465::axis.1">
                  <g id="GRID.gTableParent.1903.1">
                    <g id="layout::axis-b.4-4-4-4::GRID.VP.465::axis::axis.1-1-1-1.1"></g>
                    <g id="layout::axis-b.4-4-4-4::GRID.VP.465::axis::axis.2-1-2-1.1"></g>
                  </g>
                </g>
              </g>
            </g>
          </g>
          <g id="layout::xlab.5-4-5-4.1">
            <g id="xlab.5-4-5-4.1">
              <g id="xlab.5-4-5-4.1.1" transform="translate(314.85, 132.13)" stroke-width="0.1">
                <g id="xlab.5-4-5-4.1.1.scale" transform="scale(1, -1)">
                  <text x="0" y="0" id="xlab.5-4-5-4.1.1.text" text-anchor="middle" font-size="10" stroke="rgb(0,0,0)" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,0,0)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                    <tspan id="xlab.5-4-5-4.1.1.tspan.1" dy="4" x="0"> </tspan>
                  </text>
                </g>
              </g>
            </g>
          </g>
          <g id="layout::ylab.3-2-3-2.1">
            <g id="ylab.3-2-3-2.1">
              <g id="ylab.3-2-3-2.1.1" transform="translate(0, 218)" stroke-width="0.1">
                <g id="ylab.3-2-3-2.1.1.scale" transform="scale(1, -1)">
                  <text x="0" y="0" id="ylab.3-2-3-2.1.1.text" transform="rotate(-90)" text-anchor="middle" font-size="12" stroke="rgb(0,0,0)" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,0,0)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                    <tspan id="ylab.3-2-3-2.1.1.tspan.1" dy="5" x="0"> </tspan>
                  </text>
                </g>
              </g>
            </g>
          </g>
          <g id="layout::guide-box.3-5-3-5.1">
            <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5.1">
              <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5.1">
                <g id="GRID.gTableChild.1908.1">
                  <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2.1">
                    <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2.1">
                      <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2.1">
                        <g id="GRID.gTableChild.1909.1">
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::background.1-6-7-1.1">
                            <g id="background.1-6-7-1.1">
                              <rect id="background.1-6-7-1.1.1" x="642.14" y="172.31" width="103.42" height="91.38" stroke-width="1.06" stroke="none" fill="none" stroke-dasharray="none" stroke-opacity="0" fill-opacity="0"></rect>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::title.2-5-2-2.1">
                            <g id="title.2-5-2-2.1">
                              <g id="title.2-5-2-2.1.1" transform="translate(646.39, 255.44)" stroke-width="0.1">
                                <g id="title.2-5-2-2.1.1.scale" transform="scale(1, -1)">
                                  <text x="0" y="0" id="title.2-5-2-2.1.1.text" text-anchor="start" font-size="9.6" stroke="rgb(0,0,0)" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,0,0)" stroke-opacity="1" fill-opacity="1" font-weight="bold" font-style="normal">
                                    <tspan id="title.2-5-2-2.1.1.tspan.1" dy="4" x="0"></tspan>
                                  </text>
                                </g>
                              </g>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::key-3-1-bg.4-2-4-2.1">
                            <g id="key-3-1-bg.4-2-4-2.1">
                              <rect id="key-3-1-bg.4-2-4-2.1.1" x="646.39" y="222.64" width="23.04" height="23.04" stroke-width="1.06" stroke="none" fill="rgb(255,255,255)" stroke-dasharray="none" stroke-opacity="0" fill-opacity="1"></rect>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::key-3-1-1.4-2-4-2.1">
                            <g id="key-3-1-1.4-2-4-2.1">
                              <use id="key-3-1-1.4-2-4-2.1.1" xlink:href="#gridSVG.pch15" x="657.91" y="234.16" width="19.84" height="19.84" transform="translate(-9.92,-9.92)" stroke="none" fill="rgb(150,150,150)" font-size="19.84" stroke-width="0.38" stroke-opacity="0" fill-opacity="1"></use>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::key-4-1-bg.5-2-5-2.1">
                            <g id="key-4-1-bg.5-2-5-2.1">
                              <rect id="key-4-1-bg.5-2-5-2.1.1" x="646.39" y="199.6" width="23.04" height="23.04" stroke-width="1.06" stroke="none" fill="rgb(255,255,255)" stroke-dasharray="none" stroke-opacity="0" fill-opacity="1"></rect>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::key-4-1-1.5-2-5-2.1">
                            <g id="key-4-1-1.5-2-5-2.1">
                              <use id="key-4-1-1.5-2-5-2.1.1" xlink:href="#gridSVG.pch15" x="657.91" y="211.12" width="19.84" height="19.84" transform="translate(-9.92,-9.92)" stroke="none" fill="rgb(24,121,191)" font-size="19.84" stroke-width="0.38" stroke-opacity="0" fill-opacity="1"></use>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::key-5-1-bg.6-2-6-2.1">
                            <g id="key-5-1-bg.6-2-6-2.1">
                              <rect id="key-5-1-bg.6-2-6-2.1.1" x="646.39" y="176.56" width="23.04" height="23.04" stroke-width="1.06" stroke="none" fill="rgb(255,255,255)" stroke-dasharray="none" stroke-opacity="0" fill-opacity="1"></rect>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::key-5-1-1.6-2-6-2.1">
                            <g id="key-5-1-1.6-2-6-2.1">
                              <use id="key-5-1-1.6-2-6-2.1.1" xlink:href="#gridSVG.pch15" x="657.91" y="188.08" width="19.84" height="19.84" transform="translate(-9.92,-9.92)" stroke="none" fill="rgb(0,155,218)" font-size="19.84" stroke-width="0.38" stroke-opacity="0" fill-opacity="1"></use>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::label-3-3.4-4-4-4.1">
                            <g id="label-3-3.4-4-4-4.1">
                              <g id="label-3-3.4-4-4-4.1.1" transform="translate(672.31, 234.16)" stroke-width="0.1">
                                <g id="label-3-3.4-4-4-4.1.1.scale" transform="scale(1, -1)">
                                  <text x="0" y="0" id="label-3-3.4-4-4-4.1.1.text" text-anchor="start" font-size="9.6" stroke="rgb(0,0,0)" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,0,0)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                                    <tspan id="label-3-3.4-4-4-4.1.1.tspan.1" dy="-7.52" x="0">Un-breached</tspan>
                                    <tspan id="label-3-3.4-4-4-4.1.1.tspan.2" dy="23.04" x="0">US Population</tspan>
                                  </text>
                                </g>
                              </g>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::label-4-3.5-4-5-4.1">
                            <g id="label-4-3.5-4-5-4.1">
                              <g id="label-4-3.5-4-5-4.1.1" transform="translate(672.31, 211.12)" stroke-width="0.1">
                                <g id="label-4-3.5-4-5-4.1.1.scale" transform="scale(1, -1)">
                                  <text x="0" y="0" id="label-4-3.5-4-5-4.1.1.text" text-anchor="start" font-size="9.6" stroke="rgb(0,0,0)" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,0,0)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                                    <tspan id="label-4-3.5-4-5-4.1.1.tspan.1" dy="4" x="0">Premera</tspan>
                                  </text>
                                </g>
                              </g>
                            </g>
                          </g>
                          <g id="layout::guide-box.3-5-3-5::guide-box.3-5-3-5::guide-box.3-5-3-5::guides.2-2-2-2::guides.2-2-2-2::guides.2-2-2-2::label-5-3.6-4-6-4.1">
                            <g id="label-5-3.6-4-6-4.1">
                              <g id="label-5-3.6-4-6-4.1.1" transform="translate(672.31, 188.08)" stroke-width="0.1">
                                <g id="label-5-3.6-4-6-4.1.1.scale" transform="scale(1, -1)">
                                  <text x="0" y="0" id="label-5-3.6-4-6-4.1.1.text" text-anchor="start" font-size="9.6" stroke="rgb(0,0,0)" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,0,0)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                                    <tspan id="label-5-3.6-4-6-4.1.1.tspan.1" dy="4" x="0">Anthem</tspan>
                                  </text>
                                </g>
                              </g>
                            </g>
                          </g>
                        </g>
                      </g>
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </g>
          <g id="layout::title.2-4-2-4.1">
            <g id="title.2-4-2-4.1">
              <g id="title.2-4-2-4.1.1" transform="translate(314.85, 303.87)" stroke-width="0.1">
                <g id="title.2-4-2-4.1.1.scale" transform="scale(1, -1)">
                  <text x="0" y="0" id="title.2-4-2-4.1.1.text" text-anchor="middle" font-size="18" stroke="rgb(0,0,0)" font-family="Helvetica, Arial, FreeSans, Liberation Sans, Nimbus Sans L, sans-serif" fill="rgb(0,0,0)" stroke-opacity="1" fill-opacity="1" font-weight="normal" font-style="normal">
                    <tspan id="title.2-4-2-4.1.1.tspan.1" dy="7" x="0"> </tspan>
                  </text>
                </g>
              </g>
            </g>
          </g>
        </g>
      </g>
    </g>
  </g>
</svg>
</body>
</html><html>
<head>
  <title>D3 in Action Chapter 11 - Example 3</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
</head>
<style>
body, html {
    margin: 0;
  }
canvas {
  position: absolute;
  width: 500px;
  height: 500px;
}
svg {
  position: absolute;
  width:500px;
  height:500px;
}
path.country {
    fill: gray;
    stroke-width: 1;
    stroke: black;
    opacity: .5;
}
path.sample {
    stroke: black;
    stroke-width: 1px;
    fill: red;
    fill-opacity: .5;
}
line.link {
      stroke-width: 1px;
      stroke: black;
      stroke-opacity: .5;
}
circle.node {
  fill: red;
  stroke: white;
  stroke-width: 1px;
}
circle.xy {
  fill: pink;
  stroke: black;
  stroke-width: 1px;
}
</style>
<body>
<canvas height="500" width="500"></canvas>
<div id="viz">
  <svg></svg>
</div>
</body>
  <footer>
    
<script>
    sampleData = d3.range(2000).map(function(d) {
    var datapoint = {};
    datapoint.id = "Sample Feature " + d;
    datapoint.type = "Feature";
    datapoint.properties = {};
    datapoint.geometry = {};
    datapoint.geometry.type = "Polygon";
    datapoint.geometry.coordinates = randomCoords();
    return datapoint;
  })
  
  d3.json("world.geojson", function(data) {createMap(data)});

  function createMap(countries) {
    projection = d3.geo.mercator().scale(100).translate([250,250]);
    geoPath = d3.geo.path().projection(projection);
    canvasPath = d3.geo.path().projection(projection);

    mapZoom = d3.behavior.zoom().translate(projection.translate()).scale(projection.scale()).on("zoom", zoomed);
    d3.select("svg").call(mapZoom);

        var g = d3.select("svg")

    g.selectAll("path.sample").data(sampleData)
    .enter()
    .append("path")
    .attr("class", "sample")
    .style("stroke", "black")
    .style("stroke-width", "1px")
    .style("fill", "red")
    .style("fill-opacity", .5)
    .on("mouseover", function() {d3.select(this).style("fill", "pink")});


    zoomed();
    
    function zoomed() {
        projection.translate(mapZoom.translate()).scale(mapZoom.scale());

      	var context = d3.select("canvas").node().getContext("2d");
        context.clearRect(0,0,500,500);

	    context.strokeStyle = "black";
	    context.fillStyle = "gray";
	    context.lineWidth = "1px";
    	for (var x in countries.features) {
	    context.beginPath();
            canvasPath.context(context)(countries.features[x]);
		context.stroke()
		context.fill();
	}

      d3.selectAll("path.sample").attr("d", geoPath);


    }

  }
  
  function randomCoords() {
    var randX = (Math.random() * 350) - 175;
    var randY = (Math.random() * 170) - 85;
    return [[[randX - 5,randY],[randX,randY - 5],[randX - 10,randY - 5],[randX - 5,randY]]];
  }
</script>
  </footer>

</html>
<!DOCTYPE html>
<html lang="en"><head><title>Testing DarkenedAges library</title><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /></head><body><pre>
### Players

# Sandy Claws (sandyclaws, @sandyclaws):
  From the Magic Tuna Show (ask your kids).

# Rabbi Yoav (broyo, @thedod):
  Confession sensor technician (CST) and ChurchApproved Rabbi (CAR)
  [technically, a priest] in the Geneva parish. Born 2061 in Kibbutz
  Tzofna [burnt down during the 2067 reforms]. Graduated Ofakim Yeshiva
  (a ChurchApproved institute) 2085. Level 17 communism indicators
  (mainly due to family and origin). 77% heterosexual. No other known
  dominant deviatoins.

# Forth Inc. (forth, @forth):
  Registered ████████.

# Daan II (daanii, @black_puppydog):
  ██ ███ ███████ of ██████.


### Redacting prefab plaintext (2 trustees)
{"daanii": {"pads": {"daanii": [["krEZr3A9", null, "Ew+m5z8=",
"zMwQeJk="], [null, "oDo=", "Gg==", null, "LSr3"]]}, "subject": "Is
this thing on?", "sender": "alice", "trustees": ["daanii", "broyo"],
"msgid": "DA14341999781041", "recipients": ["bob", "carol"]},
"__public__": {"cipher": [["2tRryldO", "5F+i", "dWbUlEs=",
"oKV+HbU="], ["to5RIGi8VsQ=", "wkM=", "ew==", "mIQCOq/5", "QkSS"]],
"subject": "Is this thing on?", "sender": "alice", "trustees":
["daanii", "broyo"], "msgid": "DA14341999781041", "recipients":
["bob", "carol"]}, "__to__": {"pads": {"daanii": [["krEZr3A9", null,
"Ew+m5z8=", "zMwQeJk="], [null, "oDo=", "Gg==", null, "LSr3"]],
"broyo": [[null, "kDfH", null, null], ["0OE9TAfLM6A=", null, null,
"6+FhVcGd", null]]}, "subject": "Is this thing on?", "sender":
"alice", "trustees": ["daanii", "broyo"], "msgid": "DA14341999781041",
"recipients": ["bob", "carol"]}, "broyo": {"pads": {"broyo": [[null,
"kDfH", null, null], ["0OE9TAfLM6A=", null, null, "6+FhVcGd", null]]},
"subject": "Is this thing on?", "sender": "alice", "trustees":
["daanii", "broyo"], "msgid": "DA14341999781041", "recipients":
["bob", "carol"]}}

# >>> Unredaction for trustee: daanii
Here's ███ first line,
████████ by a ██████ one

# >>> Unredaction for trustee: broyo
██████ the █████ █████
followed ██ █ second ███

### >>> integration >>>
Here's the first line,
followed by a second one


### Unredaction of prefab message (with conflicting pads)

# >>> Unredaction for trustee: ted
Sharky says (after interrogating ████ ███ Tung ██ ████████ ████ ███ ███ ██
access ██ ███ ███████ ██████ As far ██ we know, it may have never ███████
The █████████ ██████████ █████ is █ ██████ ██ independent ████████ ██ ████
DHQ predicts that ███ official story █████ ███ has died ██ the plane ██████
█████ ██ challenged by ███ public.

# >>> Unredaction for trustee: dan
██████ ████ ██████ █████████████ Frau Tze ████ in person), that she had no
██████ to the Pujinda paper. ██ ███ as ██ █████ ██ ███ ████ █████ leaked.
███ El-Hamdan encryption crack ██ a result of ███████████ research by FTT.
███ ████████ ████ the ████████ █████ (that FTT ███ ████ in ███ train crash)
won't be ██████████ ██ the ███████

### >>> integration >>>
Sharky says (after interrogating Frau Tze Tung in person), that she had no
access to the Pujinda paper. As far as we know, it may have never leaked.
The El-Hamdan encryption crack is a result of independent research by FTT.
DHQ predicts that the official story (that FTT has died in the ╳╳╳╳╳ crash)
won't be challenged by the public.
</pre></body></html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>My CSV data</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>
	<body>

		<svg width="500" height="250">
			<line x2="162" x1="12" y2="130" y1="130" stroke-width="10" stroke="orange"></line>
			<line x2="87" x1="87" y2="130" y1="40" stroke-width="6" stroke="orange"></line>
			<line x2="34" x1="140" y2="80" y1="40" stroke-width="6" stroke="orange"></line>			
			<line x2="24" x1="34" y2="110" y1="80" stroke-width="2" stroke="orange"></line>		
			<line x2="44" x1="34" y2="110" y1="80" stroke-width="2" stroke="orange"></line>		
			<line x2="130" x1="140" y2="70" y1="40" stroke-width="2" stroke="orange"></line>		
			<line x2="150" x1="140" y2="70" y1="40" stroke-width="2" stroke="orange"></line>		
			<line x2="44" x1="24" y2="110" y1="110" stroke-width="4" stroke="orange"></line>		
			<line x2="150" x1="130" y2="70" y1="70" stroke-width="4" stroke="orange"></line>			
			<text y="180" x="10" fill="black" font-size="36" font-weight="bold" font-family="Helvetica">Life expectancy</text>
			<text y="220" x="10" fill="black" font-size="36" font-weight="bold" font-family="Helvetica">inequality</text>
		</svg>

		<script type="text/javascript">		

			//Load in contents of CSV file
			d3.csv("PHOF_LE_data_EngRegion.csv", function(data) {

				//Now CSV contents have been transformed into
				//an array of JSON objects.

				//Log 'data' to the console, for verification.
				console.log(data);

			});

		</script>
	</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 100% }
  </style>
</head>

<body>
  <script>
    // Feel free to change or delete any of the code you see!
    var svg = d3.select("body").append("svg")
    svg.append("rect")
      .attr({x: 100, y: 10, width: 700, height: 480})
      .style({ fill: "#7f2213"})
      .transition().duration(3000).ease("bounce")
      .style({ fill: "#5db9e3"})

    console.log("you are now rocking with d3", d3);
  </script>
</body>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Adding Padding</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.3.js"></script>
		<script type="text/javascript">
		
		
			$(document).ready(function() {

				$('rect').click(function() {
					console.log('clicked a rect');
					$(this).attr("fill","#fc9000");
				});
				
				$('#hideme').click(function() {
					$('#thechart').toggle('fast');
				});
				
			});

		</script>
		<style type="text/css">
			
			body {
				background-color: #ddddff;
				font-family: Arial;
			}

			svg {
				background-color: white;
			}
            circle {
                fill: orange;
                stroke-width: 3px;
                stroke: orange;
                opacity: 0.3;
                stroke-opacity: 0.8;
                
            }
			circle.clickable:hover {
				fill: yellow;
                stroke: black;
                opacity: 0.7;
			}
			g.axis path, g.axis line {
				stroke: green;
				fill: none;
				shape-rendering: crispEdges;
			}
			g.axis text {
				font-family: Arial;
				font-size: 14px;
				opacity: 0.5;
				text-anchor: left;
			}
			g.tick {
				fill: black;
				opacity: 0.5;
				text-anchor: left;
			}
			g.axis.y line, g.axis.y path  {
				stroke: orange;
				opacity: 0.5;
			}
            #databox p {
                padding: 0;
                margin: 0;
            }

		</style>
	</head>
	<body>

		<h1>Corety RTU-3 Mixed Air Temps</h1>
		<p>Date range 2014 January</p>
		<p><small><a id="hideme">hideChart</a></small></p>
		<div id="thechart" style="border: 1px solid red; width: 800px; float: left;">
		<script type="text/javascript">		

            var col1 = '64651.Corey Building.RTU-3.Mixed AIr Temp';
            var col2 = '64601.Corey Building.RTU-3.Discharge Air Temp (°F)';
            var radi = '64656.Corey Building.RTU-3.ZN-Q (PPM)';
            
			var w = 800;
			var h = 800;
			var padding = [40, 220, 80, 80 ];  //Top, right, bottom, left

			var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);
								
			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
                            .ticks(3)
                            .tickFormat(function(d) {
                                return d + '°F';
                            });

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("right")
                            .ticks(20)
                            .tickFormat(function(d) {
                                return d + '°F';
                            });

			var svg = d3.select("body #thechart")
						.append("svg")
						.attr("id","svg")
						.attr("width", w)
						.attr("height", h);
						
			d3.select("svg")
				.append("h1")
				.attr("width",500)
				.attr("height",200)
				.attr("fill","yellow")
				.text("h1 text inside of svg");  // I didn't expect this to work but thought I should try.

			d3.csv("Corey.RTU-3-short-2.csv", function(data) {

                //console.log(d3.entries(data));
				data.sort(function(a, b) {
					return d3.descending(a[radi], b[radi]);
				});

				//data.push(['Corey.RTU-3','2015-01-02 11:00:00','100','74.27','58.72','410.5','0','19.9','0.25','0','0','0','Th','1','10.68']);
                
                var minco2 = d3.min(data, function(d) {
                    return +d[radi];
                });
                
                console.log(minco2);
                
				xScale.domain([
                    d3.min(data, function(d) {
					   return +d[col1];
                    })
                    , 
                    d3.max(data, function(d) {
					   return +d[col1];
				    }) 
                ]);

				yScale.domain([ 
                    d3.min(data, function(d) {
					   return +d[col2];
                    })
                    , 
                    d3.max(data, function(d) { 
					   return +d[col2];
				    }) 
                ]);

				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles
					.attr("cx", function(d, i) {
						return xScale(+d[col1]);
					})
                    .attr("cy", function(d,i) {
                        return yScale(+(d[col2]));
                    })                    
					.attr("r", function(d) {
						//return (getr(d));
						return (3);
					})
					//.attr("height", yScale.rangeBand())
					.attr("class","clickable")
					.append("title")
					.text(function(d) {
						return "dt=" + d.DateTime + " cx= " + parseFloat(d[col1]).toFixed(2) + ' cy=' + parseFloat(d[col2]).toFixed(2) + " r=" + parseFloat(d[radi]).toFixed(1);
					});
					
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + "0," + (h - padding[2]) + ")")
					.call(xAxis);
					
				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (w - padding[1]) + ",0)")
					.call(yAxis);


				d3.selectAll('circle').on('click', function(d) {
					console.log('clicked a circle');
					d3.select(this).style('fill', '#ff0000').style('opacity',0.9);
                    $('#databox').append('<p>' + d.DateTime + ' ' + parseFloat(d[col1]).toFixed(2) + ',' + parseFloat(d[col2]).toFixed(2) + ',' + parseFloat(d[radi]).toFixed(2) + '</p>');
				});
			
				d3.selectAll('circle').on('mouseover', function(d) {
                    $('#current').html('<p>' + d.DateTime + ' ' + parseFloat(d[col1]).toFixed(2) + ',' + parseFloat(d[col2]).toFixed(2) + ',' + parseFloat(d[radi]).toFixed(2) + '</p>');
                    d3.select(this)
                        .transition()
                        .duration(100)
                        .attr('r',function(d) {
                            return getr(d)*1.1;
                        })
                        .transition()
                        .duration(100)
                        .attr('r',function(d) {
                            return getr(d)*1.0;
                        })
     				});
                       
                circles
                    .sort(function(a,b) {
                        return d3.ascending(+a[radi],+b[radi]);
                    })
                    .transition()
                    .delay(function(d,i){
                        return d[radi]-minco2; //300*Math.random();
                    })
                    .duration(function(d,i) {
                        return 40*(d[radi]-minco2); //300*Math.random();
                    })
                    .attr('r',function(d) {
                        return getr(d);
                    });
 
                            
                function getr(d) {
                    //console.log(d[col1] + ' ' + d[col2] + ' ' + d[radi]);
                    //return (10*(Math.pow(d[radi], 0.2)));
                    return (Math.pow(Math.abs(d[radi]-390), 1.4));
                }


			});


		</script>
		</div>
        <div id="databox" style="border:  1px solid red; "></div>
        <div id="current" style="border:  1px solid red; "></div>
	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Budget for Connecticut State IT Projects</title>
		<script type="text/javascript" src="assets/scripts/d3.v3.js"></script>

        <style type="text/css">
            
            body {
                background-color: white;
                font-family: Helvetica, Arial, sans-serif;
            }

            h1 {
                font-size: 24px;
                margin: 0;
            }

            p {
                font-size: 14px;
                margin: 10px 0 0 0;
            }

            svg {
                background-color: white;
            }

            rect:hover {
                fill: orange;
            }
            
            .axis path,
            .axis line {
                fill: none;
                stroke: black;
                shape-rendering: crispEdges;
            }
            
            .axis text {
                font-family: sans-serif;
                font-size: 11px;
            }

            .y.axis path,
            .y.axis line {
                opacity: 0;
            }

        </style>
	</head>
	<body>
        <h1>Budget for Connecticut State IT Projects</h1>

        <p>Information Technology projects reported to the Office of Policy and Management Source: <a href="https://data.ct.gov/Government/Information-Technology-Project-Portfolio/i7h5-rx65">Connecticut State Government</a>, 2015</p>

		<script type="text/javascript">

            var w = 1300;
            var h = 1500;
            var padding = [ 20, 10, 30, 380 ];  //Top, right, bottom, left

            var flatColors = {
                green : "#2ECC71",
                yellow : "#F5D76E",
                red : "#e74c3c"
            };

            // logscale if needed
            var widthScale = d3.scale.linear()
                                .range([0, w - padding[1] - padding[3] ]);
            var heightScale = d3.scale.ordinal()
                                .rangeRoundBands([ 0, h - padding[2] ] , 0.1);

            var xAxis = d3.svg.axis()
                            .scale(widthScale)
                            .orient("bottom");

            var yAxis = d3.svg.axis()
                            .scale(heightScale)
                            .orient("left");


            var body = d3.select("body");
            var svg = body.append("svg")
                           .attr("width", w)
                           .attr("height", h);
            var colorCode = function(d) {
                            switch(d.Level) {
                                case "1":
                                    return flatColors.red;
                                case "2":
                                    return flatColors.yellow;
                                case "3":
                                    return flatColors.green;
                                default:
                                    return "black";
                            }
                        };

			//Load in contents of CSV file
			d3.csv("ctitportfolio.csv", function(data) {
       
                // For some reason not working, maybe they are treated as strings?
                data.sort( function(a,b) {
                    return d3.ascending(+a.TotalBudget, +b.TotalBudget);
                });

                widthScale.domain([0, d3.max(data, function(d) {
                    return +d.TotalBudget;
                }) ]);

                // Assign labels - Numerical Labels
                // heightScale.domain(d3.range(data.length));
                heightScale.domain(data.map(function(d) {return d.ProjectName; } ));

                var rects = d3.select("svg").selectAll('rect')
                                .data(data)
                                .enter()
                                .append('rect');

                rects.attr("x", padding[3] )
                     .attr("y", function(d, i) {
                        return heightScale(d.ProjectName);
                    })
                    // in future, use .attr("class","somethingSpecial")
                    // Color code for what degree of priority that project is.
                    .style("fill", colorCode)
                    .attr("height", heightScale.rangeBand() )
                    .attr("width", function(d) {
                        return widthScale(d.TotalBudget);
                    })
                    .append("title")
                    .text(function(d) {
                        return d.ProjectName + " : costs " + d.TotalBudget;
                    });

                svg.append("g")
                    .attr("class", "x axis")
                    .attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
                    .call(xAxis);

                svg.append("g")
                    .attr("class", "y axis")
                    .attr("transform", "translate(" + (padding[3] - 5) + ",0)")
                    .call(yAxis);

		    });
		</script>

	</body>
</html><!DOCTYPE html>
<html>
<head>
    <title>Omid Kashan &mdash; Module 4</title>
    <style type="text/css">
        * { box-sizing: border-box; font-family:sans-serif;}
        body, html, h1, h2, h3, h4, h5, h6, figure, blockquote, ul, ol, li, p {margin:0;padding:0}
        p {margin-bottom:50px;}
        #main {padding:20px;}
        h1 {font-weight: normal;}
        #viz {max-width:800px;height:200px;overflow:visible;margin-left:40px}
        svg g .bar+text {text-align: center;fill:black;transform: rotate(-90deg) translate(-120px,-75px);-webkit-transform:rotate(-90deg) translate(-120px,-75px);transform-origin: center center;-webkit-transform-origin:center center;fill:white;letter-spacing: 2px;}
        svg g rect {fill:#F21212 ;}
        svg g .bar+text {}
        svg .tick text{transform: translateX(-20px); }
        svg .domain {display: none}
        svg text {font-size:11px;}
        svg .tick line {stroke:#aaa;transform:translateX(-13px)}
    </style>
</head>
<body>
    
    <div id="main">
        
        <h1>Manchester United</h1>
        <p>Wins per season since the start of the Premier League</p>
        <svg id="viz"></svg>
    
    </div>  
    
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script>
        
        var i=1,dim={w:600,h:200},viz = d3.select('#viz'),main=d3.select('#main'),bar={width:30},max,group,scale={},axis={};
        window.onload = function() {
            d3.csv('data.csv',function(data) {
                console.log(data);
                
                max = d3.max(data, function(d) { return +d.w*3;} );
                scale.h = d3.scale.linear().domain([0,max/3]).range([dim.h,0]);                
                viz.attr('width',data.length*30);
                axis.h = d3.svg.axis().scale(scale.h).orient('left');
                group = viz.selectAll('g').data(data).enter().append('g').attr("transform", function(d, i) { return "translate(" + i*(bar.width + 1)+", 0)"; });
                group.append('rect').attr('class','bar').attr('width', bar.width).attr('height',function(d) { return scale.h(0) - scale.h(d.w); }).attr("y", function(d) { return (scale.h(d.w)) });
                group.append('text').text(function(d) { return d.season; }).style("text-anchor", "middle").attr("y", function(d) { return max+10; }).attr('x',function(d) { return scale.h(0)-(dim.h+35); });             
                viz.append('g').call(axis.h);
                
            });
        };

    </script>
    
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<link href="hover.css" rel="stylesheet" />

</head>
<body style="background-color:white;">
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<?xml version="1.0" encoding="UTF-8" standalone="no"?><!-- Generated by graphviz version 2.28.0 (20140111.2315)
 --><!-- Title: G Pages: 1 --><html><body><svg width="288pt" height="247pt" viewbox="0.00 0.00 288.00 247.13" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(0.950495 0.950495) rotate(0) translate(4 256)"><title>G</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-256 299,-256 299,4 -4,4"></polygon><!-- main --><g id="node1" class="node hvr-float" style="pointer-events:all;"><polygon fill="none" stroke="black" points="144,-252 90,-252 90,-216 144,-216 144,-252"></polygon><text text-anchor="middle" x="117" y="-229.8" font-family="Times,serif" font-size="14.00">main</text></g><!-- parse --><g id="node2" class="node hvr-float" style="pointer-events:all;"><ellipse fill="none" stroke="black" cx="117" cy="-162" rx="31.1141" ry="18"></ellipse><text text-anchor="middle" x="117" y="-157.8" font-family="Times,serif" font-size="14.00">parse</text></g><!-- main&#45;&gt;parse --><g id="edge1" class="edge"><title>main-&gt;parse</title>
<path fill="none" stroke="black" d="M117,-215.697C117,-207.983 117,-198.712 117,-190.112"></path><polygon fill="black" stroke="black" points="120.5,-190.104 117,-180.104 113.5,-190.104 120.5,-190.104"></polygon></g><!-- init --><g id="node4" class="node hvr-float" style="pointer-events:all;"><ellipse fill="none" stroke="black" cx="58" cy="-90" rx="27" ry="18"></ellipse><text text-anchor="middle" x="58" y="-85.8" font-family="Times,serif" font-size="14.00">init</text></g><!-- main&#45;&gt;init --><g id="edge3" class="edge"><title>main-&gt;init</title>
<path fill="none" stroke="black" stroke-dasharray="1,5" d="M100.799,-215.629C92.5088,-205.844 82.9384,-193.003 77,-180 68.0016,-160.297 63.192,-136.173 60.6654,-118.014"></path><polygon fill="black" stroke="black" points="64.1384,-117.579 59.4272,-108.09 57.1923,-118.446 64.1384,-117.579"></polygon></g><!-- cleanup --><g id="node5" class="node hvr-float" style="pointer-events:all;"><ellipse fill="none" stroke="black" cx="207" cy="-162" rx="41.0987" ry="18"></ellipse><text text-anchor="middle" x="207" y="-157.8" font-family="Times,serif" font-size="14.00">cleanup</text></g><!-- main&#45;&gt;cleanup --><g id="edge4" class="edge"><title>main-&gt;cleanup</title>
<path fill="none" stroke="black" d="M139.247,-215.697C151.46,-206.198 166.706,-194.34 179.641,-184.279"></path><polygon fill="black" stroke="black" points="182.008,-186.872 187.753,-177.97 177.711,-181.346 182.008,-186.872"></polygon></g><!-- printf --><g id="node7" class="node hvr-float" style="pointer-events:all;"><ellipse fill="none" stroke="black" cx="263" cy="-18" rx="32.2356" ry="18"></ellipse><text text-anchor="middle" x="263" y="-13.8" font-family="Times,serif" font-size="14.00">printf</text></g><!-- main&#45;&gt;printf --><g id="edge8" class="edge"><title>main-&gt;printf</title>
<path fill="none" stroke="red" d="M144.189,-231.319C176.999,-227.681 230.991,-216.196 257,-180 285.4,-140.476 277.966,-80.3022 270.289,-45.8082"></path><polygon fill="red" stroke="red" points="273.668,-44.8905 267.938,-35.9789 266.86,-46.5188 273.668,-44.8905"></polygon></g><!-- execute --><g id="node3" class="node hvr-float" style="pointer-events:all;"><ellipse fill="none" stroke="black" cx="155" cy="-90" rx="40.2858" ry="18"></ellipse><text text-anchor="middle" x="155" y="-85.8" font-family="Times,serif" font-size="14.00">execute</text></g><!-- parse&#45;&gt;execute --><g id="edge2" class="edge"><title>parse-&gt;execute</title>
<path fill="none" stroke="black" d="M126.005,-144.411C130.483,-136.163 135.995,-126.009 141.007,-116.777"></path><polygon fill="black" stroke="black" points="144.1,-118.415 145.795,-107.956 137.948,-115.075 144.1,-118.415"></polygon></g><!-- make_string --><g id="node6" class="node hvr-float" style="pointer-events:all;"><ellipse fill="none" stroke="black" cx="58" cy="-18" rx="58.1629" ry="18"></ellipse><text text-anchor="middle" x="58" y="-13.8" font-family="Times,serif" font-size="14.00">make_string</text></g><!-- execute&#45;&gt;make_string --><g id="edge5" class="edge"><title>execute-&gt;make_string</title>
<path fill="none" stroke="black" d="M134.429,-74.1548C121.04,-64.4929 103.344,-51.7225 88.3516,-40.9032"></path><polygon fill="black" stroke="black" points="90.0468,-37.8104 79.8896,-34.7966 85.9505,-43.4867 90.0468,-37.8104"></polygon></g><!-- execute&#45;&gt;printf --><g id="edge6" class="edge"><title>execute-&gt;printf</title>
<path fill="none" stroke="black" d="M176.855,-74.8345C193.382,-64.123 216.223,-49.3181 234.234,-37.6447"></path><polygon fill="black" stroke="black" points="236.151,-40.5733 242.638,-32.1973 232.343,-34.6993 236.151,-40.5733"></polygon></g><!-- compare --><g id="node8" class="node hvr-float" style="pointer-events:all;"><polygon fill="#c1b2ff" stroke="#c1b2ff" points="199.146,-36 134.854,-36 134.854,-0 199.146,-0 199.146,-36"></polygon><text text-anchor="middle" x="167" y="-13.8" font-family="Times,serif" font-size="14.00">compare</text></g><!-- execute&#45;&gt;compare --><g id="edge9" class="edge"><title>execute-&gt;compare</title>
<path fill="none" stroke="red" d="M157.966,-71.6966C159.289,-63.9827 160.878,-54.7125 162.352,-46.1124"></path><polygon fill="red" stroke="red" points="165.828,-46.552 164.068,-36.1043 158.928,-45.3692 165.828,-46.552"></polygon></g><!-- init&#45;&gt;make_string --><g id="edge7" class="edge"><title>init-&gt;make_string</title>
<path fill="none" stroke="black" d="M58,-71.6966C58,-63.9827 58,-54.7125 58,-46.1124"></path><polygon fill="black" stroke="black" points="61.5001,-46.1043 58,-36.1043 54.5001,-46.1044 61.5001,-46.1043"></polygon></g></g></svg></body></html>

</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

td {
  border: solid 1px #ccc;
  padding: 10px;
}

table {
  margin: 10px;
  border-spacing: 0;
  border-collapse: collapse;
}

</style>
<body>
<script src="d3-selection.min.js"></script>
<script>

d3.select("body")
  .append("table")
  .selectAll("tr")
    .data(["y" + 0, "y" + 1, "y" + 2])
  .enter().append("tr")
  .selectAll("td")
    .data(["x" + 0, "x" + 1, "x" + 2])
  .enter().append("td")
    .text(function(x, i, y, j) { return [x, y]; });

</script>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src='https://api.mapbox.com/mapbox.js/v2.2.3/mapbox.js'></script>
  <link href='https://api.mapbox.com/mapbox.js/v2.2.3/mapbox.css' rel='stylesheet' />
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    #map { 
      position:absolute; 
      width: 100%;
      height: 100%;
    }
    svg { 
    }
  </style>
</head>

<body>
  <div id="map"></div>
  <script>
   
    L.mapbox.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'
    
    //Setup our Leaflet map using Mapbox.js
    var map = L.mapbox.map('map', 'mapbox.pencil', {
      maxZoom: 18, minZoom: 14,
      //zoomControl: false
    })
    .setView([51.5119112,-0.10000], 15);
    
    // Disable drag and zoom handlers.
    map.dragging.disable();
    map.touchZoom.disable();
    map.doubleClickZoom.disable();
    map.scrollWheelZoom.disable();
    // Disable tap handler, if present.
    if (map.tap) map.tap.disable();
    
    // Setup our svg layer that we can manipulate with d3
    var svg = d3.select(map.getPanes().overlayPane)
      .append("svg");
    var g = svg.append("g").attr("class", "leaflet-zoom-hide");
    
    function project(ll) {
      if(!ll) return;
      // our data came from csv, make it Leaflet friendly
      var a = [+ll.lat, +ll.lng]; 
      // convert it to pixel coordinates
      var point = map.latLngToLayerPoint(L.latLng(ll))
      return point;
    }
  
    d3.csv("dots.csv", function(err, data) {
      var dots = g.selectAll("circle.dot")
        .data(data)
      
      dots.enter().append("circle").classed("dot", true)
      .attr("r", 1)
      .style({
        fill: "#0082a3",
        "fill-opacity": 0.6,
        stroke: "#004d60",
        "stroke-width": 1
      })
      .transition().duration(1000)
      .attr("r", 6);
      
      var circleControl = new circleSelector(svg)
        .projection(project)
        .inverseProjection(function(a) {
          return map.containerPointToLatLng(L.point(a));
        })
        .activate(true);
      
      circleControl.on("update", function() {
        g.selectAll("circle.dot").style({
          fill: function(d) {
            var thisDist = circleControl.distance(d);
            var circleDist = circleControl.distance()
            if(thisDist < circleDist) {
              return "#ff8eec";
            } else {
              return "#0082a3"
            }
          }
        })
      })
      
      function render() {
        // We need to reposition our SVG and our containing group when the map
        // repositions via zoom or pan
        // https://github.com/zetter/voronoi-maps/blob/master/lib/voronoi_map.js
        var bounds = map.getBounds();
        var topLeft = map.latLngToLayerPoint(bounds.getNorthWest())
        var bottomRight = map.latLngToLayerPoint(bounds.getSouthEast())
        svg.style("width", map.getSize().x + "px")
          .style("height", map.getSize().y + "px")
          .style("left", topLeft.x + "px")
          .style("top", topLeft.y + "px");
        g.attr("transform", "translate(" + -topLeft.x + "," + -topLeft.y + ")");

        // We reproject our data with the updated projection from leaflet
        g.selectAll("circle.dot")
        .attr({
          cx: function(d) { return project(d).x},
          cy: function(d) { return project(d).y},
        })
        
        // Render our selector, and update it whenever the map updates;
        circleControl.update(g)
      }
      // re-render our visualization whenever the view changes
      map.on("viewreset", function() {
        render()
      })
      // render our initial visualization
      render()
    })
    
    
    
    /* 
    ===============================================================
    Circle Selection component
    ===============================================================
    */
    function circleSelector(svg) {
      var that = this;
      var circleCenter, circleOuter; //control points
      var circleSelected = false; //have we completed the circle?
      var dragging = false; //track whether we are dragging
      var active = false; // user can turn on/off this behavior
      var container; // the container we render our points in

      // this will likely be overriden by leaflet projection
      var project = d3.geo.mercator();
      var unproject = d3.geo.mercator().invert;

      //we expose events on our component
      var dispatch = d3.dispatch("update");
      
      // The user provides an svg element to listen on events
      svg.on("mouseup.circle", function() {
        if(!active) return;
        if(dragging && circleSelected) return;
        
        var p = d3.mouse(this);
        var ll = unproject([p[0],p[1]])
        
        if(circleCenter) {
          // if we already have the circle's center and the circle
          // is finished selecting, another click means destroy the circle
          if(circleSelected) {
            // start over
            circleCenter = null;
            circleOuter = null;
            circleSelected = false;
            g.selectAll("circle.lasso").remove();
            g.selectAll("circle.control").remove();
            g.selectAll("circle.dot").style("fill", "#0082a3")
            g.selectAll("line.lasso").remove();
          } else {
            // Set the outer point
            circleOuter = ll;
            circleSelected = true;
          }
        } else {
          // We set the center to the initial click
          circleCenter = ll;
          circleOuter = ll;
        }
        // we let the user know 
        update()
      })
      svg.on("mousemove.circle", function() {
        if(circleSelected) return;
        // we draw a guideline for where the next point would go.
        var p = d3.mouse(this);
        var ll = unproject([p[0],p[1]])
        circleOuter = ll;
        update();
      })
      
      var drag = d3.behavior.drag()
        .on("drag", function(d,i) {
          if(circleSelected) {
            dragging = true;
            var p = d3.mouse(svg.node());
            var ll = unproject([p[0],p[1]])
            if(i) {
              circleOuter = ll;
            } else {
              var dlat = circleCenter.lat - ll.lat;
              var dlng = circleCenter.lng - ll.lng;
              circleCenter = ll;
              circleOuter.lat -= dlat;
              circleOuter.lng -= dlng;
            }
            update();
          } else {
            return false;
          }
        })
        .on("dragend", function(d) {
          // kind of a dirty hack...
          setTimeout(function() {
            dragging = false;
          },100)
        })
      
      function update(g) {
        if(g) container = g;
        if(!circleCenter || !circleOuter) return;
        var dist = distance(circleCenter, circleOuter)
        var circleLasso = container.selectAll("circle.lasso").data([dist])
        circleLasso.enter().append("circle").classed("lasso", true)
        circleLasso
        .attr({
          cx: project(circleCenter).x,
          cy: project(circleCenter).y,
          r: dist
        })
        .style({
          stroke: "#010",
          fill: "#010",
          "fill-opacity": 0.1
        })
        
        var line = container.selectAll("line.lasso").data([circleOuter])
        line.enter().append("line").classed("lasso", true)
        
        if(!circleSelected && circleCenter || dragging) {
          line.attr({
            x1: project(circleCenter).x,
            y1: project(circleCenter).y,
            x2: project(circleOuter).x,
            y2: project(circleOuter).y
          })
          .style({
            stroke: "#111",
            "stroke-dasharray": "5 5"
          })
        } else {
          line.remove();
        }
        
        var controls = container.selectAll("circle.control")
        .data([circleCenter, circleOuter])
        controls.enter().append("circle").classed("control", true)
        controls.attr({
          cx: function(d) { return project(d).x},
          cy: function(d) { return project(d).y},
          r: 8,
          stroke: "#010",
          fill: "#b7feb7",
          "fill-opacity":0.9
        })
        .call(drag)
        .on("click.control", function(d) {
          if(circleSelected)
            d3.event.stopPropagation();
        })
        
        dispatch.update();
      }
      this.update = update;
      
      this.projection = function(val) {
        if(!val) return project;
        project = val;
        return this;
      }
      
      this.inverseProjection = function(val) {
        if(!val) return unproject;
        unproject = val;
        return this;
      }
      this.activate = function(val) {
        active = val;
        return this;
      }
      
      this.distance = function(ll) {
        if(!ll) ll = circleOuter;
        return distance(circleCenter, ll)
      }
      
      function distance(ll0, ll1) {
        var p0 = project(ll0)
        var p1 = project(ll1)
        var dist = Math.sqrt((p1.x - p0.x)*(p1.x - p0.x) + (p1.y - p0.y)*(p1.y-p0.y))
        return dist;
      }
      
      d3.rebind(this, dispatch, "on")
      return this;
    }

  </script>
</body>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>D3 module 5 project</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 36px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: blue;
				transition: fill 1s;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 16px;
			}

		</style>
	</head>
	<body>

		<h1>Productivity and Happiness</h1>

		<p>GDP per hour worked vs. Better Life Index &ldquo;Life Satisfaction&rdquo; scores in 2013. Source: <a href="https://data.oecd.org/lprdty/gdp-per-hour-worked.htm">GDP per hour worked, OECD</a>, and <a href="http://www.oecdbetterlifeindex.org/">Life Satisfaction, OECD</a></p>

		<script type="text/javascript">		


			var w = 800;
			var h = 600;
			var padding = [ 20, 10, 50, 50 ];  //Top, right, bottom, left



			var xScale = d3.scale.linear()
								.range([ padding[3] + 50, w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0] + 20, h - padding[2] ]);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.tickFormat(function(d) {
								return d + "US$";
                            });
			
			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
							.ticks(15);
				
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
       
                d3.csv("GDPandLIFESATISFACTION.csv", function(data) {

				xScale.domain([ 
					d3.min(data, function(d) {
						return +d.GDPperHourWorked;
					}), 
					d3.max(data, function(d) {
						return +d.GDPperHourWorked;
					})
				]);

				yScale.domain([
					d3.max(data, function(d) {
						return +d.LifeSatisfaction;
					}),
					d3.min(data, function(d) {
						return +d.LifeSatisfaction;
					})
				]);

				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles.attr("cx", function(d) {
						return xScale(d.GDPperHourWorked);
					})
					.attr("cy", function(d) {
						return yScale(d.LifeSatisfaction);
					})
					.attr("r", 0.1)
					.attr("fill", "skyblue")
					.attr("opacity",0.5)  
					.append("title")
					.text(function(d) {
						return d.country + "'s life satisfaction score is " + d.LifeSatisfaction + ", and GDP per hour worked is " + d.GDPperHourWorked + " US$";
					});

				circles.sort(function(a, b) {
						return d3.ascending(+a.LifeSatisfaction, +b.LifeSatisfaction);
					})
					.transition()
					.delay(function(d, i) {
						return i * 50;
					})
					.duration(1000)
					.attr("r", 15);

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2]) + ")")
					.call(xAxis)
					.append("text")
					.attr({
						"class": "labels",
						x: w/2-30,
						y: 40,
					})
					.text("GDP per hour worked");

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3] + 40) + ",0)")
					.call(yAxis)
					.append("text")
					.attr({
                        "class": "labels",
						"transform": "rotate(-90)",
						x: -h/2-10,
						y: -40,
					})
					.text("Life Satisfaction")
                ;

			});


		</script>

	</body>
</html><!doctype html>
<html lang="en">
  <head>
    <title>OpenLayers 3 with Browserify</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="node_modules/openlayers/css/ol.css"></link>
    <style>
      .map {
        height: 100%;
        width: 100%;
      }
    </style>
    <title>OpenLayers 3 quickstart example</title>
  </head>
  <body>
    <div id="map" class="sidebar-map"></div>
    <script src="bundle.js">
    </script>
  </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Emissions in Italy</title>
		<script type="text/javascript" src="HTTP://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 5;
			}

			p {
				font-size: 14px;
				margin: 14px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: red;
				fill-opacity: 0.99;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 10px;
			}


		</style>
	</head>
	<body>

		<h1>CO2 Emissions in Italy</h1>

		<p>Carbon intensity by province: CO2 tonnes emitted per 1000 euros of GDP. </p>
		<p>Sources: <a href="http://www.sinanet.isprambiente.it/it/sia-ispra/inventaria/disaggregazione-dellinventario-nazionale-2010">ISPRA</a>, and <a href="http://www.ucer.camcom.it/studi-ricerche/banche-dati/bd/contieco/eurostat/prodotto-interno-lordo-delle-regioni-europee-re/Reddito_nuts3_province.xls/view">EUROSTAT</a>, 2010</p>

		<script type="text/javascript">		


			var w = 800;
			var h = 600;
			var padding = [ 50, 50, 50, 80 ];  //Top, right, bottom, left


			var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(7);

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
							.ticks(4)
							.tickFormat(function(d) {
								return d/1000 + " B€ GDP";
							});


			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("ISPRA_CO2_PIL_2010.csv", function(data) {


				xScale.domain([ 
					d3.min(data, function(d) {
						return +d.co2_pil_2010;
					}), 
					d3.max(data, function(d) {
						return +d.co2_pil_2010;
					})
				]);

				yScale.domain([
					d3.max(data, function(d) {
						return +d.pil2010;
					}),
					d3.min(data, function(d) {
						return +d.pil2010;
					})
				]);

				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles.attr("cx", function(d) {
						return xScale(d.co2_pil_2010);
					})
					.attr("cy", function(d) {
						return yScale(d.pil2010);
					})
					.attr("r", 0.1)
					.attr("fill", "blue")
					.append("title")
					.text(function(d) {
						return d.PROVINCIA + "'s CO2 tonnes per 1,000 euros emitted are " + d.co2_pil_2010 +", and " + " GDP in 2010 was " + d.pil2010/1000 + " billion euros.";
					});

				circles.sort(function(a, b) {
						return d3.ascending(+a.co2_pil_2010, +b.co2_pil_2010);
					})
					.transition()
					.delay(function(d, i) {
						return i * 20;
					})
					.duration(1000)
					.attr('fill-opacity', 0.3)
					.attr("r", 5);

				// svg.append("g")
				// 	.attr("class", "x axis")
				// 	.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
				// 	.call(xAxis);

				// svg.append("g")
				// 	.attr("class", "y axis")
				// 	.attr("transform", "translate(" + padding[3] + ",0)")
				// 	.call(yAxis);

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2] + 5) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3] - 5) + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 400 - margin.left - margin.right,
    height = 200 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10, "%");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var data = [
  {year: '2010', frequency: 0.50},
  {year: '2011', frequency: 0.57},
  {year: '2012', frequency: 0.60},
  {year: '2013', frequency: 0.78},
  {year: '2014', frequency: 0.85},
];
  
x.domain(data.map(function(d) { return d.year; }));
y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

svg.append("g")
  .attr("class", "x axis")
  .attr("transform", "translate(0," + height + ")")
  .call(xAxis);

svg.append("g")
  .attr("class", "y axis")
  .call(yAxis)
  .append("text")
  .attr("transform", "rotate(-90)")
  .attr("y", 6)
  .attr("dy", ".71em")
  .style("text-anchor", "end")
  .text("Compliance");

svg.selectAll(".bar")
  .data(data)
  .enter().append("rect")
  .attr("class", "bar")
  .attr("x", function(d) { return x(d.year); })
  .attr("width", x.rangeBand())
  .attr("y", function(d) { return y(d.frequency); })
  .attr("height", function(d) { return height - y(d.frequency); })
	.style("fill", function(d) {
  	return d.year === '2014' ? "brown" : "steelblue";
  });

function type(d) {
  d.frequency = +d.frequency;
  return d;
}

</script>
<!DOCTYPE html>
<head>
    <meta charset="utf-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <link href="magnitude_position.css" type="text/css" rel="stylesheet" />
    <link href="magnitude_area.css" type="text/css" rel="stylesheet" />
    <link href="identify_color.css" type="text/css" rel="stylesheet" />
    <link href="identify_spatial_region.css" type="text/css" rel="stylesheet" /> 
    <style>
        h2 
        {
            font-family: arial; 
        }
    </style>
</head>

<body>
    <h2>Magnitude as Position on a Common Scale</h2>
    <script src="magnitude_position.js" type="text/javascript"> </script>
    <br />
    <h2>Magnitude as Area</h2>
    <script src="magnitude_area.js" type="text/javascript"></script>
    <br />
    <h2>Identify as Color Hue</h2>
    <script src="identify_color.js" type="text/javascript"> </script>
    <br />
    <h2>Identify as Spatial Region</h2>
    <script src="identify_spatial_region.js" type="text/javascript"> </script>
</body>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Adding Tooltips</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: #637660;
			}

			svg {
				background-color: #c0c0c0;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		
			//width and height
			var w = 700;
			var h = 1500;

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("global-findex.csv", function(data) {

				data.sort(function(a, b) {
					//return d3.descending(a.AccountAtaBank, b.AccountAtaBank);
					return d3.descending(+a.AccountAtaBank, +b.AccountAtaBank);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.AccountAtaBank, +b.AccountAtaBank);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return d.AccountAtaBank * 7;
					})
					.attr("height", 7)
					.attr("fill", "white")
					.append("title")
					.text(function(d) {
						return d.country + "'s percentage of people with a bank account is " + d.AccountAtaBank + "%.";
					});

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Migrant Deaths Direct Visualization</title>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js"></script>

    <!-- Leaflet.js, a geographic mapping library. -->
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.css" /> 
    <script src="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.js"></script>

    <!-- A functional reactive model library. github.com/curran/model -->
    <script src="http://curran.github.io/model/cdn/model-v0.2.4.js"></script>

    <!-- Chiasm core and plugins. github.com/chiasm-project -->
    <script src="http://chiasm-project.github.io/chiasm/chiasm-v0.2.0.js"></script>
    <script src="http://chiasm-project.github.io/chiasm-component/chiasm-component-v0.2.0.js"></script>
    <script src="http://chiasm-project.github.io/chiasm-layout/chiasm-layout-v0.2.1.js"></script>

    <!-- Custom Chiasm plugins for this example. -->
    <script src="chiasm-links.js"></script>
    <script src="chiasm-data-loader.js"></script>
    <script src="chiasm-leaflet.js"></script>
    <script src="bubble-map.js"></script>

    <style>

      body {
        background-color: black;
      }

      /* Make the chart container fill the page using CSS. */
      #chiasm-container {
        position: fixed;
        left: 20px;
        right: 20px;
        top: 20px;
        bottom: 20px;
      }
    </style>

  </head>
  <body>
    <div id="chiasm-container"></div>

    <script>

      var chiasm = Chiasm();

      chiasm.plugins.layout = ChiasmLayout;
      chiasm.plugins.links = Links;
      chiasm.plugins.dataLoader = DataLoader;
      chiasm.plugins.bubbleMap = BubbleMap;

      chiasm.setConfig({
        "layout": {
          "plugin": "layout",
          "state": {
            "containerSelector": "#chiasm-container",
            "layout": "map"
          }
        },
        "map": {
          "plugin": "bubbleMap",
          "state": {
            "center": [14.15, 41.70],
            "zoom": 4,
            "rColumn": "dead_and_missing",
            "rMax": 30
          }
        },
        "migrantDeaths": {
          "plugin": "dataLoader",
          "state": {
            "path": "events"
          }
        },
        "links": {
          "plugin": "links",
          "state": {
            "bindings": [
              "migrantDeaths.data -> map.data"
            ]
          }
        }
      });
    
    </script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  background-color: #f5f5f5;
}

.axis path,
.axis line {
  fill: none;
  stroke: #a9a9a9;
  shape-rendering: crispEdges;
}
  
.axis text{
   stroke: #a9a9a9
 }


.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("linear")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name], name:name};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { console.log(d); return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });
  
	city.selectAll('circle')
    .data(function(d){ return d.values})
    .enter().append('circle')
    .attr("cx", function(d) { return x(d.date) })
    .attr("cy", function(d) { return y(d.temperature) })
    .attr("r", 1.5);

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Knight D3 | Module 1</title>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
	<style type="text/css">

    @import url(http://fonts.googleapis.com/css?family=Oswald:700,400);
    @import url(http://fonts.googleapis.com/css?family=Open+Sans);

    body {
      background: #D3D3D3;
      font-family: oswald, arial, sans-serif;
			color: #333;
    }
    p {
      font-family: open sans, arial, sans-serif;
    }
    a:link {
      color: #3A96B7;
      text-decoration: none;
    }
		a:hover {
			text-decoration: underline;
		}
		a:visited {
			color: #3A96B7;
		}
		a:active {
			color: steelBlue;
		}
    #container {
      width: 700px;
      margin-left: auto;
      margin-right: auto;
      margin-top: 50px;
      padding: 50px;
      background: #FFF;
      box-shadow: 0 0 5px #999999;
    }
		.source {
			font-family: oswald, arial, sans-serif;
			font-weight: bold;
			font-size: .75em;
			float: right;
		}
		svg {
			background: #FFFFFF;
		}
		rect:hover {
			fill: #0DDDFF;
		}
		.axis path,
		.axis line {
			fill: none;
			stroke: #36435A;
			shape-rendering: crispEdges;
		}
		.axis text {
			font-family: oswald, arial, sans-serif;
			font-size: 11px;
			fill: #36435A;
		}
		.y.axis path,
		.y.axis line {
			opacity: 0;
		}
		.tooltip {
			background: #EEE;
			box-shadow: 0 0 5px #999999;
			color: #333;
			padding: 8px;
			position: absolute;
			text-align: center;
			visibility: hidden;
			z-index: 10;
 		}

	</style>
</head>
<body>

  <div id='container'>
    <h1>Networked Readiness Index - 2014</h1>
    <p>The 25 most networked countries, on a scale from 1 (worst) to 7 (best), based on performance leveraging information and communications technologies to boost competitiveness and well-being.<span class='source'>Data Source: <a href='http://www.weforum.org/global-information-technology-report-2014-data-platform'>World Economic Forum</a></span></p>
  </div>

  <script type='text/javascript'>

		var w = 700;
		var h = 600;
		var padding = [ 20, 50, 20, 120 ];  //Top, right, bottom, left

		var widthScale = d3.scale.linear()
							.range([ 0, w - padding[1] - padding[3] ]);

		var heightScale = d3.scale.ordinal()
							.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);

		var xAxis = d3.svg.axis()
						.scale(widthScale)
						.orient('bottom');

		var yAxis = d3.svg.axis()
						.scale(heightScale)
						.orient('left');

		var svg = d3.select('#container')
					.append('svg')
					.attr('width', w)
					.attr('height', h);

		var tooltip = d3.select('body')
						.append('div')
						.attr('class', 'tooltip');

		var tooltipOn = function(d, i) {
					var content = '<div>' + d.country + ' has a ' + d.score + ' score in network readiness.</div>';
					tooltip.html(content)
					.style('visibility', 'visible');
		};

		var tooltipMove = function(d, i) {
				tooltip.style('top', (d3.event.pageY + 10) + 'px')
				.style('left', (d3.event.pageX + 10) + 'px');
		};

		 var tooltipOff = function() {
					tooltip.style('visibility', 'hidden');
		};

		d3.csv('network.csv', function(dataLoad) {

			var dataSorted = dataLoad.sort(function(a,b) {
				return d3.descending(+a.score, +b.score);
			})

			var data = dataSorted.filter(function(d,i) {
				if (i<25) {
					return d;
				}});

			widthScale.domain([ 0, d3.max(data, function(d) {
				return +d.score;
			}) ]);

			heightScale.domain(data.map(function(d) { return d.country; } ));

			var rects = svg.selectAll('rect')
							.data(data)
							.enter()
							.append('rect');

			rects.attr('x', padding[3])
				 .attr('y', function(d) {
					return heightScale(d.country);
				 })
				 .attr('width',0)
				 .attr('fill','#FFFFFF')
				 .transition()
				 .duration(2000)
				 .attr('width', function(d) {
					return widthScale(d.score);
				 })
				 .attr('height', heightScale.rangeBand())
				 .attr('fill','#3A96B7');

			rects.on('mouseover', tooltipOn)
				.on('mousemove', tooltipMove)
				.on('mouseout', tooltipOff);

			svg.append('g')
				.attr('class', 'x axis')
				.attr('transform', 'translate(' + padding[3] + ',' + (h - padding[2]) + ')')
				.call(xAxis);

			svg.append('g')
				.attr('class', 'y axis')
				.attr('transform', 'translate(' + (padding[3] - 5) + ',0)')
				.call(yAxis);

		});

	</script>

</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Sequences sunburst</title>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <link rel="stylesheet" type="text/css"
      href="https://fonts.googleapis.com/css?family=Open+Sans:400,600">
    <link rel="stylesheet" type="text/css" href="sequences.css"/>
  </head>
  <body>
    <div id="main">
      <div id="sequence"></div>
      <div id="chart">
        <div id="explanation" style="visibility: hidden;">
          <span id="percentage"></span><br/>
          of visits begin with this sequence of pages
        </div>
      </div>
    </div>
    <div id="sidebar">
      <input type="checkbox" id="togglelegend"> Legend<br/>
      <div id="legend" style="visibility: hidden;"></div>
    </div>
    <script type="text/javascript" src="sequences.js"></script>
    <script type="text/javascript">
      // Hack to make this example display correctly in an iframe on bl.ocks.org
      d3.select(self.frameElement).style("height", "700px");
  </script> 
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 70, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
		.ticks(d3.time.months)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name]};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
  		.selectAll("text")
  		.style("text-anchor","end")
  		.attr("transform", function(d) {
    return "rotate(-45)"});

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Cases");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
    body {
        /*margin: 200px 500px 100px 500px;*/
    }

    #inputs {
        display: inline-block;
        margin: 0 0 0 0.5em;
    }
    #panel  {
        display: inline-block;
        margin: 0 0 0 100px;
        border: none;
        box-sizing: border-box;
        background-color: black;
    }

    #metrics {
        display: inline-block;
    }

    label, input {
        text-align: left;
        width: 3.5em;
        color: orange;
        /*padding-left: 1em;*/
        background-color: black;
        outline: none;
        border: none;
    }

    circle {
        stroke: black;
        /*stroke: #ccc;*/
        /*stroke-opacity: 0.5;*/
        /*stroke-width: 6;*/
    }

    svg {
        display: block;
        overflow: visible;
        border: none;
        background: black;
        margin: 0 100px 0 100px;
    }

    text {
        text-anchor: middle;
    }

    rect {
        stroke: #ccc;
    }

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<!--<script src="d3 CB.js"></script>-->
<script
    src="https://cdnjs.cloudflare.com/ajax/libs/tinycolor/1.1.2/tinycolor.min.js"></script>
<script src="https://gitcdn.xyz/repo/cool-Blue/d3-lib/master/filters/shadow.js"></script>
<script
    src="https://gitcdn.xyz/repo/cool-Blue/d3-lib/master/elapsedTime/elapsed-time-1.0.js"></script>
<script>
    var inputs = d3.select("body").append("div")
            .attr("id", "metrics")
            .append("div").attr({id: "panel"})
            .append("div").attr({id: "inputs"}),
        nodeCount = inputs.append("label")
            .attr("for", "nodeCount")
            .text("nodes: ")
            .append("input")
            .attr({
                id       : "nodeCount",
                class    : "numIn",
                type     : "number",
                min      : "100",
                max      : "5,000",
                step     : "100",
                inputmode: "numeric"
            });

    var elapsedTime = ElapsedTime("#panel", {
            border : 0, margin: 0, "box-sizing": "border-box",
            padding: "0 0 0 3px", background: "black", "color": "orange"
        })
            .message(function(value) {
                var this_lap = this.lap().lastLap, aveLap = this.aveLap(this_lap)
                return 'alpha:' + d3.format(" >7,.3f")(value)
                    + '\ttick time:' + d3.format(" >8,.4f")(this_lap)
                    + ' (' + d3.format(" >4,.3f")(this.aveLap(this_lap)) + ')'
                    + '\tframe rate:' + d3.format(" >4,.1f")(1 / aveLap) + " fps"
                    + '\ttime:' + d3.format(" >4,.1f")(this.t()) + " sec"
            }),

        width = 960 - 200,
        height = 500 - elapsedTime.selection.node().clientHeight,
        padding = 1, // separation between nodes
        maxRadius = 7;

    var n = 500, // total number of nodes
        m = 1, // number of distinct layers
        c  = 10,
        g  = 0.01, g2 = 0.05,
        f1 = 0.01, f2 = 0.001,
        q2 = -4000;

    var x = d3.scale.linear()
            .domain([-width / 2, width / 2])
            .range([0, width]),
        y = d3.scale.linear()
            .domain([-height / 2, height / 2])
            .range([height, 0]);

    var tick = (function() {
            var phase = -1, stage1 = true;

            function tick(e) {
                viz.circle.each(viz.collide(e.alpha));
                if(e.alpha < 0.02 || !(phase = ++phase % 6)) {
                    elapsedTime.mark(e.alpha);
                    viz.circle.attr({
                        cx: function(d) {
                            return d.x;
                        },
                        cy: function(d) {
                            return d.y;
                        }
                    });
                }
                if(stage1 && e.alpha < 0.07) {
                    console.log("stage2")
                    force.friction(f2)
                        .charge(q2)
                        .gravity(g2)
                        .start().alpha(e.alpha);
                    stage1 = false;
                }
                force.alpha(e.alpha / 0.99 * 0.99)
            }

            tick.reset = function() {
                stage1 = true;
            };
            return tick;
        })(),
        force = d3.layout.force()
            .size([width, height])
            .gravity(.01)
            .charge(0)
            .friction(.01)
            .on("tick", tick)
            .on("start", function() {
                elapsedTime.start(1000);
                tick.reset();
                force
                    .gravity(g)
                    .charge(0)
                    .friction(f1)
            });

    var svg = d3.select("body").append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g"),
        bubble = Bubble(svg);

    var viz = update(force, n, padding);

    nodeCount
        .property("value", n)
        .on("change", function() {
            viz = update(force, this.value, padding);
            this.blur();
        });

    elapsedTime.selection.style({
        width: (width
        - parseFloat(window.getComputedStyle(d3.select("#inputs").node()).getPropertyValue("width"))
        - parseFloat(window.getComputedStyle(d3.select("#inputs").node()).getPropertyValue("margin-left")))
        + "px"
    });

    function Collide(nodes, padding) {
        // Resolve collisions between nodes.
        var maxRadius = d3.max(nodes, function(d) {
            return d.q.radius
        });
        return function collide(alpha) {
            var quadtree = d3.geom.quadtree(nodes);
            return function(d) {
                var r   = d.radius + maxRadius + padding,
                    nx1 = d.x - r,
                    nx2 = d.x + r,
                    ny1 = d.y - r,
                    ny2 = d.y + r;
                quadtree.visit(function v(quad, x1, y1, x2, y2) {
                    var possible = !(x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1);
                    if(quad.point && (quad.point !== d) && possible) {
                        var x = d.x - quad.point.x,
                            y = d.y - quad.point.y,
                            l = Math.sqrt(x * x + y * y),
                            r = d.radius + quad.point.radius + padding;
                        if(l < r) {
                            for(; Math.abs(l) == 0;) {
                                x = Math.round(Math.random() * r);
                                y = Math.round(Math.random() * r);
                                l = Math.sqrt(x * x + y * y);
                            }
                            ;
                            //move the nodes away from each other along the radial (normal) vector
                            //taking relative size into consideration, the sign is already established
                            //in calculating x and y
                            l = (r - l) / l * (1 + alpha);

                            // if the nodes are in the wrong radial order for there size, swap radius ordinate
                            var rel = d.radius / quad.point.radius, bigger = (rel > 1),
                                rad = d.r / quad.point.r, farther = rad > 1;
                            if(bigger && farther || !bigger && !farther) {
                                var d_r = d.r;
                                d.r = quad.point.r;
                                quad.point.r = d_r;
                                d_r = d.pr;
                                d.pr = quad.point.pr;
                                quad.point.pr = d_r;
                            }
                            // move nodes apart but preserve their velocity
                            d.x += (x *= l);
                            d.y += (y *= l);
                            d.px += x;
                            d.py += y;
                            quad.point.x -= x;
                            quad.point.y -= y;
                            quad.point.px -= x;
                            quad.point.py -= y;
                        }
                    }
                    return !possible;
                });
            };
        }
    }
    function initNodes(force, n, padding) {
        var rMax = Math.pow(500 / n * 50, 0.5);
        force.stop()
        force.nodes(d3.range(n).map(function() {
            var layer = Math.floor(Math.random() * m),
                u = Math.random(),
                v     = -Math.log(u);
            return {
                radius: Math.sqrt(v) * rMax,
                color : Math.floor(u * c),
                x     : x(0),
                y     : y(0),
                get v() {
                    var d = this;
                    return {
                        x: x.invert(d.x - d.px || d.x || 0),
                        y: y.invert(d.y - d.py || d.y || 0)
                    }
                },
                get polar() {
                    var xx = x.invert(this.x), yy = y.invert(this.y);
                    return [Math.sqrt(xx * xx + yy * yy), Math.atan2(yy, xx)]
                },
                set polar(p) {
                    var r = p[0], theta = p[1];
                    return [this.x = x(r * Math.cos(theta)), this.y = y(r
                        * Math.sin(theta))]
                },
                get r() {
                    var xx = x.invert(this.x), yy = y.invert(this.y);
                    return Math.sqrt(xx * xx + yy * yy);
                },
                get theta() {
                    var xx = x.invert(this.x), yy = y.invert(this.y);
                    return Math.atan2(yy, xx)
                },
                set r(_) {
                    var theta = this.theta;
                    return [this.x = x(_ * Math.cos(theta)), this.y = y(_
                        * Math.sin(theta))]
                },
                set theta(_) {
                    var r = this.r;
                    return [this.x = x(r * Math.cos(_)), this.y = y(r * Math.sin(_))]
                },

                get pr() {
                    var xx = x.invert(this.px), yy = y.invert(this.py);
                    return Math.sqrt(xx * xx + yy * yy);
                },
                get ptheta() {
                    var xx = x.invert(this.px), yy = y.invert(this.py);
                    return Math.atan2(yy, xx)
                },
                set pr(_) {
                    var theta = this.ptheta;
                    return [this.px = x(_ * Math.cos(theta)), this.py = y(_
                        * Math.sin(theta))]
                },
                set ptheta(_) {
                    var r = this.pr;
                    return [this.px = x(r * Math.cos(_)), this.py = y(r * Math.sin(_))]
                },
            };
        }));

        force.nodes().forEach(function(d) {
            d.q = {};
            Object.keys(d).forEach(function(p) {
                if(!isNaN(d[p])) Object.defineProperty(d.q, p, {
                    get: function q() {
                        var dq = Math.round(d[p]);
                        if(isNaN(dq)) console.log([myName(arguments), d[p]].join(": "));
                        return dq
                    }
                });
            })
        });
        force.start();
        return Collide(force.nodes(), padding);
    }
    function update(force, n, padding) {
        elapsedTime.start(1000);

        return {
            collide: initNodes(force, n, padding),
            circle : (function() {
                var update = svg.selectAll("circle")
                    .data(force.nodes());
                update.enter().append("circle");
                update.exit().remove();
                update.attr("r", function(d) {
                    return d.radius;
                })
                    //            .style("fill", function (d) {
                    //              return d.color;
                    //            })
                    .call(bubble.call)
                    .call(force.drag)
                return update;
            })()
        };
    }
    function Bubble(svg) {
        var colors = d3.range(20).map(d3.scale.category10()).map(function(d) {
            return filters.sphere(svg, d, 1)
        });
        return {
            call: function(selection) {
                selection.style("fill", function(d) {
                    return colors[d.color]
                })
            },
            map : function(d, i, data) {
                d.fill = colors[~~(Math.random() * 20)];
            },
            fill: function(d) {
                return d.fill
            }
        }
    }
    ;
    function myName(args) {
        return /function\s+(\w*)\(/.exec(args.callee)[1];
    }
</script>
</body>

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Assignment 3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
				background-color: gray;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 1400)
						.attr("height", 800);



			d3.csv("legobarchart.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.numtypes, +b.numtypes);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});
												

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 150)
					.attr("y", function(d, i) {
						return i * 20 + 75;
					})
					.attr("width", function(d) {
						return d.numtypes * 20;
					})
					.attr("height", 16)
					.attr("fill", "blue")
					.append("title")
					.text(function(d) {
						return d.Theme + " had " + d.numtypes + " sets in 2014.";
					});

			});


		</script>

	</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
path {
  fill: #eaeaea;
  stroke: #000;
}

circle.vertex {
  fill: red;
  stroke: none;
  pointer-events: none;
}

circle.circumcircle {
  fill: none;
  stroke: rgba(0, 0, 0, 0.3);
}
  </style>
</head>

<body>
  <script>
var width = 960,
    height = 500;

var numVertices = 30;
var vertices = d3.range(numVertices).map(function(d) {
  return [Math.random() * width, Math.random() * height];
});

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
    .on("mousemove", function() { vertices[0] = d3.mouse(this); redraw(); })
    .on("click", function() {
      useVoronoi = !useVoronoi;
      redraw();
    })
    .on("contextmenu", function(e) {
      d3.event.preventDefault();
      drawCircumcircles = !drawCircumcircles;
      redraw();
    });

// Draw vertices on top
var shapeContainer = svg.append("g");
var vertexContainer = svg.append("g");

var path = shapeContainer.append("g").selectAll("path");

var voronoi = d3.geom.voronoi()
    .clipExtent([[0, 0], [width, height]]);

var useVoronoi = false;
var drawCircumcircles = true;
function redraw() {
  vertexContainer.selectAll("circle.vertex")
    .data(vertices)
    .attr("transform", function(d) { return "translate(" + d + ")"; })
  .enter().append("circle")
    .attr("class", "vertex")
    .attr("r", 2);

  var voronoiPolygons = voronoi(vertices);
  var delaunayTriangles = d3.geom.delaunay(vertices);

  var shapesToUse = useVoronoi ? voronoiPolygons : delaunayTriangles;

  path = path
      .data(shapesToUse, polygon);

  path.exit().remove();

  path.enter().append("path")
      .attr("d", polygon);

  path.order();

  var circumcircleData = drawCircumcircles ? delaunayTriangles.map(function(triangle) {
    var a = triangle[0];
    var b = triangle[1];
    var c = triangle[2];

    // get the circumcircle's center point:
    // https://en.wikipedia.org/wiki/Circumscribed_circle#Cartesian_coordinates_2
    var d = 2 * ( a[0] * (b[1] - c[1]) + b[0] * (c[1] - a[1]) + c[0] * (a[1] - b[1]));

    var a2 = a[0] * a[0] + a[1] * a[1];
    var b2 = b[0] * b[0] + b[1] * b[1];
    var c2 = c[0] * c[0] + c[1] * c[1];
    var u_x = ( a2 * (b[1] - c[1]) + b2 * (c[1] - a[1]) + c2 * (a[1] - b[1])) / d;
    var u_y = ( a2 * (c[0] - b[0]) + b2 * (a[0] - c[0]) + c2 * (b[0] - a[0])) / d;

    var xdiff = a[0] - u_x;
    var ydiff = a[1] - u_y;
    var r = Math.sqrt(xdiff * xdiff + ydiff * ydiff);
    return {
      c: [u_x, u_y],
      r: r
    };
  }) : [];

  var circumcircles = shapeContainer.selectAll("circle.circumcircle")
      .data(circumcircleData);

  circumcircles.enter().append("circle")
      .attr("class", "circumcircle");

  circumcircles
      .attr("transform", function(d) { return "translate(" + d.c[0] + ", " + d.c[1] + ")"; })
      .attr("r", function(d) { return d.r });

  circumcircles.exit().remove();
}

function polygon(d) {
  return "M" + d.join("L") + "Z";
}

redraw();
  </script>
</body>
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>Donut Chart - Centered Labels</title>

	<!-- D3.js -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
	
	<!-- Month names -->
	<link href='http://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>
	
	<style>
		body {
			font-family: 'Pacifico', sans-serif;
			fill: #333333;
			font-size: 16px;
			text-align: center;
		}
	</style>
  </head>
  <body>

	<div id="chart"></div>
	
    <script>
	
		////////////////////////////////////////////////////////////
		//////////////////////// Set-up ////////////////////////////
		////////////////////////////////////////////////////////////

		var screenWidth = window.innerWidth;

		var margin = {left: 20, top: 20, right: 20, bottom: 20},
			width = Math.min(screenWidth, 500) - margin.left - margin.right,
			height = Math.min(screenWidth, 500) - margin.top - margin.bottom;
					
		var svg = d3.select("#chart").append("svg")
					.attr("width", (width + margin.left + margin.right))
					.attr("height", (height + margin.top + margin.bottom))
				   .append("g").attr("class", "wrapper")
					.attr("transform", "translate(" + (width / 2 + margin.left) + "," + (height / 2 + margin.top) + ")");

		////////////////////////////////////////////////////////////// 
		///////////////////// Data &  Scales ///////////////////////// 
		////////////////////////////////////////////////////////////// 

		//Some random data
		var donutData = [
			{name: "Antelope", 	value: 15},
			{name: "Bear", 		value: 9},
			{name: "Cheetah", 	value: 19},
			{name: "Dolphin", 	value: 12},
			{name: "Elephant",	value: 14},
			{name: "Flamingo", 	value: 21},
			{name: "Giraffe", value: 18},
			{name: "Other", 	value: 8}
		];
			
		//Create a color scale
		var colorScale = d3.scale.linear()
		   .domain([1,3.5,6])
		   .range(["#2c7bb6", "#ffffbf", "#d7191c"])
		   .interpolate(d3.interpolateHcl);

		//Create an arc function   
		var arc = d3.svg.arc()
			.innerRadius(width*0.75/2) 
			.outerRadius(width*0.75/2 + 30);

		//Turn the pie chart 90 degrees counter clockwise, so it starts at the left	
		var pie = d3.layout.pie()
			.startAngle(-90 * Math.PI/180)
			.endAngle(-90 * Math.PI/180 + 2*Math.PI)
			.value(function(d) { return d.value; })
			.padAngle(.01)
			.sort(null);
		 
		////////////////////////////////////////////////////////////// 
		//////////////////// Create Donut Chart ////////////////////// 
		////////////////////////////////////////////////////////////// 

		//Create the donut slices and also the invisible arcs for the text 
		svg.selectAll(".donutArcSlices")
			.data(pie(donutData))
		  .enter().append("path")
			.attr("class", "donutArcSlices")
			.attr("d", arc)
			.style("fill", function(d,i) {
				if(i === 7) return "#CCCCCC"; //Other
				else return colorScale(i); 
			})
			.each(function(d,i) {

				//A regular expression that captures all in between the start of a string (denoted by ^) and a capital letter L
				//The letter L denotes the start of a line segment
				//The "all in between" is denoted by the .+? 
				//where the . is a regular expression for "match any single character except the newline character"
				//the + means "match the preceding expression 1 or more times" (thus any single character 1 or more times)
				//the ? has to be added to make sure that it stops at the first L it finds, not the last L 
				//It thus makes sure that the idea of ^.*L matches the fewest possible characters
				//For more information on regular expressions see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
				var firstArcSection = /(^.+?)L/; 
					
				//Grab everything up to the first Line statement
				//The [1] gives back the expression between the () (thus not the L as well) which is exactly the arc statement
				var newArc = firstArcSection.exec( d3.select(this).attr("d") )[1];
				//Replace all the comma's so that IE can handle it -_-
				//The g after the / is a modifier that "find all matches rather than stopping after the first match"
				newArc = newArc.replace(/,/g , " ");
								
				//Create a new invisible arc that the text can flow along
				svg.append("path")
					.attr("class", "hiddenDonutArcs")
					.attr("id", "donutArc"+i)
					.attr("d", newArc)
					.style("fill", "none");
			});
			
		//Append the label names on the outside
		svg.selectAll(".donutText")
			.data(donutData)
		   .enter().append("text")
			.attr("class", "donutText")
			.attr("dy", -13)
		   .append("textPath")
			.attr("startOffset","50%")
			.style("text-anchor","middle")
			.attr("xlink:href",function(d,i){return "#donutArc"+i;})
			.text(function(d){return d.name;});
	
	</script>
	
  </body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <link rel="stylesheet" type="text/css" href="style.css">
  <script src="scrubbing.js"></script>
  <style>
    .sin {
background-color: #bdeae8 !important;
}
.cos {
background-color: #bbb9de !important;
}
  </style>
</head>

<body>
  <svg width=960 height=250></svg>
  <div id="math">
    <div class="angle-container unselectable">
      <div>Angle:</div> <input class="angle" value="0"/>
      
      <span class="unit sin">sin(<span class="angle-in">0</span>) = <span class="sin-out">0</span></span>
      <span class="unit cos">cos(<span class="angle-in">0</span>) = <span class="cos-out">1</span></span>
      <!-- add dial to directly rotate -->
    </div>
		<div id="mtx_transform" class="matrix unselectable" style="width:180px"> 
      <div class="transforms cos"></div><div class="transforms sin"></div> <input value="0.0"/>
  <div class="transforms sin"></div><div class="transforms cos"/></div> <input value="0.0"/>
			<div plain style="position: absolute; top: 120px;">0</div>
			<div plain style="position: absolute; top: 120px; left:70px">0</div>
			<div plain style="position: absolute; top: 120px; left:130px">1</div>
			<div class="label">
			the transformation matrix
			<br>
			<span>(adjust the numbers!)</span>
			</div>
		</div>
		<div id="mtx_input"  class="matrix unselectable" style="width:60px">
			<div plain style="position: absolute; top: 0px;">x</div>
			<div plain style="position: absolute; top: 60px;">y</div>
			<div plain style="position: absolute; top: 120px;">1</div>
			<div class="label">
			a vector
			<br>
			<span>(hover over the dots)</span>
			</div>
		</div>
		
		<div class="equals"></div>
		<div id="mtx_output"  class="matrix" style="width:60px">
			<div>x'</div>
			<div>y'</div>
			<div>1</div>
			<div class="label">
			new vector
			<br>
			<span>(hover over the dots)</span>
			</div>
		</div>
    
  </div>
  <script>
    var transform = {}; // global transform
    var t = transform;  // convenience
    var bullets = []; // global data
    
    var mtx_inputs = document.querySelectorAll("#mtx_input div");
    var mtx_outputs = document.querySelectorAll("#mtx_output div");
    var mtx_transforms = document.querySelectorAll("#mtx_transform input");
    
    var transforms = d3.selectAll("div.transforms");
    var angle = d3.select("input.angle").node();
    var angleIn = d3.selectAll("span.angle-in");
    var sinOut = d3.select("span.sin-out")
    var cosOut = d3.select("span.cos-out")
    
    function calculate(x,y){
      x = x || 0;
      y = y || 0;
      var x2 = t.a*x + t.b*y + t.tx;
      var y2 = t.c*x + t.d*y + t.ty;
      return {x:x2, y:y2};
    }
    
    function render() {
      var xscale = d3.scale.linear()
        .domain([-1, 1])
        .range([350, 510]);
      var yscale = d3.scale.linear()
      .domain([-1, 1])
      .range([200, 50])
      
      var transformed = bullets.map(function(d) {
        return calculate(d.x, d.y)
      })
      
      var svg = d3.select("svg");
      
      function hover(d,i) {
        mtx_inputs[0].innerHTML = bullets[i].x.toFixed(1);
        mtx_inputs[1].innerHTML = bullets[i].y.toFixed(1);
        d3.select(mtx_inputs[0]).style("border", "3px solid red");
        d3.select(mtx_inputs[1]).style("border", "3px solid red");
        function filter(f,j) { return j === i }
        d3.selectAll("line")
          .filter(filter).style("stroke", "red")
        d3.selectAll("circle.bullet")
          .filter(filter).style("stroke", "red")
        d3.selectAll("circle.transformed")
          .filter(filter).style({stroke:"red", fill:"red"})
      }
      function mouseout(d,i) {
        mtx_inputs[0].innerHTML = "x";
        mtx_inputs[1].innerHTML = "y";
        d3.select(mtx_inputs[0]).style("border", "3px solid #eee");
        d3.select(mtx_inputs[1]).style("border", "3px solid #eee");
        d3.selectAll("line").style("stroke", "#111");
        d3.selectAll("circle.bullet").style("stroke", "#111")
        d3.selectAll("circle.transformed").style({stroke:"#111", fill:"#111"})
      }
      
      var lines = svg.selectAll("line")
        .data(bullets)
      lines.enter().append("line")
        .on("mouseover", hover)
        .on("mouseout", mouseout)
      lines
        .transition()
        .duration(170)
        .ease("linear")
        .attr({
          x1: function(d,i) { return xscale(d.x) },
          y1: function(d,i) { return yscale(d.y) },
          x2: function(d,i) { return xscale(transformed[i].x)},
          y2: function(d,i) { return yscale(transformed[i].y)},
          stroke: "#111"
        })

      
      
      var circlesB = svg.selectAll("circle.bullet")
        .data(bullets)
      circlesB.enter().append("circle").classed("bullet", true)
        .on("mouseover", hover)
        .on("mouseout", mouseout)
      circlesB.attr({
        r: 4,
        fill: "none",
        stroke: "#111"
      }).attr({
        cx: function(d) { return xscale(d.x) },
        cy: function(d) { return yscale(d.y) },
      })
      
      
      var circlesT = svg.selectAll("circle.transformed")
        .data(transformed)
      circlesT.enter().append("circle").classed("transformed", true)
        .on("mouseover", hover)
        .on("mouseout", mouseout)
      circlesT.attr({
        r: 8,
        fill: "#111",
        stroke: "#111"
      })
      .transition()
      .duration(170)
      .ease("linear")
      .attr({
        cx: function(d) { return xscale(d.x) },
        cy: function(d) { return yscale(d.y) },
      })
      
    }
    
    function updateMatrixLeft() {
      var theta = angle.value;
			//https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations
      var sin = Math.sin(theta*Math.PI/180).toFixed(2);
      var cos = Math.cos(theta*Math.PI/180).toFixed(2);
      transform.a = cos;
      transform.b = -sin;
      transform.c = sin;
      transform.d = cos;
      transform.tx = parseFloat(mtx_transforms[0].value) || 0;
      transform.ty = parseFloat(mtx_transforms[1].value) || 0;
      /*
      mtx_transforms[0].value = cos;
      mtx_transforms[1].value = -sin;
      mtx_transforms[3].value = sin;
      mtx_transforms[4].value = cos;

      transform.a = parseFloat(mtx_transforms[0].value) || 0;
      transform.b = parseFloat(mtx_transforms[1].value) || 0;
      transform.tx = parseFloat(mtx_transforms[2].value) || 0;
      transform.c = parseFloat(mtx_transforms[3].value) || 0;
      transform.d = parseFloat(mtx_transforms[4].value) || 0;
      transform.ty = parseFloat(mtx_transforms[5].value) || 0;
      */
      var tvalues = [
        transform.a, transform.b, transform.c, transform.d
      ]
      transforms.text(function(d,i) { return tvalues[i] })
      
      angleIn.text(theta);
      sinOut.text(sin);
      cosOut.text(cos);
      render();
    }
    
    setupScrubbing(updateMatrixLeft);
    for(var i=0;i<mtx_transforms.length;i++){
      var input = mtx_transforms[i];
      input.onchange = updateMatrixLeft;
      makeScrubbable(input);
    }
    makeScrubbable(angle, 5);
    
    
    
    // get the data and trigger the initial rendering
    d3.json("bullets.json", function(err, data) {
      bullets = data.map(function(d) {
        return {x: d.x, y: d.y};
      });
      updateMatrixLeft();
    })
    
  </script>
</body><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  background-color: #f5f5f5;
}

.axis path,
.axis line {
  fill: none;
  stroke: #a9a9a9;
  shape-rendering: crispEdges;
}
  
.axis text{
   stroke: #a9a9a9
 }


.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([width, 0]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("linear")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name], name:name};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { console.log(d); return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });
  
	city.selectAll('circle')
    .data(function(d){ return d.values})
    .enter().append('circle')
    .attr("cx", function(d) { return x(d.date) })
    .attr("cy", function(d) { return y(d.temperature) })
    .attr("r", 2.4)
  	.style('fill', function(d){ return color(d.name)});

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="hermite.js"></script>
    <style>
        .panel {
            fill: black;
        }

        canvas {
            display: none;
        }
        .slider {
            width: 400px;
        }

        #phosphene-image {
            width: 400px;
        }
    </style>
</head>
<body>
<canvas id="phosphene-image"></canvas>
<div class="container"></div>
<div class="controls">
    <input class="slider" type="range" min="8" max="32" value="8" step="1"><br>
    <div class="count"></div>
</div>

<script>
    var link = 'https://lh3.googleusercontent.com/-2Dq25Dtewk4/VqkoGGLdtxI/AAAAAAAAC7Q/r3BSJnQoSo0/s609-Ic42/BionicEye2.jpg';
    var outputW = 400;

    var hermite = Hermite.init('hermite-worker.js');

    var phospheneCanvas = document.getElementById('phosphene-image');
    var phospheneCtx = phospheneCanvas.getContext('2d');

    var root = d3.select('.container').append('svg');
    var panel = root.append('rect').classed('panel', true);

    root.append('defs').append('filter')
        .attr({
            id: 'f1',
            x: 0,
            y: 0
        })
        .append('feGaussianBlur')
        .attr({
            in: 'SourceGraphic',
            stdDeviation: 2
        });

    var imgData, img;

    d3.select('.slider').on('input', function(d){
        buildGrid(this.value);
    });

    img = new Image;
    img.onload = function(){
        buildGrid(8);
    };
    img.crossOrigin = '';
    img.src = link;

    function buildGrid(outputResolution){
        d3.select('.count').text(outputResolution * outputResolution + ' phosphenes');

        var imgW = outputResolution;
        var imgH = imgW * img.height / img.width;

        phospheneCanvas.width = img.width;
        phospheneCanvas.height = img.height ;
        phospheneCtx.drawImage(img, 0, 0, img.width, img.height);

        hermite.resize({
            source: phospheneCanvas,
            width: imgW,
            height: imgH
        }, function(output) {

            imgData = phospheneCtx.getImageData(0, 0, imgW, imgH).data;

            var data = [];
            var dataIdx = -1;

            var r, g, b, gray;
            for(var i = 0; i < imgData.length / 4; i++){
                if(i % imgW === 0){
                    dataIdx++;
                    data.push([]);
                }
                r = imgData[i*4];
                g = imgData[i*4+1];
                b = imgData[i*4+2];
                gray = r*0.2126 + g*0.7152 + b*0.0722;
                data[dataIdx].push(gray);
            }
            buildPhosphenes(data, imgH, imgW);
        });
    }

    function buildPhosphenes(data, imgH, imgW){
        var outputH = outputW * imgH / imgW;
        var cellSize = outputW / imgW;
        root.attr({width: outputW, height: outputH});
        panel.attr({width: outputW, height: outputH});

        var rowGroup = root.selectAll('g.row')
            .data(data);
        rowGroup.enter().append('g')
            .classed('row', true)
            .attr({
                transform: function(d, i){
                    var y = cellSize * i;
                    var x = 0;
                    if(i % 2 === 0){
                        x += cellSize / 2;
                    }
                    return 'translate(' + [x, y] + ')';
                }
            });
        rowGroup
            .attr({
                transform: function(d, i){
                    var y = cellSize * i;
                    var x = 0;
                    if(i % 2 === 0){
                        x += cellSize / 4;
                    }
                    else{
                        x -= cellSize / 4;
                    }
                    return 'translate(' + [x, y] + ')';
                }
            });
        rowGroup.exit().remove();

        var cells = rowGroup.selectAll('circle.cell')
            .data(function(d, i){
                return d;
            });
        cells.enter().append('circle')
            .classed('cell', true);
        cells.attr({
                r: (cellSize / 2) * 0.9,
                fill: function(d){
                    return d3.rgb(d, d, d).toString();
                },
                filter: 'url(#f1)',
                cy: cellSize / 2,
                cx: function(d, i){
                    return cellSize * i + cellSize / 2;
                }
            });
        cells.exit().remove();
    }

</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>d3 | p5 canvas circles</title> 
  <meta name="author" content="Sundar Singh | eesur.com">
  
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script> 
   <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.4.7/p5.min.js"></script>
</head>
<body>

<section id="vis"></section>

<script src="sketch.js" charset="utf-8"></script>

</body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Bar chart</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
			}
			
			h1 {
				font-size: 29px;
				margin: 0;
				font-family: arial;
			}

			p {
				font-family: arial;
				font-size: 20px;
				margin: 10px 0 0 0;
			}
			p2 {
				font-family: arial;
				font-size: 20px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}
			
			rect:hover {
				fill: DodgerBlue ;
			}
			
			
			.axis path,
			.axis line {
				fill: none;
				stroke: Gainsboro ;
				shape-rendering: roundEdges;
			}
			
			.axis text {
				font-family: arial;
				font-size: 10px;
				color: Gainsboro 
			}
			
			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

			<h1>TOTAL FELONIES ON NEW YORK FROM 2000 TO 2011</h1>
			
			<p>Major an Minor crimes Index &ldquo;Total Felonies&rdquo; by year. Source: <a href="https://data.cityofnewyork.us/Public-Safety/Historical-New-York-City-Crime-Data/hqhv-9zeg">NYC open Data</a>, 2011</p>
	
		<script type="text/javascript">		


			var w = 800;
			var h = 600;
			var barPadding = 1;
			
			var padding = [ 10, 60, 40, 50 ];
			
			
			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.5);
			
			var dataset = [ 269755, 268753, 265513, 237986, 208286, 197710, 191967, 186914, 170490, 28970,
							26676, 25610 ];
			
			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");
							
			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");

			
			
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
		
		
						
			d3.csv("FelonyOffensesVSArrests-2000-2011.csv", function(data) {

							   		
				data.sort(function(a, b) {
					return d3.descending(+a.TOTALFELONYOFFENSES, +b.TOTALFELONYOFFENSES);

				});
				
				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.TOTALFELONYOFFENSES;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.YEAR; } ));
				
						
				var lines = svg.selectAll("line")
								.data(data)
								.enter()
								.append("line")
								
				//lines.style("stroke", "darkgrey")
					//.style("stroke-with", 2);
				//lines.attr("x1", 5)
					//.attr("y1", 5)
					//.attr("x2",	800)
					//.attr("y2", 5)
						
										
				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");
								
						
				rects.attr("x", padding[3])
					.attr("fill", "DimGray")
					.attr("y", function(d, i) {
						return heightScale(d.YEAR);
					})
				 
			   .attr("width", function(d) {
						return widthScale(d.TOTALFELONYOFFENSES);
					})
			   .attr("height", 18)
			   		.append("title")
			   		.style("fill", "white")
					.text(function(d) {
					return +d.YEAR + " , year in which take place " + +d.TOTALFELONYOFFENSES + " felonies on NYC ";
					});
			   
			  // var texts = svg.selectAll("text")
								//.data(data)
								//.enter()
								//.append("text");
								
								//texts.style("fill", "DarkGray");
								//texts.attr("x", 20)
								//.attr("y",35)
								//.attr("font-size", 29)
								//.attr("font-family", "Arial")
								//.attr("font-weight", "normal")
								//.text(function(d) {
					//return "TOTAL FELONIES ON NEW YORK FROM 2000 TO 2011"
					//});
								
			 var things = svg.selectAll("p")
			   .data(data)
			   .enter()
			   .append("p")
			   
			   things.style ("fill", "black");
			   things.attr("x", 20) 
			   .attr("y", 5)
			   .attr("font-family", "arial")
			   .attr("font-size", "11px")
			   .text(function(d) {
			   		return +d.TOTALFELONYOFFENSES;
			   
			   })
			   
			   svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);
					
					svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3] - 5) + ",0)")
					.call(yAxis);
			    
			 });
	
		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <!--Edit the title of the page-->
    <title>CartoDB Point Clustering</title>
    <meta name="description" content="">
    <meta name="author" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css" />
    <!--[if lte IE 8]>
      <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.ie.css" />
    <![endif]-->
    <!--Switch between the different themes changing the stylesheet below - light-theme.css |dark-theme.css -->

    <style type="text/css">
    /* Change the styles below in order to customize your template */

    body{font-family: Helvetica, Arial; font-weight: regular; font-size: 15px; color: #555; background-color: #FFF; margin: 0;}

    .wrapper{display: block; padding: 4px 30px 0 30px;}

    .map{background-color:#eee; position: absolute; top: 0; left: 0; bottom: 0; width: 100%; *height:100%;}
    .sidepanel{background-color:rgba(0,0,0,0.6); position: absolute; top: 50px; right: 50px; bottom: 0; width: 33%; height: 77%; overflow: scroll; color: #fff; text-shadow: 2px 2px 2px #333; display: none;}
    .clicked { }

    /* Here are the styles that makes the template responsive */

    @media only screen and (max-width: 768px) {
      .map{position: inherit; height: 400px; width: 100%; display: block;}
      .sidepanel{position: inherit; width: 100%;}
    }

    @media only screen and (max-width: 480px) {
      .map {height: 300px;}
    }
    </style>
  </head>
  <body>

    <div class="map" id="map"></div>

    <div class="sidepanel">
      <div class="wrapper">
        <div class="here"></div>
      </div>
    </div>

    <script src="https://maps.googleapis.com/maps/api/js?sensor=false&v=3.8"></script>
    <script src="http://libs.cartocdn.com/cartodb.js/v3/cartodb.js"></script>

    <script type="text/javascript">
      var map;

      function addCursorInteraction(layer) {
        var sql = cartodb.SQL({ user: 'andrew' });

        layer.bind('featureClick', function(e, latlon, pxPos, clickData, layer) {
          $('.sidepanel').show()
          sql.execute("SELECT * FROM twain WHERE ST_Intersects(the_geom, CDB_LatLng({0},{1}))".format(clickData.lat, clickData.lon)).done(function(data) {
              console.log(data)
              // get a count of overlapping points
              $('.here').append($('<p>').text('Overlapping points: {0}'.format(data.rows.length)));

              // do something with each point in the return
              // here just display the value of two columns, cartodb_id and source
              for(var i=0; i<data.rows.length; i++){
                $('.here').append($('<p>').text('Point {0}: {1}'.format(data.rows[i].cartodb_id, data.rows[i].source)));
              }
          });

        });


        var hovers = [];

        layer.bind('featureOver', function(e, latlon, pxPos, data, layer) {
          hovers[layer] = 1;
          if(_.any(hovers)) {
            $('#map').css('cursor', 'pointer');
          }
        });

        layer.bind('featureOut', function(m, layer) {
          hovers[layer] = 0;
          if(!_.any(hovers)) {
            $('#map').css('cursor', 'auto');
          }
        });
      }

      function main() {

        // create leaflet map
        map = L.map('map', { 
          zoomControl: true,
          center: [29.9537, -90.0777],
          zoom: 9
        })

        // add a base layer
        L.tileLayer('http://tile.stamen.com/toner/{z}/{x}/{y}.png', {
          attribution: 'Stamen'
        }).addTo(map);

        var sublayer;
        // add cartodb layer with one sublayer
        cartodb.createLayer(map, {
          user_name: 'andrew',
          type: 'cartodb',
          sublayers: [{
             sql: "SELECT *, ST_X(the_geom) lon, ST_Y(the_geom) lat FROM twain WHERE name = 'New Orleans, LA, US'",
             cartocss: '#table_name {marker-fill: #0F3B82; marker-width: 25; marker-line-color: #FFF; marker-line-width: 1.5; }',
             interactivity: 'cartodb_id, lat, lon'
          }]
        })
        .addTo(map)
        .done(function(layer) {
          sublayer = layer.getSubLayer(0);
          sublayer.setInteraction(true);
          addCursorInteraction(sublayer);
        });


      }

      String.prototype.format = (function (i, safe, arg) {
            function format() {
                var str = this,
                    len = arguments.length + 1;

                for (i = 0; i < len; arg = arguments[i++]) {
                    safe = typeof arg === 'object' ? JSON.stringify(arg) : arg;
                    str = str.replace(RegExp('\\{' + (i - 1) + '\\}', 'g'), safe);
                }
                return str;
            }

            //format.native = String.prototype.format;
            return format;
        })();
      // you could use $(window).load(main);
      window.onload = main; 
    </script>

  </body>
</html>
<!DOCTYPE html>
  <head>
    <meta charset="utf-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crossfilter/1.3.12/crossfilter.js"></script>
    <script src="hilbert.js"></script>
    
    <style>
      body { 
        margin:0;position:absolute;top:0;right:0;bottom:0;left:0; 
        background-color: #111;
        overflow-y: scroll;
      }
      #blocks {
        position: absolute;
      }
      .block {
        position:absolute;
        margin: 10px;
        width: 50px;
        height: 50px;
        text-decoration: none;
        line-height: 9px;
      }
      .block a {
        text-decoration: none;
      }
      .block img {
        width: 50px;
        height: 50px;
      }
      
      
    </style>
  </head>

  <body>
    
    <div id="blocks">
    </div>
    <script>
      d3.json("blocks.json", function(err, blocks) {
        var xf = crossfilter(blocks);
        var author = xf.dimension(function(d) { return d.userId })
        var created = xf.dimension(function(d) { return +new Date(d.created_at) })
        var all = xf.dimension(function(d) { return true });
        var thumb = xf.dimension(function(d) { return !!d.thumbnail });
        thumb.filter(function(d) { return d })
        //var api = xf.dimension(function(d) { return d.api });
        var color = d3.scale.linear()
          .domain([0, 2797])
          .range(["#a8ff60", "#0600cc"])
          .interpolate(d3.interpolateHcl)
        
        var layout = new hilbert()
          .sideLength(55)
        
        //var data = layout.nodes(created.top(1000));
        var data = layout.nodes(created.top(Infinity));
        //var data = created.top(Infinity);
        console.log("grid", data.length)
        
        var blockdivs = d3.select("#blocks").selectAll("div.block")
        .data(data)
        .enter()
        .append("div").classed("block", true)
        .style({
          top: function(d) { return d.y  + "px" },
          left: function(d) { return d.x  + "px" },
          "border": function(d,i) {
            return "1px solid " + color(i);
          },
        })

        
        var links = blockdivs.append("a")
        .attr({
          href: function(d) { return "http://bl.ocks.org/" + d.data.userId + "/" + d.data.id },
          target: "_blank"
        })
        links
        .append("img")
        .attr({
          src: function(d) { return d.data.thumbnail },
          title: function(d) { return (d.data.description || "") + " by " + d.data.userId }
        })
        
        
        
      })
    </script>
  </body>
  <!DOCTYPE html>
<meta charset="utf-8">

<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/queue-async/1.0.7/queue.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.js" type="text/javascript"></script>
<link href="fir.css" rel="stylesheet">

<script src="firs.js"></script>

<div id="tooltip" class="hidden">
    <p id="countryname"></p>
</div><div id="chart"></div>

<script type="text/javascript">
(function () {

  // general design from
  // http://www.jeromecukier.net/blog/2013/11/20/getting-beyond-hello-world-with-d3/
  var params = {
    refresh: false, // REMOVE, i.e. `false`, for production
  	width: 960,
  	height:500,
  	scale: 470,
    centerLat:65.4,
    centerLon: 0,
    topo: "euctrl-firs.json",
  	world: "world-50m.json",
  	worldnames: "world-country-names.tsv"
  };

  var query = window.location.search.substring(1);
  var vars = query.split("&");
  vars.forEach(function(v) {
      var p = v.split("=");
      params[p[0]] = p[1];
  })
  console.log("params: " + JSON.stringify(params));
  vis.init(params);
}());
</script>
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>L</title>
  <meta name=viewport content="width=device-width initial-scale=1">
  <script src="http://libs.cartocdn.com/cartodb.js/v3/3.15/cartodb.js"></script>
  <link href="http://cartodb.com/favicon.ico" rel="shortcut icon" />
  <style type="text/css">
    html,
    body {
      position: relative;
      height: 100%;
      padding: 0;
      margin: 0;
    }
  </style>
</head>

<body>

  <div class="preview" id="preview"></div>

  <script>
    var CartoImage = function(width, height, account, table, column, zoom, lat, lon, colors){
      this.width = width;
      this.height = height;
      this.account = account;
      this.table = table;
      this.column = column;
      this.colors = colors;
      this.zoom = zoom;
      this.center_lat = lat;
      this.center_lon = lon;
      this.sql = cartodb.SQL({ user: this.account })
    }
    CartoImage.prototype.getHeight = function() { return this.height };
    CartoImage.prototype.getWidth = function() { return this.width };
    CartoImage.prototype.setURL = function(layergroup) {
          var path = [
              cartoimage.getEndpoint(),
              'static',
              'center',
              layergroup.layergroupid,
              this.zoom, this.center_lat, this.center_lon,
              cartoimage.getWidth(),
              cartoimage.getHeight()
          ].join('/');
          this.url = path + '.png';
          this.callback(this.url)
    };
    CartoImage.prototype.getEndpoint = function() { return 'https://'+this.account+'.cartodb.com/api/v1/map' };

    CartoImage.prototype.createConfig = function (values) {
      console.log(values)
      var config = this.getConfig(values.jenks)
      var jsonMapConfig = JSON.stringify(config, null, 2);
      var request = new XMLHttpRequest();
      request.open('POST', this.getEndpoint(), true);
      request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
      request.onload = this.imgFromLayerGroup;
      request.send(jsonMapConfig);
    }

    CartoImage.prototype.init = function(callback){
      this.callback = callback;
      this.sql.describeFloat('select * from '+this.table, this.column, this.createConfig.bind(this))
    }
    CartoImage.prototype.imgFromLayerGroup = function(){
        if (this.status >= 200 && this.status < 400) {
            var layergroup = JSON.parse(this.response);
            console.log(layergroup);
            cartoimage.setURL(layergroup);
        } else {
            throw 'Error calling server: Error ' + this.status + ' -> ' + this.response;
        }
    }

    CartoImage.prototype.getConfig = function(ramp){

      var cartocss = "#layer {\n\tpolygon-fill: "+this.colors[0]+";\n\tpolygon-opacity: 0.5;\n\tline-color: #333;\n\tline-width: 0;\n\tline-opacity: 0; ";
      var c = 0;
      for (i in ramp){
        cartocss += "["+this.column+" <= "+i+"]{polygon-fill: "+this.colors[c]+";}"
        c+=1
      }
      cartocss += " \n}"
      var config = {
          "version": "1.3.0",
          "layers": [
            {
              "type": "http",
              "options": {
                "urlTemplate": "http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png",
                "subdomains": [
                  "a",
                  "b",
                  "c"
                ]
              }
            },
            {
              "type": "mapnik",
              "options": {
                "sql": "select * from "+this.table,
                "cartocss": cartocss,
                "cartocss_version": "2.2.0"
              }
            }
          ]
        }
        return config;
    }

    var colors = [ '#65B1D0', '#3AB9B6', '#4EBB90', '#7CB768', '#AAAF4C', '#D3A149', '#F29160' ];
    // setup your new Image with some default parameters
    var cartoimage = new CartoImage(500, 200, 'observatory', 'us_census_acs2013_5yr_block_group', 'median_rent_moe', 3, 40, -100, colors);

    window.onload = function() {
      var myCustomImageHandlingFunction = function(url){
        // will get back the URL of your desired image
        var ig = new Image();
        ig.src = url;
        $('body').append(ig);
        console.log(url)
      }
      cartoimage.init(myCustomImageHandlingFunction)
    }

  </script>
</body>

</html>
<!DOCTYPE html>
<meta charset="utf-8">
    <style>



</style>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.js"></script>
<script src="workingRd3.js">        </script>
<link type="text/css" rel="stylesheet" href="bikebars.css" />



    </body>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  font: 13px "helvetica neue";
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 250, right: 20, bottom: 250, left: 20},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var superscript = "⁰¹²³⁴⁵⁶⁷⁸⁹",
    formatPower = function(d) { return (d + "").split("").map(function(c) { return superscript[c]; }).join(""); };

var x = d3.scale.log()
    .domain([1e0, 1e9])
    .range([0, width]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(10, function(d) { return 10 + formatPower(Math.round(Math.log(d) / Math.LN10)); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<title>Planetary Grid II</title>
<link rel="stylesheet" href="/darosh/raw/14e2e4e14898f13e13c7/style.css">
<body>
<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script src="canvas.min.js"></script>
<script src="/darosh/raw/2d12a584a14910032ab8/togeojson.js"></script>
<script src="/darosh/raw/2fe464efd794bde5ed68/hexakis-icosahedron.js"></script>
<script src="/darosh/raw/14e2e4e14898f13e13c7/config.js"></script>
<script src="/darosh/raw/14e2e4e14898f13e13c7/utils.js"></script>
<script src="/darosh/raw/14e2e4e14898f13e13c7/legend.js"></script>
<script src="/darosh/raw/14e2e4e14898f13e13c7/list.js"></script>
<script src="/darosh/raw/14e2e4e14898f13e13c7/info.js"></script>
<script src="globe.js"></script>
<script src="map.js"></script>
<script>
    (function () {
        'use strict';

        var widthList = 220;
        var margin = 12;
        var widthScrollBar = self.frameElement ? 0 : 20;
        var widthScreen = Math.floor(Math.max(document.body.clientWidth || 0, 960)) - widthScrollBar;
        widthScreen = Math.min(1480, widthScreen);
        var heightScreen = Math.max(500, widthScreen / (960 / 480));
        margin = widthScreen > 960 ? margin * 2 : margin;
        var widthGlobe = 200;
        var heightGlobe = 200;

        if (heightScreen > 660) {
            widthGlobe = 280;
            heightGlobe = 280;
        }

        var widthLegend = 140;
        var widthMap = widthScreen - Math.max(widthLegend, widthGlobe / 2) - 2 * margin;
        var heightMap = heightScreen - heightGlobe / 2 - 2 * margin;
        var selected;
        var list;

        var cfg = new Config();
        cfg.globeRadius = widthGlobe / 2;

        cfg.url = 'http://bl.ocks.org/darosh/7b816a50e66bb62208a7';

        var canvas = d3.select('body').append('canvas')
                .attr('class', 'no-select')
                .attr('width', widthMap + widthGlobe / 2)
                .attr('height', heightMap + heightGlobe / 2)
                .style('margin-left', margin + 'px')
                .style('margin-top', margin + 'px');

        var ctx = canvas.node().getContext('2d', {alpha: false});

        var map = new CanvasMap(ctx, widthMap, heightMap, margin, cfg);

        var globeOverlay = d3.select('body')
                .append('div')
                .attr('class', 'no-select')
                .style('position', 'absolute')
                .style('border-radius', (widthGlobe / 2) + 'px')
                .style('left', (widthMap - widthGlobe / 2 + margin) + 'px')
                .style('top', (heightMap - widthGlobe / 2 + margin) + 'px')
                .style('width', (widthGlobe) + 'px')
                .style('height', (heightGlobe) + 'px');

        var globe = new CanvasGlobe(ctx, widthGlobe, heightGlobe, cfg, globeOverlay);

        map.drawGlobe = globe.draw;

        var svgLegendWrap = d3.select('body').append('svg')
                .attr('width', widthLegend)
                .attr('height', heightMap - heightGlobe / 2)
                .style('position', 'absolute')
                .style('left', (widthMap + margin + cfg.lineMid) + 'px')
                .style('top', margin + 'px');

        var legend = new SvgLegend(svgLegendWrap, cfg, clickedLegend);

        cfg.filter = legend.lookFilter;

        var svgListWrap = d3.select('body').append('svg')
                .attr('width', widthMap - widthGlobe / 2)
                .attr('height', 0)
                .style('position', 'absolute')
                .style('left', margin + 'px')
                .style('top', (heightMap + margin + cfg.lineMid) + 'px');

        list = new SvgList(svgListWrap,
                cfg, widthMap - widthGlobe / 2, widthList,
                function (h) {
                    h = h + margin;
                    svgListWrap.attr('height', h);
                    d3.select(self.frameElement).style('height', (h + heightMap + 2 * margin) + 'px');
                },
                selectedPlace
        );

        var info = new HtmlInfo(d3.select('body').append('div')
                .style('position', 'absolute')
                .style('left', (2 * margin) + 'px')
                .style('top', (2 * margin) + 'px')
                .style('border', cfg.frameLineWidth + 'px solid ' + cfg.colors.frame)
                .style('padding', (cfg.titleSize * 0.75) + 'px')
                .style('min-width', (cfg.titleSize * 8) + 'px')
                .style('background-color', cfg.colors.bg),
                cfg
        );

        var controls = d3.select('body').append('svg')
                .attr('width', 70)
                .attr('height', 22)
                .style('position', 'absolute')
                .style('left', (margin * 1.5) + 'px')
                .style('top', (heightMap + margin * .5 - 22) + 'px');

        Utils.svgControls(controls, setIndex, map.reset);

        map.clickedPoint = function (p) {
            selectedPlace(p);
        };

        map.onZoomed = globe.setZoom;
        globe.onZoomed = map.setZoom;
        globe.canZoom = function (i) {
            var p = map.projection(i);
            return !isNaN(p[0]) && !isNaN(p[1]);
        };

        if (self.frameElement) {
            self.frameElement.focus();
        }

        d3.select('body').on('keydown', function () {
            var i = null;

            if (d3.event.keyCode === 37) {
                i = -1;
            } else if (d3.event.keyCode === 39) {
                i = +1;
            } else if (d3.event.keyCode === 27 && selected) {
                selectedPlace(selected);
                map.update(1);
                d3.event.stopPropagation();
                d3.event.preventDefault();
            }

            if (i !== null) {
                setIndex(i);
                d3.event.stopPropagation();
                d3.event.preventDefault();
            }
        });

        map.update(1);

        d3.json('/darosh/raw/14e2e4e14898f13e13c7/mercator-countries.json', function (topo) {
            topojson.presimplify(topo);
            map.countriesDatum = topojson.mesh(topo, topo.objects.countries);
            map.update(1);
        });

        d3.json('/darosh/raw/14e2e4e14898f13e13c7/mercator-land.json', function (topo) {
            topojson.presimplify(topo);
            map.landDatum = topojson.feature(topo, topo.objects.land);
            map.update(1);
        });

        d3.json('/darosh/raw/14e2e4e14898f13e13c7/land.json', function (topo) {
            globe.landDatum = topojson.feature(topo, topo.objects.land);
            map.update(1);
        });

        d3.xml('/darosh/raw/2d12a584a14910032ab8/places.kml', function (xml) {
            var geo = toGeoJSON.kml(xml);

            Utils.parsePlaces(geo);

            map.geo = geo;

            if (list) {
                list.update(geo);
            }

            cfg.filtered = geo.features;

            map.update(1);
        });

        function clickedLegend() {
            map.update(1);
            list.filter(legend.lookShapes);
        }

        function selectedPlace(d) {
            if (list) {
                list.selection(selected, d);
            }

            if (d === selected) {
                d = null;
            }

            globe.selection = d;
            info.update(d);
            selected = d;
            map.zoomTo(d, info.size);
        }

        function setIndex(i) {
            var f = cfg.filtered;
            var c = f.indexOf(selected);
            c = c === -1 ? 0 : (c + i);
            c = (c + f.length) % f.length;

            if (list) {
                list.selection(selected, f[c]);
            }

            info.update(f[c]);
            globe.selection = f[c];

            setTimeout(function () {
                map.zoomTo(f[c], info.size);
            }, 50);

            selected = f[c];
        }
    })();
</script>
</body>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>SVG from Data with D3</title>
		<link rel="stylesheet" type="text/css" href="styles_M6.css">
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
 
	</head>
	<body>
 
		<header><h1>NEET</h1></header>
		<h2>Young people Not in Employment, Education or Training</h2>
 
		<h3>Intro</h3>
		<div id="intro">
		<p>Youth inactivity presents the share of <strong>young people not in employment, education or training (NEET)</strong>.</p>
		<p>Young people in education include those attending part-time or full-time education, but exclude those in non-formal education and in educational activities of very short duration.</p>
		<p class="smaller">Employment is defined according to the <abbr title="International Labour Organization">ILO</abbr> Guidelines and covers all those who have been in paid work for at least one hour in the reference week of the survey or were temporarily absent from such work. Young people who are NEET are at risk of becoming socially excluded, with income below the poverty-line and without the skills to improve their economic situation.</p>
		</div>
 
		<h3>NEET in <abbr title="Organisation for Economic Co-operation and Development">OECD</abbr> countries</h3>
		<h4>20-24 year-olds not in employment, education or training [2007 to 2013]</h4>
		<p class="chart">&uarr; % in same age group - [Source <a href="https://data.oecd.org/" target="_blank">OECD</a>]</p>
		
		<script type="text/javascript">

			//SVG 
			var w = 850;
			var h = 600;
			var padding = { top: 20, right: 10,	
							bottom: 20, left: 40 }; 
							//Andrew Broman's brainchild

			//Set up date formatting and years
			var dateFormat = d3.time.format("%Y");


			//Set up scales
			var xScale = d3.time.scale()
								.range([ padding.left, w - padding.right - padding.left]);
			
			var yScale = d3.scale.linear()
								.range([ padding.top, h - padding.bottom ]);



			//Configure axis generators
			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(7)
							.tickFormat(function(d) {
								return dateFormat(d);
							});

			var yAxis = d3.svg.axis().outerTickSize(0)
							.scale(yScale)
							.tickFormat(function(d) {
								return d + "%"})
							.orient("left")
							.ticks(8); // Right axe with percentage


			//Configure line generator
			var line = d3.svg.line()
				.x(function(d) {
					return xScale(dateFormat.parse(d.year));
				})
				.y(function(d) {
					return yScale(+d.amount);
				});



			//Create the empty SVG image
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);


			d3.select("body")
				.append("p")
				.attr("class", "smaller")
				.text("Despite a significant decrease of around 15 percentage points in the proportion of young people neither employed nor in education or training (NEET) between 2009 and 2012, Turkey still has the highest proportion of NEETs among 20-24 year-olds across OECD countries. Southern Europe countries -Italy, Greece and Spain are hardly recovering from the effects of the 2007/08 financial crisis.")

			//Load data
			d3.csv("neet.csv", function(data) {

				//Data is loaded in, but we need to restructure it.
				//
				//	[ [x: 1, y: 1], [x: 2, y: 2], [x: 3, y: 3] ]
				//
				//Note that this is an array of objects. Each object
				//contains two values, 'country' and 'neet'.
				//The 'neet' value is itself an array, containing
				//more objects, each one holding 'year' and 'amount' values.

				//New array with all the years, for referencing later
				var years = [ "2007", "2008", "2009", "2010", "2011", "2012", "2013" ];


				//Create a new, empty array to hold our restructured dataset
				var dataset = [];


				//Loop once for each row in data
				for (var i = 0; i < data.length; i++) {

					//Create new object with this country's name and empty array
					dataset[i] = {
						country: data[i].OECD_Country,
						neet: []
					};

					//Loop through all the years
					for (var j = 0; j < years.length; j++) {

						// If value is not empty
						if (data[i][years[j]]) {
							//Add a new object to the neet data array
							//for this country
							dataset[i].neet.push({
								year: years[j],
								amount: data[i][years[j]]
							});
						}

					}

				}
				
				//Uncomment to log the original data to the console
				//console.log(data);

				//Uncomment to log the newly restructured dataset to the console
				//console.log(dataset);


				//Set scale domains
				xScale.domain([ 
					d3.min(years, function(d) {
						return dateFormat.parse(d);
					}),
					d3.max(years, function(d) {
						return dateFormat.parse(d);
					})
				]);

				yScale.domain([ 
					d3.max(dataset, function(d) {
						return d3.max(d.neet, function(d) {
							return +d.amount + ( d.amount * 0.025);
						});
					}),
					0
				]);

				
				//Make a group for each country
				var groups = svg.selectAll("g")
					.data(dataset)
					.enter()
					.append("g")
					.classed("highlight_Turkey", function(d) {
						if (d.country == "Turkey" /*||
							d.country == "Spain" ||
							d.country == "Italy" ||
							d.country == "Greece"*/) {
							return true;
						} else {
							return false;
						};
					})
					.classed("highlight_Israel", function(d) {

						if (d.country == "Israel") {
							return true;
						} else {
							return false;
						}

					});

				//Append a title with the country name (so we get easy tooltips)
				groups.append("title")
					.text(function(d) {
						return d.country;
					});


				//Within each group, create a new line/path,
				//binding just the neet data to each one
				groups.selectAll("path")
					.data(function(d) {
						return [ d.neet ];
					})
					.enter()
					.append("path")
					.attr("class", "line")
					.attr("d", line)
					.attr("fill", "none")
					.attr("stroke", "#F0F0F0")
					.attr("stroke-width", "0.5");


				var datalabel = svg.selectAll("text")
					.data(dataset.filter(function(d) {
						return (d.country == "Turkey" ||
								d.country == "Italy" ||
								d.country == "Spain" ||
								d.country == "Greece" ||
								d.country == "Israel");
					}))
					.enter()
					.append("text")
					datalabel.attr("x", [w - padding.right - padding.left + 5])
							.attr("y",(function(d) {
								return yScale( d.neet[6].amount ); // year [6] -> 2013
							}))
							.attr("fill", "black")
							.attr("font-size", "9px")
							.attr("font-family", "Verdana")
							.attr("font-style", "italic")
							.text(function(d) {
								return d.country;
							});


				//Make lines get to the front on mouseover

		        d3.selectAll("path")

		        .on("mouseover", function(d) {
		            	d3.select(this)
		                this.parentNode.parentNode.appendChild(this.parentNode);
		            })
		            .on("mouseout", function(d) {
		                    d3.select(this)
		            });


				//Axes
				svg.append("g")
					.attr("class", "axis")
					.attr("transform", "translate(0," + (h - padding.bottom + 5 ) + ")")
					.call(xAxis)
					.append("text")
					.attr({
						"class": "label", "transform": "rotate(-90)",
						x: 20,
						y: padding.left - 45,
					})
					//.text("NEET Index")
					//.attr("font-weight", "bolder")
					;

				svg.append("g")
					.attr("class", "axis")
					.attr("transform", "translate(" + ( padding.left - 5 ) + ",0)")
					.call(yAxis); 


			});


		</script>

		<p></p>
 
	
 
		<footer><hr>Rubén Valero | 2015 | Data Visualization and Infographics with D3!</footer>
	</div>
 
	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  background-color: #f5f5f5;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
	/*deleted;*/
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  	.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name]};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
      .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Mercator projection</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">

			body {
				background-color: gray;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>
		<script type="text/javascript">

			//Width and height
			var w = 900;
			var h = 900;

			//Define map projection
			var projection = d3.geo.mercator()
								   .center([ 0, 40 ])
								   .translate([ w/2, h/2 ])
								   .scale([ w/20 ]);

			//Define path generator
			var path = d3.geo.path()
							 .projection(projection);

			//Create SVG
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			//Load in GeoJSON data
			d3.json("scotland.json", function(json) {
				
			//Bind data and create one path per GeoJSON feature
				svg.selectAll("path")
				   .data(json.features)
				   .enter()
				   .append("path")
				   .attr("d", path);
			});

		</script>
	</body>
</html>Not Found<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.8/d3.min.js"></script>
  <style>
    circle {
      opacity: 0.5328;
    }
    body {
        font-family: futura;
    }
    h2.title {
      color: black;
      text-align: center;
    }
    .axis {
      font-family: arial;
      font-size: 0.7em;
    }
    text {
      fill: black;
    }
    .label {
      font-size: 2em;
    }
    path {
      fill: none;
      stroke: black;
      stroke-width: 1px;
    }
    .tick {
      fill: none;
      stroke: black;
    }
    .line {
      fill: none;
      stroke: #4eb0bb;
      stroke-width: 1px;
    }
  </style>
  <script>
    function draw(data) {
    "use strict";

    /*
        D3.js setup code
    */

    // set margins according to Mike Bostock's margin conventions
    // http://bl.ocks.org/mbostock/3019563
    var margin = {top: 25, right: 40, bottom: 150, left: 75};
    
    // set height and width of chart
    var width = 1400 - margin.left - margin.right,
        height = 800 - margin.top - margin.bottom;
    
    // specify the radius of our circles and the
    // column we want to plot
    var radius = 3,
        field = 'San Francisco',
        x_field = "number_of_reviews",
        y_field = "availability_365";
  
    // Append the title for the graph
    d3.select("body")
        .append("h2")
        .text(field + " Listings")
        .attr('class', 'title');
    
    // append the SVG tag with height and width to accommodate for margins
    var svg = d3.select("body")
                .append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                .append('g')
                    .attr('class','chart')
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    
    // remove missing values
    data = data.filter(function(d) {
      return d[y_field];
    });

    // bind our data to svg circles for the scatter plot
    svg.selectAll("circle")
        .data(data)
        .enter()
        .append("circle")
      
      // maximum price
      var max_y = d3.max(data, function(d) {
          return +d[y_field];
      });

      // get min/max review count
      var review_extent = d3.extent(data, function(d){
          return +d[x_field];
      });

      // Create x-axis scale mapping dates -> pixels
      var review_scale = d3.scale.linear()
          .range([0, width])
          .domain(review_extent);

      // Create y-axis scale mapping price -> pixels
      var measure_scale = d3.scale.linear()
          .range([height, 0])
          .domain([0, max_y]);

      // Create D3 axis object from time_scale for the x-axis
      var x_axis = d3.svg.axis()
          .scale(review_scale);

      // Create D3 axis object from measure_scale for the y-axis
      var measure_axis = d3.svg.axis()
          .scale(measure_scale)
          .orient("left");

      // Append SVG to page corresponding to the D3 x-axis
      svg.append('g')
          .attr('class', 'x axis')
          .attr('transform', "translate(0," + height + ")")
          .call(x_axis);

      // Append SVG to page corresponding to the D3 y-axis
      svg.append('g')
          .attr('class', 'y axis')
          .call(measure_axis);

      // add label to y-axis
      d3.select(".y.axis")
          .append("text")
          .attr('class', 'label')
          .text("Price (dollar/sq-ft)")
          .attr("transform", "rotate(-90, -43, 0) translate(-400)");

      // based on the data bound to each svg circle,
      // change its center-x (cx) and center-y (cy)
      // coordinates
      d3.selectAll('circle')
          .attr('cx', function(d) {
              return review_scale(+d[x_field]);
          })
          .attr('cy', function(d) {
              return measure_scale(+d[y_field]);
          })
          .attr('r', function(d) {
            return 2;
          })
          .style('fill', function(d) {
            switch (d['room_type']) {
              case 'Entire home/apt':
                return 'red';
              case 'Private room':
                return 'green'
              case 'Shared room':
                return 'blue';
              default:
                return 'gray';
            }
          });
    }
  </script>
</head>
  <body>
    <script>
      /*
      Use D3 to load the CSV file and pass
      the contents of it to the draw function.
      */
      d3.csv("http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listings.csv", draw);
    </script>
  </body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
  </head>

  <body>
    <style>
      path.link {
        fill: none;
        stroke-width: 3px;
      }

      .node:not(:hover) .nodetext {
        display: none;
      }

      .d3-tip {
        line-height: 1;
        padding: 6px;
        background: rgba(0, 0, 0, 0.6);
        color: #fff;
        border-radius: 4px;
      }

      .d3-tip:after {
        box-sizing: border-box;
        display: inline;
        font-size: 10px;
        width: 100%;
        line-height: 1;
        color: rgba(0, 0, 0, 0.8);
        content: "\25BC";
        position: absolute;
        text-align: center;
      }

      .d3-tip.n:after {
        margin: -1px 0 0 0;
        top: 100%;
        left: 0;
      }
    </style>

    <script>
      var width = 960;
      var height = 800;
      var maxNodeSize = 50;
      var x_browser = 20;
      var y_browser = 25;
      var root;

      var force = d3.layout.force(); 

      var tip = d3.tip()
        .attr('class', 'd3-tip')
        .offset([-10, 0])
        .html(function(d) {
          return d.email;
        });

      var vis = d3.select('body').append('svg')
        .attr('width', width)
        .attr('height', height);

      vis.call(tip);

      d3.json('data.json', function(json) {
        root = json;
        root.fixed = true;
        root.x = width / 2;
        root.y = height / 4;

        var defs = vis.insert('svg:defs')
          .data(['end']);

        defs.enter().append('svg:path')
          .attr('d', 'M0,-5L10,0L0,5');
 
        update();
      });

      function update() {
        var nodes = flatten(root);
        var links = d3.layout.tree().links(nodes);

        var path = vis.selectAll('path.link')
          .data(links, function(d) {
            return d.target.id;
          });

        path.enter().insert('svg:path')
          .attr('class', 'link')
          .attr('marker-end', 'url(#end)')
          .style('stroke', '#eee');

        path.exit().remove();

        force.nodes(nodes)
          .links(links)
          .gravity(0.05)
          .charge(-1500)
          .linkDistance(100)
          .friction(0.5)
          .linkStrength(function(l, i) {return 1; })
          .size([width, height])
          .on('tick', tick)
          .start();

        var defs = vis.append('defs');

        var clipPath = defs.append('clipPath')
          .attr('id', 'clip-circle')
          .append('circle')
          .attr('r', 25);

        var filter = defs.append('filter')
          .attr('id', 'drop-shadow')
          .attr('height', '130%');

        filter.append('feGaussianBlur')
          .attr('in', 'SourceAlpha')
          .attr('stdDeviation', 3)
          .attr('result', 'blur');

        filter.append('feOffset')
          .attr('in', 'blur')
          .attr('result', 'offsetBlur');

        filter.append("feFlood")
          .attr("in", "offsetBlur")
          .attr("flood-color",'red')
          .attr("flood-opacity", "1")
          .attr("result", "offsetColor");

        filter.append("feComposite")
          .attr("in", "offsetColor")
          .attr("in2", "offsetBlur")
          .attr("operator", "in")
          .attr("result", "offsetBlur");

        var feMerge = filter.append('feMerge');

        feMerge.append('feMergeNode')
          .attr('in', 'offsetBlur')
        feMerge.append('feMergeNode')
          .attr('in', 'SourceGraphic');

        var node = vis.selectAll('g.node')
          .data(nodes, function(d) {
            return d.customerId;
          });

        var nodeEnter = node.enter().append('svg:g')
          .attr('class', 'node')
          .attr('transform', function(d) {
            return "translate(" + d.x + "," + d.y + ")";
          })
          .attr('filter', 'url(#drop-shadow)')
          .on('mouseover', function(d){d.scale = 2;tick();})
          .on('mouseout', function(d){d.scale = 1;tick();})
          .on('click', click)
          .call(force.drag);

        var images = nodeEnter.append('svg:image')
          .attr('xlink:href',  function(d) {
            return d.avatarUrl;
          })
          .attr('x', function(d) {
            return -25;
          })
          .attr('y', function(d) {
            return -25;
          })
          .attr('height', 50)
          .attr('width', 50)
          .attr('clip-path', 'url(#clip-circle)')
          .on('mouseover', tip.show)
          .on('mouseout', tip.hide);

        node.exit().remove();

        path = vis.selectAll('path.link');
        node = vis.selectAll('g.node');

        function tick() {
          path.attr('d', function(d) {
            var dx = d.target.x - d.source.x;
            var dy = d.target.y - d.source.y;
            var dr = Math.sqrt(dx * dx + dy * dy);
            return 'M' + d.source.x + ','
              + d.source.y
              + 'A' + dr + ','
              + dr + ' 0 0,1 '
              + d.target.x + ','
              + d.target.y;
          });
          node.attr('transform', nodeTransform);    
        }
      }

      function nodeTransform(d) {
        if (!d.scale)
          d.scale=1;
        d.x =  Math.max(maxNodeSize, Math.min(width - (d.imgwidth / 2 || 16), d.x));
        d.y =  Math.max(maxNodeSize, Math.min(height - (d.imgheight / 2 || 16), d.y));
        return "translate(" + d.x + "," + d.y + ")scale(" +d.scale+ ")";
      }

      function click(d) {
        if (d3.event.defaultPrevented) {
          return;
        }
        if (d.children) {
          d._children = d.children;
          d.children = null;
        } else {
          d.children = d._children;
          d._children = null;
        }
        update();
      }

      function flatten(root) {
        var nodes = []; 
        var i = 0;

        function recurse(node) {
          if (node.children) {
            node.children.forEach(recurse);
          }
          if (!node.id) {
            node.id = ++i;
          }
          nodes.push(node);
        }
        recurse(root);
        return nodes;
      }
    </script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 50, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var xValue = function(d) { return d.Year; }, // data -> value
    xScale = d3.scale.ordinal().rangeRoundBands([0, width], .1), // value -> display
    xMap = function(d) { return xScale(xValue(d)); }, // data -> display
    xAxis = d3.svg.axis().scale(xScale).orient("bottom");

var yValue = function(d) { return d.DogsEaten; }, // data -> value
    yScale = d3.scale.linear().range([height, 0]), // value -> display
    yMap = function(d) { return yScale(yValue(d)); }, // data -> display
    yAxis = d3.svg.axis().scale(yScale).orient("left");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("data.csv", type, function(error, data) {
  xScale.domain(data.map(xValue)); // data.map(xValue) returns an array of years
  yScale.domain([0, d3.max(data, yValue)]);

// Note: domain for ordinal needs to be the whole range, not just min/max

  console.log ("data.map(xValue) = ", data.map(xValue));

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("x", margin.left + 20)
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Dogs Eaten");

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", xMap)
      .attr("width", xScale.rangeBand)
      .attr("y", yMap)
      .attr("height", function(d) { return height - yMap(d); })
      .attr("style", function(d) {if (d.NewRecord == 1) return "fill:green";})
      .attr("debug", function (d) {console.log(d); 
      console.log("x data = ", xValue(d)); 
      console.log("x pixel = ", xMap(d)); 
      console.log("y data = ", yValue(d)); 
      console.log("y pixel = ", yMap(d)); 
      console.log("width = ", xScale.rangeBand(d));
      });
});

function type(d) {
  d.DogsEaten = +d.DogsEaten;  // change string into number format
  return d;
}

</script><!DOCTYPE html>
<html>
<body>

<iframe src="index1.html" width="1200" height="550">
</iframe>

<p> Graph 1 </p>

<iframe src="index2.html" width="1200" height="550">
</iframe>

<p> Graph 2 </p>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.counties {
  fill: none;
}

.states {
  fill: none;
  stroke: #fff;
  stroke-linejoin: round;
}

.q0-9 { fill:rgb(247,251,255); }
.q1-9 { fill:rgb(222,235,247); }
.q2-9 { fill:rgb(198,219,239); }
.q3-9 { fill:rgb(158,202,225); }
.q4-9 { fill:rgb(107,174,214); }
.q5-9 { fill:rgb(66,146,198); }
.q6-9 { fill:rgb(33,113,181); }
.q7-9 { fill:rgb(8,81,156); }
.q8-9 { fill:rgb(8,48,107); }

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var rateById = d3.map();

var quantize = d3.scale.quantize()
    .domain([0, .15])
    .range(d3.range(9).map(function(i) { return "q" + i + "-9"; }));

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

queue()
    .defer(d3.json, "/mbostock/raw/4090846/us.json")
    .defer(d3.tsv, "unemployment.tsv", function(d) { rateById.set(d.id, +d.rate); })
    .await(ready);

function ready(error, us) {
  svg.append("g")
      .attr("class", "counties")
    .selectAll("path")
      .data(topojson.feature(us, us.objects.counties).features)
    .enter().append("path")
      .attr("class", function(d) { return quantize(rateById.get(d.id)); })
      .attr("d", path);

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "states")
      .attr("d", path);
}

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.counties {
  fill: none;
}

.states {
  fill: none;
  stroke: #fff;
  stroke-linejoin: round;
}

.q0-9 { fill:rgb(247,251,255); }
.q1-9 { fill:rgb(222,235,247); }
.q2-9 { fill:rgb(198,219,239); }
.q3-9 { fill:rgb(158,202,225); }
.q4-9 { fill:rgb(107,174,214); }
.q5-9 { fill:rgb(66,146,198); }
.q6-9 { fill:rgb(33,113,181); }
.q7-9 { fill:rgb(8,81,156); }
.q8-9 { fill:rgb(8,48,107); }

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var rateById = d3.map();

var quantize = d3.scale.quantize()
    .domain([0, .15])
    .range(d3.range(9).map(function(i) { return "q" + i + "-9"; }));

var projection = d3.geo.mercator()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

queue()
    .defer(d3.json, "/mbostock/raw/4090846/us.json")
    .defer(d3.tsv, "unemployment.tsv", function(d) { rateById.set(d.id, +d.rate); })
    .await(ready);

function ready(error, us) {
  svg.append("g")
      .attr("class", "counties")
    .selectAll("path")
      .data(topojson.feature(us, us.objects.counties).features)
    .enter().append("path")
      .attr("class", function(d) { return quantize(rateById.get(d.id)); })
      .attr("d", path);

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "states")
      .attr("d", path);
}

d3.select(self.frameElement).style("height", height + "px");

</script>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>d3.carto.map - Changing Point Markers</title>
  <meta charset="utf-8" />
    <link type="text/css" rel="stylesheet" href="d3map.css" />
    <link type="text/css" rel="stylesheet" href="example.css" />
</head>
<style>
  html,body {
    height: 100%;
    width: 100%;
    margin: 0;
  }

  #map {
    height: 100%;
    width: 100%;
    position: absolute;
  }

</style>
<script>
  function makeSomeMaps() {
    map = d3.carto.map();

    d3.select("#map").call(map);

    map.addTileLayer("examples.map-zgrqqx0w", "Base", "mapbox", false);
    map.centerOn([-0.1275,51.507],"latlong",5000);
    map.addTopoJSONLayer("http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_routes.topojson","TopoJSON","roads","svg","all");
    map.addCSVLayer("http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv","CSV Points","pinkcircle",2,"svg","x","y");
    
    d3.select("#map").append("button").attr("class", "marker").html("Change Markers").on("click", changeMarkers);
    
    function changeMarkers() {
          csvLayer.g().selectAll("circle").remove();

          csvLayer.g().selectAll("g.marker")
            .append("rect")
            .attr("class", "bluesquare")
            .attr("height", 5)
            .attr("width",5)
            .attr("x",-2.5)
            .attr("y",-2.5);
    }

  }
</script>
<body onload="makeSomeMaps()">
<div id="map"></div>
<footer>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="http://d3js.org/topojson.v1.min.js" type="text/javascript">
</script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js" type="text/javascript">
</script>
<script src="http://d3js.org/colorbrewer.v1.min.js"></script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js" type="text/javascript">
</script>
<script src="https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js" type="text/javascript">
</script>
</footer>
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>#BTV Places from Foursquare</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
</style>
</head>
<body>


<script src='http://code.jquery.com/jquery-1.10.1.min.js'></script>
<div id='map'></div>
<script>
var map = L.mapbox.map('map', 'landplanner.h1dknok1', {
        attributionControl: true
    })
    .setView([44.475, -73.212], 11);

// Credit Foursquare for their wonderful data
map.attributionControl
    .addAttribution('<a href="https://foursquare.com/">Places data from Foursquare</a>');

// Create a Foursquare developer account:
// https://developer.foursquare.com/
// AND CHANGE THESE VALUES TO YOUR OWN:
// otherwise they can be cycled or deactivated with zero notice.
var CLIENT_ID = 'L4UK14EMS0MCEZOVVUYX2UO5ULFHJN3EHOFVQFSW0Z1MSFSR';
var CLIENT_SECRET = 'YKJB0JRFDPPSGTHALFOEP5O1NDDATHKQ2IZ5RO2GOX452SFA';

// https://developer.foursquare.com/start/search
var API_ENDPOINT = 'https://api.foursquare.com/v2/venues/search' +
  '?client_id=CLIENT_ID' +
  '&client_secret=CLIENT_SECRET' +
  '&v=20130815' +
  '&ll=LATLON' +
  //This is the "bar" category:
  '&categoryId=4bf58dd8d48988d112951735' +
  //Uncomment this query to find specific cafe names:
  //'&query=hardware' +
  '&callback=?';

// Keep our place markers organized in a nice group.
var foursquarePlaces = L.layerGroup().addTo(map);

// Use jQuery to make an AJAX request to Foursquare to load markers
// data.
$.getJSON(API_ENDPOINT
    .replace('CLIENT_ID', CLIENT_ID)
    .replace('CLIENT_SECRET', CLIENT_SECRET)
    .replace('LATLON', map.getCenter().lat +
        ',' + map.getCenter().lng), function(result, status) {

    if (status !== 'success') return alert('Request to Foursquare failed');

    // Transform each venue result into a marker on the map.
    for (var i = 0; i < result.response.venues.length; i++) {
      var venue = result.response.venues[i];
      var latlng = L.latLng(venue.location.lat, venue.location.lng);
      var marker = L.marker(latlng)
        .setIcon(L.mapbox.marker.icon({'marker-symbol': 'logging', 'marker-color': '01ABE9'}))
        .bindPopup('<h2><a href="https://foursquare.com/v/' + venue.id + '">' +
            venue.name + '</a></h2>')
        .addTo(foursquarePlaces);
    }

});
</script>


</body>
</html><!DOCTYPE html>
<meta charset="utf-8">

<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/queue-async/1.0.7/queue.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.js" type="text/javascript"></script>
<link href="fir.css" rel="stylesheet">

<script src="firs.js"></script>

<div id="tooltip" class="hidden">
    <p id="countryname"></p>
</div><div id="chart"></div>

<script type="text/javascript">
(function () {

  // general design from
  // http://www.jeromecukier.net/blog/2013/11/20/getting-beyond-hello-world-with-d3/
  var params = {
    refresh: false, // REMOVE, i.e. `false`, for production
  	width: 960,
  	height:500,
  	scale: 570,
    centerLat:65.4,
    centerLon: 0,
    topo: "euctrl-firs.json",
  	world: "world-50m.json",
  	worldnames: "world-country-names.tsv"
  };

  var query = window.location.search.substring(1);
  var vars = query.split("&");
  vars.forEach(function(v) {
      var p = v.split("=");
      params[p[0]] = p[1];
  })
  console.log("params: " + JSON.stringify(params));
  vis.init(params);
}());
</script>
<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8'>
    <title>
        Curved Text in SVG
    </title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js" charset="utf-8"></script>
    <style type="text/css">
      svg {
        display: block; 
        margin: 0 auto;
      }
      svg circle {
        opacity: 0.6;
      }
      svg text {
        dominant-baseline: central;
        font-family: monospace;
        font-size: 24px;
      }
      svg text.centered {
        text-anchor: middle;
      }
    </style>
  </head>
  <body>
    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="864" height="450" viewbox="0 0 960 500">
      <rect id="backgroundRect" width="960" height="500" x="0" y="0" fill="#ECECEC"></rect>
      <g class="thisIsAnExampleGroup">
        <text x="125" y="130">{id: 'abc', value: 5}</text>
        <circle cx="810" cy="100" r="14.142135623730951" fill="#279191"></circle>
        <line x1="435" x2="735" y1="130" y2="100" stroke-width="1" stroke="black"></line>
        <text x="810" y="100" class="centered" fill="blue">&lt;circle/&gt;</text>
      </g>
      <g class="thisIsAnExampleGroup">
        <text x="125" y="210">{id: 'def', value: 10}</text>
        <circle cx="810" cy="200" r="20" fill="#279191"></circle>
        <line x1="445" x2="735" y1="210" y2="200" stroke-width="1" stroke="black"></line>
        <text x="810" y="200" class="centered" fill="blue">&lt;circle/&gt;</text>
      </g>
      <g class="thisIsAnExampleGroup">
        <text x="125" y="290">{id: 'ghi', value: 8}</text>
        <circle cx="810" cy="300" r="17.88854381999832" fill="#279191"></circle>
        <line x1="435" x2="735" y1="290" y2="300" stroke-width="1" stroke="black"></line>
        <text x="810" y="300" class="centered" fill="blue">&lt;circle/&gt;</text>
      </g>
      <g class="thisIsAnExampleGroup">
        <text x="125" y="370">{id: 'jkl', value: 3}</text>
        <circle cx="810" cy="400" r="10.95445115010332" fill="#279191"></circle>
        <line x1="435" x2="735" y1="370" y2="400" stroke-width="1" stroke="black"></line>
        <text x="810" y="400" class="centered" fill="blue">&lt;circle/&gt;</text>
      </g>
    </svg>
    <script type="text/javascript">
      d3.selectAll('.thisIsAnExampleGroup')
        .on('mouseover', function() {
          d3.select(this)
            .transition()
            .attr('transform', 'translate(0,' + -25 + ')');
        })
        .on('mouseout', function() {
          d3.select(this)
            .transition()
            .attr('transform', '');
        });
    </script>
  </body>
</html><html>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>

<script>
function removeFile()
{
  var input = document.getElementById("fileToUpload");
  input.value = input.defaultValue;
  refreshForm();
  return false;
}

function refreshForm() 
{
  var input = document.getElementById("fileToUpload");

  if (input.files.length > 0)
  {
    console.log('set visible');
    $("#upack-form > #remove-lnk").css("visibility", "visible");
  }
  else
  {
    console.log('set hidden');
    $("#upack-form > #remove-lnk").css("visibility", "hidden");
  }
}
</script>

<div class="package">
  <form id="upack-form" action="/update_package" enctype="multipart/form-data" method="post">
    <label>
      <input id="fileToUpload" type="file" name="file" style="width: 280px; overflow: hidden;" single onChange="refreshForm();" />
      &nbsp;&nbsp;&nbsp;&nbsp;
    </label>
    <a id="remove-lnk" style="visibility: hidden;" onclick="return removeFile();">remove</a>
  </form>
</div>

</html><!doctype html>

<html lang="en">
  <head>
    <meta charset="utf-8">
    <script src = "http://d3js.org/d3.v3.js"></script>
    <script src = "./mobservable.js"></script>
  </head>
  
  <body>
    <script>
      var data = mobservable.observable([]);
      var data_obs = mobservable.observable(function(){
        return data.slice();
      })
      
      mobservable.autorun(function(){
        var bodyp = d3.select("body").selectAll("p").data(data_obs());
        bodyp.enter().append("p");
        bodyp.text(function(d){return d});
        bodyp.exit().remove();
      })
      
      var time = 0;
      
      setInterval(
        function(){
          data.replace(d3.range(time,time+10));
          time = time + 10;
        },
        1000
      )
    </script>    
  </body>
  
</html><!DOCTYPE html>
<meta charset="utf-8">
<link href='https://fonts.googleapis.com/css?family=Noto+Sans:400,700' rel='stylesheet' type='text/css'>

<head>
	<style>
		
		.background {
		  	fill: #fff;
		}
    h1 {
      text-align: center;
      font-family: 'Noto Sans', sans-serif;
      color: black;
      font-size: 30px;
      margin-left:  0.3cm;
    }
		text {
  			text-shadow: 0 0.5px 0 #000, 0.5px 0 0 #000, 0 -0.5px 0 #000, -0.5px 0 0 #000;
        pointer-events: none;
        color: #fff;
		}
    p {
        margin-left:  0.3cm;
    }
    .labels {
      font-size: 30px;
      font-family: 'Noto Sans', sans-serif;
      color: slategray;

    }
    .leglabels {
      font-family: 'Noto Sans', sans-serif;
      color: slategray;
    }
		.link {
      stroke: slategray;
      stroke-opacity: 0.6;
      fill: none;
    }
    .leglink {
      stroke: slategray;
      stroke-opacity: 0.6;
    }
    .row {
      width: 100%;
      margin: 0 auto;
    }   
    #Legend {
      margin-top: 0px;
      display: inline-block;
      width: 300px; 
      height: 800px;
      vertical-align: top;
    }
    #Chart {
      margin-top: 0px;
      display: inline-block;
      width: 1000px; 
      height: 800px;
    }

	</style>
	<title> WHO YOU WORK WITH </title>
</head>

<body>
<script src="http://d3js.org/d3.v3.min.js" type="text/javascript"></script>

<div class= "row">
  <div id="Legend">
    <br>
    <br>
    <br>
    <div id = "title"><h1>Who you work with</h1></div>
    <br>
    <br>
    <div class = "description">
        <p>The chart shows the relationships within the teams of the methodology division and among the other disions in ONS. To see the connections move the mouse over each team.<p>
        <br>
        <p>The size of the arrow relates to the strength of the relationship between two nodes.<p>
        <br>
        <p>The relationship can be classified in: <p>
    </div>
    <div id = "Arrows">
    </div>
  </div>
  <div id="Chart"></div>
</div>


<script>

// Extend array prototype
Array.prototype.contains = function(obj) {
    var i = this.length;
    while (i--) {
        if (this[i] === obj) {
            return true;
        }
    }
    return false;
}


graph = 
    {
      "nodes":[
        {"name":"Big Data", "group":0, "id": 0},
        {"name":"SDC", "group":0, "id": 1},
        {"name":"TU", "group":0, "id": 2},
        {"name":"SAE", "group":0, "id": 3},
        {"name":"DLAF", "group":0, "id": 4},
        {"name":"EI", "group":0, "id": 5},
        {"name":"DM", "group":0, "id": 6},
        {"name":"Population", "group":0, "id": 7},
        {"name":"DCM", "group":0, "id": 8},
        {"name":"QC", "group":0, "id": 9},
        {"name":"Geography", "group":0, "id": 10},
        {"name":"Census", "group":1, "id": 11},
        {"name":"Prices", "group":1, "id": 12},
        {"name":"Technical Services", "group":1, "id": 13},
        {"name":"ADD", "group":1, "id": 14},
        {"name":"GSS", "group":1, "id": 15},
        {"name":"Population Statistics", "group":1, "id": 16},
        {"name":"National Accounts", "group":1, "id": 17},
        {"name":"BSS", "group":1, "id": 18},
        {"name":"Labour Market", "group":1, "id": 19},
        {"name":"CP Secretariat", "group":1, "id": 20},
        {"name":"Communi- cations", "group":1, "id": 21},
        {"name":"Well Being", "group":1, "id": 22},
        {"name":"Life Events", "group":1, "id": 23},
        {"name":"Service Centre", "group":1, "id": 24},
        {"name":"Business Data", "group":1, "id": 25},
        {"name":"EHEI", "group":1, "id": 26},
        {"name":"Public Policy", "group":1, "id": 27},
        {"name":"UKSA", "group":1, "id": 28},
        {"name":"Digital Publishing", "group":1, "id": 29},
        {"name":"Social Survey", "group":1, "id": 30}

      ],
      "links":[
        {"source":0, "target":11, "value":1},
        {"source":0, "target":12, "value":1},
        {"source":0, "target":13, "value":1},
        {"source":0, "target":14, "value":1},
        {"source":0, "target":15, "value":1},
        {"source":0, "target":16, "value":2},
        {"source":0, "target":17, "value":2},
        {"source":0, "target":18, "value":2},
        {"source":0, "target":19, "value":2},
        {"source":0, "target":20, "value":3},
        {"source":0, "target":21, "value":3},
        {"source":0, "target":22, "value":3},
        {"source":0, "target":30, "value":3}, 
        {"source":4, "target":14, "value":2},
        {"source":4, "target":18, "value":2},
        {"source":4, "target":23, "value":2},
        {"source":4, "target":30, "value":2},
        {"source":4, "target":24, "value":2},
        {"source":4, "target":11, "value":2},
        {"source":1, "target":25, "value":1},
        {"source":1, "target":26, "value":3},
        {"source":1, "target":11, "value":1},
        {"source":1, "target":27, "value":2},
        {"source":1, "target":16, "value":3},
        {"source":1, "target":23, "value":2},
        {"source":1, "target":20, "value":2},
        {"source":1, "target":30, "value":2},
        {"source":1, "target":2, "value":1},
        {"source":1, "target":5, "value":2},
        {"source":7, "target":11, "value":1},
        {"source":7, "target":16, "value":3},
        {"source":7, "target":27, "value":3},
        {"source":7, "target":13, "value":2},
        {"source":7, "target":0, "value":1},
        {"source":7, "target":4, "value":2},
        {"source":7, "target":3, "value":2},
        {"source":7, "target":8, "value":3},
        {"source":3, "target":11, "value":1},
        {"source":3, "target":16, "value":2},
        {"source":3, "target":27, "value":1},
        {"source":3, "target":22, "value":2},
        {"source":3, "target":19, "value":3},
        {"source":3, "target":0, "value":1},
        {"source":3, "target":7, "value":1},
        {"source":3, "target":6, "value":1},
        {"source":6, "target":16, "value":1},
        {"source":6, "target":11, "value":1},
        {"source":6, "target":14, "value":2},
        {"source":6, "target":30, "value":3},
        {"source":6, "target":24, "value":2},
        {"source":6, "target":2, "value":2},
        {"source":6, "target":3, "value":2},
        {"source":6, "target":1, "value":2},
        {"source":6, "target":4, "value":2},
        {"source":6, "target":9, "value":2},
        {"source":10, "target":11, "value":1},
        {"source":10, "target":27, "value":1},
        {"source":10, "target":7, "value":1},
        {"source":10, "target":29, "value":3},
        {"source":10, "target":23, "value":2},
        {"source":10, "target":30, "value":2},
        {"source":10, "target":28, "value":1},
        {"source":10, "target":19, "value":2},
        {"source":10, "target":22, "value":3}
      ]
};


var width = 1000,
    height = 800;

var svg = d3.select("#Chart").append("svg")
    .attr("width", width)
    .attr("height", height);



var originX = width/2,
    originY = height/2,
    innerCircleRadius = 150,
    outerCircleRadius = 300;

var RADtoDEG = 180/Math.PI; // Conversion from radiants to degrees



var inOriginX = function(r) { return originX + ((innerCircleRadius) * Math.sin(r))};
var inOriginY = function(r) { return originY - ((innerCircleRadius) * Math.cos(r))};
var outOriginX = function(r) { return originX + ((outerCircleRadius) * Math.sin(r))};
var outOriginY = function(r) { return originY - ((outerCircleRadius) * Math.cos(r))};

var circ = Math.PI * 2;

innerRad = d3.range(0, circ, circ/11);
outerRad = d3.range(0, circ, circ/20);


graph.nodes.forEach( function(node) {
	rad = node.group === 0 ? innerRad[node.id] : outerRad[node.id-11];
  // console.log(rad);
	node.pos = node.group === 0 ? [inOriginX(rad), inOriginY(rad)] : [outOriginX(rad), outOriginY(rad)];
});



var nodes = graph.nodes,
    links = graph.links;



var force = d3.layout.force()
               .charge(-400)
               .linkDistance(300)
               .size([width, height])
							 .nodes(nodes)
               .links(links)
               .on("tick", tick);

var	node = svg.selectAll(".node"),
    link = svg.selectAll(".link")
    
    marker = svg.selectAll(".marker");


var markerPaths = d3.scale.ordinal().domain([3,2,1]).range(["M0,-5L10,0L0,5", "M0,-7.5L15,0L0,7.5", "M0,-10L20,0L0,10"]),
    markerEndPoint = d3.scale.ordinal().domain([3,2,1]).range([40, 45, 50]);


//  Legend

var legend = d3.select("#Arrows")
                .append("svg")
                .attr("width", 300)
                .attr("height", 300);

var arrows = ["WEAK", "MEDIUM", "STRONG"];
var posArrow = [];

arrows.forEach(function (d, i) {
  var x = 80;
  var y = 50 * (i + 1);

  posArrow.push({x, y});
});

// console.log(posArrow);

legend.selectAll(".leglink")
    .data(arrows)
    .enter()
    .append("svg:line")
    .attr("class", "leglink")
    .attr("x1", 10)
    .attr("y1", function (d, i) { return posArrow[i].y; })
    .attr("x2", 80)
    .attr("y2", function (d, i) { return posArrow[i].y; })
    .attr("stroke-width", function (d, i) { 
      return Math.pow(i + 1, 2); });

legend.selectAll(".gmarker")
    .data(arrows)
    .enter().append("g")
    .attr("class", "gmarker") 
    .append("path") 
    .attr("class", "marker") // This section adds in the arrows
    .attr("d", function (d, i) { return markerPaths(3 - i); }) 
    .attr("transform", function (d, i) { 
          var pos = [posArrow[i].x, posArrow[i].y];
          return "translate(" + pos + ")"; })
    .style("fill", "slategray");


legend.selectAll(".leglabels")
    .data(arrows)
    .enter()
    .append("text")
    .attr("class", "leglabels")
    .attr("text-anchor", "start")
    .attr("x", 130)
    .attr("y", function (d, i) { return posArrow[i].y + 4; })
    .text(function (d) { return d; })
    .attr("font-size", "15px");






drawGraph();





function drawGraph()
{ 

    
    //Add nodes with texts in them
    node = node.data(force.nodes());
    node.enter().append("g").attr("id", function(d) { return d.id })
    .attr("class", "gnode")
      .on("mouseover", handleMouseOver)
        .on("mouseout", handleMouseOut);
    node.append("circle")
        .attr("class", function(d) { return "node group" + d.group })
        .attr("r", 30)
        .style("fill", function(d) { if(d.group == 0) return "mediumaquamarine"; else return "LightSalmon" });
    node.append("text")
        .attr("text-anchor", "middle")
        .attr("dy", "1")
        .text(function(d) { return d.name; })
        .attr("font-size", "12px")
        .call(wrap, 60)
        // .attr("font-weight", "bold")
        .style("fill", "white");
    node.exit().remove();
  

    link = link.data(force.links());
    link.enter().append("g").attr("class", function(d) { return "glink n" + d.source + " " +  "n" + d.target }).style("opacity", 0);

    link.append("path")
      .attr("class", "link")
      .attr("stroke-width", function(d) { return Math.pow(4 - d.value, 2); });

    link.append("g")
    .attr("class", "gmarker") 
    .append("path") 
    .attr("class", "marker") // This section adds in the arrows
    .attr("d", function (d) { return markerPaths(d.value); }) 
    .attr("transform", function (d) { 
          var rad = innerRad[d.source];
          pos = [inOriginX(rad), inOriginY(rad)]
          return "translate(" + pos + ")"; })
    .style("fill", "slategray");


    link.exit().remove();





    var arc = d3.svg.arc()
      .outerRadius(function(d,i) { return i === 0 ? 190 : 340 })
      .startAngle(0)
      .endAngle(Math.PI);

    svg.selectAll(".arcs").data(["METHODOLOGY DIVISION", "ONS"]).enter().append("path")
      .attr("class", "arcs")
      .attr("d", arc)
      .style("fill", "none")
      .attr("transform", "translate(500, 400)")
      .attr("id", function(d,i) { return "wavy" + i; });

    svg.selectAll(".labels").data(["METHODOLOGY DIVISION", "ONS"]).enter().append("text")
      .attr("dy", "0")
      .attr("class", "labels")
      .append("textPath") //append a textPath to the text element
      .attr("xlink:href", function(d,i) { return "#wavy" + i; }) //place the ID of the path here
      .style("text-anchor","middle") //place the text halfway on the arc
      .attr("startOffset", "20%")   
      .text(function(d) { return d; });


    force.start();
}


function tick()
{
    node.attr("transform", function(d) { return "translate(" + d.pos + ")";});
       svg.selectAll(".link").attr("d", function(d) {
                   var dx = d.target.pos[0] - d.source.pos[0],
                       dy = d.target.pos[1] - d.source.pos[1],
                       dr = Math.sqrt(dx * dx + dy * dy);
   return "M" + d.source.pos[0] + "," + d.source.pos[1] + "A" + dr + "," + dr + " 0 0,1 " + d.target.pos[0] + "," + d.target.pos[1];
     });




}


function handleMouseOver(d, i) {  // Add interactivity

    svg.selectAll(".n" + i).style("opacity", 1).transition().duration(300).attrTween("stroke-dasharray", tweenDash);
    var ids = [i];
    links.forEach(function (link) {
      // console.log(link);
      if (link.source.id === i || link.target.id === i)
        ids.push(link.target.id, link.source.id);
    })

    // console.log(ids);
    svg.selectAll(".gnode").transition().duration(300).style("opacity", function () {
        return ids.contains(+this.id) ? 1 : .3;
    });

    svg.selectAll(".labels").transition().duration(300).style("opacity", .2);


}

function handleMouseOut(d, i) {
  
    svg.selectAll(".n" + i).style("opacity", 0);
    svg.selectAll(".gnode").transition().duration(300).style("opacity", 1);
    svg.selectAll(".labels").transition().duration(300).style("opacity", 1);


}


// Returns an attrTween for translating along the specified path element.
function tweenDash() {


  var that = this;
  // console.log(that);
  var arrow = d3.select(that).select(".marker");
  // console.log(arrow);
  var line = d3.select(that).select(".link");
  var diff = markerEndPoint(line.data()[0].value);
  // console.log(markerEndPoint(line.data()[0].value));
  var l = line.node().getTotalLength() - diff; 
  // console.log(line.node().getTotalLength());
  // console.log(l);
  var i = d3.interpolateString("0," + l, l + "," + l);
  var start = line.node().getPointAtLength(0);
  var startAngle = 0;


    return function(t) {


      var p = line.node().getPointAtLength(t * l);

      var dx = p.x-start.x,
          dy = p.y-start.y;

        var rotAngle = Math.atan(dy/dx) * RADtoDEG;

        if (dx < 0) {
          rotAngle += 180;
        }


        // console.log(rotAngle);

        if (isNaN(rotAngle)) { // Avoid 0/0
          rotAngle = startAngle;
          // console.log("angle: " + rotAngle);
          // console.log("dx: " + dx);
          // console.log("dy: " + dy);
        }


        arrow.attr("transform", "translate(" + p.x + "," + p.y + ") rotate(" + rotAngle + ")");//move marker

        
        start.x = p.x;
        start.y = p.y;

        startAngle = rotAngle;

        return i(t);
    };
}

//  From https://gist.github.com/mbostock/7555321
function wrap(text, width) {
  text.each(function() {
    var text = d3.select(this),
        words = text.text().split(/\s+/).reverse(),
        word,
        line = [],
        lineNumber = 0,
        lineHeight = 0, // ems
        y = text.attr("y"),
        dy = parseFloat(text.attr("dy")),
        tspan = text.text(null).append("tspan").attr("x", 0).attr("y", y).attr("dy", 0 + "em");

        // console.log(tspan);
    while (word = words.pop()) {
      line.push(word);
      tspan.text(line.join(" "));
      if (tspan.node().getComputedTextLength() > width) {
        line.pop();
        tspan.text(line.join(" "));
        line = [word];
        tspan = text.append("tspan").attr("x", 0).attr("y", y).attr("dy", ++lineNumber * lineHeight + dy + "em").text(word);
      }
    }
  });
}




</script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  shape-rendering: crispEdges;
}

.grid-background {
  fill: white;
}

.grid line {
  stroke: black;
}

.grid .minor line {
  stroke-opacity: .5;
}
 

.grid text {
  display: none;
   
}

.axis line {
  stroke: #000;
}

.axis path,
.grid path {
  display: none;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 100, right: 10, bottom: 380, left: 10},
    width = 960 - margin.right - margin.left,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .domain([0, 10000])
    .range([0, width]);
var z = d3.scale.linear()
    .domain([0, 5000])
    .range([0, width]);

var y = d3.scale.linear()
    .range([0, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.right + margin.left)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("rect")
    .attr("class", "grid-background")
    .attr("width", width)
    .attr("height", height);

svg.append("g")
    .attr("class", "grid")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.svg.axis().scale(x).ticks(100).tickSize(-height))
  .selectAll(".tick")
    .data(x.ticks(10), function(d) { return d; })
  .exit()
    .classed("minor", true);
  
  svg.append("g")
    .attr("class", "grid")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.svg.axis().scale(z).ticks(50).tickSize(-height))
  .selectAll(".tick")
    .data(x.ticks(30), function(d) { return d; })
  .exit()
 

svg.append("g")
    .attr("class", "axis")
    .attr("transform", "translate(0," + height + ")")

    .call(d3.svg.axis().scale(x).ticks(80));

</script>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">

    <title>Intro to Data Vis with D3</title>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.13/d3.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.6/react.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.6/react-dom.js"></script>

    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css" rel="stylesheet" type="text/css">

    <link href="styles.css" rel="stylesheet" type="text/css">

  </head>
  <body>
    <div id="app-container"></div>
    <script src="main-build.js"></script>
  </body>
</html>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { 
      margin:0;position:fixed;top:0;right:0;bottom:0;left:0;
      padding: 10px;
    }    
    .color {
      float: left;
      padding: 3px 5px;
      margin: 2px 5px;
      font-family: Helvetica;
      border-radius: 3px
    }
  </style>
</head>

<body>
  
  <script>
		var display = d3.select("body");
    d3.csv("colors.csv", function(err, colors) {
      var cdivs = display.selectAll("div.color")
      	.data(colors)
      cdivs.enter()
      	.append("div").classed("color", true);
      
      cdivs.text(function(d) { 
        //var rgb = d3.rgb(d.color);
        //var hsl = rgb.hsl();
        return d.color.toLowerCase()
      })
      .style({
        "background-color": function(d) { return d.color },
        color: function(d) {
          var hsl = d3.hsl(d.color);
          console.log(hsl)
          if(hsl.l >= 0.5) {
            return "black"
          } else {
            return "white"
          }
        }
      })
    })
  </script>
</body>
<!DOCTYPE html>
<html>
  <head>
    <title>Leaflet example | CartoDB.js</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    <link rel="shortcut icon" href="http://cartodb.com/assets/favicon.ico" />
    <style>
      html, body, #map {
        height: 100%;
        padding: 0;
        margin: 0;
      }
    </style>
    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css" />
  </head>
  <body>
    <div id="map"></div>
    
    <!-- include cartodb.js library -->
    <script src="http://libs.cartocdn.com/cartodb.js/v3/cartodb.js"></script>
    <script src="http://d3js.org/queue.v1.min.js"></script>

    <script>
      function main() {
        var map = new L.Map('map', {
          zoomControl: false,
          center: [43, 0],
          zoom: 3
        });

        L.tileLayer('http://tile.stamen.com/toner/{z}/{x}/{y}.png', {
          attribution: 'Stamen'
        }).addTo(map);

        var layers = [
          'http://documentation.cartodb.com/api/v2/viz/2b13c956-e7c1-11e2-806b-5404a6a683d5/viz.json',
          'http://documentation.cartodb.com/api/v2/viz/236085de-ea08-11e2-958c-5404a6a683d5/viz.json'
          // add here more layers
        ]

        var layerManager = [];

        var q = queue(3);

        layers.forEach(function(vizjson) {
          q.defer(function(vizjson, callback) {
            cartodb.createLayer(map, vizjson, function(layer) { callback(null, layer); })
          }, vizjson);
        })

        q.await(function() {
          var leafletLayers = Array.prototype.slice.call(arguments, 1);
          leafletLayers.forEach(function(lyr) {
            layerManager.push(lyr)
            lyr.addTo(map);
          });
        })

        // the default state of the map. I've chosen it to mean, both layers visble
        var state = 0;
        // here, i'm not linking to any menu click, just any click on the browser
        // you can adapt
        $('body').click(function(){
          switch(state){
            case 0:
              // All layers are on, so move to state 1
              state = 1;
              // State 1 just means, hide the first layer
              layerManager[0].hide();
              break;
            case 1:
              // we are in state 1, so go to state 2
              state = 2;
              // state 2 means, hide layer 2 and show again layer 1
              layerManager[1].hide();
              layerManager[0].show();
              break;
            default:
              // we aren't in 0 or 1, so must be 2. go back to state 0
              state = 0;
              // in state 0, we'll show both layers
              layerManager[1].show();
              // layer 0 is already showing, so no action needed.
              // layerManager[0].show();
          }
        })
      }

      // you could use $(window).load(main);
      window.onload = main;
    </script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
    * {
        line-height: 20px;
        font-family: Calibri, Arial, Helvetica, sans-serif;
        color: #999;
        margin: 0;
        padding: 0;
        text-align: center;
        text-rendering: optimizelegibility;
    }

    canvas {
        display: block;
        border-bottom: 1px solid #dedede;
    }

    svg {
        position: absolute;
        left: 0;
        top: 0;
        display: none;
    }

    .axis .domain {
        display: none;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #000;
        stroke-opacity: 0.87;
        stroke-width: 0.444;
    }

    .axis text {
        font: 16px Calibri, Arial, Helvetica, sans-serif;
        fill: #000;
        fill-opacity: 0.87;
    }
</style>
<body>
<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script src="utils.js"></script>
<script>
    var width = 960;
    var height = 480;
    var canvasScale = ((document.body.clientWidth > width) ? document.body.clientWidth : width) / width;

    width *= canvasScale;
    height *= canvasScale;

    var valueInterpolation = d3.interpolate('#f89f00', '#f80000');

    var maxScale = 6;
    var scaleMargin = 0.014;
    var maxCountry = 1;

    var config = {
        durationMin: 800,
        durationMax: 1200,
        interval: 1000,
        land: {
            fillStyle: '#fff',
            shadowColor: '#000',
            shadowOffsetY: 0,
            shadowBlur: 0
        },
        border: {
            lineWidth: 0.444,
            strokeStyle: '#666',
            shadowColor: '#888',
            shadowOffsetY: 0,
            shadowBlur: 0
        },
        past: {
            fillStyle: '#ddd',
            shadowColor: '#fff',
            shadowOffsetY: 0,
            shadowBlur: 0
        }
    };

    var centroidsShifts = {
        USA: [30, 10],
        IRN: [0, 5],
        FRA: [20, -20],
        IND: [-2, 8],
        MAR: [0, -6],
        CAN: [-22, 7],
        IRQ: [2, 2],
        SYR: [0, -2]
    };

    var rusUsaShift = 20;
    var canvas = d3.select('body').append('canvas').attr('width', width).attr('height', height);
    var info = d3.select('body').append('div');
    var ctx = canvas.node().getContext('2d');
    ctx.lineJoin = 'round';
    var projection = d3.geo.equirectangular().translate([width / 2, height / 2]).scale(153 * canvasScale).rotate([-rusUsaShift, 0, 0]);
    projection.precision(0);
    var path = d3.geo.path().context(ctx);

    var area = 1;
    var simplify = d3.geo.transform({
        point: function (x, y, z) {
            if (z >= area) {
                this.stream.point(x, y);
            }
        }
    });

    path.projection({
        stream: function (s) {
            return simplify.stream(projection.stream(s));
        }
    });

    var currentScale = 1;
    var currentTranslate = [width / 2, height / 2];
    var pastCountries = {};
    var pastColors = {};
    var currentEventIndex = -1;
    var loadedEvents;
    var land, borders, countries = {};

    var scale = d3.scale.linear()
            .domain([1, 2])
            .range([0, 380]);

    var svg = d3.select('body').append('svg')
            .style('top', height - 35 + 'px')
            .style('left', width - 400 + 'px')
            .attr('width', 400)
            .attr('height', 35);

    var gradient = svg.append('svg:defs')
            .append('svg:linearGradient')
            .attr('id', 'gradient')
            .attr('x1', '0%')
            .attr('y1', '0%')
            .attr('x2', '100%')
            .attr('y2', '0%')
            .attr('spreadMethod', 'pad');

    gradient.append('svg:stop')
            .attr('offset', '0%')
            .attr('stop-color', valueInterpolation(0))
            .attr('stop-opacity', 1);

    gradient.append('svg:stop')
            .attr('offset', '100%')
            .attr('stop-color', valueInterpolation(1))
            .attr('stop-opacity', 1);

    svg.append('svg:rect')
            .attr('width', 380)
            .attr('transform', 'translate(10,7)')
            .attr('height', 8)
            .style('stroke-width', 0)
            .style('fill', 'url(#gradient)');

    var axis = d3.svg.axis()
            .scale(scale)
            .ticks(1)
            .tickSize(8)
            .orient("bottom");

    var legend = svg.append("g")
            .attr("class", "axis axis--x")
            .attr("transform", "translate(10,7)")
            .call(axis);

    d3.json('world.json', function (world) {
        initWorld(world);
        d3.json('/darosh/raw/0444bdd92c1f968c75ef/events.json', function (events) {
            loadedEvents = events;
            update();
        });
    });

    function update() {
        var e = loadedEvents[currentEventIndex];

        if (e) {
            svg.style('display', 'block');
            var d = new Date(e[0]);
            var mm = getValuesMinMax(e[1]);

            info.text('Week: ' + (d.getMonth() + 1) + '/' + d.getDate() + '/' + d.getFullYear() +
                    ', Record: ' + (currentEventIndex + 1) + ' of ' + loadedEvents.length +
                    ', Countries: ' + Object.keys(e[1]).length +
                    ', Past countries: ' + Object.keys(pastCountries).length +
                    ', Min: ' + mm.min + ', Max: ' + mm.max + ', Sum: ' + mm.sum);

            scale.domain(!(mm.max - mm.min) ? [mm.min - 0.5, mm.max + 0.5] : [mm.min, mm.max]);
            axis.ticks((mm.max - mm.min) || 1);
            legend.transition().duration(config.durationMin).call(axis);
            transition(e[1]);
        } else {
            transition({});
        }

        currentEventIndex++;

        if (currentEventIndex < loadedEvents.length) {
            setTimeout(update, config.interval);
        } else {
            setTimeout(function () {
                config.durationMax *= 2;
                info.text('');
                svg.style('display', 'none');
                transition({});
            }, config.interval);
        }
    }

    function initWorld(world) {
        topojson.presimplify(world);
        borders = topojson.mesh(world, world.objects.countries);
        topojson.feature(world, world.objects.countries).features.forEach(function (v) {
            countries[v.id] = v;
        });
    }

    function transition(values) {
        var selectedFeatures = Object.keys(values).map(function (v) {
            return countries[v];
        });

        var currentRotation = projection.rotate();
        var targetRotation = !values['RUS'] && values['USA'] ? [+rusUsaShift, 0] : [-rusUsaShift, 0];
        var rotationInterpolation = d3.interpolate(currentRotation, targetRotation);

        projection.rotate(targetRotation);
        area = 1.5;

        var bound = groupBounds(path, selectedFeatures, width, height, maxCountry * width, maxCountry * height);
        var size = [bound[1][0] - bound[0][0], bound[1][1] - bound[0][1]];
        var targetScale = getScale(size, width, height, scaleMargin, maxScale);
        var targetCenter = [(bound[0][0] + bound[1][0]) / 2, (bound[0][1] + bound[1][1]) / 2];
        var realCenter = [width / 2, height / 2];
        var minMax = getValuesMinMax(values);

        targetCenter[1] = (targetCenter[1] < realCenter[1] / targetScale) ? realCenter[1] / targetScale : targetCenter[1];

        var zoomInterpolation = d3.interpolateZoom([currentTranslate[0], currentTranslate[1], width * currentScale],
                [targetCenter[0], targetCenter[1], width * targetScale]);

        d3.transition()
                .duration(Math.min(config.durationMax, Math.max(config.durationMin, 2.5 * zoomInterpolation.duration)))
                .tween('tween', function getTween() {
                    return function drawTween(t) {
                        // Clear
                        ctx.globalAlpha = 1;
                        ctx.setTransform(1, 0, 0, 1, 0, 0);
                        ctx.clearRect(0, 0, width, height);

                        // Transform
                        var zoom = zoomInterpolation(t);
                        projection.rotate(rotationInterpolation(t));
                        currentTranslate = [zoom[0], zoom[1]];
                        currentScale = zoom[2] / width;

                        var box = [currentTranslate[0] - realCenter[0] / currentScale,
                            currentTranslate[1] - realCenter[1] / currentScale];

                        box[1] = box[1] < 0 ? 0 : box[1];

                        var translate = [-box[0] * currentScale, -box[1] * currentScale];

                        ctx.translate(translate[0], translate[1]);
                        ctx.scale(currentScale, currentScale);
                        area = 1 / canvasScale / canvasScale / currentScale / currentScale;

                        // Past
                        ctx.beginPath();
                        setContextSyle(ctx, config.past);
                        Object.keys(pastCountries).forEach(function fillPast(id) {
                            if (!values[id]) {
                                path(countries[id]);
                                pastColors[id] = config.past.fillStyle;
                            }
                        });
                        ctx.fill();

                        // Current
                        selectedFeatures.forEach(function fillNow(f) {
                            ctx.beginPath();
                            ctx.fillStyle = d3.interpolate(pastColors[f.id] || config.land.fillStyle, valueInterpolation(normalize(values[f.id], minMax)), 'easeIn')(t);
                            pastColors[f.id] = ctx.fillStyle;
                            path(f);
                            ctx.fill();
                            pastCountries[f.id] = true;
                        });

                        // Borders
                        ctx.beginPath();
                        setContextSyle(ctx, config.border);
                        ctx.lineWidth = config.border.lineWidth / currentScale;
                        path(borders);
                        ctx.stroke();
                    };
                })
                .transition();
    }
</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  background-color: #f5f5f5;
}

.axis path,
.axis line {
  fill: none;
  stroke: #a9a9a9;
  shape-rendering: crispEdges;
}
  
  .text{
    stroke: #a9a9a9
  }


.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("right");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name]};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
<!DOCTYPE html>

<head>
    <title>hof-stacked-bar-ii</title>
    <meta charset="utf-8">
    <style>
        body {
            font: 10px sans-serif;
        }
        
        .axis path,
        .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }
        
        .bar {
            fill: steelblue;
        }
        
        .x.axis path {
            display: none;
        }

    </style>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
</head>

<body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
    <script>
        var current_key = 'rWar';
        var current_key_idx = 0;

        var minyr = 1899;
        var maxyr = 9999;
        var minwar = 48;
        var maxwar = 10000;
        var plid_font_size = 10;

        var margin = {
                top: 20,
                right: 150,
                bottom: 80,
                left: 80
            },
            width = 960 - margin.left - margin.right,
            height = 4500 - margin.top - margin.bottom;

        var sliders;
        var metric_keys = ['rWar', 'fWar', 'rwa2', 'rwa3', 'rwa4',
            'rwa5', 'rwa7', 'rwb3', 'rwb5', 'rwb7'
        ];

        var metric_d = ['career rWar (baseball reference)', 'career fWar (fangraphs)', 'career wins-above-2 rWar', 'career wins-above-3 rWar', 'career wins-above-4 rWar', 'career wins-above-5 rWar', 'career wins-above-7 rWar', 'best 3-year-rWar total', 'best 5-year-rWar total', 'best 7-year-rWar total'];

        var metric_descriptions = {}
        _.forEach(metric_keys, function(k, i) {
            metric_descriptions[k] = metric_d[i];
            console.log(k, i, metric_d, metric_descriptions);
        });

        var x = d3.scale.linear()
            .rangeRound([0, width]);

        var y = d3.scale.ordinal()
            .rangeRoundBands([0, height], .1);

        var opScale = d3.scale.linear()
            .range([0.85, 0.85])
            .domain([1901, 2000]);

        var color;
        if (metric_keys.length <= 11) {
            color = d3.scale.ordinal()
                .range(['#67001f', '#b2182b ', '#d6604d ', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061']);
        } else {
            color = d3.scale.category20b()
                .domain(d3.range(metric_keys.length));
        }

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left");

        var xAxis = d3.svg.axis()
            .scale(x)
            .orient("top")
            .tickFormat(d3.format(".2s"));

        var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        var weighted_total = function(data, weights) {
            _.forEach(data, function(d) {
                var ss = 0.0;
                var ww = 0.0;
                _.mapObject(weights, function(val, key) {
                    ss += val * d[key];
                    ww += val;
                })
                if (ww > 0) {
                    d.total = ss / ww;
                } else {
                    d.total = 0.0;
                }
            })
        };

        d3.csv("HOF_metrics.csv", function(error, idata) {
            data = _.filter(idata, function(d) {
                return (
                    (parseFloat(d.rWar) >= minwar && parseFloat(d.rWar) <= maxwar) && (parseFloat(d.minyr) >= minyr && parseFloat(d.minyr) <= maxyr)
                );
            });

            var metric_weights = {};
            _.forEach(metric_keys, function(k) {
                metric_weights[k] = 1.0;
            });
            metric_weights['rWar'] = 100;

            color.domain(d3.keys(data[0]).filter(function(key) {
                return _.contains(metric_keys, key);
            }));

            data.forEach(function(d) {
                var x0 = 0;
                d.metrics = color.domain().map(function(name) {
                    return {
                        name: name,
                        x0: x0,
                        x1: x0 += +d[name]
                    };
                });
                d.total = d.metrics[d.metrics.length - 1].x1;
            });

            x.domain([0, d3.max(data, function(d) {
                return d.total;
            })]);

            var player_idx = {};
            var sort_by_weight = function(data, weights) {
                //                console.log("sort byweight!");
                weighted_total(data, weights);
                data.sort(function(a, b) {
                    return b.total - a.total;
                });

                var gloset; // global offset
                var oset;
                current_key_idx = metric_keys.indexOf(current_key);
                _.forEach(data, function(d, i) {
                    if (typeof(d.idx) === typeof(undefined)) {
                        d.idx = i;
                    }
                    d.oldidx = d.idx;
                    d.idx = i;
                    player_idx[d.plid] = d.idx;
                    //       oset = (d.metrics[current_key_idx].x0 + d.metrics[current_key_idx].x1) * 0.5;

                    oset = d.metrics[current_key_idx].x0;
                    if (i === 0) {
                        gloset = oset;
                    }
                    d.oset = gloset - oset;
                });
            };


            var set_weights = function(weight_key) {
                //                console.log("setting weights ", metric_weights, weight_key, typeof(metric_weights));
                _.forEach(metric_weights, function(v, k) {
                    metric_weights[k] = (k == weight_key ? 100.0 : 1.0);
                    //                    console.log("set_weights ", k, weight_key, k == weight_key);
                });
            };

            sort_by_weight(data, metric_weights);

            y.domain(data.map(function(d, i) {
                return i;
            }));

            sliders = d3.select("div.sliders")
                .append('g')
                .style('position', 'absolute')
                .style('width', '240px')
                .style('top', '20px')
                .style('right', '20px');

            sliders.selectAll('input')
                .data(metric_keys)
                .enter()
                .append('input')
                .attr('class', 'metric_slider')
                .attr('id', function(d, i) {
                    return 'metric_slider_' + metric;
                })
                .attr('type', 'range')
                .attr('min', 0)
                .attr('max', 100)
                .attr('value', function(d) {
                    return d.value;
                })
                .style('top', function(d, i) {
                    return get_top(i) + "px";
                })
                .style('right', "10px")
                .on('change', function(d, i) {
                    d.value = parseInt(this.value);
                    //console.log(d, d.value);
                    recomputeCharge();
                    //            force.start();
                });

            svg.append('text')
                .text('player-label')
                .attr('id', 'player-label')
                .attr('x', 800)
                .attr('y', 20)
                .attr('text-anchor', 'end')
                .style('position', 'fixed')
                .style('top', 100)
                .style('right', 20)
                .style('font-size', 18);

            svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .selectAll("text")
                .attr("dx", "-.8em")
                .attr("dy", ".15em")
                .style('text-anchor', 'end')
                .attr("transform", "rotate(-65)")
                .attr('font-size', '6px')
                .attr('fint-family', 'sans-serif')
                .attr('class', 'xaxis_label');

            var ya = svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .selectAll("text")
                .text(function(d, i) {
                    //                    return data[i].pname;
                    return i;
                })
                .attr("class", "ytext")
                .attr("transform", "rotate(0)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .attr("font-size", "8px")
                .style("text-anchor", "end");

            var bar_containers = svg.selectAll(".bar_containers")
                .data(data)
                .enter().append("g")
                .attr("class", "bar_containers")
                .attr("transform", function(d, i) {
                    //                    console.log("container ", d, i, y(i));
                    return "translate(0," + y(i) + ")";
                });

            var plid = svg.selectAll(".plid")
                .data(data)
                .enter().append("g")
                .attr("class", "plid")
                .attr("transform", function(d, i) {
                    return "translate(0," + y(i) + ")";
                });

            //            plid.selectAll(".ytext")
            //                .data(data)
            //                .enter()
            //                .append("text")
            //                .text(function(d, i) {
            //                    console.log(d, i);
            //                    return d.pname;
            //                })
            //                .attr("transform", function(d, i) {
            //                    return "translate(0," + y(i) + ")";
            //                });

            d3.selectAll(".bar_containers")
                .selectAll("rect")
                .data(function(d) {
                    return _.map(d.metrics, function(x) {
                        return {
                            'name': x.name,
                            'x0': x.x0,
                            'x1': x.x1,
                            'pname': d.pname,
                            'plid': d.plid,
                            'birthYear': d.birthYear,
                            'minyr': d.minyr,
                            'idx': d.idx
                        };
                    })
                })
                .enter()
                .append("rect")
                .attr("height", y.rangeBand())
                .attr("x", function(d, i) {
                    return x(d.x0);
                })
                .attr("width", function(d, i) {
                    return x(d.x1) - x(d.x0);
                })
                .style("text-anchor", "end")
                .style("fill", function(d) {
                    return color(d.name);
                })
                .style('opacity', function(d) {
                    return opScale(d.minyr);
                })
                .on('click', function(d, i) {
                    current_key = metric_keys[i];
                    set_weights(metric_keys[i]);
                    sort_by_weight(data, metric_weights);
                    do_sort(data);
                })
                .on('mouseover', function(d, i) {
                    d3.selectAll('#player-label')
                        .text(d.pname)
                        .attr("y", function() {
                            //                            console.log("player-label ", d, y(d.idx), player_idx[d.plid]);
                            return y(player_idx[d.plid]);
                        })
                        .style('opacity', 1)
                })
                .on('mouseout', function(d, i) {
                    d3.selectAll('#player-label')
                        .style('opacity', 0);
                });


            d3.selectAll(".bar_containers")
                .append("text")
                .text(function(d, i) {
                    return d.pname;
                })
                //                            .style("text-anchor", "middle")

            .style("font-size", plid_font_size)
                .style("fill", "white")
                .attr("transform", function(d, i) {
                    var x = parseFloat(y.rangeBand() / 2) + 0 * parseFloat(plid_font_size) +3;
                    return "translate(20," + x.toString() + ")";
                });


            var do_sort = function(data) {
                //                console.log("select plid ");
                d3.selectAll(".bar_containers")
                    .transition()
                    .duration(1200)
                    .attr("transform", function(d, i) {
                        var dx = Math.random() * width * 0.1;
                        return "translate(" + dx + "," + y(d.oldidx) + ")";
                    })
                    .transition()
                    .duration(1800)
                    .attr("transform", function(d, i) {
                        return "translate(" + x(d.oset) + "," + y(d.idx) + ")";
                    })
            };


            var legend = svg.selectAll(".legend")
                .data(color.domain().slice().reverse())
                .enter().append("g")
                .attr("class", "legend")
                .attr("transform", function(d, i) {
                    return "translate(0," + i * 20 + ")";
                });


            legend.append("rect")
                .attr("x", width + margin.right - 18)
                .attr("width", 18)
                .attr("height", 18)
                .style("fill", color)
                .on('click', function(d, i) {
                    current_key = d;
                    set_weights(d);
                    sort_by_weight(data, metric_weights);
                    //                    console.log('click', d, i, metric_weights, data.slice(0, 10));
                    do_sort(data);
                })
                .on("mouseover", function(d, i) {;
                    d3.select('#legend-hover-text')
                        .text(function() {
                        console.log("mouse ", d, i);
                            return metric_descriptions[d];
                        })
                        .style("opacity", 1);
                })
                .on("mouseout", function(d, i) {;
                    d3.select('#legend-hover-text')
                        .style("opacity", 0);
                });;

            legend.append("text")
                .attr("x", width + margin.right - 144)
                .attr("y", 5)
                .attr("dy", ".35em")
                .attr('id', 'legend-hover-text')
                .style("text-anchor", "end")
                .text(function(d) {
                    return d;
                })
                .style('opacity', 0);


            legend.append("text")
                .attr("x", width + margin.right - 24)
                .attr("y", 9)
                .attr("dy", ".35em")
                .style("text-anchor", "end")
                .text(function(d) {
                    return d;
                });

        });

    </script>
<!DOCTYPE html>
<html>
<head>
  <link href="style.css" rel="stylesheet" />
  <meta charset=utf-8 />
  <title>Autism bigram network</title>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
  <script src="http://cytoscape.github.io/cytoscape.js/api/cytoscape.js-latest/cytoscape.min.js"></script>
  <script src="cola.v3.min.js"></script>
  <script type="text/javascript" src="historical_bigram_network_cytoscape.json"></script>
  <script src="code.js"></script>
</head>
  
<body>
  <div id="cy"></div>
</body>
</html><!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js"></script>
  
  <style>
  body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  width: 680px;
  height: 400px;
  position: relative;
  }
    h2 {
      color: black;
      text-align: center;
    }

    .axis {
      font-family: arial;
      font-size: 0.6em;
    }

    path {
      fill: none;
      stroke: black;
      stroke-width: 2px;
    }

    .tick {
      fill: none;
      stroke: black;
    }

    circle {
      opacity: 0.4;
      stroke: none;
      fill: red;
    }

    .line_plot {
      fill: none;
      stroke: #4eb0bb;
      stroke-width: 1px;
    }

  </style>

  <script>
    function draw(data) {
    "use strict";
    
    debugger;

    var format = d3.time.format("%d-%m-%Y");

    data = data.filter(function(d) {
      return d['ATTENDANCE'] !== 'xxx';
    });

    var margin = 75,
        width = 960 - margin,
        height = 450 - margin;

    d3.select("body")
      .append("h2")
        .text("World Cup Attendance")

    d3.select("body")
      .append("svg")
        .attr("width", width + margin)
        .attr("height", height + margin)
      .append('g')
        .attr('class', 'chart');
    
    var create_date = function(str) {
        var parse = str.split(' ')
        return format.parse(parse[0]);
    }

    var nested = d3.nest()
      .key(function(d) { 
            var date = create_date(d["DATE"]);
            var month_year = new Date(date.getUTCFullYear(), 6, 15);
            return month_year;
        })
      .sortKeys(function(a,b) {
            return new Date(a) - new Date(b);
        })
      .rollup(function(leaves) { return d3.sum(leaves, function(d) {return +d['ATTENDANCE']})})
      .entries(data);

    d3.select('svg')
      .selectAll("circle")
      .data(nested)
      .enter()
      .append("circle")


    var time_extent = d3.extent(data, function(d) {
      return create_date(d['DATE']);
    })

    var time_scale = d3.time.scale()
      .range([margin, width])
      .domain(time_extent);

    var count_extent = d3.extent(nested, function(d) {
      return d.values;
    });

    var count_scale = d3.scale.linear()
      .range([height, margin])
      .domain(count_extent);

    d3.selectAll('circle')
      .attr('cx', function(d) {
        return time_scale(new Date(d.key));
      })
      .attr('cy', function(d) {
        return count_scale(d.values);
      })
      .attr('r', 3);

      var time_axis = d3.svg.axis()
        .scale(time_scale)
        .ticks(d3.time.years, 2);

      d3.select("svg")
        .append('g')
        .attr('class', 'x axis')
        .attr('transform', "translate(0," + height + ")")
        .call(time_axis);

      var count_axis = d3.svg.axis()
        .scale(count_scale)
        .orient("left");

      d3.select("svg")
        .append('g')
        .attr('class', 'y axis')
        .attr('transform', "translate(" + margin + ",0)")
        .call(count_axis);

    var line = d3.svg.line()
        .x(function(d) {
            return time_scale(new Date(d.key));
        })
        .y(function(d){return count_scale(d.values)});

    d3.select("svg")
        .append("path")
        .attr("d", line(nested))
        .attr("class", "line_plot");
    }
  </script>
</head>
<body>
  <script>
    d3.csv("games.csv", draw);
  </script>
</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <style>
      .axis path,
      .axis line {
        fill: none;
        stroke: #555;
      }

      body {
        font-family: "Helvetica", sans-serif;
        font-weight: lighter;
      }
    </style>
  </head>
  <body>
    <form>
      <label for="retention">% Retention</label>
      <input name="retention" type="text" id="retention" />
      <input type="submit" value="update" />
    </form>

    <script src="d3.v3.min.js" type="text/javascript"></script>
    <script src="cohort.js" type="text/javascript"></script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.overlay {
  fill: none;
  pointer-events: all;
}

.land {
  fill: #000;
}

.boundary {
  fill: none;
  stroke: #fff;
  stroke-linejoin: round;
  stroke-linecap: round;
}

</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<body>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.mercator()
    .translate([0, 0])
    .scale(width / 2 / Math.PI);

var zoom = d3.behavior.zoom()
    .scaleExtent([1, 8])
    .on("zoom", move);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
    .call(zoom);

var g = svg.append("g");

svg.append("rect")
    .attr("class", "overlay")
    .attr("x", -width / 2)
    .attr("y", -height / 2)
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/world-50m.json", function(error, world) {
  if (error) throw error;

  g.append("path")
      .datum(topojson.feature(world, world.objects.countries))
      .attr("class", "land")
      .attr("d", path);

  g.append("path")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
      .attr("class", "boundary")
      .attr("d", path);
});

function move() {
  var t = d3.event.translate,
      s = d3.event.scale;
  t[0] = Math.min(width / 2 * (s - 1), Math.max(width / 2 * (1 - s), t[0]));
  t[1] = Math.min(height / 2 * (s - 1) + 230 * s, Math.max(height / 2 * (1 - s) - 230 * s, t[1]));
  zoom.translate(t);
  g.style("stroke-width", 1 / s).attr("transform", "translate(" + t + ")scale(" + s + ")");
}

</script>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <link href='https://fonts.googleapis.com/css?family=Lato:300,900' rel='stylesheet' type='text/css'>

    <style>
     body{
        background-color: whitesmoke;
     }

     svg {
        background-color: white;
        font-family: 'Lato';
     }

     circle {
        fill: none;
     }

     .circlepack text {
        text-anchor: middle;
     }

     text.city {
        fill: #2D926D;
     }

     text.airline {
        font-weight: bold;
     }

     .large {
        fill: #DD5547;
     }

     .medium {
        fill: #D4E169;
     }

     .small {
        fill: #95E3B3;
     }

     .lvl2 {
        stroke: #BDE5C0;
        opacity: .5;
     }

     text.title {
      font-size: 26px;
     }


    </style>
</head>
<body>
    <svg width=960 height=500></svg>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3-legend/1.5.0/d3-legend.js"></script>
    <script>
    var width = 960,
    height = 500,
    svg = d3.select('svg');

    d3.json('https://gist.githubusercontent.com/susielu/3d194b8660ec6ab214a3/raw/5093ce84b2b48940efc33df84a4d3b6a90ff26ed/airline-delays.json', function(err, json){

        //creating nested data
        var nested = d3.nest()
            .key(function(d) { return d.carrier; })
            .key(function(d) { return d.origin; })
            .key(function(d) {
                var delay = d.delay;

                if (delay <= 30){
                    return "15 to 30 min";
                } else if (delay <= 60){
                    return "31 min to 1 hour";
                } else {
                    return "More than 1 hour";
                }
            })
            .rollup(function(d) { return d.length; })
            .entries(json)

        //------start of hack------

        //creating different summary levels for
        //labels to have a meaningful size in the
        //pack algorithm
        var cityCount = d3.nest()
            .key(function(d){ return d.carrier; })
            .key(function(d){ return d.origin; })
            .rollup(function(d) { return d.length; })
            .entries(json);

        var airlineCount = cityCount.map(function(d){
          return {
            key: d.key,
            values: d.values
              .map(function(d){ return d.values})
              .reduce(function(p, c) {
              return p + c;} )
          }
        })

        nested.forEach(function(d, i){
            //add bubble for city labels based on size of children
            cityCount[i].values.forEach(function(c, j){
                d.values[j].values.push({
                    key: c.key,
                    values: c.values
                })
            })

            //add bubble for airline labels based on size of children
            d.values.push({
              key: d.key,
              airline: true,
              values: cityCount[i].values.map( function(d) {
                return {values: d.values};
              })
            })
        })
        //------end of hack-------

        var nest = {'name': 'root', 'values': nested};
        var color = d3.scale.ordinal()
            .domain(["15 to 30 min", "31 min to 1 hour", "More than 1 hour"])
            .range(["small", "medium", "large"])

        //making the circle pack
        var pack = d3.layout.pack()
          .size([width, height + 80])
          .children(function(d){ return d.values; })
          .value(function(d){ return d.values; })

        var node = svg.append('g')
          .attr('class', 'circlepack')
          .attr('transform', 'translate(100,-40)')
          .datum(nest).selectAll('.node')
          .data(pack.nodes)
          .enter().append('g')
          .attr('class', function(d){ return d.children ? 'node': 'leaf node'; })
          .attr('transform', function(d){ return 'translate(' + d.x + ',' + d.y + ')'; });

        node.filter(function(d){ return d.depth === 2 || d.depth === 3 })
            .append("circle")
            .attr("r", function(d) { return d.r; })
            .attr("class", function(d){
                var level = d.depth;
                if (level === 3 && color.domain().indexOf(d.key) >= 0){
                    return color(d.key);
                } else if (level === 2 && !d.airline){
                    return "lvl2";
              }
            });

        var airlineMap = {
          "WN": "Southwest",
          "UA": "United",
          "OO": "Skywest",
          "AA": "American",
          "DL": "Delta",
          "US": "US Airways",
          "B6": "Jetblue"
        }

        //airline labels
        node.filter(function(d){ return d.depth === 2 && d.airline})
            .append("text")
            .attr('y', function(d){ return d.r*.25; })
            .attr('class', 'airline')
            .style('font-size', function(d){ return d.r*.4})
            .text(function(d) { return airlineMap[d.key] ; });

        //city labels
        node.filter(function(d){ return d.depth === 3 &&  color.domain().indexOf(d.key) < 0})
          .append("text")
          .attr('y', function(d){ return + d.r*.3; })
          .attr('class', 'city')
          .style('font-size', function(d){ return d.r*.6})
          .text(function(d) {
            return d.key ; });

        var annotation = svg.append('g')
          .attr('transform', 'translate(50,50)');

        annotation.append('text')
          .text('Flight Delay Worst Offenders')
          .attr('class', 'title')

        annotation.append('text')
          .text('Airport codes = departure city')
          .attr('y', 50)

        //d3-legend
        var legend = d3.legend.color()
            .shapePadding(5)
            .useClass(true)
            .scale(color);

        annotation.append('g')
            .attr('transform', 'translate(0,80)')
            .call(legend);


    })

    </script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

h1 {
font: 40px Helvetica;
color: #FFF200;

}

h2 {
font: 25px Helvetica;
color: #FFF200;

}

h3 {
font: 20px Helvetica;
color: white;

}

body {
  font: 8px Helvetica, white;
  background: black;
  color: white;
}

.axis path,
.axis line {
  fill: none;
  stroke: none;
  shape-rendering: crispEdges;
}

.axis text {
fill: white;

}

.dot {
  stroke: none;
}

.tooltip {
  position: absolute;
  color: white;
  width: 100px;
  height: 10px;
  pointer-events: none;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js" charset="utf-8"></script>

<h1>Seeing Humans, Not Only Convicts!</h1>
<h2>Last Statements of Texas Death Penalty Prisoners and What It Reveals:<h2>
  <h3>...They mentioned <strong><font color="#17becf">"God"</font></strong>, <strong><font color="#d62728">"Love"</font></strong>, <strong><font color="#7f7f7f">"Didn’t mean to hurt"</font></strong>, and even <strong><font color="#8c564b">"I didn't kill"</font></strong></h3>

#8c564b

<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;


var dateFormat = d3.time.format("%Y");


var xScale = d3.time.scale()
    .range([0, width]);

// d3.time.scale()
//                 .range([ padding[3], w - padding[1] - padding[3] ]);


var yScale = d3.scale.linear()
    .range([height, 0]);



var color = d3.scale.category10();

var xAxis = d3.svg.axis()
              .scale(xScale)
              .orient("bottom")
              .ticks(30)
              .tickFormat(function(d) {
                return dateFormat(d);
              });

var yAxis = d3.svg.axis()
    .scale(yScale)
    .orient("left");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


var tooltip = d3.select("body")
    .append("div")
    .attr("class", "tooltip")
    .style("opacity", 0);

d3.csv("data3.csv", function(error, data) {
  data.forEach(function(d) {
    // d.years = +d.years;
    d.count = +d.count;
  });

  xScale.domain([ 
          d3.min(data, function(d) {
            return dateFormat.parse(d.years);
          }),
          d3.max(data, function(d) {
            return dateFormat.parse(d.years);
          })
        ]);

  // xScale.domain(d3.extent(data, function(d) { return d.sepalWidth; })).nice();

  // yScale.domain([ 
  //         d3.max(data, function(d) {
  //           return +d.count;
  //         }),
  //         0
  //       ]);

   yScale.domain(d3.extent(data, function(d) { return d.count; })).nice();


  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .append("text")
      .attr("class", "label")
      .attr("x", width - width + 40)
      .attr("y", -6)
      .style("text-anchor", "end")
      .text("Years");

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("class", "label")
      .attr("transform", "rotate(-30)")
      .attr("y", 200)
      .attr("x", 200)
      .style("font-size", 20)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Number of Executions in Texas")

  svg.selectAll(".dot")
      .data(data)
    .enter().append("circle")
      .attr("class", "dot")
      .attr("r", function(d) { return d.Age * 0.1 })
      .attr("cx", function(d) {
            return xScale(dateFormat.parse(d.years)); })
      .attr("cy", function(d) {
            return yScale(d.count);})
      .style("fill", function(d) { return color(d.Keywords) ;})
      .on("mouseover", function(d) {
            d3.select(this).transition().duration(600)
            .attr("r", 250)
            .style("fill", "black")
            .style("opacity", .7);

              tooltip.transition()
                   .duration(500)
                   .style("opacity", .9);
              tooltip.html(d.Statement)
                   .style("left", (d3.event.pageX + 5) + "px")
                   .style("top", (d3.event.pageY - 28) + "px");
          })
          .on("mouseout", function(d) {

              d3.select(this).transition().duration(100).attr("r", function(d) { return d.Age * 0.1 })
              .style("fill", function(d) { return color(d.Keywords) ;})
              .style("opacity", valOpacity); 

              tooltip.transition()
                   .duration(100)
                   .style("opacity", 0);
             tooltip.html(d.Statement)
                   .style("left", (d3.event.pageX + 5) + "px")
                   .style("top", (d3.event.pageY - 28) + "px");
          });


  var legend = svg.selectAll(".legend")
      .data(color.domain())
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  legend.append("rect")
      .attr("x", width - 10)
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", color);

  legend.append("text")
      .attr("x", width - 20)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("fill", color)
      .style("text-anchor", "end")
      .text(function(d) { return d; });

});

</script><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Line Chart with Multiple Lines</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1,h2,h3,p {
			font-family: futura;
			}


			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			g :hover {
				stroke: gold;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

		</style>
	</head>
	<body>

		<h2>Uranium ore &amp; concentrate production: comparison of year 2000 and 2010 by country </h2>

		<p>Production in metric tons = 1000 kg. Source: <a href="http://data.un.org/Data.aspx?d=ICS&f=cmID:13000-1" >United Nations Industrial Commodity Statistics Database</a> </p>

		<script type="text/javascript">		


			//Dimensions and padding
			var w = 700;
			var h = 600;
			var padding = [ 20, 10, 50, 100 ];  //Top, right, bottom, left



			//Set up date formatting and years
			var dateFormat = d3.time.format("%Y");



			//Set up scales
			var xScale = d3.time.scale()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);



			//Configure axis generators
			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(15)
							.tickFormat(function(d) {
								return dateFormat(d);
							});

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left");



			//Configure line generator
			var line = d3.svg.line()
				.x(function(d) {
					return xScale(dateFormat.parse(d.year));
				})
				.y(function(d) {
					return yScale(+d.amount);
				});



			//Create the empty SVG image
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			//Load data
			d3.csv("uranium_data_26APR15.csv", function(data) {

				//Data is loaded in, but we need to restructure it.
				//Remember, each line requires an array of x/y pairs;
				//that is, an array of arrays, like so:
				//
				//	[ [x: 1, y: 1], [x: 2, y: 2], [x: 3, y: 3] ]
				//
				//We, however, are using 'year' as x and 'amount' as y.
				//We also need to know which country belongs to each
				//line, so we will build an array of objects that is
				//structured like this:
				/*

					[
						{
							country: "Australia",
							emissions: [
										{ year: 1961, amount: 90589.568 },
										{ year: 1962, amount: 94912.961 },
										{ year: 1963, amount: 101029.517 },
										…
									   ]
						},
						{
							country: "Bermuda",
							emissions: [
										{ year: 1961, amount: 176.016 },
										{ year: 1962, amount: 157.681 },
										{ year: 1963, amount: 150.347 },
										…
									   ]
						},
						…
					 ]

				*/
				//Note that this is an array of objects. Each object
				//contains two values, 'country' and 'emissions'.
				//The 'emissions' value is itself an array, containing
				//more objects, each one holding 'year' and 'amount' values.

				//New array with all the years, for referencing later
				var years = ["2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010"];

				//Create a new, empty array to hold our restructured dataset
				var dataset = [];

				//Loop once for each row in data
				for (var i = 0; i < data.length; i++) {

					//Create new object with this country's name and empty array
					dataset[i] = {
						country: data[i].country,
						uranium: []
					};

					//Loop through all the years
					for (var j = 0; j < years.length; j++) {

						// If value is not empty
						if (data[i][years[j]]) {
							//Add a new object to the uranium data array
							//for this country
							dataset[i].uranium.push({
								year: years[j],
								amount: data[i][years[j]]
							});
						}

					}

				}
				
				//Uncomment to log the original data to the console
				 //console.log(data);

				//Uncomment to log the newly restructured dataset to the console
				//console.log(dataset);



				//Set scale domains
				xScale.domain([ 
					d3.min(years, function(d) {
						return dateFormat.parse(d);
					}),
					d3.max(years, function(d) {
						return dateFormat.parse(d);
					})
				]);

				yScale.domain([ 
					d3.max(dataset, function(d) {
						return d3.max(d.uranium, function(d) {
							return +d.amount;
						});
					}),
					0
				]);



				//Make a group for each country
				var groups = svg.selectAll("g")
					.data(dataset)
					.enter()
					.append("g");

				//Append a title with the country name (so we get easy tooltips)
				groups.append("title")
					.text(function(d) {
						return d.country;
					});

				//Within each group, create a new line/path,
				//binding just the emissions data to each one
				groups.selectAll("path")
					.data(function(d) {
						return [ d.uranium ];
					})
					.enter()
					.append("path")
					.attr("class", "line")
					.attr("d", line)
					.attr("fill", "none")
					.attr("stroke", "steelblue")
					.attr("stroke-width", 3);



				//Axes
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3]) + ",0)")
					.call(yAxis);

			});
			//End USA data load function


		</script>

	</body>
</html><!doctype html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang=""> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8" lang=""> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9" lang=""> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang=""> <!--<![endif]-->
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title></title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="apple-touch-icon" href="apple-touch-icon.png">

        <link rel="stylesheet" href="bootstrap.min.css">
        <style>
            body {
                padding-top: 50px;
                padding-bottom: 20px;
            }
            .node {
                stroke: #fff;
                stroke-width: 1.5px;
            }

            .link {
                fill: none;
            }
        </style>
        <link rel="stylesheet" href="bootstrap-theme.min.css">
        <link rel="stylesheet" href="main.css">

        <script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
        <script src="jquery.delayedchange.min.js"></script>
        <script src="modernizr-2.8.3-respond-1.4.2.min.js"></script>
        <script src="tab.js"></script>
        <script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
    </head>
    <body>
        <!--[if lt IE 8]>
            <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
        <![endif]-->

    <!-- Main jumbotron for a primary marketing message or call to action -->


    <div class="container">
      <!-- Example row of columns -->
      <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs" role="tablist">
                <li id="tab-festa" role="presentation" class="active"><a href="#festa" onclick="updateActive(this); if(plot) update();" aria-controls="festa" role="tab" data-toggle="tab"><h2>Festa</h2></a></li>
                <li id="tab-treball" role="presentation"><a href="#treball" onclick="updateActive(this); if(plot) update();" aria-controls="treball" role="tab" data-toggle="tab"><h2>Treball</h2></a></li>
            </ul>
            <div class="tab-content" style="border-bottom: 1px solid #ddd;border-left: 1px solid #ddd;border-right: 1px solid #ddd;padding: 30px;">
                <div role="tabpanel" class="tab-pane fade in active" id="festa">
                    <div class="container" id="content-festa">
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">

                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 1</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 2</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 3</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 4</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 5</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 6</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 7</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 8</b>
                            </div>
                            <div class="col-sm-1" style="text-align: center">
                                NEE
                            </div>
                            <div class="col-sm-1" style="text-align: center">
                                XPG
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 1</b>
                            </div>
                            <input id="sub_11" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_12" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_13" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_14" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_15" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_16" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_17" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_18" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_1" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 2</b>
                            </div>
                            <input id="sub_21" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_22" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_23" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_24" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_25" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_26" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_27" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_28" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_2" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_2" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 3</b>
                            </div>
                            <input id="sub_31" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_32" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_33" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_34" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_35" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_36" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_37" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_38" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_3" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_3" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 4</b>
                            </div>
                            <input id="sub_41" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_42" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_43" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_44" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_45" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_46" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_47" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_48" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_4" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_4" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 5</b>
                            </div>
                            <input id="sub_51" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_52" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_53" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_54" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_55" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_56" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_57" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_58" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_5" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_5" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 6</b>
                            </div>
                            <input id="sub_61" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_62" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_63" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_64" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_65" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_66" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_67" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_68" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_6" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_6" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 7</b>
                            </div>
                            <input id="sub_71" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_72" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_73" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_74" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_75" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_76" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_77" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_78" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_7" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_7" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 8</b>
                            </div>
                            <input id="sub_81" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_82" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_83" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_84" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_85" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_86" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_87" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_88" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <div id="nee_8" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_8" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                SER
                            </div>
                            <div id="ser_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="ser_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                NER
                            </div>
                            <div id="ner_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="ner_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                XPI
                            </div>
                            <div id="xpi_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpi_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                XPIA
                            </div>
                            <div id="xpia_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpia_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                NRP
                            </div>
                            <div id="nrp_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="nrp_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                NFX
                            </div>
                            <div id="nfx_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="nfx_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane fade in" id="treball">
                    <div class="container" id="content-treball">
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">

                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 1</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 2</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 3</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 4</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 5</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 6</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 7</b>
                            </div>
                            <div class="col-sm-1 subject" style="text-align: center">
                                <b>Subjecte 8</b>
                            </div>
                            <div class="col-sm-1" style="text-align: center">
                                NEE
                            </div>
                            <div class="col-sm-1" style="text-align: center">
                                XPG
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 1</b>
                            </div>
                            <input id="sub_11" class="col-sm-1" style="text-align: center; background" value="" disabled>
                            </input>
                            <input id="sub_12" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_13" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_14" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_15" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_16" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_17" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_18" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_1" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 2</b>
                            </div>
                            <input id="sub_21" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_22" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_23" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_24" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_25" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_26" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_27" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_28" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_2" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_2" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 3</b>
                            </div>
                            <input id="sub_31" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_32" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_33" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_34" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_35" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_36" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_37" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_38" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_3" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_3" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 4</b>
                            </div>
                            <input id="sub_41" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_42" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_43" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_44" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_45" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_46" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_47" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_48" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_4" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_4" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 5</b>
                            </div>
                            <input id="sub_51" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_52" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_53" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_54" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_55" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_56" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_57" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_58" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_5" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_5" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 6</b>
                            </div>
                            <input id="sub_61" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_62" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_63" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_64" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_65" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_66" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_67" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_68" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_6" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_6" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 7</b>
                            </div>
                            <input id="sub_71" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_72" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_73" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_74" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_75" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_76" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_77" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <input id="sub_78" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <div id="nee_7" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_7" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                <b>Subjecte 8</b>
                            </div>
                            <input id="sub_81" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_82" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_83" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_84" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_85" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_86" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_87" class="col-sm-1" style="text-align: center" value="">
                            </input>
                            <input id="sub_88" class="col-sm-1" style="text-align: center" value="" disabled>
                            </input>
                            <div id="nee_8" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpg_8" class="col-sm-1" style="text-align: center">

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                SER
                            </div>
                            <div id="ser_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="ser_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ser_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                NER
                            </div>
                            <div id="ner_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="ner_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="ner_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                XPI
                            </div>
                            <div id="xpi_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpi_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpi_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                XPIA
                            </div>
                            <div id="xpia_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="xpia_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="xpia_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                NRP
                            </div>
                            <div id="nrp_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="nrp_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nrp_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-1" style="text-align: center">
                                NFX
                            </div>
                            <div id="nfx_1" class="col-sm-1" style="text-align: center">

                            </div>
                            <div id="nfx_2" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_3" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_4" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_5" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_6" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_7" class="col-sm-1" style="text-align: center">
                            </div>
                            <div id="nfx_8" class="col-sm-1" style="text-align: center">
                            </div>

                        </div>
                    </div>
                </div>
                <script type="application/javascript">
                    var plot = null;
                    var active = "#content-" + $('.tab-pane.active').attr('id');

                    function updateActive(elem){
                        active = elem ? "#content-"+ $(elem).attr('aria-controls') : "content-" + $('.tab-pane.active').attr('id');
                    }

                    function getSubject(sID){
                        this.subjectID = sID;

                        function getValue(index){
                            var ret = {};
                            ret['sup'] = ( $(active+' #sub_'+index+''+subjectID).val() == '()' || parenthesis( $(active+' #sub_'+index+''+subjectID).val() ) ) ? true : false;
                            ret['val'] = $.isNumeric($(active+' #sub_'+index+''+subjectID).val()) ? ( parseFloat($(active+' #sub_'+index+''+subjectID).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+index+''+subjectID).val())) ? parseFloat(parenthesis($(active+' #sub_'+index+''+subjectID).val())) : 0 );
                            return ret;
                        }
                        this.getValue = function (index) {
                            return getValue(index);
                        }

                        function getValues(){
                            var a = [];
                            for(var i = 1; i <= 8; i++){
                                a[i] = getValue(i)
                            }
                            return a;
                        }

                        this.getValues = function(){
                            return getValues();
                        }

                        function getSER(){
                            return  parseFloat($(active+' #ser_'+subjectID).html());
                        }
                        this.getSER = function() {
                            return getSER();
                        }
                        function getNER(){
                            return parseFloat($(active+' #ner_'+subjectID).html());
                        }
                        this.getNER = function(){
                            return getNER();
                        }
                        function getXPI(){
                            return parseFloat($(active+' #xpi_'+subjectID).html());
                        }
                        this.getXPI = function(){
                            return getXPI();
                        }
                        function getXPIA(){
                            return parseFloat($(active+' #xpia_'+subjectID).html());
                        }
                        this.getXPIA = function(){
                            return getXPIA();
                        }
                        function getNRP(){
                            return parseFloat($(active+' #nrp_'+subjectID).html());
                        }
                        this.getNRP = function(){
                            return getNRP();
                        }
                        function getNFX(){
                            return parseFloat($(active+' #nfx_'+subjectID).html());
                        }
                        this.getNFX = function(){
                            return getNFX();
                        }
                        function getNEE(){
                            return parseFloat($(active+' #nee_'+subjectID).html());
                        }
                        this.getNEE = function(){
                            return getNEE();
                        }
                        function getXPG(){
                            return parseFloat($(active+' #xpg_'+subjectID).html());
                        }
                        this.getXPG = function(){
                            return getXPG();
                        }
                        return this;
                    }

                    $('input').delayedChange({
                        delay: 1000
                    }).on('delayedchange', function () {
                        update();
                    });

                    function update(){
                        plot=null;
                        updateSER();
                        updateNER();
                        updateXPI();
                        updateXPIA();
                        updateNRP();
                        updateNFX();
                        updateNEE();
                        updateXPG();
                        curvedPlot();
                    }

                    function parenthesis(str){
                        var rgx = /\((.*)\)/;
                        var r = rgx.exec(str);
                        if(r)
                            r[1] = $.isNumeric(r[1]) ? parseFloat(r[1]) : r[1];
                        return r ? r[1] : null;
                    }
                    function updateSER(){
                        for (var i = 1 ; i <= 8; i++) {
                            var val = $.isNumeric($(active+' #sub_1'+i).val()) ? ( parseFloat($(active+' #sub_1'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_1'+i).val())) ? parseFloat(parenthesis($(active+' #sub_1'+i).val())) : 0 );
                            val = $.isNumeric($(active+' #sub_2'+i).val()) ? ( val + parseFloat($(active+' #sub_2'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_2'+i).val())) ? val + parseFloat(parenthesis($(active+' #sub_2'+i).val())) : val );
                            val = $.isNumeric($(active+' #sub_3'+i).val()) ? ( val + parseFloat($(active+' #sub_3'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_3'+i).val())) ? val + parseFloat(parenthesis($(active+' #sub_3'+i).val())) : val );
                            val = $.isNumeric($(active+' #sub_4'+i).val()) ? ( val + parseFloat($(active+' #sub_4'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_4'+i).val())) ? val + parseFloat(parenthesis($(active+' #sub_4'+i).val())) : val );
                            val = $.isNumeric($(active+' #sub_5'+i).val()) ? ( val + parseFloat($(active+' #sub_5'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_5'+i).val())) ? val + parseFloat(parenthesis($(active+' #sub_5'+i).val())) : val );
                            val = $.isNumeric($(active+' #sub_6'+i).val()) ? ( val + parseFloat($(active+' #sub_6'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_6'+i).val())) ? val + parseFloat(parenthesis($(active+' #sub_6'+i).val())) : val );
                            val = $.isNumeric($(active+' #sub_7'+i).val()) ? ( val + parseFloat($(active+' #sub_7'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_7'+i).val())) ? val + parseFloat(parenthesis($(active+' #sub_7'+i).val())) : val );
                            val = $.isNumeric($(active+' #sub_8'+i).val()) ? ( val + parseFloat($(active+' #sub_8'+i).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_8'+i).val())) ? val + parseFloat(parenthesis($(active+' #sub_8'+i).val())) : val );
                            $(active+' #ser_'+i).text(val);
                        }
                    }
                    function updateNER(){
                        for (var i = 1 ; i <= 8; i++) {
                            var val = $.isNumeric($(active+' #sub_1'+i).val()) ? 1 : ( $.isNumeric(parenthesis($(active+' #sub_1'+i).val())) ? 1 : 0 );
                            val = $.isNumeric($(active+' #sub_2'+i).val()) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_2'+i).val())) ? val + 1 : val );
                            val = $.isNumeric($(active+' #sub_3'+i).val()) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_3'+i).val())) ? val + 1 : val );
                            val = $.isNumeric($(active+' #sub_4'+i).val()) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_4'+i).val())) ? val + 1 : val );
                            val = $.isNumeric($(active+' #sub_5'+i).val()) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_5'+i).val())) ? val + 1 : val );
                            val = $.isNumeric($(active+' #sub_6'+i).val()) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_6'+i).val())) ? val + 1 : val );
                            val = $.isNumeric($(active+' #sub_7'+i).val()) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_7'+i).val())) ? val + 1 : val );
                            val = $.isNumeric($(active+' #sub_8'+i).val()) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_8'+i).val())) ? val + 1 : val );
                            $(active+' #ner_'+i).text(val);
                        }
                    }

                    function updateXPI(){
                        for (var i = 1 ; i <= 8; i++) {
                            var val =($(active+' #sub_1'+i).val() == "()" ) ? 1 : ( $.isNumeric(parenthesis($(active+' #sub_1'+i).val()) ) ? 1 : 0 );
                            val = ($(active+' #sub_2'+i).val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_2'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_3'+i).val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_3'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_4'+i).val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_4'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_5'+i).val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_5'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_6'+i).val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_6'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_7'+i).val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_7'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_8'+i).val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_8'+i).val())) ? val + 1 : val );
                            $(active+' #xpi_'+i).text(val);
                        }
                    }
                    function updateXPIA(){
                        for (var i = 1 ; i <= 8; i++) {
                            var val =($(active+' #sub_1'+i).val() == "()" ) ? 1 : ( $.isNumeric(parenthesis($(active+' #sub_1'+i).val()) ) ? 1 : 0 );
                            val = ($(active+' #sub_2'+i).val() == "()" ) ? val : ( $.isNumeric(parenthesis($(active+' #sub_2'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_3'+i).val() == "()" ) ? val : ( $.isNumeric(parenthesis($(active+' #sub_3'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_4'+i).val() == "()" ) ? val : ( $.isNumeric(parenthesis($(active+' #sub_4'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_5'+i).val() == "()" ) ? val : ( $.isNumeric(parenthesis($(active+' #sub_5'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_6'+i).val() == "()" ) ? val : ( $.isNumeric(parenthesis($(active+' #sub_6'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_7'+i).val() == "()" ) ? val : ( $.isNumeric(parenthesis($(active+' #sub_7'+i).val())) ? val + 1 : val );
                            val = ($(active+' #sub_8'+i).val() == "()" ) ? val : ( $.isNumeric(parenthesis($(active+' #sub_8'+i).val())) ? val + 1 : val );
                            $(active+' #xpia_'+i).text(val);
                        }
                    }
                    function updateNRP(){
                        var values = [];
                        var res=[];
                        for (var i = 0 ; i < 8; i++) {
                            values[i] = [];
                            res[i] = 0;
                        }
                        for (var j = 0 ; j < 8; j++) {
                            for (var i = 0 ; i < 8; i++) {
                                values[j].push($.isNumeric($(active+' #sub_'+ (i+1) + '' + (j+1)).val()) ? ( parseFloat($(active+' #sub_' + (i+1) + '' + (j+1)).val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_' + (i+1) + '' + (j+1)).val())) ? parseFloat(parenthesis($(active+' #sub_' + (i+1) + '' + (j+1)).val())) : 0 ));
                            }
                        }
                        for (var i = 0 ; i < 8; i++) {
                            var val = 0;
                            for (var j = 0 ; j < 8; j++) {
                                if(values[i][j] != 0 && values[j][i] != 0)
                                val += d3.min([values[i][j],values[j][i]]);
                            }
                            $(active+' #nrp_'+(i+1)).text(val);
                        }
                    }
                    function updateNFX(){
                        for (var i = 1 ; i <= 8; i++) {
                            var val =($(active+' #sub_1'+i).val() == "()" ) ? 1 : 0;
                            val = ($(active+' #sub_2'+i).val() == "()" ) ? val + 1 : val;
                            val = ($(active+' #sub_3'+i).val() == "()" ) ? val + 1 : val;
                            val = ($(active+' #sub_4'+i).val() == "()" ) ? val + 1 : val;
                            val = ($(active+' #sub_5'+i).val() == "()" ) ? val + 1 : val;
                            val = ($(active+' #sub_6'+i).val() == "()" ) ? val + 1 : val;
                            val = ($(active+' #sub_7'+i).val() == "()" ) ? val + 1 : val;
                            val = ($(active+' #sub_8'+i).val() == "()" ) ? val + 1 : val;
                            $(active+' #nfx_'+i).text(val);
                        }
                    }
                    function updateNEE(){
                        for (var i = 1 ; i <= 8; i++) {
                            var val = $.isNumeric($(active+' #sub_'+i+'1').val()) ? ( parseFloat($(active+' #sub_'+i+'1').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'1').val())) ? parseFloat(parenthesis($(active+' #sub_'+i+'1').val())) : 0 );
                            val = $.isNumeric($(active+' #sub_'+i+'2').val()) ? ( val + parseFloat($(active+' #sub_'+i+'2').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'2').val())) ? val + parseFloat(parenthesis($(active+' #sub_'+i+'2').val())) : val );
                            val = $.isNumeric($(active+' #sub_'+i+'3').val()) ? ( val + parseFloat($(active+' #sub_'+i+'3').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'3').val())) ? val + parseFloat(parenthesis($(active+' #sub_'+i+'3').val())) : val );
                            val = $.isNumeric($(active+' #sub_'+i+'4').val()) ? ( val + parseFloat($(active+' #sub_'+i+'4').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'4').val())) ? val + parseFloat(parenthesis($(active+' #sub_'+i+'4').val())) : val );
                            val = $.isNumeric($(active+' #sub_'+i+'5').val()) ? ( val + parseFloat($(active+' #sub_'+i+'5').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'5').val())) ? val + parseFloat(parenthesis($(active+' #sub_'+i+'5').val())) : val );
                            val = $.isNumeric($(active+' #sub_'+i+'6').val()) ? ( val + parseFloat($(active+' #sub_'+i+'6').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'6').val())) ? val + parseFloat(parenthesis($(active+' #sub_'+i+'6').val())) : val );
                            val = $.isNumeric($(active+' #sub_'+i+'7').val()) ? ( val + parseFloat($(active+' #sub_'+i+'7').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'7').val())) ? val + parseFloat(parenthesis($(active+' #sub_'+i+'7').val())) : val );
                            val = $.isNumeric($(active+' #sub_'+i+'8').val()) ? ( val + parseFloat($(active+' #sub_'+i+'8').val()) ) : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'8').val())) ? val + parseFloat(parenthesis($(active+' #sub_'+i+'8').val())) : val );
                            $(active+' #nee_'+i).text(val);
                        }
                    }
                    function updateXPG(){
                        for (var i = 1 ; i <= 8; i++) {
                            var val =($(active+' #sub_'+i+'1').val() == "()" ) ? 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'1').val()) ) ? 1 : 0 );
                            val = ($(active+' #sub_'+i+'2').val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'2').val())) ? val + 1 : val );
                            val = ($(active+' #sub_'+i+'3').val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'3').val())) ? val + 1 : val );
                            val = ($(active+' #sub_'+i+'4').val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'4').val())) ? val + 1 : val );
                            val = ($(active+' #sub_'+i+'5').val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'5').val())) ? val + 1 : val );
                            val = ($(active+' #sub_'+i+'6').val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'6').val())) ? val + 1 : val );
                            val = ($(active+' #sub_'+i+'7').val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'7').val())) ? val + 1 : val );
                            val = ($(active+' #sub_'+i+'8').val() == "()" ) ? val + 1 : ( $.isNumeric(parenthesis($(active+' #sub_'+i+'8').val())) ? val + 1 : val );
                            $(active+' #xpg_'+i).text(val);
                        }
                    }

                    function curvedPlot(){
                        plot = active;
                        this.width = $('.container .tab-content').width();
                        this.height = 600;

                        this.color = d3.scale.category20();

                        var force = d3.layout.force()
                                .charge(-1200)
                                .linkDistance(200)
                                .size([width, height]);

                        d3.select(".container .tab-content #plot").remove();
                        this.svg = d3.select(".container .tab-content").append("svg")
                                .attr("id", "plot")
                                .attr("width", width)
                                .attr("height", height);
                        this.defs = svg.append('defs');
                                defs.append('marker')
                                        .attr('id','markerArrowTo')
                                        .attr('markerUnits','userSpaceOnUse')
                                        .attr('markerWidth',6)
                                        .attr('markerHeight',4)
                                        .attr('refX',47)
                                        .attr('refY',2)
                                        .attr("orient", "auto")
                                    .append('path')
                                        .attr('d','M6,2C6,2,6,2,6,2C5.9,1.9,5.9,1.9,6,2c0-0.1-0.1-0.1-0.1-0.2c0,0,0,0-0.1-0.1c0,0,0,0,0,0L0.5,0C0.4,0,0.2,0,0.2,0.2 c0,0.1,0,0.3,0.1,0.3L5,2L0.4,3.5c-0.1,0-0.2,0.2-0.1,0.3C0.2,3.9,0.3,4,0.4,4c0,0,0,0,0.1,0l5.3-1.8c0,0,0,0,0,0c0,0,0.1,0,0.1-0.1 C5.9,2.1,5.9,2.1,6,2C5.9,2.1,5.9,2.1,6,2C6,2,6,2,6,2z')
                                    .style('fill','#000000');
                                defs.append('marker')
                                        .attr('id','markerArrowFrom')
                                        .attr('markerUnits','userSpaceOnUse')
                                        .attr('markerWidth',6)
                                        .attr('markerHeight',4)
                                        .attr('refX',-41)
                                        .attr('refY',2)
                                        .attr("orient", "auto")
                                    .append('path')
                                        .attr('d','M0,2C0,2,0,2,0,2C0,1.9,0,1.9,0,2c0-0.1,0.1-0.1,0.1-0.2c0,0,0,0,0.1-0.1c0,0,0,0,0,0L5.5,0c0.1,0,0.3,0,0.3,0.1 c0,0.1,0,0.3-0.1,0.3L1,2l4.6,1.5c0.1,0,0.2,0.2,0.1,0.3C5.7,3.9,5.6,4,5.5,4c0,0,0,0-0.1,0L0.2,2.2c0,0,0,0,0,0c0,0-0.1,0-0.1-0.1 C0,2.1,0,2.1,0,2C0,2.1,0,2.1,0,2C0,2,0,2,0,2z')
                                        .style('fill','#000000');

                        orient="auto";

                        var data = {'nodes':[],'links':[]};
                        for(var i = 0; i< $(active + ' .subject').length; i++){
                            data.nodes.push(
                                    {
                                        'name':$($(active + ' .subject')[i]).children().html()
                                        ,'index':i
                                        ,'SER':getSubject(i+1).getSER()
                                        ,'NER':getSubject(i+1).getNER()
                                        ,'XPI':getSubject(i+1).getXPI()
                                        ,'XPIA':getSubject(i+1).getXPIA()
                                        ,'NRP':getSubject(i+1).getNRP()
                                        ,'NFX':getSubject(i+1).getNFX()
                                        ,'NEE':getSubject(i+1).getNEE()
                                        ,'XPG':getSubject(i+1).getXPG()
                                        ,'values':getSubject(i+1).getValues()

                                    });
                        }
                        data.nodes.forEach(function(e,i){
                            e.values.forEach(function(d,j){
                                if( d.val > 0 || exp){
                                    var contained = data.links.filter(function(d){ if((d.source == i && d.target == (j-1) ) || (d.source == (j-1) && d.target == i) ) return d; });
                                    if(contained.length == 0){  // if link does not exist yet
                                        var val = 0;
                                        var ele = 'none'; // bi | from | to
                                        var exp = 'none'; // bi | from | to

                                        if(data.nodes[i].values[j].val > 0 && data.nodes[j-1].values[i+1].val > 0){
                                            val = d3.min([data.nodes[i].values[j].val,data.nodes[j-1].values[i+1].val]);
                                            ele = 'bi';
                                        }
                                        else if(data.nodes[i].values[j].val > 0){
                                            val = data.nodes[i].values[j].val;
                                            ele = 'from';
                                        }
                                        else if(data.nodes[j-1].values[i+1].val > 0){
                                            val = data.nodes[j-1].values[i+1].val;
                                            ele = 'to';
                                        }

                                        if(data.nodes[i].values[j].sup && data.nodes[j-1].values[i+1].sup)
                                            exp = 'bi';
                                        else if(data.nodes[i].values[j].sup)
                                            exp = 'form';
                                        else if(data.nodes[j-1].values[i+1].sup)
                                            exp = 'to';

                                        data.links.push({expected:exp, election: ele, source:i, target:j-1, value: val});
                                    }

                                }
                            });
                        });

                        var graph = data;

                        force
                                .nodes(graph.nodes)
                                .links(graph.links)
                                .start();

                        var link = svg.selectAll(".link")
                                .data(graph.links)
                                .enter().append("line")
                                .style("marker-start", function(d){ 
                                    if(d.election=="bi")
                                        return "url(#markerArrowFrom)";
                                    if(d.election=="from")
                                        return "url(#markerArrowFrom)";
                                })
                                .style("marker-end", function(d){ 
                                    if(d.election=="bi")
                                        return "url(#markerArrowTo)";
                                    if(d.election=="to")
                                        return "url(#markerArrowTo)";
                                })
                                .attr("stroke-dasharray",function(d){
                                    if(d.expected=="bi"){
                                        return "10,10";
                                    }
                                    if(d.expected=="from"|| d.expected=="to"){
                                        return "5,5";
                                    }
                                    if(d.expected=="none"){
                                        return "1,1";
                                    }
                                    return "";
                                })
                                .style("stroke",function(d){
                                    if(d.election=="bi"){
                                        if(d.expected=="bi")    return "#474747";
                                        if(d.expected=="none")  return "#474747";
                                        if(d.expected=="from")  return "#474747";
                                        if(d.expected=="to")    return "#474747";
                                    }
                                    if(d.election=="from"){
                                        if(d.expected=="bi")    return "#0F0";
                                        if(d.expected=="none")  return "#0F0";
                                        if(d.expected=="from")  return "#0F0";
                                        if(d.expected=="to")    return "#0F0";
                                    }
                                    if(d.election=="to"){
                                        if(d.expected=="bi")    return "#0F0";
                                        if(d.expected=="none")  return "#0F0";
                                        if(d.expected=="to")    return "#0F0";
                                        if(d.expected=="from")  return "#0F0";
                                    }
                                    if(d.election=="none"){
                                        if(d.expected=="bi")    return "#FFF";
                                        if(d.expected=="none")  return "#FFF";
                                        if(d.expected=="from")  return "#FFF";
                                        if(d.expected=="to")    return "#FFF";
                                    }
                                    return "#bbb";
                                })
                                .style("transparency",function(d){
                                    if(d.election=="bi"){
                                        if(d.expected=="bi")    return 1;
                                        if(d.expected=="none")  return .5;
                                        if(d.expected=="from")  return .7;
                                        if(d.expected=="to")    return .7;
                                    }
                                    if(d.election=="from"){
                                        if(d.expected=="bi")    return .7;
                                        if(d.expected=="none")  return .7;
                                        if(d.expected=="from")  return 1;
                                        if(d.expected=="to")    return .5;
                                    }
                                    if(d.election=="to"){
                                        if(d.expected=="bi")    return .7;
                                        if(d.expected=="none")  return .7;
                                        if(d.expected=="to")    return 1;
                                        if(d.expected=="from")  return .5;
                                    }
                                    if(d.election=="none"){
                                        if(d.expected=="bi")    return .5;
                                        if(d.expected=="none")  return 1;
                                        if(d.expected=="from")  return .7;
                                        if(d.expected=="to")    return .7;
                                    }
                                    return .5;
                                })
                                .attr("class", "link")
                                .style("stroke-width", function(d) { return Math.sqrt(d.value); });

                        var node = svg.selectAll(".nodeGroup")
                                .data(graph.nodes)
                                .enter().append('g')
                                .attr("class", "nodeGroup")
                                .call(force.drag);

                        node.append("circle")
                                   .attr("class", "node")
                                   .attr("r", 40)
                                   .style("fill", function(d) { return color(d.group)});
                        node.append("text")
                                .text(function(d) { return d.name; })
                                .style("text-anchor","middle")
                                .attr("transform","translate(0,5)")
                                .style("fill","white");
                        node.append("title")
                                .text(function(d) { return d.name; });

                        force.on("tick", function() {
                            link.attr("x1", function(d) { return d.source.x; })
                                    .attr("y1", function(d) { return d.source.y; })
                                    .attr("x2", function(d) { return d.target.x; })
                                    .attr("y2", function(d) { return d.target.y; });

                            node.attr("transform",function (d){ return "translate(" + d.x + "," + d.y + ")"});
                        });

                    }
                </script>
            </div>

        </div>
      </div>

      <hr>

      <footer>
        <p>Andrés Lucas Enciso 2016</p>
          <p style="font-size: .7em">Aquest codi ha estat lliberat de propietari. Pot gaudir del seu contingut i ús sense problema.</p>
      </footer>
    </div> <!-- /container -->
        <script>window.jQuery || document.write('<script src="js/vendor/jquery-1.11.2.min.js"><\/script>')</script>

        <script src="bootstrap.min.js"></script>

        <script src="main.js"></script>

        <!-- Google Analytics: change UA-XXXXX-X to be your site's ID. -->
        <script>
            (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=
            function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;
            e=o.createElement(i);r=o.getElementsByTagName(i)[0];
            e.src='//www.google-analytics.com/analytics.js';
            r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));
            ga('create','UA-XXXXX-X','auto');ga('send','pageview');
        </script>
    </body>
</html><!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>

<style type="text/css">

.land{
	fill: rgba(0,0,0, 0.17);
}

.border{
	stroke: rgba(255,255,255, 0.7);
	fill: none;
}

</style>
</head>

<body>
<script>

/***** ALL MATH FUNCTIONS ****/

var to_radians = Math.PI / 180;
var to_degrees = 180 / Math.PI;


// Helper function: cross product of two vectors v0&v1
function cross(v0, v1) {
    return [v0[1] * v1[2] - v0[2] * v1[1], v0[2] * v1[0] - v0[0] * v1[2], v0[0] * v1[1] - v0[1] * v1[0]];
}

//Helper function: dot product of two vectors v0&v1
function dot(v0, v1) {
    for (var i = 0, sum = 0; v0.length > i; ++i) sum += v0[i] * v1[i];
    return sum;
}

// Helper function: 
// This function converts a [lon, lat] coordinates into a [x,y,z] coordinate 
// the [x, y, z] is Cartesian, with origin at lon/lat (0,0) center of the earth
function lonlat2xyz( coord ){

	var lon = coord[0] * to_radians;
	var lat = coord[1] * to_radians;

	var x = Math.cos(lat) * Math.cos(lon);

	var y = Math.cos(lat) * Math.sin(lon);

	var z = Math.sin(lat);

	return [x, y, z];
}

// Helper function: 
// This function computes a quaternion representation for the rotation between to vectors
// https://en.wikipedia.org/wiki/Rotation_formalisms_in_three_dimensions#Euler_angles_.E2.86.94_Quaternion
function quaternion(v0, v1) {

	if (v0 && v1) {
		
	    var w = cross(v0, v1),  // vector pendicular to v0 & v1
	        w_len = Math.sqrt(dot(w, w)); // length of w     

        if (w_len == 0)
        	return;

        var theta = .5 * Math.acos(Math.max(-1, Math.min(1, dot(v0, v1)))),

	        qi  = w[2] * Math.sin(theta) / w_len; 
	        qj  = - w[1] * Math.sin(theta) / w_len; 
	        qk  = w[0]* Math.sin(theta) / w_len;
	        qr  = Math.cos(theta);

	    return theta && [qr, qi, qj, qk];
	}
}

// Helper function: 
// This functions converts euler angles to quaternion
// https://en.wikipedia.org/wiki/Rotation_formalisms_in_three_dimensions#Euler_angles_.E2.86.94_Quaternion
function euler2quat(e) {

	if(!e) return;
    
    var roll = .5 * e[0] * to_radians,
        pitch = .5 * e[1] * to_radians,
        yaw = .5 * e[2] * to_radians,

        sr = Math.sin(roll),
        cr = Math.cos(roll),
        sp = Math.sin(pitch),
        cp = Math.cos(pitch),
        sy = Math.sin(yaw),
        cy = Math.cos(yaw),

        qi = sr*cp*cy - cr*sp*sy,
        qj = cr*sp*cy + sr*cp*sy,
        qk = cr*cp*sy - sr*sp*cy,
        qr = cr*cp*cy + sr*sp*sy;

    return [qr, qi, qj, qk];
}

// This functions computes a quaternion multiply
// Geometrically, it means combining two quant rotations
// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/arithmetic/index.htm
function quatMultiply(q1, q2) {
	if(!q1 || !q2) return;

    var a = q1[0],
        b = q1[1],
        c = q1[2],
        d = q1[3],
        e = q2[0],
        f = q2[1],
        g = q2[2],
        h = q2[3];

    return [
     a*e - b*f - c*g - d*h,
     b*e + a*f + c*h - d*g,
     a*g - b*h + c*e + d*f,
     a*h + b*g - c*f + d*e];

}

// This function computes quaternion to euler angles
// https://en.wikipedia.org/wiki/Rotation_formalisms_in_three_dimensions#Euler_angles_.E2.86.94_Quaternion
function quat2euler(t){

	if(!t) return;

	return [ Math.atan2(2 * (t[0] * t[1] + t[2] * t[3]), 1 - 2 * (t[1] * t[1] + t[2] * t[2])) * to_degrees, 
			 Math.asin(Math.max(-1, Math.min(1, 2 * (t[0] * t[2] - t[3] * t[1])))) * to_degrees, 
			 Math.atan2(2 * (t[0] * t[3] + t[1] * t[2]), 1 - 2 * (t[2] * t[2] + t[3] * t[3])) * to_degrees
			]
}

/*  This function computes the euler angles when given two vectors, and a rotation
	This is really the only math function called with d3 code.

	v0 - starting pos in lon/lat, commonly obtained by projection.invert
	v1 - ending pos in lon/lat, commonly obtained by projection.invert
	o0 - the projection rotation in euler angles at starting pos (v0), commonly obtained by projection.rotate
*/

function eulerAngles(v0, v1, o0) {

	/*
		The math behind this:
		- first calculate the quaternion rotation between the two vectors, v0 & v1
		- then multiply this rotation onto the original rotation at v0
		- finally convert the resulted quat angle back to euler angles for d3 to rotate
	*/

	var t = quatMultiply( euler2quat(o0), quaternion(lonlat2xyz(v0), lonlat2xyz(v1) ) );
	return quat2euler(t);	
}


/**************end of math functions**********************/


var width = 960,
    height = 500;
    r = 250;

var projection = d3.geo.orthographic()
    .scale(250)
    .translate([width / 2, height / 2])
    .clipAngle(90);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var drag = d3.behavior.drag()
			.on("dragstart", dragstarted)
			.on("drag", dragged)
			.on("dragend", dragended);

svg.call(drag);


var gpos0, o0;

function dragstarted(){

	gpos0 = projection.invert(d3.mouse(this));
	o0 = projection.rotate();

	svg.insert("path")
             .datum({type: "Point", coordinates: gpos0})
             .attr("class", "point")
             .attr("d", path); 
}

function dragged(){

	var gpos1 = projection.invert(d3.mouse(this));

	o0 = projection.rotate();

	var o1 = eulerAngles(gpos0, gpos1, o0);
	projection.rotate(o1);

	svg.selectAll(".point")
	 		.datum({type: "Point", coordinates: gpos1});
  svg.selectAll("path").attr("d", path);

}

function dragended(){
	svg.selectAll(".point").remove();
}

d3.json("world-110m.json", function(error, world){
  if (error) throw error;

  svg.append("path")
      .datum(topojson.feature(world, world.objects.land))
      .attr("class", "land")
      .attr("d", path);

  borders = topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; });

  svg.append("path")
  		.datum(borders)
  		.attr("class", "border")
  		.attr("d", path);
});

</script>

</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Transition Delays</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: purple;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

		</style>
	</head>
	<body>

		<h1>Measels Immunization Coverage</h1>

		<p>WHO Measels Immunization coverage amongst 1 year olds for the year 2000 compared to 2013, percentage by country. Source: <a href="http://apps.who.int/gho/data/node.main.A826?lang=en">WHO</a></p>

		<script type="text/javascript">		


			var w = 1200;
			var h = 700;
			var padding = [ 20, 10, 50, 100 ];  //Top, right, bottom, left



			var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
                            .ticks(20)
							.tickFormat(function(d) {
								return d + "%";
							});
                        

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
                            .ticks(20)
							.tickFormat(function(d) {
								return d + "%";
							});
                         



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("measelsimmunizationcoverages.csv", function(data) {

				xScale.domain([ 
					d3.min(data, function(d) {
						return +d.pct2000;
					}), 
					d3.max(data, function(d) {
						return +d.pct2000;
					})
				]);

				yScale.domain([
					d3.max(data, function(d) {
						return +d.pct2013;
					}),
					d3.min(data, function(d) {
						return +d.pct2013;
					})
				]);

				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles.attr("cx", function(d) {
						return xScale(d.pct2000);
					})
					.attr("cy", function(d) {
						return yScale(d.pct2013);
					})
					.attr("r", 0.1)
					.attr("fill", "red")
					.append("title")
					.text(function(d) {
						return d.COUNTRY + "'s measels immunization coverage among 1 year olds for the year 2000 is " + d.pct2000 + "% and for 2013 is " + d.pct2013 + "%";
					});

				circles.sort(function(a, b) {
						return d3.ascending(+a.pct2000, +b.pct2000);
					})
					.transition()
					.delay(function(d, i) {
						return i * 50;
					})
					.duration(2000)
					.attr("r", 4);

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2] + 10) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3] - 10) + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Obesity/poverty scatterp</title>
    <script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
    <style type="text/css">
      body {
        background-color: #fff1e0;
        margin: 0;
        font-family: Arial, sans-serif;
      }
   

      h1, p {
        position: relative;
        left: 10px;
        color: #333333;
        font-weight: normal;
      }

      .hover path{
        stroke: #9e2f50;
        stroke-width: 4px;
        transition: stroke 0.2s;
      }

      .footnote {
        position: relative;

      }

      .source{
        font-size: 11px;
      }
      
      .line {
        stroke: #cec6b9;
        stroke-width: 2px;
        fill: none;
        stroke-linejoin:round;
        stroke-linecap:round;
      }

      .y.axis line, .y.axisSM line {
        fill: none;
        stroke: #e9decf;
        stroke-dasharray:2,1;
        shape-rendering: crispEdges;
      }

      .x.axis line, .x.axisSM line {
        fill: none;
        stroke: #a7a59b;
        shape-rendering: crispEdges;
      }
      
      .axis text, .axisSM text {
        font-family: Arial,sans-serif;
        font-size: 11px;
        fill: #74736c;
      }
      
      .y.axisSM text{
        display: none;
      }
      .y.axisSM.labelOn text{
        display: block;
      }
      
      .y.axis path,
      .y.axisSM path{
        opacity: 0;
      }

      path.domain{
        /*opacity: 0*/
        /*height: 1px;*/
        fill:none;
        stroke-width:1px;
        stroke: #a7a59b;
        shape-rendering: crispEdges;
      }

      .smallSM{
        margin: 0 0 10px 0;
      }
      .smallMulitples{
        margin-left: 16px;
        width: 700px;
      }

      .lineSM{
        stroke-width:2px;
        stroke: #9e2f50;
        fill:none;
      }
      .toolTip{
        padding: 6px;
        background-color: #fff;
        border-radius: 4px;
        position: absolute;
        font-size: 12px;
        line-height: 18px;
        visibility: hidden;
      }
      .stateName{
        font-weight: bold;
        font-size: 14px;
        /*margin-bottom: -8px;
        display: block;*/
      }

      .stateNameSM{
        text-transform: uppercase;
        font-size: 10px;
        fill: #74736c;
        text-anchor:middle;
      }
      .dataNum{
        font-weight: bold;
      }
      .subhead{
        fill: #74736c;
        font-size: 14px;
      }
    </style>
  </head>
  <body>
    <div class="toolTip"></div>
    <script type="text/javascript">   
      var  margin = {top: 10, right: 10, bottom: 35, left: 30};
      var w = 720,
          h = 500,
          tt;

      var body = d3.select('body');

      body.append('h1')
        .text('Obesity in the United States')

      body.append('p')
        .text('% of Americans classified as obese, by state')

      var dateFormat = d3.time.format("%Y");

      var svg = d3.select('body').append('svg')
      
      svg.attr('width', w)
          .attr('height', h)

      d3.select('body').append('div')
          .attr('class', 'smallMulitples')

      var divSM = d3.select('.smallMulitples')


      
      var xScale = d3.time.scale()
              .range([ margin.left*2, w - margin.left*2 - margin.right ]);
    
      var yScale = d3.scale.linear()
                .range([0, h - margin.bottom ]);

      var xAxis = d3.svg.axis()
              .scale(xScale)
              .ticks(12)
              .tickFormat(function(d) {
                return dateFormat(d); 
              })
      var yAxis = d3.svg.axis()
              .scale(yScale)
              .tickSize(-w + (margin.left*2) + margin.right)
              .ticks(15)
              .orient('left');

      var line = d3.svg.line()
          .x(function(d) {
            return xScale(dateFormat.parse(d.year));
          })
          .y(function(d) {
            return yScale(+d.value);
          });

      var lineSM = d3.svg.line()
          .x(function(d) {
            return xScaleSM(dateFormat.parse(d.year));
          })
          .y(function(d) {
            return yScaleSM(+d.value);
          });

      var xScaleSM = d3.time.scale()
              .range([ 20, 150 ]);
    
      var yScaleSM = d3.scale.linear()
                .range([20, 180 ]);

      var xAxisSM = d3.svg.axis()
              .scale(xScaleSM)
              .ticks(2)
              .tickFormat(function(d) {
                return dateFormat(d); 
              })

      var yAxisSM = d3.svg.axis()
              .scale(yScaleSM)
              .tickSize(-130)
              .ticks(4)
              .orient('left');

      var lineSM = d3.svg.line()
          .x(function(d) {
            return xScaleSM(dateFormat.parse(d.year));
          })
          .y(function(d) {
            return yScaleSM(+d.value);
          });
     
      //Load in contents of CSV file
      d3.csv('obesity.csv', function(data) {
        console.log(data);

        var years = ['2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013'];

        var dataset = [];

        for (var i = 0; i < data.length; i++) {
          dataset[i] = {
            state: data[i].state,
            obesity: []
          }; 
          for (var j = 0; j < years.length; j++) {
            if(data[i][years[j]]) {
              dataset[i].obesity.push({
                year: years[j],
                value: data[i][years[j]]
              });
            }
          }
        };
        console.log(dataset);

        xScale.domain([
          d3.min(years, function(d) {
          return dateFormat.parse(d);
        }), d3.max(years, function(d) {
          return dateFormat.parse(d);
        }) ]);

        yScale.domain([
          d3.max(dataset, function(d) {
            return d3.max(d.obesity, function(d) { 
              return +d.value;
            });
          }),
          d3.min(dataset, function(d) {
            return d3.min(d.obesity, function(d) { 
              return +d.value -1;
            });
          })
        ]);

        xScaleSM.domain([
          d3.min(years, function(d) {
          return dateFormat.parse(d);
        }), d3.max(years, function(d) {
          return dateFormat.parse(d);
        }) ]);

        yScaleSM.domain([
          d3.max(dataset, function(d) {
            return d3.max(d.obesity, function(d) { 
              return +d.value;
            });
          }),
          d3.min(dataset, function(d) {
            return d3.min(d.obesity, function(d) { 
              return +d.value -5;
            });
          })
        ]);

        for (n=0; n < dataset.length; n++) {
          var svgSM = divSM.append('svg');

            svgSM.attr('width', 160)
                  .attr('height', 200)
                  .attr('class', 'smallSM')
            
            svgSM.append('text')
                  .text(function(d) { return dataset[n].state; })
                  .attr('class', 'stateNameSM')
                  .attr('transform', 'translate(75,12)')
          
            svgSM.append('g')
                  .attr('class', 'y axisSM')
                  .classed('labelOn', function() {  if(n%4 ==0) { return true }})
                  .attr('transform', 'translate(15,0)')
                  .call(yAxisSM);
           
            svgSM.append('g')
                  .attr('class', 'x axisSM')
                  .attr('transform', 'translate(0,164)')
                  .call(xAxisSM);
            // if(n%4 ==0) {
            //   console.log(dataset[n].state);
            //   // d3.select('.y.axis')
            //   //   .classed('labelOn', true);
            // }
            var lineGroupsSM = svgSM.append('g')
                  .attr('class', 'lineGroupsSM');

            var pathSM = lineGroupsSM.selectAll('path')
                  .data(function(d) { 
                    return [dataset[n].obesity];
                  })
                  .enter()
                  .append('path')
                  .attr('class', 'lineSM')
                  .attr('d', lineSM)

        }

        
        svg.append('g')
          .attr('class', 'y axis')
          .attr('transform', 'translate(' + margin.left + ',' + -w +')')
          .call(yAxis);

        svg.append('g')
          .attr('class', 'x axis')
          .attr('transform', 'translate(' + -w + ',' +  (h - margin.bottom - 5) + ')')
          .call(xAxis);

        d3.select('.y.axis')
          .transition()
          .delay(1000)
          .duration(800)
          .ease('quad')
          .attr('transform', 'translate(' + margin.left + ',0)')

        d3.select('.x.axis')
          .transition()
          .duration(800)
          .ease('quad')
          .attr('transform', 'translate(0,' +  (h - margin.bottom - 5) + ')')

        var lineGroups = svg.selectAll('.lineGroups')
            .data(dataset)
            .enter()
            .append('g')
            .attr('class', 'lineGroups');

        var path = lineGroups.selectAll('path')
            .data(function(d) { 
              return [d.obesity];
            })
            .enter()
            .append('path')
            .attr('class', 'line')
            .attr('d', line)
            .attr("stroke-dasharray", 1200, 1200)
            .attr("stroke-dashoffset", 1200)
            .attr('opacity', 0)

        path.transition()
            .delay(2000)
            .duration(1000)
            .ease('quad')
            .attr('stroke-dashoffset', 0)
            .attr('opacity', 1);
          

        // d3.selectAll('.line')

        // lineGroups.transition().delay(function (d,i){ return 2000 + (i * 30);})
        //   .duration(800)
        //   .ease('quad')
        //   .attr('opacity', 1)

        lineGroups.style('cursor', 'pointer')

        d3.selection.prototype.moveToFront = function() {
          return this.each(function(){
            this.parentNode.appendChild(this);
          });
        };
        
        lineGroups.on('mouseover', function(d, i) { 
          d3.select(this)
            .classed('hover', true)
            .moveToFront();
          
          tt = d3.select('.toolTip');
          tt.html('<span class="stateName">' + d.state + '</span>')
            .style('top', d3.event.pageY - 12 + 'px')
            .style('visibility', 'visible')
         })

        lineGroups.on('mouseout', function() { 
          d3.select(this)
            .classed('hover', false)
            .transition()
          tt.style('visibility', 'hidden')
         })

        lineGroups.on('mousemove', function (d) {


          var toolW = d3.select('.toolTip').node().getBoundingClientRect().width;

          if(d3.event.pageX > (w - toolW)) {
            tt.style('left', d3.event.pageX - toolW - 12 + 'px')
          } else {
            tt.style('left', d3.event.pageX + 12 + 'px')
          }
        })


        body.append('p')
          .text('Source: Centers for Disease Control and Prevention')
          .attr('class', 'source')

        body.append('p')
          .text('Hover over the lineGroups!!!')
          .attr('class', 'footnote')



      });
    </script>

  </body>
</html>	<!DOCTYPE html>
<meta charset="utf-8">

<style type="text/css">

	svg {
		border: 1px solid #C6c;
	}

	circle {
		fill: red;
	}

	text {
		font-family: "Avenir Next";
		font-size: 10px;
	}

</style>

<body>
	
	<h1>Anscombe's quartet</h1>

</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js" charset="utf-8"></script>

<script>
  //JS to go here
  
	var anscombeData = [
	   {"x": 10, "y": 8.04},
	   {"x": 8, "y": 6.95},
	   {"x": 13, "y": 7.58},
	   {"x": 9, "y": 8.81},
	   {"x": 11, "y": 8.33},
	   {"x": 14, "y": 9.96},
	   {"x": 6, "y": 7.24},
	   {"x": 4, "y": 4.26},
	   {"x": 12, "y": 10.84},
	   {"x": 7, "y": 4.82},
	   {"x": 5, "y": 5.68}
	 ];

	var width = 700,
		height = 400; 

	var xScale = d3.scale.linear()
		.range([0,width])
		.domain([2,20]);

	var yScale = d3.scale.linear()
		.range([height,0])
		.domain([0,15]);

	var svg = d3.select("body").append("svg")
		.attr("width", width)
		.attr("height", height);

	var circleGroup = svg.selectAll("g")
		.data(anscombeData)
		.enter()
		.append("g")
		.attr("class", "circle-group")
		.attr("transform", function(d) {
			return "translate("+ xScale(d.x) + "," + yScale(d.y) + ")";
		}
		);

	circleGroup.append("circle")
		.attr("r", 5);

	circleGroup.append("text")
		.text(function(d){ return d.x +","+ d.y; })
/*
 	var circle = svg.selectAll("circle")
		.data(anscombeData)
		.enter()
		.append("circle")
		.attr("r", 5)
		.attr("cx", function(d) { return xScale(d.x) })
		.attr("cy", function(d) { return yScale(d.y) })
		;

	var label = svg.selectAll("text")
		.data(anscombeData)
		.enter()
		.append("text")
		.attr("x", function(d) { return xScale(d.x) })
		.attr("y", function(d) { return yScale(d.y) })
		.text(function(d){ return d.x + "," + d.y; })
		;
*/
</script>
	
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Fruits Availability Per Capita in the US, 1970-2012</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-family: Cambria, Georgia, serif; font-size: 24px;
				margin-left: 100px; color: dimgray;
			}
            h2 {
				font-family: Helvetica, Ariel, sans-serif; font-size: 14px;
				margin-left: 100px; color: dimgray;
			}
            
            blockquote {margin-left: 110px;}
			
            p {
				font-size: 10px;
                color: dimgray;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: blue;
			}

			path {
				stroke: gray;
				stroke-width: 0.5;
			}

			g.highlight path {
				stroke: gray;
				stroke-width: 4;
			}
			
            path:hover {
				stroke: #ff4444;
				stroke-width: 4;
			}
			.axis path,
			.axis line {
				fill: none;
				stroke: gray;
				stroke-width: 1;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}
            text.label {
        font-size: 12px;
      }

		</style>
	</head>
	<body>

		<h1>Availability of Your Favorite Fruits Over the Years</h1>
        <h2>Fruits availablity in the United States, pounds per capita by type, 1970-2012</h2>

		

		<script type="text/javascript">		


			//Dimensions and padding
			var w = 1100;
			var h = 800;
			var padding = [ 20, 10, 50, 100 ];  //Top, right, bottom, left



			//Set up date formatting and years
			var dateFormat = d3.time.format("%Y");



			//Set up scales
			var xScale = d3.time.scale()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);



			//Configure axis generators
			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(30)
							.tickFormat(function(d) {
								return dateFormat(d);
							});

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left");



			//Configure line generator
			var line = d3.svg.line()
				.x(function(d) {
					return xScale(dateFormat.parse(d.year));
				})
				.y(function(d) {
					return yScale(+d.amount);
				});



			//Create the empty SVG image
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			//Load data
			d3.csv("fruits-availablity-pounds-per-capita-by-year-transpose.csv", function(data) {

									
				var years = ["1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012"];

				//Create a new, empty array to hold our restructured dataset
				var dataset = [];

				//Loop once for each row in data
				for (var i = 0; i < data.length; i++) {

					//Create new object with this country's name and empty array
					dataset[i] = {
						fruit: data[i].Fruit,
						pounds: []
					};

					//Loop through all the years
					for (var j = 0; j < years.length; j++) {

						// If value is not empty
						if (data[i][years[j]]) {
							//Add a new object to the emissions data array
							//for this country
							dataset[i].pounds.push({
								year: years[j],
								amount: data[i][years[j]]
							});
						}

					}

				}
				
				//Uncomment to log the original data to the console
				// console.log(data);

				//Uncomment to log the newly restructured dataset to the console
				// console.log(dataset);



				//Set scale domains
				xScale.domain([ 
					d3.min(years, function(d) {
						return dateFormat.parse(d);
					}),
					d3.max(years, function(d) {
						return dateFormat.parse(d);
					})
				]);

				yScale.domain([ 
					d3.max(dataset, function(d) {
						return d3.max(d.pounds, function(d) {
							return +d.amount;
						});
					}),
					0
				]);



				//Make a group for each country
				var groups = svg.selectAll("g")
					.data(dataset)
					.enter()
					.append("g");
					
						

				//Append a title with the country name (so we get easy tooltips)
				groups.append("title")
					.text(function(d) {
						return d.Fruit + "hello";
					});

				//Within each group, create a new line/path,
				//binding just the emissions data to each one
				groups.selectAll("path")
					.data(function(d) {
						return [ d.pounds ];
					})
					.enter()
					.append("path")
					.attr("class", "line")
					.attr("d", line)
					.attr("fill", "none")
					.attr("stroke-width", 2);



				//Axes
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3]) + ",0)")
					.call(yAxis);

			});
			//End data load function


		</script>

        <blockquote><p>Source: Calculated by ERS/USDA based on data from various sources (see http://www.ers.usda.gov/data-products/food-availability-(per-capita)-data-system/food-availability-documentation.aspx). Data last updated Feb. 1, 2014.</p></blockquote>
	</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset='utf-8'>
<meta http-equiv='X-UA-Compatible' content='IE=edge'>
<style>
    html, body {
        background: #ffffff;
        font-family: Helvetica, Arial, Tahoma, sans-serif;
        margin: 0;
        padding: 0;
    }

    path {
        fill: none;
        stroke: #343434;
    }
    .result {
        fill: none;
        stroke: #343434;
        stroke-width: 4px;
    }

    h1,h2,h3 {
        padding-left: 140px;
        padding-top: 0px;
    }
</style>
</head>
<body>
<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink= 'http://www.w3.org/1999/xlink' height=400 width=600>
    <defs>
        <filter id="filter-map-2" x="-0.15000001" y="-0.15000001" width="1.3" height="1.3" color-interpolation-filters="sRGB" >
            <feGaussianBlur stdDeviation="4" in="SourceGraphic" result="result1" id="feGaussianBlur4202" />
            <feTurbulence type="fractalNoise" baseFrequency="0.05" numOctaves="4" result="result0" id="feTurbulence4204" />
            <feDisplacementMap in2="result0" scale="20" xChannelSelector="R" yChannelSelector="G" in="result1" result="result2" id="feDisplacementMap4206" />
            <feGaussianBlur stdDeviation="3" in="SourceGraphic" result="result4" id="feGaussianBlur4208" />
            <feComposite in2="result2" operator="arithmetic" k1="1.5" k2="-0.25" k3="0.5" k4="0" in="result4" result="result5" id="feComposite4210" />
        </filter>

        <mask id="mask-filter">
            <rect x=100 y=70 width=50 height=70 fill="#ffffff" filter="url(#filter-map-2)" />
            <circle cx=200 cy=180 r=20 fill="#ffffff" filter="url(#filter-map-2)" />
        </mask>
    </defs>

    <rect width=300 height=200 x=30 y=30 fill="#8B6811" filter="url(#filter-map-2)" />
    <rect x=50 y=50 width=200 height=150 fill="#336699" mask="url(#mask-filter)" />
</svg>

</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width">

<style type="text/css">
  /*css to go here*/
  body {
    font-family: "Proxima-Nova",Arial,Helvetica,sans-serif;
    font-size: 12px;
  }

  .g-hed {
    text-align: left;
    text-transform: uppercase;
    font-weight: bold;
    font-size:20px; 
    margin: 3px 0;
  }

  .g-source-bold {
    text-align: left;
    font-size:11px;
    font-weight: bold;
    color: #333333; 
  }

  .g-source {
    margin-bottom: 2px;
    font-size:11px;
    color: #999999;
  }

  .g-intro {
    font-size: 18px;
    margin: 0px 0px 10px 0px;
    color: #333333;
  }

  .g-num {
    fill:#c12726;
  }

   .g-num2 {
     fill:#e0e0e0;
  }

  .g-labels {
    font-family: "Proxima-Nova",Arial,Helvetica,sans-serif;
    font-weight: bold;
    font-size: 16px;
  }

  .x.axis line, .y.axis line {
    display: none;
  }

  .x.axis text {
    display: none;
  }

  .domain {
    display: none;
  }

  .y.axis text {
    font-family: 'Proxima-Nova', sans-serif;
    font-size: 16px;
    font-weight: bold;
    text-anchor: end !important;
    fill: #c12726;
  }

  .logo {
    border-bottom: 1px solid #c3cddf;
    margin-bottom: 15px;
    padding-bottom: 5px;
  }

  .logoImg {
    width: 185px;
  }

  .g-chart {
    border-bottom: 1px solid #c3cddf;
  }



</style>

<body>
  <div class="logo">
    <img src="http://a.abcnews.com/images/Politics/ExitPollTextV2.png" class="logoImg">
    <div class="g-source"><span class="g-source-reg"></span><span class="g-source-bold"></span></div>
  </div>  
  <h5 class="g-hed"></h5>
  <p class="g-intro"></p>
  <div class="g-chart"></div>
</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js" charset="utf-8"></script>

<script>
//Margin conventions
var margin = {top: 10, right: 50, bottom: 20, left: 227};

var widther = window.outerWidth;

var width = widther - margin.left - margin.right,
    height = 200 - margin.top - margin.bottom;

var barHeight = 35;      

//Appends the svg to the chart-container div
var svg = d3.select(".g-chart").append("svg")
  .attr("width", width + margin.left + margin.right)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

//Creates the xScale 
var xScale = d3.scale.linear()
  .range([0,width]);

//Creates the yScale
var y0 = d3.scale.ordinal()
  .rangeBands([height, 0], 0)
  .domain(["Honest and Trustworthy", "Experienced", "Cares About People Like Me", "Electable"]);

//Defines the y axis styles
var yAxis = d3.svg.axis()
  .scale(y0)
  .orient("left");

//Defines the y axis styles
var xAxis = d3.svg.axis()
  .scale(xScale)
  .orient("bottom")
  .tickFormat(function(d) {return d + "%"; })
  .tickSize(height); 

//Local data
var data=[{"category":"Honest and Trustworthy","num":33, "num2": 100},
          {"category":"Experienced","num":27, "num2": 100},
          {"category":"Cares About People Like Me","num":26, "num2": 100},
          {"category":"Electable","num":12, "num2": 100}];   

//Chart headline (question)
var headline = "Most Important Quality"

//Chart state description
var stateDescription = "Nevada Caucus"

//Timestamp text
var timestampText = "EXIT POLL LATEST AS OF "   

//Timestamp time
var timestampTime = "9:05 PM ET"          

//Draw the chart
ready(data);

function ready(data) {

  //FORMAT data
  data.forEach(function(d) {
    d.num = +d.num;
    d.num2 = +d.num2;
  });

  //Appends chart headline
  d3.select(".g-hed").text(headline);

  //Appends chart intro text
  d3.select(".g-intro").text(stateDescription);

  //Sets the max for the xScale
  var maxX = d3.max(data, function(d) { return d.num2; });

  //Gets the min for bar labeling
  var minX = d3.min(data, function(d) { return d.num; });

  //Defines the xScale max
  xScale.domain([0, maxX ]);

  //Appends the y axis
  var yAxisGroup = svg.append("g")
    .attr("class", "y axis")
    .call(yAxis);

  //Appends the x axis    
  var xAxisGroup = svg.append("g")
    .attr("class", "x axis")
    .call(xAxis); 

  //Binds the data to the bars      
  var categoryGroup = svg.selectAll(".g-category-group")
    .data(data)
    .enter()
    .append("g")
    .attr("class", "g-category-group")
    .attr("transform", function(d) {
      return "translate(0," + y0(d.category) + ")";
    });

  //Appends background bar   
  var bars2 = categoryGroup.append("rect")
    .attr("width", function(d) { return xScale(d.num2); })
    .attr("height", barHeight - 1 )
    .attr("class", "g-num2")
    .attr("transform", "translate(0,4)");   

  //Appends main bar   
  var bars = categoryGroup.append("rect")
    .attr("width", function(d) { return xScale(d.num); })
    .attr("height", barHeight - 1 )
    .attr("class", "g-num")
    .attr("transform", "translate(0,4)"); 
  
  //Binds data to labels
  var labelGroup = svg.selectAll("g-num")
    .data(data)
    .enter()
    .append("g")
    .attr("class", "g-label-group")
    .attr("transform", function(d) {
      return "translate(0," + y0(d.category) + ")";
    });

  //Appends main bar labels   
  var barLabels = labelGroup.append("text") 
    .text(function(d) {return  d.num + "%";})
    .attr("x", function(d) { 
      if (minX > 32) {
        return xScale(d.num) - 37;}
      else {
        return xScale(d.num) + 6;}})
    .style("fill", function(d){
      if (minX > 32) {
        return "white";}
      else {
        return "#696969";}}) 
    .attr("y", y0.rangeBand()/1.6 )
    .attr("class", "g-labels");       

  //Appends timestamp text  
  d3.select(".g-source-reg")
    .text(timestampText)
    .attr("class", "g-source-reg"); 

  //Appends timestamp time
  d3.select(".g-source-bold")
    .text(timestampTime)
    .attr("class", "g-source-bold");   

      
  //RESPONSIVENESS
  d3.select(window).on("resize", resized);

  function resized() {

    //new margin
    var newMargin = {top: 10, right: 10, bottom: 20, left: 227};


    //Get the width of the window
    var w = d3.select(".g-chart").node().clientWidth;
    console.log("resized", w);

    //Change the width of the svg
    d3.select("svg")
      .attr("width", w);

    //Change the xScale
    xScale
      .range([0, w - newMargin.right - newMargin.left]);

    //Update the bars
    bars
      .attr("width", function(d) { return xScale(d.num); });

    //Update the second bars
    bars2
      .attr("width", function(d) { return xScale(d.num2); });  

    //Updates bar labels
    barLabels
      .attr("x", function(d) { 
        if (minX > 32) {
          return xScale(d.num) - 37;}
        else {
          return xScale(d.num) + 6;}})
      .attr("y", y0.rangeBand()/1.6 )

    //Updates xAxis
    xAxisGroup
      .call(xAxis);   

    //Updates ticks
    xAxis
      .scale(xScale)

  };

}


</script>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="gunsales.css">
  <link href='http://fonts.googleapis.com/css?family=Raleway:400,700' rel='stylesheet' type='text/css'>
</head>
<body>
  <div>Monthly Gun Sales from 2000 to 2015, data from <a href="http://www.nytimes.com/interactive/2015/12/10/us/gun-sales-terrorism-obama-restrictions.html?_r=0">NYT</a></div>
  <div>Click on the chart to overlay the years</div>
  <div class="vis"></div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="gunsales.js"></script>
</body><html>
<head>
  <title>D3 in Action Chapter 2 - Example 10</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
</head>
<style>
  svg {
    height: 500px;
    width: 500px;
    border: 1px solid gray;
  }
</style>
<body>

<div>
  <svg>
  </svg>
</div>
</body>
  <footer>
    
<script>
d3.json("tweets.json",function(error,data) {dataViz(data.tweets)});
function dataViz(incomingData) {

var nestedTweets = d3.nest()
.key(function (el) {return el.user})
.entries(incomingData);

nestedTweets.forEach(function (el) {
el.numTweets = el.values.length
})

var maxTweets = d3.max(nestedTweets, function(el) {return el.numTweets});

var yScale = d3.scale.linear().domain([0,maxTweets]).range([0,100]);

d3.select("svg")
.selectAll("rect")
.data(nestedTweets)
.enter()
.append("rect")
.attr("width", 50)
.attr("height", function(d) {return yScale(d.numTweets)})
.attr("x", function(d,i) {return i * 60})
.attr("y", function(d) {return 100 - yScale(d.numTweets)})
.style("fill", "blue")
.style("stroke", "red")
.style("stroke-width", "1px").style("opacity", .25)
}


</script>
  </footer>

</html>
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Billion Second Birthday</title>
    <link href='http://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
      <link rel="stylesheet" href="meyerReset.css">
      <link rel="stylesheet" href="billionSeconds.css">
      <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
      <!--[if lt IE 9]>
      <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
      <![endif]-->
    </head>
    <body>
      <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
      <symbol id="arrow" viewBox="0 0 100 150">
      <polygon points="40,0 60,0 60,50 100,50 50,150 0,50 40,50" >
      </symbol>
      
      </svg>
      <section id="countdown">
        <p>If you were born on <span id="billionSecondsAgo" class="highlight"></span>, you'd be <span class="highlight">a billion seconds old</span> right now.</p><a href="#yourBirthday">
        <svg class="icon"><use xlink:href="#arrow" /></svg></a>
      </section>
      
      <section id="yourBirthday">
        <p>When were you born?</p>
        <svg id="monthSelect"></svg>
        <svg id="daySelect"></svg>
        <svg id="yearSelect"></svg>
        <div id="ageSeconds" class="info"></div>
        <div id="billionSecondsBday" class="info"></div>
        <div id="nextBillion" class="info"></div>
      </section>
      <!-- call JS files -->
      <script src="birthdaySetup.js"></script>
      <script src="billionSeconds.js"></script>
    </body>
  </html><Title:>
  {{$render.ns}} Example

<Body:>
  <view name={{$render.ns}}></view>

<home:>
  <ul class="list">
    {{each _page.componentNames}}
      <li><a href="/{{this}}">{{this}}</a></li>
    {{/each}}
  </ul><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 107% }
  </style>
</head>

<body>
  <script>
    // Feel free to change or delete any of the code you see!
    var svg = d3.select("body").append("svg")
    svg.append("rect")
      .attr({x: 100, y: 100, width: 350, height: 350})
      .style({ fill: "#2632dd"})
      .transition().duration(2954).ease("bounce")
      .style({ fill: "#d136dc"})

    console.log("you are now rocking with d3", d3);
  </script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<style> /* set the CSS */

body { font: 12px Arial;}

path { 
    stroke: steelblue;
    stroke-width: 2;
    fill: none;
}

.axis path,
.axis line {
    fill: none;
    stroke: grey;
    stroke-width: 1;
    shape-rendering: crispEdges;
}

.legend {
    font-size: 16px;
    font-weight: bold;
    text-anchor: middle;
}

</style>
<body>

<!-- load the d3.js library -->    
<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

// Set the dimensions of the canvas / graph
var margin = {top: 30, right: 20, bottom: 70, left: 50},
    width = 600 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

// Parse the date / time
var parseDate = d3.time.format("%b %Y").parse;

// Set the ranges
var x = d3.time.scale().range([0, width]);
var y = d3.scale.linear().range([height, 0]);

// Define the axes
var xAxis = d3.svg.axis().scale(x)
    .orient("bottom").ticks(5);

var yAxis = d3.svg.axis().scale(y)
    .orient("left").ticks(5);

// Define the line
var priceline = d3.svg.line()	
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.price); });
    
// Adds the svg canvas
var svg = d3.select("body")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
    .append("g")
        .attr("transform", 
              "translate(" + margin.left + "," + margin.top + ")");

// Get the data
d3.csv("stocks.csv", function(error, data) {
    data.forEach(function(d) {
		d.date = parseDate(d.date);
		d.price = +d.price;
    });

    // Scale the range of the data
    x.domain(d3.extent(data, function(d) { return d.date; }));
    y.domain([0, d3.max(data, function(d) { return d.price; })]);

    // Nest the entries by symbol
    var dataNest = d3.nest()
        .key(function(d) {return d.symbol;})
        .entries(data);

    var color = d3.scale.category10();   // set the colour scale

    legendSpace = width/dataNest.length; // spacing for legend

    // Loop through each symbol / key
    dataNest.forEach(function(d,i) { 

        svg.append("path")
            .attr("class", "line")
            .style("stroke", function() { // Add the colours dynamically
                return d.color = color(d.key); })
            .attr("d", priceline(d.values));

        // Add the Legend
        svg.append("text")
            .attr("x", (legendSpace/2)+i*legendSpace) // spacing
            .attr("y", height + (margin.bottom/2)+ 5)
            .attr("class", "legend")    // style the legend
            .style("fill", function() { // dynamic colours
                return d.color = color(d.key); })
            .text(d.key);

    });

    // Add the X Axis
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    // Add the Y Axis
    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);

});

</script>
</body>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Adding Padding</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.3.js"></script>
		<script type="text/javascript">
		
		
			$(document).ready(function() {

				$('rect').click(function() {
					console.log('clicked a rect');
					$(this).attr("fill","#fc9000");
				});
				
				$('#hideme').click(function() {
					$('#thechart').toggle('fast');
				});
				
			});

		</script>
		<style type="text/css">
			
			body {
				background-color: #ddddff;
				font-family: Arial;
			}

			svg {
				background-color: white;
			}
			rect.clickable:hover {
				fill: yellow;
			}
			g.axis path, g.axis line {
				stroke: green;
				fill: none;
				shape-rendering: crispEdges;
			}
			g.axis text {
				font-family: Arial;
				font-size: 8px;
				opacity: 0.5;
				text-anchor: left;
			}
			g.tick {
				fill: black;
				opacity: 0.5;
				text-anchor: left;
			}
			g.axis.y line, g.axis.y path  {
				stroke: orange;
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1>Corety RTU-3 Mixed Air Temps</h1>
		<p>Date range 2014 January</p>
		<p><small><a id="hideme">hideChart</a></small></p>
		<div id="thechart" style="border: 1px solid red; width: 90%;">
		<script type="text/javascript">		


			var w = 800;
			var h = 800;
			var padding = [20, 220, 80, 80 ];  //Top, right, bottom, left

			var widthScale = d3.scale.pow().exponent(0.5)
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);
								
			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("right");

			var svg = d3.select("body #thechart")
						.append("svg")
						.attr("id","svg")
						.attr("width", w)
						.attr("height", h);
						
			d3.select("svg")
				.append("h1")
				.attr("width",500)
				.attr("height",200)
				.attr("fill","yellow")
				.text("h1 text inside of svg");  // I didn't expect this to work but thought I should try.

			d3.csv("Corey.RTU-3-short-2.csv", function(data) {


				data.sort(function(a, b) {
					return d3.descending(a['64651.Corey Building.RTU-3.Mixed AIr Temp'], b['64651.Corey Building.RTU-3.Mixed AIr Temp']);
				});

				//data.push(['Corey.RTU-3','2015-01-02 11:00:00','100','74.27','58.72','410.5','0','19.9','0.25','0','0','0','Th','1','10.68']);

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d['64651.Corey Building.RTU-3.Mixed AIr Temp'];
				}) ]);

				heightScale.domain(data.map(function(d,i) { 
					return d.DateTime + ' ' + d['64651.Corey Building.RTU-3.Mixed AIr Temp'];
				} ));

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", padding[3])
					.attr("y", function(d, i) {
						return heightScale(d.DateTime + ' ' + d['64651.Corey Building.RTU-3.Mixed AIr Temp']);
					})
					.attr("width", function(d) {
						return widthScale(d['64651.Corey Building.RTU-3.Mixed AIr Temp']);
					})
					.attr("height", heightScale.rangeBand())
					.attr("class","clickable")
					.append("title")
					.text(function(d) {
						return d.DateTime + "'s life satisfaction score is " + d['64651.Corey Building.RTU-3.Mixed AIr Temp'];
					});
					
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);
					
				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (w - padding[1] + 5) + ",0)")
					.call(yAxis);


				d3.selectAll('rect').on('click', function() {
					console.log('clicked a rect');
					d3.select(this).style('fill', '#fc9000');
				});
			

			});


		</script>
		</div>
	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Colour Density Hexbin</title>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
		<script src="d3.hexbin.min.js"></script>
  </head>

	<body>
		<div id="chartArea"></div>
		<script src="js.js"></script>
	</body>

	<style>
		.hexagon {
		  fill: none;
		  stroke: #000;
		  stroke-width: .5px;
		}
	</style>

</html><!DOCTYPE html>
<meta charset="utf-8">
<style>
	body {
		font: 10px sans-serif;
		shape-rendering: crispEdges;
	}
  
	.grid-background {
		fill: #ddd;
	}

	.grid line {
		stroke: #fff;
	}

	.grid .minor line {
		stroke-opacity: .5;
		stroke: red;
	}

	.grid .minor-minor line {
		stroke-opacity: .5;
		stroke: blue;
	}

	.grid text {
		display: none;
	}

	.axis line {
		stroke: #fff;
	}

	.axis text {
		fill: #000;
	}

	.axis path,
	.grid path {
		display: none;
	}
</style>
<body>
	<input type="range" min="20" max="1000" value="80" onchange="sliderChange()"/>
	<label></label>
</body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>
	function sliderChange() {
		var v = d3.select('input')[0][0].value;

		d3.select('label').text(v);

		x.domain([1, v]);
		redraw();
	}

	function redraw() {
		fakeAxisGroup
				.attr("class", "grid")
				.attr("transform", "translate(0," + height + ")")
				.call(d3.svg.axis().orient('bottom').scale(x).ticks(100))
				.selectAll(".tick")
				.select('line')
				.attr('y1', function (d, i) {
					if ((i + 1) % 4)
						return -25;
					else
						return 0;
				})
				.attr('y2', function (d, i) {
					if ((i + 1) % 2)
						return -18;
					if ((i + 1) % 4)
						return 10;
					else
						return 0;
				});

		realAxisGroup
				.attr("class", "axis")
				.attr("transform", "translate(0,0)")
				.call(d3.svg.axis().orient('bottom').scale(x).ticks(4).tickSize(18));
	}

	var margin = {top: 0, right: 10, bottom: 25, left: 10},
			width = 960 - margin.right - margin.left,
			height = 50 - margin.top - margin.bottom;

	var x = d3.scale.linear()
			.domain([1, d3.select('input')[0][0].value])
			.range([0, width]);

	var y = d3.scale.linear()
			.range([0, height]);

	var svg = d3.select("body").append("svg")
			.attr("width", width + margin.right + margin.left)
			.attr("height", height + margin.top + margin.bottom)
			.append("g")
			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

	svg.append("rect")
			.attr("class", "grid-background")
			.attr('y', 0)
			.attr("width", width)
			.attr("height", height + 20);

	var fakeAxisGroup = svg.append("g");
	var realAxisGroup = svg.append("g");
	sliderChange();
</script>

<!DOCTYPE html>
<html>
  <head>
    <link
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    <meta charset="utf-8">
    <title>Download SVG</title>

    <style>

      /* Make the download icon big. */
      .download-button{
        font-size: 32em;
        text-align: center;
      }

      /* Make the download icon look clickable when you hover over it. */
      .download-button i {
        cursor: pointer;
      }

    </style>

  </head>
  <body>

    <script>

      // This SVG data is copied from
      // http://stackoverflow.com/questions/5433806/convert-embedded-svg-to-png-in-place
      var dataURL = "data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%22-350%20-250%20700%20500%22%3E%0A%20%20%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%20media%3D%22screen%22%3E%0A%20%20%20%20%20%20%20%20svg%20%7B%20background%3A%23fff%3B%20%7D%0A%20%20%20%20%20%20%20%20.face%20%7B%20stroke%3A%23000%3B%20stroke-width%3A20px%3B%20stroke-linecap%3Around%20%7D%0A%20%20%20%20%20%20%3C%2Fstyle%3E%0A%20%20%20%20%20%20%3Ccircle%20r%3D%22200%22%20class%3D%22face%22%20fill%3D%22red%22%2F%3E%0A%20%20%20%20%20%20%3Cpath%20fill%3D%22none%22%20class%3D%22face%22%20transform%3D%22translate(-396%2C-230)%22%20d%3D%22M487%2C282c-15%2C36-51%2C62-92%2C62%20c-41%2C0-77-25-92-61%22%2F%3E%0A%20%20%20%20%20%20%3Ccircle%20cx%3D%22-60%22%20cy%3D%22-50%22%20r%3D%2220%22%20fill%3D%22%23000%22%2F%3E%0A%20%20%20%20%20%20%3Ccircle%20cx%3D%2260%22%20cy%3D%22-50%22%20r%3D%2220%22%20fill%3D%22%23000%22%2F%3E%0A%20%20%20%20%3C%2Fsvg%3E";

      // A data URL can also be generated from an existing SVG element.
      // function svgDataURL(svg) {
      //   var svgAsXML = (new XMLSerializer).serializeToString(svg);
      //   return "data:image/svg+xml," + encodeURIComponent(svgAsXML);
      // }

      function download(){
        var dl = document.createElement("a");
        dl.setAttribute("href", dataURL);
        dl.setAttribute("download", "test.svg");
        dl.click();
      }

    </script>
      
    <div class="download-button" onclick="download()" title="Download as SVG file.">
      <i class="fa fa-download"></i>
    </div>

  </body>
</html> 
<!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://timelyportfolio.github.io/rCharts_d3_sankey/css/sankey.css'>
    
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_d3_sankey/js/sankey.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 960px;
      height: 700px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart1d50964c0d' class = 'rChart d3_sankey'></div>    
    ﻿<!--Attribution:
Mike Bostock https://github.com/d3/d3-plugins/tree/master/sankey
Mike Bostock http://bost.ocks.org/mike/sankey/
-->

<script>
(function(){
var params = {
 "dom": "chart1d50964c0d",
"width":    950,
"height":    690,
"data": {
 "source": [ "All", "All", "High School Grad", "High School Grad", "Did not gradute high school", "Did not gradute high school", "2-year program" ],
"target": [ "High School Grad", "Did not gradute high school", "2-year program", "4-year program", "2-year program", "4-year program", "4-year program" ],
"value": [  22646,  5807,  9187,   8629,   1839,   361,    3791 ] 
},
"nodeWidth":     15,
"nodePadding":     10,
"layout":     32,
"id": "chart1d50964c0d" 
};

params.units ? units = " " + params.units : units = "";

//hard code these now but eventually make available
var formatNumber = d3.format("0,.0f"),    // zero decimal places
    format = function(d) { return formatNumber(d) + units; },
    color = d3.scale.category20();

if(params.labelFormat){
  formatNumber = d3.format(".2%");
}

var svg = d3.select('#' + params.id).append("svg")
    .attr("width", params.width)
    .attr("height", params.height);
    
var sankey = d3.sankey()
    .nodeWidth(params.nodeWidth)
    .nodePadding(params.nodePadding)
    .layout(params.layout)
    .size([params.width,params.height]);
    
var path = sankey.link();
    
var data = params.data,
    links = [],
    nodes = [];
    
//get all source and target into nodes
//will reduce to unique in the next step
//also get links in object form
data.source.forEach(function (d, i) {
    nodes.push({ "name": data.source[i] });
    nodes.push({ "name": data.target[i] });
    links.push({ "source": data.source[i], "target": data.target[i], "value": +data.value[i] });
}); 

//now get nodes based on links data
//thanks Mike Bostock https://groups.google.com/d/msg/d3-js/pl297cFtIQk/Eso4q_eBu1IJ
//this handy little function returns only the distinct / unique nodes
nodes = d3.keys(d3.nest()
                .key(function (d) { return d.name; })
                .map(nodes));

//it appears d3 with force layout wants a numeric source and target
//so loop through each link replacing the text with its index from node
links.forEach(function (d, i) {
    links[i].source = nodes.indexOf(links[i].source);
    links[i].target = nodes.indexOf(links[i].target);
});

//now loop through each nodes to make nodes an array of objects rather than an array of strings
nodes.forEach(function (d, i) {
    nodes[i] = { "name": d };
});

sankey
  .nodes(nodes)
  .links(links)
  .layout(params.layout);
  
var link = svg.append("g").selectAll(".link")
  .data(links)
.enter().append("path")
  .attr("class", "link")
  .attr("d", path)
  .attr("stroke", "teal")
  .style("stroke-width", function (d) { return Math.max(1, d.dy); })
  .sort(function (a, b) { return b.dy - a.dy; });

link.append("title")
  .text(function (d) { return d.source.name + " → " + d.target.name + "\n" + format(d.value); });

var node = svg.append("g").selectAll(".node")
  .data(nodes)
.enter().append("g")
  .attr("class", "node")
  .attr("transform", function (d) { return "translate(" + d.x + "," + d.y + ")"; })
.call(d3.behavior.drag()
  .origin(function (d) { return d; })
  .on("dragstart", function () { this.parentNode.appendChild(this); })
  .on("drag", dragmove));

node.append("rect")
  .attr("height", function (d) { return d.dy; })
  .attr("width", sankey.nodeWidth())
  .style("fill", function (d) { return d.color = color(d.name.replace(/ .*/, "")); })
  .style("stroke", function (d) { return d3.rgb(d.color).darker(2); })
.append("title")
  .text(function (d) { return d.name + "\n" + format(d.value); });

node.append("text")
  .attr("x", -6)
  .attr("y", function (d) { return d.dy / 2; })
  .attr("dy", ".35em")
  .attr("text-anchor", "end")
  .attr("transform", null)
  .text(function (d) { return d.name; })
.filter(function (d) { return d.x < params.width / 2; })
  .attr("x", 6 + sankey.nodeWidth())
  .attr("text-anchor", "start");

// the function for moving the nodes
  function dragmove(d) {
    d3.select(this).attr("transform", 
        "translate(" + (
                   d.x = Math.max(0, Math.min(params.width - d.dx, d3.event.x))
                ) + "," + (
                   d.y = Math.max(0, Math.min(params.height - d.dy, d3.event.y))
                ) + ")");
        sankey.relayout();
        link.attr("d", path);
  }
})();
</script>
    
    <script></script>    
  </body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>Chord Diagram - Phone Brands</title>
    <script src="http://d3js.org/d3.v3.min.js"></script>
	    <!-- jQuery -->
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
	<!-- Bootstrap 3 -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>

	  <style>
		body {
		  /*background: url(http://mbostock.github.io/d3/talk/20111018/texture-noise.png);*/
		  overflow: hidden;
		  margin: 0;
		  font-size: 14px;
		  font-family: "Helvetica Neue", Helvetica;
		}

		#footer {
		  position: absolute;
		  top: 0;
		  z-index: 1;
		  display: block;
		  font-size: 36px;
		  font-weight: 300;
		  text-shadow: 0 1px 0 #fff;
		  top: 640px;
		  right: 140px;
		  text-align: right;
		}

		line {
		  stroke: #000;
		  stroke-width: 1.px;
		}

		.hint {
		  position: absolute;
		  right: 0;
		  width: 350px;
		  font-size: 12px;
		  color: #999;
		}

		text {
		  font-size: 10px;
		}

		.titles{
		  font-size: 14px;
		}

		path.chord {
		  fill-opacity: .80;
		}
	  </style>
  </head>
  <body>

	<div id="cont" class="container-fluid">
		<div class="row text-center">
			<div class="col-sm-12 column"><div id="chart"></div></div>
		</div>
	</div>

	<script type="text/javascript">
	
var NameProvider = ["Apple","HTC","Huawei","LG","Nokia","Samsung","Sony","Other"];
	
var matrix = [
[9.6899,0.8859,0.0554,0.443,2.5471,2.4363,0.5537,2.5471], //Apple
[0.1107,1.8272,0,0.4983,1.1074,1.052,0.2215,0.4983], //HTC
[0.0554,0.2769,0.2215,0.2215,0.3876,0.8306,0.0554,0.3322], //Huawei
[0.0554,0.1107,0.0554,1.2182,1.1628,0.6645,0.4983,1.052], //LG
[0.2215,0.443,0,0.2769,10.4097,1.2182,0.4983,2.8239], //Nokia
[1.1628,2.6024,0,1.3843,8.7486,16.8328,1.7165,5.5925], //Samsung
[0.0554,0.4983,0,0.3322,0.443,0.8859,1.7719,0.443], //Sony
[0.2215,0.7198,0,0.3322,1.6611,1.495,0.1107,5.4264] //Other
];

var colors = ["#C4C4C4","#69B40F","#EC1D25","#C8125C","#008FC8","#10218B","#134B24","#737373"];

var chord = d3.layout.chord()
    .padding(.04)
    .sortSubgroups(d3.descending) //sort the chords inside an arc from high to low
    .sortChords(d3.descending) //which chord should be shown on top when chords cross. Now the biggest chord is at the bottom
	.matrix(matrix);

var width = 900,
    height = 650,
    innerRadius = Math.min(width, height) * .41,
    outerRadius = innerRadius * 1.05;
	
var fill = d3.scale.ordinal()
    .domain(d3.range(NameProvider.length))
    .range(colors);
	
var arc = d3.svg.arc()
    .innerRadius(innerRadius)
    .outerRadius(outerRadius);

var svg = d3.select("#chart").append("svg:svg")
    .attr("width", width)
    .attr("height", height+50)
	.append("svg:g")
    .attr("transform", "translate(" + width / 2 + "," + (height / 2+30) + ")");

////////////////////////////////////////////////////////////
////////////////// Draw outer Arcs /////////////////////////
////////////////////////////////////////////////////////////

var g = svg.selectAll("g.group")
	.data(chord.groups)
	.enter().append("svg:g")
	.attr("class", "group")
	.on("mouseover", fade(.02))
	.on("mouseout", fade(.80));

g.append("svg:path")
  .style("stroke", function(d) { return fill(d.index); })
  .style("fill", function(d) { return fill(d.index); })
  .attr("d", arc);

////////////////////////////////////////////////////////////
////////////////// Append Ticks ////////////////////////////
////////////////////////////////////////////////////////////

var ticks = svg.append("svg:g").selectAll("g.ticks")
    .data(chord.groups)
	.enter().append("svg:g").selectAll("g.ticks")
	.attr("class", "ticks")
    .data(groupTicks)
	.enter().append("svg:g")
    .attr("transform", function(d) {
      return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
          + "translate(" + outerRadius+40 + ",0)";
    });

ticks.append("svg:line")
    .attr("x1", 1)
    .attr("y1", 0)
    .attr("x2", 5)
    .attr("y2", 0)
    .style("stroke", "#000");

ticks.append("svg:text")
    .attr("x", 8)
    .attr("dy", ".35em")
    .attr("transform", function(d) { return d.angle > Math.PI ? "rotate(180)translate(-16)" : null; })
    .style("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
    .text(function(d) { return d.label; });

////////////////////////////////////////////////////////////
////////////////// Append Names ////////////////////////////
////////////////////////////////////////////////////////////

g.append("svg:text")
  .each(function(d) { d.angle = (d.startAngle + d.endAngle) / 2; })
  .attr("dy", ".35em")
  .attr("class", "titles")
  .attr("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
  .attr("transform", function(d) {
		return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
		+ "translate(" + (innerRadius + 55) + ")"
		+ (d.angle > Math.PI ? "rotate(180)" : "");
  })
  .text(function(d,i) { return NameProvider[i]; });

////////////////////////////////////////////////////////////
////////////////// Draw inner chords ///////////////////////
////////////////////////////////////////////////////////////
  
svg.selectAll("path.chord")
	.data(chord.chords)
	.enter().append("svg:path")
	.attr("class", "chord")
	.style("stroke", function(d) { return d3.rgb(fill(d.source.index)).darker(); })
	.style("fill", function(d) { return fill(d.source.index); })
	.attr("d", d3.svg.chord().radius(innerRadius));

////////////////////////////////////////////////////////////
////////////////// Extra Functions /////////////////////////
////////////////////////////////////////////////////////////

// Returns an event handler for fading a given chord group.
function fade(opacity) {
  return function(d, i) {
    svg.selectAll("path.chord")
        .filter(function(d) { return d.source.index != i && d.target.index != i; })
		.transition()
        .style("stroke-opacity", opacity)
        .style("fill-opacity", opacity);
  };
}//fade

// Returns an array of tick angles and labels, given a group.
function groupTicks(d) {
  var k = (d.endAngle - d.startAngle) / d.value;
  return d3.range(0, d.value, 1).map(function(v, i) {
    return {
      angle: v * k + d.startAngle,
      label: i % 5 ? null : v + "%"
    };
  });
}//groupTicks

    </script>
  </body>
</html><!DOCTYPE html>

<head>
    <title>hof-stacked-bar-iv</title>
    <meta charset="utf-8">
    <style>
        body {
            font: 10px sans-serif;
        }
        
        .axis path,
        .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }
        
        .bar {
            fill: steelblue;
        }
        
        .x.axis path {
            display: none;
        }

    </style>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
</head>

<body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>


    <div class="sliders">
    </div>

    <script>
        var current_key = 'rWar';

        var minyr = 1899;
        var maxyr = 9999;
        var minwar = 48;
        var maxwar = 10000;
        var plid_font_size = 10;

        var margin = {
                top: 20,
                right: 150,
                bottom: 80,
                left: 80
            },
            width = 960 - margin.left - margin.right,
            height = 4500 - margin.top - margin.bottom;

        var sliders;
        var metric_keys = ['rWar', 'fWar', 'rwa2', 'rwa3', 'rwa4',
            'rwa5', 'rwa7', 'rwb3', 'rwb5', 'rwb7'
        ];

        var metric_d = ['career rWar (baseball reference)', 'career fWar (fangraphs)', 'career wins-above-2 rWar', 'career wins-above-3 rWar', 'career wins-above-4 rWar', 'career wins-above-5 rWar', 'career wins-above-7 rWar', 'best 3-year-rWar total', 'best 5-year-rWar total', 'best 7-year-rWar total'];

        var metric_descriptions = {}
        _.forEach(metric_keys, function(k, i) {
            metric_descriptions[k] = metric_d[i];
        });

        var x = d3.scale.linear()
            .rangeRound([0, width]);

        var y = d3.scale.ordinal()
            .rangeRoundBands([0, height], .1);

        var opScale = d3.scale.linear()
            .range([0.85, 0.85])
            .domain([1901, 2000]);

        var color;
        if (metric_keys.length <= 11) {
            color = d3.scale.ordinal()
                .range(['#67001f', '#b2182b ', '#d6604d ', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061']);
        } else {
            color = d3.scale.category20b()
                .domain(d3.range(metric_keys.length));
        }

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left");

        var xAxis = d3.svg.axis()
            .scale(x)
            .orient("top")
            .tickFormat(d3.format(".2s"));

        var get_top = function(i) {
            return 20 * i;
        }

        var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


        var metric_weights = {};
        var player_idx = {};

        var stackedData = function(data) {
            data.forEach(function(d) {
                var x0 = 0;
                d.metrics = color.domain().map(function(name) {
                    return {
                        name: name,
                        x0: x0,
                        x1: x0 += +d[name]
                    };
                });
                d.total = d.metrics[d.metrics.length - 1].x1;
            });
        };

        /***************************************************************/
        /***************************************************************/

        d3.csv("HOF_metrics.csv", function(error, idata) {


            var data;

            var sort_by_total = function(data) {

                data.sort(function(a, b) {
                    return b.wtotal - a.wtotal;
                });

                var oset;

                _.forEach(data, function(d, i) {
                    if (typeof(d.idx) === typeof(undefined)) {
                        d.idx = i;
                    }
                    d.oldidx = d.idx;
                    d.idx = i;
                    player_idx[d.plid] = d.idx;
                    d.oset = 0;
                });

            };


            var weighted_total = function(data, weights) {
                _.forEach(data, function(d) {
                    var ss = 0.0;
                    var ww = 0.0;
                    _.mapObject(weights, function(val, key) {
                        ss += 1.0 * val * d[key];
                        ww += 1.0 * val;
                    })
                    if (ww > 0) {
                        d.wtotal = ss / ww;
                    } else {
                        d.wtotal = 0.0;
                    }
                })
            };


            data = _.filter(idata, function(d) {
                return (
                    (parseFloat(d.rWar) >= minwar && parseFloat(d.rWar) <= maxwar) && (parseFloat(d.minyr) >= minyr && parseFloat(d.minyr) <= maxyr)
                );
            });

            metric_weights = {};
            _.forEach(metric_keys, function(k) {
                metric_weights[k] = 50.0;
            });

            color.domain(d3.keys(data[0]).filter(function(key) {
                return _.contains(metric_keys, key);
            }));

            stackedData(data);
            weighted_total(data, metric_weights);
            sort_by_total(data);

            x.domain([0, d3.max(data, function(d) {
                return d.total;
            })]);


            y.domain(data.map(function(d, i) {
                return i;
            }));

            sliders = d3.select("div.sliders")
                .append('g')
                .style('position', 'absolute')
                .style('width', '240px')
                .style('top', '20px')
                .style('right', '20px');

            sliders.selectAll('input')
                .data(metric_keys)
                .enter()
                .append('input')
                .attr('class', 'metric_slider')
                .attr('id', function(d, i) {
                    return 'metric_slider_' + d;
                })
                .attr('type', 'range')
                .attr('min', 0)
                .attr('max', 100)
                .attr('value', function(d) {
                    return d.value;
                })
                .style('top', function(d, i) {
                    return get_top(i) + "px";
                })
                .style('right', "10px")
                .on('change', function(d, i) {
                    d.value = parseInt(this.value);
                    metric_weights[d] = this.value;
                    weighted_total(data, metric_weights);
                    sort_by_total(data);
                    do_sort(data);
                });

            svg.append('text')
                .text('player-label')
                .attr('id', 'player-label')
                .attr('x', 800)
                .attr('y', 20)
                .attr('text-anchor', 'end')
                .style('position', 'fixed')
                .style('top', 100)
                .style('right', 20)
                .style('font-size', 18);

            svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .selectAll("text")
                .attr("dx", "-.8em")
                .attr("dy", ".15em")
                .style('text-anchor', 'end')
                .attr("transform", "rotate(-65)")
                .attr('font-size', '6px')
                .attr('fint-family', 'sans-serif')
                .attr('class', 'xaxis_label');

            var ya = svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .selectAll("text")
                .text(function(d, i) {
                    //                    return data[i].pname;
                    return i;
                })
                .attr("class", "ytext")
                .attr("transform", "rotate(0)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .attr("font-size", "8px")
                .style("text-anchor", "end");

            var bar_containers = svg.selectAll(".bar_containers")
                .data(data)
                .enter().append("g")
                .attr("class", "bar_containers")
                .attr("transform", function(d, i) {
                    return "translate(0," + y(i) + ")";
                });

            var plid = svg.selectAll(".plid")
                .data(data)
                .enter().append("g")
                .attr("class", "plid")
                .attr("transform", function(d, i) {
                    return "translate(0," + y(i) + ")";
                });

            d3.selectAll(".bar_containers")
                .selectAll("rect")
                .data(function(d) {
                    return _.map(d.metrics, function(x) {
                        return {
                            'name': x.name,
                            'x0': x.x0,
                            'x1': x.x1,
                            'pname': d.pname,
                            'plid': d.plid,
                            'birthYear': d.birthYear,
                            'minyr': d.minyr,
                            'idx': d.idx,
                            'wtotal': d.wtotal
                        };
                    })
                })
                .enter()
                .append("rect")
                .attr("height", y.rangeBand())
                .attr("x", function(d, i) {
                    return x(d.x0);
                })
                .attr("width", function(d, i) {
                    return x(d.x1) - x(d.x0);
                })
                .style("text-anchor", "end")
                .style("fill", function(d) {
                    return color(d.name);
                })
                .style('opacity', function(d) {
                    return opScale(d.minyr);
                })
                .on('click', function(d, i) {
                    //                    current_key = metric_keys[i];
                    //                    sort_by_weight(data, metric_weights);
                    //                    do_sort(data);
                    ;
                })
                .on('mouseover', function(d, i) {
                    d3.selectAll('#player-label')
                        .text(d.pname + " " + d.wtotal.toFixed(1))
                        .attr("y", function() {
                            return y(player_idx[d.plid]);
                        })
                        .style('opacity', 1)
                })
                .on('mouseout', function(d, i) {
                    d3.selectAll('#player-label')
                        .style('opacity', 0);
                });


            d3.selectAll(".bar_containers")
                .append("text")
                .text(function(d, i) {
                    return d.pname;
                })
                .style("font-size", plid_font_size)
                .style("fill", "white")
                .attr("transform", function(d, i) {
                    var x = parseFloat(y.rangeBand() / 2) + 0 * parseFloat(plid_font_size) + 3;
                    return "translate(20," + x.toString() + ")";
                });


            var do_sort = function(data) {

                d3.selectAll(".bar_containers")
                    .transition()
                    .duration(1200)
                    .attr("transform", function(d, i) {
                        var dx = Math.random() * width * 0.1;
                        return "translate(" + dx + "," + y(d.oldidx) + ")";
                    })
                    .transition()
                    .duration(1800)
                    .attr("transform", function(d, i) {
                        return "translate(" + x(d.oset) + "," + y(d.idx) + ")";
                    })
            };


            var legend = svg.selectAll(".legend")
                .data(color.domain().slice().reverse())
                .enter().append("g")
                .attr("class", "legend")
                .attr("transform", function(d, i) {
                    return "translate(0," + i * 20 + ")";
                });


            legend.append("rect")
                .attr("x", width + margin.right - 18)
                .attr("width", 18)
                .attr("height", 18)
                .style("fill", color)
                .on('click', function(d, i) {
                    current_key = d;
                    //sort_by_weight(data, metric_weights);
                    do_sort(data);
                })
                .on("mouseover", function(d, i) {;
                    d3.select('#legend-hover-text')
                        .text(function() {
                            return metric_descriptions[d];
                        })
                        .style("opacity", 1);
                })
                .on("mouseout", function(d, i) {;
                    d3.select('#legend-hover-text')
                        .style("opacity", 0);
                });;

            legend.append("text")
                .attr("x", width + margin.right - 144)
                .attr("y", 5)
                .attr("dy", ".35em")
                .attr('id', 'legend-hover-text')
                .style("text-anchor", "end")
                .text(function(d) {
                    return d;
                })
                .style('opacity', 0);


            legend.append("text")
                .attr("x", width + margin.right - 24)
                .attr("y", 9)
                .attr("dy", ".35em")
                .style("text-anchor", "end")
                .text(function(d) {
                    return d;
                });

        });

    </script>
<!DOCTYPE html>
<meta charset="utf-8">
<!-- 
  This visualization is a slightly expanded version of the excellent crossfilter demo at http://square.github.io/crossfilter/ 
  The viz adds four items to the original example:
  - ability to filter on days and day types
  - a dataset view, that allows all of the 230K records to be viewed in a canvas element
  - a timer function/object that can be used to measure crossfilter performance
  - expanded and more detailed comments

  Please see the README.md for additional information

  Note: added comments and code blocks are marked "BoE" 
  Author of added features: Bo Ericsson, bo@boe.net 
-->
<title>Crossfilter with Day Filter</title>
<style>
body {
  font-family: "Helvetica Neue";
  /*margin: 40px auto;*/
  width: 960px;
  min-height: 2000px;
}

#body {
  position: relative;
}

footer {
  padding: 2em 0 1em 0;
  font-size: 12px;
}

h1 {
  font-size: 96px;
  margin-top: .3em;
  margin-bottom: 0;
}

h1 + h2 {
  margin-top: 0;
}

h2 {
  font-weight: 400;
  font-size: 28px;
}

h1, h2 {
  /*font-family: "Yanone Kaffeesatz"*/
  text-rendering: optimizeLegibility;
}

#body > p {
  line-height: 1.5em;
  width: 640px;
  text-rendering: optimizeLegibility;
}

#charts {
  padding: 10px 0;
}

.chart {
  display: inline-block;
  height: 151px;
  margin-bottom: 20px;
}

.reset {
  padding-left: 1em;
  font-size: smaller;
  color: #ccc;
}

.background.bar {
  fill: #ccc;
}

.foreground.bar {
  fill: steelblue;
}

.axis path, .axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  font: 10px sans-serif;
}

.brush rect.extent {
  fill: steelblue;
  fill-opacity: .125;
}

.brush .resize path {
  fill: #eee;
  stroke: #666;
}

#hour-chart {
  width: 260px;
}

#delay-chart {
  width: 230px;
}

#distance-chart {
  width: 420px;
}

#date-chart {
  width: 920px;
}

#flight-list {
  min-height: 1024px;
}

#flight-list .date,
#flight-list .day {
  margin-bottom: .4em;
}

#flight-list .flight {
  line-height: 1.5em;
  background: #eee;
  width: 640px;
  margin-bottom: 1px;
}

#flight-list .time {
  color: #999;
}

#flight-list .flight div {
  display: inline-block;
  width: 100px;
}

#flight-list div.distance,
#flight-list div.delay {
  width: 160px;
  padding-right: 10px;
  text-align: right;
}

#flight-list .early {
  color: green;
}

aside {
  position: absolute;
  left: 740px;
  font-size: smaller;
  width: 220px;
}

fieldset {
  margin-bottom: 20px; 
  border: 1px solid lightgray;
}

fieldset > label, 
span > label {
  margin-right: 10px;
  font-size: 12px;
}
label.selected {
  color: black;
}
label.notSelected {
  color: lightgray;
}
</style>
<body>
<div id="body">

  <div>
    <a href="javascript:resetAll()" class="reset" style="margin-left: -10px; margin-bottom: 20px">Reset all</a>
  </div>
  <div id="charts">
    <div id="hour-chart" class="chart">
      <div class="title">Time of Day</div>
    </div>
    <div id="delay-chart" class="chart">
      <div class="title">Arrival Delay (min.)</div>
    </div>
    <div id="distance-chart" class="chart">
      <div class="title">Distance (mi.)</div>
    </div>
    <div id="date-chart" class="chart">
      <div class="title">Date</div>
    </div>
  </div>

  <div id="daySelectionDiv"></div>

  <div id="canvasDiv"></div>

  <aside id="totals"><span id="active">-</span> of <span id="total">-</span> flights selected.</aside>

  <div id="lists">
    <div id="flight-list" class="list"></div>
  </div>

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/crossfilter/1.3.12/crossfilter.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.13/d3.min.js"></script>
<script>
"use strict";

// ensure at least 790px height if running in an iframe (bl.ocks)
// http://bl.ocks.org/mbostock/1093025
d3.select(self.frameElement).transition().duration(500).style("height", "790px");

// BoE: add time logger function
function timeLogger() {
  if (timeLogger.id == undefined) timeLogger.id = 0;
  else ++timeLogger.id;

  var events = [];
  var initTs = new Date().getTime();
  var currTs = initTs;

  return {
    log: function (event) {
      var ts = new Date().getTime();
      var duration = ts - currTs;
      events.push({ event: event, duration: duration })
      currTs = ts;
    },
    reset: function() {
      currTs = new Date().getTime();
    },
    results: function () {
      var results = events.concat([{ event: "total elapsed", duration: new Date().getTime() - initTs }]);
      results.forEach(function(d) { console.log(d.event, " --> ", d.duration)})
      return results;
    }
  };
};

// BoE: start two time loggers
var tl = timeLogger();
var tl2 = timeLogger();

// BoE: get the data
d3.csv("xFlights-3m.csv", function(error, flights) {

  // BoE: add usage example of time logger
  tl2.log("data load");
  tl2.results();

  // BoE: add array that holds the currently selected "in-filter" selected records
  var selected = []; 

  // Various formatters.
  var formatNumber = d3.format(",d"),
      formatChange = d3.format("+,d"),
      formatDate = d3.time.format("%B %d, %Y"),
      formatDateWithDay = d3.time.format("%a %B %d, %Y"),
      formatTime = d3.time.format("%I:%M %p");

  // A nest operator, for grouping the flight list.
  var nestByDate = d3.nest()
      .key(function(d) { return d3.time.day(d.date); });

  // A little coercion, since the CSV is untyped.
  flights.forEach(function(d, i) {
    d.index = i;
    d.date = parseDate(d.date);
    d.delay = +d.delay;
    d.distance = +d.distance;
    d.selected = false; // BoE add
  });

  // Create the crossfilter for the relevant dimensions and groups.
  // BoE: the "tl" stuff below are adds to the original example, to compute time consumed at various steps
  tl.reset();
  var flight = crossfilter(flights);
  tl.log("crossfilter constructor");
  var all = flight.groupAll();
  tl.log("flight.groupAll")

  // date dimension
  tl.reset();
  var date = flight.dimension(function(d) { return d.date; }); // date dim
  tl.log("date dimension");
  var dates = date.group(d3.time.day); // date group
  tl.log("date.group")
  dates.groupId = "dates";

  // hour dimension
  tl.reset();
  var hour = flight.dimension(function(d) { return d.date.getHours() + d.date.getMinutes() / 60; }); // hour dim
  tl.log("hour dimension")
  var hours = hour.group(Math.floor); // hour group
  tl.log("hour.group()");
  hours.groupId = "hours";

  // delay dimension
  tl.reset();
  var delay = flight.dimension(function(d) { return Math.max(-60, Math.min(149, d.delay)); }); // delay dim
  tl.log("delay dimension");
  var delays = delay.group(function(d) { return Math.floor(d / 10) * 10; }); // delay group
  tl.log("delay.group")
  delays.groupId = "delays";

  // distances dimension
  tl.reset()
  var distance = flight.dimension(function(d) { return Math.min(1999, d.distance); }); // distance dim
  tl.log("distance dimension")
  var distances = distance.group(function(d) { return Math.floor(d / 50) * 50; }); // distance group
  tl.log("distance.group")
  distances.groupId = "distances";

  // BoE: add new day dimension
  tl.reset();
  var dayNumber = flight.dimension(function(d) { return d.date.getDay(); });
  tl.log("dayNumber dimension");
  var dayNumbers = dayNumber.group(function(d) { return d; });
  tl.log("dayNumber.group")
  console.log("--", tl.results())

  // BoE: add day selection variables
  var days = { 
        mon: { state: true, name: "days", text: "Monday", type: "workDay", dayNumber: 1, order: 0 },  
        tue: { state: true, name: "days", text: "Tuesday", type: "workDay", dayNumber: 2, order: 1 }, 
        wed: { state: true, name: "days", text: "Wednesday", type: "workDay", dayNumber: 3, order: 2 }, 
        thu: { state: true, name: "days", text: "Thursday", type: "workDay", dayNumber: 4, order: 3 }, 
        fri: { state: true, name: "days", text: "Friday", type: "workDay", dayNumber: 5, order: 4 },
        sat: { state: true, name: "days", text: "Saturday", type: "weekendDay", dayNumber: 6, order: 5 },
        sun: { state: true, name: "days", text: "Sunday", type: "weekendDay", dayNumber: 0, order: 6 }
      },
      workDays = Object.keys(days).filter(function(d) { if (days[d].type == "workDay") return true; }).map(function(d) { return d; }),
      weekendDays = Object.keys(days).filter(function(d) { if (days[d].type == "weekendDay") return true; }).map(function(d) { return d; }),
      dayNumbers = (function() { var obj = {}; Object.keys(days).forEach(function(d) { var key = days[d].dayNumber; var value = d; obj[key] = value }); return obj; })(),
      dayTypes =  {
        weekendDays: { state: false, name: "dayType", text: "Weekend Days", order: 2 },
        allDays: { state: true, name: "dayType", text: "All Days", order: 0 },
        workDays: { state: false, name: "dayType", text: "Work Days", order: 1 },
        someDays: { state: false, name: "dayType", text: "Some Days", order: 3, last: true }
      };

  /*
  // BoE: uncomment this to see the day related variables
  console.log("workDays", workDays)
  console.log("weekendDays", weekendDays)
  console.log("dayNumbers", dayNumbers)
  */

  // BoE: prep add radio buttons and checkbox data
  var radioData = Object.keys(dayTypes).map(function(d) { dayTypes[d].value = d; return dayTypes[d]; }).sort(function(a, b) { return (a.order > b.order ? 1 : (a.order < b.order) ? -1 : 0) })
  var checkboxData = Object.keys(days).map(function(d) { days[d].value = d; return days[d]; }).sort(function(a, b) { return (a.order > b.order ? 1 : (a.order < b.order) ? -1 : 0) })

  // BoE: create radio buttons
  //http://stackoverflow.com/questions/19302318/radio-buttons-in-d3-how-to-align-text-correctly-and-select-a-default
  var fieldset = d3.select("#daySelectionDiv").append("fieldset")
  fieldset.append("legend").text("Day of Week");

  // BoE: add spans to hold radio buttons
  var radioSpan = fieldset.selectAll(".radio")
        .data(radioData)
      .enter().append("span")
        .attr("class", "radio")
        .style("margin-right", function(d) { return d.last == true ? "30px" : "0px" });

  // BoE: add radio button to each span
  radioSpan.append("input")
      .attr({
        type: "radio",
        name: function(d) { return d.name },
      })
      .property({
        checked: function(d) { return d.state },
        value: function(d) { return d.value }
      });

  // BoE: add radio button label
  radioSpan.append("label")
      .text(function(d) { return d.text });

  // BoE: add spans to hold checkboxes
  var checkboxSpan = fieldset.selectAll(".checkbox")
      .data(checkboxData)
    .enter().append("span")
      .attr("class", "checkbox")
      //.style("margin-right", "10px")

  // BoE: add checkbox to each span
  checkboxSpan
    .append("input")
      //.attr("type", "checkbox")
      //.attr("name", function(d) { return d.name })
      .attr({
        type: "checkbox",
        name: function(d) { return d.name }
      })
      //.property("value", function(d) { return d.value })
      //.property("checked", function(d) { return d.state })
      .property({
        value: function(d) { return d.value },
        checked: function(d) { return d.state }
      }) 

  // BoE: add checkbox label
  checkboxSpan
    .append("label")
      .text(function(d) { return d.text })


  // BoE: add radio button event handler
  d3.selectAll("input[type=radio][name=dayType]")
    .on("change", function() { 
      var elem = d3.select(this);
      var dayType = elem.property("value");
      switch (dayType) {
        case "allDays":
        case "someDays":
          workDays.forEach(function(day) { days[day].state = true; })
          weekendDays.forEach(function(day) { days[day].state = true; })
          break;
        case "workDays":
          workDays.forEach(function(day) { days[day].state = true; })
          weekendDays.forEach(function(day) { days[day].state = false; })
          break;
        case "weekendDays":
          workDays.forEach(function(day) { days[day].state = false; })
          weekendDays.forEach(function(day) { days[day].state = true; })
          break;
      }

      updateDaySelection();
      renderAll();
    });

  // BoE: init checkboxes and add event handler
  d3.selectAll("input[type=checkbox][name=days]")
    .property("checked", function(d, i, a) {
      var elem = d3.select(this);
      var day = elem.property("value");
      //console.log("elem", elem, "day", day, days[day])
      return days[day].state;
    })
    .on("change", function() {
      var elem = d3.select(this);
      var checked = elem.property("checked");
      var day = elem.property("value");
      days[day].state = checked;

      updateDaySelection();
      renderAll();
    })


  // BoE: update the state of the day selection radio buttons and checkboxes (called after "change" events from those elements)
  function updateDaySelection() {
    // BoE: update checkboxes
    d3.selectAll("input[type=checkbox][name=days]")
      .property("checked", function(d, i, a) {
        var elem = d3.select(this);
        var day = elem.property("value");
        return days[day].state;
      })

    // BoE: process selected days
    var workDayCount = workDays.reduce(function(p, c) { return (days[c].state) ? p + 1 : p }, 0);
    var weekendDayCount = weekendDays.reduce(function(p, c) { return (days[c].state) ? p + 1 : p }, 0);

    // BoE: determine day type
    var dayType = "someDays";
    if ((workDayCount + weekendDayCount) == 7) dayType = "allDays"
    else if (workDayCount == 5 && weekendDayCount == 0) dayType = "workDays"
    else if (workDayCount == 0 && weekendDayCount == 2) dayType = "weekendDays"

    // BoE: set the selected radio button
    d3.selectAll("input[type=radio][value=" + dayType + "]").property("checked", true);

    // BoE: create/update day number filter
    dayNumber.filter(function(d) { return days[dayNumbers[d]].state; })
  }

  // BoE: create canvas element that holds one record per canvas pixel
  var canvasWidth = d3.select("body").property("clientWidth") - 10,
      canvasHeight = Math.ceil(flight.size() / canvasWidth),
      canvas,
      ctx,
      canvasDiv,
      currentLabel;

  selected = date.top(Infinity);

  // BoE: get reference to canvas div
  canvasDiv = d3.select("#canvasDiv")
      .style("padding", "2px")
      .style("width", "100%")
      .style("margin-bottom", "20px")

  // BoE: add div to hold description of canvas content
  canvasDiv
    .append("div")
      .attr("class", "title")
      .style("margin-bottom", "20px")
      .style("margin-bottom", "10px")
      .html("<span>Dataset View – Each of the " + formatNumber(flight.size()) + " pixels represents a data record (White = Selected, Black = Not Selected, Red = Out of Bounds)</span><br><span style='font-style: italic; font-size: 14px; color: red;'>Move the mouse over the canvas below to see individual data records</span>");

  // BoE: add canvas element and mouse handler
  canvas = canvasDiv
    .append("canvas")
      .attr("width", canvasWidth)
      .attr("height", canvasHeight)
      .style("width", canvasWidth + "px")
      .style("height", canvasHeight + "px")
      .style("border", "1px solid lightgray")
      .style("display", "block")
      .style("cursor", "crosshair")
      .on("mousemove", function() {
        var mouse = d3.mouse(canvas.node()),
            x = Math.round(mouse[0]),
            y = Math.round(mouse[1]),
            index = y * canvasWidth + x;

        // BoE: event handler delivers mouse mousemove events outside the canvas sometimes (don't know why);
        //     therefore, ensure that only valid x and y values are processed
        if (x < 0 || x > canvasWidth - 1 || y < 0 || y > canvasHeight -1) {
          currentLabel.html("&nbsp;");
          return;
        }
        // then check if the index is out of bounds (the right part of the last row is NOT part of the dataset)        
        if (index > flight.size() - 1) {
          currentLabel.html("&nbsp;");
          return;          
        }

        var item = flights[index],
            dateText = formatDateWithDay(item.date),
            timeText = formatTime(item.date);

        var labelText = labelText = "Selected: " + item.selected + ", Date: " + dateText + " " + timeText + ", Delay: ";
        labelText += item.delay + ", Distance: " + item.distance + ", Route: " + item.origin + "-->" + item.destination + " (idx: " + index + ")";
        currentLabel
          .attr("class", function(d) { return item.selected ? "selected" : "notSelected" })
          .text(labelText);
      })
      .on("mouseleave", function() {
        currentLabel.html("&nbsp;");
      })

  // BoE: create label for mousemove
  currentLabel = canvasDiv.append("label").html("&nbsp;");

  // BoE: get context to canvas elem
  ctx = canvas.node().getContext('2d');

  // BoE: this code defines the four charts in an array
  var charts = [

    barChart()
        .dimension(hour)
        .group(hours)
      .x(d3.scale.linear()
        .domain([0, 24])
        .rangeRound([0, 10 * 24])) // 10 pixels per bar, 240 pixels total
        .filter([8, 18]), // added by BoE

    barChart()
        .dimension(delay)
        .group(delays)
      .x(d3.scale.linear()
        .domain([-60, 150])
        .rangeRound([0, 10 * 21])), // 21 delay groups, 210 pixels total

    barChart()
        .dimension(distance)
        .group(distances)
      .x(d3.scale.linear()
        .domain([0, 2000])
        .rangeRound([0, 10 * 40])), // 40 distance groups

    barChart()
        .dimension(date)
        .group(dates)
        .round(d3.time.day.round) // ensures whole days
      .x(d3.time.scale()
        .domain([new Date(2001, 0, 1), new Date(2001, 3, 1)])
        .rangeRound([0, 10 * 90]))
        .filter([new Date(2001, 1, 1), new Date(2001, 2, 1)])
  ];



  // Given our array of charts, which we assume are in the same order as the
  // .chart elements in the DOM, bind the charts to the DOM and render them.
  // We also listen to the chart's brush events to update the display.
  var chart = d3.selectAll(".chart")
      // BoE: the charts array defined above are provided as data to the d3 selection of ".charts"
      .data(charts)
      .each(function(chart) { 
        chart
          .on("brush", function() {
            renderAll();
          })
          .on("brushend", function() {
            renderAll();
          }); 
      });

  // Render the initial lists.
  var list = d3.selectAll(".list")
      .data([flightList]);

  // Render the total.
  d3.selectAll("#total")
      .text(formatNumber(flight.size()));

  // BoE: initial render
  renderAll();

  // BoE debug...
  var sum = dates.all().reduce(function(p, c, i, a) {
    return { value: p.value + c.value };
  })
  //console.log("sum", sum.value);

  // BoE debug...
  var groups = [dates, hours, delays, distances]
  groups.forEach(function(group) {
    var grp = group.group;
    var sum = group.all().reduce(function(p, c, i, a) { return { value: p.value + c.value } })
    //console.log("sum: ", sum, "grp", grp)
  })

  // Renders the specified chart or list.
  function render(method) {
      // BoE: "method" is the "d" value of data binding to chart above, which happens to be the chart function from barChart
    d3.select(this).call(method);
  }

  // Whenever the brush moves, re-rendering everything.
  function renderAll() {
    // BoE: uncomment the next lines to see the what's being rendered
    //console.log("renderAll", chart[0].length, list[0].length, all.value())
    //chart.each(function(d, i) { console.log("this", this, "d", d, "i", i) })
    chart.each(render); // render is called with this set to div and d set to the chart function from barChart
    list.each(render);
    d3.select("#active").text(formatNumber(all.value()));

    var tl3 = timeLogger();
    // BoE: update the "selected" array, which holds the currently selected (in-filter) items
    selected = date.top(Infinity);
    tl3.log("date.top(Infinity)")

    // BoE: set the selected status in "flights" ("flights" is the data source)
    flights.forEach(function(d) { d.selected = false; }); // first clear all
    selected.forEach(function(d) { flights[d.index].selected = true; }) // then set some 

    // BoE: clear canvas
    tl3.reset();
    ctx.fillStyle = "rgb(0,0,0)";
    ctx.fillRect (0, 0, canvasWidth, canvasHeight);
    tl3.log("filling canvas background")

    // BoE: add red out of bounds pixels 
    tl3.reset();
    var xSpan = (canvasWidth * canvasHeight) % flight.size();
    var x = canvasWidth - xSpan;
    var y = canvasHeight - 1;
    ctx.fillStyle = "rgb(255, 0, 0)";
    ctx.fillRect(x, y, xSpan, 1);
    tl3.log("setting red pixels")

    
    // BoE add: draw white pixel for each active element
    tl3.reset();
    ctx.fillStyle = "rgb(255,255,255)";
    selected.forEach(function(d) {
      var x = d.index % canvasWidth;
      var y = Math.floor(d.index / canvasWidth)
      ctx.fillRect(x, y, 1, 1 );
    })
    tl3.log("setting canvas pixels");
    tl3.results();
  }

  // Like d3.time.format, but faster.
  function parseDate(d) {
    return new Date(2001,
        d.substring(0, 2) - 1,
        d.substring(2, 4),
        d.substring(4, 6),
        d.substring(6, 8));
  }

  // BoE: this (window.resetAll) isn't used, therefore
  //    repurposed this to reset all filters by javascript triggered by a new "a" tag in the DOM
  window.resetAll = function() {
    var filters = [null, null, null, null];
    filters.forEach(function(d, i) { charts[i].filter(d); });
    Object.keys(days).forEach(function(d) { days[d].state = true });
    updateDaySelection();
    renderAll();
  };

  // BoE: resets the filter for a particular dimension
  window.reset = function(i) {
    charts[i].filter(null);
    renderAll();
  };

  // BoE: this looks really wasteful – every cell is a div, why not just use a html5 table?
  function flightList(div) {

    var flightsByDate = nestByDate.entries(date.top(10));

    div.each(function() {
      var date = d3.select(this).selectAll(".date")
          .data(flightsByDate, function(d) { return d.key; });

      date.enter().append("div")
          .attr("class", "date")
        .append("div")
          .attr("class", "day")
          .text(function(d) { return formatDate(d.values[0].date); });

      date.exit().remove();

      var flight = date.order().selectAll(".flight")
          .data(function(d) { return d.values; }, function(d) { return d.index; });

      var flightEnter = flight.enter().append("div")
          .attr("class", "flight");

      flightEnter.append("div")
          .attr("class", "time")
          .text(function(d) { return formatTime(d.date); });

      flightEnter.append("div")
          .attr("class", "origin")
          .text(function(d) { return d.origin; });

      flightEnter.append("div")
          .attr("class", "destination")
          .text(function(d) { return d.destination; });

      flightEnter.append("div")
          .attr("class", "distance")
          .text(function(d) { return formatNumber(d.distance) + " mi."; });

      flightEnter.append("div")
          .attr("class", "delay")
          .classed("early", function(d) { return d.delay < 0; })
          .text(function(d) { return formatChange(d.delay) + " min."; });

      flight.exit().remove();

      flight.order();
    });
  }

  function barChart() {
    // BoE: barChart.id is shared by all instances of barChart's chart, effectively an instance counter
    if (!barChart.id) barChart.id = 0;

    var margin = {top: 10, right: 10, bottom: 20, left: 10},
        x,
        y = d3.scale.linear().range([100, 0]), // 100 pixels height
        id = barChart.id++,
        axis = d3.svg.axis().orient("bottom"),
        brush = d3.svg.brush(),
        brushDirty,
        dimension,
        group,
        round,
        yMax;

    function chart(div) {
      /*
      // BoE: uncomment this to see how the domain and ranges change as the filters are modified
      console.log("margin", margin);
      console.log("x.range()", x.range())
      console.log("x.domain()", x.domain())
      console.log("y.range()", y.range())
      console.log("y.domain()", y.domain())
      */

      var width = x.range()[1],
          height = y.range()[0];

      yMax = 0;
      y.domain([0, yMax == 0 ? group.top(1)[0].value : yMax]); // set y domain to max value in this group

      // BoE: why is this done using "each"? There is only one div per chart; therefore the construct "div.each" will
      //    only be executed once
      div.each(function() {
        var div = d3.select(this),
            g = div.select("g");

        // Create the skeletal chart.
        // BoE: this is only executed once, at init, when there is nothing in the group
        if (g.empty()) {
          div.select(".title").append("a")
              .attr("href", "javascript:reset(" + id + ")")
              .attr("class", "reset")
              .text("reset")
              .style("display", "none");

          g = div.append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
            .append("g")
              .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

          // BoE: reset the clip path to full width
          g.append("clipPath")
              .attr("id", "clip-" + id)
            .append("rect")
              .attr("width", width)
              .attr("height", height);

          // BoE: generate two paths, one background, one foreground
          g.selectAll(".bar")
              .data(["background", "foreground"])
            .enter().append("path")
              .attr("class", function(d) { return d + " bar"; })
              // assign all the data in the group to the path
              .datum(group.all());

          // BoE: assign the clip path to the foreground bars
          g.selectAll(".foreground.bar")
              .attr("clip-path", "url(#clip-" + id + ")");

          // BoE: add the x-axis to the svg group
          g.append("g")
              .attr("class", "axis")
              .attr("transform", "translate(0," + height + ")")
              .call(axis);

          // Initialize the brush component with pretty resize handles.
          var gBrush = g.append("g").attr("class", "brush").call(brush);
          gBrush.selectAll("rect").attr("height", height);
          gBrush.selectAll(".resize").append("path").attr("d", resizePath);
        }

        // Only redraw the brush if set externally.
        // BoE: at init, the **Date** chart has an externally set brush;
        // in this extended example, the **Time of Day** chart also has an externally set brush
        if (brushDirty) {
          brushDirty = false;
          g.selectAll(".brush").call(brush);
          div.select(".title a").style("display", brush.empty() ? "none" : null);
          if (brush.empty()) {
            g.selectAll("#clip-" + id + " rect")
                .attr("x", 0)
                .attr("width", width);
          } else {
            var extent = brush.extent();
            g.selectAll("#clip-" + id + " rect")
                .attr("x", x(extent[0]))
                .attr("width", x(extent[1]) - x(extent[0]));
          }
        }

        // BoE: this sets the **d** attribute on the path
        g.selectAll(".bar").attr("d", barPath);
      });

      // BoE: the barPath function is called as usual with the d, i, a arguments 
      //   (d being called **groups** here, the other args not used)
      function barPath(groups) {
        var path = [],
            i = -1,
            n = groups.length,
            d;
        while (++i < n) {
          d = groups[i];
          path.push("M", x(d.key), ",", height, "V", y(d.value), "h9V", height);
        }
        // BoE: uncomment the next line to see the neat path array that has been generated
        //console.log("path", path)
        return path.join("");
      }

      // BoE: the resizePath function defines the look of the brush "handles" on the left and right side of the brush
      function resizePath(d) {
        var e = +(d == "e"),
            x = e ? 1 : -1,
            y = height / 3;
        return "M" + (.5 * x) + "," + y
            + "A6,6 0 0 " + e + " " + (6.5 * x) + "," + (y + 6)
            + "V" + (2 * y - 6)
            + "A6,6 0 0 " + e + " " + (.5 * x) + "," + (2 * y)
            + "Z"
            + "M" + (2.5 * x) + "," + (y + 8)
            + "V" + (2 * y - 8)
            + "M" + (4.5 * x) + "," + (y + 8)
            + "V" + (2 * y - 8);
      }
    }

    // BoE: the .chart below threw me for a loop at first; turns out the app is registering multiple brush handlers;
    //   see above for the first instance of brush handlers; to allow multiple handlers to be registered on the same event, 
    //   d3 requires a "namespace identifier" on the subsequent event handlers; here "chart" is used as a namespace indicator
    //   alse see: http://stackoverflow.com/questions/32459420/what-does-d3-brush-onbrush-chat-means
    brush.on("brushstart.chart", function() {
      var div = d3.select(this.parentNode.parentNode.parentNode);
      div.select(".title a").style("display", null);
    });

    // BoE: uncomment the next like to see another brush handler in action using a dummy namespace
    //brush.on("brush.whatever", function() { console.log("brush.whatever") })

    // BoE: this "brush.chart" event handler fires before the "brush" handler fires above; 
    //    this particular handler just sets the filter; 
    //    the other handler updates all charts
    brush.on("brush.chart", function() { 
      var g = d3.select(this.parentNode),
          extent = brush.extent(); // extent contains the domain (x.invert) of the brush

      // BoE: handle rounding of extent (allow only integers)
      if (round) g.select(".brush")
          .call(brush.extent(extent = extent.map(round)))
        .selectAll(".resize")
          .style("display", null); // remove the resize a element
      g.select("#clip-" + id + " rect")
          .attr("x", x(extent[0])) // set clip rect x pos
          .attr("width", x(extent[1]) - x(extent[0])); // set clip rect width

      // BoE: set a new filter range
      dimension.filterRange(extent);
    });

    brush.on("brushend.chart", function() {
      if (brush.empty()) {
        // BoE: if brush is empty, invalidate the clip rect (show all foreground bars), and remove the dimension filter
        var div = d3.select(this.parentNode.parentNode.parentNode);

        // BoE: remove the reset "a" element
        div.select(".title a").style("display", "none");

        // BoE: invalidate the clip rect (thereby show all foreground blue bars)
        div.select("#clip-" + id + " rect")
            .attr("x", null) // remove the x attribute which will render the clipRect invalid
            .attr("width", "100%");
        
        // BoE: remove the dimension's filter
        dimension.filterAll();
      }
    });

    chart.margin = function(_) {
      if (!arguments.length) return margin;
      margin = _;
      return chart;
    };

    chart.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      axis.scale(x);
      brush.x(x);
      return chart;
    };

    chart.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return chart;
    };

    chart.dimension = function(_) {
      //console.log("chart.dimension..." + _)
      if (!arguments.length) return dimension;
      dimension = _;
      return chart;
    };

    chart.filter = function(_) {
      if (_) {
        brush.extent(_);
        dimension.filterRange(_);
      } else {
        brush.clear();
        dimension.filterAll();
      }
      brushDirty = true;
      return chart;
    };

    chart.group = function(_) {
      if (!arguments.length) return group;
      group = _;
      // added by BoE
      yMax = group.top(1)[0].value;
      return chart;
    };

    chart.round = function(_) {
      if (!arguments.length) return round;
      round = _;
      return chart;
    };

    // BoE: the d3 rebind function moves the "on" method from the "brush" object/function to the "chart" object/function;
    // it then returns the "chart" function/object
    return d3.rebind(chart, brush, "on");
  }
});

</script>

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Emissions in Italian Regions</title>
		<script type="text/javascript" src="//d3js.org/d3.v3.min.js"></script>
		<style type="text/css">



			body {
				margin: 0;
				background-color: #eff3ff;
				font-family: Helvetica, Arial, sans-serif;
			}

					#container {
				width: 580px;
				margin-left: auto;
				margin-right: auto;
				margin-top: 60px;
				padding: 10px;
				background-color: white;
				box-shadow: 5px 5px 6px 6px #ccc;
			}

			h1 {
				font-size: 30px;
				margin: 10;
			}

			p {
				font-size: 14px;
				margin: 14px 0 0 0;
			}

					a:link {
				text-decoration: none;
				color: gray;
			}

			a:hover {
				text-decoration: underline;
			}

			a:visited {
				color: gray;
			}

			a:active {
				color: steelBlue;
			}

			svg {
				background-color: white;
			}



		</style>
	</head>
	<body>
			<div id="container">

			<h1>CO2 Emissions in Italian Regions (2010)</h1>
			<h4>Circles indicate top ten provinces in carbon intensity level (CO2 emitted per GDP)</h4>

		</div>

		<script type="text/javascript">

			//Year of CO2 data to map
			var year = "2010";

			//Width and height
			var w = 480;
			var h = 640;

			//Define map projection
			var projection = d3.geo.conicEqualArea()
								   .center([ 20, 40 ])
								   .translate([ w/0.9, h/1.65 ])
								   .scale([ 3000 ]);

			//Define path generator
			var path = d3.geo.path()
							 .projection(projection);

			//Define quantize scale to sort data values into buckets of color
			//Colors by Cynthia Brewer (colorbrewer2.org), YlOrRd
			var color = d3.scale.quantize()
								.range([ "#eff3ff", "#bdd7e7", "#6baed6", "#3182bd", "#08519c" ]);

			//Create SVG
			var svg = d3.select("#container")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			//Load in CO2 data
			d3.csv("ispra_regioni_co2_2010.csv", function(data) {

				//Set input domain for color scale
				color.domain([
					d3.min(data, function(d) { return +d[year]; }), 
					d3.max(data, function(d) { return +d[year]; })
				]);

				//Load in GeoJSON data
				d3.json("italy.json", function(json) {
				
					//Merge the CO2 data and GeoJSON into a single array
					//
					//Loop through once for each CO2 data value
					for (var i = 0; i < data.length; i++) {
				
						//Grab country name
						var dataREGIONE = data[i].id;
						
						//Grab data value, and convert from string to float
						var dataValue = +data[i][year];
				
						//Find the corresponding country inside the GeoJSON
						for (var j = 0; j < json.features.length; j++) {
						
							//We'll check the official ISO country code
							var jsonid = json.features[j].properties.id;
				
							if (dataREGIONE == jsonid) {
						
								//Copy the data value into the GeoJSON
								json.features[j].properties.co2 = dataValue;
								
								//Stop looking through the JSON
								break;
								
							}
						}		
					}



				//Bind data and create one path per GeoJSON feature
					svg.selectAll("path")
					   .data(json.features)
					   .enter()
					   .append("path")
					   .attr("d", path)
					   .style("fill", function(d) {

							//Get data value
							var value = d.properties.co2;

							if (value) {
								//If value exists…
								return color(value);
							} else {
								//If value is undefined…
								return "#ccc";
							}

						});

				//Load in cities data
					d3.csv("top10city_lonlat_2.csv", function(data) {
						
						//Create a circle for each city
						var circles = svg.selectAll("circle")
						   .data(data)
						   .enter()
						   .append("circle")
						   .attr("cx", function(d) {
							   return projection([d.longitude, d.latitude])[0];
						   })
						   .attr("cy", function(d) {
							   return projection([d.longitude, d.latitude])[1];
						   })
						   .attr("r", function(d) {
						   	   //Use Math.sqrt to scale by area (not radius)
							   return Math.sqrt(+d.co2_pil_2010 * 20);
						   })
						   .style("fill", "orange")
						   .style("opacity", 0.75);
						   
					//Append a title with the PROVINCIA name (so we get easy tooltips)
							circles.append("title")
							.text(function(d) {
							return d.name;
							});
						});

				});  //End d3.json()

			});  //End d3.csv()
		
		</script>
	</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 100% }
    
    
  </style>
</head>

<body>
  <script>
   
   

var holder = d3.select("body") // select the 'body' element
      .append("svg")           // append an SVG element to the body
      .attr("width", 1050)      
      .attr("height", 680)
; //
    

    
   
    

// draw a rectangle - pitch
holder.append("rect")        // attach a rectangle
    .attr("x", 0)         // position the left of the rectangle
    .attr("y", 0)          // position the top of the rectangle
    .attr("height", 680)    // set the height
    .attr("width", 1050)    // set the width
    .style("stroke-width", 5)    // set the stroke width
    .style("stroke", "#001400")    // set the line colour
    .style("fill", "#80B280");    // set the fill colour 


// draw a rectangle - halves
holder.append("rect")        // attach a rectangle
    .attr("x", 0)         // position the left of the rectangle
    .attr("y", 0)          // position the top of the rectangle
    .attr("height", 680)    // set the height
    .attr("width", 525)    // set the width
    .style("stroke-width", 5)    // set the stroke width
    .style("stroke", "#001400")    // set the line colour
    .style("fill", "#80B280");    // set the fill colour 


// draw a circle - center circle
holder.append("circle")          // attach a circle
    .attr("cx", 525)             // position the x-centre
    .attr("cy", 340)             // position the y-centre
    .attr("r", 91.5)               // set the radius
    .style("stroke-width", 5)    // set the stroke width
    .style("stroke", "#001400")      // set the line colour
    .style("fill", "none");      // set the fill colour


// draw a rectangle - penalty area 1
holder.append("rect")        // attach a rectangle
    .attr("x", 0)         // position the left of the rectangle
    .attr("y", 138.5)          // position the top of the rectangle
    .attr("height", 403)    // set the height
    .attr("width", 165)    // set the width
    .style("stroke-width", 5)    // set the stroke width
    .style("stroke", "#001400")    // set the line colour
    .style("fill", "#80B280");    // set the fill colour 


// draw a rectangle - penalty area 2
holder.append("rect")        // attach a rectangle
    .attr("x", 885)         // position the left of the rectangle
    .attr("y", 138.5)          // position the top of the rectangle
    .attr("height", 403)    // set the height
    .attr("width", 165)    // set the width
    .style("stroke-width", 5)    // set the stroke width
    .style("stroke", "#001400")    // set the line colour
    .style("fill", "#80B280");    // set the fill colour 

// draw a rectangle - six yard box 1
holder.append("rect")        // attach a rectangle
    .attr("x", 0)         // position the left of the rectangle
    .attr("y", 248.5)          // position the top of the rectangle
    .attr("height", 183)    // set the height
    .attr("width", 55)    // set the width
    .style("stroke-width", 5)    // set the stroke width
    .style("stroke", "#001400")    // set the line colour
    .style("fill", "#80B280");    // set the fill colour 

// draw a rectangle - six yard box 2
holder.append("rect")        // attach a rectangle
    .attr("x", 995)         // position the left of the rectangle
    .attr("y", 248.5)          // position the top of the rectangle
    .attr("height", 183)    // set the height
    .attr("width", 55)    // set the width
    .style("stroke-width", 5)    // set the stroke width
    .style("stroke", "#001400")    // set the line colour
    .style("fill", "#80B280");    // set the fill colour 


// draw a circle - penalty spot 1
holder.append("circle")        // attach a circle
    .attr("cx", 110)           // position the x-centre
    .attr("cy", 340)           // position the y-centre
    .attr("r", 5)             // set the radius
    .style("fill", "#001400");     // set the fill colour

// draw a circle - penalty spot 2
holder.append("circle")        // attach a circle
    .attr("cx", 940)           // position the x-centre
    .attr("cy", 340)           // position the y-centre
    .attr("r", 5)             // set the radius
    .style("fill", "#001400");     // set the fill colour

// draw a circle - center spot
holder.append("circle")        // attach a circle
    .attr("cx", 525)           // position the x-centre
    .attr("cy", 340)           // position the y-centre
    .attr("r", 5)             // set the radius
    .style("fill", "#001400");     // set the fill colour


// penalty box semi-circle 1
var vis = d3.select("body").append("svg")
var pi = Math.PI;
    
var arc = d3.svg.arc()
    .innerRadius(89)
    .outerRadius(94)
    .startAngle(0.64) //radians
    .endAngle(2.5) //just radians
    
var arc2 = d3.svg.arc()
    .innerRadius(89)
    .outerRadius(94)
    .startAngle(-0.64) //radians
    .endAngle(-2.5) //just radians
    holder.append("path")
    .attr("d", arc)
    .attr("fill", "#001400")
    .attr("transform", "translate(110,340)")
    holder.append("path")
    .attr("d", arc2)
    .attr("fill", "#001400")
    .attr("transform", "translate(940,340)");


    
    
// Dragging circles

var color = d3.scale.ordinal().range(["maroon", "pink", "white"]);
var color1 = d3.scale.ordinal().range(["mediumturquoise", "red", "black"]);
var size = d3.scale.ordinal().range([16, 16, 12]);

//var color = d3.scale.category10();

var drag = d3.behavior.drag()
    .origin(function(d) { return d; })
    .on("dragstart", dragstarted)
    .on("drag", dragged)
    .on("dragend", dragended);

d3.csv("dots.txt", dottype, function(error, dots) {
  dot = holder.append("g")
      .attr("class", "dot")
    .selectAll("circle")
      .data(dots)
    .enter().append("circle")
      .attr("r", function(d) { return size(d.team); })
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; })
      .style("fill", function(d) { return color(d.team); })
      .style("stroke", function(d) { return color1(d.team); })
  		.style("stroke-width", 3)
      .call(drag);
});



// functions for above...

function dottype(d) {
  d.x = +d.x;
  d.y = +d.y;
  return d;
}


function dragstarted(d) {
  d3.event.sourceEvent.stopPropagation();
  d3.select(this)
  //.classed("dragging", true);
;
}

function dragged(d) {
  d3.select(this)
  .attr("cx", d.x = d3.event.x)
  .attr("cy", d.y = d3.event.y)
  .style("opacity", .5);
}

function dragended(d) {
  d3.select(this)
  .style("opacity", 1) 
//  .classed("dragging", false);
;
}


    
    
    
    
// This allows freehand drawing with mouse
   
    var line = d3.svg.line()
        .interpolate("basis")
   ;
    
    var drawObj = {
      isDown: false,
      dataPoints: [],
      currentPath: null,
    }
    
    holder.on("mousedown", function(){
      drawObj.isDown = true;
      
    });

    holder.on("mousemove", function(){
      if (drawObj.isDown){
        drawObj.dataPoints.push(
          [d3.event.x, d3.event.y]
        );
        if (!drawObj.currentPath){
          drawObj.currentPath = holder.append("path")
            .attr("class","currentPath")
            .style("stroke-width", 4)
            .style("stroke", "white")
            .style("fill", "none");
        }
        drawObj.currentPath
          .datum(drawObj.dataPoints)
          .attr("d", line);
      }
    });
    
    holder.on("mouseup", function(){
      drawObj.isDown = false;
      drawObj.currentPath.attr("class","oldPath");
      drawObj.dataPoints = [];
      drawObj.currentPath = null;
    })
    
  </script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<title>SpecdrawJS: Full client-side mode - SampleSet spectra</title>
<link rel="stylesheet" href="https://rawgit.com/ahmohamed/specdraw.js/master/specdraw.min.css" type="text/css">
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="https://rawgit.com/ahmohamed/specdraw.js/master/specdraw.js"></script>
<style type="text/css">
#container {
  width:960px;
  height:500px;
}
</style>
<body>
<div id="container"></div>

<script>
var spec_app = specdraw.App()
  .data('https://rawgit.com/cheminfo-js/jcampconverter/master/test/data/indometacin/1h.dx');

d3.select('#container').call(spec_app);
</script>
<!DOCTYPE html>
<meta charset="utf-8">

<head>
<title>mean and total rWAR by birth-state</title>
</head>

<style>

.land {
  fill: #ddd;
}

.border {
  fill: none;
  stroke: #fff;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.bubble {
  stroke: #fff;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>

<script>

var width = 960,
    height = 600;

var path = d3.geo.path()
    .projection(null);

var radius = d3.scale.sqrt()
    .domain([0, 1000])
    .range([0, 15]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("https://gist.githubusercontent.com/bdilday/7d1ffcc722752d26cc03/raw/9b30ed9b476eff35f15e5f39240b4954008727b9/us_war.json", function(error, us) {
//d3.json("us_war.json", function(error, us) {
  if (error) return console.error(error);

    console.log(us);
    svg.append("path")
	.datum(topojson.feature(us, us.objects.us_40))
	.attr("class", "land")
	.attr("d", path);
    
    svg.append("path")
	.datum(topojson.mesh(us, us.objects.us_40, function(a, b) { return a !== b; }))
	.attr("class", "border border--state")
       .attr("d", path);

    
    svg.append("g")
	.attr("class", "bubble")
	.selectAll("circle")
	.data(topojson.feature(us, us.objects.us_40).features)
	.enter()
	.append("circle")
	.attr("transform", function(d) { return "translate(" + path.centroid(d) + ")"; })
	.attr("r", function(d) { return d.properties["war"] > 100*d.properties["mwar"] ? radius(d.properties["war"]) : radius(100*d.properties["mwar"]) ; } )
	.attr("fill", function(d) { return d.properties["war"] > 100*d.properties["mwar"] ? "black" : "red" ;})
	.attr("opacity", 0.8)

    ;

    svg.append("g")
	.attr("class", "bubble")
	.selectAll("circle")
	.data(topojson.feature(us, us.objects.us_40).features)
	.enter()
	.append("circle")
	.attr("transform", function(d) { return "translate(" + path.centroid(d) + ")"; })
	.attr("r", function(d) { return d.properties["war"] > 100*d.properties["mwar"] ? radius(100*d.properties["mwar"]) : radius(d.properties["war"]) ; } )
	.attr("fill", function(d) { return d.properties["war"] > 100*d.properties["mwar"] ? "red" : "black" ;})
	.attr("opacity", 0.3)
    ;

});


</script>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Sequences sunburst</title>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <link rel="stylesheet" type="text/css"
      href="https://fonts.googleapis.com/css?family=Open+Sans:400,600">
    <link rel="stylesheet" type="text/css" href="sequences.css"/>
  </head>
  <body>
    <div id="main">
      <div id="sequence"></div>
      <div id="chart">
        <div id="explanation" style="visibility: hidden;">
          <span id="percentage"></span><br/>
          of visits begin with this sequence of pages
        </div>
      </div>
    </div>
    <div id="sidebar">
      <input type="checkbox" id="togglelegend"> Legend<br/>
      <div id="legend" style="visibility: hidden;"></div>
    </div>
    <script type="text/javascript" src="sequences.js"></script>
    <script type="text/javascript">
      // Hack to make this example display correctly in an iframe on bl.ocks.org
      d3.select(self.frameElement).style("height", "700px");
  </script> 
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Module 4</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: beige;
			}

			svg {
				background-color: white;
			}

			}

			h1 {
				font-size: 24px;
				font-family: sans-serif;
				margin: 0;
			}

			p {
				font-family: sans-serif;
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 9px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			} /* taking of the y axix */

			rect:hover {
				fill: orange;
			} /* fill with some color when the mouse is passing through */
			

		</style>
	
	</head>
	
	<body>

		<h1> Air and GHG emissions </h1>

		<p> This bar chart represents the Air and GHG emissions for each country in tonnes/capita at the year of 2012. Source: <a href="https://data.oecd.org/air/air-and-ghg-emissions.htm">OEDC</a>.</p>

		<script type="text/javascript">

				

			var w = 700;
			var h = 1000;

			//padding (margins): setting a room for the axis

			var padding = [20,10,20,200]; // Top, right, bottom, left

			//setting the domain

			var wscale = d3.scale.linear().range([ 0, w - padding[1] - padding[3] ]);

			var hscale = d3.scale.ordinal().rangeRoundBands([ padding[0], h - padding[2] ], 0.1);
			

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			var xAxis = d3.svg.axis().scale(wscale).orient("bottom"); 

			var yAxis = d3.svg.axis().scale(hscale).orient("left");


			d3.csv("Air and GHG emissions.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.year2012, +b.year2012); 				

				});

				//setting the domains

				wscale.domain([ 0, d3.max( data, function(d){
				    return +d.year2012;
			    }) ]);

			    //setting the domains + add the function map in order to creat and array with all country names
			    // the contry name will be retuned in the y axis 

			    hscale.domain(data.map(function(d) { return d.Country;} ));

				
				var rects = svg.selectAll("rect").data(data).enter().append("rect");



				rects.attr("x", padding[3])
					.attr("y", function(d, i) { //set where each bar is going to beggining
						return hscale(d.Country);
					})
					.attr("width", function(d) {
						return wscale(d.year2012);
					})
					.attr("height", hscale.rangeBand()) //set the thickness of the bar
					.attr("fill", "firebrick")
					.append("title")
					.text(function(d) {
						return d.Country + "'s air and GHG emissions in 2012: " + d.year2012;
					})

				svg.append("g").attr("class", "x axis").attr("transform", "translate (" + padding[3] + "," + (h-padding[2]) + ") ").call(xAxis);

				svg.append("g").attr("class", "y axis").attr("transform", "translate(" + (padding[3] - 5) + ",0)").call(yAxis);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Republic of Korea </title>
		<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<style type="text/css">



			body {
				background-color: #006ECC;
                font-family: sans-serif;
                color:#ffffff;
			}


		</style>
	</head>
	<body>
	<h1> Population in Republic of Korea</h1>
	<p> If you move the mouse on graph, you can see the name of selected area</p>
	<p style="line-height:0">Color : </p>
	<svg width="450" height="30">
	     <rect x="10" y="10" width="30" height="15" style="fill:rgb(55,128,196);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="50" y="10" width="30" height="15" style="fill:rgb(76,138,177);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="90" y="10" width="30" height="15" style="fill:rgb(98,147,161);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="130" y="10" width="30" height="15" style="fill:rgb(116,154,145);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="170" y="10" width="30" height="15" style="fill:rgb(135,159,129);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="210" y="10" width="30" height="15" style="fill:rgb(156,165,113);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="250" y="10" width="30" height="15" style="fill:rgb(180,172,96);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="290" y="10" width="30" height="15" style="fill:rgb(203,178,81);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="330" y="10" width="30" height="15" style="fill:rgb(226,184,66);stroke-width:1;stroke:rgb(255,255,255)"/>
	     <rect x="370" y="10" width="30" height="15" style="fill:rgb(255,201,65);stroke-width:1;stroke:rgb(255,255,255)"/>
	</svg>
	<div class="map"></div>
    <script type="text/javascript">
			
        //Width and height
			var w = 800;
			var h = 700;

			//Define map projection
			var projection = d3.geo.mercator()
								   .scale(5500)
                   .translate([-11900,4050]); 
            
			//Define path generator
			var path = d3.geo.path()
							 .projection(projection);

			//Create SVG
			var svg = d3.select(".map")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
            
            d3.csv("data.csv",function(data){
                
                data.forEach(function(d){
                    d.population = +d.population;
                });
                
                	var color = d3.scale.quantize()
								.range(["#3780c4", "#4c8ab1", "#6293a1", "#749a91", "#879f81", "#9ca571", "#b4ac60",
                                       "#cbb251","#e2b842","#ffc941"])
                                .domain([
                                    0, d3.max(data, function(d) { return d.population; })
                                ]);
                
                
                d3.json("stateen.json", function(json) {
                    
                    for (var i = 0; i < data.length; i++) {
				
						//Grab country name
						var dataCounty = data[i].areaname;
						
						//Grab data value, and convert from string to float
						var dataValue = (data[i].population);
				
						//Find the corresponding country inside the GeoJSON
						for (var j = 0; j < json.features.length; j++) {
						
							//We'll check the official ISO country code
							var jsonCounty = json.features[j].properties.name;
				
							if (dataCounty == jsonCounty) {
						
								//Copy the data value into the GeoJSON
								json.features[j].properties.population = dataValue;
								
								//Stop looking through the JSON
								break;
								
							}
						}		
					};
				
				//Bind data and create one path per GeoJSON feature
				svg.selectAll("path")
				   .data(json.features)
				   .enter()
				   .append("path")
				   .attr("d", path)
                   .attr("opacity",1)
                    .style("fill", function(d) {

							//Get data value
							var value = d.properties.population;
                            console.log(value);

							if (value) {
								return color(value);
							} else {
								//If value is undefined…
								return "#ccc";
							}

					 })
                    .append("svg:title")
                    .text(function(d){
                        return d.properties.name;
                    });
            });
        });
		</script>
	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10, "%");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", type, function(error, data) {
  if (error) throw error;

  x.domain(data.map(function(d) { return d.letter; }));
  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Frequency");

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.letter); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.frequency); })
      .attr("height", function(d) { return height - y(d.frequency); });
});

function type(d) {
  d.frequency = +d.frequency;
  return d;
}

</script>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width: 100%; height: 100%; }
  </style>
</head>

<body>
  <script>
    var margin = {top: 20, right: 10, bottom: 20, left: 10};
    var width = 960 - margin.left - margin.right;
    var height = 500 - margin.top - margin.bottom;
    var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    // Feel free to change or delete any of the code you see!
    svg.append("rect")
      .attr({x: 100, y: 10, width: width - 200, height: height - 20})
      .style({ fill: "#a72d1a"})
      .on("mouseover", function() {
        d3.select(this).transition().duration(1000)
          .style({fill: "#00FF88"})
      })
      .on("mouseour", function() {
        d3.select(this).transition().duration(1000)
          .style({fill: "#FF8800"})
      });
    
    console.log("you are now rocking with d3", d3);
  </script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<title>Quadtree</title>
<style>

.point {
  fill: orange;
  fill-opacity: 1;
  stroke: brown;
}

.node {
  fill: none;
  stroke: #ccc;
  shape-rendering: crispEdges;
}
.parentNode {
  fill: #11FFAA;
  fill-opacity: 0.5;
  stroke: #ccc;
  shape-rendering: crispEdges;
}

.new {
  stroke-width: 5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
!function() {
  var d3 = {
    version: "3.4.11"
  };
  if (!Date.now) Date.now = function() {
    return +new Date();
  };
  var d3_arraySlice = [].slice, d3_array = function(list) {
    return d3_arraySlice.call(list);
  };
  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;
  try {
    d3_array(d3_documentElement.childNodes)[0].nodeType;
  } catch (e) {
    d3_array = function(list) {
      var i = list.length, array = new Array(i);
      while (i--) array[i] = list[i];
      return array;
    };
  }
  try {
    d3_document.createElement("div").style.setProperty("opacity", 0, "");
  } catch (error) {
    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
    d3_element_prototype.setAttribute = function(name, value) {
      d3_element_setAttribute.call(this, name, value + "");
    };
    d3_element_prototype.setAttributeNS = function(space, local, value) {
      d3_element_setAttributeNS.call(this, space, local, value + "");
    };
    d3_style_prototype.setProperty = function(name, value, priority) {
      d3_style_setProperty.call(this, name, value + "", priority);
    };
  }
  d3.ascending = d3_ascending;
  function d3_ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }
  d3.descending = function(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  };
  d3.min = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
    } else {
      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
    }
    return a;
  };
  d3.max = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
    } else {
      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
    }
    return a;
  };
  d3.extent = function(array, f) {
    var i = -1, n = array.length, a, b, c;
    if (arguments.length === 1) {
      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;
      while (++i < n) if ((b = array[i]) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    } else {
      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    }
    return [ a, c ];
  };
  d3.sum = function(array, f) {
    var s = 0, n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (!isNaN(a = +array[i])) s += a;
    } else {
      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;
    }
    return s;
  };
  function d3_number(x) {
    return x != null && !isNaN(x);
  }
  d3.mean = function(array, f) {
    var s = 0, n = array.length, a, i = -1, j = n;
    if (arguments.length === 1) {
      while (++i < n) if (d3_number(a = array[i])) s += a; else --j;
    } else {
      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) s += a; else --j;
    }
    return j ? s / j : undefined;
  };
  d3.quantile = function(values, p) {
    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
    return e ? v + e * (values[h] - v) : v;
  };
  d3.median = function(array, f) {
    if (arguments.length > 1) array = array.map(f);
    array = array.filter(d3_number);
    return array.length ? d3.quantile(array.sort(d3_ascending), .5) : undefined;
  };
  function d3_bisector(compare) {
    return {
      left: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
        }
        return lo;
      },
      right: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
        }
        return lo;
      }
    };
  }
  var d3_bisect = d3_bisector(d3_ascending);
  d3.bisectLeft = d3_bisect.left;
  d3.bisect = d3.bisectRight = d3_bisect.right;
  d3.bisector = function(f) {
    return d3_bisector(f.length === 1 ? function(d, x) {
      return d3_ascending(f(d), x);
    } : f);
  };
  d3.shuffle = function(array) {
    var m = array.length, t, i;
    while (m) {
      i = Math.random() * m-- | 0;
      t = array[m], array[m] = array[i], array[i] = t;
    }
    return array;
  };
  d3.permute = function(array, indexes) {
    var i = indexes.length, permutes = new Array(i);
    while (i--) permutes[i] = array[indexes[i]];
    return permutes;
  };
  d3.pairs = function(array) {
    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
    return pairs;
  };
  d3.zip = function() {
    if (!(n = arguments.length)) return [];
    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
        zip[j] = arguments[j][i];
      }
    }
    return zips;
  };
  function d3_zipLength(d) {
    return d.length;
  }
  d3.transpose = function(matrix) {
    return d3.zip.apply(d3, matrix);
  };
  d3.keys = function(map) {
    var keys = [];
    for (var key in map) keys.push(key);
    return keys;
  };
  d3.values = function(map) {
    var values = [];
    for (var key in map) values.push(map[key]);
    return values;
  };
  d3.entries = function(map) {
    var entries = [];
    for (var key in map) entries.push({
      key: key,
      value: map[key]
    });
    return entries;
  };
  d3.merge = function(arrays) {
    var n = arrays.length, m, i = -1, j = 0, merged, array;
    while (++i < n) j += arrays[i].length;
    merged = new Array(j);
    while (--n >= 0) {
      array = arrays[n];
      m = array.length;
      while (--m >= 0) {
        merged[--j] = array[m];
      }
    }
    return merged;
  };
  var abs = Math.abs;
  d3.range = function(start, stop, step) {
    if (arguments.length < 3) {
      step = 1;
      if (arguments.length < 2) {
        stop = start;
        start = 0;
      }
    }
    if ((stop - start) / step === Infinity) throw new Error("infinite range");
    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
    start *= k, stop *= k, step *= k;
    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
    return range;
  };
  function d3_range_integerScale(x) {
    var k = 1;
    while (x * k % 1) k *= 10;
    return k;
  }
  function d3_class(ctor, properties) {
    try {
      for (var key in properties) {
        Object.defineProperty(ctor.prototype, key, {
          value: properties[key],
          enumerable: false
        });
      }
    } catch (e) {
      ctor.prototype = properties;
    }
  }
  d3.map = function(object) {
    var map = new d3_Map();
    if (object instanceof d3_Map) object.forEach(function(key, value) {
      map.set(key, value);
    }); else for (var key in object) map.set(key, object[key]);
    return map;
  };
  function d3_Map() {}
  d3_class(d3_Map, {
    has: d3_map_has,
    get: function(key) {
      return this[d3_map_prefix + key];
    },
    set: function(key, value) {
      return this[d3_map_prefix + key] = value;
    },
    remove: d3_map_remove,
    keys: d3_map_keys,
    values: function() {
      var values = [];
      this.forEach(function(key, value) {
        values.push(value);
      });
      return values;
    },
    entries: function() {
      var entries = [];
      this.forEach(function(key, value) {
        entries.push({
          key: key,
          value: value
        });
      });
      return entries;
    },
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) f.call(this, key.substring(1), this[key]);
    }
  });
  var d3_map_prefix = "\x00", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);
  function d3_map_has(key) {
    return d3_map_prefix + key in this;
  }
  function d3_map_remove(key) {
    key = d3_map_prefix + key;
    return key in this && delete this[key];
  }
  function d3_map_keys() {
    var keys = [];
    this.forEach(function(key) {
      keys.push(key);
    });
    return keys;
  }
  function d3_map_size() {
    var size = 0;
    for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) ++size;
    return size;
  }
  function d3_map_empty() {
    for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) return false;
    return true;
  }
  d3.nest = function() {
    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
    function map(mapType, array, depth) {
      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
      while (++i < n) {
        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
          values.push(object);
        } else {
          valuesByKey.set(keyValue, [ object ]);
        }
      }
      if (mapType) {
        object = mapType();
        setter = function(keyValue, values) {
          object.set(keyValue, map(mapType, values, depth));
        };
      } else {
        object = {};
        setter = function(keyValue, values) {
          object[keyValue] = map(mapType, values, depth);
        };
      }
      valuesByKey.forEach(setter);
      return object;
    }
    function entries(map, depth) {
      if (depth >= keys.length) return map;
      var array = [], sortKey = sortKeys[depth++];
      map.forEach(function(key, keyMap) {
        array.push({
          key: key,
          values: entries(keyMap, depth)
        });
      });
      return sortKey ? array.sort(function(a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }
    nest.map = function(array, mapType) {
      return map(mapType, array, 0);
    };
    nest.entries = function(array) {
      return entries(map(d3.map, array, 0), 0);
    };
    nest.key = function(d) {
      keys.push(d);
      return nest;
    };
    nest.sortKeys = function(order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    };
    nest.sortValues = function(order) {
      sortValues = order;
      return nest;
    };
    nest.rollup = function(f) {
      rollup = f;
      return nest;
    };
    return nest;
  };
  d3.set = function(array) {
    var set = new d3_Set();
    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
    return set;
  };
  function d3_Set() {}
  d3_class(d3_Set, {
    has: d3_map_has,
    add: function(value) {
      this[d3_map_prefix + value] = true;
      return value;
    },
    remove: function(value) {
      value = d3_map_prefix + value;
      return value in this && delete this[value];
    },
    values: d3_map_keys,
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var value in this) if (value.charCodeAt(0) === d3_map_prefixCode) f.call(this, value.substring(1));
    }
  });
  d3.behavior = {};
  d3.rebind = function(target, source) {
    var i = 1, n = arguments.length, method;
    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
    return target;
  };
  function d3_rebind(target, source, method) {
    return function() {
      var value = method.apply(source, arguments);
      return value === source ? target : value;
    };
  }
  function d3_vendorSymbol(object, name) {
    if (name in object) return name;
    name = name.charAt(0).toUpperCase() + name.substring(1);
    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
      var prefixName = d3_vendorPrefixes[i] + name;
      if (prefixName in object) return prefixName;
    }
  }
  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
  function d3_noop() {}
  d3.dispatch = function() {
    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    return dispatch;
  };
  function d3_dispatch() {}
  d3_dispatch.prototype.on = function(type, listener) {
    var i = type.indexOf("."), name = "";
    if (i >= 0) {
      name = type.substring(i + 1);
      type = type.substring(0, i);
    }
    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
    if (arguments.length === 2) {
      if (listener == null) for (type in this) {
        if (this.hasOwnProperty(type)) this[type].on(name, null);
      }
      return this;
    }
  };
  function d3_dispatch_event(dispatch) {
    var listeners = [], listenerByName = new d3_Map();
    function event() {
      var z = listeners, i = -1, n = z.length, l;
      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
      return dispatch;
    }
    event.on = function(name, listener) {
      var l = listenerByName.get(name), i;
      if (arguments.length < 2) return l && l.on;
      if (l) {
        l.on = null;
        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
        listenerByName.remove(name);
      }
      if (listener) listeners.push(listenerByName.set(name, {
        on: listener
      }));
      return dispatch;
    };
    return event;
  }
  d3.event = null;
  function d3_eventPreventDefault() {
    d3.event.preventDefault();
  }
  function d3_eventSource() {
    var e = d3.event, s;
    while (s = e.sourceEvent) e = s;
    return e;
  }
  function d3_eventDispatch(target) {
    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    dispatch.of = function(thiz, argumentz) {
      return function(e1) {
        try {
          var e0 = e1.sourceEvent = d3.event;
          e1.target = target;
          d3.event = e1;
          dispatch[e1.type].apply(thiz, argumentz);
        } finally {
          d3.event = e0;
        }
      };
    };
    return dispatch;
  }
  d3.requote = function(s) {
    return s.replace(d3_requote_re, "\\$&");
  };
  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
  var d3_subclass = {}.__proto__ ? function(object, prototype) {
    object.__proto__ = prototype;
  } : function(object, prototype) {
    for (var property in prototype) object[property] = prototype[property];
  };
  function d3_selection(groups) {
    d3_subclass(groups, d3_selectionPrototype);
    return groups;
  }
  var d3_select = function(s, n) {
    return n.querySelector(s);
  }, d3_selectAll = function(s, n) {
    return n.querySelectorAll(s);
  }, d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, "matchesSelector")], d3_selectMatches = function(n, s) {
    return d3_selectMatcher.call(n, s);
  };
  if (typeof Sizzle === "function") {
    d3_select = function(s, n) {
      return Sizzle(s, n)[0] || null;
    };
    d3_selectAll = Sizzle;
    d3_selectMatches = Sizzle.matchesSelector;
  }
  d3.selection = function() {
    return d3_selectionRoot;
  };
  var d3_selectionPrototype = d3.selection.prototype = [];
  d3_selectionPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, group, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selector(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_select(selector, this);
    };
  }
  d3_selectionPrototype.selectAll = function(selector) {
    var subgroups = [], subgroup, node;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
          subgroup.parentNode = node;
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selectorAll(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_selectAll(selector, this);
    };
  }
  var d3_nsPrefix = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  d3.ns = {
    prefix: d3_nsPrefix,
    qualify: function(name) {
      var i = name.indexOf(":"), prefix = name;
      if (i >= 0) {
        prefix = name.substring(0, i);
        name = name.substring(i + 1);
      }
      return d3_nsPrefix.hasOwnProperty(prefix) ? {
        space: d3_nsPrefix[prefix],
        local: name
      } : name;
    }
  };
  d3_selectionPrototype.attr = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node();
        name = d3.ns.qualify(name);
        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
      }
      for (value in name) this.each(d3_selection_attr(value, name[value]));
      return this;
    }
    return this.each(d3_selection_attr(name, value));
  };
  function d3_selection_attr(name, value) {
    name = d3.ns.qualify(name);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrConstant() {
      this.setAttribute(name, value);
    }
    function attrConstantNS() {
      this.setAttributeNS(name.space, name.local, value);
    }
    function attrFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
    }
    function attrFunctionNS() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
    }
    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
  }
  function d3_collapse(s) {
    return s.trim().replace(/\s+/g, " ");
  }
  d3_selectionPrototype.classed = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
        if (value = node.classList) {
          while (++i < n) if (!value.contains(name[i])) return false;
        } else {
          value = node.getAttribute("class");
          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
        }
        return true;
      }
      for (value in name) this.each(d3_selection_classed(value, name[value]));
      return this;
    }
    return this.each(d3_selection_classed(name, value));
  };
  function d3_selection_classedRe(name) {
    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
  }
  function d3_selection_classes(name) {
    return (name + "").trim().split(/^|\s+/);
  }
  function d3_selection_classed(name, value) {
    name = d3_selection_classes(name).map(d3_selection_classedName);
    var n = name.length;
    function classedConstant() {
      var i = -1;
      while (++i < n) name[i](this, value);
    }
    function classedFunction() {
      var i = -1, x = value.apply(this, arguments);
      while (++i < n) name[i](this, x);
    }
    return typeof value === "function" ? classedFunction : classedConstant;
  }
  function d3_selection_classedName(name) {
    var re = d3_selection_classedRe(name);
    return function(node, value) {
      if (c = node.classList) return value ? c.add(name) : c.remove(name);
      var c = node.getAttribute("class") || "";
      if (value) {
        re.lastIndex = 0;
        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
      } else {
        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
      }
    };
  }
  d3_selectionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
        return this;
      }
      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);
      priority = "";
    }
    return this.each(d3_selection_style(name, value, priority));
  };
  function d3_selection_style(name, value, priority) {
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleConstant() {
      this.style.setProperty(name, value, priority);
    }
    function styleFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
    }
    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
  }
  d3_selectionPrototype.property = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") return this.node()[name];
      for (value in name) this.each(d3_selection_property(value, name[value]));
      return this;
    }
    return this.each(d3_selection_property(name, value));
  };
  function d3_selection_property(name, value) {
    function propertyNull() {
      delete this[name];
    }
    function propertyConstant() {
      this[name] = value;
    }
    function propertyFunction() {
      var x = value.apply(this, arguments);
      if (x == null) delete this[name]; else this[name] = x;
    }
    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
  }
  d3_selectionPrototype.text = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    } : value == null ? function() {
      this.textContent = "";
    } : function() {
      this.textContent = value;
    }) : this.node().textContent;
  };
  d3_selectionPrototype.html = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    } : value == null ? function() {
      this.innerHTML = "";
    } : function() {
      this.innerHTML = value;
    }) : this.node().innerHTML;
  };
  d3_selectionPrototype.append = function(name) {
    name = d3_selection_creator(name);
    return this.select(function() {
      return this.appendChild(name.apply(this, arguments));
    });
  };
  function d3_selection_creator(name) {
    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? function() {
      return this.ownerDocument.createElementNS(name.space, name.local);
    } : function() {
      return this.ownerDocument.createElementNS(this.namespaceURI, name);
    };
  }
  d3_selectionPrototype.insert = function(name, before) {
    name = d3_selection_creator(name);
    before = d3_selection_selector(before);
    return this.select(function() {
      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
    });
  };
  d3_selectionPrototype.remove = function() {
    return this.each(function() {
      var parent = this.parentNode;
      if (parent) parent.removeChild(this);
    });
  };
  d3_selectionPrototype.data = function(value, key) {
    var i = -1, n = this.length, group, node;
    if (!arguments.length) {
      value = new Array(n = (group = this[0]).length);
      while (++i < n) {
        if (node = group[i]) {
          value[i] = node.__data__;
        }
      }
      return value;
    }
    function bind(group, groupData) {
      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
      if (key) {
        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;
        for (i = -1; ++i < n; ) {
          keyValue = key.call(node = group[i], node.__data__, i);
          if (nodeByKeyValue.has(keyValue)) {
            exitNodes[i] = node;
          } else {
            nodeByKeyValue.set(keyValue, node);
          }
          keyValues.push(keyValue);
        }
        for (i = -1; ++i < m; ) {
          keyValue = key.call(groupData, nodeData = groupData[i], i);
          if (node = nodeByKeyValue.get(keyValue)) {
            updateNodes[i] = node;
            node.__data__ = nodeData;
          } else if (!dataByKeyValue.has(keyValue)) {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
          dataByKeyValue.set(keyValue, nodeData);
          nodeByKeyValue.remove(keyValue);
        }
        for (i = -1; ++i < n; ) {
          if (nodeByKeyValue.has(keyValues[i])) {
            exitNodes[i] = group[i];
          }
        }
      } else {
        for (i = -1; ++i < n0; ) {
          node = group[i];
          nodeData = groupData[i];
          if (node) {
            node.__data__ = nodeData;
            updateNodes[i] = node;
          } else {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
        }
        for (;i < m; ++i) {
          enterNodes[i] = d3_selection_dataNode(groupData[i]);
        }
        for (;i < n; ++i) {
          exitNodes[i] = group[i];
        }
      }
      enterNodes.update = updateNodes;
      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
      enter.push(enterNodes);
      update.push(updateNodes);
      exit.push(exitNodes);
    }
    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
    if (typeof value === "function") {
      while (++i < n) {
        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
      }
    } else {
      while (++i < n) {
        bind(group = this[i], value);
      }
    }
    update.enter = function() {
      return enter;
    };
    update.exit = function() {
      return exit;
    };
    return update;
  };
  function d3_selection_dataNode(data) {
    return {
      __data__: data
    };
  }
  d3_selectionPrototype.datum = function(value) {
    return arguments.length ? this.property("__data__", value) : this.property("__data__");
  };
  d3_selectionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_filter(selector) {
    return function() {
      return d3_selectMatches(this, selector);
    };
  }
  d3_selectionPrototype.order = function() {
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
        if (node = group[i]) {
          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }
    return this;
  };
  d3_selectionPrototype.sort = function(comparator) {
    comparator = d3_selection_sortComparator.apply(this, arguments);
    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
    return this.order();
  };
  function d3_selection_sortComparator(comparator) {
    if (!arguments.length) comparator = d3_ascending;
    return function(a, b) {
      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
    };
  }
  d3_selectionPrototype.each = function(callback) {
    return d3_selection_each(this, function(node, i, j) {
      callback.call(node, node.__data__, i, j);
    });
  };
  function d3_selection_each(groups, callback) {
    for (var j = 0, m = groups.length; j < m; j++) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
        if (node = group[i]) callback(node, i, j);
      }
    }
    return groups;
  }
  d3_selectionPrototype.call = function(callback) {
    var args = d3_array(arguments);
    callback.apply(args[0] = this, args);
    return this;
  };
  d3_selectionPrototype.empty = function() {
    return !this.node();
  };
  d3_selectionPrototype.node = function() {
    for (var j = 0, m = this.length; j < m; j++) {
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        var node = group[i];
        if (node) return node;
      }
    }
    return null;
  };
  d3_selectionPrototype.size = function() {
    var n = 0;
    this.each(function() {
      ++n;
    });
    return n;
  };
  function d3_selection_enter(selection) {
    d3_subclass(selection, d3_selection_enterPrototype);
    return selection;
  }
  var d3_selection_enterPrototype = [];
  d3.selection.enter = d3_selection_enter;
  d3.selection.enter.prototype = d3_selection_enterPrototype;
  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
  d3_selection_enterPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, upgroup, group, node;
    for (var j = -1, m = this.length; ++j < m; ) {
      upgroup = (group = this[j]).update;
      subgroups.push(subgroup = []);
      subgroup.parentNode = group.parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
          subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  d3_selection_enterPrototype.insert = function(name, before) {
    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
    return d3_selectionPrototype.insert.call(this, name, before);
  };
  function d3_selection_enterInsertBefore(enter) {
    var i0, j0;
    return function(d, i, j) {
      var group = enter[j].update, n = group.length, node;
      if (j != j0) j0 = j, i0 = 0;
      if (i >= i0) i0 = i + 1;
      while (!(node = group[i0]) && ++i0 < n) ;
      return node;
    };
  }
  d3_selectionPrototype.transition = function() {
    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {
      time: Date.now(),
      ease: d3_ease_cubicInOut,
      delay: 0,
      duration: 250
    };
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) d3_transitionNode(node, i, id, transition);
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_selectionPrototype.interrupt = function() {
    return this.each(d3_selection_interrupt);
  };
  function d3_selection_interrupt() {
    var lock = this.__transition__;
    if (lock) ++lock.active;
  }
  d3.select = function(node) {
    var group = [ typeof node === "string" ? d3_select(node, d3_document) : node ];
    group.parentNode = d3_documentElement;
    return d3_selection([ group ]);
  };
  d3.selectAll = function(nodes) {
    var group = d3_array(typeof nodes === "string" ? d3_selectAll(nodes, d3_document) : nodes);
    group.parentNode = d3_documentElement;
    return d3_selection([ group ]);
  };
  var d3_selectionRoot = d3.select(d3_documentElement);
  d3_selectionPrototype.on = function(type, listener, capture) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof type !== "string") {
        if (n < 2) listener = false;
        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
        return this;
      }
      if (n < 2) return (n = this.node()["__on" + type]) && n._;
      capture = false;
    }
    return this.each(d3_selection_on(type, listener, capture));
  };
  function d3_selection_on(type, listener, capture) {
    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
    if (i > 0) type = type.substring(0, i);
    var filter = d3_selection_onFilters.get(type);
    if (filter) type = filter, wrap = d3_selection_onFilter;
    function onRemove() {
      var l = this[name];
      if (l) {
        this.removeEventListener(type, l, l.$);
        delete this[name];
      }
    }
    function onAdd() {
      var l = wrap(listener, d3_array(arguments));
      onRemove.call(this);
      this.addEventListener(type, this[name] = l, l.$ = capture);
      l._ = listener;
    }
    function removeAll() {
      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
      for (var name in this) {
        if (match = name.match(re)) {
          var l = this[name];
          this.removeEventListener(match[1], l, l.$);
          delete this[name];
        }
      }
    }
    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
  }
  var d3_selection_onFilters = d3.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  d3_selection_onFilters.forEach(function(k) {
    if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
  });
  function d3_selection_onListener(listener, argumentz) {
    return function(e) {
      var o = d3.event;
      d3.event = e;
      argumentz[0] = this.__data__;
      try {
        listener.apply(this, argumentz);
      } finally {
        d3.event = o;
      }
    };
  }
  function d3_selection_onFilter(listener, argumentz) {
    var l = d3_selection_onListener(listener, argumentz);
    return function(e) {
      var target = this, related = e.relatedTarget;
      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
        l.call(target, e);
      }
    };
  }
  var d3_event_dragSelect = "onselectstart" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, "userSelect"), d3_event_dragId = 0;
  function d3_event_dragSuppress() {
    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
    if (d3_event_dragSelect) {
      var style = d3_documentElement.style, select = style[d3_event_dragSelect];
      style[d3_event_dragSelect] = "none";
    }
    return function(suppressClick) {
      w.on(name, null);
      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
      if (suppressClick) {
        function off() {
          w.on(click, null);
        }
        w.on(click, function() {
          d3_eventPreventDefault();
          off();
        }, true);
        setTimeout(off, 0);
      }
    };
  }
  d3.mouse = function(container) {
    return d3_mousePoint(container, d3_eventSource());
  };
  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;
  function d3_mousePoint(container, e) {
    if (e.changedTouches) e = e.changedTouches[0];
    var svg = container.ownerSVGElement || container;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {
        svg = d3.select("body").append("svg").style({
          position: "absolute",
          top: 0,
          left: 0,
          margin: 0,
          padding: 0,
          border: "none"
        }, "important");
        var ctm = svg[0][0].getScreenCTM();
        d3_mouse_bug44083 = !(ctm.f || ctm.e);
        svg.remove();
      }
      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX,
      point.y = e.clientY;
      point = point.matrixTransform(container.getScreenCTM().inverse());
      return [ point.x, point.y ];
    }
    var rect = container.getBoundingClientRect();
    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
  }
  d3.touches = function(container, touches) {
    if (arguments.length < 2) touches = d3_eventSource().touches;
    return touches ? d3_array(touches).map(function(touch) {
      var point = d3_mousePoint(container, touch);
      point.identifier = touch.identifier;
      return point;
    }) : [];
  };
  d3.behavior.drag = function() {
    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, "touchmove", "touchend");
    function drag() {
      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
    }
    function dragstart(id, position, subject, move, end) {
      return function() {
        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);
        if (origin) {
          dragOffset = origin.apply(that, arguments);
          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
        } else {
          dragOffset = [ 0, 0 ];
        }
        dispatch({
          type: "dragstart"
        });
        function moved() {
          var position1 = position(parent, dragId), dx, dy;
          if (!position1) return;
          dx = position1[0] - position0[0];
          dy = position1[1] - position0[1];
          dragged |= dx | dy;
          position0 = position1;
          dispatch({
            type: "drag",
            x: position1[0] + dragOffset[0],
            y: position1[1] + dragOffset[1],
            dx: dx,
            dy: dy
          });
        }
        function ended() {
          if (!position(parent, dragId)) return;
          dragSubject.on(move + dragName, null).on(end + dragName, null);
          dragRestore(dragged && d3.event.target === target);
          dispatch({
            type: "dragend"
          });
        }
      };
    }
    drag.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return drag;
    };
    return d3.rebind(drag, event, "on");
  };
  function d3_behavior_dragTouchId() {
    return d3.event.changedTouches[0].identifier;
  }
  function d3_behavior_dragTouchSubject() {
    return d3.event.target;
  }
  function d3_behavior_dragMouseSubject() {
    return d3_window;
  }
  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;
  function d3_sgn(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
  }
  function d3_cross2d(a, b, c) {
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
  }
  function d3_acos(x) {
    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
  }
  function d3_asin(x) {
    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
  }
  function d3_sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
  }
  function d3_cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
  }
  function d3_tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
  }
  function d3_haversin(x) {
    return (x = Math.sin(x / 2)) * x;
  }
  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
  d3.interpolateZoom = function(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];
    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;
    function interpolate(t) {
      var s = t * S;
      if (dr) {
        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
      }
      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];
    }
    interpolate.duration = S * 1e3;
    return interpolate;
  };
  d3.behavior.zoom = function() {
    var view = {
      x: 0,
      y: 0,
      k: 1
    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
    function zoom(g) {
      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
    }
    zoom.event = function(g) {
      g.each(function() {
        var dispatch = event.of(this, arguments), view1 = view;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.zoom", function() {
            view = this.__chart__ || {
              x: 0,
              y: 0,
              k: 1
            };
            zoomstarted(dispatch);
          }).tween("zoom:zoom", function() {
            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
            return function(t) {
              var l = i(t), k = dx / l[2];
              this.__chart__ = view = {
                x: cx - l[0] * k,
                y: cy - l[1] * k,
                k: k
              };
              zoomed(dispatch);
            };
          }).each("end.zoom", function() {
            zoomended(dispatch);
          });
        } else {
          this.__chart__ = view;
          zoomstarted(dispatch);
          zoomed(dispatch);
          zoomended(dispatch);
        }
      });
    };
    zoom.translate = function(_) {
      if (!arguments.length) return [ view.x, view.y ];
      view = {
        x: +_[0],
        y: +_[1],
        k: view.k
      };
      rescale();
      return zoom;
    };
    zoom.scale = function(_) {
      if (!arguments.length) return view.k;
      view = {
        x: view.x,
        y: view.y,
        k: +_
      };
      rescale();
      return zoom;
    };
    zoom.scaleExtent = function(_) {
      if (!arguments.length) return scaleExtent;
      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.center = function(_) {
      if (!arguments.length) return center;
      center = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.size = function(_) {
      if (!arguments.length) return size;
      size = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.x = function(z) {
      if (!arguments.length) return x1;
      x1 = z;
      x0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    zoom.y = function(z) {
      if (!arguments.length) return y1;
      y1 = z;
      y0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    function location(p) {
      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
    }
    function point(l) {
      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
    }
    function scaleTo(s) {
      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
    }
    function translateTo(p, l) {
      l = point(l);
      view.x += p[0] - l[0];
      view.y += p[1] - l[1];
    }
    function rescale() {
      if (x1) x1.domain(x0.range().map(function(x) {
        return (x - view.x) / view.k;
      }).map(x0.invert));
      if (y1) y1.domain(y0.range().map(function(y) {
        return (y - view.y) / view.k;
      }).map(y0.invert));
    }
    function zoomstarted(dispatch) {
      dispatch({
        type: "zoomstart"
      });
    }
    function zoomed(dispatch) {
      rescale();
      dispatch({
        type: "zoom",
        scale: view.k,
        translate: [ view.x, view.y ]
      });
    }
    function zoomended(dispatch) {
      dispatch({
        type: "zoomend"
      });
    }
    function mousedowned() {
      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();
      d3_selection_interrupt.call(that);
      zoomstarted(dispatch);
      function moved() {
        dragged = 1;
        translateTo(d3.mouse(that), location0);
        zoomed(dispatch);
      }
      function ended() {
        subject.on(mousemove, null).on(mouseup, null);
        dragRestore(dragged && d3.event.target === target);
        zoomended(dispatch);
      }
    }
    function touchstarted() {
      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();
      d3_selection_interrupt.call(that);
      started();
      zoomstarted(dispatch);
      function relocate() {
        var touches = d3.touches(that);
        scale0 = view.k;
        touches.forEach(function(t) {
          if (t.identifier in locations0) locations0[t.identifier] = location(t);
        });
        return touches;
      }
      function started() {
        var target = d3.event.target;
        d3.select(target).on(touchmove, moved).on(touchend, ended);
        targets.push(target);
        var changed = d3.event.changedTouches;
        for (var i = 0, n = changed.length; i < n; ++i) {
          locations0[changed[i].identifier] = null;
        }
        var touches = relocate(), now = Date.now();
        if (touches.length === 1) {
          if (now - touchtime < 500) {
            var p = touches[0], l = locations0[p.identifier];
            scaleTo(view.k * 2);
            translateTo(p, l);
            d3_eventPreventDefault();
            zoomed(dispatch);
          }
          touchtime = now;
        } else if (touches.length > 1) {
          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
          distance0 = dx * dx + dy * dy;
        }
      }
      function moved() {
        var touches = d3.touches(that), p0, l0, p1, l1;
        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
          p1 = touches[i];
          if (l1 = locations0[p1.identifier]) {
            if (l0) break;
            p0 = p1, l0 = l1;
          }
        }
        if (l1) {
          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
          scaleTo(scale1 * scale0);
        }
        touchtime = null;
        translateTo(p0, l0);
        zoomed(dispatch);
      }
      function ended() {
        if (d3.event.touches.length) {
          var changed = d3.event.changedTouches;
          for (var i = 0, n = changed.length; i < n; ++i) {
            delete locations0[changed[i].identifier];
          }
          for (var identifier in locations0) {
            return void relocate();
          }
        }
        d3.selectAll(targets).on(zoomName, null);
        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
        dragRestore();
        zoomended(dispatch);
      }
    }
    function mousewheeled() {
      var dispatch = event.of(this, arguments);
      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)),
      d3_selection_interrupt.call(this), zoomstarted(dispatch);
      mousewheelTimer = setTimeout(function() {
        mousewheelTimer = null;
        zoomended(dispatch);
      }, 50);
      d3_eventPreventDefault();
      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
      translateTo(center0, translate0);
      zoomed(dispatch);
    }
    function dblclicked() {
      var dispatch = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;
      zoomstarted(dispatch);
      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));
      translateTo(p, l);
      zoomed(dispatch);
      zoomended(dispatch);
    }
    return d3.rebind(zoom, event, "on");
  };
  var d3_behavior_zoomInfinity = [ 0, Infinity ];
  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
  }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
    return d3.event.wheelDelta;
  }, "mousewheel") : (d3_behavior_zoomDelta = function() {
    return -d3.event.detail;
  }, "MozMousePixelScroll");
  d3.color = d3_color;
  function d3_color() {}
  d3_color.prototype.toString = function() {
    return this.rgb() + "";
  };
  d3.hsl = d3_hsl;
  function d3_hsl(h, s, l) {
    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
  }
  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
  d3_hslPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, this.l / k);
  };
  d3_hslPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, k * this.l);
  };
  d3_hslPrototype.rgb = function() {
    return d3_hsl_rgb(this.h, this.s, this.l);
  };
  function d3_hsl_rgb(h, s, l) {
    var m1, m2;
    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
    l = l < 0 ? 0 : l > 1 ? 1 : l;
    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
    m1 = 2 * l - m2;
    function v(h) {
      if (h > 360) h -= 360; else if (h < 0) h += 360;
      if (h < 60) return m1 + (m2 - m1) * h / 60;
      if (h < 180) return m2;
      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
      return m1;
    }
    function vv(h) {
      return Math.round(v(h) * 255);
    }
    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
  }
  d3.hcl = d3_hcl;
  function d3_hcl(h, c, l) {
    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
  }
  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
  d3_hclPrototype.brighter = function(k) {
    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.darker = function(k) {
    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.rgb = function() {
    return d3_hcl_lab(this.h, this.c, this.l).rgb();
  };
  function d3_hcl_lab(h, c, l) {
    if (isNaN(h)) h = 0;
    if (isNaN(c)) c = 0;
    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
  }
  d3.lab = d3_lab;
  function d3_lab(l, a, b) {
    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
  }
  var d3_lab_K = 18;
  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
  var d3_labPrototype = d3_lab.prototype = new d3_color();
  d3_labPrototype.brighter = function(k) {
    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.darker = function(k) {
    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.rgb = function() {
    return d3_lab_rgb(this.l, this.a, this.b);
  };
  function d3_lab_rgb(l, a, b) {
    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
    x = d3_lab_xyz(x) * d3_lab_X;
    y = d3_lab_xyz(y) * d3_lab_Y;
    z = d3_lab_xyz(z) * d3_lab_Z;
    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
  }
  function d3_lab_hcl(l, a, b) {
    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
  }
  function d3_lab_xyz(x) {
    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
  }
  function d3_xyz_lab(x) {
    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
  }
  function d3_xyz_rgb(r) {
    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
  }
  d3.rgb = d3_rgb;
  function d3_rgb(r, g, b) {
    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
  }
  function d3_rgbNumber(value) {
    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
  }
  function d3_rgbString(value) {
    return d3_rgbNumber(value) + "";
  }
  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
  d3_rgbPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    var r = this.r, g = this.g, b = this.b, i = 30;
    if (!r && !g && !b) return new d3_rgb(i, i, i);
    if (r && r < i) r = i;
    if (g && g < i) g = i;
    if (b && b < i) b = i;
    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
  };
  d3_rgbPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_rgb(k * this.r, k * this.g, k * this.b);
  };
  d3_rgbPrototype.hsl = function() {
    return d3_rgb_hsl(this.r, this.g, this.b);
  };
  d3_rgbPrototype.toString = function() {
    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
  };
  function d3_rgb_hex(v) {
    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
  }
  function d3_rgb_parse(format, rgb, hsl) {
    var r = 0, g = 0, b = 0, m1, m2, color;
    m1 = /([a-z]+)\((.*)\)/i.exec(format);
    if (m1) {
      m2 = m1[2].split(",");
      switch (m1[1]) {
       case "hsl":
        {
          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
        }

       case "rgb":
        {
          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
        }
      }
    }
    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);
    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.substring(1), 16))) {
      if (format.length === 4) {
        r = (color & 3840) >> 4;
        r = r >> 4 | r;
        g = color & 240;
        g = g >> 4 | g;
        b = color & 15;
        b = b << 4 | b;
      } else if (format.length === 7) {
        r = (color & 16711680) >> 16;
        g = (color & 65280) >> 8;
        b = color & 255;
      }
    }
    return rgb(r, g, b);
  }
  function d3_rgb_hsl(r, g, b) {
    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
    if (d) {
      s = l < .5 ? d / (max + min) : d / (2 - max - min);
      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
      h *= 60;
    } else {
      h = NaN;
      s = l > 0 && l < 1 ? 0 : h;
    }
    return new d3_hsl(h, s, l);
  }
  function d3_rgb_lab(r, g, b) {
    r = d3_rgb_xyz(r);
    g = d3_rgb_xyz(g);
    b = d3_rgb_xyz(b);
    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
  }
  function d3_rgb_xyz(r) {
    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
  }
  function d3_rgb_parseNumber(c) {
    var f = parseFloat(c);
    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
  }
  var d3_rgb_names = d3.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  d3_rgb_names.forEach(function(key, value) {
    d3_rgb_names.set(key, d3_rgbNumber(value));
  });
  function d3_functor(v) {
    return typeof v === "function" ? v : function() {
      return v;
    };
  }
  d3.functor = d3_functor;
  function d3_identity(d) {
    return d;
  }
  d3.xhr = d3_xhrType(d3_identity);
  function d3_xhrType(response) {
    return function(url, mimeType, callback) {
      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType,
      mimeType = null;
      return d3_xhr(url, mimeType, response, callback);
    };
  }
  function d3_xhr(url, mimeType, response, callback) {
    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
    if (d3_window.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
      request.readyState > 3 && respond();
    };
    function respond() {
      var status = request.status, result;
      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {
        try {
          result = response.call(xhr, request);
        } catch (e) {
          dispatch.error.call(xhr, e);
          return;
        }
        dispatch.load.call(xhr, result);
      } else {
        dispatch.error.call(xhr, request);
      }
    }
    request.onprogress = function(event) {
      var o = d3.event;
      d3.event = event;
      try {
        dispatch.progress.call(xhr, request);
      } finally {
        d3.event = o;
      }
    };
    xhr.header = function(name, value) {
      name = (name + "").toLowerCase();
      if (arguments.length < 2) return headers[name];
      if (value == null) delete headers[name]; else headers[name] = value + "";
      return xhr;
    };
    xhr.mimeType = function(value) {
      if (!arguments.length) return mimeType;
      mimeType = value == null ? null : value + "";
      return xhr;
    };
    xhr.responseType = function(value) {
      if (!arguments.length) return responseType;
      responseType = value;
      return xhr;
    };
    xhr.response = function(value) {
      response = value;
      return xhr;
    };
    [ "get", "post" ].forEach(function(method) {
      xhr[method] = function() {
        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
      };
    });
    xhr.send = function(method, data, callback) {
      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
      request.open(method, url, true);
      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
      if (responseType != null) request.responseType = responseType;
      if (callback != null) xhr.on("error", callback).on("load", function(request) {
        callback(null, request);
      });
      dispatch.beforesend.call(xhr, request);
      request.send(data == null ? null : data);
      return xhr;
    };
    xhr.abort = function() {
      request.abort();
      return xhr;
    };
    d3.rebind(xhr, dispatch, "on");
    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
  }
  function d3_xhr_fixCallback(callback) {
    return callback.length === 1 ? function(error, request) {
      callback(error == null ? request : null);
    } : callback;
  }
  d3.dsv = function(delimiter, mimeType) {
    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
    function dsv(url, row, callback) {
      if (arguments.length < 3) callback = row, row = null;
      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
      xhr.row = function(_) {
        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
      };
      return xhr;
    }
    function response(request) {
      return dsv.parse(request.responseText);
    }
    function typedResponse(f) {
      return function(request) {
        return dsv.parse(request.responseText, f);
      };
    }
    dsv.parse = function(text, f) {
      var o;
      return dsv.parseRows(text, function(row, i) {
        if (o) return o(row, i - 1);
        var a = new Function("d", "return {" + row.map(function(name, i) {
          return JSON.stringify(name) + ": d[" + i + "]";
        }).join(",") + "}");
        o = f ? function(row, i) {
          return f(a(row), i);
        } : a;
      });
    };
    dsv.parseRows = function(text, f) {
      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
      function token() {
        if (I >= N) return EOF;
        if (eol) return eol = false, EOL;
        var j = I;
        if (text.charCodeAt(j) === 34) {
          var i = j;
          while (i++ < N) {
            if (text.charCodeAt(i) === 34) {
              if (text.charCodeAt(i + 1) !== 34) break;
              ++i;
            }
          }
          I = i + 2;
          var c = text.charCodeAt(i + 1);
          if (c === 13) {
            eol = true;
            if (text.charCodeAt(i + 2) === 10) ++I;
          } else if (c === 10) {
            eol = true;
          }
          return text.substring(j + 1, i).replace(/""/g, '"');
        }
        while (I < N) {
          var c = text.charCodeAt(I++), k = 1;
          if (c === 10) eol = true; else if (c === 13) {
            eol = true;
            if (text.charCodeAt(I) === 10) ++I, ++k;
          } else if (c !== delimiterCode) continue;
          return text.substring(j, I - k);
        }
        return text.substring(j);
      }
      while ((t = token()) !== EOF) {
        var a = [];
        while (t !== EOL && t !== EOF) {
          a.push(t);
          t = token();
        }
        if (f && !(a = f(a, n++))) continue;
        rows.push(a);
      }
      return rows;
    };
    dsv.format = function(rows) {
      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
      var fieldSet = new d3_Set(), fields = [];
      rows.forEach(function(row) {
        for (var field in row) {
          if (!fieldSet.has(field)) {
            fields.push(fieldSet.add(field));
          }
        }
      });
      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
        return fields.map(function(field) {
          return formatValue(row[field]);
        }).join(delimiter);
      })).join("\n");
    };
    dsv.formatRows = function(rows) {
      return rows.map(formatRow).join("\n");
    };
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(text) {
      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
    }
    return dsv;
  };
  d3.csv = d3.dsv(",", "text/csv");
  d3.tsv = d3.dsv(" ", "text/tab-separated-values");
  d3.touch = function(container, touches, identifier) {
    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
      if ((touch = touches[i]).identifier === identifier) {
        return d3_mousePoint(container, touch);
      }
    }
  };
  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, "requestAnimationFrame")] || function(callback) {
    setTimeout(callback, 17);
  };
  d3.timer = function(callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    var time = then + delay, timer = {
      c: callback,
      t: time,
      f: false,
      n: null
    };
    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
    d3_timer_queueTail = timer;
    if (!d3_timer_interval) {
      d3_timer_timeout = clearTimeout(d3_timer_timeout);
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  };
  function d3_timer_step() {
    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
    if (delay > 24) {
      if (isFinite(delay)) {
        clearTimeout(d3_timer_timeout);
        d3_timer_timeout = setTimeout(d3_timer_step, delay);
      }
      d3_timer_interval = 0;
    } else {
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  }
  d3.timer.flush = function() {
    d3_timer_mark();
    d3_timer_sweep();
  };
  function d3_timer_mark() {
    var now = Date.now();
    d3_timer_active = d3_timer_queueHead;
    while (d3_timer_active) {
      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);
      d3_timer_active = d3_timer_active.n;
    }
    return now;
  }
  function d3_timer_sweep() {
    var t0, t1 = d3_timer_queueHead, time = Infinity;
    while (t1) {
      if (t1.f) {
        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
      } else {
        if (t1.t < time) time = t1.t;
        t1 = (t0 = t1).n;
      }
    }
    d3_timer_queueTail = t0;
    return time;
  }
  function d3_format_precision(x, p) {
    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
  }
  d3.round = function(x, n) {
    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
  };
  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
  d3.formatPrefix = function(value, precision) {
    var i = 0;
    if (value) {
      if (value < 0) value *= -1;
      if (precision) value = d3.round(value, d3_format_precision(value, precision));
      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
    }
    return d3_formatPrefixes[8 + i / 3];
  };
  function d3_formatPrefix(d, i) {
    var k = Math.pow(10, abs(8 - i) * 3);
    return {
      scale: i > 8 ? function(d) {
        return d / k;
      } : function(d) {
        return d * k;
      },
      symbol: d
    };
  }
  function d3_locale_numberFormat(locale) {
    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping ? function(value) {
      var i = value.length, t = [], j = 0, g = locale_grouping[0];
      while (i > 0 && g > 0) {
        t.push(value.substring(i -= g, i + g));
        g = locale_grouping[j = (j + 1) % locale_grouping.length];
      }
      return t.reverse().join(locale_thousands);
    } : d3_identity;
    return function(specifier) {
      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false;
      if (precision) precision = +precision.substring(1);
      if (zfill || fill === "0" && align === "=") {
        zfill = fill = "0";
        align = "=";
        if (comma) width -= Math.floor((width - 1) / 4);
      }
      switch (type) {
       case "n":
        comma = true;
        type = "g";
        break;

       case "%":
        scale = 100;
        suffix = "%";
        type = "f";
        break;

       case "p":
        scale = 100;
        suffix = "%";
        type = "r";
        break;

       case "b":
       case "o":
       case "x":
       case "X":
        if (symbol === "#") prefix = "0" + type.toLowerCase();

       case "c":
       case "d":
        integer = true;
        precision = 0;
        break;

       case "s":
        scale = -1;
        type = "r";
        break;
      }
      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
      if (type == "r" && !precision) type = "g";
      if (precision != null) {
        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
      }
      type = d3_format_types.get(type) || d3_format_typeDefault;
      var zcomma = zfill && comma;
      return function(value) {
        var fullSuffix = suffix;
        if (integer && value % 1) return "";
        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign;
        if (scale < 0) {
          var unit = d3.formatPrefix(value, precision);
          value = unit.scale(value);
          fullSuffix = unit.symbol + suffix;
        } else {
          value *= scale;
        }
        value = type(value, precision);
        var i = value.lastIndexOf("."), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? "" : locale_decimal + value.substring(i + 1);
        if (!zfill && comma) before = formatGroup(before);
        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
        if (zcomma) before = formatGroup(padding + before);
        negative += prefix;
        value = before + after;
        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
      };
    };
  }
  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
  var d3_format_types = d3.map({
    b: function(x) {
      return x.toString(2);
    },
    c: function(x) {
      return String.fromCharCode(x);
    },
    o: function(x) {
      return x.toString(8);
    },
    x: function(x) {
      return x.toString(16);
    },
    X: function(x) {
      return x.toString(16).toUpperCase();
    },
    g: function(x, p) {
      return x.toPrecision(p);
    },
    e: function(x, p) {
      return x.toExponential(p);
    },
    f: function(x, p) {
      return x.toFixed(p);
    },
    r: function(x, p) {
      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
    }
  });
  function d3_format_typeDefault(x) {
    return x + "";
  }
  var d3_time = d3.time = {}, d3_date = Date;
  function d3_date_utc() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }
  d3_date_utc.prototype = {
    getDate: function() {
      return this._.getUTCDate();
    },
    getDay: function() {
      return this._.getUTCDay();
    },
    getFullYear: function() {
      return this._.getUTCFullYear();
    },
    getHours: function() {
      return this._.getUTCHours();
    },
    getMilliseconds: function() {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function() {
      return this._.getUTCMinutes();
    },
    getMonth: function() {
      return this._.getUTCMonth();
    },
    getSeconds: function() {
      return this._.getUTCSeconds();
    },
    getTime: function() {
      return this._.getTime();
    },
    getTimezoneOffset: function() {
      return 0;
    },
    valueOf: function() {
      return this._.valueOf();
    },
    setDate: function() {
      d3_time_prototype.setUTCDate.apply(this._, arguments);
    },
    setDay: function() {
      d3_time_prototype.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function() {
      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function() {
      d3_time_prototype.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function() {
      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function() {
      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function() {
      d3_time_prototype.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function() {
      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function() {
      d3_time_prototype.setTime.apply(this._, arguments);
    }
  };
  var d3_time_prototype = Date.prototype;
  function d3_time_interval(local, step, number) {
    function round(date) {
      var d0 = local(date), d1 = offset(d0, 1);
      return date - d0 < d1 - date ? d0 : d1;
    }
    function ceil(date) {
      step(date = local(new d3_date(date - 1)), 1);
      return date;
    }
    function offset(date, k) {
      step(date = new d3_date(+date), k);
      return date;
    }
    function range(t0, t1, dt) {
      var time = ceil(t0), times = [];
      if (dt > 1) {
        while (time < t1) {
          if (!(number(time) % dt)) times.push(new Date(+time));
          step(time, 1);
        }
      } else {
        while (time < t1) times.push(new Date(+time)), step(time, 1);
      }
      return times;
    }
    function range_utc(t0, t1, dt) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = t0;
        return range(utc, t1, dt);
      } finally {
        d3_date = Date;
      }
    }
    local.floor = local;
    local.round = round;
    local.ceil = ceil;
    local.offset = offset;
    local.range = range;
    var utc = local.utc = d3_time_interval_utc(local);
    utc.floor = utc;
    utc.round = d3_time_interval_utc(round);
    utc.ceil = d3_time_interval_utc(ceil);
    utc.offset = d3_time_interval_utc(offset);
    utc.range = range_utc;
    return local;
  }
  function d3_time_interval_utc(method) {
    return function(date, k) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = date;
        return method(utc, k)._;
      } finally {
        d3_date = Date;
      }
    };
  }
  d3_time.year = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setMonth(0, 1);
    return date;
  }, function(date, offset) {
    date.setFullYear(date.getFullYear() + offset);
  }, function(date) {
    return date.getFullYear();
  });
  d3_time.years = d3_time.year.range;
  d3_time.years.utc = d3_time.year.utc.range;
  d3_time.day = d3_time_interval(function(date) {
    var day = new d3_date(2e3, 0);
    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
    return day;
  }, function(date, offset) {
    date.setDate(date.getDate() + offset);
  }, function(date) {
    return date.getDate() - 1;
  });
  d3_time.days = d3_time.day.range;
  d3_time.days.utc = d3_time.day.utc.range;
  d3_time.dayOfYear = function(date) {
    var year = d3_time.year(date);
    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
  };
  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
    i = 7 - i;
    var interval = d3_time[day] = d3_time_interval(function(date) {
      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
      return date;
    }, function(date, offset) {
      date.setDate(date.getDate() + Math.floor(offset) * 7);
    }, function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
    });
    d3_time[day + "s"] = interval.range;
    d3_time[day + "s"].utc = interval.utc.range;
    d3_time[day + "OfYear"] = function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
    };
  });
  d3_time.week = d3_time.sunday;
  d3_time.weeks = d3_time.sunday.range;
  d3_time.weeks.utc = d3_time.sunday.utc.range;
  d3_time.weekOfYear = d3_time.sundayOfYear;
  function d3_locale_timeFormat(locale) {
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
    function d3_time_format(template) {
      var n = template.length;
      function format(date) {
        var string = [], i = -1, j = 0, c, p, f;
        while (++i < n) {
          if (template.charCodeAt(i) === 37) {
            string.push(template.substring(j, i));
            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
            string.push(c);
            j = i + 1;
          }
        }
        string.push(template.substring(j, i));
        return string.join("");
      }
      format.parse = function(string) {
        var d = {
          y: 1900,
          m: 0,
          d: 1,
          H: 0,
          M: 0,
          S: 0,
          L: 0,
          Z: null
        }, i = d3_time_parse(d, template, string, 0);
        if (i != string.length) return null;
        if ("p" in d) d.H = d.H % 12 + d.p * 12;
        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
          date.setFullYear(d.y, 0, 1);
          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
        } else date.setFullYear(d.y, d.m, d.d);
        date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);
        return localZ ? date._ : date;
      };
      format.toString = function() {
        return template;
      };
      return format;
    }
    function d3_time_parse(date, template, string, j) {
      var c, p, t, i = 0, n = template.length, m = string.length;
      while (i < n) {
        if (j >= m) return -1;
        c = template.charCodeAt(i++);
        if (c === 37) {
          t = template.charAt(i++);
          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
          if (!p || (j = p(date, string, j)) < 0) return -1;
        } else if (c != string.charCodeAt(j++)) {
          return -1;
        }
      }
      return j;
    }
    d3_time_format.utc = function(template) {
      var local = d3_time_format(template);
      function format(date) {
        try {
          d3_date = d3_date_utc;
          var utc = new d3_date();
          utc._ = date;
          return local(utc);
        } finally {
          d3_date = Date;
        }
      }
      format.parse = function(string) {
        try {
          d3_date = d3_date_utc;
          var date = local.parse(string);
          return date && date._;
        } finally {
          d3_date = Date;
        }
      };
      format.toString = local.toString;
      return format;
    };
    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
    locale_periods.forEach(function(p, i) {
      d3_time_periodLookup.set(p.toLowerCase(), i);
    });
    var d3_time_formats = {
      a: function(d) {
        return locale_shortDays[d.getDay()];
      },
      A: function(d) {
        return locale_days[d.getDay()];
      },
      b: function(d) {
        return locale_shortMonths[d.getMonth()];
      },
      B: function(d) {
        return locale_months[d.getMonth()];
      },
      c: d3_time_format(locale_dateTime),
      d: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      e: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      H: function(d, p) {
        return d3_time_formatPad(d.getHours(), p, 2);
      },
      I: function(d, p) {
        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
      },
      j: function(d, p) {
        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
      },
      L: function(d, p) {
        return d3_time_formatPad(d.getMilliseconds(), p, 3);
      },
      m: function(d, p) {
        return d3_time_formatPad(d.getMonth() + 1, p, 2);
      },
      M: function(d, p) {
        return d3_time_formatPad(d.getMinutes(), p, 2);
      },
      p: function(d) {
        return locale_periods[+(d.getHours() >= 12)];
      },
      S: function(d, p) {
        return d3_time_formatPad(d.getSeconds(), p, 2);
      },
      U: function(d, p) {
        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
      },
      w: function(d) {
        return d.getDay();
      },
      W: function(d, p) {
        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
      },
      x: d3_time_format(locale_date),
      X: d3_time_format(locale_time),
      y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
      },
      Y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
      },
      Z: d3_time_zone,
      "%": function() {
        return "%";
      }
    };
    var d3_time_parsers = {
      a: d3_time_parseWeekdayAbbrev,
      A: d3_time_parseWeekday,
      b: d3_time_parseMonthAbbrev,
      B: d3_time_parseMonth,
      c: d3_time_parseLocaleFull,
      d: d3_time_parseDay,
      e: d3_time_parseDay,
      H: d3_time_parseHour24,
      I: d3_time_parseHour24,
      j: d3_time_parseDayOfYear,
      L: d3_time_parseMilliseconds,
      m: d3_time_parseMonthNumber,
      M: d3_time_parseMinutes,
      p: d3_time_parseAmPm,
      S: d3_time_parseSeconds,
      U: d3_time_parseWeekNumberSunday,
      w: d3_time_parseWeekdayNumber,
      W: d3_time_parseWeekNumberMonday,
      x: d3_time_parseLocaleDate,
      X: d3_time_parseLocaleTime,
      y: d3_time_parseYear,
      Y: d3_time_parseFullYear,
      Z: d3_time_parseZone,
      "%": d3_time_parseLiteralPercent
    };
    function d3_time_parseWeekdayAbbrev(date, string, i) {
      d3_time_dayAbbrevRe.lastIndex = 0;
      var n = d3_time_dayAbbrevRe.exec(string.substring(i));
      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseWeekday(date, string, i) {
      d3_time_dayRe.lastIndex = 0;
      var n = d3_time_dayRe.exec(string.substring(i));
      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonthAbbrev(date, string, i) {
      d3_time_monthAbbrevRe.lastIndex = 0;
      var n = d3_time_monthAbbrevRe.exec(string.substring(i));
      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonth(date, string, i) {
      d3_time_monthRe.lastIndex = 0;
      var n = d3_time_monthRe.exec(string.substring(i));
      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseLocaleFull(date, string, i) {
      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
    }
    function d3_time_parseLocaleDate(date, string, i) {
      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
    }
    function d3_time_parseLocaleTime(date, string, i) {
      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
    }
    function d3_time_parseAmPm(date, string, i) {
      var n = d3_time_periodLookup.get(string.substring(i, i += 2).toLowerCase());
      return n == null ? -1 : (date.p = n, i);
    }
    return d3_time_format;
  }
  var d3_time_formatPads = {
    "-": "",
    _: " ",
    "0": "0"
  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
  function d3_time_formatPad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }
  function d3_time_formatRe(names) {
    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
  }
  function d3_time_formatLookup(names) {
    var map = new d3_Map(), i = -1, n = names.length;
    while (++i < n) map.set(names[i].toLowerCase(), i);
    return map;
  }
  function d3_time_parseWeekdayNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 1));
    return n ? (date.w = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberSunday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i));
    return n ? (date.U = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberMonday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i));
    return n ? (date.W = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseFullYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 4));
    return n ? (date.y = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
  }
  function d3_time_parseZone(date, string, i) {
    return /^[+-]\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = -string,
    i + 5) : -1;
  }
  function d3_time_expandYear(d) {
    return d + (d > 68 ? 1900 : 2e3);
  }
  function d3_time_parseMonthNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
  }
  function d3_time_parseDay(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.d = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseDayOfYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
    return n ? (date.j = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseHour24(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.H = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMinutes(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.M = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseSeconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.S = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMilliseconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
    return n ? (date.L = +n[0], i + n[0].length) : -1;
  }
  function d3_time_zone(d) {
    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = ~~(abs(z) / 60), zm = abs(z) % 60;
    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
  }
  function d3_time_parseLiteralPercent(date, string, i) {
    d3_time_percentRe.lastIndex = 0;
    var n = d3_time_percentRe.exec(string.substring(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  function d3_time_formatMulti(formats) {
    var n = formats.length, i = -1;
    while (++i < n) formats[i][0] = this(formats[i][0]);
    return function(date) {
      var i = 0, f = formats[i];
      while (!f[1](date)) f = formats[++i];
      return f[0](date);
    };
  }
  d3.locale = function(locale) {
    return {
      numberFormat: d3_locale_numberFormat(locale),
      timeFormat: d3_locale_timeFormat(locale)
    };
  };
  var d3_locale_enUS = d3.locale({
    decimal: ".",
    thousands: ",",
    grouping: [ 3 ],
    currency: [ "$", "" ],
    dateTime: "%a %b %e %X %Y",
    date: "%m/%d/%Y",
    time: "%H:%M:%S",
    periods: [ "AM", "PM" ],
    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
  });
  d3.format = d3_locale_enUS.numberFormat;
  d3.geo = {};
  function d3_adder() {}
  d3_adder.prototype = {
    s: 0,
    t: 0,
    add: function(y) {
      d3_adderSum(y, this.t, d3_adderTemp);
      d3_adderSum(d3_adderTemp.s, this.s, this);
      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
    },
    reset: function() {
      this.s = this.t = 0;
    },
    valueOf: function() {
      return this.s;
    }
  };
  var d3_adderTemp = new d3_adder();
  function d3_adderSum(a, b, o) {
    var x = o.s = a + b, bv = x - a, av = x - bv;
    o.t = a - av + (b - bv);
  }
  d3.geo.stream = function(object, listener) {
    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
      d3_geo_streamObjectType[object.type](object, listener);
    } else {
      d3_geo_streamGeometry(object, listener);
    }
  };
  function d3_geo_streamGeometry(geometry, listener) {
    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
      d3_geo_streamGeometryType[geometry.type](geometry, listener);
    }
  }
  var d3_geo_streamObjectType = {
    Feature: function(feature, listener) {
      d3_geo_streamGeometry(feature.geometry, listener);
    },
    FeatureCollection: function(object, listener) {
      var features = object.features, i = -1, n = features.length;
      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
    }
  };
  var d3_geo_streamGeometryType = {
    Sphere: function(object, listener) {
      listener.sphere();
    },
    Point: function(object, listener) {
      object = object.coordinates;
      listener.point(object[0], object[1], object[2]);
    },
    MultiPoint: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
    },
    LineString: function(object, listener) {
      d3_geo_streamLine(object.coordinates, listener, 0);
    },
    MultiLineString: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
    },
    Polygon: function(object, listener) {
      d3_geo_streamPolygon(object.coordinates, listener);
    },
    MultiPolygon: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
    },
    GeometryCollection: function(object, listener) {
      var geometries = object.geometries, i = -1, n = geometries.length;
      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
    }
  };
  function d3_geo_streamLine(coordinates, listener, closed) {
    var i = -1, n = coordinates.length - closed, coordinate;
    listener.lineStart();
    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
    listener.lineEnd();
  }
  function d3_geo_streamPolygon(coordinates, listener) {
    var i = -1, n = coordinates.length;
    listener.polygonStart();
    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
    listener.polygonEnd();
  }
  d3.geo.area = function(object) {
    d3_geo_areaSum = 0;
    d3.geo.stream(object, d3_geo_area);
    return d3_geo_areaSum;
  };
  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
  var d3_geo_area = {
    sphere: function() {
      d3_geo_areaSum += 4 * π;
    },
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_areaRingSum.reset();
      d3_geo_area.lineStart = d3_geo_areaRingStart;
    },
    polygonEnd: function() {
      var area = 2 * d3_geo_areaRingSum;
      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
    }
  };
  function d3_geo_areaRingStart() {
    var λ00, φ00, λ0, cosφ0, sinφ0;
    d3_geo_area.point = function(λ, φ) {
      d3_geo_area.point = nextPoint;
      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4),
      sinφ0 = Math.sin(φ);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      φ = φ * d3_radians / 2 + π / 4;
      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
      d3_geo_areaRingSum.add(Math.atan2(v, u));
      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
    }
    d3_geo_area.lineEnd = function() {
      nextPoint(λ00, φ00);
    };
  }
  function d3_geo_cartesian(spherical) {
    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
  }
  function d3_geo_cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  function d3_geo_cartesianCross(a, b) {
    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
  }
  function d3_geo_cartesianAdd(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }
  function d3_geo_cartesianScale(vector, k) {
    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
  }
  function d3_geo_cartesianNormalize(d) {
    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }
  function d3_geo_spherical(cartesian) {
    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
  }
  function d3_geo_sphericalEqual(a, b) {
    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
  }
  d3.geo.bounds = function() {
    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
    var bound = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        bound.point = ringPoint;
        bound.lineStart = ringStart;
        bound.lineEnd = ringEnd;
        dλSum = 0;
        d3_geo_area.polygonStart();
      },
      polygonEnd: function() {
        d3_geo_area.polygonEnd();
        bound.point = point;
        bound.lineStart = lineStart;
        bound.lineEnd = lineEnd;
        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
        range[0] = λ0, range[1] = λ1;
      }
    };
    function point(λ, φ) {
      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
      if (φ < φ0) φ0 = φ;
      if (φ > φ1) φ1 = φ;
    }
    function linePoint(λ, φ) {
      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
      if (p0) {
        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
        d3_geo_cartesianNormalize(inflection);
        inflection = d3_geo_spherical(inflection);
        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = inflection[1] * d3_degrees;
          if (φi > φ1) φ1 = φi;
        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = -inflection[1] * d3_degrees;
          if (φi < φ0) φ0 = φi;
        } else {
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }
        if (antimeridian) {
          if (λ < λ_) {
            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
          } else {
            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
          }
        } else {
          if (λ1 >= λ0) {
            if (λ < λ0) λ0 = λ;
            if (λ > λ1) λ1 = λ;
          } else {
            if (λ > λ_) {
              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
            } else {
              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
            }
          }
        }
      } else {
        point(λ, φ);
      }
      p0 = p, λ_ = λ;
    }
    function lineStart() {
      bound.point = linePoint;
    }
    function lineEnd() {
      range[0] = λ0, range[1] = λ1;
      bound.point = point;
      p0 = null;
    }
    function ringPoint(λ, φ) {
      if (p0) {
        var dλ = λ - λ_;
        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
      } else λ__ = λ, φ__ = φ;
      d3_geo_area.point(λ, φ);
      linePoint(λ, φ);
    }
    function ringStart() {
      d3_geo_area.lineStart();
    }
    function ringEnd() {
      ringPoint(λ__, φ__);
      d3_geo_area.lineEnd();
      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
      range[0] = λ0, range[1] = λ1;
      p0 = null;
    }
    function angle(λ0, λ1) {
      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
    }
    function compareRanges(a, b) {
      return a[0] - b[0];
    }
    function withinRange(x, range) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }
    return function(feature) {
      φ1 = λ1 = -(λ0 = φ0 = Infinity);
      ranges = [];
      d3.geo.stream(feature, bound);
      var n = ranges.length;
      if (n) {
        ranges.sort(compareRanges);
        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
          b = ranges[i];
          if (withinRange(b[0], a) || withinRange(b[1], a)) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }
        var best = -Infinity, dλ;
        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
          b = merged[i];
          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
        }
      }
      ranges = range = null;
      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
    };
  }();
  d3.geo.centroid = function(object) {
    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
    d3.geo.stream(object, d3_geo_centroid);
    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
    if (m < ε2) {
      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
      m = x * x + y * y + z * z;
      if (m < ε2) return [ NaN, NaN ];
    }
    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
  };
  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
  var d3_geo_centroid = {
    sphere: d3_noop,
    point: d3_geo_centroidPoint,
    lineStart: d3_geo_centroidLineStart,
    lineEnd: d3_geo_centroidLineEnd,
    polygonStart: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
    }
  };
  function d3_geo_centroidPoint(λ, φ) {
    λ *= d3_radians;
    var cosφ = Math.cos(φ *= d3_radians);
    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
  }
  function d3_geo_centroidPointXYZ(x, y, z) {
    ++d3_geo_centroidW0;
    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
  }
  function d3_geo_centroidLineStart() {
    var x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroid.point = nextPoint;
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_centroidLineEnd() {
    d3_geo_centroid.point = d3_geo_centroidPoint;
  }
  function d3_geo_centroidRingStart() {
    var λ00, φ00, x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ00 = λ, φ00 = φ;
      d3_geo_centroid.point = nextPoint;
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    d3_geo_centroid.lineEnd = function() {
      nextPoint(λ00, φ00);
      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
      d3_geo_centroid.point = d3_geo_centroidPoint;
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
      d3_geo_centroidX2 += v * cx;
      d3_geo_centroidY2 += v * cy;
      d3_geo_centroidZ2 += v * cz;
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_true() {
    return true;
  }
  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
    var subject = [], clip = [];
    segments.forEach(function(segment) {
      if ((n = segment.length - 1) <= 0) return;
      var n, p0 = segment[0], p1 = segment[n];
      if (d3_geo_sphericalEqual(p0, p1)) {
        listener.lineStart();
        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
        listener.lineEnd();
        return;
      }
      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
      a.o = b;
      subject.push(a);
      clip.push(b);
      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
      a.o = b;
      subject.push(a);
      clip.push(b);
    });
    clip.sort(compare);
    d3_geo_clipPolygonLinkCircular(subject);
    d3_geo_clipPolygonLinkCircular(clip);
    if (!subject.length) return;
    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
      clip[i].e = entry = !entry;
    }
    var start = subject[0], points, point;
    while (1) {
      var current = start, isSubject = true;
      while (current.v) if ((current = current.n) === start) return;
      points = current.z;
      listener.lineStart();
      do {
        current.v = current.o.v = true;
        if (current.e) {
          if (isSubject) {
            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.n.x, 1, listener);
          }
          current = current.n;
        } else {
          if (isSubject) {
            points = current.p.z;
            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.p.x, -1, listener);
          }
          current = current.p;
        }
        current = current.o;
        points = current.z;
        isSubject = !isSubject;
      } while (!current.v);
      listener.lineEnd();
    }
  }
  function d3_geo_clipPolygonLinkCircular(array) {
    if (!(n = array.length)) return;
    var n, i = 0, a = array[0], b;
    while (++i < n) {
      a.n = b = array[i];
      b.p = a;
      a = b;
    }
    a.n = b = array[0];
    b.p = a;
  }
  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = false;
    this.n = this.p = null;
  }
  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
    return function(rotate, listener) {
      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
        },
        polygonEnd: function() {
          clip.point = point;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = d3.merge(segments);
          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
          if (segments.length) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
          } else if (clipStartInside) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd();
          }
          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
          segments = polygon = null;
        },
        sphere: function() {
          listener.polygonStart();
          listener.lineStart();
          interpolate(null, null, 1, listener);
          listener.lineEnd();
          listener.polygonEnd();
        }
      };
      function point(λ, φ) {
        var point = rotate(λ, φ);
        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
      }
      function pointLine(λ, φ) {
        var point = rotate(λ, φ);
        line.point(point[0], point[1]);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point;
        line.lineEnd();
      }
      var segments;
      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
      function pointRing(λ, φ) {
        ring.push([ λ, φ ]);
        var point = rotate(λ, φ);
        ringListener.point(point[0], point[1]);
      }
      function ringStart() {
        ringListener.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringListener.lineEnd();
        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n) return;
        if (clean & 1) {
          segment = ringSegments[0];
          var n = segment.length - 1, i = -1, point;
          if (n > 0) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            while (++i < n) listener.point((point = segment[i])[0], point[1]);
            listener.lineEnd();
          }
          return;
        }
        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
      }
      return clip;
    };
  }
  function d3_geo_clipSegmentLength1(segment) {
    return segment.length > 1;
  }
  function d3_geo_clipBufferListener() {
    var lines = [], line;
    return {
      lineStart: function() {
        lines.push(line = []);
      },
      point: function(λ, φ) {
        line.push([ λ, φ ]);
      },
      lineEnd: d3_noop,
      buffer: function() {
        var buffer = lines;
        lines = [];
        line = null;
        return buffer;
      },
      rejoin: function() {
        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
      }
    };
  }
  function d3_geo_clipSort(a, b) {
    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
  }
  function d3_geo_pointInPolygon(point, polygon) {
    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
    d3_geo_areaRingSum.reset();
    for (var i = 0, n = polygon.length; i < n; ++i) {
      var ring = polygon[i], m = ring.length;
      if (!m) continue;
      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
      while (true) {
        if (j === m) j = 0;
        point = ring[j];
        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
          d3_geo_cartesianNormalize(arc);
          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
          d3_geo_cartesianNormalize(intersection);
          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
          }
        }
        if (!j++) break;
        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
      }
    }
    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
  }
  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
  function d3_geo_clipAntimeridianLine(listener) {
    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
    return {
      lineStart: function() {
        listener.lineStart();
        clean = 1;
      },
      point: function(λ1, φ1) {
        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
        if (abs(dλ - π) < ε) {
          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          listener.point(λ1, φ0);
          clean = 0;
        } else if (sλ0 !== sλ1 && dλ >= π) {
          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          clean = 0;
        }
        listener.point(λ0 = λ1, φ0 = φ1);
        sλ0 = sλ1;
      },
      lineEnd: function() {
        listener.lineEnd();
        λ0 = φ0 = NaN;
      },
      clean: function() {
        return 2 - clean;
      }
    };
  }
  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
  }
  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
    var φ;
    if (from == null) {
      φ = direction * halfπ;
      listener.point(-π, φ);
      listener.point(0, φ);
      listener.point(π, φ);
      listener.point(π, 0);
      listener.point(π, -φ);
      listener.point(0, -φ);
      listener.point(-π, -φ);
      listener.point(-π, 0);
      listener.point(-π, φ);
    } else if (abs(from[0] - to[0]) > ε) {
      var s = from[0] < to[0] ? π : -π;
      φ = direction * s / 2;
      listener.point(-s, φ);
      listener.point(0, φ);
      listener.point(s, φ);
    } else {
      listener.point(to[0], to[1]);
    }
  }
  function d3_geo_clipCircle(radius) {
    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
    function visible(λ, φ) {
      return Math.cos(λ) * Math.cos(φ) > cr;
    }
    function clipLine(listener) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function() {
          v00 = v0 = false;
          clean = 1;
        },
        point: function(λ, φ) {
          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
          if (!point0 && (v00 = v0 = v)) listener.lineStart();
          if (v !== v0) {
            point2 = intersect(point0, point1);
            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
              point1[0] += ε;
              point1[1] += ε;
              v = visible(point1[0], point1[1]);
            }
          }
          if (v !== v0) {
            clean = 0;
            if (v) {
              listener.lineStart();
              point2 = intersect(point1, point0);
              listener.point(point2[0], point2[1]);
            } else {
              point2 = intersect(point0, point1);
              listener.point(point2[0], point2[1]);
              listener.lineEnd();
            }
            point0 = point2;
          } else if (notHemisphere && point0 && smallRadius ^ v) {
            var t;
            if (!(c & c0) && (t = intersect(point1, point0, true))) {
              clean = 0;
              if (smallRadius) {
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
              } else {
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
              }
            }
          }
          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
            listener.point(point1[0], point1[1]);
          }
          point0 = point1, v0 = v, c0 = c;
        },
        lineEnd: function() {
          if (v0) listener.lineEnd();
          point0 = null;
        },
        clean: function() {
          return clean | (v00 && v0) << 1;
        }
      };
    }
    function intersect(a, b, two) {
      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) return !two && a;
      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
      d3_geo_cartesianAdd(A, B);
      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
      if (t2 < 0) return;
      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
      d3_geo_cartesianAdd(q, A);
      q = d3_geo_spherical(q);
      if (!two) return q;
      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
        d3_geo_cartesianAdd(q1, A);
        return [ q, d3_geo_spherical(q1) ];
      }
    }
    function code(λ, φ) {
      var r = smallRadius ? radius : π - radius, code = 0;
      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
      return code;
    }
  }
  function d3_geom_clipLine(x0, y0, x1, y1) {
    return function(line) {
      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      if (t0 > 0) line.a = {
        x: ax + t0 * dx,
        y: ay + t0 * dy
      };
      if (t1 < 1) line.b = {
        x: ax + t1 * dx,
        y: ay + t1 * dy
      };
      return line;
    };
  }
  var d3_geo_clipExtentMAX = 1e9;
  d3.geo.clipExtent = function() {
    var x0, y0, x1, y1, stream, clip, clipExtent = {
      stream: function(output) {
        if (stream) stream.valid = false;
        stream = clip(output);
        stream.valid = true;
        return stream;
      },
      extent: function(_) {
        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
        if (stream) stream.valid = false, stream = null;
        return clipExtent;
      }
    };
    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
  };
  function d3_geo_clipExtent(x0, y0, x1, y1) {
    return function(listener) {
      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          listener = bufferListener;
          segments = [];
          polygon = [];
          clean = true;
        },
        polygonEnd: function() {
          listener = listener_;
          segments = d3.merge(segments);
          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
          if (inside || visible) {
            listener.polygonStart();
            if (inside) {
              listener.lineStart();
              interpolate(null, null, 1, listener);
              listener.lineEnd();
            }
            if (visible) {
              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
            }
            listener.polygonEnd();
          }
          segments = polygon = ring = null;
        }
      };
      function insidePolygon(p) {
        var wn = 0, n = polygon.length, y = p[1];
        for (var i = 0; i < n; ++i) {
          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
            b = v[j];
            if (a[1] <= y) {
              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
            } else {
              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
            }
            a = b;
          }
        }
        return wn !== 0;
      }
      function interpolate(from, to, direction, listener) {
        var a = 0, a1 = 0;
        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
          do {
            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          } while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          listener.point(to[0], to[1]);
        }
      }
      function pointVisible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }
      function point(x, y) {
        if (pointVisible(x, y)) listener.point(x, y);
      }
      var x__, y__, v__, x_, y_, v_, first, clean;
      function lineStart() {
        clip.point = linePoint;
        if (polygon) polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_) bufferListener.rejoin();
          segments.push(bufferListener.buffer());
        }
        clip.point = point;
        if (v_) listener.lineEnd();
      }
      function linePoint(x, y) {
        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
        var v = pointVisible(x, y);
        if (polygon) ring.push([ x, y ]);
        if (first) {
          x__ = x, y__ = y, v__ = v;
          first = false;
          if (v) {
            listener.lineStart();
            listener.point(x, y);
          }
        } else {
          if (v && v_) listener.point(x, y); else {
            var l = {
              a: {
                x: x_,
                y: y_
              },
              b: {
                x: x,
                y: y
              }
            };
            if (clipLine(l)) {
              if (!v_) {
                listener.lineStart();
                listener.point(l.a.x, l.a.y);
              }
              listener.point(l.b.x, l.b.y);
              if (!v) listener.lineEnd();
              clean = false;
            } else if (v) {
              listener.lineStart();
              listener.point(x, y);
              clean = false;
            }
          }
        }
        x_ = x, y_ = y, v_ = v;
      }
      return clip;
    };
    function corner(p, direction) {
      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }
    function compare(a, b) {
      return comparePoints(a.x, b.x);
    }
    function comparePoints(a, b) {
      var ca = corner(a, 1), cb = corner(b, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
  }
  function d3_geo_compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }
    if (a.invert && b.invert) compose.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
  }
  function d3_geo_conic(projectAt) {
    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
    p.parallels = function(_) {
      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
    };
    return p;
  }
  function d3_geo_conicEqualArea(φ0, φ1) {
    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
    function forward(λ, φ) {
      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = ρ0 - y;
      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
    };
    return forward;
  }
  (d3.geo.conicEqualArea = function() {
    return d3_geo_conic(d3_geo_conicEqualArea);
  }).raw = d3_geo_conicEqualArea;
  d3.geo.albers = function() {
    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
  };
  d3.geo.albersUsa = function() {
    var lower48 = d3.geo.albers();
    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
    var point, pointStream = {
      point: function(x, y) {
        point = [ x, y ];
      }
    }, lower48Point, alaskaPoint, hawaiiPoint;
    function albersUsa(coordinates) {
      var x = coordinates[0], y = coordinates[1];
      point = null;
      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
      return point;
    }
    albersUsa.invert = function(coordinates) {
      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
      return {
        point: function(x, y) {
          lower48Stream.point(x, y);
          alaskaStream.point(x, y);
          hawaiiStream.point(x, y);
        },
        sphere: function() {
          lower48Stream.sphere();
          alaskaStream.sphere();
          hawaiiStream.sphere();
        },
        lineStart: function() {
          lower48Stream.lineStart();
          alaskaStream.lineStart();
          hawaiiStream.lineStart();
        },
        lineEnd: function() {
          lower48Stream.lineEnd();
          alaskaStream.lineEnd();
          hawaiiStream.lineEnd();
        },
        polygonStart: function() {
          lower48Stream.polygonStart();
          alaskaStream.polygonStart();
          hawaiiStream.polygonStart();
        },
        polygonEnd: function() {
          lower48Stream.polygonEnd();
          alaskaStream.polygonEnd();
          hawaiiStream.polygonEnd();
        }
      };
    };
    albersUsa.precision = function(_) {
      if (!arguments.length) return lower48.precision();
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return albersUsa;
    };
    albersUsa.scale = function(_) {
      if (!arguments.length) return lower48.scale();
      lower48.scale(_);
      alaska.scale(_ * .35);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
      if (!arguments.length) return lower48.translate();
      var k = lower48.scale(), x = +_[0], y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      return albersUsa;
    };
    return albersUsa.scale(1070);
  };
  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_pathAreaPolygon = 0;
      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
    }
  };
  function d3_geo_pathAreaRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathArea.point = function(x, y) {
      d3_geo_pathArea.point = nextPoint;
      x00 = x0 = x, y00 = y0 = y;
    };
    function nextPoint(x, y) {
      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
      x0 = x, y0 = y;
    }
    d3_geo_pathArea.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
  var d3_geo_pathBounds = {
    point: d3_geo_pathBoundsPoint,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_pathBoundsPoint(x, y) {
    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
  }
  function d3_geo_pathBuffer() {
    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointCircle = d3_geo_pathBufferCircle(_);
        return stream;
      },
      result: function() {
        if (buffer.length) {
          var result = buffer.join("");
          buffer = [];
          return result;
        }
      }
    };
    function point(x, y) {
      buffer.push("M", x, ",", y, pointCircle);
    }
    function pointLineStart(x, y) {
      buffer.push("M", x, ",", y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      buffer.push("L", x, ",", y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      buffer.push("Z");
    }
    return stream;
  }
  function d3_geo_pathBufferCircle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }
  var d3_geo_pathCentroid = {
    point: d3_geo_pathCentroidPoint,
    lineStart: d3_geo_pathCentroidLineStart,
    lineEnd: d3_geo_pathCentroidLineEnd,
    polygonStart: function() {
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
    }
  };
  function d3_geo_pathCentroidPoint(x, y) {
    d3_geo_centroidX0 += x;
    d3_geo_centroidY0 += y;
    ++d3_geo_centroidZ0;
  }
  function d3_geo_pathCentroidLineStart() {
    var x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
  }
  function d3_geo_pathCentroidLineEnd() {
    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
  }
  function d3_geo_pathCentroidRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      z = y0 * x - x0 * y;
      d3_geo_centroidX2 += z * (x0 + x);
      d3_geo_centroidY2 += z * (y0 + y);
      d3_geo_centroidZ2 += z * 3;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
    d3_geo_pathCentroid.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  function d3_geo_pathContext(context) {
    var pointRadius = 4.5;
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointRadius = _;
        return stream;
      },
      result: d3_noop
    };
    function point(x, y) {
      context.moveTo(x, y);
      context.arc(x, y, pointRadius, 0, τ);
    }
    function pointLineStart(x, y) {
      context.moveTo(x, y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      context.lineTo(x, y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      context.closePath();
    }
    return stream;
  }
  function d3_geo_resample(project) {
    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
    function resample(stream) {
      return (maxDepth ? resampleRecursive : resampleNone)(stream);
    }
    function resampleNone(stream) {
      return d3_geo_transformPoint(stream, function(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      });
    }
    function resampleRecursive(stream) {
      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
      var resample = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          stream.polygonStart();
          resample.lineStart = ringStart;
        },
        polygonEnd: function() {
          stream.polygonEnd();
          resample.lineStart = lineStart;
        }
      };
      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }
      function lineStart() {
        x0 = NaN;
        resample.point = linePoint;
        stream.lineStart();
      }
      function linePoint(λ, φ) {
        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
        stream.point(x0, y0);
      }
      function lineEnd() {
        resample.point = point;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resample.point = ringPoint;
        resample.lineEnd = ringEnd;
      }
      function ringPoint(λ, φ) {
        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
        resample.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
        resample.lineEnd = lineEnd;
        lineEnd();
      }
      return resample;
    }
    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
      if (d2 > 4 * δ2 && depth--) {
        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
          stream.point(x2, y2);
          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
        }
      }
    }
    resample.precision = function(_) {
      if (!arguments.length) return Math.sqrt(δ2);
      maxDepth = (δ2 = _ * _) > 0 && 16;
      return resample;
    };
    return resample;
  }
  d3.geo.path = function() {
    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
    function path(object) {
      if (object) {
        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
        d3.geo.stream(object, cacheStream);
      }
      return contextStream.result();
    }
    path.area = function(object) {
      d3_geo_pathAreaSum = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathArea));
      return d3_geo_pathAreaSum;
    };
    path.centroid = function(object) {
      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
    };
    path.bounds = function(object) {
      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
    };
    path.projection = function(_) {
      if (!arguments.length) return projection;
      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
      return reset();
    };
    path.context = function(_) {
      if (!arguments.length) return context;
      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
      return reset();
    };
    path.pointRadius = function(_) {
      if (!arguments.length) return pointRadius;
      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };
    function reset() {
      cacheStream = null;
      return path;
    }
    return path.projection(d3.geo.albersUsa()).context(null);
  };
  function d3_geo_pathProjectStream(project) {
    var resample = d3_geo_resample(function(x, y) {
      return project([ x * d3_degrees, y * d3_degrees ]);
    });
    return function(stream) {
      return d3_geo_projectionRadians(resample(stream));
    };
  }
  d3.geo.transform = function(methods) {
    return {
      stream: function(stream) {
        var transform = new d3_geo_transform(stream);
        for (var k in methods) transform[k] = methods[k];
        return transform;
      }
    };
  };
  function d3_geo_transform(stream) {
    this.stream = stream;
  }
  d3_geo_transform.prototype = {
    point: function(x, y) {
      this.stream.point(x, y);
    },
    sphere: function() {
      this.stream.sphere();
    },
    lineStart: function() {
      this.stream.lineStart();
    },
    lineEnd: function() {
      this.stream.lineEnd();
    },
    polygonStart: function() {
      this.stream.polygonStart();
    },
    polygonEnd: function() {
      this.stream.polygonEnd();
    }
  };
  function d3_geo_transformPoint(stream, point) {
    return {
      point: point,
      sphere: function() {
        stream.sphere();
      },
      lineStart: function() {
        stream.lineStart();
      },
      lineEnd: function() {
        stream.lineEnd();
      },
      polygonStart: function() {
        stream.polygonStart();
      },
      polygonEnd: function() {
        stream.polygonEnd();
      }
    };
  }
  d3.geo.projection = d3_geo_projection;
  d3.geo.projectionMutator = d3_geo_projectionMutator;
  function d3_geo_projection(project) {
    return d3_geo_projectionMutator(function() {
      return project;
    })();
  }
  function d3_geo_projectionMutator(projectAt) {
    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
      x = project(x, y);
      return [ x[0] * k + δx, δy - x[1] * k ];
    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
    function projection(point) {
      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
      return [ point[0] * k + δx, δy - point[1] * k ];
    }
    function invert(point) {
      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
    }
    projection.stream = function(output) {
      if (stream) stream.valid = false;
      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
      stream.valid = true;
      return stream;
    };
    projection.clipAngle = function(_) {
      if (!arguments.length) return clipAngle;
      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
      return invalidate();
    };
    projection.clipExtent = function(_) {
      if (!arguments.length) return clipExtent;
      clipExtent = _;
      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
      return invalidate();
    };
    projection.scale = function(_) {
      if (!arguments.length) return k;
      k = +_;
      return reset();
    };
    projection.translate = function(_) {
      if (!arguments.length) return [ x, y ];
      x = +_[0];
      y = +_[1];
      return reset();
    };
    projection.center = function(_) {
      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
      λ = _[0] % 360 * d3_radians;
      φ = _[1] % 360 * d3_radians;
      return reset();
    };
    projection.rotate = function(_) {
      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
      δλ = _[0] % 360 * d3_radians;
      δφ = _[1] % 360 * d3_radians;
      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
      return reset();
    };
    d3.rebind(projection, projectResample, "precision");
    function reset() {
      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
      var center = project(λ, φ);
      δx = x - center[0] * k;
      δy = y + center[1] * k;
      return invalidate();
    }
    function invalidate() {
      if (stream) stream.valid = false, stream = null;
      return projection;
    }
    return function() {
      project = projectAt.apply(this, arguments);
      projection.invert = project.invert && invert;
      return reset();
    };
  }
  function d3_geo_projectionRadians(stream) {
    return d3_geo_transformPoint(stream, function(x, y) {
      stream.point(x * d3_radians, y * d3_radians);
    });
  }
  function d3_geo_equirectangular(λ, φ) {
    return [ λ, φ ];
  }
  (d3.geo.equirectangular = function() {
    return d3_geo_projection(d3_geo_equirectangular);
  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
  d3.geo.rotation = function(rotate) {
    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    }
    forward.invert = function(coordinates) {
      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    };
    return forward;
  };
  function d3_geo_identityRotation(λ, φ) {
    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
  }
  d3_geo_identityRotation.invert = d3_geo_equirectangular;
  function d3_geo_rotation(δλ, δφ, δγ) {
    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
  }
  function d3_geo_forwardRotationλ(δλ) {
    return function(λ, φ) {
      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
    };
  }
  function d3_geo_rotationλ(δλ) {
    var rotation = d3_geo_forwardRotationλ(δλ);
    rotation.invert = d3_geo_forwardRotationλ(-δλ);
    return rotation;
  }
  function d3_geo_rotationφγ(δφ, δγ) {
    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
    function rotation(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
    }
    rotation.invert = function(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
    };
    return rotation;
  }
  d3.geo.circle = function() {
    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
    function circle() {
      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
      interpolate(null, null, 1, {
        point: function(x, y) {
          ring.push(x = rotate(x, y));
          x[0] *= d3_degrees, x[1] *= d3_degrees;
        }
      });
      return {
        type: "Polygon",
        coordinates: [ ring ]
      };
    }
    circle.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return circle;
    };
    circle.angle = function(x) {
      if (!arguments.length) return angle;
      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
      return circle;
    };
    circle.precision = function(_) {
      if (!arguments.length) return precision;
      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
      return circle;
    };
    return circle.angle(90);
  };
  function d3_geo_circleInterpolate(radius, precision) {
    var cr = Math.cos(radius), sr = Math.sin(radius);
    return function(from, to, direction, listener) {
      var step = direction * precision;
      if (from != null) {
        from = d3_geo_circleAngle(cr, from);
        to = d3_geo_circleAngle(cr, to);
        if (direction > 0 ? from < to : from > to) from += direction * τ;
      } else {
        from = radius + direction * τ;
        to = radius - .5 * step;
      }
      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
      }
    };
  }
  function d3_geo_circleAngle(cr, point) {
    var a = d3_geo_cartesian(point);
    a[0] -= cr;
    d3_geo_cartesianNormalize(a);
    var angle = d3_acos(-a[1]);
    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
  }
  d3.geo.distance = function(a, b) {
    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
  };
  d3.geo.graticule = function() {
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
    function graticule() {
      return {
        type: "MultiLineString",
        coordinates: lines()
      };
    }
    function lines() {
      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
        return abs(x % DX) > ε;
      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
        return abs(y % DY) > ε;
      }).map(y));
    }
    graticule.lines = function() {
      return lines().map(function(coordinates) {
        return {
          type: "LineString",
          coordinates: coordinates
        };
      });
    };
    graticule.outline = function() {
      return {
        type: "Polygon",
        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
      };
    };
    graticule.extent = function(_) {
      if (!arguments.length) return graticule.minorExtent();
      return graticule.majorExtent(_).minorExtent(_);
    };
    graticule.majorExtent = function(_) {
      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
      X0 = +_[0][0], X1 = +_[1][0];
      Y0 = +_[0][1], Y1 = +_[1][1];
      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
      return graticule.precision(precision);
    };
    graticule.minorExtent = function(_) {
      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
      x0 = +_[0][0], x1 = +_[1][0];
      y0 = +_[0][1], y1 = +_[1][1];
      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
      return graticule.precision(precision);
    };
    graticule.step = function(_) {
      if (!arguments.length) return graticule.minorStep();
      return graticule.majorStep(_).minorStep(_);
    };
    graticule.majorStep = function(_) {
      if (!arguments.length) return [ DX, DY ];
      DX = +_[0], DY = +_[1];
      return graticule;
    };
    graticule.minorStep = function(_) {
      if (!arguments.length) return [ dx, dy ];
      dx = +_[0], dy = +_[1];
      return graticule;
    };
    graticule.precision = function(_) {
      if (!arguments.length) return precision;
      precision = +_;
      x = d3_geo_graticuleX(y0, y1, 90);
      y = d3_geo_graticuleY(x0, x1, precision);
      X = d3_geo_graticuleX(Y0, Y1, 90);
      Y = d3_geo_graticuleY(X0, X1, precision);
      return graticule;
    };
    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
  };
  function d3_geo_graticuleX(y0, y1, dy) {
    var y = d3.range(y0, y1 - ε, dy).concat(y1);
    return function(x) {
      return y.map(function(y) {
        return [ x, y ];
      });
    };
  }
  function d3_geo_graticuleY(x0, x1, dx) {
    var x = d3.range(x0, x1 - ε, dx).concat(x1);
    return function(y) {
      return x.map(function(x) {
        return [ x, y ];
      });
    };
  }
  function d3_source(d) {
    return d.source;
  }
  function d3_target(d) {
    return d.target;
  }
  d3.geo.greatArc = function() {
    var source = d3_source, source_, target = d3_target, target_;
    function greatArc() {
      return {
        type: "LineString",
        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
      };
    }
    greatArc.distance = function() {
      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
    };
    greatArc.source = function(_) {
      if (!arguments.length) return source;
      source = _, source_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.target = function(_) {
      if (!arguments.length) return target;
      target = _, target_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.precision = function() {
      return arguments.length ? greatArc : 0;
    };
    return greatArc;
  };
  d3.geo.interpolate = function(source, target) {
    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
  };
  function d3_geo_interpolate(x0, y0, x1, y1) {
    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
    var interpolate = d ? function(t) {
      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
    } : function() {
      return [ x0 * d3_degrees, y0 * d3_degrees ];
    };
    interpolate.distance = d;
    return interpolate;
  }
  d3.geo.length = function(object) {
    d3_geo_lengthSum = 0;
    d3.geo.stream(object, d3_geo_length);
    return d3_geo_lengthSum;
  };
  var d3_geo_lengthSum;
  var d3_geo_length = {
    sphere: d3_noop,
    point: d3_noop,
    lineStart: d3_geo_lengthLineStart,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_lengthLineStart() {
    var λ0, sinφ0, cosφ0;
    d3_geo_length.point = function(λ, φ) {
      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
      d3_geo_length.point = nextPoint;
    };
    d3_geo_length.lineEnd = function() {
      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
    };
    function nextPoint(λ, φ) {
      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
    }
  }
  function d3_geo_azimuthal(scale, angle) {
    function azimuthal(λ, φ) {
      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
    }
    azimuthal.invert = function(x, y) {
      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
    };
    return azimuthal;
  }
  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
    return Math.sqrt(2 / (1 + cosλcosφ));
  }, function(ρ) {
    return 2 * Math.asin(ρ / 2);
  });
  (d3.geo.azimuthalEqualArea = function() {
    return d3_geo_projection(d3_geo_azimuthalEqualArea);
  }).raw = d3_geo_azimuthalEqualArea;
  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
    var c = Math.acos(cosλcosφ);
    return c && c / Math.sin(c);
  }, d3_identity);
  (d3.geo.azimuthalEquidistant = function() {
    return d3_geo_projection(d3_geo_azimuthalEquidistant);
  }).raw = d3_geo_azimuthalEquidistant;
  function d3_geo_conicConformal(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), t = function(φ) {
      return Math.tan(π / 4 + φ / 2);
    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
    if (!n) return d3_geo_mercator;
    function forward(λ, φ) {
      if (F > 0) {
        if (φ < -halfπ + ε) φ = -halfπ + ε;
      } else {
        if (φ > halfπ - ε) φ = halfπ - ε;
      }
      var ρ = F / Math.pow(t(φ), n);
      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
    };
    return forward;
  }
  (d3.geo.conicConformal = function() {
    return d3_geo_conic(d3_geo_conicConformal);
  }).raw = d3_geo_conicConformal;
  function d3_geo_conicEquidistant(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
    if (abs(n) < ε) return d3_geo_equirectangular;
    function forward(λ, φ) {
      var ρ = G - φ;
      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = G - y;
      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
    };
    return forward;
  }
  (d3.geo.conicEquidistant = function() {
    return d3_geo_conic(d3_geo_conicEquidistant);
  }).raw = d3_geo_conicEquidistant;
  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / cosλcosφ;
  }, Math.atan);
  (d3.geo.gnomonic = function() {
    return d3_geo_projection(d3_geo_gnomonic);
  }).raw = d3_geo_gnomonic;
  function d3_geo_mercator(λ, φ) {
    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
  }
  d3_geo_mercator.invert = function(x, y) {
    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
  };
  function d3_geo_mercatorProjection(project) {
    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
    m.scale = function() {
      var v = scale.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.translate = function() {
      var v = translate.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.clipExtent = function(_) {
      var v = clipExtent.apply(m, arguments);
      if (v === m) {
        if (clipAuto = _ == null) {
          var k = π * scale(), t = translate();
          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
        }
      } else if (clipAuto) {
        v = null;
      }
      return v;
    };
    return m.clipExtent(null);
  }
  (d3.geo.mercator = function() {
    return d3_geo_mercatorProjection(d3_geo_mercator);
  }).raw = d3_geo_mercator;
  var d3_geo_orthographic = d3_geo_azimuthal(function() {
    return 1;
  }, Math.asin);
  (d3.geo.orthographic = function() {
    return d3_geo_projection(d3_geo_orthographic);
  }).raw = d3_geo_orthographic;
  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / (1 + cosλcosφ);
  }, function(ρ) {
    return 2 * Math.atan(ρ);
  });
  (d3.geo.stereographic = function() {
    return d3_geo_projection(d3_geo_stereographic);
  }).raw = d3_geo_stereographic;
  function d3_geo_transverseMercator(λ, φ) {
    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
  }
  d3_geo_transverseMercator.invert = function(x, y) {
    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
  };
  (d3.geo.transverseMercator = function() {
    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
    projection.center = function(_) {
      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
    };
    projection.rotate = function(_) {
      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(),
      [ _[0], _[1], _[2] - 90 ]);
    };
    return rotate([ 0, 0, 90 ]);
  }).raw = d3_geo_transverseMercator;
  d3.geom = {};
  function d3_geom_pointX(d) {
    return d[0];
  }
  function d3_geom_pointY(d) {
    return d[1];
  }
  d3.geom.hull = function(vertices) {
    var x = d3_geom_pointX, y = d3_geom_pointY;
    if (arguments.length) return hull(vertices);
    function hull(data) {
      if (data.length < 3) return [];
      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
      for (i = 0; i < n; i++) {
        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
      }
      points.sort(d3_geom_hullOrder);
      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
      return polygon;
    }
    hull.x = function(_) {
      return arguments.length ? (x = _, hull) : x;
    };
    hull.y = function(_) {
      return arguments.length ? (y = _, hull) : y;
    };
    return hull;
  };
  function d3_geom_hullUpper(points) {
    var n = points.length, hull = [ 0, 1 ], hs = 2;
    for (var i = 2; i < n; i++) {
      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
      hull[hs++] = i;
    }
    return hull.slice(0, hs);
  }
  function d3_geom_hullOrder(a, b) {
    return a[0] - b[0] || a[1] - b[1];
  }
  d3.geom.polygon = function(coordinates) {
    d3_subclass(coordinates, d3_geom_polygonPrototype);
    return coordinates;
  };
  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
  d3_geom_polygonPrototype.area = function() {
    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
    while (++i < n) {
      a = b;
      b = this[i];
      area += a[1] * b[0] - a[0] * b[1];
    }
    return area * .5;
  };
  d3_geom_polygonPrototype.centroid = function(k) {
    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
    if (!arguments.length) k = -1 / (6 * this.area());
    while (++i < n) {
      a = b;
      b = this[i];
      c = a[0] * b[1] - b[0] * a[1];
      x += (a[0] + b[0]) * c;
      y += (a[1] + b[1]) * c;
    }
    return [ x * k, y * k ];
  };
  d3_geom_polygonPrototype.clip = function(subject) {
    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
    while (++i < n) {
      input = subject.slice();
      subject.length = 0;
      b = this[i];
      c = input[(m = input.length - closed) - 1];
      j = -1;
      while (++j < m) {
        d = input[j];
        if (d3_geom_polygonInside(d, a, b)) {
          if (!d3_geom_polygonInside(c, a, b)) {
            subject.push(d3_geom_polygonIntersect(c, d, a, b));
          }
          subject.push(d);
        } else if (d3_geom_polygonInside(c, a, b)) {
          subject.push(d3_geom_polygonIntersect(c, d, a, b));
        }
        c = d;
      }
      if (closed) subject.push(subject[0]);
      a = b;
    }
    return subject;
  };
  function d3_geom_polygonInside(p, a, b) {
    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
  }
  function d3_geom_polygonIntersect(c, d, a, b) {
    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
    return [ x1 + ua * x21, y1 + ua * y21 ];
  }
  function d3_geom_polygonClosed(coordinates) {
    var a = coordinates[0], b = coordinates[coordinates.length - 1];
    return !(a[0] - b[0] || a[1] - b[1]);
  }
  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
  function d3_geom_voronoiBeach() {
    d3_geom_voronoiRedBlackNode(this);
    this.edge = this.site = this.circle = null;
  }
  function d3_geom_voronoiCreateBeach(site) {
    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
    beach.site = site;
    return beach;
  }
  function d3_geom_voronoiDetachBeach(beach) {
    d3_geom_voronoiDetachCircle(beach);
    d3_geom_voronoiBeaches.remove(beach);
    d3_geom_voronoiBeachPool.push(beach);
    d3_geom_voronoiRedBlackNode(beach);
  }
  function d3_geom_voronoiRemoveBeach(beach) {
    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
      x: x,
      y: y
    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
    d3_geom_voronoiDetachBeach(beach);
    var lArc = previous;
    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
      previous = lArc.P;
      disappearing.unshift(lArc);
      d3_geom_voronoiDetachBeach(lArc);
      lArc = previous;
    }
    disappearing.unshift(lArc);
    d3_geom_voronoiDetachCircle(lArc);
    var rArc = next;
    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
      next = rArc.N;
      disappearing.push(rArc);
      d3_geom_voronoiDetachBeach(rArc);
      rArc = next;
    }
    disappearing.push(rArc);
    d3_geom_voronoiDetachCircle(rArc);
    var nArcs = disappearing.length, iArc;
    for (iArc = 1; iArc < nArcs; ++iArc) {
      rArc = disappearing[iArc];
      lArc = disappearing[iArc - 1];
      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
    }
    lArc = disappearing[0];
    rArc = disappearing[nArcs - 1];
    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiAddBeach(site) {
    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
    while (node) {
      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
      if (dxl > ε) node = node.L; else {
        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
        if (dxr > ε) {
          if (!node.R) {
            lArc = node;
            break;
          }
          node = node.R;
        } else {
          if (dxl > -ε) {
            lArc = node.P;
            rArc = node;
          } else if (dxr > -ε) {
            lArc = node;
            rArc = node.N;
          } else {
            lArc = rArc = node;
          }
          break;
        }
      }
    }
    var newArc = d3_geom_voronoiCreateBeach(site);
    d3_geom_voronoiBeaches.insert(lArc, newArc);
    if (!lArc && !rArc) return;
    if (lArc === rArc) {
      d3_geom_voronoiDetachCircle(lArc);
      rArc = d3_geom_voronoiCreateBeach(lArc.site);
      d3_geom_voronoiBeaches.insert(newArc, rArc);
      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      d3_geom_voronoiAttachCircle(lArc);
      d3_geom_voronoiAttachCircle(rArc);
      return;
    }
    if (!rArc) {
      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      return;
    }
    d3_geom_voronoiDetachCircle(lArc);
    d3_geom_voronoiDetachCircle(rArc);
    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
      x: (cy * hb - by * hc) / d + ax,
      y: (bx * hc - cx * hb) / d + ay
    };
    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
    if (!pby2) return rfocx;
    var lArc = arc.P;
    if (!lArc) return -Infinity;
    site = lArc.site;
    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
    if (!plby2) return lfocx;
    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
    return (rfocx + lfocx) / 2;
  }
  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
    var rArc = arc.N;
    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
    var site = arc.site;
    return site.y === directrix ? site.x : Infinity;
  }
  function d3_geom_voronoiCell(site) {
    this.site = site;
    this.edges = [];
  }
  d3_geom_voronoiCell.prototype.prepare = function() {
    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
    while (iHalfEdge--) {
      edge = halfEdges[iHalfEdge].edge;
      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
    }
    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
    return halfEdges.length;
  };
  function d3_geom_voronoiCloseCells(extent) {
    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
    while (iCell--) {
      cell = cells[iCell];
      if (!cell || !cell.prepare()) continue;
      halfEdges = cell.edges;
      nHalfEdges = halfEdges.length;
      iHalfEdge = 0;
      while (iHalfEdge < nHalfEdges) {
        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
            x: x0,
            y: abs(x2 - x0) < ε ? y2 : y1
          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
            x: abs(y2 - y1) < ε ? x2 : x1,
            y: y1
          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
            x: x1,
            y: abs(x2 - x1) < ε ? y2 : y0
          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
            x: abs(y2 - y0) < ε ? x2 : x0,
            y: y0
          } : null), cell.site, null));
          ++nHalfEdges;
        }
      }
    }
  }
  function d3_geom_voronoiHalfEdgeOrder(a, b) {
    return b.angle - a.angle;
  }
  function d3_geom_voronoiCircle() {
    d3_geom_voronoiRedBlackNode(this);
    this.x = this.y = this.arc = this.site = this.cy = null;
  }
  function d3_geom_voronoiAttachCircle(arc) {
    var lArc = arc.P, rArc = arc.N;
    if (!lArc || !rArc) return;
    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
    if (lSite === rSite) return;
    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
    var d = 2 * (ax * cy - ay * cx);
    if (d >= -ε2) return;
    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
    circle.arc = arc;
    circle.site = cSite;
    circle.x = x + bx;
    circle.y = cy + Math.sqrt(x * x + y * y);
    circle.cy = cy;
    arc.circle = circle;
    var before = null, node = d3_geom_voronoiCircles._;
    while (node) {
      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
        if (node.L) node = node.L; else {
          before = node.P;
          break;
        }
      } else {
        if (node.R) node = node.R; else {
          before = node;
          break;
        }
      }
    }
    d3_geom_voronoiCircles.insert(before, circle);
    if (!before) d3_geom_voronoiFirstCircle = circle;
  }
  function d3_geom_voronoiDetachCircle(arc) {
    var circle = arc.circle;
    if (circle) {
      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
      d3_geom_voronoiCircles.remove(circle);
      d3_geom_voronoiCirclePool.push(circle);
      d3_geom_voronoiRedBlackNode(circle);
      arc.circle = null;
    }
  }
  function d3_geom_voronoiClipEdges(extent) {
    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
    while (i--) {
      e = edges[i];
      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
        e.a = e.b = null;
        edges.splice(i, 1);
      }
    }
  }
  function d3_geom_voronoiConnectEdge(edge, extent) {
    var vb = edge.b;
    if (vb) return true;
    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
    if (ry === ly) {
      if (fx < x0 || fx >= x1) return;
      if (lx > rx) {
        if (!va) va = {
          x: fx,
          y: y0
        }; else if (va.y >= y1) return;
        vb = {
          x: fx,
          y: y1
        };
      } else {
        if (!va) va = {
          x: fx,
          y: y1
        }; else if (va.y < y0) return;
        vb = {
          x: fx,
          y: y0
        };
      }
    } else {
      fm = (lx - rx) / (ry - ly);
      fb = fy - fm * fx;
      if (fm < -1 || fm > 1) {
        if (lx > rx) {
          if (!va) va = {
            x: (y0 - fb) / fm,
            y: y0
          }; else if (va.y >= y1) return;
          vb = {
            x: (y1 - fb) / fm,
            y: y1
          };
        } else {
          if (!va) va = {
            x: (y1 - fb) / fm,
            y: y1
          }; else if (va.y < y0) return;
          vb = {
            x: (y0 - fb) / fm,
            y: y0
          };
        }
      } else {
        if (ly < ry) {
          if (!va) va = {
            x: x0,
            y: fm * x0 + fb
          }; else if (va.x >= x1) return;
          vb = {
            x: x1,
            y: fm * x1 + fb
          };
        } else {
          if (!va) va = {
            x: x1,
            y: fm * x1 + fb
          }; else if (va.x < x0) return;
          vb = {
            x: x0,
            y: fm * x0 + fb
          };
        }
      }
    }
    edge.a = va;
    edge.b = vb;
    return true;
  }
  function d3_geom_voronoiEdge(lSite, rSite) {
    this.l = lSite;
    this.r = rSite;
    this.a = this.b = null;
  }
  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, rSite);
    d3_geom_voronoiEdges.push(edge);
    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
    return edge;
  }
  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, null);
    edge.a = va;
    edge.b = vb;
    d3_geom_voronoiEdges.push(edge);
    return edge;
  }
  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
    if (!edge.a && !edge.b) {
      edge.a = vertex;
      edge.l = lSite;
      edge.r = rSite;
    } else if (edge.l === rSite) {
      edge.b = vertex;
    } else {
      edge.a = vertex;
    }
  }
  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
    var va = edge.a, vb = edge.b;
    this.edge = edge;
    this.site = lSite;
    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
  }
  d3_geom_voronoiHalfEdge.prototype = {
    start: function() {
      return this.edge.l === this.site ? this.edge.a : this.edge.b;
    },
    end: function() {
      return this.edge.l === this.site ? this.edge.b : this.edge.a;
    }
  };
  function d3_geom_voronoiRedBlackTree() {
    this._ = null;
  }
  function d3_geom_voronoiRedBlackNode(node) {
    node.U = node.C = node.L = node.R = node.P = node.N = null;
  }
  d3_geom_voronoiRedBlackTree.prototype = {
    insert: function(after, node) {
      var parent, grandpa, uncle;
      if (after) {
        node.P = after;
        node.N = after.N;
        if (after.N) after.N.P = node;
        after.N = node;
        if (after.R) {
          after = after.R;
          while (after.L) after = after.L;
          after.L = node;
        } else {
          after.R = node;
        }
        parent = after;
      } else if (this._) {
        after = d3_geom_voronoiRedBlackFirst(this._);
        node.P = null;
        node.N = after;
        after.P = after.L = node;
        parent = after;
      } else {
        node.P = node.N = null;
        this._ = node;
        parent = null;
      }
      node.L = node.R = null;
      node.U = parent;
      node.C = true;
      after = node;
      while (parent && parent.C) {
        grandpa = parent.U;
        if (parent === grandpa.L) {
          uncle = grandpa.R;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.R) {
              d3_geom_voronoiRedBlackRotateLeft(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
          }
        } else {
          uncle = grandpa.L;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.L) {
              d3_geom_voronoiRedBlackRotateRight(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
          }
        }
        parent = after.U;
      }
      this._.C = false;
    },
    remove: function(node) {
      if (node.N) node.N.P = node.P;
      if (node.P) node.P.N = node.N;
      node.N = node.P = null;
      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
      if (parent) {
        if (parent.L === node) parent.L = next; else parent.R = next;
      } else {
        this._ = next;
      }
      if (left && right) {
        red = next.C;
        next.C = node.C;
        next.L = left;
        left.U = next;
        if (next !== right) {
          parent = next.U;
          next.U = node.U;
          node = next.R;
          parent.L = node;
          next.R = right;
          right.U = next;
        } else {
          next.U = parent;
          parent = next;
          node = next.R;
        }
      } else {
        red = node.C;
        node = next;
      }
      if (node) node.U = parent;
      if (red) return;
      if (node && node.C) {
        node.C = false;
        return;
      }
      do {
        if (node === this._) break;
        if (node === parent.L) {
          sibling = parent.R;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            sibling = parent.R;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.R || !sibling.R.C) {
              sibling.L.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateRight(this, sibling);
              sibling = parent.R;
            }
            sibling.C = parent.C;
            parent.C = sibling.R.C = false;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            node = this._;
            break;
          }
        } else {
          sibling = parent.L;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            sibling = parent.L;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.L || !sibling.L.C) {
              sibling.R.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
              sibling = parent.L;
            }
            sibling.C = parent.C;
            parent.C = sibling.L.C = false;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            node = this._;
            break;
          }
        }
        sibling.C = true;
        node = parent;
        parent = parent.U;
      } while (!node.C);
      if (node) node.C = false;
    }
  };
  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
    var p = node, q = node.R, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.R = q.L;
    if (p.R) p.R.U = p;
    q.L = p;
  }
  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
    var p = node, q = node.L, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.L = q.R;
    if (p.L) p.L.U = p;
    q.R = p;
  }
  function d3_geom_voronoiRedBlackFirst(node) {
    while (node.L) node = node.L;
    return node;
  }
  function d3_geom_voronoi(sites, bbox) {
    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
    d3_geom_voronoiEdges = [];
    d3_geom_voronoiCells = new Array(sites.length);
    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
    while (true) {
      circle = d3_geom_voronoiFirstCircle;
      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
        if (site.x !== x0 || site.y !== y0) {
          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
          d3_geom_voronoiAddBeach(site);
          x0 = site.x, y0 = site.y;
        }
        site = sites.pop();
      } else if (circle) {
        d3_geom_voronoiRemoveBeach(circle.arc);
      } else {
        break;
      }
    }
    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
    var diagram = {
      cells: d3_geom_voronoiCells,
      edges: d3_geom_voronoiEdges
    };
    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
    return diagram;
  }
  function d3_geom_voronoiVertexOrder(a, b) {
    return b.y - a.y || b.x - a.x;
  }
  d3.geom.voronoi = function(points) {
    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
    if (points) return voronoi(points);
    function voronoi(data) {
      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
          var s = e.start();
          return [ s.x, s.y ];
        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
        polygon.point = data[i];
      });
      return polygons;
    }
    function sites(data) {
      return data.map(function(d, i) {
        return {
          x: Math.round(fx(d, i) / ε) * ε,
          y: Math.round(fy(d, i) / ε) * ε,
          i: i
        };
      });
    }
    voronoi.links = function(data) {
      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
        return edge.l && edge.r;
      }).map(function(edge) {
        return {
          source: data[edge.l.i],
          target: data[edge.r.i]
        };
      });
    };
    voronoi.triangles = function(data) {
      var triangles = [];
      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
        while (++j < m) {
          e0 = e1;
          s0 = s1;
          e1 = edges[j].edge;
          s1 = e1.l === site ? e1.r : e1.l;
          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
          }
        }
      });
      return triangles;
    };
    voronoi.x = function(_) {
      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
    };
    voronoi.y = function(_) {
      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
    };
    voronoi.clipExtent = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
      return voronoi;
    };
    voronoi.size = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
    };
    return voronoi;
  };
  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
  function d3_geom_voronoiTriangleArea(a, b, c) {
    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
  }
  d3.geom.delaunay = function(vertices) {
    return d3.geom.voronoi().triangles(vertices);
  };
  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
    if (compat = arguments.length) {
      x = d3_geom_quadtreeCompatX;
      y = d3_geom_quadtreeCompatY;
      if (compat === 3) {
        y2 = y1;
        x2 = x1;
        y1 = x1 = 0;
      }
      return quadtree(points);
    }
    function quadtree(data) {
      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
      if (x1 != null) {
        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
      } else {
        x2_ = y2_ = -(x1_ = y1_ = Infinity);
        xs = [], ys = [];
        n = data.length;
        if (compat) for (i = 0; i < n; ++i) {
          d = data[i];
          if (d.x < x1_) x1_ = d.x;
          if (d.y < y1_) y1_ = d.y;
          if (d.x > x2_) x2_ = d.x;
          if (d.y > y2_) y2_ = d.y;
          xs.push(d.x);
          ys.push(d.y);
        } else for (i = 0; i < n; ++i) {
          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
          if (x_ < x1_) x1_ = x_;
          if (y_ < y1_) y1_ = y_;
          if (x_ > x2_) x2_ = x_;
          if (y_ > y2_) y2_ = y_;
          xs.push(x_);
          ys.push(y_);
        }
      }
      var dx = x2_ - x1_, dy = y2_ - y1_;
      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
      function insert(n, d, x, y, x1, y1, x2, y2) {
        // n => node
        // d => data
        // xy => coordinates
        //x1y1x2y2 => extent
        // la racine est une feuille par défaut
        if (isNaN(x) || isNaN(y)) return;
        //si le point est une feuille
        if (n.leaf) {
          var nx = n.x, ny = n.y;
          // est-ce que la feuille a un point ?
          if (nx != null) {
            //oui, checke la distance, ça c'est bizarre ?
            if (abs(nx - x) + abs(ny - y) < .01) {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            } else {
              //nPoint = coordonée du point du noeud, qui va gicler un niveau plus bas du coup
              var nPoint = n.point;
              // ce noeud n'a plus de point
              n.x = n.y = n.point = null;
              // on insère un nouvel enfant avec l'ancien point
              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          } else {
            // c'est une feuille, elle est vide, on peut mettre le point
            n.x = x, n.y = y, n.point = d;
          }
        } else {
          //c'est pas une feuille, il faut continuer plus bas
          insertChild(n, d, x, y, x1, y1, x2, y2);
        }
      }
      function insertChild(n, d, x, y, x1, y1, x2, y2) {
        //insére un noeud enfant dans le noeud n
        // on checke ou est le point
        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;
        // le noeud qui était une feuille ne l'est plus
        n.leaf = false;
        //on prend le bon noeud parmi les 4 (NW/NE/SW/SE) // si il y a pas ,on en crée un nouveau
        //i est un des 4 noeuds

        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode(n,i));
        //si on est à droite on change l'extent comme il faut
        //si on est à gauche, de même
        if (right) x1 = sx; else x2 = sx;
        if (bottom) y1 = sy; else y2 = sy;
        // et on insére un point dans le noeud ou on est
        insert(n, d, x, y, x1, y1, x2, y2);
      }
      var root = d3_geom_quadtreeNode();
      root.add = function(d) {
        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
      };
      root.visit = function(f) {
        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
      };
      i = -1;
      if (x1 == null) {
        while (++i < n) {
          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
        }
        --i;
      } else data.forEach(root.add);
      xs = ys = data = d = null;

      root.delete = function (n) {
      //remove the node from the parent

      // stop when we got root node

        n.point = null;
        n.x = null;
        n.y = null;
        if(!n.parent) return;

        var empty = true;
        console.log("DELETING", n,n.parentIndex);
        n.parent.nodes[n.parentIndex]= null;

        for  (var _i=0;_i<n.parent.nodes.length;_i++) {

          if (n.parent.nodes[_i] == null ) {
            // le parent a pas de noeud
          } else {

             if  (n.parent.nodes[_i].point != null || !n.parent.nodes[_i].leaf) empty = false;
             console.log('NOT NULL',n.parent.nodes[_i].nodes,n.parent.nodes[_i].point,empty)
          }
        }

        if (false) {
          //collapse parent node
          n.parent.leaf = true;
          console.log("COLLAPSED",n.parent.nodes);
          n.parent.nodes = [];
          //n.parent.point = null;
          console.log('SWICH TO ',n.parent);
          this.delete(n.parent);
        }
      }

      return root;
    }


    quadtree.x = function(_) {
      return arguments.length ? (x = _, quadtree) : x;
    };
    quadtree.y = function(_) {
      return arguments.length ? (y = _, quadtree) : y;
    };
    quadtree.extent = function(_) {
      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0],
      y2 = +_[1][1];
      return quadtree;
    };
    quadtree.size = function(_) {
      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
      return quadtree;
    };
    return quadtree;
  };
  function d3_geom_quadtreeCompatX(d) {
    return d.x;
  }
  function d3_geom_quadtreeCompatY(d) {
    return d.y;
  }
  function d3_geom_quadtreeNode(n,i) {
    return {
      leaf: true,
      nodes: [],
      point: null,
      x: null,
      y: null,
      parent: n,
      parentIndex:i
    };
  }
  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
    if (!f(node, x1, y1, x2, y2)) {
      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
    }
  }
  d3.interpolateRgb = d3_interpolateRgb;
  function d3_interpolateRgb(a, b) {
    a = d3.rgb(a);
    b = d3.rgb(b);
    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
    return function(t) {
      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
    };
  }
  d3.interpolateObject = d3_interpolateObject;
  function d3_interpolateObject(a, b) {
    var i = {}, c = {}, k;
    for (k in a) {
      if (k in b) {
        i[k] = d3_interpolate(a[k], b[k]);
      } else {
        c[k] = a[k];
      }
    }
    for (k in b) {
      if (!(k in a)) {
        c[k] = b[k];
      }
    }
    return function(t) {
      for (k in i) c[k] = i[k](t);
      return c;
    };
  }
  d3.interpolateNumber = d3_interpolateNumber;
  function d3_interpolateNumber(a, b) {
    b -= a = +a;
    return function(t) {
      return a + b * t;
    };
  }
  d3.interpolateString = d3_interpolateString;
  function d3_interpolateString(a, b) {
    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
    a = a + "", b = b + "";
    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.substring(bi, bs);
        if (s[i]) s[i] += bs; else s[++i] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i]) s[i] += bm; else s[++i] = bm;
      } else {
        s[++i] = null;
        q.push({
          i: i,
          x: d3_interpolateNumber(am, bm)
        });
      }
      bi = d3_interpolate_numberB.lastIndex;
    }
    if (bi < b.length) {
      bs = b.substring(bi);
      if (s[i]) s[i] += bs; else s[++i] = bs;
    }
    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
      return b(t) + "";
    }) : function() {
      return b;
    } : (b = q.length, function(t) {
      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    });
  }
  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
  d3.interpolate = d3_interpolate;
  function d3_interpolate(a, b) {
    var i = d3.interpolators.length, f;
    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
    return f;
  }
  d3.interpolators = [ function(a, b) {
    var t = typeof b;
    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
  } ];
  d3.interpolateArray = d3_interpolateArray;
  function d3_interpolateArray(a, b) {
    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
    for (;i < na; ++i) c[i] = a[i];
    for (;i < nb; ++i) c[i] = b[i];
    return function(t) {
      for (i = 0; i < n0; ++i) c[i] = x[i](t);
      return c;
    };
  }
  var d3_ease_default = function() {
    return d3_identity;
  };
  var d3_ease = d3.map({
    linear: d3_ease_default,
    poly: d3_ease_poly,
    quad: function() {
      return d3_ease_quad;
    },
    cubic: function() {
      return d3_ease_cubic;
    },
    sin: function() {
      return d3_ease_sin;
    },
    exp: function() {
      return d3_ease_exp;
    },
    circle: function() {
      return d3_ease_circle;
    },
    elastic: d3_ease_elastic,
    back: d3_ease_back,
    bounce: function() {
      return d3_ease_bounce;
    }
  });
  var d3_ease_mode = d3.map({
    "in": d3_identity,
    out: d3_ease_reverse,
    "in-out": d3_ease_reflect,
    "out-in": function(f) {
      return d3_ease_reflect(d3_ease_reverse(f));
    }
  });
  d3.ease = function(name) {
    var i = name.indexOf("-"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : "in";
    t = d3_ease.get(t) || d3_ease_default;
    m = d3_ease_mode.get(m) || d3_identity;
    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
  };
  function d3_ease_clamp(f) {
    return function(t) {
      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
    };
  }
  function d3_ease_reverse(f) {
    return function(t) {
      return 1 - f(1 - t);
    };
  }
  function d3_ease_reflect(f) {
    return function(t) {
      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
    };
  }
  function d3_ease_quad(t) {
    return t * t;
  }
  function d3_ease_cubic(t) {
    return t * t * t;
  }
  function d3_ease_cubicInOut(t) {
    if (t <= 0) return 0;
    if (t >= 1) return 1;
    var t2 = t * t, t3 = t2 * t;
    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
  }
  function d3_ease_poly(e) {
    return function(t) {
      return Math.pow(t, e);
    };
  }
  function d3_ease_sin(t) {
    return 1 - Math.cos(t * halfπ);
  }
  function d3_ease_exp(t) {
    return Math.pow(2, 10 * (t - 1));
  }
  function d3_ease_circle(t) {
    return 1 - Math.sqrt(1 - t * t);
  }
  function d3_ease_elastic(a, p) {
    var s;
    if (arguments.length < 2) p = .45;
    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
    return function(t) {
      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
    };
  }
  function d3_ease_back(s) {
    if (!s) s = 1.70158;
    return function(t) {
      return t * t * ((s + 1) * t - s);
    };
  }
  function d3_ease_bounce(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
  }
  d3.interpolateHcl = d3_interpolateHcl;
  function d3_interpolateHcl(a, b) {
    a = d3.hcl(a);
    b = d3.hcl(b);
    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
    };
  }
  d3.interpolateHsl = d3_interpolateHsl;
  function d3_interpolateHsl(a, b) {
    a = d3.hsl(a);
    b = d3.hsl(b);
    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
    };
  }
  d3.interpolateLab = d3_interpolateLab;
  function d3_interpolateLab(a, b) {
    a = d3.lab(a);
    b = d3.lab(b);
    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
    return function(t) {
      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
    };
  }
  d3.interpolateRound = d3_interpolateRound;
  function d3_interpolateRound(a, b) {
    b -= a;
    return function(t) {
      return Math.round(a + b * t);
    };
  }
  d3.transform = function(string) {
    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
    return (d3.transform = function(string) {
      if (string != null) {
        g.setAttribute("transform", string);
        var t = g.transform.baseVal.consolidate();
      }
      return new d3_transform(t ? t.matrix : d3_transformIdentity);
    })(string);
  };
  function d3_transform(m) {
    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
    if (r0[0] * r1[1] < r1[0] * r0[1]) {
      r0[0] *= -1;
      r0[1] *= -1;
      kx *= -1;
      kz *= -1;
    }
    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
    this.translate = [ m.e, m.f ];
    this.scale = [ kx, ky ];
    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
  }
  d3_transform.prototype.toString = function() {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };
  function d3_transformDot(a, b) {
    return a[0] * b[0] + a[1] * b[1];
  }
  function d3_transformNormalize(a) {
    var k = Math.sqrt(d3_transformDot(a, a));
    if (k) {
      a[0] /= k;
      a[1] /= k;
    }
    return k;
  }
  function d3_transformCombine(a, b, k) {
    a[0] += k * b[0];
    a[1] += k * b[1];
    return a;
  }
  var d3_transformIdentity = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  d3.interpolateTransform = d3_interpolateTransform;
  function d3_interpolateTransform(a, b) {
    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
    if (ta[0] != tb[0] || ta[1] != tb[1]) {
      s.push("translate(", null, ",", null, ")");
      q.push({
        i: 1,
        x: d3_interpolateNumber(ta[0], tb[0])
      }, {
        i: 3,
        x: d3_interpolateNumber(ta[1], tb[1])
      });
    } else if (tb[0] || tb[1]) {
      s.push("translate(" + tb + ")");
    } else {
      s.push("");
    }
    if (ra != rb) {
      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
      q.push({
        i: s.push(s.pop() + "rotate(", null, ")") - 2,
        x: d3_interpolateNumber(ra, rb)
      });
    } else if (rb) {
      s.push(s.pop() + "rotate(" + rb + ")");
    }
    if (wa != wb) {
      q.push({
        i: s.push(s.pop() + "skewX(", null, ")") - 2,
        x: d3_interpolateNumber(wa, wb)
      });
    } else if (wb) {
      s.push(s.pop() + "skewX(" + wb + ")");
    }
    if (ka[0] != kb[0] || ka[1] != kb[1]) {
      n = s.push(s.pop() + "scale(", null, ",", null, ")");
      q.push({
        i: n - 4,
        x: d3_interpolateNumber(ka[0], kb[0])
      }, {
        i: n - 2,
        x: d3_interpolateNumber(ka[1], kb[1])
      });
    } else if (kb[0] != 1 || kb[1] != 1) {
      s.push(s.pop() + "scale(" + kb + ")");
    }
    n = q.length;
    return function(t) {
      var i = -1, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  }
  function d3_uninterpolateNumber(a, b) {
    b = b - (a = +a) ? 1 / (b - a) : 0;
    return function(x) {
      return (x - a) * b;
    };
  }
  function d3_uninterpolateClamp(a, b) {
    b = b - (a = +a) ? 1 / (b - a) : 0;
    return function(x) {
      return Math.max(0, Math.min(1, (x - a) * b));
    };
  }
  d3.layout = {};
  d3.layout.bundle = function() {
    return function(links) {
      var paths = [], i = -1, n = links.length;
      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
      return paths;
    };
  };
  function d3_layout_bundlePath(link) {
    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
    while (start !== lca) {
      start = start.parent;
      points.push(start);
    }
    var k = points.length;
    while (end !== lca) {
      points.splice(k, 0, end);
      end = end.parent;
    }
    return points;
  }
  function d3_layout_bundleAncestors(node) {
    var ancestors = [], parent = node.parent;
    while (parent != null) {
      ancestors.push(node);
      node = parent;
      parent = parent.parent;
    }
    ancestors.push(node);
    return ancestors;
  }
  function d3_layout_bundleLeastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
    while (aNode === bNode) {
      sharedNode = aNode;
      aNode = aNodes.pop();
      bNode = bNodes.pop();
    }
    return sharedNode;
  }
  d3.layout.chord = function() {
    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
    function relayout() {
      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
      chords = [];
      groups = [];
      k = 0, i = -1;
      while (++i < n) {
        x = 0, j = -1;
        while (++j < n) {
          x += matrix[i][j];
        }
        groupSums.push(x);
        subgroupIndex.push(d3.range(n));
        k += x;
      }
      if (sortGroups) {
        groupIndex.sort(function(a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });
      }
      if (sortSubgroups) {
        subgroupIndex.forEach(function(d, i) {
          d.sort(function(a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });
      }
      k = (τ - padding * n) / k;
      x = 0, i = -1;
      while (++i < n) {
        x0 = x, j = -1;
        while (++j < n) {
          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
          subgroups[di + "-" + dj] = {
            index: di,
            subindex: dj,
            startAngle: a0,
            endAngle: a1,
            value: v
          };
        }
        groups[di] = {
          index: di,
          startAngle: x0,
          endAngle: x,
          value: (x - x0) / k
        };
        x += padding;
      }
      i = -1;
      while (++i < n) {
        j = i - 1;
        while (++j < n) {
          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
          if (source.value || target.value) {
            chords.push(source.value < target.value ? {
              source: target,
              target: source
            } : {
              source: source,
              target: target
            });
          }
        }
      }
      if (sortChords) resort();
    }
    function resort() {
      chords.sort(function(a, b) {
        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
      });
    }
    chord.matrix = function(x) {
      if (!arguments.length) return matrix;
      n = (matrix = x) && matrix.length;
      chords = groups = null;
      return chord;
    };
    chord.padding = function(x) {
      if (!arguments.length) return padding;
      padding = x;
      chords = groups = null;
      return chord;
    };
    chord.sortGroups = function(x) {
      if (!arguments.length) return sortGroups;
      sortGroups = x;
      chords = groups = null;
      return chord;
    };
    chord.sortSubgroups = function(x) {
      if (!arguments.length) return sortSubgroups;
      sortSubgroups = x;
      chords = null;
      return chord;
    };
    chord.sortChords = function(x) {
      if (!arguments.length) return sortChords;
      sortChords = x;
      if (chords) resort();
      return chord;
    };
    chord.chords = function() {
      if (!chords) relayout();
      return chords;
    };
    chord.groups = function() {
      if (!groups) relayout();
      return groups;
    };
    return chord;
  };
  d3.layout.force = function() {
    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
    function repulse(node) {
      return function(quad, x1, _, x2) {
        if (quad.point !== node) {
          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
          if (dw * dw / theta2 < dn) {
            if (dn < chargeDistance2) {
              var k = quad.charge / dn;
              node.px -= dx * k;
              node.py -= dy * k;
            }
            return true;
          }
          if (quad.point && dn && dn < chargeDistance2) {
            var k = quad.pointCharge / dn;
            node.px -= dx * k;
            node.py -= dy * k;
          }
        }
        return !quad.charge;
      };
    }
    force.tick = function() {
      if ((alpha *= .99) < .005) {
        event.end({
          type: "end",
          alpha: alpha = 0
        });
        return true;
      }
      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
      for (i = 0; i < m; ++i) {
        o = links[i];
        s = o.source;
        t = o.target;
        x = t.x - s.x;
        y = t.y - s.y;
        if (l = x * x + y * y) {
          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
          x *= l;
          y *= l;
          t.x -= x * (k = s.weight / (t.weight + s.weight));
          t.y -= y * k;
          s.x += x * (k = 1 - k);
          s.y += y * k;
        }
      }
      if (k = alpha * gravity) {
        x = size[0] / 2;
        y = size[1] / 2;
        i = -1;
        if (k) while (++i < n) {
          o = nodes[i];
          o.x += (x - o.x) * k;
          o.y += (y - o.y) * k;
        }
      }
      if (charge) {
        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
        i = -1;
        while (++i < n) {
          if (!(o = nodes[i]).fixed) {
            q.visit(repulse(o));
          }
        }
      }
      i = -1;
      while (++i < n) {
        o = nodes[i];
        if (o.fixed) {
          o.x = o.px;
          o.y = o.py;
        } else {
          o.x -= (o.px - (o.px = o.x)) * friction;
          o.y -= (o.py - (o.py = o.y)) * friction;
        }
      }
      event.tick({
        type: "tick",
        alpha: alpha
      });
    };
    force.nodes = function(x) {
      if (!arguments.length) return nodes;
      nodes = x;
      return force;
    };
    force.links = function(x) {
      if (!arguments.length) return links;
      links = x;
      return force;
    };
    force.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return force;
    };
    force.linkDistance = function(x) {
      if (!arguments.length) return linkDistance;
      linkDistance = typeof x === "function" ? x : +x;
      return force;
    };
    force.distance = force.linkDistance;
    force.linkStrength = function(x) {
      if (!arguments.length) return linkStrength;
      linkStrength = typeof x === "function" ? x : +x;
      return force;
    };
    force.friction = function(x) {
      if (!arguments.length) return friction;
      friction = +x;
      return force;
    };
    force.charge = function(x) {
      if (!arguments.length) return charge;
      charge = typeof x === "function" ? x : +x;
      return force;
    };
    force.chargeDistance = function(x) {
      if (!arguments.length) return Math.sqrt(chargeDistance2);
      chargeDistance2 = x * x;
      return force;
    };
    force.gravity = function(x) {
      if (!arguments.length) return gravity;
      gravity = +x;
      return force;
    };
    force.theta = function(x) {
      if (!arguments.length) return Math.sqrt(theta2);
      theta2 = x * x;
      return force;
    };
    force.alpha = function(x) {
      if (!arguments.length) return alpha;
      x = +x;
      if (alpha) {
        if (x > 0) alpha = x; else alpha = 0;
      } else if (x > 0) {
        event.start({
          type: "start",
          alpha: alpha = x
        });
        d3.timer(force.tick);
      }
      return force;
    };
    force.start = function() {
      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
      for (i = 0; i < n; ++i) {
        (o = nodes[i]).index = i;
        o.weight = 0;
      }
      for (i = 0; i < m; ++i) {
        o = links[i];
        if (typeof o.source == "number") o.source = nodes[o.source];
        if (typeof o.target == "number") o.target = nodes[o.target];
        ++o.source.weight;
        ++o.target.weight;
      }
      for (i = 0; i < n; ++i) {
        o = nodes[i];
        if (isNaN(o.x)) o.x = position("x", w);
        if (isNaN(o.y)) o.y = position("y", h);
        if (isNaN(o.px)) o.px = o.x;
        if (isNaN(o.py)) o.py = o.y;
      }
      distances = [];
      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
      strengths = [];
      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
      charges = [];
      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
      function position(dimension, size) {
        if (!neighbors) {
          neighbors = new Array(n);
          for (j = 0; j < n; ++j) {
            neighbors[j] = [];
          }
          for (j = 0; j < m; ++j) {
            var o = links[j];
            neighbors[o.source.index].push(o.target);
            neighbors[o.target.index].push(o.source);
          }
        }
        var candidates = neighbors[i], j = -1, m = candidates.length, x;
        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;
        return Math.random() * size;
      }
      return force.resume();
    };
    force.resume = function() {
      return force.alpha(.1);
    };
    force.stop = function() {
      return force.alpha(0);
    };
    force.drag = function() {
      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
      if (!arguments.length) return drag;
      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
    };
    function dragmove(d) {
      d.px = d3.event.x, d.py = d3.event.y;
      force.resume();
    }
    return d3.rebind(force, event, "on");
  };
  function d3_layout_forceDragstart(d) {
    d.fixed |= 2;
  }
  function d3_layout_forceDragend(d) {
    d.fixed &= ~6;
  }
  function d3_layout_forceMouseover(d) {
    d.fixed |= 4;
    d.px = d.x, d.py = d.y;
  }
  function d3_layout_forceMouseout(d) {
    d.fixed &= ~4;
  }
  function d3_layout_forceAccumulate(quad, alpha, charges) {
    var cx = 0, cy = 0;
    quad.charge = 0;
    if (!quad.leaf) {
      var nodes = quad.nodes, n = nodes.length, i = -1, c;
      while (++i < n) {
        c = nodes[i];
        if (c == null) continue;
        d3_layout_forceAccumulate(c, alpha, charges);
        quad.charge += c.charge;
        cx += c.charge * c.cx;
        cy += c.charge * c.cy;
      }
    }
    if (quad.point) {
      if (!quad.leaf) {
        quad.point.x += Math.random() - .5;
        quad.point.y += Math.random() - .5;
      }
      var k = alpha * charges[quad.point.index];
      quad.charge += quad.pointCharge = k;
      cx += k * quad.point.x;
      cy += k * quad.point.y;
    }
    quad.cx = cx / quad.charge;
    quad.cy = cy / quad.charge;
  }
  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
  d3.layout.hierarchy = function() {
    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
    function hierarchy(root) {
      var stack = [ root ], nodes = [], node;
      root.depth = 0;
      while ((node = stack.pop()) != null) {
        nodes.push(node);
        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
          var n, childs, child;
          while (--n >= 0) {
            stack.push(child = childs[n]);
            child.parent = node;
            child.depth = node.depth + 1;
          }
          if (value) node.value = 0;
          node.children = childs;
        } else {
          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
          delete node.children;
        }
      }
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var childs, parent;
        if (sort && (childs = node.children)) childs.sort(sort);
        if (value && (parent = node.parent)) parent.value += node.value;
      });
      return nodes;
    }
    hierarchy.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return hierarchy;
    };
    hierarchy.children = function(x) {
      if (!arguments.length) return children;
      children = x;
      return hierarchy;
    };
    hierarchy.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return hierarchy;
    };
    hierarchy.revalue = function(root) {
      if (value) {
        d3_layout_hierarchyVisitBefore(root, function(node) {
          if (node.children) node.value = 0;
        });
        d3_layout_hierarchyVisitAfter(root, function(node) {
          var parent;
          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
          if (parent = node.parent) parent.value += node.value;
        });
      }
      return root;
    };
    return hierarchy;
  };
  function d3_layout_hierarchyRebind(object, hierarchy) {
    d3.rebind(object, hierarchy, "sort", "children", "value");
    object.nodes = object;
    object.links = d3_layout_hierarchyLinks;
    return object;
  }
  function d3_layout_hierarchyVisitBefore(node, callback) {
    var nodes = [ node ];
    while ((node = nodes.pop()) != null) {
      callback(node);
      if ((children = node.children) && (n = children.length)) {
        var n, children;
        while (--n >= 0) nodes.push(children[n]);
      }
    }
  }
  function d3_layout_hierarchyVisitAfter(node, callback) {
    var nodes = [ node ], nodes2 = [];
    while ((node = nodes.pop()) != null) {
      nodes2.push(node);
      if ((children = node.children) && (n = children.length)) {
        var i = -1, n, children;
        while (++i < n) nodes.push(children[i]);
      }
    }
    while ((node = nodes2.pop()) != null) {
      callback(node);
    }
  }
  function d3_layout_hierarchyChildren(d) {
    return d.children;
  }
  function d3_layout_hierarchyValue(d) {
    return d.value;
  }
  function d3_layout_hierarchySort(a, b) {
    return b.value - a.value;
  }
  function d3_layout_hierarchyLinks(nodes) {
    return d3.merge(nodes.map(function(parent) {
      return (parent.children || []).map(function(child) {
        return {
          source: parent,
          target: child
        };
      });
    }));
  }
  d3.layout.partition = function() {
    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
    function position(node, x, dx, dy) {
      var children = node.children;
      node.x = x;
      node.y = node.depth * dy;
      node.dx = dx;
      node.dy = dy;
      if (children && (n = children.length)) {
        var i = -1, n, c, d;
        dx = node.value ? dx / node.value : 0;
        while (++i < n) {
          position(c = children[i], x, d = c.value * dx, dy);
          x += d;
        }
      }
    }
    function depth(node) {
      var children = node.children, d = 0;
      if (children && (n = children.length)) {
        var i = -1, n;
        while (++i < n) d = Math.max(d, depth(children[i]));
      }
      return 1 + d;
    }
    function partition(d, i) {
      var nodes = hierarchy.call(this, d, i);
      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
      return nodes;
    }
    partition.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return partition;
    };
    return d3_layout_hierarchyRebind(partition, hierarchy);
  };
  d3.layout.pie = function() {
    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;
    function pie(data) {
      var values = data.map(function(d, i) {
        return +value.call(pie, d, i);
      });
      var a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle);
      var k = ((typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);
      var index = d3.range(data.length);
      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
        return values[j] - values[i];
      } : function(i, j) {
        return sort(data[i], data[j]);
      });
      var arcs = [];
      index.forEach(function(i) {
        var d;
        arcs[i] = {
          data: data[i],
          value: d = values[i],
          startAngle: a,
          endAngle: a += d * k
        };
      });
      return arcs;
    }
    pie.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return pie;
    };
    pie.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return pie;
    };
    pie.startAngle = function(x) {
      if (!arguments.length) return startAngle;
      startAngle = x;
      return pie;
    };
    pie.endAngle = function(x) {
      if (!arguments.length) return endAngle;
      endAngle = x;
      return pie;
    };
    return pie;
  };
  var d3_layout_pieSortByValue = {};
  d3.layout.stack = function() {
    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
    function stack(data, index) {
      var series = data.map(function(d, i) {
        return values.call(stack, d, i);
      });
      var points = series.map(function(d) {
        return d.map(function(v, i) {
          return [ x.call(stack, v, i), y.call(stack, v, i) ];
        });
      });
      var orders = order.call(stack, points, index);
      series = d3.permute(series, orders);
      points = d3.permute(points, orders);
      var offsets = offset.call(stack, points, index);
      var n = series.length, m = series[0].length, i, j, o;
      for (j = 0; j < m; ++j) {
        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
        for (i = 1; i < n; ++i) {
          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
        }
      }
      return data;
    }
    stack.values = function(x) {
      if (!arguments.length) return values;
      values = x;
      return stack;
    };
    stack.order = function(x) {
      if (!arguments.length) return order;
      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
      return stack;
    };
    stack.offset = function(x) {
      if (!arguments.length) return offset;
      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
      return stack;
    };
    stack.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      return stack;
    };
    stack.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      return stack;
    };
    stack.out = function(z) {
      if (!arguments.length) return out;
      out = z;
      return stack;
    };
    return stack;
  };
  function d3_layout_stackX(d) {
    return d.x;
  }
  function d3_layout_stackY(d) {
    return d.y;
  }
  function d3_layout_stackOut(d, y0, y) {
    d.y0 = y0;
    d.y = y;
  }
  var d3_layout_stackOrders = d3.map({
    "inside-out": function(data) {
      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
        return max[a] - max[b];
      }), top = 0, bottom = 0, tops = [], bottoms = [];
      for (i = 0; i < n; ++i) {
        j = index[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    },
    reverse: function(data) {
      return d3.range(data.length).reverse();
    },
    "default": d3_layout_stackOrderDefault
  });
  var d3_layout_stackOffsets = d3.map({
    silhouette: function(data) {
      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o > max) max = o;
        sums.push(o);
      }
      for (j = 0; j < m; ++j) {
        y0[j] = (max - sums[j]) / 2;
      }
      return y0;
    },
    wiggle: function(data) {
      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
      y0[0] = o = o0 = 0;
      for (j = 1; j < m; ++j) {
        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
          }
          s2 += s3 * data[i][j][1];
        }
        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
        if (o < o0) o0 = o;
      }
      for (j = 0; j < m; ++j) y0[j] -= o0;
      return y0;
    },
    expand: function(data) {
      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
      }
      for (j = 0; j < m; ++j) y0[j] = 0;
      return y0;
    },
    zero: d3_layout_stackOffsetZero
  });
  function d3_layout_stackOrderDefault(data) {
    return d3.range(data.length);
  }
  function d3_layout_stackOffsetZero(data) {
    var j = -1, m = data[0].length, y0 = [];
    while (++j < m) y0[j] = 0;
    return y0;
  }
  function d3_layout_stackMaxIndex(array) {
    var i = 1, j = 0, v = array[0][1], k, n = array.length;
    for (;i < n; ++i) {
      if ((k = array[i][1]) > v) {
        j = i;
        v = k;
      }
    }
    return j;
  }
  function d3_layout_stackReduceSum(d) {
    return d.reduce(d3_layout_stackSum, 0);
  }
  function d3_layout_stackSum(p, d) {
    return p + d[1];
  }
  d3.layout.histogram = function() {
    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
    function histogram(data, i) {
      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
      while (++i < m) {
        bin = bins[i] = [];
        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
        bin.y = 0;
      }
      if (m > 0) {
        i = -1;
        while (++i < n) {
          x = values[i];
          if (x >= range[0] && x <= range[1]) {
            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
            bin.y += k;
            bin.push(data[i]);
          }
        }
      }
      return bins;
    }
    histogram.value = function(x) {
      if (!arguments.length) return valuer;
      valuer = x;
      return histogram;
    };
    histogram.range = function(x) {
      if (!arguments.length) return ranger;
      ranger = d3_functor(x);
      return histogram;
    };
    histogram.bins = function(x) {
      if (!arguments.length) return binner;
      binner = typeof x === "number" ? function(range) {
        return d3_layout_histogramBinFixed(range, x);
      } : d3_functor(x);
      return histogram;
    };
    histogram.frequency = function(x) {
      if (!arguments.length) return frequency;
      frequency = !!x;
      return histogram;
    };
    return histogram;
  };
  function d3_layout_histogramBinSturges(range, values) {
    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
  }
  function d3_layout_histogramBinFixed(range, n) {
    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
    while (++x <= n) f[x] = m * x + b;
    return f;
  }
  function d3_layout_histogramRange(values) {
    return [ d3.min(values), d3.max(values) ];
  }
  d3.layout.pack = function() {
    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
    function pack(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
        return radius;
      };
      root.x = root.y = 0;
      d3_layout_hierarchyVisitAfter(root, function(d) {
        d.r = +r(d.value);
      });
      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
      if (padding) {
        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r += dr;
        });
        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r -= dr;
        });
      }
      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
      return nodes;
    }
    pack.size = function(_) {
      if (!arguments.length) return size;
      size = _;
      return pack;
    };
    pack.radius = function(_) {
      if (!arguments.length) return radius;
      radius = _ == null || typeof _ === "function" ? _ : +_;
      return pack;
    };
    pack.padding = function(_) {
      if (!arguments.length) return padding;
      padding = +_;
      return pack;
    };
    return d3_layout_hierarchyRebind(pack, hierarchy);
  };
  function d3_layout_packSort(a, b) {
    return a.value - b.value;
  }
  function d3_layout_packInsert(a, b) {
    var c = a._pack_next;
    a._pack_next = b;
    b._pack_prev = a;
    b._pack_next = c;
    c._pack_prev = b;
  }
  function d3_layout_packSplice(a, b) {
    a._pack_next = b;
    b._pack_prev = a;
  }
  function d3_layout_packIntersects(a, b) {
    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
    return .999 * dr * dr > dx * dx + dy * dy;
  }
  function d3_layout_packSiblings(node) {
    if (!(nodes = node.children) || !(n = nodes.length)) return;
    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
    function bound(node) {
      xMin = Math.min(node.x - node.r, xMin);
      xMax = Math.max(node.x + node.r, xMax);
      yMin = Math.min(node.y - node.r, yMin);
      yMax = Math.max(node.y + node.r, yMax);
    }
    nodes.forEach(d3_layout_packLink);
    a = nodes[0];
    a.x = -a.r;
    a.y = 0;
    bound(a);
    if (n > 1) {
      b = nodes[1];
      b.x = b.r;
      b.y = 0;
      bound(b);
      if (n > 2) {
        c = nodes[2];
        d3_layout_packPlace(a, b, c);
        bound(c);
        d3_layout_packInsert(a, c);
        a._pack_prev = c;
        d3_layout_packInsert(c, b);
        b = a._pack_next;
        for (i = 3; i < n; i++) {
          d3_layout_packPlace(a, b, c = nodes[i]);
          var isect = 0, s1 = 1, s2 = 1;
          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
            if (d3_layout_packIntersects(j, c)) {
              isect = 1;
              break;
            }
          }
          if (isect == 1) {
            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
              if (d3_layout_packIntersects(k, c)) {
                break;
              }
            }
          }
          if (isect) {
            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
            i--;
          } else {
            d3_layout_packInsert(a, c);
            b = c;
            bound(c);
          }
        }
      }
    }
    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
    for (i = 0; i < n; i++) {
      c = nodes[i];
      c.x -= cx;
      c.y -= cy;
      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
    }
    node.r = cr;
    nodes.forEach(d3_layout_packUnlink);
  }
  function d3_layout_packLink(node) {
    node._pack_next = node._pack_prev = node;
  }
  function d3_layout_packUnlink(node) {
    delete node._pack_next;
    delete node._pack_prev;
  }
  function d3_layout_packTransform(node, x, y, k) {
    var children = node.children;
    node.x = x += k * node.x;
    node.y = y += k * node.y;
    node.r *= k;
    if (children) {
      var i = -1, n = children.length;
      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
    }
  }
  function d3_layout_packPlace(a, b, c) {
    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
    if (db && (dx || dy)) {
      var da = b.r + c.r, dc = dx * dx + dy * dy;
      da *= da;
      db *= db;
      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
      c.x = a.x + x * dx + y * dy;
      c.y = a.y + x * dy - y * dx;
    } else {
      c.x = a.x + db;
      c.y = a.y;
    }
  }
  d3.layout.tree = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
    function tree(d, i) {
      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
      d3_layout_hierarchyVisitBefore(root1, secondWalk);
      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
        var left = root0, right = root0, bottom = root0;
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return nodes;
    }
    function wrapTree(root0) {
      var root1 = {
        A: null,
        children: [ root0 ]
      }, queue = [ root1 ], node1;
      while ((node1 = queue.pop()) != null) {
        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
          queue.push((children[i] = child = {
            _: children[i],
            parent: node1,
            children: (child = children[i].children) && child.slice() || [],
            A: null,
            a: null,
            z: 0,
            m: 0,
            c: 0,
            s: 0,
            t: null,
            i: i
          }).a = child);
        }
      }
      return root1.children[0];
    }
    function firstWalk(v) {
      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
      if (children.length) {
        d3_layout_treeShift(v);
        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
        if (w) {
          v.z = w.z + separation(v._, w._);
          v.m = v.z - midpoint;
        } else {
          v.z = midpoint;
        }
      } else if (w) {
        v.z = w.z + separation(v._, w._);
      }
      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
    }
    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }
    function apportion(v, w, ancestor) {
      if (w) {
        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
          vom = d3_layout_treeLeft(vom);
          vop = d3_layout_treeRight(vop);
          vop.a = v;
          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
          if (shift > 0) {
            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
            sip += shift;
            sop += shift;
          }
          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }
        if (vim && !d3_layout_treeRight(vop)) {
          vop.t = vim;
          vop.m += sim - sop;
        }
        if (vip && !d3_layout_treeLeft(vom)) {
          vom.t = vip;
          vom.m += sip - som;
          ancestor = v;
        }
      }
      return ancestor;
    }
    function sizeNode(node) {
      node.x *= size[0];
      node.y = node.depth * size[1];
    }
    tree.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return tree;
    };
    tree.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null ? sizeNode : null;
      return tree;
    };
    tree.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) == null ? null : sizeNode;
      return tree;
    };
    return d3_layout_hierarchyRebind(tree, hierarchy);
  };
  function d3_layout_treeSeparation(a, b) {
    return a.parent == b.parent ? 1 : 2;
  }
  function d3_layout_treeLeft(v) {
    var children = v.children;
    return children.length ? children[0] : v.t;
  }
  function d3_layout_treeRight(v) {
    var children = v.children, n;
    return (n = children.length) ? children[n - 1] : v.t;
  }
  function d3_layout_treeMove(wm, wp, shift) {
    var change = shift / (wp.i - wm.i);
    wp.c -= change;
    wp.s += shift;
    wm.c += change;
    wp.z += shift;
    wp.m += shift;
  }
  function d3_layout_treeShift(v) {
    var shift = 0, change = 0, children = v.children, i = children.length, w;
    while (--i >= 0) {
      w = children[i];
      w.z += shift;
      w.m += shift;
      shift += w.s + (change += w.c);
    }
  }
  function d3_layout_treeAncestor(vim, v, ancestor) {
    return vim.a.parent === v.parent ? vim.a : ancestor;
  }
  d3.layout.cluster = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
    function cluster(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var children = node.children;
        if (children && children.length) {
          node.x = d3_layout_clusterX(children);
          node.y = d3_layout_clusterY(children);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0;
          node.y = 0;
          previousNode = node;
        }
      });
      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
        node.x = (node.x - root.x) * size[0];
        node.y = (root.y - node.y) * size[1];
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
      });
      return nodes;
    }
    cluster.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return cluster;
    };
    cluster.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return cluster;
    };
    cluster.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return cluster;
    };
    return d3_layout_hierarchyRebind(cluster, hierarchy);
  };
  function d3_layout_clusterY(children) {
    return 1 + d3.max(children, function(child) {
      return child.y;
    });
  }
  function d3_layout_clusterX(children) {
    return children.reduce(function(x, child) {
      return x + child.x;
    }, 0) / children.length;
  }
  function d3_layout_clusterLeft(node) {
    var children = node.children;
    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
  }
  function d3_layout_clusterRight(node) {
    var children = node.children, n;
    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
  }
  d3.layout.treemap = function() {
    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
    function scale(children, k) {
      var i = -1, n = children.length, child, area;
      while (++i < n) {
        area = (child = children[i]).value * (k < 0 ? 0 : k);
        child.area = isNaN(area) || area <= 0 ? 0 : area;
      }
    }
    function squarify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while ((n = remaining.length) > 0) {
          row.push(child = remaining[n - 1]);
          row.area += child.area;
          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
            remaining.pop();
            best = score;
          } else {
            row.area -= row.pop().area;
            position(row, u, rect, false);
            u = Math.min(rect.dx, rect.dy);
            row.length = row.area = 0;
            best = Infinity;
          }
        }
        if (row.length) {
          position(row, u, rect, true);
          row.length = row.area = 0;
        }
        children.forEach(squarify);
      }
    }
    function stickify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), remaining = children.slice(), child, row = [];
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while (child = remaining.pop()) {
          row.push(child);
          row.area += child.area;
          if (child.z != null) {
            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
            row.length = row.area = 0;
          }
        }
        children.forEach(stickify);
      }
    }
    function worst(row, u) {
      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
      while (++i < n) {
        if (!(r = row[i].area)) continue;
        if (r < rmin) rmin = r;
        if (r > rmax) rmax = r;
      }
      s *= s;
      u *= u;
      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
    }
    function position(row, u, rect, flush) {
      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
      if (u == rect.dx) {
        if (flush || v > rect.dy) v = rect.dy;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dy = v;
          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
        }
        o.z = true;
        o.dx += rect.x + rect.dx - x;
        rect.y += v;
        rect.dy -= v;
      } else {
        if (flush || v > rect.dx) v = rect.dx;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dx = v;
          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
        }
        o.z = false;
        o.dy += rect.y + rect.dy - y;
        rect.x += v;
        rect.dx -= v;
      }
    }
    function treemap(d) {
      var nodes = stickies || hierarchy(d), root = nodes[0];
      root.x = 0;
      root.y = 0;
      root.dx = size[0];
      root.dy = size[1];
      if (stickies) hierarchy.revalue(root);
      scale([ root ], root.dx * root.dy / root.value);
      (stickies ? stickify : squarify)(root);
      if (sticky) stickies = nodes;
      return nodes;
    }
    treemap.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return treemap;
    };
    treemap.padding = function(x) {
      if (!arguments.length) return padding;
      function padFunction(node) {
        var p = x.call(treemap, node, node.depth);
        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
      }
      function padConstant(node) {
        return d3_layout_treemapPad(node, x);
      }
      var type;
      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ],
      padConstant) : padConstant;
      return treemap;
    };
    treemap.round = function(x) {
      if (!arguments.length) return round != Number;
      round = x ? Math.round : Number;
      return treemap;
    };
    treemap.sticky = function(x) {
      if (!arguments.length) return sticky;
      sticky = x;
      stickies = null;
      return treemap;
    };
    treemap.ratio = function(x) {
      if (!arguments.length) return ratio;
      ratio = x;
      return treemap;
    };
    treemap.mode = function(x) {
      if (!arguments.length) return mode;
      mode = x + "";
      return treemap;
    };
    return d3_layout_hierarchyRebind(treemap, hierarchy);
  };
  function d3_layout_treemapPadNull(node) {
    return {
      x: node.x,
      y: node.y,
      dx: node.dx,
      dy: node.dy
    };
  }
  function d3_layout_treemapPad(node, padding) {
    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
    if (dx < 0) {
      x += dx / 2;
      dx = 0;
    }
    if (dy < 0) {
      y += dy / 2;
      dy = 0;
    }
    return {
      x: x,
      y: y,
      dx: dx,
      dy: dy
    };
  }
  d3.random = {
    normal: function(µ, σ) {
      var n = arguments.length;
      if (n < 2) σ = 1;
      if (n < 1) µ = 0;
      return function() {
        var x, y, r;
        do {
          x = Math.random() * 2 - 1;
          y = Math.random() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
      };
    },
    logNormal: function() {
      var random = d3.random.normal.apply(d3, arguments);
      return function() {
        return Math.exp(random());
      };
    },
    bates: function(m) {
      var random = d3.random.irwinHall(m);
      return function() {
        return random() / m;
      };
    },
    irwinHall: function(m) {
      return function() {
        for (var s = 0, j = 0; j < m; j++) s += Math.random();
        return s;
      };
    }
  };
  d3.scale = {};
  function d3_scaleExtent(domain) {
    var start = domain[0], stop = domain[domain.length - 1];
    return start < stop ? [ start, stop ] : [ stop, start ];
  }
  function d3_scaleRange(scale) {
    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
  }
  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
    return function(x) {
      return i(u(x));
    };
  }
  function d3_scale_nice(domain, nice) {
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
    if (x1 < x0) {
      dx = i0, i0 = i1, i1 = dx;
      dx = x0, x0 = x1, x1 = dx;
    }
    domain[i0] = nice.floor(x0);
    domain[i1] = nice.ceil(x1);
    return domain;
  }
  function d3_scale_niceStep(step) {
    return step ? {
      floor: function(x) {
        return Math.floor(x / step) * step;
      },
      ceil: function(x) {
        return Math.ceil(x / step) * step;
      }
    } : d3_scale_niceIdentity;
  }
  var d3_scale_niceIdentity = {
    floor: d3_identity,
    ceil: d3_identity
  };
  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
    if (domain[k] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }
    while (++j <= k) {
      u.push(uninterpolate(domain[j - 1], domain[j]));
      i.push(interpolate(range[j - 1], range[j]));
    }
    return function(x) {
      var j = d3.bisect(domain, x, 1, k) - 1;
      return i[j](u[j](x));
    };
  }
  d3.scale.linear = function() {
    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
  };
  function d3_scale_linear(domain, range, interpolate, clamp) {
    var output, input;
    function rescale() {
      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
      output = linear(domain, range, uninterpolate, interpolate);
      input = linear(range, domain, uninterpolate, d3_interpolate);
      return scale;
    }
    function scale(x) {
      return output(x);
    }
    scale.invert = function(y) {
      return input(y);
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(Number);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.rangeRound = function(x) {
      return scale.range(x).interpolate(d3_interpolateRound);
    };
    scale.clamp = function(x) {
      if (!arguments.length) return clamp;
      clamp = x;
      return rescale();
    };
    scale.interpolate = function(x) {
      if (!arguments.length) return interpolate;
      interpolate = x;
      return rescale();
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      d3_scale_linearNice(domain, m);
      return rescale();
    };
    scale.copy = function() {
      return d3_scale_linear(domain, range, interpolate, clamp);
    };
    return rescale();
  }
  function d3_scale_linearRebind(scale, linear) {
    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
  }
  function d3_scale_linearNice(domain, m) {
    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
  }
  function d3_scale_linearTickRange(domain, m) {
    if (m == null) m = 10;
    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
    extent[0] = Math.ceil(extent[0] / step) * step;
    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
    extent[2] = step;
    return extent;
  }
  function d3_scale_linearTicks(domain, m) {
    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
  }
  function d3_scale_linearTickFormat(domain, m, format) {
    var range = d3_scale_linearTickRange(domain, m);
    if (format) {
      var match = d3_format_re.exec(format);
      match.shift();
      if (match[8] === "s") {
        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
        match[8] = "f";
        format = d3.format(match.join(""));
        return function(d) {
          return format(prefix.scale(d)) + prefix.symbol;
        };
      }
      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
      format = match.join("");
    } else {
      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
    }
    return d3.format(format);
  }
  var d3_scale_linearFormatSignificant = {
    s: 1,
    g: 1,
    p: 1,
    r: 1,
    e: 1
  };
  function d3_scale_linearPrecision(value) {
    return -Math.floor(Math.log(value) / Math.LN10 + .01);
  }
  function d3_scale_linearFormatPrecision(type, range) {
    var p = d3_scale_linearPrecision(range[2]);
    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
  }
  d3.scale.log = function() {
    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
  };
  function d3_scale_log(linear, base, positive, domain) {
    function log(x) {
      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
    }
    function pow(x) {
      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
    }
    function scale(x) {
      return linear(log(x));
    }
    scale.invert = function(x) {
      return pow(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      positive = x[0] >= 0;
      linear.domain((domain = x.map(Number)).map(log));
      return scale;
    };
    scale.base = function(_) {
      if (!arguments.length) return base;
      base = +_;
      linear.domain(domain.map(log));
      return scale;
    };
    scale.nice = function() {
      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
      linear.domain(niced);
      domain = niced.map(pow);
      return scale;
    };
    scale.ticks = function() {
      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
      if (isFinite(j - i)) {
        if (positive) {
          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
          ticks.push(pow(i));
        } else {
          ticks.push(pow(i));
          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
        }
        for (i = 0; ticks[i] < u; i++) {}
        for (j = ticks.length; ticks[j - 1] > v; j--) {}
        ticks = ticks.slice(i, j);
      }
      return ticks;
    };
    scale.tickFormat = function(n, format) {
      if (!arguments.length) return d3_scale_logFormat;
      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12,
      Math.floor), e;
      return function(d) {
        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
      };
    };
    scale.copy = function() {
      return d3_scale_log(linear.copy(), base, positive, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
    floor: function(x) {
      return -Math.ceil(-x);
    },
    ceil: function(x) {
      return -Math.floor(-x);
    }
  };
  d3.scale.pow = function() {
    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
  };
  function d3_scale_pow(linear, exponent, domain) {
    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
    function scale(x) {
      return linear(powp(x));
    }
    scale.invert = function(x) {
      return powb(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      linear.domain((domain = x.map(Number)).map(powp));
      return scale;
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      return scale.domain(d3_scale_linearNice(domain, m));
    };
    scale.exponent = function(x) {
      if (!arguments.length) return exponent;
      powp = d3_scale_powPow(exponent = x);
      powb = d3_scale_powPow(1 / exponent);
      linear.domain(domain.map(powp));
      return scale;
    };
    scale.copy = function() {
      return d3_scale_pow(linear.copy(), exponent, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_scale_powPow(e) {
    return function(x) {
      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
    };
  }
  d3.scale.sqrt = function() {
    return d3.scale.pow().exponent(.5);
  };
  d3.scale.ordinal = function() {
    return d3_scale_ordinal([], {
      t: "range",
      a: [ [] ]
    });
  };
  function d3_scale_ordinal(domain, ranger) {
    var index, range, rangeBand;
    function scale(x) {
      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
    }
    function steps(start, step) {
      return d3.range(domain.length).map(function(i) {
        return start + step * i;
      });
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = [];
      index = new d3_Map();
      var i = -1, n = x.length, xi;
      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
      return scale[ranger.t].apply(scale, ranger.a);
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      rangeBand = 0;
      ranger = {
        t: "range",
        a: arguments
      };
      return scale;
    };
    scale.rangePoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);
      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);
      rangeBand = 0;
      ranger = {
        t: "rangePoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
      range = steps(start + step * outerPadding, step);
      if (reverse) range.reverse();
      rangeBand = step * (1 - padding);
      ranger = {
        t: "rangeBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;
      range = steps(start + Math.round(error / 2), step);
      if (reverse) range.reverse();
      rangeBand = Math.round(step * (1 - padding));
      ranger = {
        t: "rangeRoundBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeBand = function() {
      return rangeBand;
    };
    scale.rangeExtent = function() {
      return d3_scaleExtent(ranger.a[0]);
    };
    scale.copy = function() {
      return d3_scale_ordinal(domain, ranger);
    };
    return scale.domain(domain);
  }
  d3.scale.category10 = function() {
    return d3.scale.ordinal().range(d3_category10);
  };
  d3.scale.category20 = function() {
    return d3.scale.ordinal().range(d3_category20);
  };
  d3.scale.category20b = function() {
    return d3.scale.ordinal().range(d3_category20b);
  };
  d3.scale.category20c = function() {
    return d3.scale.ordinal().range(d3_category20c);
  };
  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
  d3.scale.quantile = function() {
    return d3_scale_quantile([], []);
  };
  function d3_scale_quantile(domain, range) {
    var thresholds;
    function rescale() {
      var k = 0, q = range.length;
      thresholds = [];
      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
      return scale;
    }
    function scale(x) {
      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.filter(d3_number).sort(d3_ascending);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.quantiles = function() {
      return thresholds;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
    };
    scale.copy = function() {
      return d3_scale_quantile(domain, range);
    };
    return rescale();
  }
  d3.scale.quantize = function() {
    return d3_scale_quantize(0, 1, [ 0, 1 ]);
  };
  function d3_scale_quantize(x0, x1, range) {
    var kx, i;
    function scale(x) {
      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
    }
    function rescale() {
      kx = range.length / (x1 - x0);
      i = range.length - 1;
      return scale;
    }
    scale.domain = function(x) {
      if (!arguments.length) return [ x0, x1 ];
      x0 = +x[0];
      x1 = +x[x.length - 1];
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      y = y < 0 ? NaN : y / kx + x0;
      return [ y, y + 1 / kx ];
    };
    scale.copy = function() {
      return d3_scale_quantize(x0, x1, range);
    };
    return rescale();
  }
  d3.scale.threshold = function() {
    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
  };
  function d3_scale_threshold(domain, range) {
    function scale(x) {
      if (x <= x) return range[d3.bisect(domain, x)];
    }
    scale.domain = function(_) {
      if (!arguments.length) return domain;
      domain = _;
      return scale;
    };
    scale.range = function(_) {
      if (!arguments.length) return range;
      range = _;
      return scale;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return [ domain[y - 1], domain[y] ];
    };
    scale.copy = function() {
      return d3_scale_threshold(domain, range);
    };
    return scale;
  }
  d3.scale.identity = function() {
    return d3_scale_identity([ 0, 1 ]);
  };
  function d3_scale_identity(domain) {
    function identity(x) {
      return +x;
    }
    identity.invert = identity;
    identity.domain = identity.range = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(identity);
      return identity;
    };
    identity.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    identity.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    identity.copy = function() {
      return d3_scale_identity(domain);
    };
    return identity;
  }
  d3.svg = {};
  d3.svg.arc = function() {
    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function arc() {
      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0,
      a0 = a1, a1 = da), a1 - a0), df = da < π ? "0" : "1", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);
      return da >= d3_svg_arcMax ? r0 ? "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "M0," + r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + -r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + r0 + "Z" : "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "Z" : r0 ? "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L" + r0 * c1 + "," + r0 * s1 + "A" + r0 + "," + r0 + " 0 " + df + ",0 " + r0 * c0 + "," + r0 * s0 + "Z" : "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L0,0" + "Z";
    }
    arc.innerRadius = function(v) {
      if (!arguments.length) return innerRadius;
      innerRadius = d3_functor(v);
      return arc;
    };
    arc.outerRadius = function(v) {
      if (!arguments.length) return outerRadius;
      outerRadius = d3_functor(v);
      return arc;
    };
    arc.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return arc;
    };
    arc.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return arc;
    };
    arc.centroid = function() {
      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;
      return [ Math.cos(a) * r, Math.sin(a) * r ];
    };
    return arc;
  };
  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;
  function d3_svg_arcInnerRadius(d) {
    return d.innerRadius;
  }
  function d3_svg_arcOuterRadius(d) {
    return d.outerRadius;
  }
  function d3_svg_arcStartAngle(d) {
    return d.startAngle;
  }
  function d3_svg_arcEndAngle(d) {
    return d.endAngle;
  }
  function d3_svg_line(projection) {
    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
    function line(data) {
      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
      function segment() {
        segments.push("M", interpolate(projection(points), tension));
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
        } else if (points.length) {
          segment();
          points = [];
        }
      }
      if (points.length) segment();
      return segments.length ? segments.join("") : null;
    }
    line.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      return line;
    };
    line.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return line;
    };
    line.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return line;
    };
    line.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      return line;
    };
    line.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return line;
    };
    return line;
  }
  d3.svg.line = function() {
    return d3_svg_line(d3_identity);
  };
  var d3_svg_lineInterpolators = d3.map({
    linear: d3_svg_lineLinear,
    "linear-closed": d3_svg_lineLinearClosed,
    step: d3_svg_lineStep,
    "step-before": d3_svg_lineStepBefore,
    "step-after": d3_svg_lineStepAfter,
    basis: d3_svg_lineBasis,
    "basis-open": d3_svg_lineBasisOpen,
    "basis-closed": d3_svg_lineBasisClosed,
    bundle: d3_svg_lineBundle,
    cardinal: d3_svg_lineCardinal,
    "cardinal-open": d3_svg_lineCardinalOpen,
    "cardinal-closed": d3_svg_lineCardinalClosed,
    monotone: d3_svg_lineMonotone
  });
  d3_svg_lineInterpolators.forEach(function(key, value) {
    value.key = key;
    value.closed = /-closed$/.test(key);
  });
  function d3_svg_lineLinear(points) {
    return points.join("L");
  }
  function d3_svg_lineLinearClosed(points) {
    return d3_svg_lineLinear(points) + "Z";
  }
  function d3_svg_lineStep(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
    if (n > 1) path.push("H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepBefore(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepAfter(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
    return path.join("");
  }
  function d3_svg_lineCardinalOpen(points, tension) {
    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineCardinalClosed(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]),
    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
  }
  function d3_svg_lineCardinal(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineHermite(points, tangents) {
    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
      return d3_svg_lineLinear(points);
    }
    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
    if (quad) {
      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
      p0 = points[1];
      pi = 2;
    }
    if (tangents.length > 1) {
      t = tangents[1];
      p = points[pi];
      pi++;
      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      for (var i = 2; i < tangents.length; i++, pi++) {
        p = points[pi];
        t = tangents[i];
        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      }
    }
    if (quad) {
      var lp = points[pi];
      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
    }
    return path;
  }
  function d3_svg_lineCardinalTangents(points, tension) {
    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
    while (++i < n) {
      p0 = p1;
      p1 = p2;
      p2 = points[i];
      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
    }
    return tangents;
  }
  function d3_svg_lineBasis(points) {
    if (points.length < 3) return d3_svg_lineLinear(points);
    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    points.push(points[n - 1]);
    while (++i <= n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    points.pop();
    path.push("L", pi);
    return path.join("");
  }
  function d3_svg_lineBasisOpen(points) {
    if (points.length < 4) return d3_svg_lineLinear(points);
    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
    while (++i < 3) {
      pi = points[i];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
    --i;
    while (++i < n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBasisClosed(points) {
    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
    while (++i < 4) {
      pi = points[i % n];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    --i;
    while (++i < m) {
      pi = points[i % n];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBundle(points, tension) {
    var n = points.length - 1;
    if (n) {
      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
      while (++i <= n) {
        p = points[i];
        t = i / n;
        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
      }
    }
    return d3_svg_lineBasis(points);
  }
  function d3_svg_lineDot4(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  }
  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
  function d3_svg_lineBasisBezier(path, x, y) {
    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
  }
  function d3_svg_lineSlope(p0, p1) {
    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
  }
  function d3_svg_lineFiniteDifferences(points) {
    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
    while (++i < j) {
      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
    }
    m[i] = d;
    return m;
  }
  function d3_svg_lineMonotoneTangents(points) {
    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
    while (++i < j) {
      d = d3_svg_lineSlope(points[i], points[i + 1]);
      if (abs(d) < ε) {
        m[i] = m[i + 1] = 0;
      } else {
        a = m[i] / d;
        b = m[i + 1] / d;
        s = a * a + b * b;
        if (s > 9) {
          s = d * 3 / Math.sqrt(s);
          m[i] = s * a;
          m[i + 1] = s * b;
        }
      }
    }
    i = -1;
    while (++i <= j) {
      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
      tangents.push([ s || 0, m[i] * s || 0 ]);
    }
    return tangents;
  }
  function d3_svg_lineMonotone(points) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
  }
  d3.svg.line.radial = function() {
    var line = d3_svg_line(d3_svg_lineRadial);
    line.radius = line.x, delete line.x;
    line.angle = line.y, delete line.y;
    return line;
  };
  function d3_svg_lineRadial(points) {
    var point, i = -1, n = points.length, r, a;
    while (++i < n) {
      point = points[i];
      r = point[0];
      a = point[1] + d3_svg_arcOffset;
      point[0] = r * Math.cos(a);
      point[1] = r * Math.sin(a);
    }
    return points;
  }
  function d3_svg_area(projection) {
    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
    function area(data) {
      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
        return x;
      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
        return y;
      } : d3_functor(y1), x, y;
      function segment() {
        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
        } else if (points0.length) {
          segment();
          points0 = [];
          points1 = [];
        }
      }
      if (points0.length) segment();
      return segments.length ? segments.join("") : null;
    }
    area.x = function(_) {
      if (!arguments.length) return x1;
      x0 = x1 = _;
      return area;
    };
    area.x0 = function(_) {
      if (!arguments.length) return x0;
      x0 = _;
      return area;
    };
    area.x1 = function(_) {
      if (!arguments.length) return x1;
      x1 = _;
      return area;
    };
    area.y = function(_) {
      if (!arguments.length) return y1;
      y0 = y1 = _;
      return area;
    };
    area.y0 = function(_) {
      if (!arguments.length) return y0;
      y0 = _;
      return area;
    };
    area.y1 = function(_) {
      if (!arguments.length) return y1;
      y1 = _;
      return area;
    };
    area.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return area;
    };
    area.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      interpolateReverse = interpolate.reverse || interpolate;
      L = interpolate.closed ? "M" : "L";
      return area;
    };
    area.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return area;
    };
    return area;
  }
  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
  d3.svg.area = function() {
    return d3_svg_area(d3_identity);
  };
  d3.svg.area.radial = function() {
    var area = d3_svg_area(d3_svg_lineRadial);
    area.radius = area.x, delete area.x;
    area.innerRadius = area.x0, delete area.x0;
    area.outerRadius = area.x1, delete area.x1;
    area.angle = area.y, delete area.y;
    area.startAngle = area.y0, delete area.y0;
    area.endAngle = area.y1, delete area.y1;
    return area;
  };
  d3.svg.chord = function() {
    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function chord(d, i) {
      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
    }
    function subgroup(self, f, d, i) {
      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;
      return {
        r: r,
        a0: a0,
        a1: a1,
        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
      };
    }
    function equals(a, b) {
      return a.a0 == b.a0 && a.a1 == b.a1;
    }
    function arc(r, p, a) {
      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
    }
    function curve(r0, p0, r1, p1) {
      return "Q 0,0 " + p1;
    }
    chord.radius = function(v) {
      if (!arguments.length) return radius;
      radius = d3_functor(v);
      return chord;
    };
    chord.source = function(v) {
      if (!arguments.length) return source;
      source = d3_functor(v);
      return chord;
    };
    chord.target = function(v) {
      if (!arguments.length) return target;
      target = d3_functor(v);
      return chord;
    };
    chord.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return chord;
    };
    chord.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return chord;
    };
    return chord;
  };
  function d3_svg_chordRadius(d) {
    return d.radius;
  }
  d3.svg.diagonal = function() {
    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
    function diagonal(d, i) {
      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
        x: p0.x,
        y: m
      }, {
        x: p3.x,
        y: m
      }, p3 ];
      p = p.map(projection);
      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
    }
    diagonal.source = function(x) {
      if (!arguments.length) return source;
      source = d3_functor(x);
      return diagonal;
    };
    diagonal.target = function(x) {
      if (!arguments.length) return target;
      target = d3_functor(x);
      return diagonal;
    };
    diagonal.projection = function(x) {
      if (!arguments.length) return projection;
      projection = x;
      return diagonal;
    };
    return diagonal;
  };
  function d3_svg_diagonalProjection(d) {
    return [ d.x, d.y ];
  }
  d3.svg.diagonal.radial = function() {
    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
    diagonal.projection = function(x) {
      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
    };
    return diagonal;
  };
  function d3_svg_diagonalRadialProjection(projection) {
    return function() {
      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;
      return [ r * Math.cos(a), r * Math.sin(a) ];
    };
  }
  d3.svg.symbol = function() {
    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
    function symbol(d, i) {
      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
    }
    symbol.type = function(x) {
      if (!arguments.length) return type;
      type = d3_functor(x);
      return symbol;
    };
    symbol.size = function(x) {
      if (!arguments.length) return size;
      size = d3_functor(x);
      return symbol;
    };
    return symbol;
  };
  function d3_svg_symbolSize() {
    return 64;
  }
  function d3_svg_symbolType() {
    return "circle";
  }
  function d3_svg_symbolCircle(size) {
    var r = Math.sqrt(size / π);
    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
  }
  var d3_svg_symbols = d3.map({
    circle: d3_svg_symbolCircle,
    cross: function(size) {
      var r = Math.sqrt(size / 5) / 2;
      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
    },
    diamond: function(size) {
      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
    },
    square: function(size) {
      var r = Math.sqrt(size) / 2;
      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
    },
    "triangle-down": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
    },
    "triangle-up": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
    }
  });
  d3.svg.symbolTypes = d3_svg_symbols.keys();
  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
  function d3_transition(groups, id) {
    d3_subclass(groups, d3_transitionPrototype);
    groups.id = id;
    return groups;
  }
  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
  d3_transitionPrototype.call = d3_selectionPrototype.call;
  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
  d3_transitionPrototype.node = d3_selectionPrototype.node;
  d3_transitionPrototype.size = d3_selectionPrototype.size;
  d3.transition = function(selection) {
    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();
  };
  d3.transition.prototype = d3_transitionPrototype;
  d3_transitionPrototype.select = function(selector) {
    var id = this.id, subgroups = [], subgroup, subnode, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          d3_transitionNode(subnode, i, id, node.__transition__[id]);
          subgroup.push(subnode);
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_transitionPrototype.selectAll = function(selector) {
    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          transition = node.__transition__[id];
          subnodes = selector.call(node, node.__data__, i, j);
          subgroups.push(subgroup = []);
          for (var k = -1, o = subnodes.length; ++k < o; ) {
            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);
            subgroup.push(subnode);
          }
        }
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_transitionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_transition(subgroups, this.id);
  };
  d3_transitionPrototype.tween = function(name, tween) {
    var id = this.id;
    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);
    return d3_selection_each(this, tween == null ? function(node) {
      node.__transition__[id].tween.remove(name);
    } : function(node) {
      node.__transition__[id].tween.set(name, tween);
    });
  };
  function d3_transition_tween(groups, name, value, tween) {
    var id = groups.id;
    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
    } : (value = tween(value), function(node) {
      node.__transition__[id].tween.set(name, value);
    }));
  }
  d3_transitionPrototype.attr = function(nameNS, value) {
    if (arguments.length < 2) {
      for (value in nameNS) this.attr(value, nameNS[value]);
      return this;
    }
    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrTween(b) {
      return b == null ? attrNull : (b += "", function() {
        var a = this.getAttribute(name), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttribute(name, i(t));
        });
      });
    }
    function attrTweenNS(b) {
      return b == null ? attrNullNS : (b += "", function() {
        var a = this.getAttributeNS(name.space, name.local), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttributeNS(name.space, name.local, i(t));
        });
      });
    }
    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.attrTween = function(nameNS, tween) {
    var name = d3.ns.qualify(nameNS);
    function attrTween(d, i) {
      var f = tween.call(this, d, i, this.getAttribute(name));
      return f && function(t) {
        this.setAttribute(name, f(t));
      };
    }
    function attrTweenNS(d, i) {
      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
      return f && function(t) {
        this.setAttributeNS(name.space, name.local, f(t));
      };
    }
    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.style(priority, name[priority], value);
        return this;
      }
      priority = "";
    }
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleString(b) {
      return b == null ? styleNull : (b += "", function() {
        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;
        return a !== b && (i = d3_interpolate(a, b), function(t) {
          this.style.setProperty(name, i(t), priority);
        });
      });
    }
    return d3_transition_tween(this, "style." + name, value, styleString);
  };
  d3_transitionPrototype.styleTween = function(name, tween, priority) {
    if (arguments.length < 3) priority = "";
    function styleTween(d, i) {
      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));
      return f && function(t) {
        this.style.setProperty(name, f(t), priority);
      };
    }
    return this.tween("style." + name, styleTween);
  };
  d3_transitionPrototype.text = function(value) {
    return d3_transition_tween(this, "text", value, d3_transition_text);
  };
  function d3_transition_text(b) {
    if (b == null) b = "";
    return function() {
      this.textContent = b;
    };
  }
  d3_transitionPrototype.remove = function() {
    return this.each("end.transition", function() {
      var p;
      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);
    });
  };
  d3_transitionPrototype.ease = function(value) {
    var id = this.id;
    if (arguments.length < 1) return this.node().__transition__[id].ease;
    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
    return d3_selection_each(this, function(node) {
      node.__transition__[id].ease = value;
    });
  };
  d3_transitionPrototype.delay = function(value) {
    var id = this.id;
    if (arguments.length < 1) return this.node().__transition__[id].delay;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);
    } : (value = +value, function(node) {
      node.__transition__[id].delay = value;
    }));
  };
  d3_transitionPrototype.duration = function(value) {
    var id = this.id;
    if (arguments.length < 1) return this.node().__transition__[id].duration;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));
    } : (value = Math.max(1, value), function(node) {
      node.__transition__[id].duration = value;
    }));
  };
  d3_transitionPrototype.each = function(type, listener) {
    var id = this.id;
    if (arguments.length < 2) {
      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
      d3_transitionInheritId = id;
      d3_selection_each(this, function(node, i, j) {
        d3_transitionInherit = node.__transition__[id];
        type.call(node, node.__data__, i, j);
      });
      d3_transitionInherit = inherit;
      d3_transitionInheritId = inheritId;
    } else {
      d3_selection_each(this, function(node) {
        var transition = node.__transition__[id];
        (transition.event || (transition.event = d3.dispatch("start", "end"))).on(type, listener);
      });
    }
    return this;
  };
  d3_transitionPrototype.transition = function() {
    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if (node = group[i]) {
          transition = Object.create(node.__transition__[id0]);
          transition.delay += transition.duration;
          d3_transitionNode(node, i, id1, transition);
        }
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, id1);
  };
  function d3_transitionNode(node, i, id, inherit) {
    var lock = node.__transition__ || (node.__transition__ = {
      active: 0,
      count: 0
    }), transition = lock[id];
    if (!transition) {
      var time = inherit.time;
      transition = lock[id] = {
        tween: new d3_Map(),
        time: time,
        ease: inherit.ease,
        delay: inherit.delay,
        duration: inherit.duration
      };
      ++lock.count;
      d3.timer(function(elapsed) {
        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];
        timer.t = delay + time;
        if (delay <= elapsed) return start(elapsed - delay);
        timer.c = start;
        function start(elapsed) {
          if (lock.active > id) return stop();
          lock.active = id;
          transition.event && transition.event.start.call(node, d, i);
          transition.tween.forEach(function(key, value) {
            if (value = value.call(node, d, i)) {
              tweened.push(value);
            }
          });
          d3.timer(function() {
            timer.c = tick(elapsed || 1) ? d3_true : tick;
            return 1;
          }, 0, time);
        }
        function tick(elapsed) {
          if (lock.active !== id) return stop();
          var t = elapsed / duration, e = ease(t), n = tweened.length;
          while (n > 0) {
            tweened[--n].call(node, e);
          }
          if (t >= 1) {
            transition.event && transition.event.end.call(node, d, i);
            return stop();
          }
        }
        function stop() {
          if (--lock.count) delete lock[id]; else delete node.__transition__;
          return 1;
        }
      }, 0, time);
    }
  }
  d3.svg.axis = function() {
    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
    function axis(g) {
      g.each(function() {
        var g = d3.select(this);
        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickTransform;
        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"),
        d3.transition(path));
        tickEnter.append("line");
        tickEnter.append("text");
        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text");
        switch (orient) {
         case "bottom":
          {
            tickTransform = d3_svg_axisX;
            lineEnter.attr("y2", innerTickSize);
            textEnter.attr("y", Math.max(innerTickSize, 0) + tickPadding);
            lineUpdate.attr("x2", 0).attr("y2", innerTickSize);
            textUpdate.attr("x", 0).attr("y", Math.max(innerTickSize, 0) + tickPadding);
            text.attr("dy", ".71em").style("text-anchor", "middle");
            pathUpdate.attr("d", "M" + range[0] + "," + outerTickSize + "V0H" + range[1] + "V" + outerTickSize);
            break;
          }

         case "top":
          {
            tickTransform = d3_svg_axisX;
            lineEnter.attr("y2", -innerTickSize);
            textEnter.attr("y", -(Math.max(innerTickSize, 0) + tickPadding));
            lineUpdate.attr("x2", 0).attr("y2", -innerTickSize);
            textUpdate.attr("x", 0).attr("y", -(Math.max(innerTickSize, 0) + tickPadding));
            text.attr("dy", "0em").style("text-anchor", "middle");
            pathUpdate.attr("d", "M" + range[0] + "," + -outerTickSize + "V0H" + range[1] + "V" + -outerTickSize);
            break;
          }

         case "left":
          {
            tickTransform = d3_svg_axisY;
            lineEnter.attr("x2", -innerTickSize);
            textEnter.attr("x", -(Math.max(innerTickSize, 0) + tickPadding));
            lineUpdate.attr("x2", -innerTickSize).attr("y2", 0);
            textUpdate.attr("x", -(Math.max(innerTickSize, 0) + tickPadding)).attr("y", 0);
            text.attr("dy", ".32em").style("text-anchor", "end");
            pathUpdate.attr("d", "M" + -outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + -outerTickSize);
            break;
          }

         case "right":
          {
            tickTransform = d3_svg_axisY;
            lineEnter.attr("x2", innerTickSize);
            textEnter.attr("x", Math.max(innerTickSize, 0) + tickPadding);
            lineUpdate.attr("x2", innerTickSize).attr("y2", 0);
            textUpdate.attr("x", Math.max(innerTickSize, 0) + tickPadding).attr("y", 0);
            text.attr("dy", ".32em").style("text-anchor", "start");
            pathUpdate.attr("d", "M" + outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + outerTickSize);
            break;
          }
        }
        if (scale1.rangeBand) {
          var x = scale1, dx = x.rangeBand() / 2;
          scale0 = scale1 = function(d) {
            return x(d) + dx;
          };
        } else if (scale0.rangeBand) {
          scale0 = scale1;
        } else {
          tickExit.call(tickTransform, scale1);
        }
        tickEnter.call(tickTransform, scale0);
        tickUpdate.call(tickTransform, scale1);
      });
    }
    axis.scale = function(x) {
      if (!arguments.length) return scale;
      scale = x;
      return axis;
    };
    axis.orient = function(x) {
      if (!arguments.length) return orient;
      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
      return axis;
    };
    axis.ticks = function() {
      if (!arguments.length) return tickArguments_;
      tickArguments_ = arguments;
      return axis;
    };
    axis.tickValues = function(x) {
      if (!arguments.length) return tickValues;
      tickValues = x;
      return axis;
    };
    axis.tickFormat = function(x) {
      if (!arguments.length) return tickFormat_;
      tickFormat_ = x;
      return axis;
    };
    axis.tickSize = function(x) {
      var n = arguments.length;
      if (!n) return innerTickSize;
      innerTickSize = +x;
      outerTickSize = +arguments[n - 1];
      return axis;
    };
    axis.innerTickSize = function(x) {
      if (!arguments.length) return innerTickSize;
      innerTickSize = +x;
      return axis;
    };
    axis.outerTickSize = function(x) {
      if (!arguments.length) return outerTickSize;
      outerTickSize = +x;
      return axis;
    };
    axis.tickPadding = function(x) {
      if (!arguments.length) return tickPadding;
      tickPadding = +x;
      return axis;
    };
    axis.tickSubdivide = function() {
      return arguments.length && axis;
    };
    return axis;
  };
  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };
  function d3_svg_axisX(selection, x) {
    selection.attr("transform", function(d) {
      return "translate(" + x(d) + ",0)";
    });
  }
  function d3_svg_axisY(selection, y) {
    selection.attr("transform", function(d) {
      return "translate(0," + y(d) + ")";
    });
  }
  d3.svg.brush = function() {
    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
    function brush(g) {
      g.each(function() {
        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
        var background = g.selectAll(".background").data([ 0 ]);
        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
        var resize = g.selectAll(".resize").data(resizes, d3_identity);
        resize.exit().remove();
        resize.enter().append("g").attr("class", function(d) {
          return "resize " + d;
        }).style("cursor", function(d) {
          return d3_svg_brushCursor[d];
        }).append("rect").attr("x", function(d) {
          return /[ew]$/.test(d) ? -3 : null;
        }).attr("y", function(d) {
          return /^[ns]/.test(d) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
        resize.style("display", brush.empty() ? "none" : null);
        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
        if (x) {
          range = d3_scaleRange(x);
          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
          redrawX(gUpdate);
        }
        if (y) {
          range = d3_scaleRange(y);
          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
          redrawY(gUpdate);
        }
        redraw(gUpdate);
      });
    }
    brush.event = function(g) {
      g.each(function() {
        var event_ = event.of(this, arguments), extent1 = {
          x: xExtent,
          y: yExtent,
          i: xExtentDomain,
          j: yExtentDomain
        }, extent0 = this.__chart__ || extent1;
        this.__chart__ = extent1;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.brush", function() {
            xExtentDomain = extent0.i;
            yExtentDomain = extent0.j;
            xExtent = extent0.x;
            yExtent = extent0.y;
            event_({
              type: "brushstart"
            });
          }).tween("brush:brush", function() {
            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
            xExtentDomain = yExtentDomain = null;
            return function(t) {
              xExtent = extent1.x = xi(t);
              yExtent = extent1.y = yi(t);
              event_({
                type: "brush",
                mode: "resize"
              });
            };
          }).each("end.brush", function() {
            xExtentDomain = extent1.i;
            yExtentDomain = extent1.j;
            event_({
              type: "brush",
              mode: "resize"
            });
            event_({
              type: "brushend"
            });
          });
        } else {
          event_({
            type: "brushstart"
          });
          event_({
            type: "brush",
            mode: "resize"
          });
          event_({
            type: "brushend"
          });
        }
      });
    };
    function redraw(g) {
      g.selectAll(".resize").attr("transform", function(d) {
        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
      });
    }
    function redrawX(g) {
      g.select(".extent").attr("x", xExtent[0]);
      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
    }
    function redrawY(g) {
      g.select(".extent").attr("y", yExtent[0]);
      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
    }
    function brushstart() {
      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;
      var w = d3.select(d3_window).on("keydown.brush", keydown).on("keyup.brush", keyup);
      if (d3.event.changedTouches) {
        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
      } else {
        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
      }
      g.interrupt().selectAll("*").interrupt();
      if (dragging) {
        origin[0] = xExtent[0] - origin[0];
        origin[1] = yExtent[0] - origin[1];
      } else if (resizing) {
        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
        origin[0] = xExtent[ex];
        origin[1] = yExtent[ey];
      } else if (d3.event.altKey) center = origin.slice();
      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
      d3.select("body").style("cursor", eventTarget.style("cursor"));
      event_({
        type: "brushstart"
      });
      brushmove();
      function keydown() {
        if (d3.event.keyCode == 32) {
          if (!dragging) {
            center = null;
            origin[0] -= xExtent[1];
            origin[1] -= yExtent[1];
            dragging = 2;
          }
          d3_eventPreventDefault();
        }
      }
      function keyup() {
        if (d3.event.keyCode == 32 && dragging == 2) {
          origin[0] += xExtent[1];
          origin[1] += yExtent[1];
          dragging = 0;
          d3_eventPreventDefault();
        }
      }
      function brushmove() {
        var point = d3.mouse(target), moved = false;
        if (offset) {
          point[0] += offset[0];
          point[1] += offset[1];
        }
        if (!dragging) {
          if (d3.event.altKey) {
            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
            origin[0] = xExtent[+(point[0] < center[0])];
            origin[1] = yExtent[+(point[1] < center[1])];
          } else center = null;
        }
        if (resizingX && move1(point, x, 0)) {
          redrawX(g);
          moved = true;
        }
        if (resizingY && move1(point, y, 1)) {
          redrawY(g);
          moved = true;
        }
        if (moved) {
          redraw(g);
          event_({
            type: "brush",
            mode: dragging ? "move" : "resize"
          });
        }
      }
      function move1(point, scale, i) {
        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
        if (dragging) {
          r0 -= position;
          r1 -= size + position;
        }
        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
        if (dragging) {
          max = (min += position) + size;
        } else {
          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
          if (position < min) {
            max = min;
            min = position;
          } else {
            max = position;
          }
        }
        if (extent[0] != min || extent[1] != max) {
          if (i) yExtentDomain = null; else xExtentDomain = null;
          extent[0] = min;
          extent[1] = max;
          return true;
        }
      }
      function brushend() {
        brushmove();
        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
        d3.select("body").style("cursor", null);
        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
        dragRestore();
        event_({
          type: "brushend"
        });
      }
    }
    brush.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.clamp = function(z) {
      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
      return brush;
    };
    brush.extent = function(z) {
      var x0, x1, y0, y1, t;
      if (!arguments.length) {
        if (x) {
          if (xExtentDomain) {
            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
          } else {
            x0 = xExtent[0], x1 = xExtent[1];
            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
          }
        }
        if (y) {
          if (yExtentDomain) {
            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
          } else {
            y0 = yExtent[0], y1 = yExtent[1];
            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
          }
        }
        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
      }
      if (x) {
        x0 = z[0], x1 = z[1];
        if (y) x0 = x0[0], x1 = x1[0];
        xExtentDomain = [ x0, x1 ];
        if (x.invert) x0 = x(x0), x1 = x(x1);
        if (x1 < x0) t = x0, x0 = x1, x1 = t;
        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
      }
      if (y) {
        y0 = z[0], y1 = z[1];
        if (x) y0 = y0[1], y1 = y1[1];
        yExtentDomain = [ y0, y1 ];
        if (y.invert) y0 = y(y0), y1 = y(y1);
        if (y1 < y0) t = y0, y0 = y1, y1 = t;
        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
      }
      return brush;
    };
    brush.clear = function() {
      if (!brush.empty()) {
        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
        xExtentDomain = yExtentDomain = null;
      }
      return brush;
    };
    brush.empty = function() {
      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
    };
    return d3.rebind(brush, event, "on");
  };
  var d3_svg_brushCursor = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  };
  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
  var d3_time_formatUtc = d3_time_format.utc;
  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
  function d3_time_formatIsoNative(date) {
    return date.toISOString();
  }
  d3_time_formatIsoNative.parse = function(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  };
  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
  d3_time.second = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 1e3) * 1e3);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
  }, function(date) {
    return date.getSeconds();
  });
  d3_time.seconds = d3_time.second.range;
  d3_time.seconds.utc = d3_time.second.utc.range;
  d3_time.minute = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 6e4) * 6e4);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
  }, function(date) {
    return date.getMinutes();
  });
  d3_time.minutes = d3_time.minute.range;
  d3_time.minutes.utc = d3_time.minute.utc.range;
  d3_time.hour = d3_time_interval(function(date) {
    var timezone = date.getTimezoneOffset() / 60;
    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
  }, function(date) {
    return date.getHours();
  });
  d3_time.hours = d3_time.hour.range;
  d3_time.hours.utc = d3_time.hour.utc.range;
  d3_time.month = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setDate(1);
    return date;
  }, function(date, offset) {
    date.setMonth(date.getMonth() + offset);
  }, function(date) {
    return date.getMonth();
  });
  d3_time.months = d3_time.month.range;
  d3_time.months.utc = d3_time.month.utc.range;
  function d3_time_scale(linear, methods, format) {
    function scale(x) {
      return linear(x);
    }
    scale.invert = function(x) {
      return d3_time_scaleDate(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
      linear.domain(x);
      return scale;
    };
    function tickMethod(extent, count) {
      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
        return d / 31536e6;
      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
    }
    scale.nice = function(interval, skip) {
      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
      if (method) interval = method[0], skip = method[1];
      function skipped(date) {
        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
      }
      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
        floor: function(date) {
          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
          return date;
        },
        ceil: function(date) {
          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
          return date;
        }
      } : interval));
    };
    scale.ticks = function(interval, skip) {
      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
        range: interval
      }, skip ];
      if (method) interval = method[0], skip = method[1];
      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
    };
    scale.tickFormat = function() {
      return format;
    };
    scale.copy = function() {
      return d3_time_scale(linear.copy(), methods, format);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_time_scaleDate(t) {
    return new Date(t);
  }
  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
    return d.getMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getMinutes();
  } ], [ "%I %p", function(d) {
    return d.getHours();
  } ], [ "%a %d", function(d) {
    return d.getDay() && d.getDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getDate() != 1;
  } ], [ "%B", function(d) {
    return d.getMonth();
  } ], [ "%Y", d3_true ] ]);
  var d3_time_scaleMilliseconds = {
    range: function(start, stop, step) {
      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
    },
    floor: d3_identity,
    ceil: d3_identity
  };
  d3_time_scaleLocalMethods.year = d3_time.year;
  d3_time.scale = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
  };
  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
    return [ m[0].utc, m[1] ];
  });
  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
    return d.getUTCMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getUTCSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getUTCMinutes();
  } ], [ "%I %p", function(d) {
    return d.getUTCHours();
  } ], [ "%a %d", function(d) {
    return d.getUTCDay() && d.getUTCDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getUTCDate() != 1;
  } ], [ "%B", function(d) {
    return d.getUTCMonth();
  } ], [ "%Y", d3_true ] ]);
  d3_time_scaleUtcMethods.year = d3_time.year.utc;
  d3_time.scale.utc = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
  };
  d3.text = d3_xhrType(function(request) {
    return request.responseText;
  });
  d3.json = function(url, callback) {
    return d3_xhr(url, "application/json", d3_json, callback);
  };
  function d3_json(request) {
    return JSON.parse(request.responseText);
  }
  d3.html = function(url, callback) {
    return d3_xhr(url, "text/html", d3_html, callback);
  };
  function d3_html(request) {
    var range = d3_document.createRange();
    range.selectNode(d3_document.body);
    return range.createContextualFragment(request.responseText);
  }
  d3.xml = d3_xhrType(function(request) {
    return request.responseXML;
  });
  if (typeof define === "function" && define.amd) define(d3); else if (typeof module === "object" && module.exports) module.exports = d3;
  this.d3 = d3;
}();











var width = 960,
    height = 500, np,gp = 0;
  var points = [];

var data = d3.range(60).map(function() {
  return [Math.random() * width, Math.random() * height];
});

var quadtree = d3.geom.quadtree()
    .extent([[-1, -1], [width + 1, height + 1]])
    (data);
var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);
console.log("==");
var _nodes = nodes(quadtree);

console.log('****************** GOT ',_nodes.length, " NODES ***************");

svg.selectAll(".node")
    .data(_nodes)
  .enter().append("rect")
    .attr("class", "node")
    .attr("x", function(d) { return d.x1; })
    .attr("y", function(d) { return d.y1; })
    .attr("width", function(d) { return d.width; })
    .attr("height", function(d) { return d.height; });

var point = svg.selectAll(".point")
    .data(data,function(d,i) { return i; })
  .enter().append("circle")
    .attr("class", "point")
    .attr("cx", function(d) { return d[0]; })
    .attr("cy", function(d) { return d[1]; })
    .attr("r", 4);



var _nodes = nodes(quadtree);


_nodes = nodes(quadtree);
var displayedNodes = [];

console.log('****************** GOT ',_nodes.length, " NODES ***************");
setTimeout(deleteNode,500);
var iteration = 0.05;


function deleteNode() {
  var node =points.pop();
  if (!node) return;
  iteration= iteration +0.06;
  if (iteration > 0.8) iteration = 0.05
  var index = data.indexOf(node.point);
   console.log("=================>>>>>>>>",node,index,points.length);

  if (index > -1) {
    data.splice(index, 1);
  }
  displayedNodes.push(node.parent)
  var point = svg.selectAll(".point")
    .filter(function(d,i){return d==node.point }).transition().style("fill","transparent");


  var compacted =  node.parent.nodes.filter(function(d) { console.log(d);return d!=null})
  console.log(compacted);

  var sel = svg.selectAll(".parentNode").data(compacted);
  console.log(sel.enter());
  sel.enter().append("rect").attr("class","parentNode").attr("x", function(d) { return d.x1; })
    .attr("y", function(d) { return d.y1; })
    .attr("width", function(d) { return d.width; })
    .attr("height", function(d) { return d.height; })
  sel.attr("x", function(d) { return d.x1; })
    .attr("y", function(d) { return d.y1; })
    .attr("width", function(d) { return d.width; })
    .attr("height", function(d) { return d.height; })
    .style("fill-opacity",iteration)
  sel.exit().transition().style("fill","red").style("opacity",0).remove();

  console.log(point);
  setTimeout(deleteNode,100);
  return;
  quadtree.delete(node);



  _nodes = nodes(quadtree);

  console.log('****************** GOT ',_nodes.length, " NODES ***************",node);


  var sel = svg.selectAll(".node").data(_nodes);
    sel.enter().append("rect")
    .attr("class", "node")
    .attr("x", function(d) { return d.x1; })
    .attr("y", function(d) { return d.y1; })
    .attr("width", function(d) { return d.width; })
    .attr("height", function(d) { return d.height; })
    sel.exit().remove();
  // should remove data from array
  /*var point = svg.selectAll(".point")
    .data(data,function(d,i) { return i; })
    .exit().attr("r",20)*/
   setTimeout(deleteNode,1000);
}

function nodes(quadtree) {
  var nodes = [];
  points = [];

  quadtree.visit(function(node, x1, y1, x2, y2) {
    // en fait on peut pas rajouter les coordonées des rect directement, on les génère en visitant l'arbre

    node.x1 = x1;
    node.y1 = y1;
    node.x2 = x2;
    node.y2 = y2;
    node.width = x2-x1;
    node.height = y2-y1;
    node.visited = {};
    node.center = [x1 + (x2-x1)/2, y1+(y2-y1)/2];
    nodes.push(node);
    if (node.point) points.push(node);
  });
  return nodes;
}

// Find the nodes within the specified rectangle.
function _search(quadtree, x1, y1) {
  quadtree.visit(function(node, x1, y1, x2, y2) {
    var p = node.point;
    if (p) {
      p.scanned = true;
      p.selected = (p[0] >= x0) && (p[0] < x3) && (p[1] >= y0) && (p[1] < y3);
    }
    return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;
  });
}
document.onclick = function(e)
{
    var x = e.pageX;
    var y = e.pageY;
    console.log("User clicked at position (" + x + "," + y + ")")
};
</script>
<!DOCTYPE html>
<meta charset="utf-8">
<title>Abalone</title>
<script>
var margin = {top: 30, right: 40, bottom: 20, left: 50},
    width = 960 - margin.left - margin.right,
    height = 275 - margin.top - margin.bottom;
</script>
<style>
svg {
  font: 10px sans-serif;
}

.foreground path {
  fill: none;
  stroke: #222;
  stroke-opacity: 0.35;
  pointer-events: none;
  stroke-width: 1.5px;
}
 
.axis .title {
  font-size: 11px;
  font-weight: bold;
  text-transform: uppercase;
}

.axis line,
.axis path {
  fill: none;
  stroke: #000;
  stroke-width: 1px;
}

.brush .extent {
  fill-opacity: .3;
  stroke: #fff;
  stroke-width: 1px;
}

pre {
  width: 900px;
  margin: 10px 30px;
  tab-size: 15;
  font-size: 12px;
}
</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>


var types = {
  "Number": {
    name: "Number",
    coerce: function(d) { return +d; },
    extent: d3.extent,
    within: function(d, extent) { return extent[0] <= d && d <= extent[1]; }
  },
  "String": {
    name: "String",
    coerce: String,
    extent: function (data) { return data.sort(); },
    within: function(d, extent, dim) { return extent[0] <= dim.scale(d) && dim.scale(d) <= extent[1]; }
  }
};

var dimensions = [
  {
    name: "Sex",
    scale: d3.scale.ordinal().rangePoints([0, height]),
    type: types["String"],
    domain: ["M", "F", "I"]
  },
  {
    name: "Length",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  },
  {
    name: "Diameter",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  },
  {
    name: "Height",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  },
  {
    name: "Whole weight",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  },
  {
    name: "Shucked weight",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  },
  {
    name: "Viscera weight",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  },
  {
    name: "Shell weight",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  },
  {
    name: "Rings",
    scale: d3.scale.linear().range([height, 0]),
    type: types["Number"]
  }
];

var color = d3.scale.ordinal()
  .range(["#1b9e77","#d95f02","#7570b3"]);

var x = d3.scale.ordinal()
    .domain(dimensions.map(function(dim) { return dim.name; }))
    .rangePoints([0, width]);

var line = d3.svg.line()
    .defined(function(d) { return !isNaN(d[1]); });

var yAxis = d3.svg.axis()
    .orient("left");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var output = d3.select("body").append("pre");

var dimension = svg.selectAll(".dimension")
    .data(dimensions)
  .enter().append("g")
    .attr("class", "dimension")
    .attr("transform", function(d) { return "translate(" + x(d.name) + ")"; });

var colordimension = dimensions[0];

d3.csv("abalone.csv", function(error, rawdata) {
  if (error) throw error;

  // take subset of data
  data = d3.shuffle(rawdata).slice(0,750);

  data.forEach(function(d) {
    dimensions.forEach(function(p) {
      d[p.name] = p.type.coerce(d[p.name]);
    });
  });

  dimensions.forEach(function(dim) {
    if (!("domain" in dim)) {
      // detect domain using dimension type's extent function
      dim.domain  = d3.functor(dim.type.extent)(data.map(function(d) { return d[dim.name]; }));
    }
    dim.scale.domain(dim.domain);
  });

  color.domain(colordimension.scale.domain());

  svg.append("g")
      .attr("class", "foreground")
    .selectAll("path")
      .data(data)
    .enter().append("path")
      .attr("d", draw)
      .style("stroke", function(d) { return color(d[colordimension.name]); });

  dimension.append("g")
      .attr("class", "axis")
      .each(function(d) { d3.select(this).call(yAxis.scale(d.scale)); })
    .append("text")
      .attr("class", "title")
      .attr("text-anchor", "middle")
      .attr("y", -9)
      .text(function(d) { return d.name; });

  // Add and store a brush for each axis.
  dimension.append("g")
      .attr("class", "brush")
      .each(function(d) {
        d3.select(this).call(d.brush = d3.svg.brush()
          .y(d.scale)
          .on("brushstart", brushstart)
          .on("brush", brush));
      })
    .selectAll("rect")
      .attr("x", -8)
      .attr("width", 16);

  output.text(d3.tsv.format(data));

  function draw(d) {
    return line(dimensions.map(function(dim) {
      return [x(dim.name), dim.scale(d[dim.name])];
    }));
  }

  function brushstart() {
    d3.event.sourceEvent.stopPropagation();
  }

  // Handles a brush event, toggling the display of foreground lines.
  function brush() {
    var actives = dimensions.filter(function(p) { return !p.brush.empty(); }),
        extents = actives.map(function(p) { return p.brush.extent(); });

    var selected = [];

    d3.selectAll(".foreground path").style("display", function(d) {
      if (actives.every(function(dim, i) {
          // test if point is within extents for each active brush
          return dim.type.within(d[dim.name], extents[i], dim);
        })) {
        selected.push(d);
        return null;
      }
      return "none";
    });

    output.text(d3.tsv.format(selected));
  }
});

</script>
<!doctype html>
<html class="no-js">
  <head>
    <meta charset="utf-8">

    <link rel="dns-prefetch" href="//ajax.googleapis.com">
    <link rel="dns-prefetch" href="//google-analytics.com">
    <link rel="dns-prefetch" href="//use.edgefonts.net">

    <title>Web Designers Checklist : A Visual Designers Checklist for the Web</title>
    <meta name="description" content="A checklist for visual designers within a team setting where designers will share visual exploration with developers">
    <meta name="robots" content="all">

    <meta property="og:title" content="Web Designers Checklist : A Visual Designers Checklist for the Web">
    <meta property="og:description" content="A checklist for visual designers within a team setting where designers will share visual exploration with developers">
    <meta property="og:type" content="website">
    <meta property="og:url" content="http://roachhd.github.io/project-start">
    <meta property="og:image" content="http://webdesignerschecklist.com/images/634dff0f.og-logo.png">

    <meta name="viewport" content="width=device-width, user-scalable=1, initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="msapplication-tap-highlight" content="no">

    <!-- http://css-tricks.com/favicon-quiz -->
    <!-- Windows Tile Favicons -->
    <!-- <meta name="msapplication-TileColor" content="#2b5797">
    <meta name="msapplication-TileImage" content="/mstile-144x144.png"> -->
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <!-- <link rel="apple-touch-icon" sizes="57x57" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="114x114" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="144x144" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="60x60" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="120x120" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="76x76" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="152x152" href="http://roachhd.github.io/webdesignerschecklist/apple-touch-icon-152x152.png"> -->

    <link rel="stylesheet" href="http://roachhd.github.io/webdesignerscheckliststyles/83d1f201.vendor.css"/>

    <!--[if IE 8]>
    <style>body { max-width:819.311px; margin: 0 auto; }</style>
    <![endif]-->

    <link rel="stylesheet" href="http://roachhd.github.io/webdesigners/checklistocticons/octicons.css">

    <!--[if gt IE 8]><!-->
    <link rel="stylesheet" href="http://roachhd.github.io/webdesignerschecklist/styles/0d5ec878.main.css"/>
    <!--<![endif]-->

    <style>
    .fork-ribbon {
      position: fixed;
      top: 40px;
      right: -120px;
      z-index: 1;
      border: 0;
      background: #01CCD7;
      width: 350px;
      text-align: center;
      -webkit-transform: rotate(45deg);
      padding: 5px;
      color: #160F29 !important;
    }
    .fork-ribbon:hover {
      text-decoration: none;
    }
    </style>

    <script src="//use.edgefonts.net/source-sans-pro:n2,i2,n3,i3,n4,i4,n6,i6,n7,i7,n9,i9:all.js"></script>
    <script src="http://roachhd.github.io/webdesignerschecklist/scripts/vendor/807c6308.modernizr.js"></script>
  </head>
  <body>
    <div class="container">
      <header class="masthead">
        <h1 class="masthead__title">
          <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="icon-checklist" x="0px" y="0px" width="96px" height="100px" viewBox="0 0 96 100" enable-background="new 0 0 96 100" xml:space="preserve" aria-labelledby="ck-list-title" aria-describedby="ck-list-desc" role="img">
            <title id="ck-list-title">Checklist</title>
            <desc id="ck-list-desc">An SVG icon depicting a checklist</desc>
            <g>
              <path d="M81.902,11.084H18.089c-3.478,0-6.288,2.936-6.288,6.561V93.12c0,3.625,2.811,6.562,6.288,6.562h63.813   c3.477,0,6.29-2.938,6.29-6.562V17.645C88.192,14.021,85.379,11.084,81.902,11.084z M82.657,90.093c0,0,0.173,1.517-0.537,2.303   c-0.721,0.8-2.055,0.691-2.055,0.691l-60.709,0.032c0,0-0.856-0.013-1.509-0.762c-0.564-0.646-0.557-2.015-0.557-2.015   l0.022-70.429c0,0,0-1.043,0.611-1.6c0.659-0.602,1.612-0.653,1.612-0.653h60.721c0,0,1.151-0.032,1.689,0.519   c0.732,0.749,0.71,1.536,0.71,1.536V90.093z"/>
              <g>
                <path d="M55.722,2.298c0,1.392-1.254,2.519-2.799,2.519h-5.596c-1.546,0-2.799-1.127-2.799-2.519l0,0    c0-1.39,1.253-2.518,2.799-2.518h5.596C54.468-0.22,55.722,0.908,55.722,2.298L55.722,2.298z" style="fill: rgb(130, 233, 217);"/>
                <path d="M62.113,7.748c0-1.458-0.134-3.888-1.324-3.888H39.243c-1.113,0-1.38,2.44-1.362,3.883L62.113,7.748z" style="fill: rgb(42, 223, 194);"/>
                <path d="M67.307,12.798c0-2.084-0.191-5.556-1.891-5.556h-30.78c-1.592,0-1.972,3.488-1.947,5.549L67.307,12.798z" style="fill: rgb(89, 219, 199);"/>
              </g>

              <rect x="37.191" y="32.048" width="35.439" height="3.151"/>
              <path d="M26.044,43.288v7.874h7.876v-7.874H26.044z M27.224,49.97v-5.51h5.514v5.51H27.224z" class="cbox"/>
              <rect x="37.191" y="47.012" width="35.439" height="3.15"/>
              <rect x="37.191" y="61.359" width="35.439" height="3.15"/>
              <rect x="37.191" y="75.365" width="35.439" height="3.149"/>
              <path d="M26.044,28.324v7.875h7.876v-7.875H26.044z M27.224,35.006v-5.509h5.514v5.509H27.224z"class="cbox"/>
              <path d="M26.044,57.636v7.874h7.876v-7.874H26.044z M27.224,64.318v-5.511h5.514v5.511H27.224z" class="cbox"/>
              <path d="M26.044,71.641v7.874h7.876v-7.874H26.044z M27.224,78.322v-5.51h5.514v5.51H27.224z" class="cbox"/>
            </g>
          </svg>
        Visual Designers Checklist for the Web</h1>

        <div class="scroll-arrow">
          <a href="#content">
            <span aria-hidden="true" class="visuallyhidden">Scroll Down</span>
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="icon-arrow" x="0px" y="0px" width="100px" height="100px" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve" aria-labelledby="arrow-title" aria-describedby="arrow-desc" role="img">
              <title id="arrow-title">Down Arrow</title>
              <desc id="arrow-desc">An SVG icon indicating scroll direction.</desc>
              <g>
                <g>
                  <g>
                    <path d="M100,49.999C100,22.43,77.566,0,50,0C22.428,0,0,22.43,0,49.999C0,77.568,22.428,100,50,100     C77.566,100,100,77.568,100,49.999z M5.769,49.999C5.769,25.61,25.611,5.77,50,5.77S94.231,25.61,94.231,49.999     c0,24.39-19.843,44.231-44.231,44.231S5.769,74.389,5.769,49.999z"/>
                  </g>
                </g>
                <g>
                  <g>
                    <path d="M75.493,44.782c1.127-1.127,1.127-2.952,0-4.079c-1.127-1.126-2.952-1.126-4.079,0L50,62.121     L28.58,40.703c-1.126-1.126-2.952-1.126-4.079,0c-0.563,0.563-0.845,1.302-0.845,2.04c0,0.738,0.282,1.476,0.845,2.04     L47.96,68.238c1.127,1.127,2.953,1.127,4.079,0L75.493,44.782z"/>
                  </g>
                </g>
              </g>
            </svg>
          </a>
        </div>
      </header>

      <main id="content" role="main">
        <section class="wrap">
          <div class="intro">
            <h2>
              <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="icon-info" x="0px" y="0px" width="99.08px" height="100.002px" viewBox="0 0 99.08 100.002" enable-background="new 0 0 99.08 100.002" xml:space="preserve" aria-labelledby="info-title" aria-describedby="info-desc" role="img">
                <title id="info-title">Information Icon</title>
                <desc id="info-desc">An SVG icon indicating additional information before users begin.</desc>
                <path d="M49.539,0C22.188-0.01,0.018,22.381,0,50.023c0.018,27.601,22.188,49.993,49.539,49.979  c27.344,0.014,49.518-22.378,49.541-49.979C99.057,22.381,76.883-0.01,49.539,0z M49.512,21.634c4.372,0,7.922,3.546,7.922,7.922  s-3.55,7.923-7.922,7.923c-4.38,0-7.927-3.547-7.927-7.923S45.132,21.634,49.512,21.634z M61.117,74.787H38.169v-3.922h3.342  c0.48,0,0.873-0.396,0.873-0.881V44.711c0-0.484-0.389-0.881-0.873-0.881h-3.342v-3.795h18.466v29.567  c0,0.696,0.396,1.263,0.881,1.263h3.602V74.787z"/>
              </svg>
              Before you Start
            </h2>

            <p class="deck">These are merely suggestions for your workflow. Feel free to contribute on <a href="//github.com/grayghostvisuals/webdesignerschecklist">GitHub</a> or make a fork and create your own unique workflow checklist. This list is meant for visual designers working within a team setting where visual comps and exploration will be shared with a developer. Checkboxes are persistent (<em>they won't uncheck on refresh</em>) where <a href="http://caniuse.com/#search=localstorage">localstorage</a> is supported.</p>
          </div>

          <form action="/" id="wdc-form" data-persist="garlic" data-destroy="false" method="post">
            <!-- $File Org -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">External File Organization</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Consolidated Assets
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Named Files Appropriately
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Assets are Relative to Comp File
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  UI Elements Templated
                </label>
              </li>
            </ul>

            <!-- $Internal File Org -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Internal File Organization</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Layers Named Appropriately & Semantically
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Organized Modules within Folders
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Deleted Unwanted Layers
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Globalized Common Elements
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Used Smart Objects (if Allowed)
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Included module states on separate layers and properly labeled
                </label>
                <p>(<em>i.e. Link Hovered, Window Scrolled</em>)</p>
              </li>
            </ul>

            <!-- $Design Practices -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Design Practices</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Color profile set as RGB
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Comp Contains Whole Pixel Values
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Created a Grid and Included Guides for Grid System
                </label>
                <p>(<em>also consider sharing <a href="//guideguide.me">guideguide</a> settings across teams</em>)</p>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Fallback Interactions for Hover Based Events
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Used Dropshadows Sparingly
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Used Licensed Icons/Photos
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Appropriate Favicons Created
                </label>
                <p>(<em>Favicons appear in the tab of your browser in order to help identify. Favicons render in the browser tab at 16 x 16 and as large as 144 x 144 for apple icons</em>)</p>
              </li>
            </ul>

            <!-- $Filters -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Filters</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Overlays Are Appropriate and used Sparingly
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  CSS Support has been considered and researched
                </label>
              </li>
            </ul>

            <!-- $Type -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Typography</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Web Font Kit &lt; 250k
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Font-sizes smaller than 14-16px render well and are hinted properly for the Web
                </label>
                <p>(<em><a href="//webfontspecimen.com">Web Font Specimen</a></em>)</p>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Licensed Fonts Made Available
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Unchecked Paragraph Hyphenation
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Documentation Outlining Typographic Scale/Styles
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Equivalent Web Fonts Listed
                </label>
                <p>(<em>If comp fonts are not available through a Web Font service</em>.)</p>
              </li>
            </ul>

            <!-- $Imagery -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Images</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Shapes Aren't Stretched
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Masks Globalized
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Vectors Processed as Smart Objects
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Created Various Desired Resolutions
                </label>
                <p>(<em><a href="http://www.smashingmagazine.com/2014/05/12/picturefill-2-0-responsive-images-and-the-perfect-polyfill">Read More about Picturefill</a></em>)</p>
              </li>
            </ul>

            <!-- $Vector -->
            <!-- http://filamentgroup.com/lab/artifact-austin-svg-workflow -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Vector</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Create Separate Artboards
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Combine Paths and Unite with Pathfinder
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Combine Strokes
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Avoided 3D Effects, Blurs, Blend Modes and Drop-
                Shadows
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Small Proportions Make Sense
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Exported and saved as SVG
                </label>
                <p>(<em><a href="http://creativedroplets.com/export-svg-for-the-web-with-illustrator-cc">following these steps</a></em>)</p>
              </li>
            </ul>

            <!-- $Exporting Prep -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Before Exporting</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Proofread
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Compare Against Mockups/Wireframes
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Account for All Images
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Verified Browser Compatibility
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Consistency Check
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Packaged fonts as a .zip
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Clean up unused and nested layers
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Packaged comp as a .zip
                </label>
                <p>(<em>lowers the file size for developers to download</em>)</p>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Included Favicons
                </label>
                <p>(<em>Favicons appear in the tab of your browser in order to help identify and add a touch of flare to a site. Favicons render in the browser tab at 16 x 16 and as large as 144 x 144 for apple icons</em>)</p>
              </li>
            </ul>

            <!-- $Exporting -->
            <ul class="design-list">
              <li class="list__head"><h3 class="list__title">Exporting</h3></li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Save for Web & Devices
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Choose Progressive
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Conserve File Size
                </label>
              </li>
              <li>
                <label class="control checkbox">
                  <input type="checkbox">
                  <span class="control-indicator"></span>
                  Export as RGB Color Profile.
                </label>
              </li>
            </ul>

            <input type="reset" id="cklist-reset" value="Reset">
          </form>
        </section>

        <footer>
          <p class="wrap">Thanks to <a href="http://photoshopetiquette.com">Dan Rose</a> for the inspiration, <a href="//garlicjs.org">Garlicjs</a> for the persistent checkboxes, <a href="//yeoman.io">Yeoman</a> for the tooling, Jardson A., Aaron Dodson & SuperAtic LABS for icons via <a href="http://thenounproject.com">The Noun Project</a> and <a href="https://edgewebfonts.adobe.com/fonts#/?class=sans-serif&recommendedFor=headings&weight=regular&width=regular&collection=source-sans-pro:n2,i2,n3,i3,n4,i4,n6,i6,n7,i7,n9,i9:all">Adobe Edge Webfonts</a> for Source Sans Pro.<br>Contribute on <a href="//github.com/grayghostvisuals/webdesignerschecklist">GitHub</a></p>
        </footer>
      </main>
    </div>

    <a href="//github.com/grayghostvisuals/webdesignerschecklist" class="fork-ribbon"><span class="octicon octicon-repo-forked"></span> Fork on GitHub</a>

    <script src="http://roachhd.github.io/webdesignerschecklist/scripts/4776dee8.vendor.js"></script>

    <script src="//cdnjs.cloudflare.com/ajax/libs/garlic.js/1.2.2/garlic.min.js"></script>

    <script src="http://roachhd.github.io/webdesignerschecklist/scripts/0b813030.main.js"></script>
</body>
</html><html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>d3.carto.map - clustering</title>
  <meta charset="utf-8" />
    <link type="text/css" rel="stylesheet" href="d3map.css" />
    <link type="text/css" rel="stylesheet" href="https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css" />
</head>
<style>
  html,body {
    height: 100%;
    width: 100%;
    margin: 0;
  }

  #map {
    height: 100%;
    width: 100%;
    position: absolute;
  }

circle {
    fill: black;
    stroke: red;
}

</style>
<script>
  function makeSomeMaps() {
    map = d3.carto.map();

    d3.select("#map").call(map);
    
    tileLayer = d3.carto.layer();
    tileLayer
    .type("tile")
    .path("examples.map-zgrqqx0w")
    .label("Base")
    
    csvLayer = d3.carto.layer.csv();
    csvLayer
    .path("http://bl.ocks.org/emeeks/raw/c970c9ee3e242e90004b/sample_points.csv")
    .label("CSV Points")
    .cssClass("pinkcircle")
    .renderMode("svg")
    .markerSize(2)
    .x("x")
    .y("y")
    .cluster(true);
    
    map.addCartoLayer(tileLayer).addCartoLayer(csvLayer);

  }
</script>
<body onload="makeSomeMaps()">
<div id="map"></div>
<footer>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="http://d3js.org/topojson.v1.min.js" type="text/javascript">
</script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/tile.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.quadtiles.js" type="text/javascript">
</script>
<script src="http://bl.ocks.org/emeeks/raw/f3105fda25ff785dc5ed/d3.geo.raster.js" type="text/javascript">
</script>
<script src="https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js" type="text/javascript">
</script>
</footer>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script src="//d3js.org/d3.geo.projection.v0.min.js" charset="utf-8"></script>
<script src="//d3js.org/queue.v1.min.js"></script>
<script>

var width = 1200,
    height = 700,
    speed = 1e-2;

var wflags = "https://gist.githubusercontent.com/espinielli/5107491/raw/world-country-flags.tsv",
    w110 = "https://gist.githubusercontent.com/mbostock/4090846/raw/world-110m.json",
    wnames = "https://gist.githubusercontent.com/mbostock/4090846/raw/world-country-names.tsv";

var projection = d3.geo.robinson()
    .scale(180)
    .translate([width / 2, height / 2])
    .precision(.1);

var graticule = d3.geo.graticule();

var canvas = d3.select("body").append("canvas")
    .attr("width", width)
    .attr("height", height);

var context = canvas.node().getContext("2d");

var path = d3.geo.path()
    .projection(projection)
    .context(context);

// clips the canvas with provided path function
// if pathFunction is an array, clips with all functions
function clip(pathFunction) {
  ctx.beginPath();
  if (Array.isArray(pathFunction)) pathFunction.forEach(execute);
  else pathFunction();
  ctx.clip();
}

function execute(fn) {
  return fn();
}

var q = queue()
  .defer(d3.json, w110)
	.defer(d3.tsv, wnames)
  .defer(d3.tsv, wflags)
  .await(ready);


function ready(error, world, names, flags) {
	if (error) {
		alert('error: ' + error);
		return;
	}

  var land = topojson.feature(world, world.objects.land),
      countries = topojson.feature(world, world.objects.countries).features,
      borders = topojson.mesh(world, world.objects.countries,
                              function(a, b) { return a !== b; }),
      grid = graticule();

  flags.forEach(function (d) { d.id = +d.id;});
  flags.sort(function(a,b) {
    return +a.id < +b.id ? -1 : +a.id > +b.id ? +1 : 0;
  });

  countries = countries.filter(function(d) {
    return names.some(function(n) {
      if (d.id == n.id) {
        return d.name = n.name;
      }
    });
  });
  
  countries = countries.filter(function(d) {
    return flags.some(function(n) {
      if (d.id == n.id) {
        var bounds = path.bounds(d);
        if (bounds[0][0] < 0) bounds[0][0] = 0;
        if (bounds[1][0] > width) bounds[1][0] = width;
        if (bounds[0][1] < 0) bounds[0][1] = 0;
        if (bounds[1][1] < 0) bounds[1][1] = height;
    
        d.bounds = bounds; 
        
        return d.url = n.url;
      }
    });
  });

  d3.timer(function(elapsed) {
    projection.rotate([speed * elapsed, 0]);

    context.clearRect(0, 0, width, height);

    context.beginPath();
    path(land);
    context.fillStyle = "#222";
    context.fill();

    context.beginPath();
    path(borders);
    context.lineWidth = .5;
    context.strokeStyle = "#fff";
    context.stroke();

    context.beginPath();
    path(grid);
    context.lineWidth = .5;
    context.strokeStyle = "rgba(119,119,119,.5)";
    context.stroke();
  });
}

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Loading CSV Data with D3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">

		body {
	        background-color: #fff1e0;
	        font-family: Arial, sans-serif;
      	}

      	h1{
      		margin: 0;
      		font-size: 1.3em;
      		color: #43423E;
      		margin-bottom: 5px;

      	

		}

      	p{
      		font-size: 1em;
      		margin: 10px 0 0 0;
      		color: #777777;
      		line-height: 1.3em;
      		width: 660px;
      	}

		circle{
			fill: #8AB7C3;
		}

		circle:hover{
			  stroke-width: 8px;
  			stroke: rgba(231, 114, 101, .3);
			fill:rgb(231, 114, 101);

		}

			.axis path,
			.axis line {
				fill: none;
				stroke: #777777;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
				  fill: #777777;
		
			}


		

			a{
				text-decoration: none;
			}


			#xAxis-title{
			margin:0 auto;
			padding: 10px;
			text-align: center;
			color: #777777;
		


			}

			.yText{
			fill:#777777;
			font-size: 1em;

			}

			.source{
				margin: 0;
				font-size: 12px;
				color: #777777;
			}

/*.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}*/
			
			/*.x.axis path,*/
		
		

		</style>


	</head>
	<body>
	

	<h1>Which country spent the most per person on health in 2013?</h1>
	<p>In the graph you see the countries in the world that spend the most per person on health. The spending is plotted against life expectancy. 
	

		<script type="text/javascript">	

		var w = 750;
		var h = 505;
		var padding = [30, 10, 70, 70];

		var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] - padding[3] ]);

		var yScale = d3.scale.linear()
						.range([ padding[0], h - padding[2] ]);


		var body = d3.select("body")


		// var tip = d3.tip()
		// 		  .attr('class', 'd3-tip')
		// 		  .offset([-10, 0])
		// 		  .html(function(d) {
		// 		    return "<strong>Frequency:</strong> <span style='color:red'>" + d.lifeExpectancy + "</span>";
  // 					})
					
						
						


						var yAxis = d3.svg.axis()
									.scale(yScale)
									.orient('left');

						var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient('bottom')
							.ticks(13)
							.tickFormat(function(d) {
								return "$" + d ;
							})


			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

						// svg.call(tip);




			//Load in contents of CSV file
			d3.csv("spending-on-health.csv", function(data) {

					data.sort(function(a, b) {
					return d3.descending(+a.lifeExpectancy, +b.lifeExpectancy);

	
				});
					xScale.domain([

						d3.min(data, function(d){
						return +d.healthExpenditure;
						}), 
						d3.max(data, function(d){
						return +d.healthExpenditure;
						}) 
						]);

					yScale.domain([
						d3.max(data, function(d){
						return +d.lifeExpectancy;
					}),
						d3.min(data, function(d){
						return +d.lifeExpectancy;
					})
						
						]);
					//.attr('height', data.length * 20 )
				
				var circles = svg.selectAll("circle")
					.data(data)
					.enter()
					.append("circle")
					.attr('class','circle')
					  // .on('mouseover', tip.show)
      	// 			.on('mouseout', tip.hide);


				circles.attr("cx", function(d){
					return xScale(d.healthExpenditure);

				})
					.attr("cy", function(d) {
						return yScale(d.lifeExpectancy);
					})
					.attr("r", 0.1)
					.append("title")
					.html(function(d){
						return d.CountryName +' has a life expectancy of ' + d.lifeExpectancy + " years and spent $" + d.healthExpenditure + ' on health (per person)'
					});


					
				


		
					circles.sort(function(a,b) {
						return d3.descending(+a.lifeExpectancy, +b.lifeExpectancy);

					})
					.transition()
					.delay(function(d, i) {
						return i *50;
					})
					.duration(5)
					.attr("r", 4);

				

					svg.append('g')
					.attr('class','x axis' )
					.attr("transform", "translate(0," + (h - padding[2]) + ")")




					.call(xAxis);





					svg.append('g')
						.attr('class','y axis' )
						.attr('transform', 'translate(' + (padding[3] -1) + ',0)')
						.call(yAxis);

						svg.append('text')
							.text('Life expectancy (years)')
							.attr('x',-10 )
							.attr('y',30 )
							.style("text-anchor", "end")
							.attr("dx", "-10em")
						     .attr("dy", ".0em")
						     .attr("transform", function(d) {
						         return "rotate(-90)" 
						     })
						     .attr('class','yText' )


						     svg.append('text')
							.text('Total health spending per person (international $)')
							.attr('x',240 )
							.attr('y',490 )
							.style("text-anchor", "end")
							.attr("dx", "20em")
						     .attr("dy", ".0em")
						     .attr("transform", function(d) {
						         return "rotate(0)" 
						     })
						     .attr('class','yText' )



			});


		</script>

	

		<p class="source">Source: <a href="http://www.worldbank.org/">The World Bank</a></p>


	</body>
</html>





<html>
<head>
  <meta charset="utf-8">
  <title>D3 realtime visulization</title>
  <style type="text/css">
  .chart rect {
    stroke: white;
    fill: steelblue;
  }
  .chart line {
    stroke: white;
    fill: steelblue;
  }
  </style>
  <script src="https://raw.github.com/searls/jasmine-all/master/jasmine-all-min.js"></script>
  <script>
  if (location.hash === '#testem')
    document.write('<script src="/testem.js"></'+'script>')
  </script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js"></script>
  <script src="https://raw.github.com/mennovanslooten/Observable-Arrays/master/js/underscore.observable.js"></script>
  <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
  <script src="https://raw.github.com/airportyh/testem/master/public/testem/jasmine_adapter.js"></script>
  <script src="https://raw.github.com/raimohanska/bacon.js/master/dist/Bacon.min.js"></script>
  <script src="http://coffeescript.org/extras/coffee-script.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.0.1/d3.v3.min.js"></script>
</head>
<body>
  <h1>Real-time data visulization by D3.js and Bacon.js</h1>
  <p>Data source: Test Coverage of Bacon.js</p>
  <p>X: log coverage Y: lineno</p>
  <div class="coverage"></div>
  <script src="bundle.js"></script>
  <script type="text/coffeescript">
    # Settings
    w = 960
    h = 3000
    svg = d3.select(".coverage").append("svg")
      .attr("class", "chart")
      .attr("width", w)
      .attr("height", h)
        .append("g")
    lineno = [0..9]
    lineno[i] = n * 100 for n, i in lineno
    svg.selectAll("text").data(lineno)
      .enter().append("text")
      .attr("y", (d) -> if d is 0 then 20 else d * 3)
      .attr("x", 40)
      .attr("text-anchor", "middle")
      .text((d) -> if d is 0 then 'line number' else d)
    window.coverage = new Bacon.Bus() unless window.coverage?
    coverage.onValue (data) ->
      x = d3.scale.log().domain([1, 7157]).range([0, w])
      # bar chart
      bar = svg.selectAll("rect").data(data)
      bar.enter().append("rect")
        .attr("y", (d, i) -> i * 3)
        .attr("x", 100)
        .attr("height", 3)
      bar.attr("width", x)
      bar.exit().remove()
  </script>
</body>
</html><html>
<head>
  <title>D3 in Action Chapter 10 - Example 2</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/colorbrewer.v1.min.js" type="text/JavaScript"></script>
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
</head>
<style>
  svg {
    height: 500px;
    width: 500px;
    border: 1px solid gray;
  }
</style>
<body>
  <div id="viz">
  <svg></svg>
</div>
</body>
  <footer>
    
<script>
  d3.json("tweets.json", function(error, data) {
      makeAGrid(data);
    })
  
  function makeAGrid(data) {
    var grid = d3.layout.grid();
    grid.size([400,400]);
    var griddedData = grid(data.tweets);

    d3.select("svg")
    .append("g")
    .attr("transform", "translate(50,50)")
    .selectAll("circle").data(griddedData)
    .enter()
    .append("circle")
    .attr("cx", function(d) {return d.x})
    .attr("cy", function(d) {return d.y})
    .attr("r", 20)
    .style("fill", "pink")
    
    var fakeTweets = []
    for (x = 0;x<12;x++) {
      var tweet = {id: x, content: "Fake Tweet #" + x};
      fakeTweets.push(tweet);
    }
      var doubledArray = data.tweets.concat(fakeTweets);
    
      var newGriddedData = grid(doubledArray);

    d3.select("g").selectAll("circle").data(newGriddedData)    
    .enter()
    .append("circle")
    .attr("cx", 0)
    .attr("cy", 0)
    .attr("r", 20)
    .style("fill", "darkred");

    d3.select("g").selectAll("circle")
    .transition()
    .duration(1000)
    .attr("cx", function(d) {return d.x})
    .attr("cy", function(d) {return d.y})
    .each("end", resizeGrid1)
    
    function resizeGrid1() {
      grid.size([200,200])
      grid(doubledArray)
      
      d3.select("g").selectAll("circle")
        .transition()
        .duration(1000)
        .attr("cx", function(d) {return d.x})
        .attr("cy", function(d) {return d.y})
        .each("end", resizeGrid2)
    }
    
    function resizeGrid2() {
      grid.size([200,400])
      grid(doubledArray)
      
      d3.select("g").selectAll("circle")
        .transition()
        .duration(1000)
        .attr("cx", function(d) {return d.x})
        .attr("cy", function(d) {return d.y})
    }

  }
  
  d3.layout.grid = function() {
  var gridSize = [10,10];
  var gridColumns;
  var gridRows;
  var gridXScale = d3.scale.linear();
  var gridYScale = d3.scale.linear();

    function processGrid(data) {

      var rows = Math.ceil(Math.sqrt(data.length));
      var columns = Math.ceil(Math.sqrt(data.length));

      gridXScale.domain([1,columns]).range([0,gridSize[0]]);
      gridYScale.domain([1,rows]).range([0,gridSize[1]]);

      var x = 0;

        for (i = 1; i <= rows; i++) { 
          for (j = 1; j <= columns; j++) {
            if (data[x]) {
              data[x].x = gridXScale(j);
              data[x].y = gridYScale(i);
              x++;
            }
            else {
              break;
            }
          }
        }
      
      return data;
    }
    
    processGrid.size = function(newSize) {
      	if (!arguments.length) return gridSize;

        gridSize = newSize;
        return this;
    }

    return processGrid;
  }
</script>
  </footer>

</html>
<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Exploring Voronoi</title>
		<link href='http://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
			<script type="text/javascript" src="datgui-min.js"></script>
			<link rel="stylesheet" href="voronoi.css">
			<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
		</head>
		<body>
			<p id="instructions">Explore <a href="http://en.wikipedia.org/wiki/Voronoi_diagram">Voronoi diagrams</a> and <a href="http://en.wikipedia.org/wiki/Delaunay_triangulation">Delaunay triangulation</a>. <strong>Click to add dots.</strong> Drag dots to move them.</p>
			<label id="form" for="show-voronoi" class="form">
  			<input type="checkbox" id="show-voronoi" checked>
  			Show Voronoi Polygons
			</label>
			<label id="form2" for="show-triangles" class="form">
  			<input type="checkbox" id="show-triangles" checked>
  			Show Delaunay Triangles
			</label>
			<label id="form3" for="show-circles" class="form">
  			<input type="checkbox" id="show-circles" checked>
  			Show Circles
			</label>	
			<label id="form4" for="show-circleCenters" class="form">
  			<input type="checkbox" id="show-circleCenters">
  			Show Circle Centers
			</label>		
			<section id="box" class="main">
			</section>
			<!-- call JS files -->
			<script src="voronoi.js"></script>
		</body>
	</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

  body {
    font: 24px sans-serif;
    text-align: center;
  }

  body > div {
    display: inline-block;
    width: 400px;
    vertical-align: top;
  }

  strong {
    display: block;
  }

</style>
<body>
  <div>
    <strong>SVG</strong>
    <div class="svg"></div>
  </div>
  <div>
    <strong>GIF</strong>
    <div class="gif"></div>
  </div>
<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.10/d3.min.js"></script>
<script src="//gabelerner.github.io/canvg/canvg.js"></script>
<script src="gif.js"></script>
<script>

var margin = {top: 20, right: 5, bottom: 30, left: 60},
    width = 400 - margin.left - margin.right,
    height = 320 - margin.top - margin.bottom,
    frames = 40,
    duration = 2000;

// Standard scales and axes
var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height,0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .tickSize(-height)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .tickSize(-width)
    .orient("left");

var line = d3.svg.line()
    .x(function(d){ return x(d.date); })
    .y(function(d){ return y(d.close); });

// Canvas to send canvg to
var canvas = d3.select(".gif").append("canvas")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom);

// SVG
var outer = d3.select(".svg").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom);

// Explicit background color, won't inherit page backgroudn
outer.append("rect")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .attr({
      stroke: "none",
      fill: "#fff"
    });

// Margin convention
var svg = outer.append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("sp-500.csv", function(error, data) {
  if (error) throw error;

  data.forEach(function(d){
    d.date = new Date(d.date);
    d.close = +d.close;
  });

  x.domain(d3.extent(data,function(d){ return d.date; }));
  y.domain(d3.extent(data,function(d){ return d.close; }));

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);

  // Set relevant attrs directly instead of via CSS
  d3.selectAll("path").remove();

  d3.selectAll("line")
      .attr({
        fill: "none",
        stroke: "#e0e0e0",
        "stroke-width": 0.5
      });

  d3.selectAll("text")
      .attr({
        fill: "#000",
        "font-family": "sans-serif",
        "font-size": "12px"
      });

  var path = svg.append("path")
      .attr("class","price")
      .attr({
        stroke: "#e51133",
        fill: "none"
      })
      .attr("d",line(data));

  var totalLength = path.node().getTotalLength();

  var gif = new GIF({
    workers: 3,
    quality: 1,
    repeat: 0
  });

  // Update SVG per frame, render to canvas, add to gif stack
  d3.range(frames).forEach(function(f){

    drawFrame(f * duration / (frames - 1));

    canvg(canvas.node(),d3.select(".svg").node().innerHTML,{ ignoreMouse: true, ignoreAnimation: true });

    gif.addFrame(canvas.node(), {
      delay: duration / frames,
      copy: true
    });

  });

  // Discard canvas
  canvas.remove();

  gif.on("progress",function(p){

    drawFrame(p * duration);

    d3.select(".gif").text(d3.format("%")(p) + " rendered");

  });

  gif.on("finished",function(blob){

    d3.select(".gif")
        .text("")
        .append("img")
          .attr("src",URL.createObjectURL(blob));

    d3.timer(drawFrame);

  });

  gif.render();

  function drawFrame(t) {

    var length = t % duration / duration * totalLength;

    path.attr("stroke-dasharray",length + " " + totalLength);

  }

});

</script>
<html>
<head>
  <title>D3 in Action Chapter 8 - Example 2</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
</head>
<style>
tr {
  border: 1px gray solid;
}

td {
  border: 2px black solid;
}

div.table {
  position:relative;
}
div.data {
  position: absolute;
  width: 90px;
  padding: 0 5px;
}

div.head {
  position: absolute;
}

div.datarow {
  position: absolute;
  width: 100%;
  border-top: 2px black solid;
  background: white;
  height: 35px;
  overflow: hidden;
}

div.gallery {
  position: relative;
}

img.infinite {
  position: absolute;
  background: rgba(255,255,255,0);
  border-width: 1px;
  border-style: solid;
  border-color: rgba(0,0,0,0);
}

</style>
<body>
<div id="traditional"> 
</div>
</body>
  <footer>
    
<script>
d3.json("tweets.json",function(error,data) { createSpreadsheet(data.tweets)});
      
      function createSpreadsheet(incData) {
        
        var keyValues = d3.keys(incData[0])
        
        d3.select("#traditional")
        .append("div")
        .attr("class", "table")

        d3.select("div.table")
        .append("div")
        .attr("class", "head")
        .selectAll("div.data")
        .data(keyValues)
        .enter()
        .append("div")
        .attr("class", "data")
        .html(function (d) {return d})
        .style("left", function(d,i) {return (i * 100) + "px"});

        d3.select("div.table")
        .selectAll("div.datarow")
        .data(incData, function(d) {return d.content})
        .enter()
        .append("div")
        .attr("class", "datarow")
        .style("top", function(d,i) {return (40 + (i * 40)) + "px"});
        
        d3.selectAll("div.datarow")
        .selectAll("div.data")
        .data(function(d) {return d3.entries(d)})
        .enter()
        .append("div")
        .attr("class", "data")
        .html(function (d) {return d.value})
        .style("left", function(d,i,j) {return (i * 100) + "px"});
      }

</script>
  </footer>

</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  background-color: #f5f5f5;
}

.axis path,
.axis line {
  fill: none;
  stroke: #a9a9a9;
  shape-rendering: crispEdges;
}
  
.axis text{
   stroke: #a9a9a9
 }


.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("linear")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name], name:name};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { console.log(d); return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });
  
	city.selectAll('circle')
    .data(function(d){ return d.values})
    .enter().append('circle')
    .attr("cx", function(d) { return x(d.date) })
    .attr("cy", function(d) { return y(d.temperature) })
    .attr("r", 1.5)
  	.style('fill', function(d){ return color(d.name)});

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
<!DOCTYPE html>
<html>
	<head>
        <meta charset="utf-8">
        <meta name="description" content="Data matching diagram" />
        <title>Data matching diagram</title>
		<link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
	</head>
	<body>
        <svg height="500" width="960"></svg>
        <script src="index.js"></script>
	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<head>
	<script src="http://d3js.org/d3.v3.min.js"></script>
</head>
<style>
	g.axis path, g.axis line {
		fill: none;
		stroke: black;
		shape-rendering: crispEdges;
	}

	g.brush rect.extent {
		fill-opacity: 0.2;
	}

	.resize path {
		fill-opacity: 0.2;
	}
</style>
<body>

	<div id="chart"></div>

<script>
	var nestedData;

	var main_margin = {
		    top: 25,
		    right: 80,
		    bottom: 60,
		    left: 70
	    },

		width = 900 - main_margin.left - main_margin.right,
		mini_x_height = 10;
		main_height = 525 - main_margin.top - main_margin.bottom,

		mini_x_margin = {
			top: main_height,
			right: main_margin.right + 10,
			bottom: main_margin.bottom,
			left: main_margin.left + 10
		},
		
		mini_x_width = 900 - mini_x_margin.left - mini_x_margin.right,
		
		mini_y_margin = {
			top: main_margin.top + 10,
			right: 0,
			bottom: main_margin.bottom + 10,
			left: 0
		},
		mini_y_width = 10,
		mini_y_height = 525 - mini_y_margin.top - mini_y_margin.bottom;


	var color = d3.scale.category10();

	// x0 is the groups scale on the x axis.
	var main_x0 = d3.scale.ordinal().rangeRoundBands([0, width], 0.2);
	var mini_x0 = d3.scale.ordinal().rangeRoundBands([0, width], 0.2);

	var main_xZoom = d3.scale.linear()
		.range([0, width])
		.domain([0, width]);

	// x1 is the series scale on the x axis.
	var main_x1 = d3.scale.ordinal();
	var mini_x1 = d3.scale.ordinal();

	// y is the value scale on the y axis.
	var main_y0 = d3.scale.linear().range([main_height, 0]);

	var mini_y0 = d3.scale.linear().range([mini_y_height, 0]);

	var main_xAxis = d3.svg.axis()
		.scale(main_x0)
		.orient("bottom");

	var mini_xAxis = d3.svg.axis()
		.scale(mini_x0)
		.orient("bottom");

	var main_yAxis = d3.svg.axis()
		.scale(main_y0)
		.orient("left");

	var mini_yAxis = d3.svg.axis()
		.scale(mini_y0)
		.orient("left");

	var svg = d3.select("#chart").append("svg")
		.attr("width", width + main_margin.left + main_margin.right)
		.attr("height", main_height + main_margin.top + main_margin.bottom);

	var main = svg.append("g")
		.attr("transform", "translate(" + main_margin.left + "," + main_margin.top + ")");

	main.append("defs").append("clipPath")
		.attr("id", "clip")
		.append("rect")
		.attr("width", width)
		.attr("height", main_height + mini_x_height + main_margin.bottom);

	var mini_x = svg.append("g")
		.attr("transform", "translate(" + mini_x_margin.left + "," + (main_margin.top + main_height) + ")")
		.attr("width", mini_x_width);

	var mini_y = svg.append("g")
		.attr("width", mini_y_width)
		.attr("transform", "translate(" + (main_margin.left - mini_y_width) + ", " + mini_y_margin.top + ")")
		.attr("height", mini_y_height);

	d3.csv("data.csv", function(error, data) {

		var seriesValues = d3.set(data.map(function(x){return x.Year;})).values().sort(d3.ascending);

		nestedData = d3.nest()
			.key(function(d) { return d.Country;})
			.sortKeys(d3.ascending)
			.sortValues(function(a, b) { return a.Year - b.Year; })
			.entries(data);

		var groupValues = d3.set(data.map(function (x) { return x.Country; })).values();

		// Define the axis domains
		main_x0.domain(groupValues);
		mini_x0.domain(groupValues);

		main_x1.domain(seriesValues).rangeRoundBands([0, main_x0.rangeBand()], 0);
		mini_x1.domain(seriesValues).rangeRoundBands([0, main_x0.rangeBand()], 0);

		main_y0.domain([0, d3.max(nestedData, function (d) { return d3.max(d.values, function (d) { return d.Cost; }); })]);
		mini_y0.domain(main_y0.domain());

		var xBrush = d3.svg.brush().x(mini_x0).on("brush", xBrushed);
		var yBrush = d3.svg.brush().y(mini_y0).on("brush", yBrushed);

		// Add the x axis
		main.append("g")
			.attr("class", "x axis")
			.attr("transform", "translate(0," + (main_height + mini_x_height) + ")")
			.attr("clip-path", "url(#clip)")
			.call(main_xAxis)
			.selectAll(".tick text")
			.call(wrap, main_x0.rangeBand());

		// Add the y axis
		main.append("g")
			.attr("class", "y axis")
			.attr("transform", "translate(" + (-mini_y_width) + ", 0)")
			.call(main_yAxis)
			.append("text")
			.attr("transform", "rotate(-90), translate(" + -(main_height / 2) + ", " + -(mini_y_width + main_margin.left - 20) + ")")
			.attr("dy", ".71em")
			.style("text-anchor", "middle")
			.text("Cost");

		var x_arc = d3.svg.arc()
		.outerRadius(mini_x_height / 2)
		.startAngle(0)
		.endAngle(function(d, i) {
			 return i ? -Math.PI : Math.PI;
		});

		var brush_x_grab = mini_x.append("g")
			.attr("class", "x brush")
			.call(xBrush);

		brush_x_grab.selectAll(".resize").append("path")
			.attr("transform", "translate(0," + mini_x_height / 2 + ")")
			.attr("d", x_arc);

		brush_x_grab.selectAll("rect").attr("height", mini_x_height);

		var y_arc = d3.svg.arc()
			.outerRadius(mini_y_width / 2)
			.startAngle(-(Math.PI/2))
			.endAngle(function(d, i) {
				return i ? -((3 * Math.PI) / 2) : ((Math.PI) / 2);
		});

		var brush_y_grab = mini_y.append("g")
			.attr("class", "y brush")
			.call(yBrush);

		brush_y_grab.selectAll(".resize").append("path")
			.attr("transform", "translate(" + (mini_y_width / 2) + ", 0)")
			.attr("d", y_arc);

		brush_y_grab.selectAll("rect").attr("width", mini_y_width);

		// Create the main bars
		var bar = main.selectAll(".bars")
			.data(nestedData)
			.enter().append("g")
			.attr("clip-path", "url(#clip)")
			.attr("class", function(d) {
				return d.key + "-group bar";
			});

		bar.selectAll("rect")
			.data(function(d) {
				return d.values;
			})
			.enter().append("rect")
			.attr("class", function(d) {
				return d.Year;
			})
			.attr("transform", function(d) {
				return "translate(" + main_x0(d.Country) + ",0)";
			})
			.attr("width", function(d) {
				return main_x1.rangeBand();
			})
			.attr("x", function(d) {
				return main_x1(d.Year);
			})
			.attr("y", function(d) {
				return main_y0(d.Cost);
			})
			.attr("height", function(d) {
				return main_height - main_y0(d.Cost);
			})
			.style("fill", function (d) {
				return color(d.Year);
			});


		// Draws the series items onto a legend
		var legend = svg.selectAll(".legend")
			.data(seriesValues.slice())
			.enter().append("g")
			.attr("class", "legend")
			.attr("transform", function (d, i) { return "translate(50," + (main_margin.top + (i * 20)) + ")"; });

		legend.append("rect")
			.attr("x", width - 18)
			.attr("width", 18)
			.attr("height", 18)
			.style("fill", color);

		legend.append("text")
			.attr("x", width - 24)
			.attr("y", 9)
			.attr("dy", ".35em")
			.style("text-anchor", "end")
			.text(function (d) { return d; });

		// Called to re-draw the bars on the main chart when the brush on the x axis
		// has been altered.
		function xBrushed() {
			var originalRange = main_xZoom.range();
			main_xZoom.domain(xBrush.empty() ? originalRange : xBrush.extent());
			main_x0.rangeRoundBands([main_xZoom(originalRange[0]), main_xZoom(originalRange[1])], .1);

			main_x1.rangeRoundBands([0, main_x0.rangeBand()], 0);

			bar.selectAll("rect")
				.attr("transform", function (d) {
					return "translate(" + main_x0(d.Country) + ",0)";
				})
				.attr("width", function (d) {
					return main_x1.rangeBand();
				})
				.attr("x", function (d) {
					return main_x1(d.Year);
				});

			main.select("g.x.axis").call(main_xAxis).selectAll(".tick text").call(wrap, main_x0.rangeBand());
		};

		// Called to re-draw the bars on the main chart when the
		// brush on the y axis has been altered.
		function yBrushed() {
			main_y0.domain(yBrush.empty() ? mini_y0.domain() : yBrush.extent());

			bar.selectAll("rect")
				.attr("y", function(d) {
					return main_y0(d.Cost);
				})
				.attr("height", function(d) {
					return main_height - main_y0(d.Cost);
				});

			main.select("g.y.axis").call(main_yAxis);
		};

		// This comes from the example at http://bl.ocks.org/mbostock/7555321
		// for wrapping long axis tick labels
		function wrap(text, width) {
			text.each(function () {
				var text = d3.select(this),
					words = text.text().split(/\s+/).reverse(),
					word,
					line = [],
					lineNumber = 0,
					lineHeight = 1.1, // ems
					y = text.attr("y"),
					dy = parseFloat(text.attr("dy")),
					tspan = text.text(null).append("tspan").attr("x", 0).attr("y", y).attr("dy", dy + "em");
				while (word = words.pop()) {
					line.push(word);
					tspan.text(line.join(" "));
					if (tspan.node().getComputedTextLength() > width) {
						line.pop();
						tspan.text(line.join(" "));
						line = [word];
						tspan = text.append("tspan").attr("x", 0).attr("y", y).attr("dy", ++lineNumber * lineHeight + dy + "em").text(word);
					}
				}
			});
		};

		// Set the initial brush selections.
		// svg.select(".x.brush").call(xBrush.extent(main_xZoom.domain()));
		svg.select(".x.brush").call(xBrush.extent([0,610]));
		svg.select(".y.brush").call(yBrush.extent(mini_y0.domain()));

		// Forces a refresh of the brushes and main chart based
		// on the selected extents.
		xBrushed();
		yBrushed();

	});

</script><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>Map with Graticule</title>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
</head>
<body>

  <style>

  body {
    margin: 0;
  }

  svg {
    margin: 5px;
    background-color: #A7DBD8;
  }

  .sphere {
    fill: none;
    stroke: #79A09E;
  }

  .land {
    fill: #E0E4CC;
    stroke: #ACAF9F;
    stroke-width: 1;
  }

  .graticule {
    fill: none;
    stroke: #79A09E;
    stroke-width: 1;
    stroke-dasharray: 1,1;
  }

  </style>

  <div id="map-container"></div>

  <script>

    // Set the dimensions of the map
    var width  = 960,
        height = 480;

    // Create a selection for the container div and append the svg element
    var div = d3.select('#map-container'),
        svg = div.append('svg');

    // Set the size of the SVG element
    svg.attr('width', width).attr('height', height);

    // Create and configure a geographic projection
    var projection = d3.geo.equirectangular()
      .translate([width / 2, height / 2])
      .scale(width / (2 * Math.PI));

    // Create and configure a path generator
    var pathGenerator = d3.geo.path()
      .projection(projection);

    // Create and configure the graticule generator (one line every 20 degrees)
    var graticule = d3.geo.graticule()
      .step([10, 10]);

    // Retrieve the geographic data asynchronously
    d3.json('land.geojson', function(err, data) {

      // Throw errors on getting or parsing the file
      if (err) { throw err; }

      // Shpere
      var sphere = svg.selectAll('path.sphere').data([{type: 'Sphere'}]);

      sphere.enter().append('path').classed('sphere', true);
      sphere.attr('d', pathGenerator);
      sphere.exit().remove();

      // Graticule lines (behind the land)
      var lines = svg.selectAll('path.graticule').data([graticule()]);

      lines.enter().append('path').classed('graticule', true);
      lines.attr('d', pathGenerator);
      lines.exit().remove();

      // Land
      var land = svg.selectAll('path.land').data([data]);

      land.enter().append('path').classed('land', true);
      land.attr('d', pathGenerator);
      land.exit().remove();


    });
  </script>

</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Treemaps: boundary coloring</title>
    <link type="text/css" href="index.css" rel="stylesheet"/>
    <script src="http://d3js.org/d3.v3.min.js"></script>
  </head>
  <body>
    <svg></svg>
    <script src="index.js"></script>
  </body>
</html><!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>* Run Wild</title>
    <style>
    html {
      height: 100%;
      background: url(http://media.giphy.com/media/R6ebrGa6Fw8PS/giphy.gif) center /cover;
    }
    svg {
      width: 50%;
      fill: #fff;
      margin: 25%;
    }
    </style>
  </head>
  <body>
    <svg viewBox="0 0 447.6 411.3">
      <path d="M50.4,233.6c1.9-1.4,3.2-1.9,4.3-0.7c3,3.1,6.9,9.8,2.2,15.5c-7.2,8.8-15,19.6-17.6,28.1c-2.6,8.5-0.6,14.6,4,14.4 c6.2-0.2,13.9-10.8,19-22.8c0.6-1.3,1.6-1.6,2.2-0.4c0.8,1.7,1,5.5-0.8,10c-3.7,9.6-13,17.1-21.4,17.6c-11.5,0.5-16.2-9.6-12.2-22 c3.5-10.9,12.8-23,19.2-31c-7,5.3-13.9,7.3-18.7,7.7c-6.1,11.7-21.4,35.8-24.5,50.6c-0.3,1.5-1.3,2.4-2.7,1 c-4.6-4.4-4.6-11.8-0.3-20.3c3.7-7.4,14.4-23.3,20.3-32.3c-9.1-5.1,4.8-25.2,10.7-25.9c5-0.6,3.7,8.8-0.3,19.2 C39,241.3,44.5,238.3,50.4,233.6z M68.6,292c-11.4,0.2-11.7-11.6-8.2-22.5c3.5-10.9,11.7-27.3,22.1-42.7c1.3-1.9,2.9-1.9,4.2-0.5 c3.5,5,2.7,12.2-3,21.9c-5.9,10-9.1,16.6-12.5,24.6c-3.4,8.1-2.9,13.9,0.8,13.9c6.2-0.1,15-12,23.7-26.7 c10.1-17.2,14.7-28.6,19.8-36c1.6-2.4,2.7-2.8,4-1.3c2.4,2.7,3.7,9.6-0.2,17.9c-3.5,7.5-11.5,20.2-15.2,28.7 c-4.2,9.5-3.5,16.1,2.2,15.3c6.7-0.9,14.9-12.2,21.1-23.9c0.8-1.5,2.2-1.8,2.9-0.4c0.6,1.2,0.8,5.5-1.4,10.2 c-4.6,9.4-14.6,18.4-24,19.2c-10.4,0.9-14.6-5.3-13.3-14.7C86.1,283,77.6,291.9,68.6,292z M173.9,218c5.3,0.3,10.2,7.7,6.2,16.4 c-3.4,7.3-11.2,19.9-14.9,28.5c-4.2,9.6-3.2,17.1,2.6,16.3c6.6-0.9,14.4-12.1,20.5-23.9c0.8-1.5,1.9-1.6,2.7-0.4 c1.1,1.7,0.8,5.4-1.4,10.2c-4.3,9.3-14.4,18.4-23.7,19.2c-13.6,1.2-16.8-8.5-12.2-22.8c5.3-16.1,19.4-34.3,16.5-35.4 c-1.6-0.5-10.9,4.8-21.1,16.9c-9.4,11.1-16.5,27-23.4,42.7c-0.6,1.5-1.6,2.2-3,0.9c-3.2-2.9-4.2-8.1-1.6-16.3 c3.2-10.4,15.5-33.7,25.6-49.4c1.1-1.9,2.4-1.8,3.4-0.3c2.4,3.8,2.2,9.2,0.5,15.2C157.8,227.4,168.6,217.7,173.9,218z M303.2,205.9 c2.1-0.5,3,1.8,2.4,5.2c-1.3,6.5-4,14-13.9,31.6c-10.9,19.2-22.2,32.5-33,33.1c-6.9,0.4-10.7-5.5-10.2-12.4 c-5.1,7-11.8,14-19.5,14.2c-9.9,0.2-11.7-10-7.5-22.2c3.7-10.9,11.5-27.2,22.2-42.7c1.3-1.9,2.9-1.9,3.8-0.5 c3.8,4.9,3,11.9-2.9,21.9c-5.8,9.6-9.9,17.5-13.1,25.5c-3.2,8.1-3,13.7,0.6,13.2c6.4-0.7,12.3-12,21-26.6 c10.2-17.2,14.9-28.7,20.2-36c1.6-2.2,2.6-2.6,4-1.3c2.2,2.7,3.5,9.6-0.3,17.9c-3.5,7.5-11.5,20.4-15.5,29.2 c-4.3,9.5-3.8,14.9,0.8,14.6c5.6-0.3,15.2-11.7,23.8-27.5C288.8,218.3,299.8,206.8,303.2,205.9z M299.5,248.8 c4-12,14.6-31.8,20.5-40.7c1.4-2,2.6-2.6,3.8-1.3c2.4,2.4,3.7,9.1-0.2,17.5c-3.4,7.3-10.1,18.8-13.4,27.1 c-3.8,9.6-3.5,15.8,1.6,15.1c7.2-0.9,16-12.3,20.8-23.7c0.8-1.5,1.9-1.4,2.6-0.2c1.3,2.4,0.8,5.8-1.1,10 c-4.8,10.3-14.9,17.9-23.8,18.7C298.1,272.3,295,262.3,299.5,248.8z M335.2,203.9c-2.1,2.4-6.6,2.3-9-1.6c-2.6-4.1-1.8-9,0.8-11.9 c2.6-2.9,7.2-1.4,9.3,2.7C338.4,197,337.3,201.5,335.2,203.9z M345.6,263.3c7.7,0,18.9-12.5,25.1-25.4c1.1-2.2,2.9-2.5,3.5-0.3 c0.8,2.5,0.2,6.1-1.6,10.1c-2.2,5-13.9,19.3-26.7,20.1c-11,0.6-17-6.5-13.3-24.1c5.9-28.4,24.2-58.9,40.5-77.3 c2.4-2.8,4.6-3.3,6.9-1.4c4.6,3.8,5.6,9.6,3.7,17.3c-5,20.1-22.9,40.9-37.1,51.4C340.2,249.8,338.4,263.3,345.6,263.3z M378.2,179.3 c-2.1-1.1-13.9,17.7-25,39.1c-1.4,2.7-2.7,5.4-3.8,8C371.4,206.8,380.3,180.4,378.2,179.3z M411.4,258.2 c6.6-0.9,15.2-12.4,20.8-23.9c0.8-1.5,1.9-1.6,2.6-0.4c0.6,1.4,0.8,5.5-1.3,10c-4.3,9.2-14.2,18.5-23,18.8c-8.6,0.3-13-4.1-13-11.7 c-5.1,6.8-12.3,13.4-19.8,14.1c-14.9,1.3-17.8-18.8-4.6-39.1c12.6-19.7,25.4-28,33.4-28.7c6.6-0.6,9.8,4.1,9.6,10 c8.6-17.2,20.8-40.1,26.6-48.7c1.6-2.4,3-2.3,3.8-0.3c2.2,5.1,1.8,12-5,24.6c-7.7,14.4-23,42.2-31,59.8 C406.1,252.4,405.9,259,411.4,258.2z M383.5,231.5c-8.6,14.5-10.4,28.6-4.2,28.2c6.4-0.4,15-10.6,22.6-25.8 c9.3-18.6,11.7-28.9,7-28.6C404,205.5,392.3,216.6,383.5,231.5z M271,82.8c-7.5,2-21,5-35,8c9,14.5,17.5,28.5,24.5,37 c3,3.5,0.5,7-4.5,7.5c-8,0.5-15-1-25-13.5c-3.5-4.5-7.5-9-11-14.5c-9.5,16-18.5,32.5-24,45c-1.5,3.5-5,3.5-7.5,0.5 c-5-5.5-7-15.5-1-31c2-4.5,4-12.5,8.5-21.5c-13.5,3-27.5,6.5-38,9.5c-4.5,1-7.5,0-6.5-4.5c1.5-7,7.5-16,24-22c6-2,13.5-5,23-7.5 c-8.5-13.5-17.5-28-25-41.5c-2-4-1-8,4-8.5c11-1,21,5,29,18.5c2.5,4,6.5,9,11,16c11.5-23,25-45.5,32.5-57.5c2.5-4,4.5-3,7.5-1 c6,4,10,16,1.5,33.5c-2.5,5-8.5,15.5-16,29.5c16-4,32.5-7.5,46-10c6-1,8,1,7,6C293.5,71.8,284,79.2,271,82.8z M102.6,391.1v-8.7h5.9 v1.3h-4.4v2.2h4.3v1.3h-4.3v2.4h4.4v1.3H102.6z M113.9,391.1l-3.4-8.7h1.7l2.6,7l2.6-7h1.7l-3.4,8.7H113.9z M121.5,391.1v-8.7h5.9 v1.3H123v2.2h4.3v1.3H123v2.4h4.4v1.3H121.5z M135.2,391.1l-1.9-3.2h-1.5v3.2h-1.5v-8.7h3.8c1.7,0,2.8,1.1,2.8,2.7 c0,1.5-1,2.4-2.1,2.5l2.1,3.4H135.2z M135.3,385.2c0-0.8-0.6-1.4-1.5-1.4h-2.1v2.8h2.1C134.7,386.5,135.3,386,135.3,385.2z M142,391.1v-3.6l-3.4-5.1h1.7l2.4,3.7l2.4-3.7h1.7l-3.4,5.1v3.6H142z M153.7,391.1v-8.7h5.9v1.3h-4.4v2.2h4.3v1.3h-4.3v3.7H153.7z M167.3,391.1l-1.9-3.2h-1.5v3.2h-1.5v-8.7h3.8c1.7,0,2.8,1.1,2.8,2.7c0,1.5-1,2.4-2.1,2.5l2.1,3.4H167.3z M167.4,385.2 c0-0.8-0.6-1.4-1.5-1.4h-2.1v2.8h2.1C166.8,386.5,167.4,386,167.4,385.2z M171.8,391.1v-8.7h1.5v8.7H171.8z M176.5,391.1v-8.7h3.2 c2.7,0,4.5,1.8,4.5,4.3c0,2.5-1.8,4.3-4.5,4.3H176.5z M182.7,386.8c0-1.7-1-3-3-3H178v6h1.7C181.6,389.8,182.7,388.4,182.7,386.8z M192.6,391.1l-0.6-1.7h-4l-0.6,1.7h-1.7l3.4-8.7h1.9l3.4,8.7H192.6z M190,384l-1.6,4.1h3.1L190,384z M198.2,391.1v-3.6l-3.4-5.1 h1.7l2.4,3.7l2.4-3.7h1.7l-3.4,5.1v3.6H198.2z M216.3,391.1l-0.8-1.9h-4.3l-0.8,1.9h-1.2l3.5-8.7h1.3l3.5,8.7H216.3z M213.3,383.6 l-1.8,4.7h3.7L213.3,383.6z M221.2,391.1v-7.7h-2.7v-1h6.6v1h-2.8v7.7H221.2z M231.9,389.9l0.6-0.8c0.6,0.6,1.5,1.2,2.7,1.2 c1.5,0,2-0.8,2-1.5c0-2.2-5.1-1-5.1-4.1c0-1.4,1.3-2.4,3-2.4c1.3,0,2.4,0.4,3.1,1.2l-0.6,0.8c-0.7-0.7-1.6-1-2.5-1 c-1,0-1.8,0.6-1.8,1.4c0,1.9,5.1,0.8,5.1,4.1c0,1.3-0.9,2.5-3.2,2.5C233.7,391.3,232.6,390.7,231.9,389.9z M241.3,391.1v-8.7h3.5 c1.7,0,2.7,1.2,2.7,2.6c0,1.4-1,2.6-2.7,2.6h-2.4v3.4H241.3z M246.4,385.1c0-1-0.7-1.7-1.7-1.7h-2.3v3.3h2.3 C245.7,386.7,246.4,386,246.4,385.1z M255.3,391.1l-2.2-3.4h-1.7v3.4h-1.1v-8.7h3.5c1.6,0,2.7,1,2.7,2.6c0,1.6-1.1,2.4-2.2,2.5 l2.3,3.5H255.3z M255.3,385.1c0-1-0.7-1.7-1.7-1.7h-2.3v3.3h2.3C254.6,386.7,255.3,386,255.3,385.1z M259.1,386.8 c0-2.6,1.7-4.5,4.3-4.5c2.6,0,4.3,1.9,4.3,4.5c0,2.6-1.7,4.5-4.3,4.5C260.8,391.3,259.1,389.4,259.1,386.8z M266.6,386.8 c0-2-1.2-3.5-3.2-3.5c-2,0-3.2,1.5-3.2,3.5c0,2,1.2,3.5,3.2,3.5C265.4,390.3,266.6,388.8,266.6,386.8z M270.7,387.8v-5.3h1.1v5.3 c0,1.6,0.9,2.6,2.5,2.6c1.6,0,2.5-1,2.5-2.6v-5.3h1.1v5.3c0,2.2-1.2,3.5-3.5,3.5C271.9,391.3,270.7,389.9,270.7,387.8z M283.3,391.1 v-7.7h-2.7v-1h6.6v1h-2.8v7.7H283.3z M294,389.9l0.6-0.8c0.6,0.6,1.5,1.2,2.7,1.2c1.5,0,2-0.8,2-1.5c0-2.2-5.1-1-5.1-4.1 c0-1.4,1.3-2.4,3-2.4c1.3,0,2.4,0.4,3.1,1.2l-0.6,0.8c-0.7-0.7-1.6-1-2.5-1c-1,0-1.8,0.6-1.8,1.4c0,1.9,5.1,0.8,5.1,4.1 c0,1.3-0.9,2.5-3.2,2.5C295.8,391.3,294.7,390.7,294,389.9z M303,386.8c0-2.6,1.7-4.5,4.3-4.5c2.6,0,4.3,1.9,4.3,4.5 c0,2.6-1.7,4.5-4.3,4.5C304.8,391.3,303,389.4,303,386.8z M310.5,386.8c0-2-1.2-3.5-3.2-3.5c-2,0-3.2,1.5-3.2,3.5 c0,2,1.2,3.5,3.2,3.5C309.3,390.3,310.5,388.8,310.5,386.8z M314.3,386.8c0-2.7,2-4.5,4.5-4.5c1.5,0,2.6,0.7,3.3,1.7l-0.9,0.5 c-0.5-0.7-1.4-1.3-2.4-1.3c-1.9,0-3.3,1.5-3.3,3.5c0,2.1,1.4,3.5,3.3,3.5c1,0,1.9-0.5,2.4-1.3l0.9,0.5c-0.7,1-1.8,1.7-3.3,1.7 C316.3,391.3,314.3,389.5,314.3,386.8z M324.7,391.1v-8.7h1.1v8.7H324.7z M335.3,391.1l-0.8-1.9h-4.3l-0.8,1.9h-1.2l3.5-8.7h1.3 l3.5,8.7H335.3z M332.4,383.6l-1.8,4.7h3.7L332.4,383.6z M339,391.1v-8.7h1.1v7.7h4v1H339z M165.5,410.3l0.6-0.8 c0.4,0.5,0.9,0.9,1.6,0.9c1.1,0,1.7-0.7,1.7-1.8v-6h1.1v6.1c0,1.9-1.2,2.8-2.8,2.8C166.8,411.3,166.1,411,165.5,410.3z M173.8,407.8 v-5.3h1.1v5.3c0,1.6,0.9,2.6,2.5,2.6c1.6,0,2.5-1,2.5-2.6v-5.3h1.1v5.3c0,2.2-1.2,3.5-3.5,3.5C175,411.3,173.8,409.9,173.8,407.8z M190.3,411.1l-5.1-6.9v6.9h-1.1v-8.7h1.1l5,6.8v-6.8h1.1v8.7H190.3z M194.7,411.1v-8.7h5.7v1h-4.6v2.8h4.5v1h-4.5v3h4.6v1H194.7z M207.4,407.1v-0.9h10v0.9H207.4z M231,411.1l-0.8-1.9H226l-0.8,1.9H224l3.5-8.7h1.3l3.5,8.7H231z M228.1,403.6l-1.8,4.7h3.7 L228.1,403.6z M234.4,407.8v-5.3h1.1v5.3c0,1.6,0.9,2.6,2.5,2.6c1.6,0,2.5-1,2.5-2.6v-5.3h1.1v5.3c0,2.2-1.2,3.5-3.5,3.5 C235.5,411.3,234.4,409.9,234.4,407.8z M244.4,406.8c0-2.7,2-4.5,4.5-4.5c1.5,0,2.6,0.7,3.4,1.6l-0.9,0.5c-0.5-0.7-1.5-1.2-2.5-1.2 c-1.9,0-3.3,1.5-3.3,3.5c0,2.1,1.4,3.5,3.3,3.5c1,0,1.9-0.5,2.3-0.9v-1.8h-3v-1h4.1v3.1c-0.8,0.9-2,1.5-3.4,1.5 C246.4,411.3,244.4,409.5,244.4,406.8z M255.3,407.8v-5.3h1.1v5.3c0,1.6,0.9,2.6,2.5,2.6c1.6,0,2.5-1,2.5-2.6v-5.3h1.1v5.3 c0,2.2-1.2,3.5-3.5,3.5C256.5,411.3,255.3,409.9,255.3,407.8z M265.2,409.9l0.6-0.8c0.6,0.6,1.5,1.2,2.7,1.2c1.5,0,2-0.8,2-1.5 c0-2.2-5.1-1-5.1-4.1c0-1.4,1.3-2.4,3-2.4c1.3,0,2.4,0.4,3.1,1.2l-0.7,0.8c-0.6-0.7-1.6-1-2.5-1c-1,0-1.8,0.6-1.8,1.4 c0,1.9,5.1,0.8,5.1,4.1c0,1.3-0.9,2.5-3.2,2.5C267,411.3,265.9,410.7,265.2,409.9z M276.7,411.1v-7.7H274v-1h6.6v1h-2.8v7.7H276.7z"/>
    </svg>
  </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Materials in Houston Public Art</title>
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
				/*color: #072854;*/
			}

			p {
				font-size: 14px;
				margin: 10px 0 10 0;
				/*color: #072854;*/
			}

			a:link {
				/*color: #072854;*/
			}

			a:visited {
				color: #FF7F00;
			}

			a:hover{
				opacity: 0.8;
			}

			svg {
				background-color: white;
			}

			rect:hover {
				fill: #FF7F00;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.x.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			.y.axis text {
				font-family: sans-serif;
				font-size: 11px;
				fill: white;
				stroke: none;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>
		<h1>Materials in Houston Public Art</h1>
		<p>Public Art on display in Houston ranked by the number of unique materials used in its construction. You can explore the source data over at the City of Houston's <a href="http://data.ohouston.org/dataset/public-art-on-display">Data Portal</a></p>
		<script type="text/javascript">
			var w = 900;
			var h = 800;
			var padding = {
				top:20,
				right:10,
				bottom:30,
				left: 20
			};

			var widthScale = d3.scale.linear()
												 .rangeRound([0, w - padding.right - padding.left], 1);


			var heightScale = d3.scale.ordinal()
													.rangeRoundBands([padding.top, h - padding.bottom], 0.1);

			var xAxis = d3.svg.axis()
										.scale(widthScale)
										.orient("bottom")
										.tickFormat(d3.format("d"));

			var yAxis = d3.svg.axis()
										.scale(heightScale)
										.orient("right");

			var svg = d3.select("body")
				.append("svg")
				.attr("width", w)
				.attr("height", h);

			d3.csv("houston-public-art.csv", function(data) {

				// Sort first by count of Materials in the artwork
				// then by then number of characters in the description of the materials
				// then alphabetically by the first charcter of the description of the materials
			data.sort(
    		firstBy(function (v1, v2) { return v2.countOfMaterials - v1.countOfMaterials; })
    		.thenBy(function (v1, v2) { return v2.mediaAndSupport.length - v1.mediaAndSupport.length; })
    		.thenBy(function (v1, v2) { return v2.mediaAndSupport - v1.mediaAndSupport; })
);

				widthScale.domain([0, d3.max(data, function(d){
					return +d.countOfMaterials;
				}) ]);

				heightScale.domain(data.map(function(d) {
					return d.mediaAndSupport; 
				} ));

				xAxis.ticks(d3.max(data, function(d){
					return +d.countOfMaterials;
				} ));

				var rects = svg.selectAll("rect")
					.data(data)
					.enter()
					.append("rect");

				rects.attr("x", padding.left)
					.attr("y", function(d){
						return heightScale(d.mediaAndSupport);
					})
					.attr("width", function(d){
						return widthScale(+d.countOfMaterials);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill", "#072854")
					.append("title")
					.text(function(d){
						return d.displayTitle + " by " + d.displayArtist/* + " - " + d.mediaAndSupport*/;
					})

					svg.append("g")
						 .attr("class", "x axis")
						 .attr("transform", "translate(" + padding.left + "," + (h-padding.bottom) + ")")
						 .call(xAxis);

					svg.append("g")
						 .attr("class", "y axis")
						 .attr("transform", "translate(" + padding.left + ",0)")
						 .call(yAxis);

			});

		/*** Copyright 2013 Teun Duynstee Licensed under the Apache License, Version 2.0 ***/
		/* https://github.com/Teun/thenBy.js */
		firstBy=(function(){

			function e(f){
				f.thenBy=t;
				return f}

			function t(y,x){
				x=this;
				return e(function(a,b){
					return x(a,b)||y(a,b)
				})}
				return e
			})();

		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>
 
svg {
  font: 10px sans-serif;
}
 
 
.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.y.axis path {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.brush .extent {
  stroke: #fff;
  fill-opacity: .125;
  shape-rendering: crispEdges;
}

.line {
  fill: none;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
 
var margin = {top: 10, right: 10, bottom: 100, left: 40},
    margin2 = {top: 430, right: 10, bottom: 20, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom,
    height2 = 500 - margin2.top - margin2.bottom;
 
var color = d3.scale.category10();
 
var parseDate = d3.time.format("%Y%m").parse;
 
var x = d3.time.scale().range([0, width]),
    x2 = d3.time.scale().range([0, width]),
    y = d3.scale.linear().range([height, 0]),
    y2 = d3.scale.linear().range([height2, 0]);
 
var xAxis = d3.svg.axis().scale(x).orient("bottom"),
    xAxis2 = d3.svg.axis().scale(x2).orient("bottom"),
    yAxis = d3.svg.axis().scale(y).orient("left");
 
var brush = d3.svg.brush()
    .x(x2)
    .on("brush", brush);
 
var line = d3.svg.line()
    .defined(function(d) { return !isNaN(d.temperature); })
    .interpolate("cubic")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });
 
var line2 = d3.svg.line()
    .defined(function(d) { return !isNaN(d.temperature); })
    .interpolate("cubic")
    .x(function(d) {return x2(d.date); })
    .y(function(d) {return y2(d.temperature); });
 
var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom);
 
svg.append("defs").append("clipPath")
    .attr("id", "clip")
  .append("rect")
    .attr("width", width)
    .attr("height", height);
 
var focus = svg.append("g")
  .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      
var context = svg.append("g")
  .attr("transform", "translate(" + margin2.left + "," + margin2.top + ")");
 
d3.csv("climate4.csv", function(error, data) {
 
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));
 
    data.forEach(function(d) {
      d.date = parseDate(d.date);
    });
 
  var sources = color.domain().map(function(name) {
      return {
        name: name,
        values: data.map(function(d) {
          return {date: d.date, temperature: +d[name]};
        })
      };
    });
 
    x.domain(d3.extent(data, function(d) { return d.date; }));
    y.domain([d3.min(sources, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
              d3.max(sources, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); }) ]);
    x2.domain(x.domain());
    y2.domain(y.domain());
    
    var focuslineGroups = focus.selectAll("g")
        .data(sources)
      .enter().append("g");
      
    var focuslines = focuslineGroups.append("path")
        .attr("class","line")
        .attr("d", function(d) { return line(d.values); })
        .style("stroke", function(d) {return color(d.name);})
        .attr("clip-path", "url(#clip)");
    
    focus.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);
 
    focus.append("g")
        .attr("class", "y axis")
        .call(yAxis);
        
    var contextlineGroups = context.selectAll("g")
        .data(sources)
      .enter().append("g");
    
    var contextLines = contextlineGroups.append("path")
        .attr("class", "line")
        .attr("d", function(d) { return line2(d.values); })
        .style("stroke", function(d) {return color(d.name);})
        .attr("clip-path", "url(#clip)");
 
    context.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height2 + ")")
        .call(xAxis2);
 
    context.append("g")
        .attr("class", "x brush")
        .call(brush)
      .selectAll("rect")
        .attr("y", -6)
        .attr("height", height2 + 7);
        
        
});
 
function brush() {
  x.domain(brush.empty() ? x2.domain() : brush.extent());
  focus.selectAll("path.line").attr("d",  function(d) {return line(d.values)});
  focus.select(".x.axis").call(xAxis);
  focus.select(".y.axis").call(yAxis);
}
 
</script><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Uniform Kernel Distribution</title>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>

  </head>

	<body>
		<label id="form" for="show-h">
		  Show Bandwidth
		  <input type="checkbox" id="show-h" disabled>
		</label>
		<div id="chartArea"></div>
		<script src="js.js"></script>
	</body>

</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.counties {
  fill: none;
}

.states {
  fill: none;
  stroke: #fff;
  stroke-linejoin: round;
}

.q0-9 { fill:rgb(247,251,255); }
.q1-9 { fill:rgb(222,235,247); }
.q2-9 { fill:rgb(198,219,239); }
.q3-9 { fill:rgb(158,202,225); }
.q4-9 { fill:rgb(107,174,214); }
.q5-9 { fill:rgb(66,146,198); }
.q6-9 { fill:rgb(33,113,181); }
.q7-9 { fill:rgb(8,81,156); }
.q8-9 { fill:rgb(8,48,107); }

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/queue-async/1.0.7/queue.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script>

var width = 960,
    height = 600;

var rateById = d3.map();

var quantize = d3.scale.quantize()
    .domain([0, .15])
    .range(d3.range(9).map(function(i) { return "q" + i + "-9"; }));

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

queue()
    .defer(d3.json, "https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/us.json")
    .defer(d3.tsv, "unemployment.tsv", function(d) { rateById.set(d.id, +d.rate); })
    .await(ready);

function ready(error, us) {
  if (error) throw error;

  svg.append("g")
      .attr("class", "counties")
    .selectAll("path")
      .data(topojson.feature(us, us.objects.counties).features)
    .enter().append("path")
      .attr("class", function(d) { return quantize(rateById.get(d.id)); })
      .attr("d", path);

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "states")
      .attr("d", path);
}

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html lang="en">
  <head>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
   <script src="http://colineberhardt.github.io/d3fc/Layout.js"></script>
   <script src="http://colineberhardt.github.io/d3fc/d3fc.js"></script>
   <link href="http://colineberhardt.github.io/d3fc/d3fc.css" rel="stylesheet"/>
   <link href="style.css" rel="stylesheet"/>
  </head>
<body>
  <div style='margin-right: 40px;'>
    <svg id='time-series' style='height: 300px; width: 100%;  overflow: visible'>
      <defs>
        <linearGradient id="area-gradient"
                        x1="0%" y1="0%"
                        x2="0%" y2="100%">
           <stop offset="0%" stop-opacity="0.3" stop-color="#fff" />
          <stop offset="100%" stop-opacity="0" stop-color="#1a9af9" />
        </linearGradient>
      </defs>
    </svg>
  </div>
  <script src="script.js"></script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>
/* map styles */
.country { fill: #B8B8B8; }
.interior-boundary {
	fill: none;
	stroke: #FFFFFF;
	stroke-dasharray: 2,2;
	stroke-linejoin: round;
}
.place, .place-label { fill: #444; }
text {
	font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
	font-size: 10px;
	font-weight: bold;
}
.route {
	fill: none;
	stroke: red;
	stroke-width: 3px;
	stroke-linecap: round;
	stroke-opacity: .8;
}
/* title and legend styles */
.legend { 
	position: relative;
	margin: 0px 10px 80px 10px; 
}
.key {
	position: absolute;
	font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
	font-size: 12px;
	font-weight: bold;
	margin: 0px 15px 0px 0px;
}
.Kolkata { left: 30px; }
.Darjeeling { left: 160px; }
.Nepal { left: 305px; }
.Myanmar { left: 425px; }
.Cambodia { left: 570px; }
.Laos { left: 725px; }
.Xishuangbanna { left: 850px; }
.Anhui { left: 30px; }
.Fujian { left: 160px; }
.Wuyi { left: 290px; }
.Qingdao { left: 390px; }
.Lishan { left: 515px; }
.Nantou { left: 640px; }
.Alishan { left: 775px; }
.Taiwan { left: 905px; }
.Shizuoka { left: 30px; }
.Uji { left: 180px; }
.Kyoto { left: 260px; }
.credit { left: 940px; top: 40px; font-size: 10px;}
</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.js"></script>
<script>
  
var width = 1000,
	height = 590,
	margin = { top: 40, left: 30, right: 150, bottom: 50 };

// draw svg
var svg = d3.select("body").append("svg")
	.attr("width", width)
	.attr("height", height);

// map projection
var projection = d3.geo.patterson()
	.center([58,54])
    .scale(520)
    .translate([0,0])
    .precision(.1);

// path generator
var path = d3.geo.path()
	.projection(projection)
	.pointRadius(3);

// coordinates are added to this when constructRoute is called 
var journey = [
	  {name:"Kolkata", dates:"Feb. 17-22"}, 
	  {name:"Darjeeling", dates:"Feb. 23-28"},
	  {name:"Nepal", dates:"March 1-6"},
	  {name:"Myanmar", dates:"March 7-10"},
	  {name:"Cambodia", dates:"March 11-13"},
	  {name:"Laos", dates:"March 14-18"},
	  {name:"Xishuangbanna", dates:"March 18-21"},
	  {name:"Anhui", dates:"March 22-28"},
	  {name:"Fujian", dates:"March 29-31"},
	  {name:"Wuyi", dates:"April 1-6"},
	  {name:"Qingdao", dates:"April 6-10"},
	  {name:"Lishan", dates:"April 11-14"},
	  {name:"Nantou", dates:"April 15-18"},
	  {name:"Alishan", dates:"April 18-20"},
	  {name:"Taiwan", dates:"April 21-26"},
	  {name:"Shizuoka", dates:"April 27-May 1"},
	  {name:"Uji", dates:"May 2-4"},
	  {name:"Kyoto", dest: "18", dates:"May 4-8"}
	];

d3.json("asia.json", function(error, asia) {
  
  var subunits = topojson.feature(asia, asia.objects.subunits),
  	  places = topojson.feature(asia, asia.objects.places),
	  route = constructRoute(journey, places.features);
	  	
  // draw the map
  svg.selectAll(".subunit")
  	  .data(subunits.features)
    .enter()
      .append("path")
      .attr("class", function(d) { return "country"; })
      .attr("d", path);
 
  // draw interior boundaries between countries
  svg.append("path")
  	.datum(topojson.mesh(asia, asia.objects.subunits, function(a, b) {
  		return a !== b;
  	}))
  	.attr("d", path)
  	.attr("class", "interior-boundary");
  
  // draw curved paths between places 
  svg.selectAll(".route")
  	  .data(route.coordinates)
  	.enter()
  	  .append("path")
  	  .attr("class", "route")
  	  .attr("d", function(d) {
  		var source = projection(d[0]);
  		var target = projection(d[1]);	
  		var dx = target[0] - source[0],
      		dy = target[1] - source[1],
      		dr = Math.sqrt(dx * dx + dy * dy);      	
  		return "M" + source[0] + "," + source[1] + "A" + dr + "," + dr + " 0 0,1 " + target[0] + "," + target[1];
  	  });
  
  // draw places on map
  svg.append("path")
  	.datum(places)
  	.attr("d", path)
  	.attr("class", "place");
 
  // set all place labels
  svg.selectAll(".place-label")
  	  .data(places.features)
    .enter()
      .append("text")
      .attr("class", function(d) { return "place-label " + d.properties.name; })
      .attr("transform", function(d) { return "translate(" + projection(d.geometry.coordinates) + ")"; })
	  .attr("x", function(d) { return d.geometry.coordinates[0] > -1 ? 6 : -6; })
	  .attr("dy", ".35em")
	  .style("text-anchor", function(d) { return d.geometry.coordinates[0] > -1 ? "start" : "end"; })
	  .text(function(d) { return d.properties.name; });
	  
  // tweak specific labels to remove overlap with other labels and routh paths
  svg.select(".place-label.Kyoto")
  	.attr("x", -33)
  	.attr("dy", "-.15em");
    
  svg.select(".place-label.Uji")
  	.attr("dy", "-.15em");
    
  svg.select(".place-label.Anhui")
  	.attr("x", 8);
  	
  svg.select(".place-label.Wuyi")
  	.attr("x", -29);
  
  svg.select(".place-label.Fujian")
  	.attr("x", -34);

  svg.select(".place-label.Nantou")
  	.attr("x", -40)
  	.attr("dy", ".01em");

  svg.select(".place-label.Alishan")
   	.attr("dy", ".7em");

  svg.select(".place-label.Lishan")
   	.attr("dy", ".5em");
  
  svg.select(".place-label.Nepal")
  	.attr("x", -33)
  	.attr("dy", ".25em");
  
  // add a key
  var key = d3.select("body").append("div")
	.attr("class", "legend");
  	
  	key.selectAll(".key")
  	  .data(journey)
  	.enter()
  	  .append("div")
  	  .attr("class", function(d) {
  	  	return "key " + d.name; 
  	  })
	  .style("top", function(d,i) {
	  	if (i >= 7 && i <= 14) {
	  		return "20px";
	  	} else if (i >= 15) {
	  		return "40px";
	  	}
	  })
	  .text(function(d) { 
	  	return d.name + ": " + d.dates; 
	  });
	  
    key.append("div")
	  .attr("class", "key credit")
      .text("Map by: ")
	  .append("a")
	  .attr("href", "http://bl.ocks.org/dhoboy")
	  .attr("target", "_blank")
	  .text("dhoboy");
});

function constructRoute(journey, places) {	
  
  // get the coords of destinations in order
  var r = {  
  	type: "LineString", 
  	coordinates: []
  };
  
  journey.forEach(function(d) { 
	places.forEach(function(p) {
		if (d.name == p.properties.name) {
			d.coords = p.geometry.coordinates;
			p.dest = d.dest;
		}
	})
	r.coordinates.push(d.coords);
  });
 
  // form coords for curved path drawing 
  var route = {
  	type: "MultiLineString",
  	coordinates: []
  };
 
  for (var i = 0; i < r.coordinates.length - 1; i++) {
  	route.coordinates.push([r.coordinates[i], r.coordinates[i+1]]);
  }
  
  return route;
}
</script>
<!DOCTYPE html>
<html>

<body ng-app ng-controller="todoCtrl">

<h2>Todo list</h2>

<form ng-submit="todoAdd()">
    <input type="text" ng-model="todoInput" size="50" placeholder="Add New">
    <input type="submit" value="Add New">
</form>

<br>

<div ng-repeat="x in todoList">
  <input ng-change="remove(x)" type="checkbox" ng-model="x.done"><span ng-bind="x.todoText"></span>
</div>


<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.15/angular.min.js"></script>

<script>
    function todoCtrl($scope) {
    $scope.todoList = [{todoText:'tutorial de AngularJS', done:false}, {todoText:'pintar la casa', done:false}];

    $scope.todoAdd = function() {
        if ($scope.todoInput !== "") {
          $scope.todoList.push({todoText:$scope.todoInput, done:false});
        } 
        $scope.todoInput = "";
    };
    $scope.remove = function(item) {
  $scope.todoList.splice($scope.todoList.indexOf(item),1);
       
    };
}
</script>
  
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

svg {
  font: 10px sans-serif;
}

.line {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var n = 40,
    random = d3.random.normal(0, .2),
    data = d3.range(n).map(random);

var margin = {top: 20, right: 20, bottom: 20, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .domain([0, n - 1])
    .range([0, width]);

var y = d3.scale.linear()
    .domain([-1, 1])
    .range([height, 0]);

var line = d3.svg.line()
    .x(function(d, i) { return x(i); })
    .y(function(d, i) { return y(d); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("defs").append("clipPath")
    .attr("id", "clip")
  .append("rect")
    .attr("width", width)
    .attr("height", height);

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + y(0) + ")")
    .call(d3.svg.axis().scale(x).orient("bottom"));

svg.append("g")
    .attr("class", "y axis")
    .call(d3.svg.axis().scale(y).orient("left"));

var container = svg.append("g")
  .attr("clip-path", "url(#clip)")
var group = container.append("g")

var path = group
  .append("path")
    .datum(data)
    .attr("class", "line")
    .attr("d", function(d) {
      console.log("d", d)
      var pathdata = line(d);
      console.log("path data", pathdata)
      return pathdata
    });



tick();

function tick() {

  // push a new data point onto the back
  data.push(random());

  group
    .attr("transform", null)
  .transition()
    .duration(1000)
    .ease("linear")
    .attr("transform", "translate(" + x(-1) + ",0)")
    .each("end", tick);

  // redraw the line, and slide it to the left
  path
      .attr("d", line)

  // using the enter/exit/update pattern to draw circles
  var circles = group.selectAll("circle.point")
   .data(data)

  circles.enter()
    .append("circle").classed("point", true)

  circles.exit().remove()

  circles.attr({
    cx: function(d,i) { return x(i) },
    cy: function(d,i) { return y(d) },
    r: 5
  })

  // pop the old data point off the front
  data.shift();

}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
html, body , #map {
	margin: 0px;
	padding: 0px;	
	width: 100%;
	height: 100%;
}

.popup {
	width: 200px;
}
</style>
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />

<body>
<div id="map"></div>

<script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet-src.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>
	
d3.json('./Japan_Industrial_Revolution.geojson', function(geodata){
	draw(geodata);
});	

function draw(geodata) {
	map = L.map('map').setView([36.3265281, 139.00918460000003], 6);
	
	//地理院地図レイヤー追加
	L.tileLayer(
		'http://cyberjapandata.gsi.go.jp/xyz/pale/{z}/{x}/{y}.png',
		{
			attribution: "<a href='http://www.gsi.go.jp/kikakuchousei/kikakuchousei40182.html' target='_blank'>国土地理院</a>"
		}
	).addTo(map);

	
	var onEachFeature = function(feature, layer) {
			if (!feature.properties) return ;
			var p = feature.properties;
			var properties = '<div class="popup">';
			if (p.name) properties += '<center>'+ p.name + '<center>';
			if (p.img) properties += '<center><img src="'+ p.img + '" /></center>';
			if (p.link) properties += '<p><a href="'+ p.link + '">link</a>';
			properties += '</div>';
			layer.bindPopup(properties);
	}	
	
	var geojsonLayer = L.geoJson(null, {onEachFeature:onEachFeature}).addTo(map);
	geojsonLayer.addData(geodata);
}
	
</script>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.dot {
  stroke: #000;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src='http://bl.ocks.org/1wheel/raw/1b6758978dc2d52d3a37/d3-jetpack.js'></script>
<script src='http://bl.ocks.org/1wheel/raw/1b6758978dc2d52d3a37/d3-starterkit.js'></script>
<script>


d3.tsv("data.tsv", function(error, data) {
  var c = d3.conventions({
    margin: {top: 20, right: 20, bottom: 30, left: 40},
    width:  900,
    height: 450,
  })

  c.x.domain(d3.extent(data, ƒ('sepalWidth'))).nice();
  c.y.domain(d3.extent(data, ƒ('sepalLength'))).nice();

  c.drawAxis()
  c.svg.select('.x.axis')    
    .append("text.label")
      .attr("x", c.width)
      .attr("y", -6)
      .style("text-anchor", "end")
      .text("Sepal Width (cm)");

  c.svg.select('.y.axis')        
    .append("text.label")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Sepal Length (cm)")

  c.svg.dataAppend(data, "circle.dot")
      .attr("r", 3.5)
      .attr("cx", ƒ('sepalWidth', c.x))
      .attr("cy", ƒ('sepalLength', c.y))
      .style("fill", ƒ('species', c.color))

  var legend = c.svg.dataAppend(c.color.domain(), "g.legend")
      .attr("class", "legend")
      .translate(function(d, i){ return [0, i*20] })

  legend.append("rect")
      .attr("x", c.width - 18)
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", c.color);

  legend.append("text")
      .attr("x", c.width - 24)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("text-anchor", "end")
      .text(ƒ())
})

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.state rect {
  fill: #dedede;
}

.state text {
  font: 12px sans-serif;
  text-anchor: middle;
}

.state--selected rect {
  fill: #9f4a6c;
}

.state--selected text {
  fill: white;
}

</style>
<svg width="960" height="500"></svg>
<script id="grid" type="text/plain">
JU    FO    MI
   SA CH CO
CA TU    ER 
LR SE CD SF 
MD SJ SL LP BA
NQ RN
   CH
   SC
      TF

</script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var states = [],
    selectedStates = ["BA", "RN", "FO"];

d3.select("#grid").text().split("\n").forEach(function(line, i) {
  var re = /\w+/g, m;
  while (m = re.exec(line)) states.push({
    name: m[0],
    selected: selectedStates.indexOf(m[0]) >= 0,
    x: m.index / 3,
    y: i
  });
});

var svg = d3.select("svg"),
    width = +svg.attr("width"),
    height = +svg.attr("height");

var gridWidth = d3.max(states, function(d) { return d.x; }) + 1,
    gridHeight = d3.max(states, function(d) { return d.y; }) + 1,
    cellSize = 40;

var state = svg.append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
  .selectAll(".state")
    .data(states)
  .enter().append("g")
    .attr("class", function(d) { return "state" + (d.selected ? " state--selected" : ""); })
    .attr("transform", function(d) { return "translate(" + (d.x - gridWidth / 2) * cellSize + "," + (d.y - gridHeight / 2) * cellSize + ")"; });

state.append("rect")
    .attr("x", -cellSize / 2)
    .attr("y", -cellSize / 2)
    .attr("width", cellSize - 1)
    .attr("height", cellSize - 1);

state.append("text")
    .attr("dy", ".35em")
    .text(function(d) { return d.name; });

</script>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Key Comparison between Sports Stars</title>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
	<style>

	</style>
</head>
<body>
	<h1>最相关</h1><button id="data_word">词条</button><button id="data_text">汉字</button><button id="data_person">人物</button>
<!-- 	<input id="num" value=10 size=2></input>
 -->
 	<div class="data_word"></div>
 	<div class="data_text"></div>
 	<div class="data_person"></div>

 	<div id = "bar_Chart"></div>

 	<script type="text/javascript">
 		var data_word = [
 		 			{word: "离婚", read: 38040511},
 		 			{word: "骗婚", read: 26943188},
 		 			{word: "明星", read: 23932519},
 		 			{word: "田径", read: 22685822},
 		 			{word: "裤裆", read: 17854565},
 		 			{word: "性格不合", read: 16310915},
 		 			{word: "假孕", read: 15867595},
 		 			{word: "前妻", read: 15292058},
 		 			{word: "内幕", read: 14131400},
 		 			{word: "飞人", read: 14010723}
 		 		];

 		var data_word_Ning = [
 		 			{word: "自由泳", read: 20585600},
 		 			{word: "鲜肉", read: 12191118},
 		 			{word: "喀山", read: 9005397},
 		 			{word: "世锦赛", read: 7841342},
 		 			{word: "春晚", read: 7462870},
 		 			{word: "女友", read: 5981120},
 		 			{word: "游泳", read: 5063062},
 		 			{word: "夺金", read: 4431792},
 		 			{word: "体坛", read: 4332680},
 		 			{word: "中国游泳队", read: 4305554}
 		 		];

 		 var data_person = [
 		 			{word: "葛天", read: 83985042},
 		 			{word: "吴莎", read: 21477767},
 		 			{word: "姚明", read: 13767456},
 		 			{word: "冬日娜", read: 13137822},
 		 			{word: "苏炳添", read: 12838175},
 		 			{word: "宁泽涛", read: 9769251},
 		 			{word: "范冰冰", read: 7876031},
 		 			{word: "张梓琳", read: 7756933},
 		 			{word: "赵本山", read: 6959061},
 		 			{word: "李娜", read: 6175089}
 		 		];

 		 var data_person_Ning = [
 		 			{word: "蒋欣", read: 7661481},
 		 			{word: "孙杨", read: 7472873},
 		 			{word: "吴亦凡", read: 6085862},
 		 			{word: "陈伟霆", read: 5594263},
 		 			{word: "张继科", read: 4359268},
 		 			{word: "孙妍在", read: 4204099},
 		 			{word: "刘翔", read: 4169631},
 		 			{word: "李易峰", read: 3598134},
 		 			{word: "胡歌", read: 3019753},
 		 			{word: "叶祖新", read: 2750703}
 		 		];


 		 var width = 500;
 		 var height = 350;

    	var svg = d3.select("#bar_Chart")
      .append("svg")
      .attr("width", width + 50)
 		 	.attr("height", height + 50);
      
       var bar_Chart1 = 
     svg.append("g").attr("class", "bar1");
 		 
 		 bar_Chart1.append("rect")
            	  .attr("width", "100%")
            	  .attr("height", "100%")
            	  .attr("stroke", "#999")
 		 		  .attr("fill", "none");
    
    var bar_Chart2 = 	
 		 			svg.append("g").attr("class", "bar2");
 		 
 		 bar_Chart1.append("rect")
            	  .attr("width", "100%")
            	  .attr("height", "100%")
            	  .attr("stroke", "#999")
 		 		  .attr("fill", "none");

 		 d3.select("#data_word")
 		 	.on("click", function(d,i){
 		 		redraw(data_word);
 		 		redraw_left(data_word_Ning);
 		 	});

 		 d3.select("#data_person")
 		 	.on("click", function(d,i){
 		 		redraw(data_person);
 		 		redraw_left(data_person_Ning);
 		 	});

 		 	
 		 redraw_left(data_word_Ning);

 		 redraw(data_word);

 		 function redraw(data){
 		 	var max = d3.max(data, function(d){
 		 		// console.log(d.read);
 		 		return +d.read;
 		 	});

 		 	xScale = d3.scale.linear()
 		 				.domain([0, max])
 		 				.range([0, width/3]);

 		 	yScale = d3.scale.ordinal()
 		 				.domain(d3.range(data.length))
 		 				.rangeBands([0, height], .2);

 		 	var bars = bar_Chart1.selectAll("rect.bar")
 		 						.data(data);

 		 	bars.enter()
 		 		.append("rect")
 		 		.attr("class", "bar")
 		 		.attr("fill", "red");

 		 	bars.exit()
 		 		.transition()
 		 		.duration(300)
 		 		.ease("exp")
 		 		.attr("width", 0)
 		 		.remove();

 		 	bars.transition()
 		 		.duration(300)
 		 		.ease("quad")
 		 		.attr("width", function(d) {
 		 			return xScale(+d.read);
 		 		})
 		 		.attr("height", yScale.rangeBand())
 		 		.attr("transform", function(d,i){
 		 			return "translate("+[width/2, yScale(i)] +")"
 		 		});

//set the labels:
 		 	var labels = bar_Chart1.selectAll("text")
								  .data(data);

			labels.enter()
				  .append("text");

			labels.exit()
				.transition()
				.duration(300)
				.attr("opacity", 0)
 		 		.remove();

 		 	labels.transition()
 		 		  .duration(300)
 		 		  .attr("transform", function(d,i){
					  	return "translate("+(xScale(+d.read)+(width/2 + 10))+ "," + (yScale(i)+20) +")";
					  })
				  .text(function(d){
					  	return d.word;
					  });

 		 };


 		function redraw_left(data){
 		 	var max = d3.max(data, function(d){
 		 		// console.log(d.read);
 		 		return +d.read;
 		 	});

 		 	xScale = d3.scale.linear()
 		 				.domain([0, max])
 		 				.range([0, width/3]);

 		 	yScale = d3.scale.ordinal()
 		 				.domain(d3.range(data.length))
 		 				.rangeBands([0, height], .2);

 		 	var bars = bar_Chart2.selectAll("rect.bar")
 		 						.data(data);

 		 	bars.enter()
 		 		.append("rect")
 		 		.attr("class", "bar")
 		 		.attr("fill", "red");

 		 	bars.exit()
 		 		.transition()
 		 		.duration(300)
 		 		.ease("exp")
 		 		.attr("width", 0)
 		 		.remove();

 		 	bars.transition()
 		 		.duration(300)
 		 		.ease("quad")
 		 		.attr("width", function(d) {
 		 			return xScale(+d.read);
 		 		})
 		 		.attr("height", yScale.rangeBand())
 		 		.attr("transform", function(d,i){
 		 			return "translate("+[(width/2-xScale(+d.read)), yScale(i)] +")"
 		 		});

//set the labels:
 		 	var labels = bar_Chart2.selectAll("text")
								  .data(data);

			labels.enter()
				  .append("text");

			labels.exit()
				.transition()
				.duration(300)
				.attr("opacity", 0)
 		 		.remove();

 		 	labels.transition()
 		 		  .duration(300)
 		 		  .attr("transform", function(d,i){
					  	return "translate("+(width/2-xScale(+d.read)-80)+ "," + (yScale(i)+20) +")";
					  })
				  .text(function(d){
					  	return d.word;
					  });

 		 };



 		
 	</script>
</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <!--<script src="d3.v3.js"></script>-->
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet"> <!-- note: http://stackoverflow.com/questions/20032426/fontawesome-doesnt-display-in-firefox -->
    <link href="//maxcdn.bootstrapcdn.com/bootswatch/3.2.0/united/bootstrap.min.css" rel="stylesheet">
    <style>
    
    .axis path,
      .axis line {
          fill: none;
          stroke: #000;
          shape-rendering: crispEdges;
        }
          path, line {
        stroke:#bbb;
        stroke-width:1
      }
      /*http://www.d3noob.org/2013/01/adding-drop-shadow-to-allow-text-to.html*/
      text.shadow {
        stroke: gray;
        stroke-width: 1px;
        opacity: 0.9;
    }
    .half {
      fill: #888;
      opacity:0.5;
    }
        </style>
  </head>
  <body>
    <div class="navbar navbar-default">
      <div class="container">
        <div class="navbar-header">
          <span class="navbar-brand">Hemicycle - for parliaments/councils of any size, with draggable majority arc</span>
        </div>
      </div>
    </div>
    <div id="chart"></div>
    <div class="alert alert-info">
      The <strong>algorithm.py</strong> calculates optimal number of representatives in each row for several numbers of rows (+ size of icons and gap between the rows). These numbers are used as parameters for the chart.
      <br/><em>It may be slow for big parliaments, but it is needed just once for any number (e.g., 200 representatives took about 1 hour, due to the grid search - further optimization possible, my trial using steepest descent algorithm did not converge many times).</em>
    </div>
    <div class="col-lg-4">
      <div class="bs-component">
        <div class="list-group">
          <a href="#" class="list-group-item active">Legend</a>
          <a href="#" class="list-group-item">
            <div id="legend"></div>
          </a>
        </div>
      </div>
      <div class="alert alert-info">
      The legend is also created as a svg picture.
      </div>
    </div>
    <script>

    // 2:1!
var margin = {top: 0, right: 0, bottom: 0, left: 0},
    width = 600 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

/*examples of parliaments*/
/*Plasy 2010*/
/*var groups = [
  {'name':'KSČM','n':2,'color':'red'},
  {'name':'ČSSD','n':4,'color':'orange'},
  {'name':'KDU-ČSL','n':2,'color':'yellow'},
  {'name':'TOP 09','n':2,'color':'violet'},
  {'name':'ODS','n':5,'color':'blue'}
];*/
/*Czech Republic 2013*/
var groups = [
  {'name':'KSČM','n':33,'color':'red'},
  {'name':'Úsvit','n':14,'color':'pink'},
  {'name':'ČSSD','n':50,'color':'orange'},
  {'name':'KDU-ČSL','n':14,'color':'yellow'},
  {'name':'ANO','n':47,'color':'aqua'},
  {'name':'TOP 09','n':26,'color':'purple'},
  {'name':'ODS','n':16,'color':'blue'}
];
/*Czech Republic Senate 2013*/
/*var groups = [
  {'name':'KSČM','n':2,'color':'red'}, 
  {'name':'ČSSD','n':46,'color':'orange'},
  {'name':'SPOZ','n':1,'color':'pink'},
  {'name':'Severočeši','n':2,'color':'darkred'},
  {'name':'Piráti','n':1,'color':'black'},
  {'name':'Zelení','n':1,'color':'green'},
  {'name':'KDU-ČSL','n':5,'color':'yellow'},
  {'name':'Nezávislí kand.','n':1,'color':'gray'},
  {'name':'Nestraníci','n':1,'color':'aqua'},
  {'name':'TOP 09 + STAN','n':4,'color':'purple'},
  {'name':'Ostravak','n':1,'color':'brown'},
  {'name':'ODS','n':15,'color':'blue'},
  {'name':'Neobsazeno','n':1,'color':'white'}
];*/

/*European Parliament 2014*/
/*var groups = [
  {'name':'GUE-NGL','n':52,'color':'darkred'},
  {'name':'Greens-EFA','n':50,'color':'green'},
  {'name':'S&D','n':191,'color':'red'},
  {'name':'ALDE','n':67,'color':'yellow'},
  {'name':'EPP','n':221,'color':'blue'},
  {'name':'ECR','n':70,'color':'darkblue'},
  {'name':'EFDD','n':48,'color':'aqua'},
  {'name':'Non-inscrits','n':52,'color':'gray'}
];*/

/*Plasy*/
/*var h = {
  'n': [6,9],
  'g': 1.19,
  'w': 0.52,
}*/

/*CZ*/
/*var h = {
  'n': [33,37,40,43,47],
  'g': 1.17,
  'w': 0.09,
}
var h = {
  'n': [24,28,31,35,39,43],
  'g': 1.23,
  'w': 0.13,
}
var h = {
  'n': [18,21,25,29,32,36,39],
  'g': 1.19,
  'w': 0.17,
}*/
var h = {
  'n': [8,11,15,19,22,26,29,33,37],
  'g': 1.20,
  'w': 0.39,
}
/*var h = {
  'n': [4,8,11,15,18,22,25,29,32,36],
  'g': 1.20,
  'w': 0.73,
}*/

/*CZ Senate*/
/*var h = {
  'n': [9,13,16,20,23],
  'g': 1.2,
  'w': 0.34,
}*/
/*EP*/
/*var h = {
  'n': [85,88,90,93,95,98,100,102],
  'g': 1.16,
  'w': 0.03,
}
var h = {
  'n': [31,34,38,41,45,48,52,55,59,62,66,69,73,78],
  'g': 1.19,
  'w': 0.1,
}*/

//max radius (for scales)
rmax = 1 + h['n'].length *h['g']*h['w'];

var 
	xScale = d3.scale.linear()
	  .domain([-1*rmax, rmax])
	  .range([0, width]),
    yScale = d3.scale.linear()
      .domain([0, rmax])
      .range([height,0])
    x0Scale = d3.scale.linear()
	  .domain([0, 2*rmax])
	  .range([0, width]);

//generate data: 1 representative ~ 1 datum
data = [];
s = [];
for (i in h['n']) {
  s.push((Math.PI/h['w'] + Math.PI*i*h['g']-h['n'][i])/(h['n'][i] - 1));
  ninrow = h['n'][i];
  radwidth = Math.PI/(h['n'][i]+(h['n'][i]-1)*s[i]);
  radspace = radwidth*s[i];
  r = 1 + i*h['g']*h['w'];
  for (j=0;j<ninrow;j++) {
    x = Math.cos(radwidth*(0.5+j)+j*radspace)*r;
    y = Math.sin(radwidth*(0.5+j)+j*radspace)*r;
    rot = -1*(radwidth*(0.5+j)+j*radspace)/Math.PI*180+90;
    data.push({'x':x,'y':y,'rot':rot});
  }
}

//sort data by rotation (representatives from 1 parl. groups together)
data.sort(function(x,y) {
  if (x['rot'] < y['rot']) return -1;
  if (x['rot'] > y['rot']) return 1;
  return 0
});

//add colors and names to data - may be used later
i = 0;
for (gkey in groups) {
  group = groups[gkey];
  for (j=0;j<group['n'];j++) {
    data[i]['color'] = group['color'];
    data[i]['name'] = group['name'];
    i++;
  }
}

/* MAJORITY ARC */
var angle = [{'startangle':0,'endangle':Math.PI/2}];

var arci = d3.svg.arc()
                .startAngle(function(d){return d.startangle})
                .endAngle(function(d){return d.endangle})
                .outerRadius(x0Scale(rmax))
                .innerRadius(0);

var position = [xScale(0),yScale(0)];
             
//http://stackoverflow.com/questions/8538651/d3-update-data-and-update-graph             
var arc = svg.selectAll('.half') 
    .data(angle)
    .enter()
    .append("path")
    .attr("d",arci)
    .attr("transform", "translate(" + position + ")")
    .attr("class","half");

//http://stackoverflow.com/questions/15303342/how-to-apply-drag-behavior-to-a-d3-svg-arc
var drag = d3.behavior.drag()
    .on("drag", function(d,i) {
        alpha1 = Math.atan((d3.event.x - xScale(0))/(-d3.event.y + yScale(0)));
        x2 = d3.event.dx + d3.event.x;
        y2 = d3.event.dy + d3.event.y;
        alpha2 = Math.atan((x2 - xScale(0))/(-y2 + yScale(0)));
        alpha = alpha2-alpha1;
        angle[0]['startangle'] += alpha;
        angle[0]['endangle'] += alpha;
        /*angle[0]['startangle'] = Math.min(0,angle[0]['startangle']);
        angle[0]['startangle'] = Math.max(Math.PI/2,angle[0]['startangle']);
        angle[0]['endangle'] = Math.min(Math.PI/2,angle[0]['endangle']);
        angle[0]['endangle'] = Math.max(Math.PI,angle[0]['endangle']);*/
        arc.attr("d",arci);   // redraw the arc
        /*position[0] += d3.event.dx;
        position[1] += d3.event.dy;
        d3.select(this)
        .attr("transform", function(d,i){
            return "translate(" + position + ")"
        })*/
    });
arc.call(drag);

// creating HEMICYCLE
var icons = svg.selectAll(".icon")
		.data(data)
      .enter().append("text")
        .attr('font-family', 'FontAwesome')
        .attr('font-size',x0Scale(h['w']*1.15)) //the icon is about 1.15times higher then wide
        .attr('fill', function(d) {return d.color;})
        .attr('text-anchor',"middle")
        .attr('class', 'shadow')
        .attr('x',function(d) {return xScale(d.x);})
        .attr('y',function(d) {return yScale(d.y);})
        .attr("transform",function(d) {return "rotate("+d.rot+","+xScale(d.x)+","+yScale(d.y)+")"})
        .text('\uf007');

//custom text
svg.append("text")
  .attr('font-family', 'sans-serif')
  .attr('font-size',x0Scale(h['w']*1))        //adjust as needed
  .attr('font-weight','bold')
  .attr('text-anchor',"middle")
  .attr('fill', '#444')
  .attr('x',xScale(0)) 
  .attr('y',yScale(0))
  .text("CZ 2013");

/* LEGEND */
heightleg = x0Scale(groups.length * h['w']*1.15*h['g']);
var svgleg = d3.select("#legend").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", heightleg + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
//sorting for legend
groups.sort(function(x,y) {
  if (x.n > y.n) return -1;
  if (x.n < y.n) return 1;
  return 0;
});
//creating legend
var iconsleg = svgleg.selectAll(".iconleg")
		.data(groups)
      .enter().append("text")
        .attr('font-family', 'FontAwesome')
        .attr('font-size',x0Scale(h['w']*1.15))
        .attr('fill', function(d) {return d.color;})
        .attr('text-anchor',"middle")
        .attr('class', 'shadow')
        .attr('x',x0Scale(h['w']*1.15))
        .attr('y',function(d,i) {return (i+1)*x0Scale(h['w']*1.15);})
        .text('\uf007');

var textleg = svgleg.selectAll(".textleg")
		.data(groups)
      .enter().append("text")
        .attr('font-family', 'sans-serif')
        .attr('font-size',x0Scale(h['w']*0.9))
        //.attr('fill', function(d) {return d.color;})
        //.attr('text-anchor',"middle")
        //.attr('class', 'shadow')
        .attr('x',x0Scale(2*h['w']*1.15))
        .attr('y',function(d,i) {return (i+1)*x0Scale(h['w']*1.15);})
        .text(function(d){return d.name + ' (' + d.n + ')'});
   </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Renewable energy consumption and energy dependence rate in the European Union</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				opacity: 0.6;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}
			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1>Where does the EU energy comes from?</h1>

		<p>Renewable energy consumption and energy dependence rate per EU countries</p>
		<p>In percentage, for 2013. Source: <a href="http://ec.europa.eu/eurostat/home">Eurostat</a></p>


		<script type="text/javascript">		


			var w = 750;
			var h = 500;
			var padding = [ 30, 30, 50, 50 ];  //Top, right, bottom, left



			var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(15)
							.tickFormat(function(d) {
								return d + "%";
							});

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
							.ticks(10)
							.tickFormat(function(d) {
								return d + "%";
							});



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("Lesson3GreenEnergy.csv", function(data) {

				xScale.domain([ 
					d3.min(data, function(d) {
						return +d.Energy_dependance;
					}), 
					d3.max(data, function(d) {
						return +d.Energy_dependance;
					})
				]);

				yScale.domain([
					d3.max(data, function(d) {
						return +d.Renewable_energy_consumption;
					}),
					d3.min(data, function(d) {
						return +d.Renewable_energy_consumption;
					})
				]);

				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles.attr("cx", function(d) {
						return xScale(d.Energy_dependance);
					})
					.attr("cy", function(d) {
						return yScale(d.Renewable_energy_consumption);
					})
					.attr("r", 0.1)
					.attr("fill", "green")
					.append("title")
					.text(function(d) {
						return d.Country + " consumes " + d.Renewable_energy_consumption + "% of renewable energy, and its energy dependence rate is " + d.Energy_dependance + "%";
					});

				circles.sort(function(a, b) {
						return d3.ascending(+a.Energy_dependance, +b.Energy_dependance);
					})
					.transition()
					.delay(function(d, i) {
						return i * 20;
					})
					.duration(1500)
					.attr("r", 5);

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2] + 10) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + (padding[3] - 10) + ",0)")
					.call(yAxis);

			});


		</script>


	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Doctor Who Earth-Based Time Travel Adventures</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		
		<style type="text/css">
			
			body {
                background-color: white;
				font-family: Helvetica, Arial, sans-serif;
            }

            h1 {
				font-size: 20x;
				margin: 10px 0 0 0;
             
            }
            h2 {
                font-size: 18px;
                margin: 10px 0 0 0;
			}
            
            h3 {
                font-size: 16px;
                margin: 10px 0 0 0;
			}

			p {
				font-size: 12x;
				margin: 10px 0 0 0;
			}
            
            svg {
				background-color: #E0DED8;
			}
                                              
            circle:hover {
                fill: #A5D867;
                transition: fill 0.5s;
            }
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}


            
		</style>
			
	</head>
	
	
	
	
	<body>
        
        <h1>Doctor Who Earth-Based Time Travel Adventures</h1>       
                
        <h2>(DW1) Hartnell through (DW11) Smith</h2>

		<h3><p>Time Jumps between 100 and 1000 years - By Episode.</p>
            <p>Adapted from: <a href="http://www.theguardian.com/news/datablog/2010/aug/20/doctor-who-time-travel-information-is-beautiful">Guardian Data Blog</a>, 2010</p></h3>
		
		<p>The premise of Doctor Who is that he is a Time Lord, capable of ridiculously epic travels throughout time and space - even if it is billions of years into the past or future and/or numerous time jumps in a single episode / story arc. </p>
		<p></p>
		<p>This dataset represents a fraction of his Earth-based Time Travel. The Time Jumps are the Sum of DateTo and DateFrom per the episode Date references themselves as scripted) ... the glory of Science Fiction!</p>
		<p></p>
					
								
		<script type="text/javascript">	
            
        
        //Set the dimensions of the SVG canvas / chart
            
            var w = 600;
			var h = 400;
			var padding = [ 20, 20, 50, 40 ];  //Top, right, bottom, left
            
            

        // Set the scale ranges

			var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);


        // Define the axes
			
			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left");


        // Add the svg canvas

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
            
            
        
        //Load in contents of CSV file 

			d3.csv("DW_EARTH_TimeJourneys_000s_LE.csv", function(data) {
                
                //Now CSV contents have been transformed into an array of JSON objects.
                

        //Log 'data' to the console, for verification.
                console.log(data);
                
                              
        // Scale the range of the data
                
				xScale.domain([ 
					d3.min(data, function(d) {
						return +d.TimeJumpYrs;
					}), 
					d3.max(data, function(d) {
						return +d.TimeJumpYrs
					})
				]);

				yScale.domain([
					d3.max(data, function(d) {
						return +d.TimeJumpYrs;
					}),
					d3.min(data, function(d) {
						return +d.TimeJumpYrs;
					})
				]);

                        
        // Add the scatterplot
                
				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");
                        

                	circles.attr("cx", function(d) {
						      return xScale(d.TimeJumpYrs);
					})
					       .attr("cy", function(d) {
						      return yScale(d.TimeJumpYrs);
					})
                            .attr("r", 4)
                            .attr("fill", "#AC98DB")
                    
         // Add Tooltips to the scatterplot
                            .append("title")
                            .text(function(d) {
						      return d.DWactor + "'s Total Time Jump in " + d.EpTitle + " episode as The Doctor is " + d.TimeJumpYrs + " years";
					});

                    
        // Sort the scatterplot circles                    
                    circles.sort(function(a, b) {
						      return d3.ascending(+a.TimeJumpYrs, +b.TimeJumpYrs);
					})
                    
        // Set scatterplot transition & duration            
					       .transition()
					       .delay(function(d, i) {
                                return i * 50;
					})
					       .duration(2000)
					       .attr("r", 4);
                        

        // Add the X Axis                    
				    svg.append("g")
                        .attr("class", "x axis")
                        .attr("transform", "translate(0," + (h - padding[3] + 2) + ")")
                        .call(xAxis)
                        // Add "Years" unit of measure text to x-axis
                        .append("text")
                        .attr("class", "label")
                        .attr("x", 540)
                        .attr("y", -20)
                        .attr("dy", ".91em")
                        .style("text-anchor", "end")
                        .text("Time Jump - Years");
               

        // Add the y Axis
                     svg.append("g")
                        .attr("class", "y axis")
                        .attr("transform", "translate(" + padding[3] + ",0)")
                        .call(yAxis)
                        // Add rotated "Years" unit of measure text to x-axis
                        .append("text")
                        .attr("class", "label")
                        .attr("transform", "rotate(-90)")
                        .attr("x", -20)
                        .attr("y", 5)
                        .attr("dy", ".91em")
                        .style("text-anchor", "end")
                        .text("Time Jump - Years");
                
                
			});

		</script>

	</body>
	
</html><!DOCTYPE html>

<style>
body {
  font-family: sans-serif;
  font-size: 14px;
}

#tooltip {
  font-family: sans-serif;
  font-size: 12px;
  font-weight: bold;
  color:black;
}

</style>
	
<body>

<link rel="stylesheet" type="text/css" href="http://mostapharoudsari.github.io/Honeybee/pc_source_files/css/d3.parcoords.css">
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src = "http://mostapharoudsari.github.io/Honeybee/pc_source_files/d3/d3.parcoords.js"></script>

<div id="wrapper" class="parcoords" style="width:100%; height:500px"></div>
		
<script>

var color_set = d3.scale.quantile()
  .range(["#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850"].reverse());


// load default chart
d3.csv("cardiac_surgery.csv", function(data){

// collect text for first column to adjust left margin
var firstCell = data.map(function(d){return d3.values(d)[0]});

// find the longest text size in the first row to adjust left margin
var textLength = 0;
firstCell.forEach(function(d){
	if (d.length > textLength) textLength = d.length;
});
	

// get parallel coordinates
graph = d3.parcoords()('#wrapper')
	.data(data)
		.margin({ top: 100, left: 3 * textLength, bottom: 70, right: 20 })
		.alpha(0.5)
    .hideAxis(["Detailed Region", "Region", "Hospital Name", "Year of Hospital Discharge", "Comparison Results", "Procedure"])
		.composite("darker")
		.mode("queue")
		.rate(5)
		.render()
		.brushMode("1D-axes")  // enable brushing
		//.reorderable() // I removed this for now as it can mess up with tooltips
		.interactive();

update_colors("Expected Mortality Rate");

 // click label to activate coloring
graph.svg.selectAll(".dimension")
    .on("click", update_colors)
    .selectAll(".label")
    .attr("transform", "translate(2,-9) rotate(-8)");

//add hover event
d3.select("#wrapper svg")
	.on("mousemove", function() {
	    var mousePosition = d3.mouse(this);			    
	    highlightLineOnClick(mousePosition, true); //true will also add tooltip
	})
	.on("mouseout", function(){
		cleanTooltip();
		graph.unhighlight();
	});
	
});


// update color and font weight of chart based on axis selection
// modified from here: https://syntagmatic.github.io/parallel-coordinates/
function update_colors(dimension) { 
	// change the fonts to bold
	graph.svg.selectAll(".dimension")
		.style("font-weight", "normal")
		.filter(function(d) { return d == dimension; })
			.style("font-weight", "bold");

	// change color of lines
	// set domain of color scale
	var values = graph.data().map(function(d){return parseFloat(d[dimension])}); 
	color_set.domain([Math.sqrt(d3.min(values)), Math.sqrt(d3.max(values))]);
	
	// change colors for each line
	graph.color(function(d){return color_set(Math.sqrt(d[dimension]))}).render();
};		


// Add highlight for every line on click
function getCentroids(data){
	// this function returns centroid points for data. I had to change the source
	// for parallelcoordinates and make compute_centroids public.
	// I assume this should be already somewhere in graph and I don't need to recalculate it
	// but I couldn't find it so I just wrote this for now
	var margins = graph.margin();
	var graphCentPts = [];
	
	data.forEach(function(d){
		
		var initCenPts = graph.compute_centroids(d).filter(function(d, i){return i%2==0;});
		
		// move points based on margins
		var cenPts = initCenPts.map(function(d){
			return [d[0] + margins["left"], d[1]+ margins["top"]]; 
		});

		graphCentPts.push(cenPts);
	});

	return graphCentPts;
}

function getActiveData(){
	// I'm pretty sure this data is already somewhere in graph
	if (graph.brushed()!=false) return graph.brushed();
	return graph.data();
}

function isOnLine(startPt, endPt, testPt, tol){
	// check if test point is close enough to a line
	// between startPt and endPt. close enough means smaller than tolerance
	var x0 = testPt[0];
	var	y0 = testPt[1];
	var x1 = startPt[0];
	var	y1 = startPt[1];
	var x2 = endPt[0];
	var	y2 = endPt[1];
	var Dx = x2 - x1;
	var Dy = y2 - y1;
	var delta = Math.abs(Dy*x0 - Dx*y0 - x1*y2+x2*y1)/Math.sqrt(Math.pow(Dx, 2) + Math.pow(Dy, 2)); 
	//console.log(delta);
	if (delta <= tol) return true;
	return false;
}

function findAxes(testPt, cenPts){
	// finds between which two axis the mouse is
	var x = testPt[0];
	var y = testPt[1];

	// make sure it is inside the range of x
	if (cenPts[0][0] > x) return false;
	if (cenPts[cenPts.length-1][0] < x) return false;

	// find between which segment the point is
	for (var i=0; i<cenPts.length; i++){
		if (cenPts[i][0] > x) return i;
	}
}

function cleanTooltip(){
	// removes any object under #tooltip is
	graph.svg.selectAll("#tooltip")
    	.remove();
}

function addTooltip(clicked, clickedCenPts){
	
	// sdd tooltip to multiple clicked lines
    var clickedDataSet = [];
    var margins = graph.margin()

    // get all the values into a single list
    // I'm pretty sure there is a better way to write this is Javascript
    for (var i=0; i<clicked.length; i++){
    	for (var j=0; j<clickedCenPts[i].length; j++){
    		var text = d3.values(clicked[i])[j];
  			// not clean at all!
  			var x = clickedCenPts[i][j][0] - margins.left;
  			var y = clickedCenPts[i][j][1] - margins.top;
  			clickedDataSet.push([x, y, text]);
		};
	};

	// add rectangles
	var fontSize = 14;
	var padding = 2;
	var rectHeight = fontSize + 2 * padding; //based on font size

	graph.svg.selectAll("rect[id='tooltip']")
        	.data(clickedDataSet).enter()
        	.append("rect")
        	.attr("x", function(d) { return d[0] - d[2].length * 5;})
			.attr("y", function(d) { return d[1] - rectHeight + 2 * padding; })
			.attr("rx", "2")
			.attr("ry", "2")
			.attr("id", "tooltip")
			.attr("fill", "grey")
			.attr("opacity", 0.9)
			.attr("width", function(d){return d[2].length * 10;})
			.attr("height", rectHeight)
      .style("pointer-events", "none");

	// add text on top of rectangle
	graph.svg.selectAll("text[id='tooltip']")
    	.data(clickedDataSet).enter()
    		.append("text")
			.attr("x", function(d) { return d[0];})
			.attr("y", function(d) { return d[1]; })
			.attr("id", "tooltip")
			.attr("fill", "white")
			.attr("text-anchor", "middle")
			.attr("font-size", fontSize)
      .text( function (d){ return d[2];})    
      .style("pointer-events", "none");
}

function getClickedLines(mouseClick){
    var clicked = [];
    var clickedCenPts = [];

	// find which data is activated right now
	var activeData = getActiveData();

	// find centriod points
	var graphCentPts = getCentroids(activeData);

    if (graphCentPts.length==0) return false;

	// find between which axes the point is
    var axeNum = findAxes(mouseClick, graphCentPts[0]);
    if (!axeNum) return false;
    
    graphCentPts.forEach(function(d, i){
      if (clicked.length > 1) return;
	    if (isOnLine(d[axeNum-1], d[axeNum], mouseClick, 2)){
	    	clicked.push(activeData[i]);
	    	clickedCenPts.push(graphCentPts[i]); // for tooltip
	    }
	});
	
	return [clicked, clickedCenPts]
}


function highlightLineOnClick(mouseClick, drawTooltip){
	
	var clicked = [];
    var clickedCenPts = [];
	
	clickedData = getClickedLines(mouseClick);

	if (clickedData && clickedData[0].length!=0){

		clicked = clickedData[0];
    	clickedCenPts = clickedData[1];

	    // highlight clicked line
	    graph.highlight(clicked);
		
		if (drawTooltip){
			// clean if anything is there
			cleanTooltip();
	    	// add tooltip
	    	addTooltip(clicked, clickedCenPts);
		}

	}
};

</script>
</body>
<!DOCTYPE html>
<head>
<meta charset="utf-8">
<title>Fukushima River</title>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="http://d3js.org/queue.v1.min.js" charset="utf-8"></script>
<script src="http://d3js.org/topojson.v1.min.js" charset="utf-8"></script>
<style>
#map {
  width:960px;
  height:500px;
  margin: 0 auto;
  border: 1px;
}
</style>
</head>
<body>
<div id="map"></div>
<script>

    var width  = 960,
        height = 500;

    var projection = d3.geo.mercator()
                    .scale(15000)
                    .center([140.359742, 37.400529]);

    var path = d3.geo.path()
        .projection(projection);

    var svgContainer = d3.select("#map").append("svg")
        .attr("width", width)
        .attr("height", height);

    queue()
        .defer(d3.json, "fukushima.topojson")
        .defer(d3.json, "W05-07_07-g.topojson")
        .await(loadReady);


    function loadReady(_error, _topojson, _river) {

          if (_error){ console.log(_error); }

          /*
              地表
          */
          var geometries = topojson.feature(_topojson, _topojson.objects.fukushima).features;
          var countries =  svgContainer.append("g").attr("id", "countries").selectAll(".city").data(geometries);

          /*
              河川
          */
          var geometriesRiver = topojson.feature(_river, _river.objects.fukushimaRiver).features;
          var countriesRiver =  svgContainer.append("g").attr("id", "rivers").selectAll(".river").data(geometriesRiver);


          countries
              .enter().insert("path")
                  .attr("class", "city")
                  .attr("d", path)
                  .style("fill", "#DDD")
                  .style("stroke", "#FFF")
                  .style("stroke-width", "0.8px");

          countriesRiver.enter()
                .append('path')
                .attr("class", "river")
                .attr("d", path)
                .style("fill", "none")
                .style("stroke-width",1)
                .style("stroke", "#89c23a")
                .style('stroke-dasharray', function(d) {
                  var node = d3.select(this).node();
                  if (node.hasAttribute("d")){
                    var tlength = d3.select(this).node().getTotalLength();
                    return tlength + " " + tlength;
                  }
                })
                .style('stroke-dashoffset', function(d) {
                  var node = d3.select(this).node();
                  if (node.hasAttribute("d"))
                    var tlength = d3.select(this).node().getTotalLength();
                    return tlength;
                })
                .transition()
                .delay(function(d,i) {return i*5})
                .duration(0)
                .ease("linear")
                .style('stroke-dashoffset', function(d) {
                    return 0;
                });

    }    
</script>
</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
</head>

<body>

  <svg width=960 height=500 >
  </svg>
  
  <script>
  	var svg = d3.select('svg');
		var rect = svg.append('rect')
    	.attr({
    		x: 0,
      	y: 0,
      	width: 960,
      	height: 300
    	})
    	.style({
    		fill: "#336699"
    	});
    
    function breathe(){
      rect.transition().duration(1200).attr({ 
      	transform: 'scale(' + Math.random() + ')'
      }).each('end', breathe);
    }
    breathe();
    

  </script>
</body>


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>d3 | update chart</title> 
  <meta name="author" content="Sundar Singh | eesur.com">
  
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script> 
  <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.3/moment.min.js"></script>
  <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.9.3/lodash.min.js"></script>

  <style type="text/css">
	@import url(http://fonts.googleapis.com/css?family=Source+Code+Pro:400,600);

	body {
		font-family: "Source Code Pro", Consolas, monaco, monospace;
		line-height: 1.5;
		font-weight: 400;
		background-color: #130C0E;
		padding: 20px;
	}
    #current-seconds {
        list-style: none;
        margin: 0;
        padding: 0;
        margin-top: 30px;
    }
    #current-seconds li {
        padding: 4px 8px;
        margin-bottom: 8px;
        background: #00B0DD;
        letter-spacing: 1px;
    }
</style>
</head>
<body>

<ul id="current-seconds"></ul>

<script src="d3_code_updatechart.js" charset="utf-8"></script> 

</body>
</html><!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>SVG Simple overlay</title>
    
    <link rel="stylesheet" href="http://www.sumbera.com/gist/js/leaflet/svg/scaled/leaflet.css" />

    <style>
        body {
            margin: 0px;
        }
        #map {
            position: absolute;
            height: 100%;
            width: 100%;
            background-color: #333;
        }
    </style>
</head>
<body>

    <!-- Base libraries-->
    <script src="http://www.sumbera.com/gist/js/leaflet/svg/scaled/d3-3.5.5.min.js"></script>
    <script src="http://www.sumbera.com/gist/js/leaflet/svg/scaled/leaflet.js"></script>
    <script src="L.SvgScaleOverlay.js"></script>
    <script src="http://www.sumbera.com/gist/data.js" charset="utf-8"></script>
    <div id="map">
    </div>
    <div id="tooltip" style="width:230px; height:100px;">
     </div>


    <script>
        
      
            var lmap = new  L.map('map').setView([50.00, 14.44], 9)
                        .addLayer(L.tileLayer("http://{s}.sm.mapstack.stamen.com/(toner-lite,$fff[difference],$fff[@23],$fff[hsl-saturation@20])/{z}/{x}/{y}.png"));

            var circles;

            var svgOverlay = L.SvgScaleOverlay();
            var radius = 3;
 
           
            //------------------------------------------------------------
            svgOverlay.onInitData = function () {
                if (!circles) {
                    var g = d3.select(this._g);
                    circles = g.selectAll("circle")
                                    .data(data)
                                    .enter().append('circle');
                    // -- opacity based on grouping optimization in point data
                    circles.style("fill-opacity", 0.8);
                    circles.style("fill", "rgba(255,116,116, 0.5)")

                }
                
                
                circles.each(function (d) {
                    var elem = d3.select(this);
                    var point = lmap.project(L.latLng(new L.LatLng(d[0], d[1])))._subtract(lmap.getPixelOrigin());
                    //var point = lmap.latLngToLayerPoint(new L.LatLng(d.geometry.coordinates[1], d.geometry.coordinates[0]));
                    elem.attr('cx', point.x)
                    elem.attr('cy', point.y)
                    elem.attr('r', radius)
                })
            };

            svgOverlay.onScaleChange = function (scaleDiff) {
                if (scaleDiff > 0.5) {
                    var newRadius = radius * 1 / scaleDiff;

                    var currentRadius = d3.select('circle').attr("r");
                    if (currentRadius != newRadius) {
                        d3.selectAll("circle").attr('r', newRadius);
                    }
                }

            }


            lmap.addLayer(svgOverlay);
            /***********************/

            

       
    </script>
</body>

</html>
<!DOCTYPE html>
<html>
  <head>
    <title>Air Quality is different from City to City</title>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

<style type="text/css">

body {
  font: 12px futura;
  background: white;
}

h1 { color: magenta; font-family: 'Open Sans', futura; font-size: 34px; font-weight: 300; line-height: 40px; margin: 0 0 16px; }

h2 { color: #63BAB1; font-family: 'Open Sans', futura; font-size: 24px; font-weight: 300; line-height: 32px; margin: 0 0 14px; }

h3 { color: #515254; font-family: 'Open Sans', futura; font-size: 18px; font-weight: 300; line-height: 32px; margin: 0 0 14px; }

h4 { color: #B1DCD8; font-family: 'Open Sans', futura; font-size: 12px; font-weight: 500; line-height: 32px; margin: 0 0 14px; }

p { color: #63BAB1; font-family: 'Open Sans', futura; font-size: 15px; font-weight: 500; line-height: 24px; margin: 0 0 14px; }

a { background: #Eff0f5; color: #222; text-decoration: none; }

a:hover { background: #F90B6D; color: #eee; text-decoration: none; }



}

.axis path {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  shape-rendering: crispEdges;
}
.axis line {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  shape-rendering: crispEdges;
}

.x.axis path {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.line {
  fill: none;
  stroke-width: 2px;
}

.country {opacity: 0.5;}
.country:hover {opacity:1;}

</style>
</head>
<body>

 <h1>It's Half Past Workout O'clock: When is the best time to go for a run?
   </h1>

 <h2>Air Quality is different from City to City, and for different times during the day.
   </h2>

   <h3>Note: The data comes from air quality monitoring station measurements for 3 different cities.</h3>

<li>The measurements started at 5pm for 24 hours on the 13th of September 2014.</li>

<li><a href="http://sviva.gov.il">Source: Ministry of Environmental Protection</a></li>

<li>"In some places, the afternoon shows high levels of pollutants due to background levels of the environment (close to desert, etc.)", <br>explains Ziv Lautman, cofounder of air quality health startup <a href="http:breezometer.com/">BreezoMeter.</a></br></li></p>

<li>Thanks for the support from Nikhil S. and his D3 library example on <a href="https://github.com/nsonnad">GitHub</a></li></p>

  <div>
      <input type="checkbox" id="bric" onclick="briclight()">South of the country</input>
      <input type="checkbox" id="mist" onclick="mistlight()">North of the country</input>
  </div>
  <p id="menu"><b>Bad stuff in the air... When's it the worst?</b><br>Select a pollutant: <select>
    <option value="SO2">Sulfur dioxide (ppb)</option>
    <option value="NO">Nitric Oxide (ppb)</option>
    <option value="NOX">Nitrogen Oxides (ppb)</option>
    <option value="NO2">Nitrogen Dioxide (ppb)</option>
    <option value="O3">Ozone(ppb)</option>
    <option value="PM10">Particle Pollution (PM10 in g/m3)
    </option>
    </select>

  <script type="text/javascript">

    var margin = {top: 20, right: 80, bottom: 30, left: 50},
        w = 660 - margin.left - margin.right,
        h = 400 - margin.top - margin.bottom,
        x = d3.time.scale().range([0, w]),
        y = d3.scale.linear().range([h, 0]);
        parseDate = d3.time.format("%H:%M").parse;
        
    var color = d3.scale.category10(); 
    
    var countries,
        filtered,
        transpose;
    
 
    var line = d3.svg.line()
       .interpolate("basis")
       .x(function(d) { return x(d.year); })
       .y(function(d) { return y(d.stat); });
    
    var svg = d3.select("body").append("svg")
        .attr("width", w + margin.left + margin.right)
        .attr("height", h + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom")
       svg.append("svg:g")
        .attr("class", "x axis")
        .style("fill", "#AFB8D0");

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left")
        svg.append("svg:g")
        .attr("class", "y axis")
        .style("fill", "#B1DCD8" );
    
    var menu = d3.select("#menu select")
    .on("change", change);    
			    

d3.csv("data2.csv", function(csv) {
		countries = csv;
        redraw();
    });

d3.select(window)
    .on("keydown", function() { altKey = d3.event.altKey; })
    .on("keyup", function() { altKey = false; });

var altKey;

   
function change() {
  clearTimeout(timeout);

  d3.transition()
      .duration(altKey ? 7500 : 1500)
      .each(redraw);
}

function redraw() {
    
    var nested = d3.nest()
		.key(function(d) { return d.indicatorCode; })
		.map(countries)
    
   
    var series = menu.property("value");
  
    var data = nested[series];
  
    var keyring = d3.keys(data[0]).filter(function(key) { 
     	    return (key !== "indicatorName" && key !== "yearCode" && key !== "indicatorCode" && key !== "year");
     	});


    var transpose = keyring.map(function(name) {
            return {
              name: name,
              values: data.map(function(d) {
                return {year: parseDate(d.year), stat: +d[name]};
              })
            };
        });

    x.domain([
    d3.min(transpose, function(c) { return d3.min(c.values, function(v) { return v.year; }); }),
    d3.max(transpose, function(c) { return d3.max(c.values, function(v) { return v.year; }); })
  ]);

    y.domain([
    d3.min(transpose, function(c) { return d3.min(c.values, function(v) { return v.stat; }); }),
    d3.max(transpose, function(c) { return d3.max(c.values, function(v) { return v.stat; }); })
  ]);

    var country = svg.selectAll(".country")
      .data(transpose);
     
 
    var countryEnter = country.enter().append("g")
      .attr("class", "country")
      .attr("id", function(d) { return d.name; });
    
    countryEnter.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });


    countryEnter.append("text")
     .attr("class", "names")
     .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
     .attr("transform", function(d) { return "translate(" + x(d.value.year) + "," + y(d.value.stat) + ")"; })
     .attr("x", 4)
     .attr("dy", ".35em")
     .text(function(d) { return d.name; });

    var countryUpdate = d3.transition(country);
    
    countryUpdate.select("path")
      .attr("d", function(d) { return line(d.values); });
    
    countryUpdate.select("text")
       .attr("transform", function(d) { return "translate(" + x(d.values[d.values.length - 1].year) + "," + y(d.values[d.values.length - 1].stat) + ")"; });
  
      d3.transition(svg).select(".y.axis")
          .call(yAxis);   
          
      d3.transition(svg).select(".x.axis")
            .attr("transform", "translate(0," + h + ")")
          .call(xAxis);
          
}

var timeout = setTimeout(function() {
  menu.property("value", "ENEUSE").node().focus();
  change();
}, 7000);

function briclight() {
    var chkbox = document.getElementById("bric");
    if (chkbox.checked) {
        document.getElementById("Beersheva").style.cssText = "opacity:1;"
    } else { 
        document.getElementById("Beersheva").style.cssText = "";
    }};
    
function mistlight() {
    var chkbox = document.getElementById("mist")
    if (chkbox.checked) {
        document.getElementById("Givatayim").style.cssText = "opacity:1;",
        document.getElementById("Karmiel").style.cssText = "opacity:1;"
        
    } else { 
        document.getElementById("Givatayim").style.cssText = "",
        document.getElementById("Karmiel").style.cssText = "";
    }};
	</script>
  </body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    pre { width: 100%; height: 100%; font-size: 10px; overflow-y: scroll; }
  </style>
</head>

<body>
  <pre id="json"></pre>
  <script>
    
    function process(d) {
      var processed = {
        dead: +d.dead,
        dead_and_missing: +d.dead_and_missing, //this seems to be most important
        missing: +d.missing,
        latitude: +d.latitude,
        longitude: +d.longitude,
        date: new Date(d.date),
        description: d.description,
        name: d.name,
        source: d.source,
        cause_of_death: d.cause_of_death,
        route: d["route (Frontex)"],
        Event_id: d.Event_id
      }
      return processed;
    }
    
    d3.csv("http://enjalot.github.io/migrants/events.csv", function(err, rawdata) {
      console.log("rawdata", rawdata);
      
      
      var data = rawdata.map(process);
      console.log("data", data);
      
      d3.select("#json").text(JSON.stringify(data, null, 2))
    });
  </script>
</body>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
        <title>Average Annual Incomes by Regional District in BC</title>
    <script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
    <style type="text/css">
    
      svg{background-color: #818785;}
      
      rect:hover {
        fill: #2BCC14;
      }

      .axis path,
      .axis line {
        fill: none;
        stroke: black;
        shape-rendering; crispEdges;
      }

      .axis text {
        font-family: sans-serif;
        font-size: 15px;
      }

      .y.axis path,
      .y.axis line {
        opacity: 0;
      }

    </style>
  </head>
<body>
    <h1>Average Incomes in British Columbia</h1>

    <p>Average Annual Incomes by Regional District in BC</p>
 
  <script type="text/javascript">   


  var w = 900;
  var h = 1200;
  var padding = [20, 20, 30, 210]; //top, right, bottom, left
  
  var widthScale =  d3.scale.linear()
                      .range([ 0, w - padding[1] - 
                        padding[3] ]);

  var heightScale = d3.scale.ordinal()
                .rangeRoundBands([ padding[0], h - padding[2] ], 0.1);

  var xAxis = d3.svg.axis()
              .scale(widthScale)
              .orient("bottom");

  var yAxis = d3.svg.axis()
              .scale(heightScale)
              .orient("left");                    

  var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);


      d3.csv("C_H_N_data.csv", function(data) {
        data.sort(function(a, b) {
          return d3.descending(+a.Total_all_Average_Household_Income, +b.Total_all_Average_Household_Income);
        });

        widthScale.domain([ 0, d3.max(data, function(d) {
          return +d.Total_all_Average_Household_Income;
        }) ]);

        heightScale.domain(data.map(function(d) { return d.Geography; } ));

        var rects = svg.selectAll("rect")
                .data(data)
                .enter()
                .append("rect")

              

        rects.attr("x", padding[3])
          .attr("y", function(d, i) {
            return heightScale(d.Geography);
          })
          .attr("width", function(d) {
            return widthScale(d.Total_all_Average_Household_Income);
          })
          .attr("height", heightScale.rangeBand())
          .attr("fill", "#9DFEFF")
          .append("title")
          .text(function(d) {
            return d.Geography + "'s average household income in " + d.Year + " was $" + d.Total_all_Average_Household_Income;
          });
         svg.append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
          .call(xAxis);

        svg.append("g")
          .attr("class", "y axis")
          .attr("transform", "translate(" + padding[3] + ",0)")
          .call(yAxis);     
               
      });
              
          

      


    </script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
    <style>


.pico{
  fill:blue;
  height:100px;
}

.eve{
  background:grey;
 border:2px solid purple;
color:violet;

}

.odd{
color:black;

}

.god{
  fill:black;
  border: 2px solid black;

}

th{
  border: 3px solid black;

}


table{
  border-collapse:collapse;

}
</style>
<body>
<div id='picer'></div>
        <script src="http://d3js.org/d3.v3.js"></script>


<script src="twd3.js">        </script>
    </body><!DOCTYPE html>
<meta charset="utf-8">

<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v0.min.js"></script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js"></script>

<script>
var width = 960,
    height = 500;

/*var projection = d3.geo.orthographic()
    .scale(250)
    .translate([width / 2, height / 2])
    .clipAngle(90);*/

/*
var projection = d3.geo.stereographic()
    .scale(245)
    .translate([width / 2, height / 2])
    .rotate([-20, 0])
    .clipAngle(180 - 1e-4)
    .clipExtent([[0, 0], [width, height]])
    .precision(.1);
*/

var projection = d3.geo.august()
    .scale(50)
    .translate([width / 2, height / 2])
    .precision(0.1);

var canvas = d3.select("body").append("canvas")
    .attr("width", width)
    .attr("height", height);

var context = canvas.node().getContext("2d");

var path = d3.geo.path()
.projection(projection)
.context(context);



d3.json("https://cdn.rawgit.com/mbostock/4090846/raw/8a7f176072d508218e120773943b595c998991be/world-50m.json", function(error, data) {

  var land = topojson.object(data, data.objects.land);
  var globe = {type: "Sphere"};

  context.fillStyle = '#d8ffff';
 
  context.beginPath();
  path(globe);
  context.fill();


  context.strokeStyle = '#aaa';
  context.fillStyle = '#ccc';

  context.beginPath();
  path(land);
  context.fill();
  
  context.beginPath();
  path(land);
  context.stroke();
  
});

</script>

<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 100% }
  </style>
</head>

<body>
  <script>
    var radius = 5,
        off = 100+radius,
    		svg = d3.select("body").append("svg")
    						.append('g').attr('transform', 'translate('+off+','+off+')'),
        lineG = svg.append('g'),
        circ1 = svg.append("circle")
    						.attr({
                  cx: 0, cy: 0, r: radius
                })
    						.style('fill', 'steelblue');

    function fibTween(a,b,i) {
      setTimeout(function () {
        var c = a+b,
          Lab = { l: c%100, a: a%200, b: b%200 };
        Lab.a -= 100;
        Lab.b -= 100;
        var next = (c%200) - 100;

        svg.append('line')
          .attr({x1: Lab.a, x2: Lab.b, y1: Lab.b, y2: next})
          .attr('stroke', d3.lab(Lab.l, Lab.a, Lab.b))
          .attr('stroke-width', 1);

         circ1.transition().duration(1667)
         		.attr('cx', Lab.a).attr('cy', Lab.b)
            .style('fill',d3.lab(Lab.l, Lab.a, Lab.b))
         		.each('end', function() {
              console.log('hi');
           		
            });
         		
        if(i == 78) fibTween(1,1,0); // Number overflow
        else fibTween(b, c, i++);
      }, 1000);
    }
		fibTween(1,1,0);
    
    
//     svg.append("rect")
//       .attr({x: 100, y: 10, width: 700, height: 480})
//       .style({ fill: "#a72d1a"})
//       .transition().duration(3000).ease("bounce")
//       .style({ fill: "#5db9e3"})

    console.log("you are now rocking with d3", d3);
  </script>
</body>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Orbit Layout Modes</title>
  <meta charset="utf-8" />
</head>
<style>

  #viz, svg {
    width: 1000px;
    height: 1000px;
  }

  text {
    pointer-events: none;
  }

  #buttons {
    position: absolute;
    top:0;
    left:0;
  }

  circle.ring {
    fill: none;
    stroke: black;
    stroke-width: 1px;
    stroke-opacity: .15;

  }
  
</style>
<script>


function makeViz() {

  d3.json("solarsystem.json", function(data) {drawOrbit(data)});

}

function drawOrbit(_data) {

  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);
  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);

  planetColors = {Mercury: "gray", Venus: "#d6bb87", Earth: "#677188", Mars: "#7c5541", Jupiter: "#a36a3e", Saturn: "#e9ba85", Uranus: "#73cbf0", Neptune: "#6383d1"}


  orbit = d3.layout.orbit().size([500,500])
  .children(function(d) {return d.values})
  .revolution(function(d) {return 1 / d.orbital_period})
  .orbitSize(function(d) {return orbitScale(d.depth)})
  .speed(1)
  .mode("atomic")
  .nodes(_data);

  d3.select("svg")
.append("g")
.attr("class", "viz")
.attr("transform", "translate(50,50)")
  .selectAll("g.node").data(orbit.nodes())
  .enter()
  .append("g")
  .attr("class", "node")
  .attr("transform", function(d) {return "translate(" +d.x +"," + d.y+")"})
  .on("mouseover", nodeOver)
  .on("mouseout", nodeOut)

  d3.selectAll("g.node")
  .append("circle")
  .attr("r", function(d) {return d.radius ? radiusScale(d.radius) : 20})
  .style("fill", function(d) {return d.depth == 0 ? "#FFCC00" : d.depth == 1 ? planetColors[d.key] : "lightgray"});

  d3.selectAll("g.node").filter(function(d) {return d.depth == 1})
  .append("text")
  .text(function(d) {return d.depth == 0 ? "Sun" : d.key})
  .attr("y", 20)
  .style("text-anchor", "middle")

  d3.select("g.viz")
  .selectAll("circle.ring")
  .data(orbit.orbitalRings())
  .enter()
  .insert("circle", "g")
  .attr("class", "ring")
  .attr("r", function(d) {return d.r})
  .attr("cx", function(d) {return d.x})
  .attr("cy", function(d) {return d.y})

  d3.select("#buttons").append("button").html("solar").on("click", function() {newMode("solar")})
  d3.select("#buttons").append("button").html("flat").on("click", function() {newMode("flat")})
  d3.select("#buttons").append("button").html("atomic").on("click", function() {newMode("atomic")})
  d3.select("#buttons").append("button").html("custom").on("click", function() {newMode([4,4])})

  orbit.on("tick", function() {
    d3.selectAll("g.node")
      .attr("transform", function(d) {return "translate(" +d.x +"," + d.y+")"});

    d3.selectAll("circle.ring")
    .attr("cx", function(d) {return d.x})
    .attr("cy", function(d) {return d.y});
  });

  orbit.start();

  function newMode(_mode) {
    orbit.mode(_mode)
    .nodes(_data);

  d3.select("g.viz")
  .selectAll("circle.ring")
  .data(orbit.orbitalRings())
    .exit()
    .transition()
    .duration(500)
    .style("stroke-opacity", 0)
    .style("stroke-width", 3)
    .remove();

    d3.select("g.viz")
    .selectAll("circle.ring")
    .data(orbit.orbitalRings())
    .enter()
    .insert("circle", "g")
    .attr("class", "ring");
    
    d3.selectAll("circle.ring")
    .attr("r", function(d) {return d.r})
    .attr("cx", function(d) {return d.x})
    .attr("cy", function(d) {return d.y});

  }

  function nodeOver(d) {
    orbit.stop();

    if (d.depth == 2) {
      d3.select(this).append("text").text(d.label || d.key).style("text-anchor", "middle")
      .attr("y", 15)
      .attr("class", "moon");
    }
    d3.select(this).select("circle").style("stroke", "black").style("stroke-width", 3);
  }

  function nodeOut() {
    orbit.start();
      d3.selectAll("text.moon").remove();
    d3.selectAll("g.node > circle").style("stroke", "none").style("stroke-width", 0);    
  }


}

</script>
<body onload="makeViz()">
<div id="viz"><svg></svg><div id="buttons"></div></div>
<footer>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="d3.layout.orbit.js" charset="utf-8" type="text/javascript"></script>
</footer>
</body>
</html><!DOCTYPE html>
<html>
<style>
body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

body {
  font: 12px sans-serif;
}

.title {
  font: 24px sans-serif;
}

.byline{
  font: 10px sans-serif;
}

.explanation {
  font: 12px sans-serif;
}

.x.axis path {
  display: none;
}

.y.axis path {
  display: none;
}

.axis .tick {
  stroke-width: 0;
}

.grid .tick {
    stroke: white;

}
.grid path {
      stroke-width: 0;
}
</style>
  <head>
  	<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
  </head>
  <body>
  	<script>

//**********************************
// open -a 'Google Chrome' --args -allow-file-access-from-files
// *********************************

var margin = {top: 220, right: 20, bottom: 190, left: 40},
  width = 2500 - margin.left - margin.right,
  height = 700 - margin.top - margin.bottom;


var x0 = d3.scale.ordinal()
  .rangeRoundBands([0, width], .1);

var x1 = d3.scale.ordinal();

var y = d3.scale.linear()
  .range([height, 0])
  .domain([0, 13000]); ///let's just hardcode this

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
  .scale(x0)
  .orient("bottom");

var yAxis = d3.svg.axis()
  .scale(y)
  .orient("left")
  .tickFormat(d3.format("s"))
  .ticks(5);


function make_x_axis() {        
    return d3.svg.axis()
        .scale(x0)
         .orient("bottom")
         .ticks(5)
}

function make_y_axis() {        
    return d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(5)
}

var svg = d3.select("body").append("svg")
  .attr("width", width + margin.left + margin.right)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var title = "Federal Direct Student Loans, Georgia, 2013";
var byline = "by Maggie Lee";
var date = "May 5, 2014"
var source = "Source: http://studentaid.ed.gov/about/data-center/student/title-iv";
var nodes = [
    {title:  "Here's the profile of federal student loans for students of the biggest Georgia schools and it doesn't answer questions, it asks them. Of course the bigger schools tend to have the most loans, that's no surprise. But why do some schools have more unsubsidized than subsidized loan recipients? Why do some schools have so many unsubsidized graduate loans? It might prove, though, that artists are brave. There are more people getting in hock for art school than Georgia Tech."}
]

//var w = 500, h = 200;

var vSeparation = 13, textX=10, textY=0, maxLength=150;

var textHolder = svg.selectAll("text")
    .data(nodes)
    .enter().append("text")
    .attr("y", -170)
    .attr("text-anchor", "start")
    .each(function (d) {
        var lines = wordwrap(d.title, maxLength)

        for (var i = 0; i < lines.length; i++) {
            d3.select(this).append("tspan").attr("dy",vSeparation).attr("x",textX).text(lines[i])
        }
    });


function wordwrap(text, max) {
    var regex = new RegExp(".{0,"+max+"}(?:\\s|$)","g");
    var lines = []

    var line
    while ((line = regex.exec(text))!="") {
        lines.push(line);
    } 

    return lines
}



//******** end declarations


console.log(typeof(textHolder));

d3.csv("schools.csv", function(error, data) {



  var data = data.filter(function(row) {
    return row["Subsidised"] > 1000;
  }) // return just "big" schools, those w/ more than 500 of the biggest loan recipient



var schoolNames = d3.keys(data[0]).filter(function(key) 
  {return key == "Subsidised" 
  || key == "Unsubsidized Undergraduate"
  || key == "Unsubsidized Graduate"
  || key == "Parent Plus"
  || key == "Grad Plus"
  ; }); // returns all rows, just these columns


  data.forEach(function (d) {
    d.schools = schoolNames.map(function (name) {return {name: name, value: +d[name]}; });
  });

data.sort(function (a, b) {return b["Subsidised"] - a["Subsidised"]; }); /// sort it by that biggest kind of loan

x0.domain(data.map(function (d) {return d.School; }));
x1.domain(schoolNames).rangeRoundBands([0, x0.rangeBand()]);
console.log(data);
svg.append("g")
  .attr("class", "x axis")
  .attr("transform", "translate(0," + height + ")")
  .call(xAxis)
  .selectAll("text")  
            .style("text-anchor", "start")
            .attr("class", function (d, i) {return data[i]['School']})
            .on("mouseover", function (d, i) { console.log("clicked" + data[i]['School']); })
            // .attr("dx", ".9em")
            // .attr("dy", "-1.5em")
            .attr("transform", function(d) {
                return "rotate(65)" 
                });
//////// ***************  Y AXIS 
svg.append("g")
  .attr("class", "y axis")
  .attr("transform", "translate(20,0)")
  .call(yAxis)
  .append("text")
  .attr("transform", "rotate(-90)")
  .attr("y", -width*0.02)
  .attr("x", -height*0.05)
  .attr("dy", ".71em")
  .style("text-anchor", "end")
  .text("# of recipients");

var school = svg.selectAll(".school")
  .data(data)
  .enter().append("g")
  .attr("class", "g")
  .attr("class", function (d) {return d.School;})
  .attr("transform", function (d) { return "translate(" + x0(d.School) + ",0)"; })
  // this doesnt work yet
  .on("mouseover", function (d) { 
      console.log("clicked" + d.School);
     // d3.selectAll("." + d.School).style("fill", "black").style("stroke", "black"); // reset all text to black
      d3.selectAll("." + d.School).style("stroke", "red").style("fill", "red");
      }); //then whatever school you click on, the text turns red
  

school.selectAll("rect")
  .data(function(d) {return d.schools})
  .enter().append("rect")
    .attr("width", x1.rangeBand())
    .attr("x", function (d) {return x1(d.name); })
    .attr("y", function (d) {return y(d.value); })
    .attr("height", function (d) {return height - y(d.value); })
    .style("fill", function (d) {return color(d.name); })    ;

//*********** LEGEND

  var legend = svg.selectAll(".legend")
      .data(schoolNames.slice())
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  legend.append("rect")
      .attr("x", 10)
      .attr("width", 10)
      .attr("height", 10)
      .attr("y", -100)
      .style("fill", color);

  legend.append("text")
      .attr("x", 21)
      .attr("class", "names")
      .attr("y", -95)
      .attr("dy", ".35em")
      .style("text-anchor", "start")
      .text(function(d) { return d; });

    svg.append("g")         
        .attr("class", "grid")
        .attr("transform", "translate(20,0)")
        .call(make_y_axis()
            .tickSize(-width, 0, 0)
            .tickFormat("")
        );
// * ************** Annotations

    svg.append("text")
      .attr("class", "title")
      .attr("x", 10)
      .attr("y", -200)
      .attr("text-anchor", "start")
      .text(title);

    svg.append("text")
      .attr("class", "byline")
      .attr("x", 10)
      .attr("y", -185)
      .attr("text-anchor", "start")
      .text(byline);

    svg.append("text")
      .attr("class", "byline")
      .attr("x", 10)
      .attr("y", -172)
      .attr("text-anchor", "start")
      .text(date);
     
    svg.append("g")
      .data(textHolder)
      .attr("class", "explanation");


    svg.append("text")
      .attr("x", (20))
      .attr("y", height + margin.bottom*0.9)
      .attr("text-anchor", "start")
      .text(source);

  d3.select("svg")
  .append("a")
  .attr("href", "https://studentaid.ed.gov/about/data-center/student/title-iv.html")
  .html("new page");


});



    </script>
  </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Trees in Champaign</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
				background-color:rgba(89,173,120,1.00);
			}

			svg {
				background-color:rgba(185,228,246,1.00);
				margin:20px;
			}
			 rect { 
			 
				fill: #75523A;
			 }

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 1200)
						.attr("height", 1500);



			d3.csv("Champaign-trees-diam-totals.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.avgDiameter, +b.avgDiameter);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return Math.round((+d.avgDiameter) * 30);
					})
					.attr("height", 8)
					.append("title")
					.text(function(d) {
						return "Champaign's " + d.totalSpecimens + " " + d.commonName + " trees have an average diameter of " + Math.round((+d.avgDiameter)) + " feet.";
					});

			});


		</script>

	</body>
</html><!DOCTYPE html>
  <head>
    <meta charset="utf-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <style>
      body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
      svg { width: 100%; height: 100%; }
    </style>
  </head>

  <body>
    <script>
      var margin = {top: 20, right: 10, bottom: 20, left: 10};
      var width = 960 - margin.left - margin.right;
      var height = 500 - margin.top - margin.bottom;
      var svg = d3.select("body").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      
      // Start coding here !
      
      svg.append("rect")
      	.attr({
      		"width":100,
        "height":100,
        
      })
      

      console.log("you are now rocking with d3", d3);
    </script>
  </body>
  <!DOCTYPE html>
<meta charset="utf-8">
<title>Zoom + Pan</title>
<style>

body {
  position: relative;
  width: 960px;
}

svg {
  font: 10px sans-serif;
  shape-rendering: crispEdges;
}

rect {
  fill: #ddd;
}

.axis path,
.axis line {
  fill: none;
  stroke: #fff;
}

.buttons {
  position: absolute;
  right: 30px;
  top: 30px;
}

</style>
<div class="buttons">
  <button data-zoom="+1">Zoom In</button>
  <button data-zoom="-1">Zoom Out</button>
</div>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .domain([-width / 2, width / 2])
    .range([0, width]);

var y = d3.scale.linear()
    .domain([-height / 2, height / 2])
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .tickSize(-height);

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(5)
    .tickSize(-width);

var zoom = d3.behavior.zoom()
    .x(x)
    .y(y)
    .scaleExtent([1, 10])
    .center([width / 2, height / 2])
    .size([width, height])
    .on("zoom", zoomed);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
    .call(zoom);

svg.append("rect")
    .attr("width", width)
    .attr("height", height);

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

svg.append("g")
    .attr("class", "y axis")
    .call(yAxis);

d3.selectAll("button[data-zoom]")
    .on("click", clicked);

function zoomed() {
  svg.select(".x.axis").call(xAxis);
  svg.select(".y.axis").call(yAxis);
}

function clicked() {
  svg.call(zoom.event); // https://github.com/mbostock/d3/issues/2387

  // Record the coordinates (in data space) of the center (in screen space).
  var center0 = zoom.center(), translate0 = zoom.translate(), coordinates0 = coordinates(center0);
  zoom.scale(zoom.scale() * Math.pow(2, +this.getAttribute("data-zoom")));

  // Translate back to the center.
  var center1 = point(coordinates0);
  zoom.translate([translate0[0] + center0[0] - center1[0], translate0[1] + center0[1] - center1[1]]);

  svg.transition().duration(750).call(zoom.event);
}

function coordinates(point) {
  var scale = zoom.scale(), translate = zoom.translate();
  return [(point[0] - translate[0]) / scale, (point[1] - translate[1]) / scale];
}

function point(coordinates) {
  var scale = zoom.scale(), translate = zoom.translate();
  return [coordinates[0] * scale + translate[0], coordinates[1] * scale + translate[1]];
}

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>1860_homeground_stats</title>
		<script type="text/javascript" src="../d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: #ddddff;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 300)
						.attr("height", 400);



			d3.csv("stadium_scores_clear.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(a.percentage_of_wins, b.percentage_of_wins);
                  
					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return d.percentage_of_wins * 4;
					})
					.attr("height", 8);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Adding Tooltips</title>
		<script type="text/javascript" src="../d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: #f5fffe;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 300)
						.attr("height", 400);



			d3.csv("fish-contributions.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(a.Amount, b.Amount);

				});

				var donations = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rdonations.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return d.Amount * 30;
					})
					.attr("height", 8)
					.append("title")
					.text(function(d) {
						return "John Fish donated " + d.Amount + " to " d.Recipient + " on " + d.Date;
					});

			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.link {
  stroke: #ccc;
  stroke-width: 1.5px;
  stroke-opacity: 0.5;
}

.node ellipse {
  fill: #fff;
  stroke: #000;
  stroke-width: 0.5px;
}

.node text {
  pointer-events: none;
  font: 10px sans-serif;
}

.axis {
  opacity: 0.5;
  font: 10px sans-serif;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.axis .domain {
  fill: none;
  stroke: #000;
  stroke-opacity: .3;
  stroke-width: 4px;
  stroke-linecap: round;
}

.axis .halo {
  fill: none;
  stroke: #ddd;
  stroke-width: 3px;
  stroke-linecap: round;
}

.slider .handle {
  fill: #fff;
  stroke: #000;
  stroke-opacity: .5;
  stroke-width: 1.25px;
  cursor: grab;
}

</style>

<body>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 750;
var height = 350;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("g").attr("class","linkg");
svg.append("g").attr("class","nodeg");
    
var force = d3.layout.force()
    .size([width - 100, height])
    .nodes([{}])
    .gravity(0.2)
    .charge(-200);

var x = d3.scale.linear()
    .domain([500000, 5000000])
    .range([250, 80])
    .clamp(true);

var brush = d3.svg.brush()
    .y(x)
    .extent([0, 0]);

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(" + (width - 20)  + ",0)")
    .call(d3.svg.axis()
      .scale(x)
      .orient("left")
      .tickFormat(function(d) { return d / 1000000.0 ; })
      .tickSize(0)
      .tickPadding(12))
  .select(".domain")
  .select(function() { return this.parentNode.appendChild(this.cloneNode(true)); })
    .attr("class", "halo");

var slider = svg.append("g")
    .attr("class", "slider")
    .call(brush);

slider.selectAll(".extent,.resize")
    .remove();

var handle = slider.append("circle")
    .attr("class", "handle")
    .attr("transform", "translate(" + (width - 20) + ",0)")
    .attr("r", 5);


svg.append("text")
    .attr("x", width - 15)
    .attr("y", height - 75)
    .attr("text-anchor", "end")
    .attr("font-size", "10px")
    .style("opacity", 0.5)
    .text("> x million")

svg.append("text")
    .attr("x", width - 15)
    .attr("y", height - 60)
    .attr("text-anchor", "end")
    .attr("font-size", "10px")
    .style("opacity", 0.5)
    .text("bilateral migration")

var bigGraph = {"nodes":[], "links":[]};

function compare(a,b) {
  if (a.i < b.i)
    return -1;
  if (a.i > b.i)
    return 1;
  return 0;
}

var selectyeartext = ["2000","1990","1980","1970","1960"];
var selectyearids = [2000,1990,1980,1970,1960];
var selectyear = 2000;


d3.csv("migration.csv", function(error, migrationTable) {
  
  d3.json("countrynames.json", function(error, countrynames) {
  
    
    // construct graph object from table
    
    var nodes = {};
    var nCount = 0;
    var lCount = 0;
    migrationTable.forEach(function(m){
      if (!(m.cCode1 in nodes)) { nodes[m.cCode1] = nCount; nCount += 1; };
      if (!(m.cCode2 in nodes)) { nodes[m.cCode2] = nCount; nCount += 1; };
      bigGraph.links.push({"source": nodes[m.cCode1] , 
                        "target": nodes[m.cCode2] ,
                        "1960": m.totalMigration1960 ,
                        "1970": m.totalMigration1970 ,
                        "1980": m.totalMigration1980 ,
                        "1990": m.totalMigration1990 ,
                        "2000": m.totalMigration2000 ,
                        "linkname" : lCount
                       });
      lCount += 1;
    });
    
    bigGraph.nodes = $.map(nodes, function(v, k) {
      return {"x": width * Math.random(), "y": height * Math.random(), "i": v, "name": k, "countryname": countrynames[k]};
    });
    bigGraph.nodes.sort(compare);
  
  
    // text fields used as selectors
  
    for (var i=0; i<selectyearids.length; i++) {
      svg.append("text").attr("x", width - 215 + (selectyearids.length - i - 1) * 50).attr("y", height - 10)
          .attr("class", "text-button1")
          .attr("id", selectyearids[i]).style("opacity", i == 0 ? 1 : 0.5 )
          .attr("iv", i)
          .attr("text-anchor", "end")
          .attr("font-size", "10px")
          .text(selectyeartext[i])
          .on('mouseover', function(e){
                  
                  // determine which text-'button' is selected
                  var selectedNum = parseInt(d3.select(this)[0][0].attributes.iv.value);
  
                  // change opacities of text-'buttons'
                  d3.selectAll(".text-button1").style("opacity",0.5);
                  d3.select(this).style("opacity",1);
                  
                  selectyear = selectyearids[selectedNum];
                  
                  redraw(bigGraph, selectcutoff, selectyear);
  
            });
    }
  
 
    brush.on("brush", brushed);

    slider
      .call(brush.extent([2000000, 2000000]))
      .call(brush.event);

    
    redraw(bigGraph,selectcutoff,selectyear);
  
  });
  
});


function brushed() {
  var value = brush.extent()[0];

  if (d3.event.sourceEvent) { // not a programmatic event
    value = x.invert(d3.mouse(this)[1]);
    brush.extent([value, value]);
  }

  handle.attr("cy", x(value));
  
  selectcutoff = value;
  
  redraw(bigGraph,selectcutoff,selectyear);

}



function redraw(bigGraph, cutoff, year) {

  var currentNodes = force.nodes();
  
  var graph = {"nodes":[], "links":[]};
  var nodeList = {};
  var nlCount = 0;
  graph.links = $.map(bigGraph.links, function(v) {
    if (v[''+year] > cutoff) {
      if (!(v.source in nodeList)) { nodeList[v.source] = nlCount; nlCount += 1; };
      if (!(v.target in nodeList)) { nodeList[v.target] = nlCount; nlCount += 1; };
      return {"source": nodeList[v.source], "target": nodeList[v.target], "distance": v[''+year], "linkname": v.linkname};
    }
  }); 
  graph.nodes = $.map(bigGraph.nodes, function(v) {
    if (v.i in nodeList) {
      var current = -1;
      currentNodes.forEach(function(n,i){
        if (n.name == v.name) { current = i; }
      });
      if (current > -1) {
        return {"x": currentNodes[current].x, "y": currentNodes[current].y, "i": nodeList[v.i], "name": v.name, "countryname": v.countryname};
      } else {
        return {"x": v.x, "y": v.y, "i": nodeList[v.i], "name": v.name, "countryname": v.countryname};
      }
    }
  });
  graph.nodes.sort(compare);

  force
      .nodes(graph.nodes)
      .links(graph.links);
  

  var link = svg.selectAll(".linkg").selectAll(".link").data(graph.links,function(v){ return v.linkname; });

  link.enter()
    .append("line")
      .attr("class", "link")
      .style("opacity",1e-6)
      .transition()
        .duration(1500)
        .style("opacity",1);
  
  link.exit()
    .transition()
      .duration(500)
      .style("opacity",1e-6)
      .remove();

  var node = svg.selectAll(".nodeg").selectAll(".node").data(graph.nodes,function(v){ return v.name; });
  
  node.exit()
    .transition()
      .duration(500)
      .style("opacity",1e-6)
      .remove();

  var node2 = node.enter()
    .append("g")
      .attr("class", "node");

  node2.append("ellipse")
      .attr("cx", 0)
      .attr("cy", 0)
      .attr("rx", 16)
      .attr("ry", 8)
      .attr("title", function(d) { return d.countryname })
      .style("opacity",1e-6)
      .transition()
        .duration(1500)
        .style("opacity",1);

  node2.append("text")
      .attr("text-anchor", "middle")
      .attr("dy", ".35em")
      .text(function(d) { return d.name })
      .style("opacity",1e-6)
      .transition()
        .duration(1500)
        .style("opacity",1);

  force
      .linkDistance(function(l) { return 20 + 5 * Math.log(1.0 + 1000000000 / l.distance); })
      .start();

  force.on("tick", function() {
    
    link
      .attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });
      
    node
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  });

}

</script>

</body>
</html>
<!DOCTYPE html>

<html>

    <head>
        <title>Intro to WebGL with three.js</title>
    </head>

    <body>

        <div id="webgl-container"></div>

        <script src="//cdnjs.cloudflare.com/ajax/libs/three.js/r68/three.js"></script>
        <script src="scripts/app.js"></script>

    </body>

</html>
<!DOCTYPE html>
<html>
  <head>
    <title>Responsive map</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/3.15/themes/css/cartodb.css" />
  </head>
  <body>
    <div id="map"></div>
    
    <!-- include cartodb.js library -->
    <script src="http://libs.cartocdn.com/cartodb.js/v3/3.15/cartodb.js"></script>

    <script>
		
      function main() {
		  
		var bigmapheight = 650;
	  	var smallmapheight = 300;
	  	var mapbreakwidth = 720;
	  	var highzoom = 8;
	  	var lowzoom = 7;
	  	var initzoom;
		var vizjson = 'https://mediafin.cartodb.com/api/v2/viz/6a800846-5607-11e5-b2d0-0e4fddd5de28/viz.json';
		
		//Set initial mapheight, based on the calculated width of the map container
		if ($("#map").width() > mapbreakwidth) {
			initzoom = highzoom;
			$("#map").height(bigmapheight);
		}
		else {
			initzoom = lowzoom;
			$("#map").height(smallmapheight);
		};
		  
        var map = new L.Map('map', {
          center: [50.45,4.45],
          zoom: initzoom
        });
		  
        L.tileLayer('http://tile.stamen.com/toner/{z}/{x}/{y}.png', {
          attribution: 'Stamen'
        }).addTo(map);
		  
        cartodb.createLayer(map, vizjson)
            .addTo(map)
         .on('done', function(layer) {
           layer.setInteraction(true);
		  
          layer.on('error', function(err) {
            cartodb.log.log('error: ' + err);
          });	
        })
		.on('error', function() {
          cartodb.log.log("some error occurred");
        });
		  
		//Use Leaflets resize event to set new map height and zoom level
		map.on('resize', function(e) {
		  	if (e.newSize.x < mapbreakwidth) {
				map.setZoom(lowzoom);
				$("#map").css('height', smallmapheight);
			};
			  
			if (e.newSize.x > mapbreakwidth) {
				map.setZoom(highzoom);
				$("#map").css('height', bigmapheight);
				$("#map").css('height', bigmapheight);
			};
		  });
      }
      // you could use $(window).load(main);
      window.onload = main;
    </script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  fill: none;
  stroke: #000;
  stroke-width: .5px;
}

.land-boundary {
  stroke-width: 1px;
}

.county-boundary {
  stroke: #aaa;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script>

var width = 960,
    height = 500;

var path = d3.geo.path();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/us.json", function(error, topology) {
  if (error) throw error;

  svg.append("path")
      .datum(topojson.feature(topology, topology.objects.land))
      .attr("d", path)
      .attr("class", "land-boundary");

  svg.append("path")
      .datum(topojson.mesh(topology, topology.objects.counties, function(a, b) { return a !== b && (a.id / 1000 | 0) === (b.id / 1000 | 0); }))
      .attr("d", path)
      .attr("class", "county-boundary");

  svg.append("path")
      .datum(topojson.mesh(topology, topology.objects.states, function(a, b) { return a !== b; }))
      .attr("d", path)
      .attr("class", "state-boundary");
});

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var width = 960,
    height = 900,
    margin = 40,
    maxRadius = (height/2) - margin;

var formatDate = d3.time.format("%Y-%m-%d"),
  monthNameFormat = d3.time.format("%b");

var ticks = [-20,-10,0,10,20,30,40,50];

var x = d3.scale.linear()
  .domain([-20, 50])
  .range([120, maxRadius]);

var xAxis = d3.svg.axis()
  .scale(x).orient("left")
  .tickValues([-20,0,20,40])
  .tickFormat(function(d) { return d + "°C"; });

var r = d3.scale.linear()
  .domain([0,200])
  .range([0, maxRadius/4]);

var color = d3.scale.linear()
  .domain(ticks)
  .range(["#00375a","#1b6491","#52b7e7","#96d88c","#fbd65f","#e46c56","#9e3b2c"]);

var svg = d3.select('body').append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width/2 + "," + height/2 + ")");

d3.csv("dubai.csv", function(error, data) {

  data.forEach(function(d) {
    d["date"] = formatDate.parse(d["date"]);
    d["Min TemperatureC"] = +d["Min TemperatureC"];
    d["Max TemperatureC"] = +d["Max TemperatureC"];
    d["Mean TemperatureC"] = +d["Mean TemperatureC"];
    d["Precipitationmm"] = (d["Precipitationmm"] === "T") ? 0 : +d["Precipitationmm"];
  });

  var arc = d3.svg.arc()
    .startAngle(function(d) { return 0; })
    .endAngle(function(d) { return ((2 * Math.PI) / (data.length)); })
    .innerRadius(function(d) { return x(d["Min TemperatureC"]); })
    .outerRadius(function(d) { return x(d["Max TemperatureC"]); });

  var months = d3.map(data, function(d) {
    return monthNameFormat(d["date"]);
  }).keys();

  var monthTicks = svg.append("g")
    .attr("class","monthTicks");

  monthTicks.selectAll(".monthTick")
    .data(months)
   .enter().append("g")
    .attr("class","monthTick")
    .attr("transform", function(d, i) { return "rotate(" + (i * 360 / months.length) + ")"; });
 
  monthTicks.selectAll(".monthTick")
    .append("line")
    .attr("y1", -maxRadius - 5)
    .attr("y2", -maxRadius - 30)
    .style("stroke", "#d6d6d6")
    .style("stroke-width",2);

  monthTicks.selectAll(".monthTick").append("text")
    .attr("x", 8)
    .attr("y", -maxRadius - 15)
    .style("font-size",15)
    .style("fill","#d6d6d6")
    .style("font-family","monospace")
    .style("text-anchor", "begin")
    .text(function(d) { return d; });

  var tickCircles = svg.append("g")
    .attr("class","ticksCircle");
    
  tickCircles.selectAll("circle")
    .data(ticks)
   .enter().append("circle")
    .attr("r", function(d) {return x(d);})
    .style("fill", "none")
    .style("stroke", "#d6d6d6")
    .style("stroke-width", function(d,i) { return ((i & 1) === 0) ? 1 : 0.25; });

  var temperatures = svg.selectAll(".temperature")
    .data(data)
   .enter().append("g")
    .attr("class","temperature")
    .attr("transform", function(d, i) { return "rotate(" + (i * 360 / data.length) + ")"; });

  temperatures.append("path")
    .style("stroke", "white")
    .style("stroke-width",1.2)
    .style("fill", function(d) { return color(d["Mean TemperatureC"]); })
    .attr("d", arc);
    
  var precipitations = svg.selectAll(".precipitation")
    .data(data)
   .enter().append("g")
    .attr("class","precipitation")
    .attr("transform", function(d, i) { return "rotate(" + (i * 360 / data.length) + ")"; });

  precipitations.append("circle")
    .attr("cx",0)
    .attr("cy",function(d) { return -x(d["Mean TemperatureC"]); })
    .attr("r", function(d) { return r(d["Precipitationmm"]); })
    .style("opacity", .15)
    .style("fill", "#5c82b9");

  var legend = svg.append("g")
    .attr("class", "legend");

  legend.append("text")
    .attr("dy", ".35em")
    .style("font-size",70)
    .style("fill","#454545")
    .style("font-family","monospace")
    .style("text-anchor", "middle")
    .text("Dubai");

  svg.append("g")
    .attr("class", "x axis")
    .call(xAxis)
   .selectAll("text")
    .style("fill","#454545")
    .style("text-anchor","middle");

});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html>
<head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
<meta name="description" content="Parse CSV">
  <meta charset="utf-8">
  <title>JS Bin</title>
</head>
<body>

</body>
<script>
// from https://www.youtube.com/watch?v=iuA-gmvJ5n0&list=PL9yYRbwpkyktAZaphR2UfeYpgNGnIqjs9&index=10

function parseCSV(string, accessor) {
  
  if (!accessor) {
    accessor = function(d) { return d };
  };
  
  var lines = string.split("\n"),
      columnNames = lines[0].split(","),
      rows = lines.slice(1);
  return rows.map(function(row) {
      var entries = row.split(","),
          rowObject = {};
      
      columnNames.forEach(function(colName, i) {
        rowObject[colName] = entries[i];
      });
      return accessor(rowObject);
  });
  
}




iris_data = "sepal_length,sepal_width,petal_length,petal_width,class\n\
5.1,3.5,1.4,0.2,Iris-setosa\n\
4.9,3.0,1.4,0.2,Iris-setosa\n\
4.7,3.2,1.3,0.2,Iris-setosa\n\
4.6,3.1,1.5,0.2,Iris-setosa\n\
5.0,3.6,1.4,0.2,Iris-setosa\n\
5.4,3.9,1.7,0.4,Iris-setosa;"

data = parseCSV(iris_data, function(rowObject) {
  rowObject["sepal_length"] = +rowObject["sepal_length"];
  rowObject["sepal_width"] = +rowObject["sepal_width"];
  rowObject["petal_length"] = +rowObject["petal_length"];
  rowObject["petal_width"] = +rowObject["petal_width"];
  
  return rowObject;
})

d3Data = d3.csv.parse(iris_data)
console.log(data)

console.log("---------D3-----------")
console.log(d3Data)  
</script>
</html><!DOCTYPE html>
<html>
  <head>
    <title></title>
    <style>
body {
  margin: 0;
}
    </style>
  </head>
  <body>
<script type="x-shader/x-vertex" id="vertexshader">
  attribute float size;
  uniform float pointSize;
  uniform vec3 color;
  uniform float alpha;
  varying vec4 vColor;
  varying vec2 myPosition;
  varying float mySize;
  void main() {
    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
    gl_PointSize = size;
    mySize = size;
    gl_Position = projectionMatrix * mvPosition;
    vColor = vec4(color, alpha);
  }
</script>

<script type="x-shader/x-fragment" id="fragmentshader">
  varying vec4 vColor;
  varying vec2 myPosition;
  varying float mySize;
  void main() {
    float f = 0.5;
    float d = abs(distance(gl_PointCoord - f, vec2(0.0, 0.0)));
    float pixelD = (d + 0.5) * mySize;
    if(pixelD + 0.5 < mySize) {
      gl_FragColor = vec4(vColor.xyz, 0.9);
    } else if(pixelD < mySize) {
      gl_FragColor = vec4(vColor.xyz, 0.1);
    } else {
      discard;
    }
  }
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.3/d3.min.js" charset="utf-8"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js" charset="utf-8"></script>
<script>

'use strict'
var scene, camera, renderer;
var geometry, material, mesh;
var width = window.innerWidth, height = window.innerHeight
console.log(width, height)
scene = new THREE.Scene()
camera = new THREE.OrthographicCamera(width / - 2, width / 2, height / 2, height / - 2, 1, 10000)
scene.add(camera)
camera.position.z = 1000

// geometry = new THREE.BoxGeometry( 200, 200, 200 )
// material = new THREE.MeshBasicMaterial({color: 0xff0000})
// mesh = new THREE.Mesh(geometry, material)
// scene.add(mesh)

function uniforms(opts) {
  opts = opts || {}
  return {
    color: {
      type: 'c',
      value: new THREE.Color(0x3498db)
    },
    alpha: { type: 'f', value: 0.7 },
    pointSize: { type: 'f', value: 10 },
    shouldResize: { type: '1i', value: opts.shouldResize ? 1 : 0 }
  }
}

var particles = 1000
var mouseIdx = 200
var positions = new Float32Array(particles * 3)
var dx = 2
var norm = d3.random.normal(0, 100)
for(var i = 0; i < positions.length; i+=3) {
  var x = norm(), y = norm(), z = norm()
  if (i / 3 < particles / 3) x -= 0.5, y += 1, z -= 0.5
  else if (i / 3 < particles / 3 * 2) x += dx, y += dx, z += dx
  else x -= dx, y -= dx, z -= dx
  positions[i] = x, positions[i + 1] = y, positions[i + 2] = z
}
var sizes = new Float32Array(particles)
for(var i = 0; i < particles; i++) sizes[i] = Math.random() * 10 + 3

var attributes = {
  size: { type: 'f', value: [] }
}

var cloudMat = new THREE.ShaderMaterial({
    uniforms:       uniforms(),
    attributes:     attributes,
    vertexShader:   d3.select('#vertexshader').node().textContent,
    fragmentShader: d3.select('#fragmentshader').node().textContent,
    transparent:    true,
    setDepthTest: false,
    // blending: THREE.CustomBlending,
    // blendEquation: THREE.AddEquation,
    // blendSrc: THREE.SrcAlphaSaturate,
    // blendDst: THREE.OneMinusSrcAlphaFactor,
})

var cloudGeom = new THREE.BufferGeometry()
var posBuff = new THREE.BufferAttribute(positions, 3)
cloudGeom.addAttribute('position', posBuff)
cloudGeom.addAttribute('size', new THREE.BufferAttribute(sizes, 1))
cloudGeom.computeBoundingSphere()

var pointCloud = new THREE.PointCloud(cloudGeom, cloudMat)
scene.add(pointCloud)

renderer = new THREE.WebGLRenderer({alpha: true})
renderer.setSize(width, height)
document.body.appendChild(renderer.domElement)

var nodes = d3.range(particles).map(function(d) { return {} })
var mouseNode = { fixed: true }
nodes.push(mouseNode)

// mouseNode.fixed = true

var force = d3.layout.force()
  .nodes(nodes)
  .size([width, height])
  .charge(function(d, i) { return -sizes[i] || -500 })
  // .chargeDistance(10)
  .start()

var mousePosition = [0, 0]
d3.timer(function(d) {
  force.start()
  mouseNode.x = mousePosition[0], mouseNode.y = mousePosition[1]
  for(var i = 0; i + 1 < nodes.length; i++) {
    positions[i * 3] = nodes[i].x - width / 2
    positions[i * 3 + 1] = - (nodes[i].y - height / 2)
  }
  posBuff.needsUpdate = true // Important!
  renderer.render(scene, camera)
})

d3.select('canvas')
  .on('mousemove', updateMouse)
  .call(d3.behavior.drag().on('drag', updateMouse))

function updateMouse() {
  var p = d3.mouse(this)
  mousePosition = p
}

    </script>
  </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Sorting Elements</title>
		
        <!--<script type="text/javascript" src="../d3.v3.js"></script>-->
        <script type="text/javascript" src="http://d3js.org./d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 900)
						.attr("height", 450);

            //escala
            var escala=d3.scale.linear().range([0,700]);
            //fin escala
            
			d3.csv("integradosSecundarioComun.csv", function(data) {

				data.sort(function(a, b) {
					//return d3.descending(a.poli_3, b.poli_3);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					return d3.descending(+a.SecundarioComun, +b.SecundarioComun);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 18;
					})
					.attr("width", function(d) {
						return d.SecundarioComun * .12;
					})
					.attr("height", 15)
                    .attr("fill","#D8532B");
                
                //texto 
                
                var texts = svg.selectAll("text")
					.data(data)
					.enter()
					.append("text");

					texts.attr("x", function(d) {
						return (+d.SecundarioComun*.12+15);
						})
						.attr("y", function(d, i) {
							return i * 18+12;
						})
						.attr("fill","#BE4628")
						.style("font-family", "Lato")
                    	.style("font-size", "12px")
						.text(function(d) { return d.SecundarioComun+" alumnos en "+d.divPoliticaTerritorial;});


			});


		</script>

	</body>
</html><!DOCTYPE html>
<html>
<head>
  <title>Code School - 404 Error - The page you're looking for doesn't exist</title>
  <style type="text/css">
    body { background-color: #F7F7fF; }
    .logo { padding: 25px 0 35px; text-align: center; }
    a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;font-size:100%;vertical-align:baseline}html{line-height:1}ol,ul{list-style:none}table{border-collapse:collapse;border-spacing:0}caption,td,th{text-align:left;font-weight:400;vertical-align:middle}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}a img{border:none}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section,summary{display:block}.fof{-webkit-animation:fof-stars 4.75s 4.5s forwards ease-in-out;-moz-animation:fof-stars 4.75s 4.5s forwards ease-in-out;-ms-animation:fof-stars 4.75s 4.5s forwards ease-in-out;-o-animation:fof-stars 4.75s 4.5s forwards ease-in-out;animation:fof-stars 4.75s 4.5s forwards ease-in-out;background:#161c21 url(/images/errors/bg-404-stars.svg) center -300px repeat-x;-webkit-background-size:1117px 832px;-moz-background-size:1117px 832px;-o-background-size:1117px 832px;background-size:1117px 832px;height:700px;overflow:hidden;position:relative;width:100%}.fof b{display:block;position:absolute}.fof-inner{-webkit-animation:fof-inner 1.7s 6.4s forwards ease-in;-moz-animation:fof-inner 1.7s 6.4s forwards ease-in;-ms-animation:fof-inner 1.7s 6.4s forwards ease-in;-o-animation:fof-inner 1.7s 6.4s forwards ease-in;animation:fof-inner 1.7s 6.4s forwards ease-in;height:700px;left:50%;margin-left:-523px;position:absolute;top:0;width:1046px}.fof-ground{-webkit-animation:fof-scenery 2s 4.5s forwards ease-in;-moz-animation:fof-scenery 2s 4.5s forwards ease-in;-ms-animation:fof-scenery 2s 4.5s forwards ease-in;-o-animation:fof-scenery 2s 4.5s forwards ease-in;animation:fof-scenery 2s 4.5s forwards ease-in;height:700px;width:1046px}.fof-anchor{background:url(/images/errors/bg-404-anchor.svg) no-repeat}.fof-rocket{background:url(/images/errors/bg-404-rocket.svg) no-repeat}.fof-rope{background:url(/images/errors/bg-404-rope.svg) no-repeat}.fof-scenery{background:url(/images/errors/bg-404-scenery.svg) no-repeat}.fof-smoke{background:url(/images/errors/bg-404-smoke.svg) no-repeat}.fof-smoke2{background:url(/images/errors/bg-404-smoke2.svg) no-repeat}.fof-rope{-webkit-animation:fof-rope 2s 4.5s forwards cubic-bezier(0.52,0,.99,1);-moz-animation:fof-rope 2s 4.5s forwards cubic-bezier(0.52,0,.99,1);-ms-animation:fof-rope 2s 4.5s forwards cubic-bezier(0.52,0,.99,1);-o-animation:fof-rope 2s 4.5s forwards cubic-bezier(0.52,0,.99,1);animation:fof-rope 2s 4.5s forwards cubic-bezier(0.52,0,.99,1);-webkit-transform:rotate(26deg);-moz-transform:rotate(26deg);-ms-transform:rotate(26deg);-o-transform:rotate(26deg);transform:rotate(26deg);-webkit-transform-origin:left center;-moz-transform-origin:left center;-ms-transform-origin:left center;-o-transform-origin:left center;transform-origin:left center;height:5px;left:89px;top:20px;width:490px;z-index:-1}.fof-anchor{-webkit-animation:fof-anchor 2s 4.5s forwards ease-in;-moz-animation:fof-anchor 2s 4.5s forwards ease-in;-ms-animation:fof-anchor 2s 4.5s forwards ease-in;-o-animation:fof-anchor 2s 4.5s forwards ease-in;animation:fof-anchor 2s 4.5s forwards ease-in;-webkit-transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);-o-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:center bottom;-moz-transform-origin:center bottom;-ms-transform-origin:center bottom;-o-transform-origin:center bottom;transform-origin:center bottom;bottom:0;height:197px;left:50px;width:152px}.fof-scenery{bottom:0;height:358px;right:0;width:882px}.fof-fire{-webkit-animation:fof-show .01s 1s forwards,fof-thrust .25s 1s alternate 100 steps(2);-moz-animation:fof-show .01s 1s forwards,fof-thrust .25s 1s alternate 100 steps(2);-ms-animation:fof-show .01s 1s forwards,fof-thrust .25s 1s alternate 100 steps(2);-o-animation:fof-show .01s 1s forwards,fof-thrust .25s 1s alternate 100 steps(2);animation:fof-show .01s 1s forwards,fof-thrust .25s 1s alternate 100 steps(2);background:url(/images/errors/bg-404-fire.svg) no-repeat;-webkit-background-size:111px 110px;-moz-background-size:111px 110px;-o-background-size:111px 110px;background-size:111px 110px;bottom:113px;height:51px;left:469px;opacity:0;width:111px}.fof-rocket{bottom:75px;height:457px;left:412px;width:225px}.fof-smoke{-webkit-animation:fof-show 1s 1.5s forwards,fof-smoke .8s 3.9s forwards ease-in;-moz-animation:fof-show 1s 1.5s forwards,fof-smoke .8s 3.9s forwards ease-in;-ms-animation:fof-show 1s 1.5s forwards,fof-smoke .8s 3.9s forwards ease-in;-o-animation:fof-show 1s 1.5s forwards,fof-smoke .8s 3.9s forwards ease-in;animation:fof-show 1s 1.5s forwards,fof-smoke .8s 3.9s forwards ease-in;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0);bottom:27px;left:515px;height:127px;opacity:0;width:232px;z-index:100}.fof-smoke2{-webkit-animation:fof-show 1s 1.75s forwards,fof-smoke2 .8s 3.9s forwards ease-in;-moz-animation:fof-show 1s 1.75s forwards,fof-smoke2 .8s 3.9s forwards ease-in;-ms-animation:fof-show 1s 1.75s forwards,fof-smoke2 .8s 3.9s forwards ease-in;-o-animation:fof-show 1s 1.75s forwards,fof-smoke2 .8s 3.9s forwards ease-in;animation:fof-show 1s 1.75s forwards,fof-smoke2 .8s 3.9s forwards ease-in;-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0);bottom:27px;height:128px;left:305px;opacity:0;width:224px;z-index:100}.fof-text{-webkit-animation:fof-text 8.75s forwards;-moz-animation:fof-text 8.75s forwards;-ms-animation:fof-text 8.75s forwards;-o-animation:fof-text 8.75s forwards;animation:fof-text 8.75s forwards;color:#fff;font-family:"Helvetica Neue",Helvetica,sans-serif;font-size:22px;padding-top:25px;text-align:center;-webkit-font-smoothing:antialiased}.fof-text h1{color:#b54322;font-size:70px;font-weight:700;margin-bottom:10px}.fof-text a{color:#238b9b;text-decoration:none}.fof-text a:focus,.fof-text a:hover{color:#2cb0c5;text-decoration:underline}@-webkit-keyframes fof-anchor{to{-webkit-transform:rotate(10deg);transform:rotate(10deg)}}@-moz-keyframes fof-anchor{to{-moz-transform:rotate(10deg);transform:rotate(10deg)}}@keyframes fof-anchor{to{-webkit-transform:rotate(10deg);-moz-transform:rotate(10deg);-ms-transform:rotate(10deg);-o-transform:rotate(10deg);transform:rotate(10deg)}}@-webkit-keyframes fof-inner{to{-webkit-transform:translateY(700px);transform:translateY(700px)}}@-moz-keyframes fof-inner{to{-moz-transform:translateY(700px);transform:translateY(700px)}}@keyframes fof-inner{to{-webkit-transform:translateY(700px);-moz-transform:translateY(700px);-ms-transform:translateY(700px);-o-transform:translateY(700px);transform:translateY(700px)}}@-webkit-keyframes fof-rope{to{-webkit-transform:rotate(-64deg);transform:rotate(-64deg)}}@-moz-keyframes fof-rope{to{-moz-transform:rotate(-64deg);transform:rotate(-64deg)}}@keyframes fof-rope{to{-webkit-transform:rotate(-64deg);-moz-transform:rotate(-64deg);-ms-transform:rotate(-64deg);-o-transform:rotate(-64deg);transform:rotate(-64deg)}}@-webkit-keyframes fof-scenery{to{-webkit-transform:translateY(320px);transform:translateY(320px)}}@-moz-keyframes fof-scenery{to{-moz-transform:translateY(320px);transform:translateY(320px)}}@keyframes fof-scenery{to{-webkit-transform:translateY(320px);-moz-transform:translateY(320px);-ms-transform:translateY(320px);-o-transform:translateY(320px);transform:translateY(320px)}}@-webkit-keyframes fof-show{to{opacity:1}}@-moz-keyframes fof-show{to{opacity:1}}@keyframes fof-show{to{opacity:1}}@-webkit-keyframes fof-smoke{from{opacity:1}to{-webkit-transform:translateX(140px);transform:translateX(140px);opacity:0}}@-moz-keyframes fof-smoke{from{opacity:1}to{-moz-transform:translateX(140px);transform:translateX(140px);opacity:0}}@keyframes fof-smoke{from{opacity:1}to{-webkit-transform:translateX(140px);-moz-transform:translateX(140px);-ms-transform:translateX(140px);-o-transform:translateX(140px);transform:translateX(140px);opacity:0}}@-webkit-keyframes fof-smoke2{from{opacity:1}to{-webkit-transform:translateX(-140px);transform:translateX(-140px);opacity:0}}@-moz-keyframes fof-smoke2{from{opacity:1}to{-moz-transform:translateX(-140px);transform:translateX(-140px);opacity:0}}@keyframes fof-smoke2{from{opacity:1}to{-webkit-transform:translateX(-140px);-moz-transform:translateX(-140px);-ms-transform:translateX(-140px);-o-transform:translateX(-140px);transform:translateX(-140px);opacity:0}}@-webkit-keyframes fof-stars{to{background-position:center 0}}@-moz-keyframes fof-stars{to{background-position:center 0}}@keyframes fof-stars{to{background-position:center 0}}@-webkit-keyframes fof-text{0%{opacity:0}94%{opacity:0;padding-top:285px}100%{opacity:1;padding-top:285px}}@-moz-keyframes fof-text{0%{opacity:0}94%{opacity:0;padding-top:285px}100%{opacity:1;padding-top:285px}}@keyframes fof-text{0%{opacity:0}94%{opacity:0;padding-top:285px}100%{opacity:1;padding-top:285px}}@-webkit-keyframes fof-thrust{from{background-position:0 0}to{background-position:0 -124px}}@-moz-keyframes fof-thrust{from{background-position:0 0}to{background-position:0 -124px}}@keyframes fof-thrust{from{background-position:0 0}to{background-position:0 -124px}}
  </style>

  <script type="text/javascript">
    if (window.location.hostname == 'www.codeschool.com') {
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-9740749-9']);
      _gaq.push(['_trackPageview', "/errors/404?page=" + document.location.pathname + "&from=" + document.referrer]);

      (function() {
       var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
       ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
       var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
       })();
    }
   </script>
</head>

<body>
  <!-- This file lives in public/404.html -->
  <div class="logo">
    <a href="/">
      <img src="/images/errors/logo.svg" alt="Code School - Learn by Doing" width="288" height="47" />
    </a>
  </div>
  <div class="fof">
    <div class="fof-inner">
      <b class="fof-ground">
        <b class="fof-anchor">
          <b class="fof-rope"></b>
        </b>
        <b class="fof-scenery"></b>
        <b class="fof-smoke"></b>
        <b class="fof-smoke2"></b>
      </b>
      <b class="fof-fire"></b>
      <b class="fof-rocket"></b>
    </div>
    <div class="fof-text">
      <h1>404</h1>
      <p>Houston, we have a problem. <a href="/">Head back home.</a>
    </div>
  </div>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
    body {
        margin: 0;
    }
    .map {
        position: relative;
        overflow: hidden;
    }
    .layerWater,
    .layerRoads,
    .layerBuildings {
        position: absolute;
    }
    .tileWater,
    .tileRoad,
    .tileBuilding {
        position: absolute;
        width: 256px;
        height: 256px;
    }
    .tileWater path {
        stroke: none;
    }
    .tileRoad path {
        fill: none;
        stroke: #ccb;
        stroke-linejoin: round;
        stroke-linecap: round;
    }
    .tileRoad .major_road {
        stroke: #776;
    }
    .tileRoad .minor_road {
        stroke: #ccb;
    }
    .tileRoad .highway {
        stroke: #f39;
        stroke-width: 1.5px;
    }
    .tileRoad .rail {
        stroke: #7de;
    }
    .info {
        position: absolute;
        bottom: 10px;
        left: 10px;
        font-family: sans-serif;
    }
    .tileWater .ocean {
        stroke: none;
        fill: #ededed;
    }
    .tileWater .lake,
    .tileWater .reservoir,
    .tileWater .riverbank,
    .tileWater .water,
    .tileWater .basin,
    .tileWater .dam {
        fill: #deebf7;
    }
</style>

<body>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://d3js.org/d3.geo.tile.v0.min.js"></script>
    <script>
        var p = 2,
            drawBuildings = true;
        var width = Math.max(960, window.innerWidth),
            height = Math.max(500, window.innerHeight),
            prefix = prefixMatch(["webkit", "ms", "Moz", "O"]);

        var tile = d3.geo.tile()
            .size([width, height]);

        var projection = d3.geo.mercator()
            .scale((1 << 21) / p / Math.PI)
            .translate([-width / 2, -height / 2]); // just temporary

        var tileProjection = d3.geo.mercator();

        var tilePath = d3.geo.path()
            .projection(tileProjection);

        var zoom = d3.behavior.zoom()
            .scale(projection.scale() * p * Math.PI)
            .scaleExtent([1 << 200, 1 << 25])
            .translate(projection([-2.1043, 49.1836, ]).map(function (x) {
                return -x;
            }))
            .on("zoom", zoomed);

        var map = d3.select("body").append("div")
            .attr("class", "map")
            .style("width", width + "px")
            .style("height", height + "px")
            .call(zoom)
            .on("mousemove", mousemoved);

        var layerWater = map.append("div")
            .attr("class", "layerWater");

        var layerRoads = map.append("div")
            .attr("class", "layerRoads");

        var layerBuildings = map.append("div")
            .attr("class", "layerBuildings");

        var info = map.append("div")
            .attr("class", "info");

        zoomed();

        function zoomed() {
            var tiles = tile
                .scale(zoom.scale())
                .translate(zoom.translate())
                ();

            projection
                .scale(zoom.scale() / p / Math.PI)
                .translate(zoom.translate());

            var imageWater = layerWater
                .style(prefix + "transform", matrix3d(tiles.scale, tiles.translate))
                .selectAll(".tileWater")
                .data(tiles, function (d) {
                    return d;
                });

            imageWater.exit()
                .each(function (d) {
                    this._xhr.abort();
                })
                .remove();

            imageWater.enter().append("svg")
                .attr("class", "tileWater")
                .style("left", function (d) {
                    return d[0] * 256 + "px";
                })
                .style("top", function (d) {
                    return d[1] * 256 + "px";
                })
                .each(function (d) {
                    var svg = d3.select(this),
                        openStreetMapType = 'vectiles-water-areas', //'vectiles-land-usages', //'vectiles-buildings', //'vectiles-highroad'
                        //                        url = "http://" + ["a", "b", "c"][(d[0] * 31 + d[1]) % 3] + ".tile.openstreetmap.us/vectiles-highroad/" + d[2] + "/" + d[0] + "/" + d[1] + ".json";
                        url = "http://" + ["a", "b", "c"][(d[0] * 31 + d[1]) % 3] + ".tile.openstreetmap.us/" + openStreetMapType + "/" + d[2] + "/" + d[0] + "/" + d[1] + ".json";
                    this._xhr = d3.json(url, function (error, json) {
                        var k = Math.pow(2, d[2]) * 256; // size of the world in pixels

                        tilePath.projection()
                            .translate([k / 2 - d[0] * 256, k / 2 - d[1] * 256]) // [0°,0°] in pixels
                        .scale(k / 2 / Math.PI);

                        svg.selectAll("path")
                            .data(json.features.sort(function (a, b) {
                                return a.properties.sort_key - b.properties.sort_key;
                            }))
                            .enter().append("path")
                            .attr("class", function (d) {
                                return d.properties.kind;
                            })
                            .attr("d", tilePath);
                    });
                });


            var imageRoads = layerRoads
                .style(prefix + "transform", matrix3d(tiles.scale, tiles.translate))
                .selectAll(".tileRoad")
                .data(tiles, function (d) {
                    return d;
                });

            imageRoads.exit()
                .each(function (d) {
                    this._xhr.abort();
                })
                .remove();

            imageRoads.enter().append("svg")
                .attr("class", "tileRoad")
                .style("left", function (d) {
                    return d[0] * 256 + "px";
                })
                .style("top", function (d) {
                    return d[1] * 256 + "px";
                })
                .each(function (d) {
                    var svg = d3.select(this),
                        openStreetMapType = 'vectiles-highroad',
                        //                        url = "http://" + ["a", "b", "c"][(d[0] * 31 + d[1]) % 3] + ".tile.openstreetmap.us/vectiles-highroad/" + d[2] + "/" + d[0] + "/" + d[1] + ".json";
                        url = "http://" + ["a", "b", "c"][(d[0] * 31 + d[1]) % 3] + ".tile.openstreetmap.us/" + openStreetMapType + "/" + d[2] + "/" + d[0] + "/" + d[1] + ".json";
                    this._xhr = d3.json(url, function (error, json) {
                        var k = Math.pow(2, d[2]) * 256; // size of the world in pixels

                        tilePath.projection()
                            .translate([k / 2 - d[0] * 256, k / 2 - d[1] * 256]) // [0°,0°] in pixels
                        .scale(k / 2 / Math.PI);

                        svg.selectAll("path")
                            .data(json.features.sort(function (a, b) {
                                return a.properties.sort_key - b.properties.sort_key;
                            }))
                            .enter().append("path")
                            .attr("class", function (d) {
                                return d.properties.kind;
                            })
                            .attr("d", tilePath);
                    });
                });

            if (drawBuildings) {
                var imageBuildings = layerBuildings
                    .style(prefix + "transform", matrix3d(tiles.scale, tiles.translate))
                    .selectAll(".tileBuilding")
                    .data(tiles, function (d) {
                        return d;
                    });

                imageBuildings.exit()
                    .each(function (d) {
                        this._xhr.abort();
                    })
                    .remove();

                imageBuildings.enter().append("svg")
                    .attr("class", "tileBuilding")
                    .style("left", function (d) {
                        return d[0] * 256 + "px";
                    })
                    .style("top", function (d) {
                        return d[1] * 256 + "px";
                    })
                    .each(function (d) {
                        var svg = d3.select(this),
                            openStreetMapType = 'vectiles-buildings',
                            //                        url = "http://" + ["a", "b", "c"][(d[0] * 31 + d[1]) % 3] + ".tile.openstreetmap.us/vectiles-highroad/" + d[2] + "/" + d[0] + "/" + d[1] + ".json";
                            url = "http://" + ["a", "b", "c"][(d[0] * 31 + d[1]) % 3] + ".tile.openstreetmap.us/" + openStreetMapType + "/" + d[2] + "/" + d[0] + "/" + d[1] + ".json";
                        this._xhr = d3.json(url, function (error, json) {
                            var k = Math.pow(2, d[2]) * 256; // size of the world in pixels

                            tilePath.projection()
                                .translate([k / 2 - d[0] * 256, k / 2 - d[1] * 256]) // [0°,0°] in pixels
                            .scale(k / 2 / Math.PI);

                            svg.selectAll("path")
                                .data(json.features.sort(function (a, b) {
                                    return a.properties.sort_key - b.properties.sort_key;
                                }))
                                .enter().append("path")
                                .attr("class", function (d) {
                                    return d.properties.kind;
                                })
                                .attr("d", tilePath);
                        });
                    });
            }
        }



        function mousemoved() {
            info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));
        }

        function matrix3d(scale, translate) {
            var k = scale / 256,
                r = scale % 1 ? Number : Math.round;
            return "matrix3d(" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1] + ")";
        }

        function prefixMatch(p) {
            var i = -1,
                n = p.length,
                s = document.body.style;
            while (++i < n)
                if (p[i] + "Transform" in s) return "-" + p[i].toLowerCase() + "-";
            return "";
        }

        function formatLocation(p, k) {
            var format = d3.format("." + Math.floor(Math.log(k) / 2 - 2) + "f");
            return (p[1] < 0 ? format(-p[1]) + "°S" : format(p[1]) + "°N") + " " + (p[0] < 0 ? format(-p[0]) + "°W" : format(p[0]) + "°E");
        }
    </script><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Fun with D3, SVG and a CSV file</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>
	<body>

		<svg width="500" height="600">

			<circle cx="250" cy="250" r="200" stroke="black" stroke-width="3" fill="white" />
			<polygon points="250,190 220,310 280,310" style="fill:lime;stroke:black;stroke-width:1" />
			<ellipse cx="170" cy="150" rx="60" ry="20" style="fill:yellow;stroke:black;stroke-width:1" />
			<ellipse cx="330" cy="150" rx="60" ry="20" style="fill:yellow;stroke:black;stroke-width:1" />
			<path d="M 100 300 q 150 150 300 0" stroke="red" stroke-width="3" fill="none" />
			<text fill="charcoal" font-size="16" font-weight="bold" font-family="Helvetica">
				<tspan x="180" y="500">Liked the smiley?</tspan>
				<tspan x="50" y="530">Now, open the browser's console to see the CSV data!</tspan>
			</text>

		</svg>

		<script type="text/javascript">

			// logging the contents of the CSV file to the console,
			// into an array of JSON objects
			d3.csv("co2_emissions.csv", function(data){
				console.log(data);
			});

		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  </head>

  <body>
    <style>
      path.link {
        fill: none;
        stroke-width: 3px;
      }

      .node:not(:hover) .nodetext {
        display: none;
      }

      div.tooltip {
        position: absolute;
        text-align: center;
        padding: 6px;
        font: 13px sans-serif;
        color: white;
        background-color: black;
        border-radius: 5px;
        pointer-events: none;
      }
    </style>

    <script>
      var width = 960;
      var height = 800;
      var maxNodeSize = 50;
      var root;

      var force = d3.layout.force(); 

      var tooltip = d3.select('body').append('div')
        .attr('class', 'tooltip')
        .style('opacity', 0);

      var vis = d3.select('body').append('svg')
        .attr('width', width)
        .attr('height', height);

      d3.selection.prototype.moveToBack = function() { 
        return this.each(function() { 
          var firstChild = this.parentNode.firstChild; 
          if (firstChild) { 
            this.parentNode.insertBefore(this, firstChild); 
          } 
        }); 
      };

      d3.json('data.json', function(json) {
        root = json;
        root.fixed = true;
        root.x = width / 2;
        root.y = height / 4;

        var defs = vis.insert('svg:defs')
          .data(['end']);

        defs.enter().append('svg:path')
          .attr('d', 'M0,-5L10,0L0,5');
 
        update();
      });

      function update() {
        var nodes = flatten(root);
        var links = d3.layout.tree().links(nodes);

        var path = vis.selectAll('path.link')
          .data(links, function(d) {
            return d.target.id;
          });

        path.enter().insert('svg:path')
          .attr('class', 'link')
          .attr('marker-end', 'url(#end)')
          .style('stroke', '#eee');

        path.exit().remove();

        force.nodes(nodes)
          .links(links)
          .gravity(0.05)
          .charge(-1500)
          .linkDistance(100)
          .friction(0.5)
          .linkStrength(function(l, i) {return 1; })
          .size([width, height])
          .on('tick', tick)
          .start();

        var defs = vis.append('defs');

        var clipPath = defs.append('clipPath')
          .attr('id', 'clip-circle')
          .append('circle')
          .attr('r', 25);

        var filter = defs.append('filter')
          .attr('id', 'drop-shadow')
          .attr('height', '130%');

        filter.append('feGaussianBlur')
          .attr('in', 'SourceAlpha')
          .attr('stdDeviation', 3)
          .attr('result', 'blur');

        filter.append('feOffset')
          .attr('in', 'blur')
          .attr('result', 'offsetBlur');

        filter.append("feFlood")
          .attr("in", "offsetBlur")
          .attr("flood-color",'red')
          .attr("flood-opacity", "1")
          .attr("result", "offsetColor");

        filter.append("feComposite")
          .attr("in", "offsetColor")
          .attr("in2", "offsetBlur")
          .attr("operator", "in")
          .attr("result", "offsetBlur");

        var feMerge = filter.append('feMerge');

        feMerge.append('feMergeNode')
          .attr('in', 'offsetBlur')
        feMerge.append('feMergeNode')
          .attr('in', 'SourceGraphic');

        var node = vis.selectAll('g.node')
          .data(nodes, function(d) {
            return d.customerId;
          });

        var nodeEnter = node.enter().append('svg:g')
          .attr('class', 'node')
          .attr('transform', function(d) {
            return "translate(" + d.x + "," + d.y + ")";
          })
          .attr('filter', 'url(#drop-shadow)')
          .on('mouseover', function(d) {
            tooltip.transition()
              .duration(200)
              .style('opacity', 0.75);
            tooltip.html(d.email)
              .style('left', (d3.event.pageX - 50) + 'px')
              .style('top', (d3.event.pageY - 50) + 'px');
            d.scale = 1.5;
            tick();
          })
          .on('mouseout', function(d) {
            tooltip.transition()
              .duration(200)
              .style('opacity', 0);
            d.scale = 1;
            tick();
          })
          .on('click', click)
          .call(force.drag);

        var images = nodeEnter.append('svg:image')
          .attr('xlink:href',  function(d) {
            return d.avatarUrl;
          })
          .attr('x', function(d) {
            return -25;
          })
          .attr('y', function(d) {
            return -25;
          })
          .attr('height', 50)
          .attr('width', 50)
          .attr('clip-path', 'url(#clip-circle)');

        node.exit().remove();

        path = vis.selectAll('path.link');
        node = vis.selectAll('g.node');

        function tick() {
          path.attr('d', function(d) {
            var dx = d.target.x - d.source.x;
            var dy = d.target.y - d.source.y;
            var dr = Math.sqrt(dx * dx + dy * dy);
            return 'M' + d.source.x + ','
              + d.source.y
              + 'A' + dr + ','
              + dr + ' 0 0,1 '
              + d.target.x + ','
              + d.target.y;
          });
          node.attr('transform', nodeTransform);    
        }
        path.moveToBack();
      }

      function nodeTransform(d) {
        if (!d.scale) {
          d.scale = 1;
        }
        d.x =  Math.max(maxNodeSize, Math.min(width - (d.imgwidth / 2 || 16), d.x));
        d.y =  Math.max(maxNodeSize, Math.min(height - (d.imgheight / 2 || 16), d.y));
        return "translate(" + d.x + "," + d.y + ")scale(" + d.scale + ")";
      }

      function click(d) {
        if (d3.event.defaultPrevented) {
          return;
        }
        if (d.children) {
          d._children = d.children;
          d.children = null;
        } else {
          d.children = d._children;
          d._children = null;
        }
        update();
      }

      function flatten(root) {
        var nodes = []; 
        var i = 0;

        function recurse(node) {
          if (node.children) {
            node.children.forEach(recurse);
          }
          if (!node.id) {
            node.id = ++i;
          }
          nodes.push(node);
        }
        recurse(root);
        return nodes;
      }
    </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>HeroScore Top100 | Week 3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>
	<body>

		<p><font face= "arial" font size= "3">
		HeroScore is a new feature of the social media website for the poker world www.rankinghero.com. <br>
		It is a meta-ranking system for the poker world. It employs sophisticated algorithms to calculate the overall influence and prestige that a particular player has within the community. Here are displayed the TOP 100 poker players with the highest HeroScore.
		</p>

		<script type="text/javascript">		

		var svg = d3.select("body")
						.append("svg")
						.attr("width", 800)
						.attr("height", 1500);

	
			//Load in contents of CSV file
			d3.csv("DataHeroscoreTop100.csv", function(data) {




		var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return d.HeroScoreTotal/20;
					})
					.attr("height", 8)
					.append("title")
					.text(function(d) {
						return d.Hero + "'s HeroScore is " + d.HeroScoreTotal + " (" + d.Country + ")";
					});
				//Now CSV contents have been transformed into
				//an array of JSON objects.

				//Log 'data' to the console, for verification.
				console.log(data);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <title>Multiple Bar Charts showcasing various scale methods and data offset-ing technique</title>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    <!--<script type="text/javascript" src="../../../../js/d3/d3.latest.js"></script>-->
  <style>
circle {
  stroke: #fff;
  stroke-width: 1.5px;
}

body, p {
  font: 12px sans-serif;
}

text {
  font: 10px sans-serif;
}
  </style>
  </head>
  <body>
  <p>The list of HTML5 input types (+ sample for each, as created by D3.JS):</p>

  <ul id="input-types"></ul>

    <p>Plus a lone 'input type=range' one:</p>
  <!--
    Safari 5 has a bug: this <input> renders correctly, while the D3-generated one at
    the end has the slider positioned at the default value '50' despite 'value="0"'
    being set and visible with 'inspect element'.  :-(

  <input type="range" name="lone-ranger1" min="0" max="1000" value="0"  style="width: 800px;">
  -->
  <script type="text/javascript">

var input_types = [
  'color',
  'date',
  'datetime',
  'datetime-local',
  'email',
  'month',
  'number',
  'range',
  'search',
  'tel',
  'time',
  'url',
  'week'
];

// create the UL list of types, id-ing each <LI> so we can then d3.select those later for the real test
var ul = d3.select("ul#input-types") // this one exists, and is to be parent of...
    .selectAll('li')       // ... these, which don't exist yet, but will once ...
      .data(input_types)     // ... data[] is used to determine how many there must be ...
      .enter()                 // ... and we pick the set of 'not-yet-existing' elements corresponding
        .append('li');     // ... to one(1) data[i] item each

  ul.attr('id', function(d) {
      return 'inp-item-' + d;
    })
    .append('p')
      .text(function(d) {
        return 'type="' + d + '"';
      });
  ul.append('input')
    .attr('type', String);      // implicit   function(d, i) { return ''+d; }

/*
    <input type="range" name="lone-ranger" min="0" max="1000" value="0" onchange="... show value ..." style="width: 800px;">

    first 4 lines have same effect as these (in this context, as data[] isn't used anywhere, really):

      d3.select('body')
        .append('input')
          .attr('type', 'range')
*/
d3.select('body')
  .data(['range'])
    .append('input')
      .attr('type', String)      // implicit   function(d, i) { return ''+d; }
      .attr('name', 'lone-ranger')
      .attr('value', 400)
      .attr('min', 0)
      .attr('max', 1000)
      .attr('style', 'width: 800px;')
      .on('change', function(d, i) {
        // 'this' is the node itself
        var pa = d3.select(this.parentNode);
        var ranger_value = +this.value; // identical to    +d3.select(this).node().value

        // only create node when it's not there yet:
        var pn = pa.selectAll('p#display-value')
            /*
          .data([ranger_value])   // when you don't use data(), you can't .enter().append() !
          .enter()
            */
          .enter();
            pn.each(function(d, i) {
              var sel = d3.select(this);
              if (!d)
              {
                sel.append('span')
                  .attr('id', 'display-value');
              }
            });

        // always update the value shown:
        pn = pa.select('span#display-value');

          pn.text(function() {
            return 'value = ' + ranger_value;
          });
      });

  </script>

  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">

<style>
#conter{
	position: absolute;
	color: white;
	font-family: monospace;
}

body{
	background-color: rgb(38, 38, 38);
}

path{
	stroke: white;
	stroke-width: 11px;
	fill: none;
}

</style>

<body>
	<div id='conter'></div>
</body>

<script src="/1wheel/raw/67b47524ed8ed829d021/d3-3.5.5.js"></script>

<script>

var width = 960,
		height = 500,
		maxR = 200,
		periods = 8,
		n = 480,
		cycle = n/periods

var svg = d3.select('body')
	.append('svg')
		.attr({height: height, width: width})
	.append('g')
		.attr('transform', 'translate(' + [width/2, height/2] + ')')

svg.append('path')
// svg.append('path')

var toAngle = d3.scale.linear().domain([0, n/periods]).range([0, Math.PI*2])
var toDist  = d3.scale.linear().domain([0, n]).range([0, maxR])

var ticks = d3.range(n)
var pathA = []
var pathB = []

d3.timer(function(t){
	var s = t/5
	var offset = s % cycle
	ticks.forEach(function(i){

		var θ = toAngle(i +offset)

		// var distOff = 
		var dist = toDist(i) + Math.sin(s/cycle)*maxR/periods*(i/n)

		pathA[i] = [Math.cos(θ)*dist, Math.sin(θ)*dist]
	})

	svg.selectAll('path').data([pathA, pathB]).attr('d', pointsToPath)

	d3.select('#conter').text([offset, Math.sin(s/cycle)*10].map(Math.round))
})


function pointsToPath(array){
	return 'M' + array.join('L')
}

</script><!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <!--<script src="../lib/d3.js"></script>-->
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="hermite.js"></script>
    <style>
        .panel {
            fill: black;
        }

        .controls {
            position: absolute;
        }

        canvas {
            margin-top: 40px;
            float: left;
        }

        #imageLoader, .slider, .count {
            float: left;
        }

        .slider {
            width: 400px;
        }

        #base-image, #phosphene-image, #downsampled-image {
            width: 400px;
        }
    </style>
</head>
<body>
<div class="controls">
    <input type="file" id="imageLoader" name="imageLoader"></input>
    <input class="slider" type="range" min="8" max="32" value="8" step="1">
    <div class="count"></div>
</div>
<canvas id="base-image"></canvas>
<canvas id="downsampled-image"></canvas>
<canvas id="phosphene-image"></canvas>
<div class="container"></div>

<script>
    var outputW = 400;

    var hermite = Hermite.init('hermite-worker.js');

    var imgLoader = document.getElementById('imageLoader');
    imgLoader.addEventListener('change', handleImage, false);

    var baseCanvas = document.getElementById('base-image');
    var baseCtx = baseCanvas.getContext('2d');

    var resizedCanvas = document.getElementById('downsampled-image');
    var resizedCtx = resizedCanvas.getContext('2d');

    var phospheneCanvas = document.getElementById('phosphene-image');
    var phospheneCtx = phospheneCanvas.getContext('2d');

    var root = d3.select('.container').append('svg');
    var panel = root.append('rect').classed('panel', true);

    root.append('defs').append('filter')
        .attr({
            id: 'f1',
            x: 0,
            y: 0
        })
        .append('feGaussianBlur')
        .attr({
            in: 'SourceGraphic',
            stdDeviation: 2
        });

    var imgData, img;

    d3.select('.slider').on('input', function(d){
        buildDownsampledImg(this.value);
        buildGrid(this.value);
    });

    function handleImage(e){
        var reader = new FileReader();
        reader.onload = function(event){
            img = new Image;
            img.onload = function(){
                buildBaseImg();
                buildDownsampledImg(8);
                buildGrid(8);
            };
            img.src = event.target.result;
        };
        reader.readAsDataURL(e.target.files[0]);
    }

    function buildBaseImg(){
        var imgW = img.width;
        var imgH = img.height;

        baseCanvas.width = imgW;
        baseCanvas.height = imgH;
        baseCtx.clearRect(0, 0, imgW, imgH);

        baseCtx.drawImage(img, 0, 0, imgW, imgH);
        imgData = baseCtx.getImageData(0, 0, imgW, imgH).data;
    }

    function buildDownsampledImg(outputResolution){
        var imgW = outputResolution;
        var imgH = imgW * img.height / img.width;

        resizedCtx.clearRect(0, 0, resizedCanvas.width, resizedCanvas.height);
        resizedCanvas.width = imgW;
        resizedCanvas.height = imgH;

        resizedCtx.drawImage(img, 0, 0, imgW, imgH);
    }

    function buildGrid(outputResolution){
        d3.select('.count').text(outputResolution * outputResolution + ' phosphenes');

        var imgW = outputResolution;
        var imgH = imgW * img.height / img.width;

        phospheneCanvas.width = img.width;
        phospheneCanvas.height = img.height ;
        phospheneCtx.drawImage(img, 0, 0, img.width, img.height);

        hermite.resize({
            source: phospheneCanvas,
            width: imgW,
            height: imgH
        }, function(output) {

            imgData = phospheneCtx.getImageData(0, 0, imgW, imgH).data;

            var data = [];
            var dataIdx = -1;

            var r, g, b, gray;
            for(var i = 0; i < imgData.length / 4; i++){
                if(i % imgW === 0){
                    dataIdx++;
                    data.push([]);
                }
                r = imgData[i*4];
                g = imgData[i*4+1];
                b = imgData[i*4+2];
                gray = r*0.2126 + g*0.7152 + b*0.0722;
                data[dataIdx].push(gray);
            }
            buildPhosphenes(data, imgH, imgW);
        });
    }

    function buildPhosphenes(data, imgH, imgW){
        var outputH = outputW * imgH / imgW;
        var cellSize = outputW / imgW;
        root.attr({width: outputW, height: outputH});
        panel.attr({width: outputW, height: outputH});

        var rowGroup = root.selectAll('g.row')
            .data(data);
        rowGroup.enter().append('g')
            .classed('row', true)
            .attr({
                transform: function(d, i){
                    var y = cellSize * i;
                    var x = 0;
                    if(i % 2 === 0){
                        x += cellSize / 2;
                    }
                    return 'translate(' + [x, y] + ')';
                }
            });
        rowGroup
            .attr({
                transform: function(d, i){
                    var y = cellSize * i;
                    var x = 0;
                    if(i % 2 === 0){
                        x += cellSize / 4;
                    }
                    else{
                        x -= cellSize / 4;
                    }
                    return 'translate(' + [x, y] + ')';
                }
            });
        rowGroup.exit().remove();

        var cells = rowGroup.selectAll('circle.cell')
            .data(function(d, i){
                return d;
            });
        cells.enter().append('circle')
            .classed('cell', true);
        cells.attr({
            r: (cellSize / 2) * 0.9,
            fill: function(d){
                return d3.rgb(d, d, d).toString();
            },
            filter: 'url(#f1)',
            cy: cellSize / 2,
            cx: function(d, i){
                return cellSize * i + cellSize / 2;
            }
        });
        cells.exit().remove();
    }

</script>
</body>
</html>Not Found<!DOCTYPE html>
<html>
  <head>
    <title>Orbit</title>
    <meta charset="utf-8" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  </head>
  <body>

    <div id="orbit"></div>

    <script>

    // The data from each of the planets that we are trying to work with
    var planets = [
          { name:"Mercury", color:"brown", d:30, speed:18, r:2, phi0:90},
          { name: "Venus", color: "tan", d:50, speed: 15, r:4, phi0:90},
          { name: "Earth", color: "#009999", d:65, speed: 13, r:6, phi0:90},
          { name: "Mars", color: "burlywood", d:80, speed: 11.5, r:6, phi0:90},
          { name: "Jupiter", color: "firebrick", d:120, speed: 8, r:20, phi0:90}
        ];

    // Here we will set our information about our SVG's total size
    // Essentially our playground.
    var width = 962;
    var height = 502;

    var t0 = Date.now();


    // This is where we create the initial starting points for our system
    function init() {

      svg = d3.select("body").select("#orbit").append("svg")
                                .attr("width", width)
                                .attr("height", height)
                                .style("background-color", "black");

      var center = {
        x: Math.floor(width/2),
        y: Math.floor(height/2)
      };

      // Creating our Sun in the center
      var sun = svg.append("circle").attr({
        "cx": center.x,
        "cy": center.y,
        "r": 15,
        class: "sun"
      }).style("fill", "orange");

      var container = svg.append("g")
                            .attr("transform", "translate(" + width/2 + "," + height/2 + ")");

      container.selectAll("g.planet").data(planets).enter().append("g")
      .attr("class", "planet" + " " + function(s){ return s.name}).each(function(s,i){
        d3.select(this).append("circle")
              .attr("r", function(s){ return s.r; })
              .attr("cx", function(s){ return s.d; })
              .attr("cy", function(s){ return 0; })
              .style("fill", function(s){ return s.color});
      })



      d3.timer(function() {
        var delta = (Date.now() - t0);
        svg.selectAll(".planet").attr("transform", function(d){
          return "rotate(" + d.phi0 + delta * d.speed/400 + ")";
        });
      });

};


init();
    </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>D3-Intermediate Module 1</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">

		#visual {
			width: 900px;
			margin-left: auto;
			margin-right: auto;
			margin-top: 50px;
			padding: 50px;
			font-family: 'Open Sans';
			font-size: 12px;
			font-style: normal;
			font-variant: normal;
			background-color: #F0F3F5;
			box-shadow: 1px 1px 1px 1px #ccc;
		}

		svg {
			background-color: #F0F3F5;
		}

		.axis path,
		.axis line {
			fill: none;
			stroke: white;
			stroke-width: 1;
			shape-rendering: crispEdges;
			stroke-dasharray: 2,2;
		}

		.axis path{
			opacity:0;
		}

		.axis text{
			fill: #004f80;
		}
		g.area text {
			fill: #39464E;
			text-anchor: start;
			opacity: 0;
		}

		g.area:hover path {
			fill: #39464E;
		}

		g.area:hover text {
			opacity: 1;
		}

		</style>
	</head>
		<body>

		<div id="visual">
		<h1>High-technology Exports Development for Top 5 Countries</h1>
		<h1>2009 - 2013 (current US$ in billions)</h1>
		<p>High-technology exports are products with high R&D intensity, such as in aerospace, computers, pharmaceuticals, scientific instruments, and electrical machinery. Data are in current U.S. dollars.</p>
		<p style="font-size: 10px">Source: Worldbank/United Nations, Comtrade database.</p>
	</div>

		<script type="text/javascript">

		var stack = d3.layout.stack()
			.values(function(d) {
				return d.exp;
			})
			.order("reverse");

		var dateFormat = d3.time.format("%Y");

		var w = 900;
		var h = 600;
		var padding = [10,40,20,40];

		var rescale = 1000000000

		var svg = d3.select("#visual")
			.append("svg")
			.attr("width",w)
			.attr("height",h);

		var xScale = d3.time.scale()
			.range([ padding[3], w - padding[1] - padding[3] ]);

		var yScale = d3.scale.linear()
			.range([ padding[0], h - padding[2] ]);

		var xAxis = d3.svg.axis()
				.scale(xScale)
				.orient("bottom")
				.ticks(5)
				.tickFormat(function(d) {
					return dateFormat(d);
				});

		var yAxis = d3.svg.axis()
				.scale(yScale)
				.orient("left")
				.ticks(10)
				.tickSize(-(w-padding[1]-padding[3]*2), 0, 0);

		var area = d3.svg.area()
				.x(function(d) {
					return xScale(dateFormat.parse(d.x));
				})
				.y0(function(d) {
					return yScale(d.y0);
				})
				.y1(function(d) {
					return yScale(d.y0 + d.y);
				});

		var color = ["#F7BF16", "#F57418", "#E8483C", "#9952CC", "#2456B3","#009DFF", "#09D5D9", "#11D66D", "#8FA3B0", "#DADDE0"]

		d3.csv("tech_exports.csv", function(data) {

			var years = ["2009","2010","2011","2012","2013"]
			var dataset = []
			for (var i=0; i<data.length; i++) {
				dataset[i] = {
					country: data[i].country,
					exp: []
				};
				for (var j=0; j<years.length; j++) {
					var amount = null
					if (data[i][years[j]]) {
						amount = (data[i][years[j]])/rescale
					}
					dataset[i].exp.push({
					x: years[j],
					y: amount
					});
				}
			}

			var totals= []
			for (i = 0; i < years.length; i++) {
				totals[i] = 0;
				for (j = 0; j < dataset.length; j++) {
					totals[i] += dataset[j].exp[i].y;
				}
			}

			stack(dataset);

			console.log(dataset[1].exp[4].y0)

			xScale.domain([
				d3.min(years, function(d) {
					return dateFormat.parse(d);
				}),
				d3.max(years, function(d) {
					return dateFormat.parse(d);
				})
			]);

			yScale.domain([ d3.max(totals), 0 ]);

			var groups = svg.selectAll("g")
			.data(dataset)
			.enter()
			.append("g")
			.attr("class", "area")

			var paths = groups.append("path")
				.attr("d", function(d) {
					return area(d.exp);
				})
				.attr("stroke", "none")
				.attr("fill", function(d, i) {
					return color[color.length -1-i];
				});

			groups.append("text")
				.attr("x", w - padding[1]-35)
				.attr("y", function(d,i) {
					return yScale(dataset[i].exp[4].y0+dataset[i].exp[4].y/2)
				})
				.text(function(d,i) {
					return d.country;
				});

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (h - padding[2]) + ")")
					.call(xAxis);

			});

		</script>

	</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
body {
  background: #eee;
  width: 960px;
}


</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

// standard dimension variables
var width = 960,
    height = 500;

// basic SVG setup
var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var x = d3.scale.linear()
	.domain([0, 60])
	.range([0, width/5])

var y = d3.scale.linear()
	.domain([0, 60])
	.range([height/3, 0])

var rScale = d3.scale.pow()
	.domain([0, 60])
	.range([0, 40])
	.exponent(4)	

var opacityScale = d3.scale.pow()
	.domain([0, 60])
	.range([.7, .1])
	.exponent(.2)
  
// tick time
var counter = 0;
function tick() {
  if (counter++ % 5 != 0) return;    // ease up on cpu
  
  //console.log(getTimeData().seconds)
  
  svg.append("circle")
  	.attr("cx", x(getTimeData().seconds))
  	.attr("cy", y(getTimeData().seconds))
  	.attr("r", rScale(getTimeData().seconds))
  	.style("opacity", opacityScale(getTimeData().seconds))
  	.style("fill", "steelblue") 
  	.transition()
  	.delay(30000)
  	.remove()
  
   svg.append("text")
  	
   svg.select("text").text(getTimeData().seconds)

  
  /*
  svg.append("line")
  	.attr("x1", 10)
  	.attr("x2", 10)
  	.attr("y1", y(getTimeData().seconds))
  	.attr("y2", y(getTimeData().seconds))
  	.style("fill", "orange")
  	.style("stroke", "orange")
  	.transition()
  	.delay(4000)
  	.remove()
  */
}

d3.timer(tick);

// get time function
function getTimeData() {
  var now = new Date;
  var milliseconds = now.getMilliseconds();
  var seconds = now.getSeconds() + milliseconds / 1000;
  var minutes = now.getMinutes() + seconds / 60;
  var hours = ((now.getHours() + 24) % 12 || 0) + minutes / 60;
  return {date: now, ms: milliseconds, seconds: seconds, minutes: minutes, hours: hours}
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

h1 {
  font-family: futura;
  font-size: 30;
  font-color: grey;
}

h2 {
  font-family: futura;
  font-size: 15
}

.link {
  fill: none;
  stroke: grey;
  stroke-width: 0.5px;
}

#licensing {
  fill: green;
  stoke: green;
}

#resolved {
  fill: green;
  stoke: green;
}



.link.licensing {
    stroke-dasharray: 0,2 5;
  stroke: #33CCFF;
  stroke-width: 2px;
}

.link.resolved {
    stroke-dasharray: 0,2 5;
  stroke: #33CCFF;
  stroke-width: 2px;
}

rect {
  fill: #33CCFF;
  stroke: #333;
  stroke-width: 0px;
}

rect1 {
  fill: #33CCFF;
  stroke: #333;
  stroke-width: 0px;
}

text {
  font: 8px futura;
  pointer-events: none;
  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;
}

</style>
<body>

<h1>Where AI Plays A Role: </h1>

  <h2>Artificial Intelligence (AI) infographic</h2>

<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

var links = [



 {source: "AI", target: "Healthcare", type: "licensing"},
  {source: "AI", target: "Financial", type: "licensing"},
  {source: "AI", target: "Marketing", type: "licensing"},
  {source: "AI", target: "Recruitment", type: "licensing"},
  {source: "AI", target: "Dating", type: "licensing"},

  {source: "AI", target: "Manufacturing", type: "licensing"},

    {source: "Manufacturing", target: "Rethink robots", type: "suit"},
    {source: "Manufacturing", target: "Predictive product development", type: "suit"},
    {source: "Manufacturing", target: "Chemical data", type: "suit"},

  {source: "AI", target: "Writing", type: "licensing"},
      {source: "Writing", target: "Narrative science", type: "suit"},
      {source: "Writing", target: "Yseop", type: "suit"},








  {source: "Healthcare", target: "IBM Watson", type: "suit"},
  {source: "Healthcare", target: "Barnes & Noble", type: "suit"},
  {source: "Healthcare", target: "Foxconn", type: "suit"},
  {source: "Healthcare", target: "Google", type: "suit"},
  {source: "Healthcare", target: "HTC", type: "suit"},
  {source: "Financial", target: "Cortex ", type: "suit"},
  {source: "Marketing", target: "Flights", type: "licensing"},
    {source: "Flights", target: "Skyscanner", type: "suit"},
    {source: "Flights", target: "Rumbo", type: "suit"},
    {source: "Flights", target: "Opodo", type: "suit"},
  {source: "Marketing", target: "Shopping", type: "licensing"},
    {source: "Shopping", target: "Amazon", type: "suit"},
    {source: "Shopping", target: "Alibaba", type: "suit"},
 {source: "Marketing", target: "Music", type: "licensing"},
  {source: "Music", target: "Spotify", type: "suit"},
   {source: "Music", target: "iTunes", type: "suit"},
 {source: "Marketing", target: "FlipChart", type: "suit"},
 {source: "Marketing", target: "Versus", type: "suit"},
 {source: "Marketing", target: "RadiumOne", type: "suit"},
 {source: "Marketing", target: "Quid", type: "suit"},
  {source: "Recruitment", target: "Humanoid", type: "suit"},
  {source: "Dating", target: "OkCupid", type: "suit"},

    {source: "Marketing", target: "Every-labs: Food delivery", type: "suit"},
    {source: "Marketing", target: "Yummly: Take aways ", type: "suit"},
    {source: "Marketing", target: "Heyzap mobile advertising ", type: "suit"},
    {source: "Marketing", target: "Livestar", type: "suit"},
    {source: "Marketing", target: "Retargeter", type: "suit"},
      {source: "Marketing", target: "Zemanta for bloggers", type: "suit"},
        {source: "Marketing", target: "Campanja adverts ", type: "suit"},
          {source: "Marketing", target: "Preact", type: "suit"},
            {source: "Marketing", target: "Mattermark ", type: "suit"},
              {source: "Marketing", target: "Moz marketing ", type: "suit"},
                {source: "Marketing", target: "Wise-io-2 ", type: "suit"},
                  {source: "Marketing", target: "Launchhub ", type: "suit"},
                  {source: "Marketing", target: "Targetingmantra  ", type: "suit"},
                  {source: "Marketing", target: "Catnip", type: "suit"},
                  {source: "Marketing", target: "Mavin", type: "suit"},
                  {source: "Marketing", target: "Permutive  ", type: "suit"},
                  {source: "Marketing", target: "Fashion-metric  ", type: "suit"},
                  {source: "Marketing", target: "Wordwatch  ", type: "suit"},
        {source: "Recruitment", target: "Gradberry", type: "suit"},
        {source: "Recruitment", target: "Springrole", type: "suit"},

 {source: "AI", target: "Teaching", type: "licensing"},
  {source: "Teaching", target: "Knewton.com", type: "suit"},

   {source: "AI", target: "Human_Assistant", type: "licensing"},

 {source: "Human_Assistant", target: "Incredible-labs", type: "suit"},
  {source: "Human_Assistant", target: "Kwikdesk", type: "suit"},

  {source: "Human_Assistant", target: "Gridspace", type: "suit"},
  {source: "Human_Assistant", target: "Petnet", type: "suit"},
  {source: "Human_Assistant", target: "Topicmarks", type: "suit"},
  {source: "Human_Assistant", target: "Neura", type: "suit"},
  {source: "Human_Assistant", target: "Vurb", type: "suit"},
  {source: "Human_Assistant", target: "Rockmelt", type: "suit"},
  {source: "Human_Assistant", target: "Rainforest", type: "suit"},
  {source: "Human_Assistant", target: "Stanza-1", type: "suit"},
  {source: "Human_Assistant", target: "Cinchcast", type: "suit"},
  {source: "AI", target: "Transport", type: "licensing"},

   {source: "Transport", target: "Google’s self driving cars", type: "suit"},
   {source: "Transport", target: "Trains", type: "suit"},
   {source: "Transport", target: "Traffic lights", type: "suit"},

  {source: "AI", target: "Data Security", type: "licensing"},
   {source: "Data Security", target: "Harvest-ai", type: "suit"},
   {source: "Data Security", target: "Sift-science", type: "suit"},
   {source: "Data Security", target: "Rescue-forensics", type: "suit"},

     {source: "AI", target: "Voice Recognition", type: "licensing"},
        {source: "Voice Recognition", target: "Rexpect-labs", type: "suit"},
         {source: "Voice Recognition", target: "Cleverbot", type: "suit"},
              {source: "Voice Recognition", target: "Siri", type: "suit"},
         {source: "Voice Recognition", target: "Wit-ai", type: "suit"},
                  {source: "Voice Recognition", target: "Desti for planning travels ", type: "suit"},





];


// Transport
// Google’s self driving cars
// trains 
// traffic lights
// Data Security 
// https://angel.co/harvest-ai safe login 
// https://angel.co/sift-science prevent online fraud
// https://angel.co/rescue-forensics digital law enforcement
// Voice Recognition 
// https://angel.co/expect-labs  
// http://www.cleverbot.com/ 
// Siri  
// https://angel.co/wit-ai turns speech into the IoT
// https://angel.co/desti planning travels 


var nodes = {};

links.forEach(function(link) {
  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});
  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});
});

var width = 600,
    height = 600;

var force = d3.layout.force()
    .nodes(d3.values(nodes))
    .links(links)
    .size([width, height])
    .linkDistance(10)
    .charge(-500)
    .on("tick", tick)
    .start();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("defs").selectAll("marker")
    .data(["suit", "licensing", "resolved"])
  .enter().append("marker")
    .attr("id", function(d) { return d; })
    .attr("viewBox", "0 -5 10 10")
    .attr("refX", 5)
    .attr("refY", -1.5)
    .attr("markerWidth", 2)
    .attr("markerHeight", 1)
    .attr("orient", "left")
  .append("path")
    .attr("d", "M0,-5L10,0L0,5");

var path = svg.append("g").selectAll("path")
    .data(force.links())
  .enter().append("path")
    .attr("class", function(d) { return "link " + d.type; })
    .attr("marker-end", function(d) { return "url(#" + d.type + ")"; });

var rect = svg.append("g").selectAll("rect")
    .data(force.nodes())
  .enter().append("rect")
    .attr("height", 10)
    .attr("width", 10)
    .call(force.drag);

var text = svg.append("g").selectAll("text")
    .data(force.nodes())
  .enter().append("text")
    .attr("x", 10)
    .attr("y", ".90em")
    .style("font-family", "futura")
    .text(function(d) { return d.name; });

function tick() {
  path.attr("d", linkArc);
  rect.attr("transform", transform);
  text.attr("transform", transform);
}

function linkArc(d) {
  var dx = d.target.x - d.source.x,
      dy = d.target.y - d.source.y,
      dr = Math.sqrt(dx * dx + dy * dy);
  return "M" + d.source.x + "," + d.source.y + "A" + dr + "," + dr + " 0 0,1 " + d.target.x + "," + d.target.y;
}

function transform(d) {
  return "translate(" + d.x + "," + d.y + ")";
}

</script>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>reprojection selection</title>
  <meta charset="utf-8" />

    <link type="text/css" rel="stylesheet" href="https://raw.githubusercontent.com/emeeks/d3-carto-map/master/d3map.css" />
    <link type="text/css" rel="stylesheet" href="https://raw.githubusercontent.com/emeeks/d3-carto-map/master/examples/example.css" />

</head>

<style>
  html,body {
    height: 100%;
    width: 100%;
    margin: 0;
  }

  #map {
    height: 90%;
    width: 90%;
    top: 10%;
    position: absolute;
  }

  #title {
    padding: 20px;
  }

  .bluesquare {
    fill: green;
    stroke: gray;
    stroke-width: 1px;
  }

  button.marker {
    position: fixed;
    z-index: 1;
    bottom: 150px;
    left: 150px;
  }

  .countryborders{
    fill:#99d8c9;
    stroke:#de2d26;
  }

  .reproject{
    margin-top:-15;
  }



.reprojectshp{
  margin-top:-15;
}

.addgr{
  margin-top:-15;
}

#projection-menu{
  margin-top:5px;
}

.grat{

  stroke:grey;
  stroke-width:1px;
  stroke-opacity:.7;
  fill:none;

}


  </style>

<select id="projection-menu"></select>
<script   src="./projmode.js" type="text/javascript">
</script>
<body onload="makeSomeMaps()">
<body onload="makeSomeMaps()">

<div id="map"></div>

<footer>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="http://d3js.org/topojson.v1.min.js" type="text/javascript">
</script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js" type="text/javascript">
</script>
<script src="/mpmckenna8/raw/55557f2cc06ae603f242/tile.js" type="text/javascript">
</script>
<script src="/mpmckenna8/raw/55557f2cc06ae603f242/d3.quadtiles.js" type="text/javascript">
</script>
<script src="/mpmckenna8/raw/55557f2cc06ae603f242/d3.geo.raster.js" type="text/javascript">
</script>
<script src="https://rawgit.com/emeeks/d3-carto-map/master/d3.carto.map.js" type="text/javascript">
</script>
</footer>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.fill {
  fill: #ccc;
}

.stroke {
  fill: none;
  stroke: #000;
  stroke-width: 20px;
}

</style>
<svg width="960" height="500" viewBox="-2 -2 100 95">
  <defs>
    <path id="dee" d="M0,0h7.75a45.5,45.5 0 1 1 0,91h-7.75v-20h7.75a25.5,25.5 0 1 0 0,-51h-7.75z"/>
    <path id="three" d="M36.2510,0h32a27.75,27.75 0 0 1 21.331,45.5a27.75,27.75 0 0 1 -21.331,45.5h-32a53.6895,53.6895 0 0 0 18.7464,-20h13.2526a7.75,7.75 0 1 0 0,-15.5h-7.75a53.6895,53.6895 0 0 0 0,-20h7.75a7.75,7.75 0 1 0 0,-15.5h-13.2526a53.6895,53.6895 0 0 0 -18.7464,-20z"/>
    <clipPath id="clip-three">
      <use xlink:href="#three"/>
    </clipPath>
  </defs>
  <use class="fill" xlink:href="#dee"/>
  <use class="fill" xlink:href="#three"/>
  <path class="stroke" style="display:none;" d="M0,10h7.75a35.5,35.5 0 1 1 0,71h-7.75"/>
  <path class="stroke" style="display:none;" clip-path="url(#clip-three)" d="M36.2510,10h32a17.75,17.75 0 0 1 0,35.5h-7.75h7.75a17.75,17.75 0 0 1 0,35.5h-32"/>
</svg>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

d3.select(this)
    .on("touchstart", animate)
    .on("click", animate)
    .on("load", animate);

function animate() {
  var delay = 0,
      stroke = d3.selectAll(".stroke");

  // First cancel any active or scheduled transitions.
  stroke.interrupt().transition();

  // Then schedule the new transition.
  stroke.transition().each(function() {
    var length = this.getTotalLength(),
        duration = length * 10;

    d3.select(this)
        .style("display", null)
        .style("stroke-dasharray", "0," + length)
      .transition()
        .delay(delay)
        .duration(duration)
        .style("stroke-dasharray", length + "," + length);

    delay += duration;
  });
}

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Cleaning Up</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			rect:hover {
				fill: aqua;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1>CPI 2014 - The Corruption Rank</h1>

		<p>The &ldquo;Corruption Perceptions Index 2014&rdquo; Scores by Country.</p>
		<p>0 (highly corrupt) to 100 (very clean)</p>

		<script type="text/javascript">		


			var w = 1000;
			var h = 2000;
			var padding = [ 20, 10, 30, 200 ];  //Top, right, bottom, left



			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);



			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");


			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("CorruptionPerceptionsIndex2014.csv", function(data) {

				data.sort(function(a, b) {
					return d3.ascending(+a.CPI_2014_Score, +b.CPI_2014_Score);
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.CPI_2014_Score;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.Country; } ));

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.Country);
					})
					.attr("width", function(d) {
						return widthScale(d.CPI_2014_Score);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill", "steelblue")
					.append("title")
					.text(function(d) {
						return d.Country + "'s CPI 2014 is " + d.CPI_2014_Score;
					});

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Hello, World! • A-Frame</title>
    <meta name="description" content="Hello, World! • A-Frame">
    <script src="https://aframe.io/releases/latest/aframe.min.js"></script>
  </head>
  <body>
    <a-scene>
      <a-sky src="http://dl.dropboxusercontent.com/u/2488175/Panos/panofiles/R0010124.JPG" rotation="0 -130 0"></a-sky>
    </a-scene>
  </body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <title>Leaflet multilayer example | CartoDB.js</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    <link rel="shortcut icon" href="http://cartodb.com/assets/favicon.ico" />
    <style>
      html, body, #map {
        height: 100%;
        padding: 0;
        margin: 0;
        background: black;
      }
      #proj {
        position: absolute;
        top: 10px;
        left: 20px;
        width: 100px;
        height: 60px;
        background: rgba(0,0,0,0.4);
      }
      #proj a {
        text-decoration: none;
        color: white;
      }
.menu-wrapper {
  position: absolute;
  top: 5px;
  right: 5px;
  width: 64px;
  height: 64px;
  z-index: 3200;
  -webkit-transition: all 300ms ease 0ms;
          transition: all 300ms ease 0ms;
  border: 1px solid #999;
  cursor: pointer;
}
.menu-wrapper:after {
  content: 'P';
  display: block;
  position: absolute;
  width: 64px;
  height: 64px;
  background-color: #666;
  top: 0;
  left: 0;
  font: 24px/64px 'Arial';
  text-align: center;
  color: #fff;
}
.menu-wrapper nav {
  position: absolute;
  top: 0;
  right: 0;
  width: 64px;
  height: 64px;
  z-index: -1;
}
.menu-wrapper nav a {
  box-sizing: border-box;
  background-color: rgba(128, 128, 128, 0.33);
  border-color: #999;
  border-style: solid;
  border-width: 0 1px;
  color: black;
  display: block;
  font: 14px/64px sans-serif;
  height: 64px;
  opacity: 0.5;
  padding: 0px 26px;
  position: absolute;
  right: -1px;
  text-align: left;
  text-decoration: none;
  top: 0;
  -webkit-transition: all 300ms ease 0ms, width 0ms ease-out 0ms;
          transition: all 300ms ease 0ms, width 0ms ease-out 0ms;
  vertical-align: middle;
  width: 64px;
  z-index: -1;
  overflow: hidden;
}
.menu-wrapper nav a i {
  vertical-align: middle;
  font-size: 20px;
}
.menu-wrapper nav a span {
  display: inline;
  vertical-align: middle;
  -webkit-transform: scale(0, 1);
  margin-left: 5px;
  text-transform: uppercase;
}
.menu-wrapper nav a:first-of-type {
  border-width: 1px 1px 0 1px;
}
.menu-wrapper nav a:last-of-type {
  border-width: 0 1px 1px 1px;
}
.menu-wrapper nav a:hover {
  background-color: gray;
  color: white;
}
.menu-wrapper nav a:hover span {
  color: white;
}
.menu-wrapper.open:before {
  content: '';
  display: block;
  position: absolute;
  bottom: -1px;
  left: 0;
  height: 0px;
  width: 100%;
  border-bottom: 1px solid white;
}
.menu-wrapper.open nav a {
  opacity: 1;
  width: 280px;
}
.menu-wrapper.open nav a:nth-child(1) {
  -webkit-transform: translateY(100%);
      -ms-transform: translateY(100%);
          transform: translateY(100%);
  -webkit-transition: all 200ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 200ms, opacity 300ms ease-in 0ms;
          transition: all 200ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 200ms, opacity 300ms ease-in 0ms;
}
.menu-wrapper.open nav a:nth-child(2) {
  -webkit-transform: translateY(200%);
      -ms-transform: translateY(200%);
          transform: translateY(200%);
  -webkit-transition: all 400ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 400ms, opacity 300ms ease-in 100ms;
          transition: all 400ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 400ms, opacity 300ms ease-in 100ms;
}
.menu-wrapper.open nav a:nth-child(3) {
  -webkit-transform: translateY(300%);
      -ms-transform: translateY(300%);
          transform: translateY(300%);
  -webkit-transition: all 600ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 600ms, opacity 300ms ease-in 200ms;
          transition: all 600ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 600ms, opacity 300ms ease-in 200ms;
}
.menu-wrapper.open nav a:nth-child(4) {
  -webkit-transform: translateY(400%);
      -ms-transform: translateY(400%);
          transform: translateY(400%);
  -webkit-transition: all 800ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 800ms, opacity 300ms ease-in 300ms;
          transition: all 800ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 800ms, opacity 300ms ease-in 300ms;
}
.menu-wrapper.open nav a:nth-child(5) {
  -webkit-transform: translateY(500%);
      -ms-transform: translateY(500%);
          transform: translateY(500%);
  -webkit-transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
          transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
}

.menu-wrapper.open nav a:nth-child(6) {
  -webkit-transform: translateY(600%);
      -ms-transform: translateY(600%);
          transform: translateY(600%);
  -webkit-transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
          transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
}

.menu-wrapper.open nav a:nth-child(7) {
  -webkit-transform: translateY(700%);
      -ms-transform: translateY(700%);
          transform: translateY(700%);
  -webkit-transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
          transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
}

.menu-wrapper.open nav a:nth-child(8) {
  -webkit-transform: translateY(800%);
      -ms-transform: translateY(800%);
          transform: translateY(800%);
  -webkit-transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
          transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
}

.menu-wrapper.open nav a:nth-child(9) {
  -webkit-transform: translateY(900%);
      -ms-transform: translateY(900%);
          transform: translateY(900%);
  -webkit-transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
          transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
}

.menu-wrapper.open nav a:nth-child(10) {
  -webkit-transform: translateY(1000%);
      -ms-transform: translateY(1000%);
          transform: translateY(1000%);
  -webkit-transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
          transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
}

.menu-wrapper.open nav a:nth-child(11) {
  -webkit-transform: translateY(1100%);
      -ms-transform: translateY(1100%);
          transform: translateY(1100%);
  -webkit-transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
          transition: all 1000ms ease-in-out 0ms, color 200ms ease 0ms, background-color 200ms ease 0ms, width 300ms ease-in 1000ms, opacity 300ms ease-in 400ms;
}

    </style>

    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css" />
    <!--[if lte IE 8]>
        <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.ie.css" />
    <![endif]-->

  </head>
  <body>
    <!-- Menu wrapper from http://codepen.io/anon/pen/pvLVXd -->
    <div class="menu-wrapper">
      <nav>
      </nav>
    </div><!--/.menu-wrapper-->
    <div id="map"></div>
    <div id="proj"></div>

    <!-- include cartodb.js library -->
    <script src="http://libs.cartocdn.com/cartodb.js/v3/cartodb.js"></script>
    <script>

      function main() {

        $('.menu-wrapper').on('click', function() {
          $(this).toggleClass('open');
        });
        if(window.location.hash) {
          var proj = window.location.hash.substring(1); 
        } else {
          var proj = 42303;
          window.location.hash = proj;
        }
        console.log(proj)

        // set sql api client
        var sql = cartodb.SQL({ user: 'andrew' });
        // create leaflet map
        var map = L.map('map', { 
          zoomControl: false,
          center: [43, 0],
          zoom: 3
        })

        var conf = {
          '42303': {table: 'us_states', srid: 42303, id: 'PROJCS: NAD83 / Albers NorthAm', link: 'http://epsg.io/42303'},
          '102005': {table: 'us_states_contiguous', srid: 102005, id: 'USA Contiguous Equidistant Conic', link: 'http://epsg.io/102005'},
          '102031': {table: 'ne_adm0_europe', srid: 102031, id: 'Europe Equidistant Conic', link: 'http://epsg.io/102031'},
          '102029': {table: 'asia_adm0', srid: 102029, id: 'Asia South Equidistant Conic', link: 'http://epsg.io/102029'},
          '102023': {table: 'africa_adm0', srid: 102023, id: 'Africa Equidistant Conic', link: 'http://epsg.io/102023'},
          '102032': {table: 'samerica_adm0', srid: 102032, id: 'South America Equidistant Conic', link: 'http://epsg.io/102032'},
          '102016': {table: 'world_borders_no_antarctica', srid: 102016, id: 'North Pole Azimuthal Equidistant', link: 'http://epsg.io/102016'},
          '102019': {table: 'world_borders', srid: 102019, id: 'South Pole Azimuthal Equidistant', link: 'http://epsg.io/102019'},
          '3577': {table: 'australian_albers', srid: 3577, id: 'Australian Albers', link: 'http://epsg.io/3577'}
        }
        function redirect(srid){
          console.log(srid)
        }
        for (a in conf){
          $('nav').append(
            $("<a href=\"#"+a+"\"><i class=\"fa fa-times\"></i> <span>"+conf[a].id+"</span></a>")
          ) 
        }
        $('nav a').click(function(){
          window.location.reload();
        })
        $('#proj').html("<a target=_blank href='"+conf[proj].link+"'>"+conf[proj].id+"</a>")
        var bsql = 'SELECT ST_Transform(ST_SetSRID(st_transform(the_geom_webmercator, '+conf[proj].srid+'),3857),4326) the_geom FROM '+conf[proj].table;
        sql.getBounds(bsql).done(function(bounds) {
          map.fitBounds(bounds);
        });
        
        // add cartodb layer with one sublayer
        cartodb.createLayer(map, {
          user_name: 'andrew',
          type: 'cartodb',
          sublayers: [{
             sql: 'SELECT    cartodb_id, st_transform(the_geom_webmercator, '+conf[proj].srid+') the_geom_webmercator FROM '+conf[proj].table,
             cartocss: '#'+conf[proj].table+'::blur { polygon-fill: #7af; polygon-opacity: 1;  polygon-clip: false; image-filters: agg-stack-blur(15,15);} #'+conf[proj].table+' { polygon-fill: #85D8CE; polygon-opacity: 1; line-width: 0; polygon-clip: false;}',
             interactivity: 'cartodb_id'
          }]
        })
        .addTo(map)
        .done(function(layer) {
          cartodb.createLayer(map, {
            type: "torque",
            order: 1,
            options: {
              query: 'SELECT pop_max, cartodb_id, st_transform(the_geom_webmercator, '+conf[proj].srid+') the_geom_webmercator FROM populated_places p WHERE 0<(SELECT count(cartodb_id) FROM '+conf[proj].table+' c WHERE p.the_geom && c.the_geom LIMIT 1)',
              table_name: "populated_places",
              user_name: "andrew",
              tile_style: 'Map { -torque-frame-count:256; -torque-animation-duration:10; -torque-time-attribute:"cartodb_id"; -torque-aggregation-function:"count(cartodb_id)"; -torque-resolution:2; -torque-data-aggregation:linear; } #populated_places{ comp-op: lighter; marker-fill-opacity: 0.9; marker-line-color: #FFF; marker-line-width: 0; marker-line-opacity: 1; marker-type: ellipse; marker-width: 1; marker-fill: #FF77AA; } #populated_places[frame-offset=1] { marker-width:3; marker-fill-opacity:0.45; } #populated_places[frame-offset=2] { marker-width:5; marker-fill-opacity:0.225; } #populated_places[frame-offset=3] { marker-width:7; marker-fill-opacity:0.1; }'
              }
          }).done(function(layer) {
            map.addLayer(layer);
          });
        });
      }
      window.onload = main; 

    </script>

  </body>
</html><!doctype html>
<html lang="en">
  <head>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.3/proj4.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js"></script>
    <script type="text/javascript">
      //Snippet comes from http://osgeo-org.1560.x6.nabble.com/OL-2-13-1-latest-Proj4js-td5081636.html
      window.Proj4js = {
        Proj: function(code) {
          return proj4(Proj4js.defs[code]);
        },
        defs: proj4.defs,
        transform: proj4
      };
      // Definition comes from http://epsg.io/31466/
      proj4.defs["EPSG:31466"] = "+proj=tmerc +lat_0=0 +lon_0=6 +k=1 +x_0=2500000 +y_0=0 +ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7 +units=m +no_defs";
      console.log(Proj4js.defs["EPSG:31466"]);

      var proj_wgs84 = new OpenLayers.Projection("EPSG:4326");
      var proj_31466 = new OpenLayers.Projection("EPSG:31466");
      // Center for projection EPSG:31466
      var point = new OpenLayers.LonLat(2769212.70, 5678724.61);
      var new_point= point.transform(proj_31466, proj_wgs84);
      console.log(new_point.lat, new_point.lon);
    </script>
  </head>
  <body>
  </body>
</html><!DOCTYPE html>
<head>
  <title>ACC Basketball Tournament Series Records</title>
  <link rel="stylesheet" href="accvisual.css" type="text/css" />
  <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
  <link rel="icon" href="favicon.ico" type="image/x-icon">
  <link href='http://fonts.googleapis.com/css?family=Electrolize' rel='stylesheet' type='text/css'>
  <meta charset="utf-8" />
</head>
<body>
  <div id="container">
    <svg id="circle"></svg>
  </div>
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script src="accvisual.js"></script><!DOCTYPE html>
<head>
<meta charset="utf-8">
<style>


svg {
  background-color: #333;
}

.stroke {
  fill: none;
  stroke: #000;
  stroke-width: .5;
}

</style>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.tile.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.mercator()
    .center([9, 49])
    .scale(3800);

var path = d3.geo.path()
    .projection(projection);

var tile = d3.geo.tile()
    .scale(projection.scale() * 2 * Math.PI)
    .translate(projection([0, 0]))
    .zoomDelta((window.devicePixelRatio || 1) - .5);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

//Define the clip boundaries by country UN ID
d3.json("world-50m.json", function(error, topology) {
 var germany = topology.objects.countries.geometries.filter(function(d) { return d.id == 276; })[0];
 var czech = topology.objects.countries.geometries.filter(function(d) { return d.id == 203; })[0];
 var france = topology.objects.countries.geometries.filter(function(d) { return d.id == 250; })[0];
 var poland = topology.objects.countries.geometries.filter(function(d) { return d.id == 616; })[0];
 var belgium = topology.objects.countries.geometries.filter(function(d) { return d.id == 56; })[0];
 var holland = topology.objects.countries.geometries.filter(function(d) { return d.id == 528; })[0];
 var luxembourg = topology.objects.countries.geometries.filter(function(d) { return d.id == 442; })[0];
 var switzerland = topology.objects.countries.geometries.filter(function(d) { return d.id == 756; })[0];
 var austria = topology.objects.countries.geometries.filter(function(d) { return d.id == 40; })[0];
 
 //Generate some empty tilesets
  var tiles1 = tile();
  var tiles2 = tile();
  var tiles3 = tile();
  var tiles4 = tile();
  var tiles5 = tile();
  var tiles6 = tile();
  var tiles7 = tile();
  var tiles8 = tile();
  var tiles9 = tile();

  var defs = svg.append("defs");

//germany!
  defs.append("path")
      .attr("id", "ger")
      .datum(topojson.feature(topology, germany))
      .attr("d", path)

  defs.append("clipPath")
      .attr("id", "clip1")
    .append("use")
      .attr("xlink:href", "#ger");

  svg.append("g")
      .attr("clip-path", "url(#clip1)")
    .selectAll("image")
      .data(tiles1)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.map-nktu3c9m/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles1.scale))
      .attr("height", Math.round(tiles1.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles1.translate[0]) * tiles1.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles1.translate[1]) * tiles1.scale); });

  svg.append("use")
      .attr("xlink:href", "#ger")
      .attr("class", "stroke");

//czech!
  defs.append("path")
      .attr("id", "cze")
      .datum(topojson.feature(topology, czech))
      .attr("class", "land cze")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip2")
    .append("use")
      .attr("xlink:href", "#cze");

  svg.append("g")
      .attr("clip-path", "url(#clip2)")
    .selectAll("image")
      .data(tiles2)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.ghfcid9o/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles2.scale))
      .attr("height", Math.round(tiles2.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles2.translate[0]) * tiles2.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles2.translate[1]) * tiles2.scale); });

  svg.append("use")
      .attr("xlink:href", "#cze")
      .attr("class", "stroke");

  //france!

  defs.append("path")
      .attr("id", "fra")
      .datum(topojson.feature(topology, france))
      .attr("class", "land fra")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip3")
    .append("use")
      .attr("xlink:href", "#fra");

  svg.append("g")
      .attr("clip-path", "url(#clip3)")
    .selectAll("image")
      .data(tiles3)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.map-euipl4u9/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles3.scale))
      .attr("height", Math.round(tiles3.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles3.translate[0]) * tiles3.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles3.translate[1]) * tiles3.scale); });

  svg.append("use")
      .attr("xlink:href", "#fra")
      .attr("class", "stroke");

  //poland!

  defs.append("path")
      .attr("id", "pol")
      .datum(topojson.feature(topology, poland))
      .attr("class", "land pol")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip4")
    .append("use")
      .attr("xlink:href", "#pol");

  svg.append("g")
      .attr("clip-path", "url(#clip4)")
    .selectAll("image")
      .data(tiles4)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.gbn69pja/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles4.scale))
      .attr("height", Math.round(tiles4.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles4.translate[0]) * tiles4.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles4.translate[1]) * tiles4.scale); });

  svg.append("use")
      .attr("xlink:href", "#pol")
      .attr("class", "stroke");

  //belgium!

  defs.append("path")
      .attr("id", "bel")
      .datum(topojson.feature(topology, belgium))
      .attr("class", "land bel")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip5")
    .append("use")
      .attr("xlink:href", "#bel");

  svg.append("g")
      .attr("clip-path", "url(#clip5)")
    .selectAll("image")
      .data(tiles5)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.ga0g9p2n/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles5.scale))
      .attr("height", Math.round(tiles5.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles5.translate[0]) * tiles5.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles5.translate[1]) * tiles5.scale); });

  svg.append("use")
      .attr("xlink:href", "#bel")
      .attr("class", "stroke");

  //holland!

  defs.append("path")
      .attr("id", "hol")
      .datum(topojson.feature(topology, holland))
      .attr("class", "land hol")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip6")
    .append("use")
      .attr("xlink:href", "#hol");

  svg.append("g")
      .attr("clip-path", "url(#clip6)")
    .selectAll("image")
      .data(tiles6)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.ga17m42k/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles6.scale))
      .attr("height", Math.round(tiles6.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles6.translate[0]) * tiles6.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles6.translate[1]) * tiles6.scale); });

  svg.append("use")
      .attr("xlink:href", "#hol")
      .attr("class", "stroke");

  //luxembourg!

  defs.append("path")
      .attr("id", "lux")
      .datum(topojson.feature(topology, luxembourg))
      .attr("class", "land lux")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip7")
    .append("use")
      .attr("xlink:href", "#lux");

  svg.append("g")
      .attr("clip-path", "url(#clip7)")
    .selectAll("image")
      .data(tiles7)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.map-oxe99jxb/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles7.scale))
      .attr("height", Math.round(tiles7.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles7.translate[0]) * tiles7.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles7.translate[1]) * tiles7.scale); });

  svg.append("use")
      .attr("xlink:href", "#lux")
      .attr("class", "stroke");

  //switzerland!

  defs.append("path")
      .attr("id", "swi")
      .datum(topojson.feature(topology, switzerland))
      .attr("class", "land swi")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip8")
    .append("use")
      .attr("xlink:href", "#swi");

  svg.append("g")
      .attr("clip-path", "url(#clip8)")
    .selectAll("image")
      .data(tiles8)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.map-xswoybbb/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles8.scale))
      .attr("height", Math.round(tiles8.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles8.translate[0]) * tiles8.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles8.translate[1]) * tiles8.scale); });

  svg.append("use")
      .attr("xlink:href", "#swi")
      .attr("class", "stroke");

  //austria!

  defs.append("path")
      .attr("id", "aus")
      .datum(topojson.feature(topology, austria))
      .attr("class", "land aus")
      .attr("d", path)
      
  defs.append("clipPath")
      .attr("id", "clip9")
    .append("use")
      .attr("xlink:href", "#aus");

  svg.append("g")
      .attr("clip-path", "url(#clip9)")
    .selectAll("image")
      .data(tiles9)
    .enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/landplanner.ga0g9p2n/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", Math.round(tiles9.scale))
      .attr("height", Math.round(tiles9.scale))
      .attr("x", function(d) { return Math.round((d[0] + tiles9.translate[0]) * tiles9.scale); })
      .attr("y", function(d) { return Math.round((d[1] + tiles9.translate[1]) * tiles9.scale); });

  svg.append("use")
      .attr("xlink:href", "#aus")
      .attr("class", "stroke");
});

</script>
</body>
</html>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width: 100%; height: 100%; }
  </style>
</head>

<body>
  <script>
var data = [[83,62.5],[12,76.6],[98,79.2],[3.2,38],[94.9,54.9],[4.6,27.7],[77.2,69.7],[28.1,27.4],[12.4,70.8],[20.2,77.6],[35.6,76.5],[23,52.5],[76.5,76.3],[10,14.9],[73.6,67.4],[47.2,87.2],[62.5,68.8],[12.5,55.5],[75.3,55.3],[30.3,62.7],[5,81.1],[7.3,79.2],[12.1,41.3],[10.1,92],[22.8,65.3],[16.4,84.4],[95.7,27.8],[26.2,85.7],[81.8,92.6],[36.3,62.6],[12.2,59.3],[22.4,69.3],[4.5,72.2],[84.5,32.5],[94.1,76.5],[56.9,49.4],[28.7,69.8]];
   
    var margin = {top: 20, right: 15, bottom: 60, left: 60}
      , width = 960 - margin.left - margin.right
      , height = 500 - margin.top - margin.bottom;
    
    var x = d3.scale.linear()
              .domain([0, d3.max(data, function(d) { return d[0]; })])
              .range([ 0, width ]);
    
    var y = d3.scale.linear()
    	      .domain([0, d3.max(data, function(d) { return d[1]; })])
    	      .range([ height, 0 ]);
 
    var chart = d3.select('body')
	.append('svg:svg')
	.attr('width', width + margin.right + margin.left)
	.attr('height', height + margin.top + margin.bottom)
	.attr('class', 'chart')

    var main = chart.append('g')
	.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')
	.attr('width', width)
	.attr('height', height)
	.attr('class', 'main')   
        
    // draw the x axis
    var xAxis = d3.svg.axis()
	.scale(x)
	.orient('bottom');

    main.append('g')
	.attr('transform', 'translate(0,' + height + ')')
	.attr('class', 'main axis date')
	.call(xAxis);

    // draw the y axis
    var yAxis = d3.svg.axis()
	.scale(y)
	.orient('left');

    main.append('g')
	.attr('transform', 'translate(0,0)')
	.attr('class', 'main axis date')
	.call(yAxis);

    var g = main.append("svg:g"); 
    
    g.selectAll("scatter-dots")
      .data(data)
      .enter().append("svg:circle")
          .attr("cx", function (d,i) { return x(d[0]); } )
          .attr("cy", function (d) { return y(d[1]); } )
          .attr("r", 8);
  </script>
</body>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
	<title>Frontline Freelance Register skills</title>
</head>
<body>
	<link rel="stylesheet" href="style.css">
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
	<script src="jquery-2.0.3.min.js"></script>
	<script src="underscore-min.js"></script>
	<script src="ffr.js"></script>

	<article>
		
	</article>
	<ul id="legend">
	</ul>


</body>
<!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 960,
    speed = 1e-2;

var projection = d3.geo.transverseMercator()
    .scale((width + 1) / 2 / Math.PI)
    .translate([width / 2, height / 2])
    .precision(.5);

var graticule = d3.geo.graticule();

var canvas = d3.select("body").append("canvas")
    .attr("width", width)
    .attr("height", height);

var context = canvas.node().getContext("2d");

var path = d3.geo.path()
    .projection(projection)
    .context(context);

d3.json("/mbostock/raw/4090846/world-110m.json", function(error, topo) {
  if (error) throw error;

  var land = topojson.feature(topo, topo.objects.land),
      borders = topojson.mesh(topo, topo.objects.countries, function(a, b) { return a !== b; }),
      grid = graticule();

  d3.timer(function(elapsed) {
    projection.rotate([speed * elapsed, 0]);

    context.clearRect(0, 0, width, height);

    context.beginPath();
    path(land);
    context.fillStyle = "#222";
    context.fill();

    context.beginPath();
    path(borders);
    context.lineWidth = .5;
    context.strokeStyle = "#fff";
    context.stroke();

    context.beginPath();
    path(grid);
    context.lineWidth = .5;
    context.strokeStyle = "rgba(119,119,119,.5)";
    context.stroke();
  });
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<div class="holder">
  <div class="a">Seth>Kontny</div>
  <div class="thing1 seg"></div>
  <div class="thing2 seg"></div>
  <div class="thing3 seg"></div>
  <div class="thing4 seg"></div>
  <div class="thing5 seg"></div>
  <div class="thing6 seg"></div>
  <div class="thing7 seg"></div>
  <div class="thing8 seg"></div>
</div>
<!DOCTYPE html>
    <title>Czech general elections 2013</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style>

.chart text {
  fill: white;
  font: 11px sans-serif;
  text-anchor: end;
}

.axis {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.limit-line {
  stroke: Black;
  width: 3px;
}
.label {
  font: 8px sans-serif;
}
.label2 {
  font: 7px sans-serif;
}

.cssd {
  fill: DarkOrange;
}
.ods {
  fill: Blue;
}
.ano-2011 {
  fill: CornflowerBlue;
}
.kscm {
  fill: DarkRed;
}
.top-09 {
  fill: DarkViolet;
}
.usvit {
  fill: GreenYellow;
}
.kdu-csl {
  fill: Gold;
}
.zeleni {
  fill: Green;
}
.pirati {
  fill: Black;
}
.svobodni {
  fill: DarkGreen;
}
.ostatni {
  fill: Gray;
}
.old {
  fill-opacity: 0.33;
}

/* because of bootstrap*/
svg {
	position: fixed;
    top: 180px;
}

</style>
<body>
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Czech general elections 2013 - results</a>
        </div>
      </div>
    </div>
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >Recreation of "Wikipedia-style" charts of elections results (e.g. <em><a href="http://de.wikipedia.org/wiki/Nationalratswahl_in_Österreich_2013">here</a></em>) in D3.<br/>
      Full color: results from 2013<br/>
      Opaque color: results from 2010</div>
    </div>
    
<script>

//based on http://bl.ocks.org/mbostock/raw/3885304/

var data = [
 {name: 'ČSSD', friendly_name: 'cssd', gain2013: .2045, gain2010: .2208},
 {name: 'ANO 2011', friendly_name: 'ano-2011', gain2013: .1865, gain2010: 0},
 {name: 'KSČM', friendly_name: 'kscm', gain2013: .1491, gain2010: .1127},
 {name: 'TOP 09', friendly_name: 'top-09', gain2013: .1199, gain2010: .1670},
 {name: 'ODS', friendly_name: 'ods', gain2013: .0772, gain2010: .2022},
 {name: 'Úsvit', friendly_name: 'usvit', gain2013: .0688, gain2010: 0},
 {name: 'KDU-ČSL', friendly_name: 'kdu-csl', gain2013: .0678, gain2010: .0439},
 {name: 'Zelení', friendly_name: 'zeleni', gain2013: .0319, gain2010: .0246},
 {name: 'Piráti', friendly_name: 'pirati', gain2013: .0266, gain2010: .0080},
 {name: 'Svobodní', friendly_name: 'svobodni', gain2013: .0246, gain2010: .0072},
 {name: 'Ostatní', friendly_name: 'ostatni', gain2013: .0431, gain2010: .2073},
];

var names = [];
for (i = 0; i < data.length; i++) {
  names.push(data[i].name);
}

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 600 - margin.left - margin.right,
    height = 200 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .25)
    .domain(names);

var y = d3.scale.linear()
    .range([height, 0])
    .domain([0,0.25]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(5, "%");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
      
  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end");
      //.text("Hlasy");

  svg.selectAll(".e2010")
      .data(data)
    .enter().append("rect")
      .attr("class", function(d) {return "bar old " + d.friendly_name})
      .attr("x", function(d) { return x(d.name) - x.rangeBand()/5; })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.gain2010); })
      .attr("height", function(d) { return height - y(d.gain2010); })
      .attr("title",function(d) {title = "2010: " + Math.round(100*d.gain2010) + " %"; return title;});

  svg.selectAll(".e2013")
      .data(data)
    .enter().append("rect")
      .attr("class", function(d) {return "bar new " + d.friendly_name})
      .attr("x", function(d) { return x(d.name); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.gain2013); })
      .attr("height", function(d) { return height - y(d.gain2013); })
      .attr("title",function(d) {title = "2013: " + Math.round(100*d.gain2013) + " %"; return title;});

svg.append("line")
    .attr("x1", 0)
    .attr("y1", function() { return y(0.05) })
    .attr("x2", width)
    .attr("y2", function() { return y(0.05) })
    .attr("class","limit-line");  
    

   svg.selectAll(".text")
       .data(data)
       .enter()
       .append("text")
       .text(function(d){return  Math.round(10000*d.gain2013)/100 + "%";})
       .attr("text-anchor", "middle")
	    .attr("x", function(d, i) { return i * (width / data.length) + (width / data.length) / 2; })
	    .attr("y", function(d) { return y(Math.max(d.gain2010,d.gain2013)) - 20; })
	    .attr("class","label");
	    
   svg.selectAll(".text")
       .data(data)
       .enter()
       .append("text")
       .text(function(d){return  "(" + Math.round(10000*d.gain2010)/100 + "%)";})
       .attr("text-anchor", "middle")
	    .attr("x", function(d, i) { return i * (width / data.length) + (width / data.length) / 2; })
	    .attr("y", function(d) { return y(Math.max(d.gain2010,d.gain2013)) - 10; })
	    .attr("class","label2");

</script>
</body>
<!DOCTYPE html>
<html lang="fr">
	<head>
		<meta charset="utf-8">
		<title>Loading CSV Data with D3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>
	
		<title>SVG Example</title>
		<style type="text/css">
			
			body {
				background-color: #ddddff;
			}
			svg {
				background-color: white;
			}
		</style>
	</head>
	<body>

<svg width="635" height="357">
			<rect x="200" y="10" width="100" height="100" fill="orange" />
			<circle cx="300" cy="140" r="50" fill="violet" />
		</svg>

		<p>Rien à voir ici. Faut aller dans la console!</p>

		<script type="text/javascript">		
			//Load in contents of CSV file
			d3.csv("2011_participation.csv", function(data) {
				console.log(data);
			});
		</script>

	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>Scatterplot with Voronoi</title>

	<!-- D3.js -->	
    <script src="http://d3js.org/d3.v3.js"></script>
	
	<!-- jQuery -->
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
	<!-- Latest compiled and minified JavaScript -->
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
	
	<!-- Open Sans & CSS -->
	<link href='http://fonts.googleapis.com/css?family=Open+Sans:700,400,300' rel='stylesheet' type='text/css'>
	  <style>
		body {
		  font-family: 'Open Sans', sans-serif;
		  font-size: 12px;
		  font-weight: 400;
		  color: #525252;
		  text-align: center;
		}	
		
		.axis path,
		.axis line {
			fill: none;
			stroke: #B3B3B3;
			shape-rendering: crispEdges;
		}
		.axis text {
			font-size: 10px;
			fill: #6B6B6B;
		}
		
		.popover {
			pointer-events: none;
		}
		
		.legendCircle {
			stroke-width:1;
			stroke:#999;
			stroke-dasharray:2 2;
			fill:none;
		}

		.legendLine {
			stroke-width: 1;
			stroke: #D1D1D1;
			shape-rendering: crispEdges;
		}

		.legendTitle {
			fill: #1A1A1A;
			color: #1A1A1A;
			text-anchor: middle;
			font-size: 10px;
		}

		.legendText {
			fill: #949494;
			text-anchor: start;
			font-size: 9px;
		}
		
		@media (min-width: 500px) {
		  .col-sm-3, .col-sm-9 {
			float: left;
		  }
		  .col-sm-9 {
			width: 75%;
		  }
		  .col-sm-3 {
			width: 25%;
		  }
		}
	  </style>
  </head>
  <body>

	<div id="cont" class="container-fluid text-center">
		<div class="row scatter">
			<h5 style="color: #3B3B3B;">Life expectancy versus GDP per Capita</h5>
			<h6 style="color: #A6A6A6;">Voronoi - Final</h6>
			<div class="col-sm-9">
				<div id="chart"></div>
			</div>
			<div id = "legend" class="col-sm-3" style="padding-right: 0px; padding-left: 0px;">
				<div class="legendTitle" style="font-size: 12px;">REGION</div>
				<div class="legendText" style="font-size: 11px; color: #BABABA;">click to select all countries within a region</div>
				<div id="legend"></div>
			</div>
		</div>
	</div>

	<script src="worldbank.js"></script>
    <script src="script.js"></script>
	
  </body>
</html><!DOCTYPE html>
<head>
<meta charset="utf-8">
<title>Issues Ratings</title>
<style>

body {
  font: 8px helvetica;
}

.axis path,
.axis line, 
.axis1 path,
.axis1 line {
  fill: none;
  stroke: #E6E7E8;
  shape-rendering: crispEdges;
}

.x.axis path, .x.axis1 path {
  display: none;
}

.line {
  fill: none;
  stroke-width: 1.5px;
}

.legend-box {
  cursor: pointer;  
}

#mouse-tracker {
  stroke: #E6E7E8;
  stroke-width: 1px;
}

.hover-line { 
  stroke: #E6E7E8;
  fill: none;
  stroke-width: 1px;
  left: 10px;
  shape-rendering: crispEdges;
  opacity: 1e-6;
}

.hover-text {
  stroke: none;
  font-size: 30px;
  font-weight: bold;
  fill: #000000;
}

.tooltip {
  font-weight: normal;
}

.brush .extent {
  stroke: #FFF;
  shape-rendering: crispEdges;
}

</style>
</head>
<body>


<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>

<div id="example"></div>
    <script src="graph.js" charset="utf-8"></script>
</html><!DOCTYPE html>
<html>
  <head>
    <title>Custom Elements</title>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?2.3.2"></script>
    <style type="text/css">

    body {
      margin: 0;
    }

    </style>
  </head>
  <body>
    <canvas id="container"></canvas>
    <script type="text/javascript">

    var w = 960,
        h = 500;

    // creare a document fragment to draw "offline"
    var sketchFrag = document.createDocumentFragment();

    // var sketch = d3.select(sketchFrag).append("svg")
    var sketch = d3.select("body").append("svg")
        .attr("width", w)
        .attr("height", h);

      var circ = sketch.selectAll("circle")
          .data(d3.range(50000))
          .enter().append("circle")
          .attr({
            x:function(d, i){ return ~~(Math.random()*w); },
            y: function(d, i){ return ~~(Math.random()*h); },
            radius: function(d, i){ return ~~(Math.random()*100)+10; },
            strokeStyle: "red"
          });
          
      sketch.call(custom);

    function custom(selection) {
      var canvas = document.getElementById('container');
      var context = canvas.getContext("2d");
      
      selection.each(function() {
        var root = this;

        canvas.style.position = "absolute";
        canvas.style.top = root.offsetTop + "px";
        canvas.style.left = root.offsetLeft + "px";

        // It'd be nice to use DOM Mutation Events here instead.
        // However, they appear to arrive irregularly, causing choppy animation.
        // d3.timer(redraw);
        redraw();

        // Clear the canvas and then iterate over child elements.
        function redraw() {

          canvas.width = root.getAttribute("width");
          canvas.height = root.getAttribute("height");
          
          sketch.selectAll('circle')
            .each(function(){
              var d = d3.select(this);
              context.strokeStyle = d.attr("strokeStyle");
              context.beginPath();
              context.arc(d.attr("x"), d.attr("y"), d.attr("radius"), 0, 2 * Math.PI);
              context.stroke();
            });
        }
      });
    };

    </script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
}

line {
  fill: none;
  stroke: red;
  stroke-width: 1.5px;
}

circle {
  fill: red;
}

rect {
  fill: none;
  cursor: crosshair;
  pointer-events: all;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var points = [[474,276],[586,393],[378,388],[338,323],[341,138],[547,252],[589,148],[346,227],[365,108],[562,62]];

var width = 960,
    height = 500;

var line = d3.svg.line()
    .interpolate("cardinal");

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var path = svg.append("path")
    .datum(points)
    .attr("d", line);

var line = svg.append("line");

var circle = svg.append("circle")
    .attr("cx", -10)
    .attr("cy", -10)
    .attr("r", 3.5);

svg.append("rect")
    .attr("width", width)
    .attr("height", height)
    .on("mousemove", mousemoved);

function mousemoved() {
  var m = d3.mouse(this),
      p = closestPoint(path.node(), m);
  line.attr("x1", p[0]).attr("y1", p[1]).attr("x2", m[0]).attr("y2", m[1]);
  circle.attr("cx", p[0]).attr("cy", p[1]);
}

function closestPoint(pathNode, point) {
  var pathLength = pathNode.getTotalLength(),
      precision = pathLength / pathNode.pathSegList.numberOfItems * .125,
      best,
      bestLength,
      bestDistance = Infinity;

  // linear scan for coarse approximation
  for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {
    if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {
      best = scan, bestLength = scanLength, bestDistance = scanDistance;
    }
  }

  // binary search for precise estimate
  precision *= .5;
  while (precision > .5) {
    var before,
        after,
        beforeLength,
        afterLength,
        beforeDistance,
        afterDistance;
    if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {
      best = before, bestLength = beforeLength, bestDistance = beforeDistance;
    } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {
      best = after, bestLength = afterLength, bestDistance = afterDistance;
    } else {
      precision *= .5;
    }
  }

  best = [best.x, best.y];
  best.distance = Math.sqrt(bestDistance);
  return best;

  function distance2(p) {
    var dx = p.x - point[0],
        dy = p.y - point[1];
    return dx * dx + dy * dy;
  }
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.line {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
}

.voronoi path {
  fill: none;
  pointer-events: all;
  stroke: #000;
  stroke-opacity: .15;
}

.voronoi circle {
  fill: red;
  display: none;
}

.voronoi :hover circle {
  display: inline;
}

.voronoi :hover path {
  stroke: red;
  stroke-opacity: 1;
}

#subdivision {
  position: absolute;
  top: 20px;
  left: 20px;
}

#subdivision input {
  width: 200px;
}

</style>
<div id="subdivision">
  <input type="range" min="1" max="80" value="8">
  <output name="subdivision"></output>
</div>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var points = [[474,276],[586,393],[378,388],[338,323],[341,138],[547,252],[589,148],[346,227],[365,108],[562,62]];

var width = 960,
    height = 500;

var voronoi = d3.geom.voronoi()
    .clipExtent([[-2, -2], [width + 2, height + 2]]);

var line = d3.svg.line()
    .interpolate("cardinal");

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var path = svg.append("path")
    .datum(points)
    .attr("class", "line")
    .attr("d", line);

var cell = svg.append("g")
    .attr("class", "voronoi")
  .selectAll("g");

var output = d3.select("output");

var input = d3.select("input")
    .on("change", function() { resample(+this.value); })
    .each(function() { resample(+this.value); });

function resample(samplesPerSegment) {
  output.text(samplesPerSegment);
  cell = cell.data(voronoi(sample(path.node(), samplesPerSegment)));
  cell.exit().remove();
  var cellEnter = cell.enter().append("g");
  cellEnter.append("circle").attr("r", 3.5);
  cellEnter.append("path");
  cell.select("circle").attr("transform", function(d) { return "translate(" + d.point + ")"; });
  cell.select("path").attr("d", function(d) { return "M" + d.join("L") + "Z"; });
}

function sample(pathNode, samplesPerSegment) {
  var pathLength = pathNode.getTotalLength(),
      precision = pathLength / pathNode.pathSegList.numberOfItems / samplesPerSegment,
      samples = [];
  for (var sample, sampleLength = 0; sampleLength <= pathLength; sampleLength += precision) {
    sample = pathNode.getPointAtLength(sampleLength);
    samples.push([sample.x, sample.y]);
  }
  return samples;
}

</script>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Fractal treemap</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
        <script src="http://d3js.org/topojson.v1.min.js"></script>
        <script src="index.js"></script>
    </head>
    <body onload="main()"></body>
</html><!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Fractal tree depth map</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
        <script src="http://d3js.org/topojson.v1.min.js"></script>
        <script src="index.js"></script>
    </head>
    <body onload="main()"></body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis--y path {
  display: none;
}

.cities {
  fill: none;
  stroke: #777;
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-opacity: .15;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var months,
    monthFormat = d3.time.format("%Y-%m");

var margin = {top: 20, right: 30, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("unemployment.tsv", type, function(error, cities) {
  x.domain(d3.extent(months));
  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]);

  svg.append("g")
      .attr("class", "axis axis--x")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.svg.axis()
        .scale(x)
        .orient("bottom"));

  svg.append("g")
      .attr("class", "axis axis--y")
      .call(d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(10, "%"))
    .append("text")
      .attr("x", 4)
      .attr("y", 7)
      .attr("dy", ".35em")
      .style("font-weight", "bold")
      .text("Unemployment Rate");

  svg.append("g")
      .attr("class", "cities")
    .selectAll("path")
      .data(cities)
    .enter().append("path")
      .attr("d", function(d) { return line(d.values); });
});

function type(d, i) {
  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);
  return {
    name: d.name,
    values: months.map(function(m) {
      return {
        date: m,
        value: d[monthFormat(m)] / 100
      };
    })
  };
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">

<style>

.node {
  cursor: pointer;
}

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node text {
  font: 10px sans-serif;
}

.link {
  fill: none;
  /*stroke: steelblue;*/
  opacity: 0.3;
  /*stroke-width: 1.5px;*/
}

#levels{
  margin-left: 120px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script></script>
<button type="button" onclick="collapseAll()">Collapse All</button>
<button type="button" onclick="expandAll()">Expand All</button>
<div id="viz"></div>
<script>
var margin = {top: 20, right: 120, bottom: 20, left: 120},
    width = 1060 - margin.right - margin.left,
    height = 1200 - margin.top - margin.bottom;
    
var i = 0,
    duration = 750,// animation duration
    root;// stores the tree structure in json format

var tree = d3.layout.tree()
    .size([height, width]);

var edge_weight = d3.scale.linear()
					.domain([0, 100])
                    .range([0, 100]);

var diagonal = d3.svg.diagonal()
    .projection(function(d) { return [d.y, d.x]; });

// adding the svg to the html structure
var svg = d3.select("div#viz").append("svg")
    .attr("width", width + margin.right + margin.left)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

//loading the json file
d3.json("data.json", function(error, flare) {
  edge_weight.domain([0,flare.size]);
  root = flare;
  root.x0 = height / 2;
  root.y0 = 0;
  
  root.children.forEach(collapse);
  update(root);
});

d3.select(self.frameElement).style("height", "800px");

/**
 * Updates the node.
 * cloppases and expands the node bases on the structure of the source
 * all 'children' nodes are expanded and '_children' nodes collapsed
 * @param {json structure} source
 */
function update(source) {
  // Compute the new tree layout.
  var nodes = tree.nodes(root).reverse(),
      links = tree.links(nodes);

  // Normalize for fixed-depth.
  nodes.forEach(function(d) { d.y = d.depth * 180; });

  // Update the nodesâ€¦
  var node = svg.selectAll("g.node")
      .data(nodes, function(d) { return d.id || (d.id = ++i); });

  // Enter any new nodes at the parent's previous position.
  var nodeEnter = node.enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + source.y0 + "," + source.x0 + ")"; })
      .on("click", click);

  nodeEnter.append("circle")
      .attr("r", 1e-6)
      .style("fill", function(d) { return d._children ? "lightsteelblue" : "#fff"; });

  nodeEnter.append("text")
      .attr("x", function(d) { return d.children || d._children ? -10 : 10; })
      .attr("dy", ".35em")
      .attr("text-anchor", function(d) { return d.children || d._children ? "end" : "start"; })
      .text(function(d) { return d.key; })
      .style("fill-opacity", 1e-6);

  // Transition nodes to their new position.
  var nodeUpdate = node.transition()
      .duration(duration)
      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; });

  nodeUpdate.select("circle")
      .attr("r", function(d){ return edge_weight(d.size/2);})
      .style("fill", function(d) { 
      return d._children ? "lightsteelblue" : "#fff"; });

  nodeUpdate.select("text")
      .style("fill-opacity", 1);

  // Transition exiting nodes to the parent's new position.
  var nodeExit = node.exit().transition()
      .duration(duration)
      .attr("transform", function(d) { return "translate(" + source.y + "," + source.x + ")"; })
      .remove();

  nodeExit.select("circle")
      .attr("r", 1e-6);

  nodeExit.select("text")
      .style("fill-opacity", 1e-6);

  // Update the linksâ€¦
  var link = svg.selectAll("path.link")
      .data(links, function(d) { return d.target.id; });

  // Enter any new links at the parent's previous position.
  link.enter().insert("path", "g")
      .attr("class", "link")
      .attr("stroke-width", function(d){
      	return 1;
      })
      .attr("d", function(d) {
        var o = {x: source.x0, y: source.y0};
        return diagonal({source: o, target: o});
      })
      .attr("stroke", function(d){ 
      	return linkColor(d.target.colorCode);});

  // Transition links to their new position.
  link.transition()
      .duration(duration)
      .attr("d", function(d){
      /* calculating the top shift */
      var source = {x: d.source.x - edge_weight(calculateLinkSourcePosition(d)), y: d.source.y};
      var target = {x: d.target.x, y: d.target.y};
      return diagonal({source: source, target: target});
      })
      .attr("stroke-width", function(d){
      	return edge_weight(d.target.size);
      });

  // Transition exiting nodes to the parent's new position.
  link.exit().transition()
      .duration(duration)
      .attr("d", function(d) {
        var o = {x: source.x, y: source.y};
        return diagonal({source: o, target: o});
      })
      .remove();

  // Stash the old positions for transition.
  nodes.forEach(function(d) {
    d.x0 = d.x;
    d.y0 = d.y;
  });
}

/**
 * Calculates the source y-axis position of the link.
 * @param {json structure} link
 */
function calculateLinkSourcePosition(link) {
	targetID = link.target.id;
	var childrenNumber = link.source.children.length;
	var widthAbove = 0;
	for (var i = 0; i < childrenNumber; i++)
	{
		if (link.source.children[i].id == targetID)
		{
			// we are done
			widthAbove = widthAbove + link.source.children[i].size/2;
			break;
		}else {
			// keep adding
			widthAbove = widthAbove + link.source.children[i].size
		}
	}
	return link.source.size/2 - widthAbove;
}

/*
 * Toggle children on click.
 * @param {node} d
 */ 
function click(d) {
  if (d.children) {
    d._children = d.children;
    d.children = null;
  } else {
    d.children = d._children;
    d._children = null;
  }
  update(d);
}

/*
 * Collapses the node d and all the children nodes of d
 * @param {node} d
*/
function collapse(d) {
  if (d.children) {
    d._children = d.children;
    d._children.forEach(collapse);
    d.children = null;
  }
}

/*
 * Collapses the node in the tree
*/
function collapseAll() {
	root.children.forEach(collapse);
	update(root);
}

/*
 * Expands the node d and all the children nodes of d
 * @param {node} d
*/
function expand(d) {
	if (d._children) {
		d.children = d._children;
		d._children = null;
	}
	if (d.children) {
		d.children.forEach(expand);
	}
	
}
/*
 * Expands all the nodes in the tree
*/
function expandAll() {
	root.children.forEach(expand);
	update(root);
}

/*
 * dictionary of colors corresponding to the different color categories
 * defaults to a generic blue if there are no defined color categories
 * in the data set
*/
function linkColor(linkCode) {
	switch (linkCode)
	{
	  case 'Exploration Actions': 
	  	return '#0000FF';//blue
	    break;
	  case 'Task Actions':
	  	return '#FF7F00';//orange
	  	break;
	  case 'App Actions': 
		return '#FF0000';//red
		break;
	  case 'Insight Actions':
		return '#7F007F';//purple
		break;
	  case 'Meta Actions':
		  return '#00FFFF';//cyan
		  break;
	  default:
		  return '#0950D0';//generic blue
		  break;
	}
}
</script>
</body><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  width: 960px;
  margin: auto;
  position: relative;
}

svg {
  font: 11px "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis--y path {
  display: none;
}

.cities {
  fill: none;
  stroke: #aaa;
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-width: 1.5px;
}

.city--hover {
  stroke: #000;
}

.focus text {
  text-anchor: middle;
  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;
}

.voronoi path {
  fill: none;
  pointer-events: all;
}

.voronoi--show path {
  stroke: red;
  stroke-opacity: .2;
}

#form {
  position: absolute;
  top: 20px;
  right: 30px;
}

</style>
<label id="form" for="show-voronoi">
  Show Voronoi
  <input type="checkbox" id="show-voronoi" disabled>
</label>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var months,
    monthFormat = d3.time.format("%Y-%m");

var margin = {top: 20, right: 30, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var voronoi = d3.geom.voronoi()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); })
    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);

var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("unemployment.tsv", type, function(error, cities) {
  x.domain(d3.extent(months));
  y.domain([0, d3.max(cities, function(c) { return d3.max(c.values, function(d) { return d.value; }); })]).nice();

  svg.append("g")
      .attr("class", "axis axis--x")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.svg.axis()
        .scale(x)
        .orient("bottom"));

  svg.append("g")
      .attr("class", "axis axis--y")
      .call(d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(10, "%"))
    .append("text")
      .attr("x", 4)
      .attr("dy", ".32em")
      .style("font-weight", "bold")
      .text("Unemployment Rate");

  svg.append("g")
      .attr("class", "cities")
    .selectAll("path")
      .data(cities)
    .enter().append("path")
      .attr("d", function(d) { d.line = this; return line(d.values); });

  var focus = svg.append("g")
      .attr("transform", "translate(-100,-100)")
      .attr("class", "focus");

  focus.append("circle")
      .attr("r", 3.5);

  focus.append("text")
      .attr("y", -10);

  var voronoiGroup = svg.append("g")
      .attr("class", "voronoi");

  voronoiGroup.selectAll("path")
      .data(voronoi(d3.nest()
          .key(function(d) { return x(d.date) + "," + y(d.value); })
          .rollup(function(v) { return v[0]; })
          .entries(d3.merge(cities.map(function(d) { return d.values; })))
          .map(function(d) { return d.values; })))
    .enter().append("path")
      .attr("d", function(d) { return "M" + d.join("L") + "Z"; })
      .datum(function(d) { return d.point; })
      .on("mouseover", mouseover)
      .on("mouseout", mouseout);

  d3.select("#show-voronoi")
      .property("disabled", false)
      .on("change", function() { voronoiGroup.classed("voronoi--show", this.checked); });

  function mouseover(d) {
    d3.select(d.city.line).classed("city--hover", true);
    d.city.line.parentNode.appendChild(d.city.line);
    focus.attr("transform", "translate(" + x(d.date) + "," + y(d.value) + ")");
    focus.select("text").text(d.city.name);
  }

  function mouseout(d) {
    d3.select(d.city.line).classed("city--hover", false);
    focus.attr("transform", "translate(-100,-100)");
  }
});

function type(d, i) {
  if (!i) months = Object.keys(d).map(monthFormat.parse).filter(Number);
  var city = {
    name: d.name.replace(/ (msa|necta div|met necta|met div)$/i, ""),
    values: null
  };
  city.values = months.map(function(m) {
    return {
      city: city,
      date: m,
      value: d[monthFormat(m)] / 100
    };
  });
  return city;
}

</script>
<!DOCTYPE html>
<html>
  <head>
    <!-- Load D3 from site -->
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  </head>
 
    <!-- CSS (Styling) -->
    <style type="text/css">
      .axis path,
        .axis line {
            fill: none;
            stroke: black;
            shape-rendering: crispEdges;
        }
        .axis text {
            font-family: sans-serif;
            font-size: 11px;
        }
    </style>
    <!-- End CSS (Styling) -->
 
  <body>
    <h2>Bar Chart</h2>
    <p>This is a data visualization using bar charts </p>
    <h3></h3>
  
  <!-- Begin D3 Javascript -->
  <script type="text/javascript">
  
            // ===== Start Scatterplot =====
            // Setup settings for graphic
            var canvas_width = 500;
            var canvas_height = 200;
            var padding = 25;  // Padding around canvas, i.e. replaces the 0 of scale

            // Create SVG element
            var svg = d3.select("h3")  // This is where we put our vis
                .append("svg")
                .attr("width", canvas_width)
                .attr("height", canvas_height)

            // scatterplot data is an array of arrays
            var data_scatter = [[5, 20], [480, 90], [250, 50], [100, 50], [330, 30], [475, 33],
                [77, 10], [150, 150]];  // Can add additional values and will scale

            // Define Scales - scales map an input domain with an output range
            var xScale = d3.scale.linear()
                .domain([0, d3.max(data_scatter, function(d) {
                    return d[0];  // get the input domain as first column of array
                })])
                .range([padding, canvas_width - padding * 2])  // set the output range
                .nice();  // Make decimals round up nicely

            var yScale = d3.scale.linear()
                .domain([0, d3.max(data_scatter, function(d) {
                    return d[1];  // gets the input domain as the second column of array
                })])
                .range([canvas_height - padding, padding])  // set the output range
                .nice();  // Make decimals round up nicely

            // Add circles from data
            svg.selectAll("circle")
                .data(data_scatter)
                .enter()
                .append("circle")
                .attr("x", function(d) {
                    return xScale(d[0]);  // Location of x
                })
                .attr("y", function(d) {
                    return yScale(d[1]);  // Location of y
                })
                .attr("r", 4)  // Radius
                .attr("cx", function(d) {
                    return xScale(d[0]);  // Returns scaled circle x
                })
                .attr("cy", function(d) {
                    return yScale(d[1]);  // Returns scaled circle y
                });

            // Add Text Labels
            svg.selectAll("text")
                .data(data_scatter)
                .enter()
                .append("text")
                .text(function(d) {
                    return d[0] + "," + d[1];
                })
                .attr("x", function(d) {
                    return xScale(d[0]);  // Returns scaled location of x
                })
                .attr("y", function(d) {
                    return yScale(d[1]);  // Returns scaled circle y
                })
                .attr("font_family", "sans-serif")  // Font type
                .attr("font-size", "11px")  // Font size
                .attr("fill", "darkgreen");   // Font color

            // Define X axis and attach to graph
            var xAxis = d3.svg.axis()  // Create an x axis
                .scale(xScale)      // Scale x axis
                .orient("bottom")  // Put text on bottom of axis line
                .ticks(10);  // Set rough # of ticks (optional)

            svg.append("g")     // Append a group element (itself invisible, but helps 'group' elements)
                .attr("class", "axis")  // Assign the 'axis' CSS
                .attr("transform", "translate(0," + (canvas_height - padding) + ")")  // Place axis at bottom
                .call(xAxis);  // Call function to create axis

            // Define Y axis and attach to graph
            var yAxis = d3.svg.axis()  // Create a y axis
                .scale(yScale)  // Scale y axis
                .orient("left")
                .ticks(5);  // Set rough # of ticks (optional)

            svg.append("g")
                .attr("class", "axis")
                .attr("transform", "translate(" + padding + ",0)")
                .call(yAxis);
 
  </script>
  
  </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Bar Chart, Framed</title>
		<script type="text/javascript" src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<link href="style.css" rel="stylesheet" type="text/css" />
		
	</head>
	<body>

		<div id="container">

			<h1>Use of renewable energy</h1>

			<p>Use of renewable energy in % of total energy generation. <strong>Source:</strong> <a href="https://data.oecd.org/energy/renewable-energy.htm#indicator-chart" target="_blank">OECD</a>, 2015</h3></a></p>

		</div>

		<script type="text/javascript">		

			var w = 700;
			var h = 900;
			var padding = [ 20, 10, 30, 100 ];  //Top, right, bottom, left



			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);



			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");


			//Now SVG goes into #container instead of body
			var svg = d3.select("#container")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("renewable-energy.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.y2012, +b.y2012);
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.y2012;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.country; } ));

				//Bind data to groups (not bars directly)
				var groups = svg.selectAll("g")
								.data(data)
								.enter()
								.append("g")
								.attr("class", "bar");

				//Add a rect to each group
				var rects = groups.append("rect")
					.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.country);
					})
					.attr("width", 0)
					.attr("height", heightScale.rangeBand())
					.attr("fill", "#fff");

				//Add a text element to each group
				groups.append("text")
					.attr("x", function(d) {
						return padding[3] + widthScale(d.y2012) - 3;
					})
					.attr("y", function(d) {
						return heightScale(d.country) + 11;
					})
					.text(function(d) {
						return d.y2012;
					});

				rects.transition()
					.delay(function(d, i) {
						return i * 50;
					})
					.duration(1000)
					.attr("width", function(d) {
						return widthScale(d.y2012);
					});

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y-%m").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.yVariable); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("data.csv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
    //console.log(d.date);
  });

  var browsers = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, yVariable: +d[name]};
      })
    };
  });
  console.log("browsers")
  console.log(browsers);

  // get an array of all of the values that we can 
  // compute the max of 
  var marketShares = [];
  color.domain().forEach(function(name) {
    data.map(function(d) { return +d[name] }).forEach(function(el){
      marketShares.push(el);
    })
  })

  console.log("max marketShare")
  console.log(d3.max(marketShares));

  console.log("marketShares");
  console.log(marketShares);

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(browsers, function(c) { return d3.min(c.values, function(v) { return v.yVariable; }); }),
    100// d3.max(browsers, function(c) { return d3.max(c.values, function(v) { return v.yVariable; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("x", 0) // y(d3.max(marketShares))
      .attr("y", -margin.left*.75)
      .attr("transform", "translate(0," + y(d3.max(marketShares)) + ")" + " " + "rotate(-90)")
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Market Share (%)");

  console.log(d3.max(function(d) { return d.yVariable }))

  var browser = svg.selectAll(".browser")
      .data(browsers)
    .enter().append("g")
      .attr("class", "browser");

  browser.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  
  browser.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.yVariable) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .style("opacity", 1)
      .text(function(d) { return d.name; });
  
});

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<script src="http://d3js.org/d3.v3.js"></script>
<style>
 
path.link {
  fill: none;
  stroke: #666;
  stroke-width: 1.5px;
}
 
path.link.twofive {
  opacity: 0.25;
}
 
path.link.fivezero {
  opacity: 0.50;
}
 
path.link.sevenfive {
  opacity: 0.75;
}
 
path.link.onezerozero {
  opacity: 1.0;
}
 
circle {
  fill: #ccc;
  stroke: #fff;
  stroke-width: 1.5px;
}
 
text {
  fill: #000;
  font: 10px sans-serif;
  pointer-events: none;
}
 
</style>
<body>
<script>
 
// get the data
d3.csv("force.csv", function(error, links) {
 
var nodes = {};
 
// Compute the distinct nodes from the links.
links.forEach(function(link) {
    link.source = nodes[link.source] || 
        (nodes[link.source] = {name: link.source});
    link.target = nodes[link.target] || 
        (nodes[link.target] = {name: link.target});
    link.value = +link.value;
});
 
var width = 960,
    height = 500,
    color = d3.scale.category20c();

 
var force = d3.layout.force()
    .nodes(d3.values(nodes))
    .links(links)
    .size([width, height])
    .linkDistance(60)
    .charge(-300)
    .on("tick", tick)
    .start();
 
// Set the range
var  v = d3.scale.linear().range([0, 100]);
 
// Scale the range of the data
v.domain([0, d3.max(links, function(d) { return d.value; })]);
 
// asign a type per value to encode opacity
links.forEach(function(link) {
	if (v(link.value) <= 25) {
		link.type = "twofive";
	} else if (v(link.value) <= 50 && v(link.value) > 25) {
		link.type = "fivezero";
	} else if (v(link.value) <= 75 && v(link.value) > 50) {
		link.type = "sevenfive";
	} else if (v(link.value) <= 100 && v(link.value) > 75) {
		link.type = "onezerozero";
	}
});
 
var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);
 
// build the arrow.
svg.append("svg:defs").selectAll("marker")
    .data(["end"])      // Different link/path types can be defined here
  .enter().append("svg:marker")    // This section adds in the arrows
    .attr("id", String)
    .attr("viewBox", "0 -5 10 10")
    .attr("refX", 15)
    .attr("refY", -1.5)
    .attr("markerWidth", 6)
    .attr("markerHeight", 6)
    .attr("orient", "auto")
  .append("svg:path")
    .attr("d", "M0,-5L10,0L0,5");
 
// add the links and the arrows
var path = svg.append("svg:g").selectAll("path")
    .data(force.links())
  .enter().append("svg:path")
    .attr("class", function(d) { return "link " + d.type; })
    .attr("marker-end", "url(#end)");
 
// define the nodes
var node = svg.selectAll(".node")
    .data(force.nodes())
  .enter().append("g")
    .attr("class", "node")
    .on("click", click)
    .on("dblclick", dblclick)
    .call(force.drag);
 
// add the nodes
node.append("circle")
    .attr("r", 5)
    .style("fill", function(d) { return color(d.name); });

 
// add the text 
node.append("text")
    .attr("x", 12)
    .attr("dy", ".35em")
    .text(function(d) { return d.name; });
 
// add the curvy lines
function tick() {
    path.attr("d", function(d) {
        var dx = d.target.x - d.source.x,
            dy = d.target.y - d.source.y,
            dr = Math.sqrt(dx * dx + dy * dy);
        return "M" + 
            d.source.x + "," + 
            d.source.y + "A" + 
            dr + "," + dr + " 0 0,1 " + 
            d.target.x + "," + 
            d.target.y;
    });
 
    node
        .attr("transform", function(d) { 
		    return "translate(" + d.x + "," + d.y + ")"; });
}
 
// action to take on mouse click
function click() {
    d3.select(this).select("text").transition()
        .duration(750)
        .attr("x", 22)
        .style("stroke", "lightsteelblue")
        .style("stroke-width", ".5px")
        .style("font", "20px sans-serif");
    d3.select(this).select("circle").transition()
        .duration(750)
        .attr("r", 16);
}
 
// action to take on mouse double click
function dblclick() {
    d3.select(this).select("circle").transition()
        .duration(750)
        .attr("r", 6);
    d3.select(this).select("text").transition()
        .duration(750)
        .attr("x", 12)
        .style("stroke", "none")
        .style("fill", "black")
        .style("stroke", "none")
        .style("font", "10px sans-serif");
}
 
});
 
</script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<title>Canvas image zoom</title>
<style>
body {
  position: relative;
}

svg,
canvas {
    position: absolute;
}

.axis text {
    font: 10px sans-serif;
}

.axis path,
.axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
}

</style>
<script src="http://d3js.org/d3.v3.min.js"></script>
<body>
<script>

var imageObj = new Image();
imageObj.src = "http://www.html5canvastutorials.com/demos/assets/darth-vader.jpg";

var margin = {top: 20, right: 10, bottom: 20, left: 60},
    width = imageObj.width,
    height = imageObj.height;

var ctx;

var x = d3.scale.linear()
    .domain([0, imageObj.width])
    .range([0, width]);


var y = d3.scale.linear()
    .domain([0, imageObj.height])
    .range([height, 0]);

var xmin = x.domain()[0];
var xmax = x.domain()[1];
var ymin = y.domain()[0];
var ymax = y.domain()[1];
    
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");
    
var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");
    
var zoom = d3.behavior.zoom()
        .x(x)
        .y(y)
        .scaleExtent([1, 10])
        .on("zoom", refresh);

// Canvas is drawn first, and then SVG over the top.
var canvas = d3.select("body").append("canvas")
        .attr("width", imageObj.width)
        .attr("height", imageObj.height)
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
        .style("left", margin.left + "px")
        .style("top", margin.top + "px")
        .style("width", width + "px")
        .style("height", height + "px")
        .style("position", "absolute")
        .call(drawImage);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

// We make an invisible rectangle to intercept mouse events for zooming.
svg.append("rect")
    .attr("width", width)
    .attr("height", height)
    .style("fill", "000")
    .style("opacity", 1e-6)
    .call(zoom);

svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .call(removeZero);

svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .call(removeZero);

function drawImage(canvas) {
    ctx = canvas.node().getContext("2d");
    ctx.drawImage(imageObj, 0, 0);
}

// Keep an eye out for "translateExtent" or "xExtent" methods that may be
// added at some point to bound the limits of zooming and panning. Until then,
// this works.
function refresh() {
    var t = zoom.translate();
    var s = zoom.scale();
    var tx = t[0],
        ty = t[1];
    var xdom = x.domain();
    var reset_s = 0;
    if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {
        zoom.x(x.domain([xmin, xmax]));
        xdom = x.domain();
        reset_s = 1;
    }
    var ydom = y.domain();
    if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {
        zoom.y(y.domain([ymin, ymax]));
        ydom = y.domain();
        reset_s += 1;
    }
    if (reset_s == 2) { // Both axes are full resolution. Reset.
        zoom.scale(1);
        tx = 0;
        ty = 0;
    }
    else {
        if (xdom[0] < xmin) {
            tx = 0;
            x.domain([xmin, xdom[1] - xdom[0] + xmin]);
            xdom = x.domain();
        }
        if (xdom[1] > xmax) {
            xdom[0] -= xdom[1] - xmax;
            tx = -xdom[0]*width/(xmax-xmin)*s;
            x.domain([xdom[0], xmax]);
        }
        if (ydom[0] < ymin) {
            y.domain([ymin, ydom[1] - ydom[0] + ymin]);
            ydom = y.domain();
            ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;
        }
        if (ydom[1] > ymax) {
            ydom[0] -= ydom[1] - ymax;
            ty = 0;
            y.domain([ydom[0], ymax]);
        }
    }
    // Reset (possibly) if hit an edge so that next focus event starts correctly.
    zoom.translate([tx, ty]);

    ctx.drawImage(imageObj, 
        tx*imageObj.width/width, ty*imageObj.height/height,
        imageObj.width*s, imageObj.height*s);
    svg.select(".x.axis").call(xAxis).call(removeZero);
    svg.select(".y.axis").call(yAxis).call(removeZero);
}

function removeZero(axis) {
    axis.selectAll("g").filter(function(d) { return !d; }).remove();
}

</script>
<!DOCTYPE html>
<html>
  <head>
    <title>Czech elections 2013: new government vs. opposition</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
	<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	
	
	<script>
	  // see http://leafletjs.com/reference.html
	  L_PREFER_CANVAS = true;
	</script>

	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
		 <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>
    <!--<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?1.29.1"></script>-->
    <style type="text/css">

		html, body, #map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}


    </style>
  </head>
  <body>
  
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Czech elections 2013: new government vs. opposition</a>
        </div>
      </div>
    </div>
    
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >The <strong>size</strong> of bubbles represents number of voters, the <strong>color</strong> represents the winner and the <strong>oppacity</strong> the margin of victory. Possible <span style="color:#00b">government</span> vs. <span style="color:#b00">opposition</span></div>

    </div>
    <div id="map" style="margin-top:40px;"></div>
    <script type="text/javascript">


		// Create the map
		var map = L.map('map',{zoomControl: false}).setView([50,15], 8);
		map.addControl( L.control.zoom({position: 'topright'}) );
		
		// add an OpenStreetMap tile layer
		// also see http://wiki.openstreetmap.org/wiki/Tiles
		//L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);
		
		//add circles
		//$.getJSON( "cz_president_2013_both_2_ring.json", function (data) {
		$.getJSON( "cz_psp_2013_ring_cssd-ano-kdu-csl_kscm-top-09-ods-usvit.json", function (data) {
		    $.each(data.features, function (index, value) {
				circle = L.circle([value.coordinates[1], value.coordinates[0]], Math.sqrt((parseInt(value.population.p6)+parseInt(value.population.p9))*2750), {
					color: class2color(value.classname),
					fillColor: class2color(value.classname),
					fillOpacity: 2*(Math.max(parseInt(value.population.p6),parseInt(value.population.p9)) / (parseInt(value.population.p6)+parseInt(value.population.p9))-0.5),
					weight: 0.1,
					className: value.classname,	//this does not seem to work, so hacked by class2color
				}).addTo(map);
				
				perc1 = Math.round(Math.max(parseInt(value.population.p6),parseInt(value.population.p9)) / (parseInt(value.population.p6)+parseInt(value.population.p9)) * 100);
				perc2 = 100 - perc1;
				
				circle.bindPopup(value.name + "<br>" + value.winner + " vyhrály " + perc1 + " % vs. " + perc2 + " % <br>(" +Math.max(value.population.p6,value.population.p9) + " : " + Math.min(value.population.p6,value.population.p9) + " hlasov)");
		  });
		});
		
		function class2color(className) {
		  if (className == 'cssd-ano-kdu-csl') return "#00b";
		  if (className == 'kscm-top-09-ods-usvit') return "#b00";
		  else return "#fff";
		}
	</script>
  </body>
</html>

<!DOCTYPE html>
<meta charset="utf-8">
<title>Canvas ImageData Zoom</title>
<style>
body {
  position: relative;
}

svg,
canvas {
    position: absolute;
}

.axis text {
    font: 10px sans-serif;
}

.axis path,
.axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
}

</style>
<script src="http://d3js.org/d3.v3.min.js"></script>
<body>
<script>

var margin = {top: 10, right: 10, bottom: 20, left: 30},
    width = 600,
    height = 400;

var ctx;
var imageObj = new Image();

var x = d3.scale.linear()
    .domain([0, width])
    .range([0, width]);


var y = d3.scale.linear()
    .domain([0, height])
    .range([height, 0]);

var xmin = x.domain()[0];
var xmax = x.domain()[1];
var ymin = y.domain()[0];
var ymax = y.domain()[1];
    
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");
    
var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");
    
var zoom = d3.behavior.zoom()
        .x(x)
        .y(y)
        .scaleExtent([1, 10])
        .on("zoom", refresh);

var color = d3.scale.linear()
        .domain([95, 115, 135, 155, 175, 195])
        .range(["#0a0", "#6c0", "#ee0", "#eb4", "#eb9", "#fff"]);

var canvas = d3.select("body").append("canvas")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
        .style("left", margin.left + "px")
        .style("top", margin.top + "px")
        .style("width", width + "px")
        .style("height", height + "px")
        .style("position", "absolute");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

// We make an invisible rectangle to intercept mouse events for zooming.
svg.append("rect")
    .attr("width", width)
    .attr("height", height)
    .style("fill", "000")
    .style("opacity", 1e-6)
    .call(zoom);

svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .call(removeZero);

svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .call(removeZero);

// Keep an eye out for "translateExtent" or "xExtent" methods that may be
// added at some point to bound the limits of zooming and panning. Until then,
// this works.
function refresh() {
    var t = zoom.translate();
    var s = zoom.scale();
    var tx = t[0],
        ty = t[1];
    var xdom = x.domain();
    var reset_s = 0;
    if ((xdom[1] - xdom[0]) >= (xmax - xmin)) {
        zoom.x(x.domain([xmin, xmax]));
        xdom = x.domain();
        reset_s = 1;
    }
    var ydom = y.domain();
    if ((ydom[1] - ydom[0]) >= (ymax - ymin)) {
        zoom.y(y.domain([ymin, ymax]));
        ydom = y.domain();
        reset_s += 1;
    }
    if (reset_s == 2) { // Both axes are full resolution. Reset.
        zoom.scale(1);
        tx = 0;
        ty = 0;
    }
    else {
        if (xdom[0] < xmin) {
            tx = 0;
            x.domain([xmin, xdom[1] - xdom[0] + xmin]);
            xdom = x.domain();
        }
        if (xdom[1] > xmax) {
            xdom[0] -= xdom[1] - xmax;
            tx = -xdom[0]*width/(xmax-xmin)*s;
            x.domain([xdom[0], xmax]);
        }
        if (ydom[0] < ymin) {
            y.domain([ymin, ydom[1] - ydom[0] + ymin]);
            ydom = y.domain();
            ty = -(ymax-ydom[1])*height/(ymax-ymin)*s;
        }
        if (ydom[1] > ymax) {
            ydom[0] -= ydom[1] - ymax;
            ty = 0;
            y.domain([ydom[0], ymax]);
        }
    }
    // Reset (possibly) if hit an edge so that next focus event starts correctly.
    zoom.translate([tx, ty]);

    ctx.drawImage(imageObj, 
        tx*imageObj.width/width, ty*imageObj.height/height,
        imageObj.width*s, imageObj.height*s);
    svg.select(".x.axis").call(xAxis).call(removeZero);
    svg.select(".y.axis").call(yAxis).call(removeZero);
}

function removeZero(axis) {
    axis.selectAll("g").filter(function(d) { return !d; }).remove();
}

d3.json("heatmap.json", function(error, heatmap) {
    xmax = heatmap[0].length,
    ymax = heatmap.length;
    x.domain([0, xmax]);
    y.domain([0, ymax]);
    d3.select("canvas")
        .attr("width", xmax)
        .attr("height", ymax)
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
        .call(drawImage);

  // Compute the pixel colors; scaled by CSS.
    function drawImage(canvas) {
        ctx = canvas.node().getContext("2d");
        var img = ctx.createImageData(xmax, ymax);
        for (var y = 0, p = -1; y < ymax; ++y) {
            for (var x = 0; x < xmax; ++x) {
                var c = d3.rgb(color(heatmap[y][x]));
                img.data[++p] = c.r;
                img.data[++p] = c.g;
                img.data[++p] = c.b;
                img.data[++p] = 255;
            }
        }
        ctx.putImageData(img, 0, 0);
        imageObj.src = canvas.node().toDataURL();
    }
});
</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  background-color: #f5f5f5;
}

.axis path,
.axis line {
  fill: none;
  stroke: #a9a9a9;
  shape-rendering: crispEdges;
}
  
.axis text{
   stroke: #a9a9a9
 }


.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("linear")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name], name:name};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { console.log(d); return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });
  
	city.selectAll('circle')
    .data(function(d){ return d.values})
    .enter().append('circle')
    .attr("cx", function(d) { return x(d.date) })
    .attr("cy", function(d) { return y(d.temperature) })
    .attr("r", 2.4)
  	.style('fill', function(d){ return color(d.name)});

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; })
  		.style('fill', function(d){ return color(d.name)});
});

</script>
<!DOCTYPE html>
<html>
<head>
    <title>Streamgraph</title>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.v2.js?2.8.0"></script>
    <link type="text/css" rel="stylesheet" href="button.css"/>
    <script type="text/javascript" src="stream_layers.js"></script>
    <script type="text/javascript" src="stream-chart.js"></script>
</head>
<body>
<div id="chart">
<p>
</div>
<script>
    var n = 8, // number of layers
        m = 54; // number of samples per layer

    var colors = d3.range(n).map(function() { return d3.interpolateRgb("#aad", "#556")(Math.random()); });

    var streamgraph = streamgraphChart()
            .margin({top: 10, right: 10, bottom: 10, left: 10})
            .color(function(d, i) { return colors[i]; });
    d3.text("weekly_hours.csv", function(text) {
        var data = d3.csv.parseRows(text).map(function(row) {
            return row.map(function(value, idx) {
              return { x: idx, y: +value };
            });
        });
        console.log(data);
        d3.select("#chart")
                .datum(data)
                .call(streamgraph);
      });


</script>
</body>
</html><!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Entity recognition diagram</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="d3.v3.min.js"></script>
        <script src="index.js"></script>
    </head>
    <body onload="main()">
    </body>
</html><!DOCTYPE html>
<html>
<head>
    <title>Streamgraph</title>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.v2.js?2.8.0"></script>
    <link type="text/css" rel="stylesheet" href="button.css"/>
    <script type="text/javascript" src="stream_layers.js"></script>
    <script type="text/javascript" src="stream-chart.js"></script>
</head>
<body>
<div id="chart">
<p>
</div>
<script>
    var n = 8, // number of layers
        m = 54; // number of samples per layer

    var colors = d3.range(n).map(function() { return d3.interpolateRgb("#aad", "#556")(Math.random()); });

    var streamgraph = streamgraphChart()
            .margin({top: 10, right: 10, bottom: 10, left: 10})
            .color(function(d, i) { return colors[i]; });
    d3.text("weekly_hours.csv", function(text) {
        var data = d3.csv.parseRows(text).map(function(row, idx) {
            return row.map(function(value) {
              return { x : idx, y: +value};
            });
        });
        console.log(data);
        d3.select("#chart")
                .datum(data)
                .call(streamgraph);
      });


</script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>D3 Example</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3-legend/1.1.0/d3-legend.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3-tip/0.6.3/d3-tip.min.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <style>
    
      .axis text {
        font-family: 'Open Sans', sans-serif;
        font-size: 19pt;
      }
      .axis .label {
        font-size: 20pt;
      }

      .axis path, .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
      }

      .color-legend text {
        font-family: 'Open Sans', sans-serif;
        font-size: 19pt;
      }
      
      .d3-tip {
        font-family: 'Open Sans', sans-serif;
        font-size: 19pt;
        line-height: 1;
        padding: 7px;
        background: black;
        color: lightgray;
        border-radius: 20px;
      }
      
    </style>
  </head>
  <body>
    <script>
      var outerWidth = 960;
      var outerHeight = 500;
      var margin = { left: 130, top: 44, right: 30, bottom: 47 };
      var barPadding = 0.2;

      var xColumn = "country";
      var yColumn = "population";
      var colorColumn = "religion";
      var layerColumn = colorColumn;
      
      var hoveredColorValue;
      var hoveredStrokeColor = "black";

      var innerWidth  = outerWidth  - margin.left - margin.right;
      var innerHeight = outerHeight - margin.top  - margin.bottom;

      var svg = d3.select("body").append("svg")
        .attr("width",  outerWidth)
        .attr("height", outerHeight);
      var g = svg.append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      
      // This is the layer where the bars are drawn.
      var baseBarLayer = g.append("g");
      
      // This layer contains a semi-transparent overlay
      // that fades out the base bars.
      var overlayRect = g.append("g")
        .append("rect")
        .attr("width", innerWidth)
        .attr("height", innerHeight)
        .style("pointer-events", "none");
      
      // This contains the subset of bars rendered on top
      // when you hover over the entries in the color legend.
      var foregroundBarLayer = g.append("g");
      
      var xAxisG = g.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + innerHeight + ")");
      var yAxisG = g.append("g")
        .attr("class", "y axis");
      var colorLegendG = g.append("g")
        .attr("class", "color-legend")
        .attr("transform", "translate(596, 0)");

      var xScale = d3.scale.ordinal().rangeBands([0, innerWidth], barPadding);
      var yScale = d3.scale.linear().range([innerHeight, 0]);
      var colorScale = d3.scale.category10();
      
      var tipNumberFormat = d3.format(",");
      var tip = d3.tip()
        .attr("class", "d3-tip")
        .offset([-10, 0])
        .html(function(d) {
          return [
            d[colorColumn],
            " in ",
            d[xColumn],
            ": ",
            tipNumberFormat(d[yColumn])
          ].join("");
        });
      g.call(tip);
      
      // Use a modified SI formatter that uses "B" for Billion.
      var siFormat = d3.format("s");
      var customTickFormat = function (d){
        return siFormat(d).replace("G", "B");
      };

      var xAxis = d3.svg.axis().scale(xScale).orient("bottom")
        .outerTickSize(0);
      var yAxis = d3.svg.axis().scale(yScale).orient("left")
        .ticks(5)
        .tickFormat(customTickFormat)
        .outerTickSize(0);

      var colorLegend = d3.legend.color()
        .scale(colorScale)
        .shapePadding(6.24)
        .shapeWidth(25)
        .shapeHeight(25)
        .labelOffset(5);

      function render(data){

        var nested = d3.nest()
          .key(function (d){ return d[layerColumn]; })
          .entries(data);

        var stack = d3.layout.stack()
          .y(function (d){ return d[yColumn]; })
          .values(function (d){ return d.values; });

        var layers = stack(nested.reverse()).reverse();

        xScale.domain(layers[0].values.map(function (d){
          return d[xColumn];
        }));

        yScale.domain([
          0,
          d3.max(layers, function (layer){
            return d3.max(layer.values, function (d){
              return d.y0 + d.y;
            });
          })
        ]);

        colorScale.domain(layers.map(function (layer){
          return layer.key;
        }));

        xAxisG.call(xAxis); 
        yAxisG.call(yAxis);

        renderBars(baseBarLayer, layers);
        
        if(hoveredColorValue){
          setOverlayTransparency(0.7);
          renderBars(foregroundBarLayer, layers.filter(function (layer){
            return layer.key === hoveredColorValue;
          }));
        } else {
          setOverlayTransparency(0.0);
          renderBars(foregroundBarLayer, []);
        }
        
        colorLegendG.call(colorLegend);
        
        // Move the text down a bit.
        colorLegendG.selectAll("text").attr("y", 4);
        
        listenForHover(colorLegendG.selectAll("rect"), data);
        listenForHover(colorLegendG.selectAll("text"), data);
      }
      
      function setOverlayTransparency(alpha){
        overlayRect
          .transition().duration(400)
          .attr("fill", "rgba(255, 255, 255, " + alpha + ")");
      }
      
      function renderBars(g, layers){
        var layerGs = g.selectAll(".layer").data(layers);
        layerGs.enter().append("g").attr("class", "layer");
        layerGs.exit().remove();
        layerGs.style("fill", function (d){
          return colorScale(d.key);
        });

        var bars = layerGs.selectAll("rect").data(function (d){
          return d.values;
        });
        bars.enter().append("rect")
          .on("mouseover", tip.show)
          .on("mouseout", tip.hide);
        bars.exit().remove();
        bars
          .attr("x", function (d){ return xScale(d[xColumn]); })
          .attr("y", function (d){ return yScale(d.y0 + d.y); })
          .attr("width", xScale.rangeBand())
          .attr("height", function (d){ return innerHeight - yScale(d.y); });
      }
      
      function listenForHover(selection, data){
        selection
          .on("mouseover", function (d){
            hoveredColorValue = d;
            render(data);
          })
          .on("mouseout", function (d){
            hoveredColorValue = null;
            render(data);
          })
          .style("cursor", "pointer");
      }

      function type(d){
        d.population = +d.population;
        return d;
      }

      d3.csv("religionByCountryTop5.csv", type, render);

    </script>
  </body>
</html>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Before/after image</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
        <script src="index.js"></script>
    </head>
    <body onload="main()">
        <svg width="960" height="500">
            <defs>
                <pattern id="before_pattern" patternUnits="userSpaceOnUse" width="535" height="500">
                    <image xlink:href="before.png" x="0" y="0" width="535" height="500" />
                </pattern>
                <pattern id="after_pattern" patternUnits="userSpaceOnUse" width="535" height="500">
                    <image xlink:href="after.png" x="0" y="0" width="535" height="500" />
                </pattern>
            </defs>
            <g transform="translate(230,24) scale(0.9)">
                <rect id="before" fill="url(#before_pattern)" x="0" y="0" width="535" height="500"/>
                <rect id="after" fill="url(#after_pattern)" x="0" y="0" width="535" height="500"/>
                <rect id="overlay" fill="transparent"  x="-20" y="0" width="575" height="500"/>
            </g>
        </svg>
    </body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <style>

    body {
      overflow: hidden;
    }

    path {
      fill-opacity: .8;
      stroke: #000;
    }

    path:first-child {
      fill: yellow !important;  
    }

    circle {
      fill: #fff;
      stroke: #000;
      pointer-events: none;
    }

    .PiYG .q0-9{fill:rgb(197,27,125)}
    .PiYG .q1-9{fill:rgb(222,119,174)}
    .PiYG .q2-9{fill:rgb(241,182,218)}
    .PiYG .q3-9{fill:rgb(253,224,239)}
    .PiYG .q4-9{fill:rgb(247,247,247)}
    .PiYG .q5-9{fill:rgb(230,245,208)}
    .PiYG .q6-9{fill:rgb(184,225,134)}
    .PiYG .q7-9{fill:rgb(127,188,65)}
    .PiYG .q8-9{fill:rgb(77,146,33)}

    </style>
  </head>
  <body>
    <select id="interpolate">
      <option>basis-closed</option>
      <option>linear</option>
      <option>basis</option>
      <option>cardinal-closed</option>
      <option>cardinal</option>
      <option>monotone</option>
      <option>step</option>
      <option>step-before</option>
      <option>step-after</option>
    </select>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

    var width = 960,
        height = 480;

    var vertices = d3.range(100).map(function(d) {
      return [Math.random() * width, Math.random() * height];
    });

    var voronoi = d3.geom.voronoi()
        .clipExtent([[0, 0], [width, height]]);

    var svg = d3.select("body").append("svg")
        .attr("width", width)
        .attr("height", height)
        .attr("class", "PiYG")
        .on("mousemove", function() {
          vertices[0] = d3.mouse(this);
          redraw();
        })
        .on("touchstart", touch)
        .on("touchmove", touch);

    var path = svg.append("g").selectAll("path");

    var line = d3.svg.line();

    var select = d3.select("#interpolate")
      .on("change", function() {
        line.interpolate(this.value);
        redraw();
      })
    line.interpolate(select.property("value"));

    svg.selectAll("circle")
        .data(vertices.slice(1))
      .enter().append("circle")
        .attr("transform", function(d) { return "translate(" + d + ")"; })
        .attr("r", 2);

    redraw();

    function touch() {
      vertices[0] = d3.touches(this)[0];
      redraw();
    }

    function redraw() {
      path = path.data(voronoi(vertices), String);

      path.exit().remove();
      path.enter().append("path")
        .attr("class", function(d, i) { return "q" + (i % 9) + "-9"; });
      path.attr("d", function(d) {
        return line(d) + "Z";
      });

      path.order();
    }

    </script>
  </body>
</html><!DOCTYPE HTML>
<html>
<head>
    <title>Circle Pack with Truncated Labels</title>
    <meta charset="utf-8">
    <!-- poor man's browser detection -->
    <!--[if IE]><script type="text/javascript">window['isIE'] = true;</script><![endif]-->
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    
    <style type="text/css">
        html, body {
            overflow: hidden;
            margin: 0;
            font-family: "Helvetica Neue", Helvetica;
        }
        text {
            font-size: 11px;
            pointer-events: none;
        }

        text.parent {
            fill: #1f77b4;
        }

        circle {
            fill: #ccc;
            stroke: #999;
            pointer-events: all;
        }

        circle.parent {
            fill: #1f77b4;
            fill-opacity: .1;
            stroke: steelblue;
        }

        circle.parent:hover {
            stroke: #ff7f0e;
            stroke-width: .5px;
        }

        circle.child {
            pointer-events: none;
        }
    </style>
</head>
<body>

<script type="text/javascript">
    var w = 650,
        h = 565,
        r = 500,
        x = d3.scale.linear().range([0, r]),
        y = d3.scale.linear().range([0, r]),
        node,
        root;

    var pack = d3.layout.pack()
        .size([r, r])
        .value(function(d) { return d.cant; });

    var vis = d3.select("body").insert("svg:svg", "h2")
        .attr("width", w)
        .attr("height", h)
        .append("svg:g")
        .attr("transform", "translate(" + (w - r) / 2 + "," + (h - r) / 2 + ")");

    d3.json("http://www.billdwhite.com/wordpress/wp-content/data/flare2.json", function(data) {
        node = root = data;

        var nodes = pack.nodes(root);

        vis.selectAll("circle")
            .data(nodes)
            .enter().append("svg:circle")
            .attr("class", function(d) { return d.children ? "parent" : "child"; })
            .attr("cx", function(d) { return d.x; })
            .attr("cy", function(d) { return d.y; })
            .attr("r", function(d) { return d.r; })
            .on("click", function(d) { return zoom(node == d ? root : d); });

        vis.selectAll("text")
            .data(nodes)
            .enter().append("svg:text")
            .attr("class", function(d) { return d.children ? "parent" : "child"; })
            .attr("x", function(d) { return d.x; })
            .attr("y", function(d) { return d.y; })
            .attr("dy", ".35em")
            .attr("text-anchor", "middle")
            .style("opacity", function(d) { return d.r > 20 ? 1 : 0; })
            .text(function(d) {
                return d.nombre_familia;
            });

        d3.select(window).on("click", function() { zoom(root); });
    });


    function zoom(d, i) {
        var k = r / d.r / 2;
        x.domain([d.x - d.r, d.x + d.r]);
        y.domain([d.y - d.r, d.y + d.r]);

        var t = vis.transition()
            .duration(d3.event.altKey ? 7500 : 750);

        t.selectAll("circle")
            .attr("cx", function(d) { return x(d.x);  })
            .attr("cy", function(d) { return y(d.y);  })
            .attr("r", function(d)  { return k * d.r; });

        // updateCounter is a hacky way to determine when transition is finished
        var updateCounter = 0;

        t.selectAll("text")
            .style("opacity", 0)
            .attr("x", function(d) { return x(d.x); })
            .attr("y", function(d) { return y(d.y); })
            .each(function(d, i) {
                updateCounter++;
            })
            .each("end", function(d, i) {
                updateCounter--;
                if (updateCounter == 0) {
                    adjustLabels(k);
                }
            });

        node = d;
        d3.event.stopPropagation();
    }


    function adjustLabels(k) {
        vis.selectAll("text")
            .style("opacity", function(d) {
                return k * d.r > 20 ? 1 : 0;
            })
            .text(function(d) {
                return d.nombre_familia;
            })
            .filter(function(d) {
                d.tw = this.getComputedTextLength();
                return (Math.PI*(k*d.r)/2) < d.tw;
            })
            .each(function(d) {
                var proposedLabel = d.nombre_familia;
                var proposedLabelArray = proposedLabel.split('');
                while ((d.tw > (Math.PI*(k*d.r)/2) && proposedLabelArray.length)) {
                    // pull out 3 chars at a time to speed things up (one at a time is too slow)
                    proposedLabelArray.pop();proposedLabelArray.pop(); proposedLabelArray.pop();
                    if (proposedLabelArray.length===0) {
                        proposedLabel = "";
                    } else {
                        proposedLabel = proposedLabelArray.join('') + "..."; // manually truncate with ellipsis
                    }
                    d3.select(this).text(proposedLabel);
                    d.tw = this.getComputedTextLength();
                }
            });
    }
</script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
  cursor: pointer;
}

.node {
  font: 10px sans-serif;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 2200;

var link,
    node;

var cluster = d3.layout.cluster()
    .size([height, width - 160]);

var diagonal = d3.svg.diagonal()
    .projection(function(d) { return [d.y, d.x]; });

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)

var vis = svg.append("g")
    .attr("transform", "translate(40,0)");

d3.json("flare.json", function(error, root) {
  var nodes = cluster.nodes(root),
      links = cluster.links(nodes);

  link = vis.selectAll(".link")
      .data(links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", diagonal);

  node = vis.selectAll(".node")
      .data(nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })
      .on("mousedown", drag);

  node.append("circle")
      .attr("r", 4.5);

  node.append("text")
      .attr("dx", function(d) { return d.children ? -8 : 8; })
      .attr("dy", 3)
      .style("text-anchor", function(d) { return d.children ? "end" : "start"; })
      .text(function(d) { return d.name; });
});

function move(root, xOffset, yOffset) {
  root.x += yOffset;
  root.y += xOffset;
  if (root.children) {
    root.children.forEach(function(d) { move(d, xOffset, yOffset); });
  }
}

function drag(d) {
  svg.on("mousemove", function() {
    var m = d3.mouse(vis.node());
    move(d, m[0] - d.y, m[1] - d.x);
    link.attr("d", diagonal);
    node.attr("transform", function(d) { return "translate(" + [d.y, d.x] + ")"; });
  })
  .on("mouseup", function() {
    svg.on("mousemove", null);
  });
}

d3.select(self.frameElement).style("height", height + "px");

</script><!DOCTYPE html>
<head>
  <title>Voronoi 101</title>
  <meta charset="utf-8">
</head>
<body>

<script src="http://d3js.org/d3.v3.min.js"></script>

<script>
  var width = 960, height = 500;

  var c20 = d3.scale.category20();

  var vertices = d3.range(20).map(function(d) {
    return [Math.random() * width, Math.random() * height];
  });

  var voronoi = d3.geom.voronoi().clipExtent([[0, 0], [width, height]]);

  var svg = d3.select("body").append("svg").attr("width", width).attr("height", height);

  var path = svg.append("g").selectAll("path");
  path.data(voronoi(vertices)).enter().append("path")
      .attr("stroke","white") 
      .attr("fill", c20)
      .attr("d", function(d) { return "M" + d.join("L") + "Z" } );
//    .attr("d", polygon);

// function polygon(d) { return "M" + d.join("L") + "Z"; }
  
  
  svg.selectAll("circle").data(vertices).enter().append("circle").attr("r", 2)
   //.attr("transform", function(d) { return "translate(" + d + ")"; })
     .attr("cx", function(d) { return d[0]; } )
     .attr("cy", function(d) { return d[1]; } );
</script>

</body>
</html><!DOCTYPE html>
<html>
  <head>
    <title>Presidential elections 2013, 2nd round</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
	<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	
	
	<script>
	  // see http://leafletjs.com/reference.html
	  L_PREFER_CANVAS = true;
	</script>

	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
		 <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>
    <!--<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?1.29.1"></script>-->
    <style type="text/css">

		html, body, #map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}

    </style>
  </head>
  <body>
  
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Presidential elections 2013, 2nd round</a>
        </div>
      </div>
    </div>
    
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >The <strong>size</strong> of bubbles represents number of voters, the <strong>color</strong> represents the winner and the <strong>oppacity</strong> the margin of victory. <span style="color:#b00;font-weight:800">Bachelet</span> vs. <span style="color:#00b;font-weight:800">Matthei</span></div>
    </div>
    <div id="map" style="margin-top:40px;"></div>
    <script type="text/javascript">


		// Create the map
		var map = L.map('map',{zoomControl: false}).setView([-33.5,-70.5], 5);
		map.addControl( L.control.zoom({position: 'topright'}) );
		
		// add an OpenStreetMap tile layer
		// also see http://wiki.openstreetmap.org/wiki/Tiles
		//L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);
		
		//add circles
		//$.getJSON( "cz_president_2013_both_2_ring.json", function (data) {
		$.getJSON( "cl_2013_2_ring_bachelet_matthei.json", function (data) {
		    $.each(data.features, function (index, value) {
				circle = L.circle([value.coordinates[1], value.coordinates[0]], Math.sqrt((parseInt(value.population.p6)+parseInt(value.population.p9))*2750), {
					color: class2color(value.classname),
					fillColor: class2color(value.classname),
					fillOpacity: 2*(Math.max(parseInt(value.population.p6),parseInt(value.population.p9)) / (parseInt(value.population.p6)+parseInt(value.population.p9)) - 0.45),
					weight: 0.1,
					className: value.classname,	//this does not seem to work, so hacked by class2color
				}).addTo(map);
				
				perc1 = Math.round(Math.max(parseInt(value.population.p6),parseInt(value.population.p9)) / (parseInt(value.population.p6)+parseInt(value.population.p9)) * 100);
				perc2 = 100 - perc1;
				
				circle.bindPopup(value.name + "<br>" + value.winner + " won " + perc1 + " % vs. " + perc2 + " % <br>(" +Math.max(value.population.p6,value.population.p9) + " : " + Math.min(value.population.p6,value.population.p9) + " votes)");
		  });
		});
		
		function class2color(className) {
		  if (className == 'bachelet') return "#f00";
		  if (className == 'matthei') return "#00f";
		  else return "#000";
		}
	</script>
  </body>
</html>

<!DOCTYPE html>
<html>
  <head>
    <title>Presidential elections 2013, 2nd round - Metropolitan area</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
	<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	
	
	<script>
	  // see http://leafletjs.com/reference.html
	  L_PREFER_CANVAS = true;
	</script>

	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
		 <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>
    <!--<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?1.29.1"></script>-->
    <style type="text/css">

		html, body, #map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}

    </style>
  </head>
  <body>
  
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Presidential elections 2013, 2nd round - Metropolitan area</a>
        </div>
      </div>
    </div>
    
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >The <strong>size</strong> of bubbles represents number of voters, the <strong>color</strong> represents the winner and the <strong>oppacity</strong> the margin of victory. <span style="color:#b00;font-weight:800">Bachelet</span> vs. <span style="color:#00b;font-weight:800">Matthei</span></div>
    </div>
    <div id="map" style="margin-top:40px;"></div>
    <script type="text/javascript">


		// Create the map
		var map = L.map('map',{zoomControl: false}).setView([-33.5,-70.5], 9);
		map.addControl( L.control.zoom({position: 'topright'}) );
		
		// add an OpenStreetMap tile layer
		// also see http://wiki.openstreetmap.org/wiki/Tiles
		//L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);
		
		//add circles
		//$.getJSON( "cz_president_2013_both_2_ring.json", function (data) {
		$.getJSON( "cl_2013_2_ring_bachelet_matthei.json", function (data) {
		    $.each(data.features, function (index, value) {
				circle = L.circle([value.coordinates[1], value.coordinates[0]], Math.sqrt((parseInt(value.population.p6)+parseInt(value.population.p9))*250), {
					color: class2color(value.classname),
					fillColor: class2color(value.classname),
					fillOpacity: 2*(Math.max(parseInt(value.population.p6),parseInt(value.population.p9)) / (parseInt(value.population.p6)+parseInt(value.population.p9)) - 0.45),
					weight: 0.1,
					className: value.classname,	//this does not seem to work, so hacked by class2color
				}).addTo(map);
				
				perc1 = Math.round(Math.max(parseInt(value.population.p6),parseInt(value.population.p9)) / (parseInt(value.population.p6)+parseInt(value.population.p9)) * 100);
				perc2 = 100 - perc1;
				
				circle.bindPopup(value.name + "<br>" + value.winner + " won " + perc1 + " % vs. " + perc2 + " % <br>(" +Math.max(value.population.p6,value.population.p9) + " : " + Math.min(value.population.p6,value.population.p9) + " votes)");
		  });
		});
		
		function class2color(className) {
		  if (className == 'bachelet') return "#f00";
		  if (className == 'matthei') return "#00f";
		  else return "#000";
		}
	</script>
  </body>
</html>

<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
	<link rel="stylesheet" type="text/css" href="main.css">
</head>

<body>
  
  <h1>Mistaken Witness Identification: Race Makes a Difference</h1>
	<h3>Contributing Factors for Exoneration in the United States Since 1989</h3>
  <figure></figure>
  <p class="footnote">Full descriptions and data publicly available from <a href="www.law.umich.edu/special/exoneration/Pages/detaillist.aspx">The National Registry of Exonerations</a></p>
  
  <script>
    var data;

    var margin = {top: 60, right: 40, bottom: 20, left: 240};

    var yOffset = 23;

    var barHeight = 35;
    
    var dict = {
      'F/MFE': 'False or Misleading Forensic Evidence',
      'MWID': 'Mistaken Witness Identification',
      'FC': 'False Confession',
      'P/FA': 'Perjury or False Accusation',
      'OM': 'Official Misconduct',
      'ILD': 'Inadequate Legal Defense'
    }
    
    var arr = Object.keys(dict).map(function(v) { return v; });

    var colors = ['#635274', '#7BB0A8', '#d3d3d3'];

    var width = d3.select('figure').node().clientWidth - margin.left - margin.right;
    var height = d3.select('figure').node().clientHeight - margin.top - margin.bottom;

    var svg = d3.select("figure").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom);

    var g = svg.append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    d3.json('exonerees.json', function(err, result) {
      if (err) console.warn(err);

      data = result;
      normalize();
      render();
    });

    function normalize() {
      
      var nest = d3.nest()
      	.key(function(d) { return d.Race; });

      var nested = nest.entries(data);

      var totals = nested
        .slice(0,3)
        .map(function(v) {
          return v.values;
        })
        .reduce(function(acc, cur) {
          cur.forEach(function(ex) {

            if (!acc.hasOwnProperty(ex['Race'])) {
              var obj = acc[ex['Race']] = { 'total': 0 };
              arr.forEach(function(x) {
                obj[x] = 0;
              });
            }

            Object.keys(ex)
              .filter(function(y) {
                return arr.indexOf(y) > -1;
              })
              .forEach(function(z) {
                if (ex[z].length > 0) {
                  acc[ex['Race']][z] += 1;
                }
              });

            acc[ex['Race']]['total'] += 1;

          });
          return acc;
        }, {});

      var percentages = (function(t) {
        var p = {};
        Object.keys(t).forEach(function(v) {
          p[v] = {};
          Object.keys(t[v]).forEach(function(w) {
            if (w !== 'total') {
              var percent = t[v][w] / t[v]['total'];
              var percentRounded = Math.round(percent * 100);
              p[v][w] = percentRounded;
            } else {
              p[v][w] = t[v][w];
            }
          })
        });
        return p;
      })(totals);

      //make array of objects that are 6 categories
      var formatted = (function(p) {
        var f = [];
        arr.forEach(function(v) {
          var obj = { 'category' : v };
          Object.keys(p).forEach(function(w) {
            //console.info(w, v, p[w][v]);
            obj[w] = p[w][v];
          })
          f.push(obj);
        })
        return f;
      })(percentages);

      //get total/category and adjusted percentage;
      var adjusted = (function(f) {
        var maxes = f.map(function(v) {
          var max = 0;
          var total = 0;
          Object.keys(v).forEach(function(w) {
            if (w !== 'category') {
              total += v[w];
            }
          })
          v['total'] = total;
          return v;
        });
        var increase = maxes.map(function(x) {
          var obj = {};
          var increaseAmt = (100 - x.total) / 3;
          Object.keys(x).forEach(function(y) {
            if (y !== 'category' && y!== 'total') {
              x[y] += increaseAmt;
            }
            obj[y] = x[y];
          })
          return obj;
        })
        return increase;
      })(formatted);

      var sorted = adjusted.sort(function(a, b) {
        return a['Black'] + a['Hispanic'] > b['Black'] + b['Hispanic'];
      });

      data = sorted;

    }

    function render() {
      var x = d3.scale.linear().domain([0, 100]).range([0, width]);
      var y = d3.scale.ordinal()
        .domain(data.map(function(d) { return d.category; })) 
        .rangeBands([height, 0], 0.3, 0);

      var yLabel = d3.scale.ordinal()
        .domain(data.map(function(d) { return dict[d.category]; }))
        .rangeBands([height, 0], 0.3, 0);

      var xAxis = d3.svg.axis().scale(x).orient('top')
        .tickFormat(function(d) { return d + '%'; });
      var yAxis = d3.svg.axis().scale(yLabel).orient('left');

      g.append('g')
        .classed('x axis', true)
        .call(xAxis);

      g.selectAll('.x.axis')
        .select('text')
        .style('text-anchor', 'start');

      g.append('g')
        .classed('y axis', true)
        .call(yAxis);

      g.select('.y.axis')
        .selectAll('.tick')
        .select('text')
        .each(function(d, i) {
          if (i === data.length - 1) {
            d3.select(this)
              .style('fill', '#512B52')
              .style('font-weight', 'bold')
              .attr('font-style', 'italic');
          }
        });

      g.append('text')
        .classed('x label', true)
        .attr({
          x: 0,
          y: -margin.top/2
        })
        .text('Percent of Total');

      var section = g.selectAll('.section')
        .data(data)
      .enter().append('g')
        .classed('section', true)
        .attr('transform', function(d) {
          return 'translate(0,' + y(d.category) + ')';
        });

      var black = section.append('rect')
        .classed('bar Black', true)
        .attr('fill', colors[0])
        .attr('width', function(d) { return x(d['Black']); })
        .attr('height', barHeight);

      var hispanic = section.append('rect')
        .classed('bar Hispanic', true)
        .attr('fill', colors[1])
        .attr('x', function(d) { return x(d['Black']); })
        .attr('width', function(d) { return x(d['Hispanic']); })
        .attr('height', barHeight);

      var white = section.append('rect')
        .classed('bar Caucasian', true)
        .attr('fill', colors[2])
        .attr('x', function(d) { return x(d['Black']) + x(d['Hispanic']); })
        .attr('width', function(d) { return x(d['Caucasian']); })
        .attr('height', barHeight);

      var tooltip = g.append('text')
        .text('0%')
        .attr('opacity', 0)
        .attr('fill', 'white');

      var labels = ['Black', 'Hispanic', 'White'];

      g.selectAll('.key')
        .data(labels)
      .enter().append('text')
        .classed('key', true)
        .text(function(d) { return d; })
        .attr('fill', 'white')
        .attr('text-anchor', 'middle')
        .attr('x', function(d, i) {
          var offset;
          var j = data.length - 1;
          if (i === 0) {
            offset = x(data[j]['Black']) / 2;
          } else if (i === 1) {
            offset = x(data[j]['Black']) + (x(data[j]['Hispanic']) / 2);
          } else {
            offset = x(data[j]['Black']) + x(data[j]['Hispanic']) + (x(data[j]['Caucasian']) / 2);
          }
          console.info(offset);
          return offset;
        })
        .attr('y', yOffset);

      d3.selectAll('.bar')
        .on('mouseover', function(d) {

          var xLoc = +d3.select(this).attr('x') || 0;

          var parent = d3.select(this).node().parentNode;
          var arr = d3.select(parent).attr('transform').split(',');
          var yLoc = +arr[1].substring(0, arr[1].length - 1);

          var cl = d3.select(this).attr('class').split(' ')[1];

          tooltip
            .text(Math.round(d[cl]) + '%')
            .attr({
              x: xLoc + 8,
              y: yLoc + yOffset
            })
            .transition()
            .attr('opacity', 1);

        })
        .on('mouseleave', function() {
          tooltip.attr('opacity', 0);
        });

    }
  </script>
</body>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta charset="utf-8">
<style>

body {
  font: 18px Arial;
}

p {
  margin: 0;
}
#waffle {
  margin-bottom: 30px;
}

#legend {
  font: 13px Arial;
}

</style>
</head>

<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<div id="title">
  <p>A measure, by age population</p>
  </div>
<div id="waffle">
</div>
<div id="legend">
</div>
</body>

<script>

var total = 0;
var width,
    height,
    widthSquares = 20,
    heightSquares = 5,
    squareSize = 25,
    squareValue = 0,
    gap = 1,
    theData = [];  

var color = d3.scale.category10();

d3.csv("data.csv", function(error, data)
{
  //total
  total = d3.sum(data, function(d) { return d.population; });

  //value of a square
  squareValue = total / (widthSquares*heightSquares);
  
  //remap data
  data.forEach(function(d, i) 
  {
      d.population = +d.population;
      d.units = Math.floor(d.population/squareValue);
      theData = theData.concat(
        Array(d.units+1).join(1).split('').map(function()
          {
            return {  squareValue:squareValue,                      
                      units: d.units,
                      population: d.population,
                      groupIndex: i};
          })
        );
  });

  width = (squareSize*widthSquares) + widthSquares*gap + 25;
  height = (squareSize*heightSquares) + heightSquares*gap + 25;

  var waffle = d3.select("#waffle")
      .append("svg")
      .attr("width", width)
      .attr("height", height)
      .append("g")
      .selectAll("div")
      .data(theData)
      .enter()
      .append("rect")
      .attr("width", squareSize)
      .attr("height", squareSize)
      .attr("fill", function(d)
      {
        return color(d.groupIndex);
      })
      .attr("x", function(d, i)
        {
          //group n squares for column
          col = Math.floor(i/heightSquares);
          return (col*squareSize) + (col*gap);
        })
      .attr("y", function(d, i)
      {
        row = i%heightSquares;
        return (heightSquares*squareSize) - ((row*squareSize) + (row*gap))
      })
      .append("title")
        .text(function (d,i) 
          {
            return "Age range: " + data[d.groupIndex].age + " | " +  d.population + " , " + d.units + "%"
          });

   //add legend with categorical data
   var legend = d3.select("#legend")
    .append("svg")
    .attr('width', 300)
    .attr('height', 200)
    .append('g')
    .selectAll("div")
    .data(data)
    .enter()
      .append("g")
      .attr('transform', function(d,i){ return "translate(0," + i*20 + ")";});
  legend.append("rect")
    .attr("width", 18)
    .attr("height", 18)
    .style("fill", function(d, i) { return color(i)});
  legend.append("text")
    .attr("x", 25)
    .attr("y", 13)
    .text( function(d) { return d.age});

    //add value of a unit square
    var legend2 = d3.select("#legend")
      .select('svg')
      .append('g')
      .attr('transform', "translate(100,0)");

legend2.append("text")    
        .attr('y', '14')    
        .attr('font-size', '18px')
        .text("Total: " + total)
        .attr("fill", "#444444");
});

</script>
</html>
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Timeout for scrollzoom</title>
<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
<link href="//maxcdn.bootstrapcdn.com/bootswatch/3.2.0/darkly/bootstrap.min.css" rel="stylesheet">
<link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.css' rel='stylesheet' />
<style>
  #map { height:250px; width:100%; }
  .col-centered{
    float: none;
    margin: 0 auto;
  }
</style>
</head>
<body>

<div class="container">
  <div class="jumbotron col-lg-6 col-centered">
    <h1>Scrolla Rocknrolla</h1>
    <p class="lead">A long-scrolling blog post with a map in it. Scrollwheel zoom messes up the UX, so add a timer to enable scrollwheel zoom 3 seconds after the user hovers over the map.</p>
  </div>

  <div class="row">
    <div class="col-lg-6 col-centered">
      <h4>Shoreditch</h4>
      <p>Cray taxidermy American Apparel selfies readymade meh. Ennui hoodie squid Schlitz Carles try-hard. Bespoke 3 wolf moon cred, meditation narwhal mumblecore quinoa seitan. Salvia retro forage, master cleanse health goth flexitarian deep v Portland yr wayfarers plaid. Occupy forage four loko banjo. Sartorial tilde banjo, Vice hella Brooklyn health goth photo booth stumptown kale chips Wes Anderson vinyl Bushwick before they sold out. Tote bag artisan roof party sartorial lo-fi.</p>
    </div>
  </div>
  <hr>
  <div class="row">
    <div class="timer" id='map'></div>
  </div>
  <hr>
  <div class="row">
    <div class="col-lg-6 col-centered">
      <h4>Trust fund</h4>
      <p>Crucifix sustainable normcore, Pinterest High Life DIY yr tattooed Williamsburg gastropub direct trade single-origin coffee skateboard Truffaut. You probably haven't heard of them put a bird on it banjo leggings, viral ennui sartorial brunch lomo irony. Cray asymmetrical shabby chic, sriracha post-ironic Williamsburg freegan meggings quinoa selfies. Wolf Godard Blue Bottle, irony fixie swag pork belly slow-carb fap artisan. Asymmetrical retro salvia mlkshk Godard street art bitters Bushwick, XOXO fixie Williamsburg forage ethical sartorial. Shabby chic meh Wes Anderson, PBR&B scenester cornhole lo-fi gastropub farm-to-table chillwave. Selfies semiotics biodiesel squid cardigan swag, Godard authentic.</p>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-6 col-centered">
      <h4>Quaint</h4>
      <p>Try-hard narwhal sartorial Marfa selvage, photo booth fashion axe health goth Neutra Carles four loko. Mlkshk DIY mustache health goth, Wes Anderson small batch Shoreditch cred you probably haven't heard of them narwhal. Try-hard Blue Bottle lomo Portland, quinoa 3 wolf moon master cleanse. Wes Anderson DIY health goth, master cleanse dreamcatcher jean shorts Tonx McSweeney's crucifix ethical fap Vice. American Apparel normcore scenester, cray Helvetica synth hella McSweeney's before they sold out swag. Selfies squid photo booth, banh mi ugh 90's artisan next level. Salvia chia quinoa Helvetica cred single-origin coffee.</p>
    </div>
  </div>
</div>

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src='https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.js'></script>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<script>
  L.mapbox.accessToken = 'pk.eyJ1IjoibGFuZHBsYW5uZXIiLCJhIjoicUtlZGgwYyJ9.UFYz8MD4lI4kIzk9bjGFvg';
  var map = L.mapbox.map('map', 'landplanner.ghfcid9o', {
    zoomControl: false
  }).setView([41.0252, 28.9950], 11);

  // Disable scroll zoom handler
  map.scrollWheelZoom.disable();

  // Silently enables scrollwheel zoom 3 seconds after a user hovers over the map
  $('.timer').hover(function() {
    setTimeout(function(){
      map.scrollWheelZoom.enable();
    }, 3000);
  });

</script>

</body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Concise Handlebars.js</title>
    <!-- 0a. CSS -->
    <link rel="stylesheet" href="style.css">
 
    <!-- 0a. JS -->
    <script src="//code.jquery.com/jquery-2.0.3.min.js"></script><!-- online jquery.js -->
    <script src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.1.2/handlebars.min.js"></script><!-- online handlebars.js-->
  </head>
 
  <body>
    <!--1. Data (json format!) -->
    <script>
    var url='data.json'; // relative url : 'data.json'; protocole-relative absolute url: '//website.org/path/to/data.json';
    </script>
 
    <!-- 2. Anchor -->
    <div id="anchor">This div is the <b>#anchor</b>.</div>
 
    <!-- 3. Template -->
    <script id="tpl" type="text/template">
        {{#people}}
            <div><img src="{{photo}}"><b><a href="{{twitter}}">{{family}} {{name}}</a></b> — {{title}}, {{place}} : {{introduction}}.</div>
        {{/people}}
    </script>
 
    <!--4. Handlebars.js slingshot -->
    <script>
    //4a.function creation
    var slingshot = function (url, tplId, anchor) {
     $.getJSON(url, function(data) {
              var template = $(tplId).html();
              var stone = Handlebars.compile(template)(data);
              $(anchor).append(stone);
     });
  }
    //4b.function firing
    slingshot('data.json', '#tpl', '#anchor'); // since url = 'data.json' , we can use both notations.
    </script>
  </body>
</html><!DOCTYPE html>
<meta charset='utf-8'>
<style>
  /* Style here... */
  path#CRI {
    fill: none;
    stroke: #000;
  }
  image.bg {
    opacity: 0.2;
  }
</style>

<div></div>

<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v0.min.js"></script>
<script>
  var width = 960,
      height = 600;

  var projection = d3.geo.albers()
    .center([0, 9.7])
    .rotate([84.2,0])
    .parallels([8, 11.5])
    //.scale(10200)
    .scale(12240)
    .translate([width / 2, height / 2]);

  var path = d3.geo.path()
    .projection(projection);

  var svg = d3.select("body").append("svg")
    .attr("class", "map")
    .attr("width", width)
    .attr("height", height);

  d3.json("costarica_min_topo.json", function(error, data) {
    var costarica = topojson.object(data, data.objects.costarica);

    svg.append("image")
      //.attr("clip-path", "url(#clip)")
      .attr("xlink:href", "hill-relief.jpg")
      .attr("width", width)
      .attr("height", height)
      .attr("class", "bg");

    svg.selectAll(".cr-subunit")
      .data(costarica.geometries)
    .enter().append("path")
      .attr("id", function(d) { return "CRI"; })
      .attr("d", path);

    svg.append("clipPath")
      .attr("id", "clip")
    .append("use")
      .attr("xlink:href", "#CRI");

    svg.append("image")
      .attr("clip-path", "url(#clip)")
      .attr("xlink:href", "hill-relief.jpg")
      .attr("width", width)
      .attr("height", height)
      .attr("class", "fg");
  });

  // Script here...
</script>
<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <title>Embedding rCharts</title>
    <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/minimal/stylesheets/styles.css">
    <link rel="stylesheet" href="http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/prettify/css/twitter-bootstrap.css">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
        
    
  </head>
  <body>
    <div class="wrapper">
<header>
  <h1>Embedding rCharts</h1>
  <p></p>
    <ol>
    </ol>
</header>

      <section>
        
<p><link href='http://fonts.googleapis.com/css?family=Lora' rel='stylesheet' type='text/css'></p>

<style>
  p {font-family: "Lora"; text-align: justify;}
  ol.linenums{margin-left: -5px;}
</style>

<h2>Embedding rCharts in R Markdown</h2>

<p>by <a href="http://github.com/ramnathv">Ramnath Vaidyanathan</a>, Dec 22, 2003</p>

<p>This is a short note to address a question from <a href="@sharon000">Sharon Machlis</a> on the best way to embed a visualization created using <a href="http://rcharts.io">rCharts</a>, so that one can create a standalone HTML file using <code>knit2html</code>. If you have not used rCharts, you can try it out using the <a href="http://rcharts.io/playground">online playground</a></p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/ramnath_vaidya">@ramnath_vaidya</a> Is this still best practice for knit2html to create rCharts file for use off your local machine? TNX! <a href="http://t.co/10RfiH9XgG">http://t.co/10RfiH9XgG</a></p>&mdash; Sharon Machlis (@sharon000) <a href="https://twitter.com/sharon000/statuses/414743096279441408">December 22, 2013</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>You will need the latest version of <code>rCharts</code> (&gt; 0.4) to use the approaches suggested in this note.</p>

<pre><code class="r">library(devtools)
install_github(&quot;rCharts&quot;, &quot;ramnathv&quot;)
</code></pre>

<h2>Create Chart</h2>
<p>Let us first create a simple barplot using NVD3</p>

<pre><code class="r">library(rCharts)
hair_eye_male = subset(as.data.frame(HairEyeColor), Sex == &quot;Male&quot;)
n1 &lt;- nPlot(Freq ~ Hair, group = &#39;Eye&#39;, 
  data = hair_eye_male, type = &#39;multiBarChart&#39;
)
n1$set(width = 600)
</code></pre>

<p>We need to set the chunk options <code>comment = NA</code> and <code>results = &quot;asis&quot;</code> so that the resulting html is rendered asis and not marked up (which is the default in knitr). Make sure to set <code>cache = F</code> for this chunk so that it is always run.</p>

<pre><code class="r">library(knitr)
opts_chunk$set(comment = NA, results = &quot;asis&quot;, comment = NA, tidy = F)
</code></pre>

<h2>Embed Option 1: IFrame Inline</h2>
<p>The first option is to embed the chart as an inline iframe. It has the advantage of keeping the html standalone, but isolating the chart from the html on the page, thereby avoiding css and js conflicts. However, this feature is <a href="http://www.w3schools.com/tags/att_iframe_srcdoc.asp">not supported by IE and Opera</a>.</p>

<pre><code class="r">n1$show(&#39;iframesrc&#39;, cdn = TRUE)
</code></pre>

<iframe srcdoc='
&lt;!doctype HTML&gt;
&lt;meta charset = &#039;utf-8&#039;&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel=&#039;stylesheet&#039; href=&#039;http://nvd3.org/src/nv.d3.css&#039;&gt;
    
    &lt;script src=&#039;http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js&#039; type=&#039;text/javascript&#039;&gt;&lt;/script&gt;
    &lt;script src=&#039;http://d3js.org/d3.v3.min.js&#039; type=&#039;text/javascript&#039;&gt;&lt;/script&gt;
    &lt;script src=&#039;http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js&#039; type=&#039;text/javascript&#039;&gt;&lt;/script&gt;
    &lt;script src=&#039;http://nvd3.org/lib/fisheye.js&#039; type=&#039;text/javascript&#039;&gt;&lt;/script&gt;
    
    &lt;style&gt;
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 600px;
      height: 400px;
    }  
    &lt;/style&gt;
    
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id=&#039;chart13be6cad89a5&#039; class=&#039;rChart nvd3&#039;&gt;&lt;/div&gt;  
    
    &lt;script type=&#039;text/javascript&#039;&gt;
 $(document).ready(function(){
      drawchart13be6cad89a5()
    });
    function drawchart13be6cad89a5(){  
      var opts = {
 &quot;dom&quot;: &quot;chart13be6cad89a5&quot;,
&quot;width&quot;:    600,
&quot;height&quot;:    400,
&quot;x&quot;: &quot;Hair&quot;,
&quot;y&quot;: &quot;Freq&quot;,
&quot;group&quot;: &quot;Eye&quot;,
&quot;type&quot;: &quot;multiBarChart&quot;,
&quot;id&quot;: &quot;chart13be6cad89a5&quot; 
},
        data = [
 {
 &quot;Hair&quot;: &quot;Black&quot;,
&quot;Eye&quot;: &quot;Brown&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             32 
},
{
 &quot;Hair&quot;: &quot;Brown&quot;,
&quot;Eye&quot;: &quot;Brown&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             53 
},
{
 &quot;Hair&quot;: &quot;Red&quot;,
&quot;Eye&quot;: &quot;Brown&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             10 
},
{
 &quot;Hair&quot;: &quot;Blond&quot;,
&quot;Eye&quot;: &quot;Brown&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:              3 
},
{
 &quot;Hair&quot;: &quot;Black&quot;,
&quot;Eye&quot;: &quot;Blue&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             11 
},
{
 &quot;Hair&quot;: &quot;Brown&quot;,
&quot;Eye&quot;: &quot;Blue&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             50 
},
{
 &quot;Hair&quot;: &quot;Red&quot;,
&quot;Eye&quot;: &quot;Blue&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             10 
},
{
 &quot;Hair&quot;: &quot;Blond&quot;,
&quot;Eye&quot;: &quot;Blue&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             30 
},
{
 &quot;Hair&quot;: &quot;Black&quot;,
&quot;Eye&quot;: &quot;Hazel&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             10 
},
{
 &quot;Hair&quot;: &quot;Brown&quot;,
&quot;Eye&quot;: &quot;Hazel&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             25 
},
{
 &quot;Hair&quot;: &quot;Red&quot;,
&quot;Eye&quot;: &quot;Hazel&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:              7 
},
{
 &quot;Hair&quot;: &quot;Blond&quot;,
&quot;Eye&quot;: &quot;Hazel&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:              5 
},
{
 &quot;Hair&quot;: &quot;Black&quot;,
&quot;Eye&quot;: &quot;Green&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:              3 
},
{
 &quot;Hair&quot;: &quot;Brown&quot;,
&quot;Eye&quot;: &quot;Green&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:             15 
},
{
 &quot;Hair&quot;: &quot;Red&quot;,
&quot;Eye&quot;: &quot;Green&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:              7 
},
{
 &quot;Hair&quot;: &quot;Blond&quot;,
&quot;Eye&quot;: &quot;Green&quot;,
&quot;Sex&quot;: &quot;Male&quot;,
&quot;Freq&quot;:              8 
} 
]
  
      if(!(opts.type===&quot;pieChart&quot; || opts.type===&quot;sparklinePlus&quot;)) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? &#039;main&#039; : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .x(function(d) { return d[opts.x] })
          .y(function(d) { return d[opts.y] })
          .width(opts.width)
          .height(opts.height)
         
        
          
        

        
        
        
      
       d3.select(&quot;#&quot; + opts.id)
        .append(&#039;svg&#039;)
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
    };
&lt;/script&gt;
    
  &lt;/body&gt;
&lt;/html&gt;
' scrolling='no' seamless></iframe>

<style>iframe{ width: 100%; height: 400px;}</style>

<h2>Embed Option 2: Inline</h2>
<p>This option embeds the chart inline in the html. It should work in all browsers that the charting library being used supports. However, it is susceptible to css and js conflicts.</p>

<pre><code class="r">n1$show(&#39;inline&#39;, include_assets = TRUE, cdn = TRUE)
</code></pre>

<p><link rel='stylesheet' href=http://nvd3.org/src/nv.d3.css></p>

<script type='text/javascript' src=http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js></script>

<script type='text/javascript' src=http://d3js.org/d3.v3.min.js></script>

<script type='text/javascript' src=http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js></script>

<script type='text/javascript' src=http://nvd3.org/lib/fisheye.js></script> 

<p><style>
  .rChart {
    display: block;
    margin-left: auto; 
    margin-right: auto;
    width: 600px;
    height: 400px;
  }<br>
  </style></p>

<div id = 'chart13be6261be152' class = 'rChart nvd3'></div>

<script type='text/javascript'>
 $(document).ready(function(){
      drawchart13be6261be152()
    });
    function drawchart13be6261be152(){  
      var opts = {
 "dom": "chart13be6261be152",
"width":    600,
"height":    400,
"x": "Hair",
"y": "Freq",
"group": "Eye",
"type": "multiBarChart",
"id": "chart13be6261be152" 
},
        data = [
 {
 "Hair": "Black",
"Eye": "Brown",
"Sex": "Male",
"Freq":             32 
},
{
 "Hair": "Brown",
"Eye": "Brown",
"Sex": "Male",
"Freq":             53 
},
{
 "Hair": "Red",
"Eye": "Brown",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Brown",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Black",
"Eye": "Blue",
"Sex": "Male",
"Freq":             11 
},
{
 "Hair": "Brown",
"Eye": "Blue",
"Sex": "Male",
"Freq":             50 
},
{
 "Hair": "Red",
"Eye": "Blue",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Blue",
"Sex": "Male",
"Freq":             30 
},
{
 "Hair": "Black",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Brown",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             25 
},
{
 "Hair": "Red",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              5 
},
{
 "Hair": "Black",
"Eye": "Green",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Brown",
"Eye": "Green",
"Sex": "Male",
"Freq":             15 
},
{
 "Hair": "Red",
"Eye": "Green",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Green",
"Sex": "Male",
"Freq":              8 
} 
]
  
      if(!(opts.type==="pieChart" || opts.type==="sparklinePlus")) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? 'main' : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .x(function(d) { return d[opts.x] })
          .y(function(d) { return d[opts.y] })
          .width(opts.width)
          .height(opts.height)
         
        
          
        

        
        
        
      
       d3.select("#" + opts.id)
        .append('svg')
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
    };
</script>

      </section>
      <footer>
        <p>Maintained by <a href="http://github.com/">
          Ramnath Vaidyanathan
        </a></p>
        <p><small>Hosted on GitHub Pages &mdash; Theme by 
          <a href="https://github.com/orderedlist">orderedlist</a></small>
        </p>
      </footer>    </div>
    <script src="http://slidifylibraries2.googlecode.com/git/inst/libraries/frameworks/minimal/javascripts/scale.fix.js"></script>
  </body>
  <!-- Load Javascripts for Widgets -->
  
  <!-- Google Prettify -->
  <script src="http://cdnjs.cloudflare.com/ajax/libs/prettify/188.0.0/prettify.js"></script>
  <script src='http://slidifylibraries2.googlecode.com/git/inst/libraries/highlighters/prettify/js/lang-r.js'></script>
  <script>
    var pres = document.getElementsByTagName("pre");
    for (var i=0; i < pres.length; ++i) {
      pres[i].className = "prettyprint linenums";
    }
    prettyPrint();
  </script>
  <!-- End Google Prettify --> 
  </html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Concise AngularJS</title>

    <!-- 0a. CSS -->
    <link rel="stylesheet" href="style.css">

    <!-- 0a. JS: JQuery.js & Handlebars.js libraries -->
    <script src="//code.jquery.com/jquery-2.0.3.min.js"></script><!-- online -->
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.0.1/angular.min.js"></script><!-- online -->
  </head>

  <body ng-app='PeopleApp' ng-controller='PeopleCtrl'>
    <!-- 1. page content with anchor -->
    <div id="anchor">
      <div  ng-repeat='people in persons'>
        <img ng-src="{{ people.photo }}">
          <b><a href="{{ people.twitter }}">{{ people.family }} {{ peope.name }}</a></b> — {{ people.title }}, {{ people.place }} : {{ people.introduction }}.
       </div>.
    </div>
    
    <script type='text/javascript'>
      var PeopleApp = angular.module('PeopleApp', [])
      
      PeopleApp.controller('PeopleCtrl', function($scope, $http){
        $http.get('data.json').success(function(data) {
          $scope.persons = data.people
          console.log($scope.persons)
        })
      })
    </script>
  </body>
</html><!DOCTYPE html>
<html>
<head>

	<meta charset="utf-8">

	<title>D3 Clock & Calendar</title>



	<style>

		

		.blue {
		    fill: steelblue;
		}
		.grey {
		    fill: lightgrey;
		}

	</style>

</head>
<body>



	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
	<script>

var w = 960,
    h = 500;


var vis = d3.select("body").append("svg")
    .attr("width", w)
    .attr("height", h)
    .append("g")
    .attr("transform", "translate(" + w / 2 + "," + h / 2 + ")")
    .attr("class", "clock");


var intervals = function () {
    var date = new Date();

    var seconds = date.getSeconds();
    var totalSeconds = 60;

    var minutes = date.getMinutes();
    var hour = date.getHours();

    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate();

    var daysInCurrentMonth = (function () {
        var today = new Date();
        lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);
        return lastDayOfMonth.toString().split(' ')[2];
    }());

    var dayInCurrentMonth = (function () {
        var arr = (new Date()).toString().split(' ');
        return arr[2];
    }());

    var daysLeftInMonth = (function () {
        return daysInCurrentMonth - dayInCurrentMonth;
    }());


    // day of year , days left in year
    var dayOfYear = (function () {
        var now = new Date();
        var start = new Date(now.getFullYear(), 0, 0);
        var diff = now - start;
        var oneDay = 1000 * 60 * 60 * 24;
        return Math.floor(diff / oneDay);
    }());

    circleFuction(seconds, totalSeconds, 60, "seconds");
    circleFuction(minutes, 60, 90, "minutes");
    circleFuction(hour, 24, 120, "hours");
    circleFuction(dayInCurrentMonth, daysInCurrentMonth, 150, "dayInCurrentMonth");
    circleFuction(dayOfYear, 365, 180, "dayOfYear");

};




var circleFuction = function (current, total, radius, what) {


    d3.select("g ." + what).remove();

    var group = vis.append("g").attr("class", what);



    var r = radius;
    var p = Math.PI * 2;


    var data = d3.range(total),
        data1 = d3.range(current),
        angle = d3.scale.ordinal().domain(data).rangeBands([0, 2 * Math.PI]),
        angle1 = d3.scale.ordinal().domain(data1).rangeBands([0, (2 * Math.PI) * current / total]);

    var arc1 = d3.svg.arc()
        .innerRadius(r - 10)
        .outerRadius(r)
        .startAngle(function (d) {
        return angle1(d);
    })
        .endAngle(function (d) {
        return angle1(d) + angle1.rangeBand() / 1.5;
    });

    group.selectAll("path")
        .data(data1)
        .enter().append("path")
        .attr("d", arc1)
        .attr("class", function () {
        return "blue " + what + "";
    });

    var arc = d3.svg.arc()
        .innerRadius(r - 10)
        .outerRadius(r)
        .startAngle(function (d) {
        return angle(d);
    })
        .endAngle(function (d) {
        return angle(d) + angle.rangeBand() / 1.5;
    });

    group.selectAll("path")
        .data(data)
        .enter().append("path")
        .attr("d", arc)
        .attr("class", function () {
        return "grey " + what + "";
    });
};




setInterval(intervals, 1000);

	</script>

</body>
</html>
<!DOCTYPE html>
<html>
<head>

	<meta charset="utf-8">

	<title>Text on horizontal bar chart - d3</title>



	<style>

		
.shared, .bar, .label {
  font-size: 8pt;
  font-weight: bold;
  font-family: Arial, sans-serif;
}
.malebar {
  fill: steelblue;
}

#vis {
    margin-left: 350px;
}


	</style>

</head>
<body>
<input id="generate" value="Randomise data" type="button"></input>
<div id="vis">
</div>


	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
	<script>


var data = [
  {"sharedLabel": "Category 1", "barData1": 43041, "barData2": 40852},
  {"sharedLabel": "Category 2", "barData1": 38867, "barData2": 36296},
  {"sharedLabel": "Category 3", "barData1": 41748, "barData2": 40757},
  {"sharedLabel": "Category 4", "barData1": 24831, "barData2": 23624},
  {"sharedLabel": "Category 5", "barData1": 15764, "barData2": 15299},
  {"sharedLabel": "Category 6", "barData1": 17006, "barData2": 16071},
  {"sharedLabel": "Category 7", "barData1": 24309, "barData2": 23235},
  {"sharedLabel": "Category 8", "barData1": 46756, "barData2": 46065},
  {"sharedLabel": "Category 9", "barData1": 41923, "barData2": 41704},
  {"sharedLabel": "Category 10", "barData1": 42565, "barData2": 42159},
  {"sharedLabel": "Category 11", "barData1": 44316, "barData2": 45468},
  {"sharedLabel": "Category 12", "barData1": 42975, "barData2": 44223},
  {"sharedLabel": "Category 13", "barData1": 36755, "barData2": 39452},
  {"sharedLabel": "Category 14", "barData1": 31578, "barData2": 34063},
  {"sharedLabel": "Category 15", "barData1": 10328, "barData2": 11799},
  {"sharedLabel": "Category 16", "barData1": 13917, "barData2": 14949},
  {"sharedLabel": "Category 17", "barData1": 7920, "barData2": 8589},
  {"sharedLabel": "Category 18", "barData1": 9003, "barData2": 10397},
  {"sharedLabel": "Category 19", "barData1": 14322, "barData2": 16832},
  {"sharedLabel": "Category 20", "barData1": 12369, "barData2": 15836},
  {"sharedLabel": "Category 21", "barData1": 8710, "barData2": 12377},
  {"sharedLabel": "Category 22", "barData1": 5853, "barData2": 12213}
];

/* edit these settings freely */  
var w = 600,
    h = 400,
    topMargin = 15,
    labelSpace = 40,
    innerMargin = w/2+labelSpace,
    outerMargin = 15,
    gap = 2,
    dataRange = d3.max(data.map(function(d) { return Math.max(d.barData1, d.barData2) }));
    leftLabel = "Left label",
    rightLabel = "Right label";

/* edit with care */
var chartWidth = w - innerMargin - outerMargin,
    barWidth = h / data.length,
    yScale = d3.scale.linear().domain([0, data.length]).range([0, h-topMargin]),
    total = d3.scale.linear().domain([0, dataRange]).range([0, chartWidth - labelSpace]),
    commas = d3.format(",.0f");

//console.log(data.length);

/* main panel */
var vis = d3.select("#vis").append("svg")
    .attr("width", w)
    .attr("height", h);




var bar = vis.selectAll("g.bar")
    .data(data)
  .enter().append("g")
    .attr("class", "bar")
    .attr("transform", function(d, i) {
      return "translate(0," + (yScale(i) + topMargin) + ")";
    });


bar.append("text")
    .attr("class", "below")
    .attr("x", 12)
    .attr("dy", "1.2em")
    .attr("text-anchor", "left")
    .text(function(d) { return d.sharedLabel; })
    .style("fill", "#000000");


bar.append("rect")
    .attr("class", "malebar")
    .attr("height", barWidth-gap)
    .attr("x", 10);



bar.append("svg")
    .attr({
        height: barWidth-gap
    })
    .append("text")
    .attr("class", "up")
    .attr("x", 12)
    .attr("dy", "1.2em")
    .attr("text-anchor", "left")
    .text(function(d) { return d.sharedLabel; })
    .style("fill", "#ffffff");



d3.select("#generate").on("click", function() {
  for (var i=0; i<data.length; i++) {
    data[i].barData1 = Math.random() * dataRange;
    data[i].barData2 = Math.random() * dataRange;
  }
  refresh(data);
});

refresh(data);

function refresh(data) {
    
  var bars = d3.selectAll("g.bar")
      .data(data);
    
  bars.selectAll("rect.malebar")
    .transition()
      .attr("width", function(d) { return total(d.barData1); });
    
   bars.selectAll("svg")
      .attr("width", function(d) { return total(d.barData1) + 10; });   
    

}

	</script>

</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<script src="data:application/x-javascript,%28function%28%29%20%7B%0A%20%20%2F%2F%20If%20window%2EHTMLWidgets%20is%20already%20defined%2C%20then%20use%20it%3B%20otherwise%20create%20a%0A%20%20%2F%2F%20new%20object%2E%20This%20allows%20preceding%20code%20to%20set%20options%20that%20affect%20the%0A%20%20%2F%2F%20initialization%20process%20%28though%20none%20currently%20exist%29%2E%0A%20%20window%2EHTMLWidgets%20%3D%20window%2EHTMLWidgets%20%7C%7C%20%7B%7D%3B%0A%20%20%0A%20%20%2F%2F%20See%20if%20we%27re%20running%20in%20a%20viewer%20pane%2E%20If%20not%2C%20we%27re%20in%20a%20web%20browser%2E%0A%20%20var%20viewerMode%20%3D%20window%2EHTMLWidgets%2EviewerMode%20%3D%0A%20%20%20%20%20%20%2F%5Cbviewer%5Fpane%3D1%5Cb%2F%2Etest%28window%2Elocation%29%3B%0A%20%20%2F%2F%20See%20if%20we%27re%20running%20in%20Shiny%20mode%2E%20If%20not%2C%20it%27s%20a%20static%20document%2E%0A%20%20var%20shinyMode%20%3D%20window%2EHTMLWidgets%2EshinyMode%20%3D%0A%20%20%20%20%20%20typeof%28window%2EShiny%29%20%21%3D%3D%20%22undefined%22%20%26%26%20%21%21window%2EShiny%2EoutputBindings%3B%0A%0A%20%20%2F%2F%20We%20can%27t%20count%20on%20jQuery%20being%20available%2C%20so%20we%20implement%20our%20own%0A%20%20%2F%2F%20version%20if%20necessary%2E%0A%20%20function%20querySelectorAll%28scope%2C%20selector%29%20%7B%0A%20%20%20%20if%20%28typeof%28jQuery%29%20%21%3D%3D%20%22undefined%22%20%26%26%20scope%20instanceof%20jQuery%29%20%7B%0A%20%20%20%20%20%20return%20scope%2Efind%28selector%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28scope%2EquerySelectorAll%29%20%7B%0A%20%20%20%20%20%20return%20scope%2EquerySelectorAll%28selector%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20%2F%2F%20Implement%20jQuery%27s%20extend%0A%20%20function%20extend%28target%20%2F%2A%2C%20%2E%2E%2E%20%2A%2F%29%20%7B%0A%20%20%20%20if%20%28arguments%2Elength%20%3D%3D%201%29%20%7B%0A%20%20%20%20%20%20return%20target%3B%0A%20%20%20%20%7D%0A%20%20%20%20for%20%28var%20i%20%3D%201%3B%20i%20%3C%20arguments%2Elength%3B%20i%2B%2B%29%20%7B%0A%20%20%20%20%20%20var%20source%20%3D%20arguments%5Bi%5D%3B%0A%20%20%20%20%20%20for%20%28var%20prop%20in%20source%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28source%2EhasOwnProperty%28prop%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20target%5Bprop%5D%20%3D%20source%5Bprop%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20return%20target%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Implement%20a%20vague%20facsimilie%20of%20jQuery%27s%20data%20method%20%0A%20%20function%20elementData%28el%2C%20name%2C%20value%29%20%7B%0A%20%20%20%20if%20%28arguments%2Elength%20%3D%3D%202%29%20%7B%0A%20%20%20%20%20%20return%20el%5B%22htmlwidget%5Fdata%5F%22%20%2B%20name%5D%3B%0A%20%20%20%20%7D%20else%20if%20%28arguments%2Elength%20%3D%3D%203%29%20%7B%0A%20%20%20%20%20%20el%5B%22htmlwidget%5Fdata%5F%22%20%2B%20name%5D%20%3D%20value%3B%0A%20%20%20%20%20%20return%20el%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Wrong%20number%20of%20arguments%20for%20elementData%3A%20%22%20%2B%0A%20%20%20%20%20%20%20%20arguments%2Elength%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20function%20on%28obj%2C%20eventName%2C%20func%29%20%7B%0A%20%20%20%20if%20%28obj%2EaddEventListener%29%20%7B%0A%20%20%20%20%20%20obj%2EaddEventListener%28eventName%2C%20func%2C%20false%29%3B%0A%20%20%20%20%7D%20else%20if%20%28obj%2EattachEvent%29%20%7B%0A%20%20%20%20%20%20obj%2EattachEvent%28eventName%2C%20func%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20function%20off%28obj%2C%20eventName%2C%20func%29%20%7B%0A%20%20%20%20if%20%28obj%2EremoveEventListener%29%0A%20%20%20%20%20%20obj%2EremoveEventListener%28eventName%2C%20func%2C%20false%29%3B%0A%20%20%20%20else%20if%20%28obj%2EdetachEvent%29%20%7B%0A%20%20%20%20%20%20obj%2EdetachEvent%28eventName%2C%20func%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20%2F%2F%20Translate%20array%20of%20values%20to%20top%2Fright%2Fbottom%2Fleft%2C%20as%20usual%20with%0A%20%20%2F%2F%20the%20%22padding%22%20CSS%20property%0A%20%20%2F%2F%20https%3A%2F%2Fdeveloper%2Emozilla%2Eorg%2Fen%2DUS%2Fdocs%2FWeb%2FCSS%2Fpadding%0A%20%20function%20unpackPadding%28value%29%20%7B%0A%20%20%20%20if%20%28typeof%28value%29%20%3D%3D%3D%20%22number%22%29%0A%20%20%20%20%20%20value%20%3D%20%5Bvalue%5D%3B%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%201%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B0%5D%2C%20bottom%3A%20value%5B0%5D%2C%20left%3A%20value%5B0%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%202%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B1%5D%2C%20bottom%3A%20value%5B0%5D%2C%20left%3A%20value%5B1%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%203%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B1%5D%2C%20bottom%3A%20value%5B2%5D%2C%20left%3A%20value%5B1%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%204%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B1%5D%2C%20bottom%3A%20value%5B2%5D%2C%20left%3A%20value%5B3%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20%2F%2F%20Convert%20an%20unpacked%20padding%20object%20to%20a%20CSS%20value%0A%20%20function%20paddingToCss%28paddingObj%29%20%7B%0A%20%20%20%20return%20paddingObj%2Etop%20%2B%20%22px%20%22%20%2B%20paddingObj%2Eright%20%2B%20%22px%20%22%20%2B%20paddingObj%2Ebottom%20%2B%20%22px%20%22%20%2B%20paddingObj%2Eleft%20%2B%20%22px%22%3B%0A%20%20%7D%0A%20%20%0A%20%20%2F%2F%20Makes%20a%20number%20suitable%20for%20CSS%0A%20%20function%20px%28x%29%20%7B%0A%20%20%20%20if%20%28typeof%28x%29%20%3D%3D%3D%20%22number%22%29%0A%20%20%20%20%20%20return%20x%20%2B%20%22px%22%3B%0A%20%20%20%20else%0A%20%20%20%20%20%20return%20x%3B%0A%20%20%7D%0A%20%20%0A%20%20%2F%2F%20Retrieves%20runtime%20widget%20sizing%20information%20for%20an%20element%2E%0A%20%20%2F%2F%20The%20return%20value%20is%20either%20null%2C%20or%20an%20object%20with%20fill%2C%20padding%2C%0A%20%20%2F%2F%20defaultWidth%2C%20defaultHeight%20fields%2E%0A%20%20function%20sizingPolicy%28el%29%20%7B%0A%20%20%20%20var%20sizingEl%20%3D%20document%2EquerySelector%28%22script%5Bdata%2Dfor%3D%27%22%20%2B%20el%2Eid%20%2B%20%22%27%5D%5Btype%3D%27application%2Fhtmlwidget%2Dsizing%27%5D%22%29%3B%0A%20%20%20%20if%20%28%21sizingEl%29%0A%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20var%20sp%20%3D%20JSON%2Eparse%28sizingEl%2EtextContent%20%7C%7C%20sizingEl%2Etext%20%7C%7C%20%22%7B%7D%22%29%3B%0A%20%20%20%20if%20%28viewerMode%29%20%7B%0A%20%20%20%20%20%20return%20sp%2Eviewer%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20return%20sp%2Ebrowser%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20function%20initSizing%28el%29%20%7B%0A%20%20%20%20var%20sizing%20%3D%20sizingPolicy%28el%29%3B%0A%20%20%20%20if%20%28%21sizing%29%0A%20%20%20%20%20%20return%3B%0A%20%20%20%20%0A%20%20%20%20var%20cel%20%3D%20document%2EgetElementById%28%22htmlwidget%5Fcontainer%22%29%3B%0A%20%20%20%20if%20%28%21cel%29%0A%20%20%20%20%20%20return%3B%0A%20%20%20%20%0A%20%20%20%20if%20%28typeof%28sizing%2Epadding%29%20%21%3D%3D%20%22undefined%22%29%20%7B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Emargin%20%3D%20%220%22%3B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Epadding%20%3D%20paddingToCss%28unpackPadding%28sizing%2Epadding%29%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20if%20%28sizing%2Efill%29%20%7B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Eoverflow%20%3D%20%22hidden%22%3B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Ewidth%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Eheight%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20document%2EdocumentElement%2Estyle%2Ewidth%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20document%2EdocumentElement%2Estyle%2Eheight%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20if%20%28cel%29%20%7B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Eposition%20%3D%20%22absolute%22%3B%0A%20%20%20%20%20%20%20%20var%20pad%20%3D%20unpackPadding%28sizing%2Epadding%29%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Etop%20%3D%20pad%2Etop%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Eright%20%3D%20pad%2Eright%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Ebottom%20%3D%20pad%2Ebottom%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Eleft%20%3D%20pad%2Eleft%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20el%2Estyle%2Ewidth%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20%20%20el%2Estyle%2Eheight%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20el%2Estyle%2Ewidth%20%3D%20px%28sizing%2Ewidth%29%3B%0A%20%20%20%20%20%20el%2Estyle%2Eheight%20%3D%20px%28sizing%2Eheight%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20return%20%7B%0A%20%20%20%20%20%20getWidth%3A%20function%28%29%20%7B%0A%20%20%20%20%20%20%20%20return%20cel%2EoffsetWidth%3B%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20getHeight%3A%20function%28%29%20%7B%0A%20%20%20%20%20%20%20%20return%20cel%2EoffsetHeight%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20%2F%2F%20Default%20implementations%20for%20methods%0A%20%20var%20defaults%20%3D%20%7B%0A%20%20%20%20find%3A%20function%28scope%29%20%7B%0A%20%20%20%20%20%20return%20querySelectorAll%28scope%2C%20%22%2E%22%20%2B%20this%2Ename%29%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20sizing%3A%20%7B%7D%0A%20%20%7D%3B%0A%20%20%0A%20%20%2F%2F%20Called%20by%20widget%20bindings%20to%20register%20a%20new%20type%20of%20widget%2E%20The%20definition%0A%20%20%2F%2F%20object%20can%20contain%20the%20following%20properties%3A%0A%20%20%2F%2F%20%2D%20name%20%28required%29%20%2D%20A%20string%20indicating%20the%20binding%20name%2C%20which%20will%20be%0A%20%20%2F%2F%20%20%20used%20by%20default%20as%20the%20CSS%20classname%20to%20look%20for%2E%0A%20%20%2F%2F%20%2D%20initialize%20%28optional%29%20%2D%20A%20function%28el%29%20that%20will%20be%20called%20once%20per%0A%20%20%2F%2F%20%20%20widget%20element%3B%20if%20a%20value%20is%20returned%2C%20it%20will%20be%20passed%20as%20the%20third%0A%20%20%2F%2F%20%20%20value%20to%20renderValue%2E%0A%20%20%2F%2F%20%2D%20renderValue%20%28required%29%20%2D%20A%20function%28el%2C%20data%2C%20initValue%29%20that%20will%20be%0A%20%20%2F%2F%20%20%20called%20with%20data%2E%20Static%20contexts%20will%20cause%20this%20to%20be%20called%20once%20per%0A%20%20%2F%2F%20%20%20element%3B%20Shiny%20apps%20will%20cause%20this%20to%20be%20called%20multiple%20times%20per%0A%20%20%2F%2F%20%20%20element%2C%20as%20the%20data%20changes%2E%0A%20%20window%2EHTMLWidgets%2Ewidget%20%3D%20function%28definition%29%20%7B%0A%20%20%20%20if%20%28%21definition%2Ename%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Widget%20must%20have%20a%20name%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28%21definition%2Etype%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Widget%20must%20have%20a%20type%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Currently%20we%20only%20support%20output%20widgets%0A%20%20%20%20if%20%28definition%2Etype%20%21%3D%3D%20%22output%22%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Unrecognized%20widget%20type%20%27%22%20%2B%20definition%2Etype%20%2B%20%22%27%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20TODO%3A%20Verify%20that%20%2Ename%20is%20a%20valid%20CSS%20classname%0A%20%20%20%20if%20%28%21definition%2ErenderValue%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Widget%20must%20have%20a%20renderValue%20function%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20%2F%2F%20Merge%20defaults%20into%20the%20definition%3B%20don%27t%20mutate%20the%20original%20definition%2E%0A%20%20%20%20%2F%2F%20The%20base%20object%20is%20a%20Shiny%20output%20binding%20if%20we%27re%20running%20in%20Shiny%20mode%2C%0A%20%20%20%20%2F%2F%20or%20an%20empty%20object%20if%20we%27re%20not%2E%0A%20%20%20%20definition%20%3D%20extend%28shinyMode%20%3F%20new%20Shiny%2EOutputBinding%28%29%20%3A%20%7B%7D%2C%0A%20%20%20%20%20%20defaults%2C%20definition%0A%20%20%20%20%29%3B%0A%20%20%20%20%0A%20%20%20%20if%20%28%21shinyMode%29%20%7B%0A%20%20%20%20%20%20%2F%2F%20We%27re%20not%20in%20a%20Shiny%20context%2E%20Use%20a%20simple%20widget%20registration%20scheme%2E%0A%20%20%20%20%20%20window%2EHTMLWidgets%2Ewidgets%20%3D%20window%2EHTMLWidgets%2Ewidgets%20%7C%7C%20%5B%5D%3B%0A%20%20%20%20%20%20window%2EHTMLWidgets%2Ewidgets%2Epush%28definition%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%2F%2F%20It%27s%20Shiny%2E%20Register%20the%20definition%20as%20an%20output%20binding%2E%0A%0A%20%20%20%20%20%20%2F%2F%20Wrap%20renderValue%20to%20handle%20initialization%2C%20which%20unfortunately%20isn%27t%0A%20%20%20%20%20%20%2F%2F%20supported%20natively%20by%20Shiny%20at%20the%20time%20of%20this%20writing%2E%0A%0A%20%20%20%20%20%20%2F%2F%20NB%3A%20definition%2Einitialize%20may%20be%20undefined%2C%20as%20it%27s%20optional%2E%0A%0A%20%20%20%20%20%20%2F%2F%20Rename%20initialize%20to%20make%20sure%20it%20isn%27t%20called%20by%20a%20future%20version%0A%20%20%20%20%20%20%2F%2F%20of%20Shiny%20that%20does%20support%20initialize%20directly%2E%0A%20%20%20%20%20%20definition%2E%5Fhtmlwidgets%5Finitialize%20%3D%20definition%2Einitialize%3B%0A%20%20%20%20%20%20delete%20definition%2Einitialize%3B%0A%0A%20%20%20%20%20%20definition%2E%5Fhtmlwidgets%5FrenderValue%20%3D%20definition%2ErenderValue%3B%0A%20%20%20%20%20%20definition%2ErenderValue%20%3D%20function%28el%2C%20data%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28%21elementData%28el%2C%20%22initialized%22%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20initSizing%28el%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20elementData%28el%2C%20%22initialized%22%2C%20true%29%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28this%2E%5Fhtmlwidgets%5Finitialize%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20result%20%3D%20this%2E%5Fhtmlwidgets%5Finitialize%28el%2C%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20el%2EoffsetHeight%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20elementData%28el%2C%20%22init%5Fresult%22%2C%20result%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20Shiny%2ErenderDependencies%28data%2Edeps%29%3B%0A%20%20%20%20%20%20%20%20this%2E%5Fhtmlwidgets%5FrenderValue%28el%2C%20data%2Ex%2C%0A%20%20%20%20%20%20%20%20%20%20elementData%28el%2C%20%22init%5Fresult%22%29%0A%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%7D%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Wrap%20resize%20to%20include%20the%20return%20value%20from%20initialize%2E%0A%20%20%20%20%20%20definition%2E%5Fhtmlwidgets%5Fresize%20%3D%20definition%2Eresize%3B%0A%20%20%20%20%20%20definition%2Eresize%20%3D%20function%28el%2C%20width%2C%20height%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Shiny%20can%20call%20resize%20before%20initialize%2FrenderValue%20have%20been%0A%20%20%20%20%20%20%20%20%2F%2F%20called%2C%20which%20doesn%27t%20make%20sense%20for%20widgets%2E%0A%20%20%20%20%20%20%20%20if%20%28elementData%28el%2C%20%22initialized%22%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20this%2E%5Fhtmlwidgets%5Fresize%28el%2C%20width%2C%20height%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20elementData%28el%2C%20%22init%5Fresult%22%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%3B%0A%0A%20%20%20%20%20%20Shiny%2EoutputBindings%2Eregister%28definition%2C%20definition%2Ename%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%3B%0A%0A%20%20%2F%2F%20If%20not%20Shiny%2C%20then%20render%20after%20the%20document%20finishes%20loading%0A%20%20if%20%28%21shinyMode%29%20%7B%0A%20%20%20%20%2F%2F%20Statically%20render%20all%20elements%20that%20are%20of%20this%20widget%27s%20class%0A%20%20%20%20function%20staticRender%28%29%20%7B%0A%20%20%20%20%20%20var%20bindings%20%3D%20window%2EHTMLWidgets%2Ewidgets%20%7C%7C%20%5B%5D%3B%0A%20%20%20%20%20%20for%20%28var%20i%20%3D%200%3B%20i%20%3C%20bindings%2Elength%3B%20i%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20var%20binding%20%3D%20bindings%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20var%20matches%20%3D%20binding%2Efind%28document%2EdocumentElement%29%3B%0A%20%20%20%20%20%20%20%20for%20%28var%20j%20%3D%200%3B%20j%20%3C%20matches%2Elength%3B%20j%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20el%20%3D%20matches%5Bj%5D%3B%0A%20%20%20%20%20%20%20%20%20%20var%20sizeObj%20%3D%20initSizing%28el%2C%20binding%29%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20TODO%3A%20Check%20if%20el%20is%20already%20bound%0A%20%20%20%20%20%20%20%20%20%20var%20initResult%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28binding%2Einitialize%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20initResult%20%3D%20binding%2Einitialize%28el%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20sizeObj%20%3F%20sizeObj%2EgetWidth%28%29%20%3A%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20sizeObj%20%3F%20sizeObj%2EgetHeight%28%29%20%3A%20el%2EoffsetHeight%0A%20%20%20%20%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20if%20%28binding%2Eresize%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20lastSize%20%3D%20%7B%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20on%28window%2C%20%22resize%22%2C%20function%28e%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20size%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20w%3A%20sizeObj%20%3F%20sizeObj%2EgetWidth%28%29%20%3A%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20h%3A%20sizeObj%20%3F%20sizeObj%2EgetHeight%28%29%20%3A%20el%2EoffsetHeight%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28size%2Ew%20%3D%3D%3D%200%20%26%26%20size%2Eh%20%3D%3D%3D%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28size%2Ew%20%3D%3D%3D%20lastSize%2Ew%20%26%26%20size%2Eh%20%3D%3D%3D%20lastSize%2Eh%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20lastSize%20%3D%20size%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20binding%2Eresize%28el%2C%20size%2Ew%2C%20size%2Eh%2C%20initResult%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20var%20scriptData%20%3D%20document%2EquerySelector%28%22script%5Bdata%2Dfor%3D%27%22%20%2B%20el%2Eid%20%2B%20%22%27%5D%5Btype%3D%27application%2Fjson%27%5D%22%29%3B%0A%20%20%20%20%20%20%20%20%20%20if%20%28scriptData%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20data%20%3D%20JSON%2Eparse%28scriptData%2EtextContent%20%7C%7C%20scriptData%2Etext%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20binding%2ErenderValue%28el%2C%20data%2C%20initResult%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Wait%20until%20after%20the%20document%20has%20loaded%20to%20render%20the%20widgets%2E%0A%20%20%20%20if%20%28document%2EaddEventListener%29%20%7B%0A%20%20%20%20%20%20document%2EaddEventListener%28%22DOMContentLoaded%22%2C%20function%28%29%20%7B%0A%20%20%20%20%20%20%20%20document%2EremoveEventListener%28%22DOMContentLoaded%22%2C%20arguments%2Ecallee%2C%20false%29%3B%0A%20%20%20%20%20%20%20%20staticRender%28%29%3B%0A%20%20%20%20%20%20%7D%2C%20false%29%3B%0A%20%20%20%20%7D%20else%20if%20%28document%2EattachEvent%29%20%7B%0A%20%20%20%20%20%20document%2EattachEvent%28%22onreadystatechange%22%2C%20function%28%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28document%2EreadyState%20%3D%3D%3D%20%22complete%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20document%2EdetachEvent%28%22onreadystatechange%22%2C%20arguments%2Ecallee%29%3B%0A%20%20%20%20%20%20%20%20%20%20staticRender%28%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%0A%20%20window%2EHTMLWidgets%2EgetAttachmentUrl%20%3D%20function%28depname%2C%20key%29%20%7B%0A%20%20%20%20%2F%2F%20If%20no%20key%2C%20default%20to%20the%20first%20item%0A%20%20%20%20if%20%28typeof%28key%29%20%3D%3D%3D%20%22undefined%22%29%0A%20%20%20%20%20%20key%20%3D%201%3B%0A%20%20%20%20%0A%20%20%20%20var%20link%20%3D%20document%2EgetElementById%28depname%20%2B%20%22%2D%22%20%2B%20key%20%2B%20%22%2Dattachment%22%29%3B%0A%20%20%20%20if%20%28%21link%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Attachment%20%22%20%2B%20depname%20%2B%20%22%2F%22%20%2B%20key%20%2B%20%22%20not%20found%20in%20document%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20link%2EgetAttribute%28%22href%22%29%3B%0A%20%20%7D%3B%0A%0A%20%20window%2EHTMLWidgets%2EdataframeToD3%20%3D%20function%28df%29%20%7B%0A%20%20%20%20var%20names%20%3D%20%5B%5D%3B%0A%20%20%20%20var%20length%3B%0A%20%20%20%20for%20%28var%20name%20in%20df%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28df%2EhasOwnProperty%28name%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20names%2Epush%28name%29%3B%0A%20%20%20%20%20%20%20%20if%20%28typeof%28df%5Bname%5D%29%20%21%3D%3D%20%22object%22%20%7C%7C%20typeof%28df%5Bname%5D%2Elength%29%20%3D%3D%3D%20%22undefined%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error%28%22All%20fields%20must%20be%20arrays%22%29%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20%28typeof%28length%29%20%21%3D%3D%20%22undefined%22%20%26%26%20length%20%21%3D%3D%20df%5Bname%5D%2Elength%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error%28%22All%20fields%20must%20be%20arrays%20of%20the%20same%20length%22%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20length%20%3D%20df%5Bname%5D%2Elength%3B%0A%20%20%20%20%7D%0A%20%20%20%20var%20results%20%3D%20%5B%5D%3B%0A%20%20%20%20var%20item%3B%0A%20%20%20%20for%20%28var%20row%20%3D%200%3B%20row%20%3C%20length%3B%20row%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20item%20%3D%20%7B%7D%3B%0A%20%20%20%20%20%20%20%20for%20%28var%20col%20%3D%200%3B%20col%20%3C%20names%2Elength%3B%20col%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20item%5Bnames%5Bcol%5D%5D%20%3D%20df%5Bnames%5Bcol%5D%5D%5Brow%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20results%2Epush%28item%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20results%3B%0A%20%20%7D%3B%0A%20%20%0A%20%20window%2EHTMLWidgets%2EtransposeArray2D%20%3D%20function%28array%29%20%7B%0A%20%20%20%20%20%20var%20newArray%20%3D%20array%5B0%5D%2Emap%28function%28col%2C%20i%29%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20return%20array%2Emap%28function%28row%29%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20row%5Bi%5D%20%0A%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%20%20return%20newArray%3B%0A%20%20%7D%3B%0A%7D%29%28%29%3B%0A"></script>
<script src="data:application/x-javascript,%2F%2A%21%20jQuery%20v2%2E1%2E1%20%7C%20%28c%29%202005%2C%202014%20jQuery%20Foundation%2C%20Inc%2E%20%7C%20jquery%2Eorg%2Flicense%20%2A%2F%0A%21function%28a%2Cb%29%7B%22object%22%3D%3Dtypeof%20module%26%26%22object%22%3D%3Dtypeof%20module%2Eexports%3Fmodule%2Eexports%3Da%2Edocument%3Fb%28a%2C%210%29%3Afunction%28a%29%7Bif%28%21a%2Edocument%29throw%20new%20Error%28%22jQuery%20requires%20a%20window%20with%20a%20document%22%29%3Breturn%20b%28a%29%7D%3Ab%28a%29%7D%28%22undefined%22%21%3Dtypeof%20window%3Fwindow%3Athis%2Cfunction%28a%2Cb%29%7Bvar%20c%3D%5B%5D%2Cd%3Dc%2Eslice%2Ce%3Dc%2Econcat%2Cf%3Dc%2Epush%2Cg%3Dc%2EindexOf%2Ch%3D%7B%7D%2Ci%3Dh%2EtoString%2Cj%3Dh%2EhasOwnProperty%2Ck%3D%7B%7D%2Cl%3Da%2Edocument%2Cm%3D%222%2E1%2E1%22%2Cn%3Dfunction%28a%2Cb%29%7Breturn%20new%20n%2Efn%2Einit%28a%2Cb%29%7D%2Co%3D%2F%5E%5B%5Cs%5CuFEFF%5CxA0%5D%2B%7C%5B%5Cs%5CuFEFF%5CxA0%5D%2B%24%2Fg%2Cp%3D%2F%5E%2Dms%2D%2F%2Cq%3D%2F%2D%28%5B%5Cda%2Dz%5D%29%2Fgi%2Cr%3Dfunction%28a%2Cb%29%7Breturn%20b%2EtoUpperCase%28%29%7D%3Bn%2Efn%3Dn%2Eprototype%3D%7Bjquery%3Am%2Cconstructor%3An%2Cselector%3A%22%22%2Clength%3A0%2CtoArray%3Afunction%28%29%7Breturn%20d%2Ecall%28this%29%7D%2Cget%3Afunction%28a%29%7Breturn%20null%21%3Da%3F0%3Ea%3Fthis%5Ba%2Bthis%2Elength%5D%3Athis%5Ba%5D%3Ad%2Ecall%28this%29%7D%2CpushStack%3Afunction%28a%29%7Bvar%20b%3Dn%2Emerge%28this%2Econstructor%28%29%2Ca%29%3Breturn%20b%2EprevObject%3Dthis%2Cb%2Econtext%3Dthis%2Econtext%2Cb%7D%2Ceach%3Afunction%28a%2Cb%29%7Breturn%20n%2Eeach%28this%2Ca%2Cb%29%7D%2Cmap%3Afunction%28a%29%7Breturn%20this%2EpushStack%28n%2Emap%28this%2Cfunction%28b%2Cc%29%7Breturn%20a%2Ecall%28b%2Cc%2Cb%29%7D%29%29%7D%2Cslice%3Afunction%28%29%7Breturn%20this%2EpushStack%28d%2Eapply%28this%2Carguments%29%29%7D%2Cfirst%3Afunction%28%29%7Breturn%20this%2Eeq%280%29%7D%2Clast%3Afunction%28%29%7Breturn%20this%2Eeq%28%2D1%29%7D%2Ceq%3Afunction%28a%29%7Bvar%20b%3Dthis%2Elength%2Cc%3D%2Ba%2B%280%3Ea%3Fb%3A0%29%3Breturn%20this%2EpushStack%28c%3E%3D0%26%26b%3Ec%3F%5Bthis%5Bc%5D%5D%3A%5B%5D%29%7D%2Cend%3Afunction%28%29%7Breturn%20this%2EprevObject%7C%7Cthis%2Econstructor%28null%29%7D%2Cpush%3Af%2Csort%3Ac%2Esort%2Csplice%3Ac%2Esplice%7D%2Cn%2Eextend%3Dn%2Efn%2Eextend%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%3Darguments%5B0%5D%7C%7C%7B%7D%2Ch%3D1%2Ci%3Darguments%2Elength%2Cj%3D%211%3Bfor%28%22boolean%22%3D%3Dtypeof%20g%26%26%28j%3Dg%2Cg%3Darguments%5Bh%5D%7C%7C%7B%7D%2Ch%2B%2B%29%2C%22object%22%3D%3Dtypeof%20g%7C%7Cn%2EisFunction%28g%29%7C%7C%28g%3D%7B%7D%29%2Ch%3D%3D%3Di%26%26%28g%3Dthis%2Ch%2D%2D%29%3Bi%3Eh%3Bh%2B%2B%29if%28null%21%3D%28a%3Darguments%5Bh%5D%29%29for%28b%20in%20a%29c%3Dg%5Bb%5D%2Cd%3Da%5Bb%5D%2Cg%21%3D%3Dd%26%26%28j%26%26d%26%26%28n%2EisPlainObject%28d%29%7C%7C%28e%3Dn%2EisArray%28d%29%29%29%3F%28e%3F%28e%3D%211%2Cf%3Dc%26%26n%2EisArray%28c%29%3Fc%3A%5B%5D%29%3Af%3Dc%26%26n%2EisPlainObject%28c%29%3Fc%3A%7B%7D%2Cg%5Bb%5D%3Dn%2Eextend%28j%2Cf%2Cd%29%29%3Avoid%200%21%3D%3Dd%26%26%28g%5Bb%5D%3Dd%29%29%3Breturn%20g%7D%2Cn%2Eextend%28%7Bexpando%3A%22jQuery%22%2B%28m%2BMath%2Erandom%28%29%29%2Ereplace%28%2F%5CD%2Fg%2C%22%22%29%2CisReady%3A%210%2Cerror%3Afunction%28a%29%7Bthrow%20new%20Error%28a%29%7D%2Cnoop%3Afunction%28%29%7B%7D%2CisFunction%3Afunction%28a%29%7Breturn%22function%22%3D%3D%3Dn%2Etype%28a%29%7D%2CisArray%3AArray%2EisArray%2CisWindow%3Afunction%28a%29%7Breturn%20null%21%3Da%26%26a%3D%3D%3Da%2Ewindow%7D%2CisNumeric%3Afunction%28a%29%7Breturn%21n%2EisArray%28a%29%26%26a%2DparseFloat%28a%29%3E%3D0%7D%2CisPlainObject%3Afunction%28a%29%7Breturn%22object%22%21%3D%3Dn%2Etype%28a%29%7C%7Ca%2EnodeType%7C%7Cn%2EisWindow%28a%29%3F%211%3Aa%2Econstructor%26%26%21j%2Ecall%28a%2Econstructor%2Eprototype%2C%22isPrototypeOf%22%29%3F%211%3A%210%7D%2CisEmptyObject%3Afunction%28a%29%7Bvar%20b%3Bfor%28b%20in%20a%29return%211%3Breturn%210%7D%2Ctype%3Afunction%28a%29%7Breturn%20null%3D%3Da%3Fa%2B%22%22%3A%22object%22%3D%3Dtypeof%20a%7C%7C%22function%22%3D%3Dtypeof%20a%3Fh%5Bi%2Ecall%28a%29%5D%7C%7C%22object%22%3Atypeof%20a%7D%2CglobalEval%3Afunction%28a%29%7Bvar%20b%2Cc%3Deval%3Ba%3Dn%2Etrim%28a%29%2Ca%26%26%281%3D%3D%3Da%2EindexOf%28%22use%20strict%22%29%3F%28b%3Dl%2EcreateElement%28%22script%22%29%2Cb%2Etext%3Da%2Cl%2Ehead%2EappendChild%28b%29%2EparentNode%2EremoveChild%28b%29%29%3Ac%28a%29%29%7D%2CcamelCase%3Afunction%28a%29%7Breturn%20a%2Ereplace%28p%2C%22ms%2D%22%29%2Ereplace%28q%2Cr%29%7D%2CnodeName%3Afunction%28a%2Cb%29%7Breturn%20a%2EnodeName%26%26a%2EnodeName%2EtoLowerCase%28%29%3D%3D%3Db%2EtoLowerCase%28%29%7D%2Ceach%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%3D0%2Cf%3Da%2Elength%2Cg%3Ds%28a%29%3Bif%28c%29%7Bif%28g%29%7Bfor%28%3Bf%3Ee%3Be%2B%2B%29if%28d%3Db%2Eapply%28a%5Be%5D%2Cc%29%2Cd%3D%3D%3D%211%29break%7Delse%20for%28e%20in%20a%29if%28d%3Db%2Eapply%28a%5Be%5D%2Cc%29%2Cd%3D%3D%3D%211%29break%7Delse%20if%28g%29%7Bfor%28%3Bf%3Ee%3Be%2B%2B%29if%28d%3Db%2Ecall%28a%5Be%5D%2Ce%2Ca%5Be%5D%29%2Cd%3D%3D%3D%211%29break%7Delse%20for%28e%20in%20a%29if%28d%3Db%2Ecall%28a%5Be%5D%2Ce%2Ca%5Be%5D%29%2Cd%3D%3D%3D%211%29break%3Breturn%20a%7D%2Ctrim%3Afunction%28a%29%7Breturn%20null%3D%3Da%3F%22%22%3A%28a%2B%22%22%29%2Ereplace%28o%2C%22%22%29%7D%2CmakeArray%3Afunction%28a%2Cb%29%7Bvar%20c%3Db%7C%7C%5B%5D%3Breturn%20null%21%3Da%26%26%28s%28Object%28a%29%29%3Fn%2Emerge%28c%2C%22string%22%3D%3Dtypeof%20a%3F%5Ba%5D%3Aa%29%3Af%2Ecall%28c%2Ca%29%29%2Cc%7D%2CinArray%3Afunction%28a%2Cb%2Cc%29%7Breturn%20null%3D%3Db%3F%2D1%3Ag%2Ecall%28b%2Ca%2Cc%29%7D%2Cmerge%3Afunction%28a%2Cb%29%7Bfor%28var%20c%3D%2Bb%2Elength%2Cd%3D0%2Ce%3Da%2Elength%3Bc%3Ed%3Bd%2B%2B%29a%5Be%2B%2B%5D%3Db%5Bd%5D%3Breturn%20a%2Elength%3De%2Ca%7D%2Cgrep%3Afunction%28a%2Cb%2Cc%29%7Bfor%28var%20d%2Ce%3D%5B%5D%2Cf%3D0%2Cg%3Da%2Elength%2Ch%3D%21c%3Bg%3Ef%3Bf%2B%2B%29d%3D%21b%28a%5Bf%5D%2Cf%29%2Cd%21%3D%3Dh%26%26e%2Epush%28a%5Bf%5D%29%3Breturn%20e%7D%2Cmap%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Cf%3D0%2Cg%3Da%2Elength%2Ch%3Ds%28a%29%2Ci%3D%5B%5D%3Bif%28h%29for%28%3Bg%3Ef%3Bf%2B%2B%29d%3Db%28a%5Bf%5D%2Cf%2Cc%29%2Cnull%21%3Dd%26%26i%2Epush%28d%29%3Belse%20for%28f%20in%20a%29d%3Db%28a%5Bf%5D%2Cf%2Cc%29%2Cnull%21%3Dd%26%26i%2Epush%28d%29%3Breturn%20e%2Eapply%28%5B%5D%2Ci%29%7D%2Cguid%3A1%2Cproxy%3Afunction%28a%2Cb%29%7Bvar%20c%2Ce%2Cf%3Breturn%22string%22%3D%3Dtypeof%20b%26%26%28c%3Da%5Bb%5D%2Cb%3Da%2Ca%3Dc%29%2Cn%2EisFunction%28a%29%3F%28e%3Dd%2Ecall%28arguments%2C2%29%2Cf%3Dfunction%28%29%7Breturn%20a%2Eapply%28b%7C%7Cthis%2Ce%2Econcat%28d%2Ecall%28arguments%29%29%29%7D%2Cf%2Eguid%3Da%2Eguid%3Da%2Eguid%7C%7Cn%2Eguid%2B%2B%2Cf%29%3Avoid%200%7D%2Cnow%3ADate%2Enow%2Csupport%3Ak%7D%29%2Cn%2Eeach%28%22Boolean%20Number%20String%20Function%20Array%20Date%20RegExp%20Object%20Error%22%2Esplit%28%22%20%22%29%2Cfunction%28a%2Cb%29%7Bh%5B%22%5Bobject%20%22%2Bb%2B%22%5D%22%5D%3Db%2EtoLowerCase%28%29%7D%29%3Bfunction%20s%28a%29%7Bvar%20b%3Da%2Elength%2Cc%3Dn%2Etype%28a%29%3Breturn%22function%22%3D%3D%3Dc%7C%7Cn%2EisWindow%28a%29%3F%211%3A1%3D%3D%3Da%2EnodeType%26%26b%3F%210%3A%22array%22%3D%3D%3Dc%7C%7C0%3D%3D%3Db%7C%7C%22number%22%3D%3Dtypeof%20b%26%26b%3E0%26%26b%2D1%20in%20a%7Dvar%20t%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%2Co%2Cp%2Cq%2Cr%2Cs%2Ct%2Cu%3D%22sizzle%22%2B%2Dnew%20Date%2Cv%3Da%2Edocument%2Cw%3D0%2Cx%3D0%2Cy%3Dgb%28%29%2Cz%3Dgb%28%29%2CA%3Dgb%28%29%2CB%3Dfunction%28a%2Cb%29%7Breturn%20a%3D%3D%3Db%26%26%28l%3D%210%29%2C0%7D%2CC%3D%22undefined%22%2CD%3D1%3C%3C31%2CE%3D%7B%7D%2EhasOwnProperty%2CF%3D%5B%5D%2CG%3DF%2Epop%2CH%3DF%2Epush%2CI%3DF%2Epush%2CJ%3DF%2Eslice%2CK%3DF%2EindexOf%7C%7Cfunction%28a%29%7Bfor%28var%20b%3D0%2Cc%3Dthis%2Elength%3Bc%3Eb%3Bb%2B%2B%29if%28this%5Bb%5D%3D%3D%3Da%29return%20b%3Breturn%2D1%7D%2CL%3D%22checked%7Cselected%7Casync%7Cautofocus%7Cautoplay%7Ccontrols%7Cdefer%7Cdisabled%7Chidden%7Cismap%7Cloop%7Cmultiple%7Copen%7Creadonly%7Crequired%7Cscoped%22%2CM%3D%22%5B%5C%5Cx20%5C%5Ct%5C%5Cr%5C%5Cn%5C%5Cf%5D%22%2CN%3D%22%28%3F%3A%5C%5C%5C%5C%2E%7C%5B%5C%5Cw%2D%5D%7C%5B%5E%5C%5Cx00%2D%5C%5Cxa0%5D%29%2B%22%2CO%3DN%2Ereplace%28%22w%22%2C%22w%23%22%29%2CP%3D%22%5C%5C%5B%22%2BM%2B%22%2A%28%22%2BN%2B%22%29%28%3F%3A%22%2BM%2B%22%2A%28%5B%2A%5E%24%7C%21%7E%5D%3F%3D%29%22%2BM%2B%22%2A%28%3F%3A%27%28%28%3F%3A%5C%5C%5C%5C%2E%7C%5B%5E%5C%5C%5C%5C%27%5D%29%2A%29%27%7C%5C%22%28%28%3F%3A%5C%5C%5C%5C%2E%7C%5B%5E%5C%5C%5C%5C%5C%22%5D%29%2A%29%5C%22%7C%28%22%2BO%2B%22%29%29%7C%29%22%2BM%2B%22%2A%5C%5C%5D%22%2CQ%3D%22%3A%28%22%2BN%2B%22%29%28%3F%3A%5C%5C%28%28%28%27%28%28%3F%3A%5C%5C%5C%5C%2E%7C%5B%5E%5C%5C%5C%5C%27%5D%29%2A%29%27%7C%5C%22%28%28%3F%3A%5C%5C%5C%5C%2E%7C%5B%5E%5C%5C%5C%5C%5C%22%5D%29%2A%29%5C%22%29%7C%28%28%3F%3A%5C%5C%5C%5C%2E%7C%5B%5E%5C%5C%5C%5C%28%29%5B%5C%5C%5D%5D%7C%22%2BP%2B%22%29%2A%29%7C%2E%2A%29%5C%5C%29%7C%29%22%2CR%3Dnew%20RegExp%28%22%5E%22%2BM%2B%22%2B%7C%28%28%3F%3A%5E%7C%5B%5E%5C%5C%5C%5C%5D%29%28%3F%3A%5C%5C%5C%5C%2E%29%2A%29%22%2BM%2B%22%2B%24%22%2C%22g%22%29%2CS%3Dnew%20RegExp%28%22%5E%22%2BM%2B%22%2A%2C%22%2BM%2B%22%2A%22%29%2CT%3Dnew%20RegExp%28%22%5E%22%2BM%2B%22%2A%28%5B%3E%2B%7E%5D%7C%22%2BM%2B%22%29%22%2BM%2B%22%2A%22%29%2CU%3Dnew%20RegExp%28%22%3D%22%2BM%2B%22%2A%28%5B%5E%5C%5C%5D%27%5C%22%5D%2A%3F%29%22%2BM%2B%22%2A%5C%5C%5D%22%2C%22g%22%29%2CV%3Dnew%20RegExp%28Q%29%2CW%3Dnew%20RegExp%28%22%5E%22%2BO%2B%22%24%22%29%2CX%3D%7BID%3Anew%20RegExp%28%22%5E%23%28%22%2BN%2B%22%29%22%29%2CCLASS%3Anew%20RegExp%28%22%5E%5C%5C%2E%28%22%2BN%2B%22%29%22%29%2CTAG%3Anew%20RegExp%28%22%5E%28%22%2BN%2Ereplace%28%22w%22%2C%22w%2A%22%29%2B%22%29%22%29%2CATTR%3Anew%20RegExp%28%22%5E%22%2BP%29%2CPSEUDO%3Anew%20RegExp%28%22%5E%22%2BQ%29%2CCHILD%3Anew%20RegExp%28%22%5E%3A%28only%7Cfirst%7Clast%7Cnth%7Cnth%2Dlast%29%2D%28child%7Cof%2Dtype%29%28%3F%3A%5C%5C%28%22%2BM%2B%22%2A%28even%7Codd%7C%28%28%5B%2B%2D%5D%7C%29%28%5C%5Cd%2A%29n%7C%29%22%2BM%2B%22%2A%28%3F%3A%28%5B%2B%2D%5D%7C%29%22%2BM%2B%22%2A%28%5C%5Cd%2B%29%7C%29%29%22%2BM%2B%22%2A%5C%5C%29%7C%29%22%2C%22i%22%29%2Cbool%3Anew%20RegExp%28%22%5E%28%3F%3A%22%2BL%2B%22%29%24%22%2C%22i%22%29%2CneedsContext%3Anew%20RegExp%28%22%5E%22%2BM%2B%22%2A%5B%3E%2B%7E%5D%7C%3A%28even%7Codd%7Ceq%7Cgt%7Clt%7Cnth%7Cfirst%7Clast%29%28%3F%3A%5C%5C%28%22%2BM%2B%22%2A%28%28%3F%3A%2D%5C%5Cd%29%3F%5C%5Cd%2A%29%22%2BM%2B%22%2A%5C%5C%29%7C%29%28%3F%3D%5B%5E%2D%5D%7C%24%29%22%2C%22i%22%29%7D%2CY%3D%2F%5E%28%3F%3Ainput%7Cselect%7Ctextarea%7Cbutton%29%24%2Fi%2CZ%3D%2F%5Eh%5Cd%24%2Fi%2C%24%3D%2F%5E%5B%5E%7B%5D%2B%5C%7B%5Cs%2A%5C%5Bnative%20%5Cw%2F%2C%5F%3D%2F%5E%28%3F%3A%23%28%5B%5Cw%2D%5D%2B%29%7C%28%5Cw%2B%29%7C%5C%2E%28%5B%5Cw%2D%5D%2B%29%29%24%2F%2Cab%3D%2F%5B%2B%7E%5D%2F%2Cbb%3D%2F%27%7C%5C%5C%2Fg%2Ccb%3Dnew%20RegExp%28%22%5C%5C%5C%5C%28%5B%5C%5Cda%2Df%5D%7B1%2C6%7D%22%2BM%2B%22%3F%7C%28%22%2BM%2B%22%29%7C%2E%29%22%2C%22ig%22%29%2Cdb%3Dfunction%28a%2Cb%2Cc%29%7Bvar%20d%3D%220x%22%2Bb%2D65536%3Breturn%20d%21%3D%3Dd%7C%7Cc%3Fb%3A0%3Ed%3FString%2EfromCharCode%28d%2B65536%29%3AString%2EfromCharCode%28d%3E%3E10%7C55296%2C1023%26d%7C56320%29%7D%3Btry%7BI%2Eapply%28F%3DJ%2Ecall%28v%2EchildNodes%29%2Cv%2EchildNodes%29%2CF%5Bv%2EchildNodes%2Elength%5D%2EnodeType%7Dcatch%28eb%29%7BI%3D%7Bapply%3AF%2Elength%3Ffunction%28a%2Cb%29%7BH%2Eapply%28a%2CJ%2Ecall%28b%29%29%7D%3Afunction%28a%2Cb%29%7Bvar%20c%3Da%2Elength%2Cd%3D0%3Bwhile%28a%5Bc%2B%2B%5D%3Db%5Bd%2B%2B%5D%29%3Ba%2Elength%3Dc%2D1%7D%7D%7Dfunction%20fb%28a%2Cb%2Cd%2Ce%29%7Bvar%20f%2Ch%2Cj%2Ck%2Cl%2Co%2Cr%2Cs%2Cw%2Cx%3Bif%28%28b%3Fb%2EownerDocument%7C%7Cb%3Av%29%21%3D%3Dn%26%26m%28b%29%2Cb%3Db%7C%7Cn%2Cd%3Dd%7C%7C%5B%5D%2C%21a%7C%7C%22string%22%21%3Dtypeof%20a%29return%20d%3Bif%281%21%3D%3D%28k%3Db%2EnodeType%29%26%269%21%3D%3Dk%29return%5B%5D%3Bif%28p%26%26%21e%29%7Bif%28f%3D%5F%2Eexec%28a%29%29if%28j%3Df%5B1%5D%29%7Bif%289%3D%3D%3Dk%29%7Bif%28h%3Db%2EgetElementById%28j%29%2C%21h%7C%7C%21h%2EparentNode%29return%20d%3Bif%28h%2Eid%3D%3D%3Dj%29return%20d%2Epush%28h%29%2Cd%7Delse%20if%28b%2EownerDocument%26%26%28h%3Db%2EownerDocument%2EgetElementById%28j%29%29%26%26t%28b%2Ch%29%26%26h%2Eid%3D%3D%3Dj%29return%20d%2Epush%28h%29%2Cd%7Delse%7Bif%28f%5B2%5D%29return%20I%2Eapply%28d%2Cb%2EgetElementsByTagName%28a%29%29%2Cd%3Bif%28%28j%3Df%5B3%5D%29%26%26c%2EgetElementsByClassName%26%26b%2EgetElementsByClassName%29return%20I%2Eapply%28d%2Cb%2EgetElementsByClassName%28j%29%29%2Cd%7Dif%28c%2Eqsa%26%26%28%21q%7C%7C%21q%2Etest%28a%29%29%29%7Bif%28s%3Dr%3Du%2Cw%3Db%2Cx%3D9%3D%3D%3Dk%26%26a%2C1%3D%3D%3Dk%26%26%22object%22%21%3D%3Db%2EnodeName%2EtoLowerCase%28%29%29%7Bo%3Dg%28a%29%2C%28r%3Db%2EgetAttribute%28%22id%22%29%29%3Fs%3Dr%2Ereplace%28bb%2C%22%5C%5C%24%26%22%29%3Ab%2EsetAttribute%28%22id%22%2Cs%29%2Cs%3D%22%5Bid%3D%27%22%2Bs%2B%22%27%5D%20%22%2Cl%3Do%2Elength%3Bwhile%28l%2D%2D%29o%5Bl%5D%3Ds%2Bqb%28o%5Bl%5D%29%3Bw%3Dab%2Etest%28a%29%26%26ob%28b%2EparentNode%29%7C%7Cb%2Cx%3Do%2Ejoin%28%22%2C%22%29%7Dif%28x%29try%7Breturn%20I%2Eapply%28d%2Cw%2EquerySelectorAll%28x%29%29%2Cd%7Dcatch%28y%29%7B%7Dfinally%7Br%7C%7Cb%2EremoveAttribute%28%22id%22%29%7D%7D%7Dreturn%20i%28a%2Ereplace%28R%2C%22%241%22%29%2Cb%2Cd%2Ce%29%7Dfunction%20gb%28%29%7Bvar%20a%3D%5B%5D%3Bfunction%20b%28c%2Ce%29%7Breturn%20a%2Epush%28c%2B%22%20%22%29%3Ed%2EcacheLength%26%26delete%20b%5Ba%2Eshift%28%29%5D%2Cb%5Bc%2B%22%20%22%5D%3De%7Dreturn%20b%7Dfunction%20hb%28a%29%7Breturn%20a%5Bu%5D%3D%210%2Ca%7Dfunction%20ib%28a%29%7Bvar%20b%3Dn%2EcreateElement%28%22div%22%29%3Btry%7Breturn%21%21a%28b%29%7Dcatch%28c%29%7Breturn%211%7Dfinally%7Bb%2EparentNode%26%26b%2EparentNode%2EremoveChild%28b%29%2Cb%3Dnull%7D%7Dfunction%20jb%28a%2Cb%29%7Bvar%20c%3Da%2Esplit%28%22%7C%22%29%2Ce%3Da%2Elength%3Bwhile%28e%2D%2D%29d%2EattrHandle%5Bc%5Be%5D%5D%3Db%7Dfunction%20kb%28a%2Cb%29%7Bvar%20c%3Db%26%26a%2Cd%3Dc%26%261%3D%3D%3Da%2EnodeType%26%261%3D%3D%3Db%2EnodeType%26%26%28%7Eb%2EsourceIndex%7C%7CD%29%2D%28%7Ea%2EsourceIndex%7C%7CD%29%3Bif%28d%29return%20d%3Bif%28c%29while%28c%3Dc%2EnextSibling%29if%28c%3D%3D%3Db%29return%2D1%3Breturn%20a%3F1%3A%2D1%7Dfunction%20lb%28a%29%7Breturn%20function%28b%29%7Bvar%20c%3Db%2EnodeName%2EtoLowerCase%28%29%3Breturn%22input%22%3D%3D%3Dc%26%26b%2Etype%3D%3D%3Da%7D%7Dfunction%20mb%28a%29%7Breturn%20function%28b%29%7Bvar%20c%3Db%2EnodeName%2EtoLowerCase%28%29%3Breturn%28%22input%22%3D%3D%3Dc%7C%7C%22button%22%3D%3D%3Dc%29%26%26b%2Etype%3D%3D%3Da%7D%7Dfunction%20nb%28a%29%7Breturn%20hb%28function%28b%29%7Breturn%20b%3D%2Bb%2Chb%28function%28c%2Cd%29%7Bvar%20e%2Cf%3Da%28%5B%5D%2Cc%2Elength%2Cb%29%2Cg%3Df%2Elength%3Bwhile%28g%2D%2D%29c%5Be%3Df%5Bg%5D%5D%26%26%28c%5Be%5D%3D%21%28d%5Be%5D%3Dc%5Be%5D%29%29%7D%29%7D%29%7Dfunction%20ob%28a%29%7Breturn%20a%26%26typeof%20a%2EgetElementsByTagName%21%3D%3DC%26%26a%7Dc%3Dfb%2Esupport%3D%7B%7D%2Cf%3Dfb%2EisXML%3Dfunction%28a%29%7Bvar%20b%3Da%26%26%28a%2EownerDocument%7C%7Ca%29%2EdocumentElement%3Breturn%20b%3F%22HTML%22%21%3D%3Db%2EnodeName%3A%211%7D%2Cm%3Dfb%2EsetDocument%3Dfunction%28a%29%7Bvar%20b%2Ce%3Da%3Fa%2EownerDocument%7C%7Ca%3Av%2Cg%3De%2EdefaultView%3Breturn%20e%21%3D%3Dn%26%269%3D%3D%3De%2EnodeType%26%26e%2EdocumentElement%3F%28n%3De%2Co%3De%2EdocumentElement%2Cp%3D%21f%28e%29%2Cg%26%26g%21%3D%3Dg%2Etop%26%26%28g%2EaddEventListener%3Fg%2EaddEventListener%28%22unload%22%2Cfunction%28%29%7Bm%28%29%7D%2C%211%29%3Ag%2EattachEvent%26%26g%2EattachEvent%28%22onunload%22%2Cfunction%28%29%7Bm%28%29%7D%29%29%2Cc%2Eattributes%3Dib%28function%28a%29%7Breturn%20a%2EclassName%3D%22i%22%2C%21a%2EgetAttribute%28%22className%22%29%7D%29%2Cc%2EgetElementsByTagName%3Dib%28function%28a%29%7Breturn%20a%2EappendChild%28e%2EcreateComment%28%22%22%29%29%2C%21a%2EgetElementsByTagName%28%22%2A%22%29%2Elength%7D%29%2Cc%2EgetElementsByClassName%3D%24%2Etest%28e%2EgetElementsByClassName%29%26%26ib%28function%28a%29%7Breturn%20a%2EinnerHTML%3D%22%3Cdiv%20class%3D%27a%27%3E%3C%2Fdiv%3E%3Cdiv%20class%3D%27a%20i%27%3E%3C%2Fdiv%3E%22%2Ca%2EfirstChild%2EclassName%3D%22i%22%2C2%3D%3D%3Da%2EgetElementsByClassName%28%22i%22%29%2Elength%7D%29%2Cc%2EgetById%3Dib%28function%28a%29%7Breturn%20o%2EappendChild%28a%29%2Eid%3Du%2C%21e%2EgetElementsByName%7C%7C%21e%2EgetElementsByName%28u%29%2Elength%7D%29%2Cc%2EgetById%3F%28d%2Efind%2EID%3Dfunction%28a%2Cb%29%7Bif%28typeof%20b%2EgetElementById%21%3D%3DC%26%26p%29%7Bvar%20c%3Db%2EgetElementById%28a%29%3Breturn%20c%26%26c%2EparentNode%3F%5Bc%5D%3A%5B%5D%7D%7D%2Cd%2Efilter%2EID%3Dfunction%28a%29%7Bvar%20b%3Da%2Ereplace%28cb%2Cdb%29%3Breturn%20function%28a%29%7Breturn%20a%2EgetAttribute%28%22id%22%29%3D%3D%3Db%7D%7D%29%3A%28delete%20d%2Efind%2EID%2Cd%2Efilter%2EID%3Dfunction%28a%29%7Bvar%20b%3Da%2Ereplace%28cb%2Cdb%29%3Breturn%20function%28a%29%7Bvar%20c%3Dtypeof%20a%2EgetAttributeNode%21%3D%3DC%26%26a%2EgetAttributeNode%28%22id%22%29%3Breturn%20c%26%26c%2Evalue%3D%3D%3Db%7D%7D%29%2Cd%2Efind%2ETAG%3Dc%2EgetElementsByTagName%3Ffunction%28a%2Cb%29%7Breturn%20typeof%20b%2EgetElementsByTagName%21%3D%3DC%3Fb%2EgetElementsByTagName%28a%29%3Avoid%200%7D%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%3D%5B%5D%2Ce%3D0%2Cf%3Db%2EgetElementsByTagName%28a%29%3Bif%28%22%2A%22%3D%3D%3Da%29%7Bwhile%28c%3Df%5Be%2B%2B%5D%291%3D%3D%3Dc%2EnodeType%26%26d%2Epush%28c%29%3Breturn%20d%7Dreturn%20f%7D%2Cd%2Efind%2ECLASS%3Dc%2EgetElementsByClassName%26%26function%28a%2Cb%29%7Breturn%20typeof%20b%2EgetElementsByClassName%21%3D%3DC%26%26p%3Fb%2EgetElementsByClassName%28a%29%3Avoid%200%7D%2Cr%3D%5B%5D%2Cq%3D%5B%5D%2C%28c%2Eqsa%3D%24%2Etest%28e%2EquerySelectorAll%29%29%26%26%28ib%28function%28a%29%7Ba%2EinnerHTML%3D%22%3Cselect%20msallowclip%3D%27%27%3E%3Coption%20selected%3D%27%27%3E%3C%2Foption%3E%3C%2Fselect%3E%22%2Ca%2EquerySelectorAll%28%22%5Bmsallowclip%5E%3D%27%27%5D%22%29%2Elength%26%26q%2Epush%28%22%5B%2A%5E%24%5D%3D%22%2BM%2B%22%2A%28%3F%3A%27%27%7C%5C%22%5C%22%29%22%29%2Ca%2EquerySelectorAll%28%22%5Bselected%5D%22%29%2Elength%7C%7Cq%2Epush%28%22%5C%5C%5B%22%2BM%2B%22%2A%28%3F%3Avalue%7C%22%2BL%2B%22%29%22%29%2Ca%2EquerySelectorAll%28%22%3Achecked%22%29%2Elength%7C%7Cq%2Epush%28%22%3Achecked%22%29%7D%29%2Cib%28function%28a%29%7Bvar%20b%3De%2EcreateElement%28%22input%22%29%3Bb%2EsetAttribute%28%22type%22%2C%22hidden%22%29%2Ca%2EappendChild%28b%29%2EsetAttribute%28%22name%22%2C%22D%22%29%2Ca%2EquerySelectorAll%28%22%5Bname%3Dd%5D%22%29%2Elength%26%26q%2Epush%28%22name%22%2BM%2B%22%2A%5B%2A%5E%24%7C%21%7E%5D%3F%3D%22%29%2Ca%2EquerySelectorAll%28%22%3Aenabled%22%29%2Elength%7C%7Cq%2Epush%28%22%3Aenabled%22%2C%22%3Adisabled%22%29%2Ca%2EquerySelectorAll%28%22%2A%2C%3Ax%22%29%2Cq%2Epush%28%22%2C%2E%2A%3A%22%29%7D%29%29%2C%28c%2EmatchesSelector%3D%24%2Etest%28s%3Do%2Ematches%7C%7Co%2EwebkitMatchesSelector%7C%7Co%2EmozMatchesSelector%7C%7Co%2EoMatchesSelector%7C%7Co%2EmsMatchesSelector%29%29%26%26ib%28function%28a%29%7Bc%2EdisconnectedMatch%3Ds%2Ecall%28a%2C%22div%22%29%2Cs%2Ecall%28a%2C%22%5Bs%21%3D%27%27%5D%3Ax%22%29%2Cr%2Epush%28%22%21%3D%22%2CQ%29%7D%29%2Cq%3Dq%2Elength%26%26new%20RegExp%28q%2Ejoin%28%22%7C%22%29%29%2Cr%3Dr%2Elength%26%26new%20RegExp%28r%2Ejoin%28%22%7C%22%29%29%2Cb%3D%24%2Etest%28o%2EcompareDocumentPosition%29%2Ct%3Db%7C%7C%24%2Etest%28o%2Econtains%29%3Ffunction%28a%2Cb%29%7Bvar%20c%3D9%3D%3D%3Da%2EnodeType%3Fa%2EdocumentElement%3Aa%2Cd%3Db%26%26b%2EparentNode%3Breturn%20a%3D%3D%3Dd%7C%7C%21%28%21d%7C%7C1%21%3D%3Dd%2EnodeType%7C%7C%21%28c%2Econtains%3Fc%2Econtains%28d%29%3Aa%2EcompareDocumentPosition%26%2616%26a%2EcompareDocumentPosition%28d%29%29%29%7D%3Afunction%28a%2Cb%29%7Bif%28b%29while%28b%3Db%2EparentNode%29if%28b%3D%3D%3Da%29return%210%3Breturn%211%7D%2CB%3Db%3Ffunction%28a%2Cb%29%7Bif%28a%3D%3D%3Db%29return%20l%3D%210%2C0%3Bvar%20d%3D%21a%2EcompareDocumentPosition%2D%21b%2EcompareDocumentPosition%3Breturn%20d%3Fd%3A%28d%3D%28a%2EownerDocument%7C%7Ca%29%3D%3D%3D%28b%2EownerDocument%7C%7Cb%29%3Fa%2EcompareDocumentPosition%28b%29%3A1%2C1%26d%7C%7C%21c%2EsortDetached%26%26b%2EcompareDocumentPosition%28a%29%3D%3D%3Dd%3Fa%3D%3D%3De%7C%7Ca%2EownerDocument%3D%3D%3Dv%26%26t%28v%2Ca%29%3F%2D1%3Ab%3D%3D%3De%7C%7Cb%2EownerDocument%3D%3D%3Dv%26%26t%28v%2Cb%29%3F1%3Ak%3FK%2Ecall%28k%2Ca%29%2DK%2Ecall%28k%2Cb%29%3A0%3A4%26d%3F%2D1%3A1%29%7D%3Afunction%28a%2Cb%29%7Bif%28a%3D%3D%3Db%29return%20l%3D%210%2C0%3Bvar%20c%2Cd%3D0%2Cf%3Da%2EparentNode%2Cg%3Db%2EparentNode%2Ch%3D%5Ba%5D%2Ci%3D%5Bb%5D%3Bif%28%21f%7C%7C%21g%29return%20a%3D%3D%3De%3F%2D1%3Ab%3D%3D%3De%3F1%3Af%3F%2D1%3Ag%3F1%3Ak%3FK%2Ecall%28k%2Ca%29%2DK%2Ecall%28k%2Cb%29%3A0%3Bif%28f%3D%3D%3Dg%29return%20kb%28a%2Cb%29%3Bc%3Da%3Bwhile%28c%3Dc%2EparentNode%29h%2Eunshift%28c%29%3Bc%3Db%3Bwhile%28c%3Dc%2EparentNode%29i%2Eunshift%28c%29%3Bwhile%28h%5Bd%5D%3D%3D%3Di%5Bd%5D%29d%2B%2B%3Breturn%20d%3Fkb%28h%5Bd%5D%2Ci%5Bd%5D%29%3Ah%5Bd%5D%3D%3D%3Dv%3F%2D1%3Ai%5Bd%5D%3D%3D%3Dv%3F1%3A0%7D%2Ce%29%3An%7D%2Cfb%2Ematches%3Dfunction%28a%2Cb%29%7Breturn%20fb%28a%2Cnull%2Cnull%2Cb%29%7D%2Cfb%2EmatchesSelector%3Dfunction%28a%2Cb%29%7Bif%28%28a%2EownerDocument%7C%7Ca%29%21%3D%3Dn%26%26m%28a%29%2Cb%3Db%2Ereplace%28U%2C%22%3D%27%241%27%5D%22%29%2C%21%28%21c%2EmatchesSelector%7C%7C%21p%7C%7Cr%26%26r%2Etest%28b%29%7C%7Cq%26%26q%2Etest%28b%29%29%29try%7Bvar%20d%3Ds%2Ecall%28a%2Cb%29%3Bif%28d%7C%7Cc%2EdisconnectedMatch%7C%7Ca%2Edocument%26%2611%21%3D%3Da%2Edocument%2EnodeType%29return%20d%7Dcatch%28e%29%7B%7Dreturn%20fb%28b%2Cn%2Cnull%2C%5Ba%5D%29%2Elength%3E0%7D%2Cfb%2Econtains%3Dfunction%28a%2Cb%29%7Breturn%28a%2EownerDocument%7C%7Ca%29%21%3D%3Dn%26%26m%28a%29%2Ct%28a%2Cb%29%7D%2Cfb%2Eattr%3Dfunction%28a%2Cb%29%7B%28a%2EownerDocument%7C%7Ca%29%21%3D%3Dn%26%26m%28a%29%3Bvar%20e%3Dd%2EattrHandle%5Bb%2EtoLowerCase%28%29%5D%2Cf%3De%26%26E%2Ecall%28d%2EattrHandle%2Cb%2EtoLowerCase%28%29%29%3Fe%28a%2Cb%2C%21p%29%3Avoid%200%3Breturn%20void%200%21%3D%3Df%3Ff%3Ac%2Eattributes%7C%7C%21p%3Fa%2EgetAttribute%28b%29%3A%28f%3Da%2EgetAttributeNode%28b%29%29%26%26f%2Especified%3Ff%2Evalue%3Anull%7D%2Cfb%2Eerror%3Dfunction%28a%29%7Bthrow%20new%20Error%28%22Syntax%20error%2C%20unrecognized%20expression%3A%20%22%2Ba%29%7D%2Cfb%2EuniqueSort%3Dfunction%28a%29%7Bvar%20b%2Cd%3D%5B%5D%2Ce%3D0%2Cf%3D0%3Bif%28l%3D%21c%2EdetectDuplicates%2Ck%3D%21c%2EsortStable%26%26a%2Eslice%280%29%2Ca%2Esort%28B%29%2Cl%29%7Bwhile%28b%3Da%5Bf%2B%2B%5D%29b%3D%3D%3Da%5Bf%5D%26%26%28e%3Dd%2Epush%28f%29%29%3Bwhile%28e%2D%2D%29a%2Esplice%28d%5Be%5D%2C1%29%7Dreturn%20k%3Dnull%2Ca%7D%2Ce%3Dfb%2EgetText%3Dfunction%28a%29%7Bvar%20b%2Cc%3D%22%22%2Cd%3D0%2Cf%3Da%2EnodeType%3Bif%28f%29%7Bif%281%3D%3D%3Df%7C%7C9%3D%3D%3Df%7C%7C11%3D%3D%3Df%29%7Bif%28%22string%22%3D%3Dtypeof%20a%2EtextContent%29return%20a%2EtextContent%3Bfor%28a%3Da%2EfirstChild%3Ba%3Ba%3Da%2EnextSibling%29c%2B%3De%28a%29%7Delse%20if%283%3D%3D%3Df%7C%7C4%3D%3D%3Df%29return%20a%2EnodeValue%7Delse%20while%28b%3Da%5Bd%2B%2B%5D%29c%2B%3De%28b%29%3Breturn%20c%7D%2Cd%3Dfb%2Eselectors%3D%7BcacheLength%3A50%2CcreatePseudo%3Ahb%2Cmatch%3AX%2CattrHandle%3A%7B%7D%2Cfind%3A%7B%7D%2Crelative%3A%7B%22%3E%22%3A%7Bdir%3A%22parentNode%22%2Cfirst%3A%210%7D%2C%22%20%22%3A%7Bdir%3A%22parentNode%22%7D%2C%22%2B%22%3A%7Bdir%3A%22previousSibling%22%2Cfirst%3A%210%7D%2C%22%7E%22%3A%7Bdir%3A%22previousSibling%22%7D%7D%2CpreFilter%3A%7BATTR%3Afunction%28a%29%7Breturn%20a%5B1%5D%3Da%5B1%5D%2Ereplace%28cb%2Cdb%29%2Ca%5B3%5D%3D%28a%5B3%5D%7C%7Ca%5B4%5D%7C%7Ca%5B5%5D%7C%7C%22%22%29%2Ereplace%28cb%2Cdb%29%2C%22%7E%3D%22%3D%3D%3Da%5B2%5D%26%26%28a%5B3%5D%3D%22%20%22%2Ba%5B3%5D%2B%22%20%22%29%2Ca%2Eslice%280%2C4%29%7D%2CCHILD%3Afunction%28a%29%7Breturn%20a%5B1%5D%3Da%5B1%5D%2EtoLowerCase%28%29%2C%22nth%22%3D%3D%3Da%5B1%5D%2Eslice%280%2C3%29%3F%28a%5B3%5D%7C%7Cfb%2Eerror%28a%5B0%5D%29%2Ca%5B4%5D%3D%2B%28a%5B4%5D%3Fa%5B5%5D%2B%28a%5B6%5D%7C%7C1%29%3A2%2A%28%22even%22%3D%3D%3Da%5B3%5D%7C%7C%22odd%22%3D%3D%3Da%5B3%5D%29%29%2Ca%5B5%5D%3D%2B%28a%5B7%5D%2Ba%5B8%5D%7C%7C%22odd%22%3D%3D%3Da%5B3%5D%29%29%3Aa%5B3%5D%26%26fb%2Eerror%28a%5B0%5D%29%2Ca%7D%2CPSEUDO%3Afunction%28a%29%7Bvar%20b%2Cc%3D%21a%5B6%5D%26%26a%5B2%5D%3Breturn%20X%2ECHILD%2Etest%28a%5B0%5D%29%3Fnull%3A%28a%5B3%5D%3Fa%5B2%5D%3Da%5B4%5D%7C%7Ca%5B5%5D%7C%7C%22%22%3Ac%26%26V%2Etest%28c%29%26%26%28b%3Dg%28c%2C%210%29%29%26%26%28b%3Dc%2EindexOf%28%22%29%22%2Cc%2Elength%2Db%29%2Dc%2Elength%29%26%26%28a%5B0%5D%3Da%5B0%5D%2Eslice%280%2Cb%29%2Ca%5B2%5D%3Dc%2Eslice%280%2Cb%29%29%2Ca%2Eslice%280%2C3%29%29%7D%7D%2Cfilter%3A%7BTAG%3Afunction%28a%29%7Bvar%20b%3Da%2Ereplace%28cb%2Cdb%29%2EtoLowerCase%28%29%3Breturn%22%2A%22%3D%3D%3Da%3Ffunction%28%29%7Breturn%210%7D%3Afunction%28a%29%7Breturn%20a%2EnodeName%26%26a%2EnodeName%2EtoLowerCase%28%29%3D%3D%3Db%7D%7D%2CCLASS%3Afunction%28a%29%7Bvar%20b%3Dy%5Ba%2B%22%20%22%5D%3Breturn%20b%7C%7C%28b%3Dnew%20RegExp%28%22%28%5E%7C%22%2BM%2B%22%29%22%2Ba%2B%22%28%22%2BM%2B%22%7C%24%29%22%29%29%26%26y%28a%2Cfunction%28a%29%7Breturn%20b%2Etest%28%22string%22%3D%3Dtypeof%20a%2EclassName%26%26a%2EclassName%7C%7Ctypeof%20a%2EgetAttribute%21%3D%3DC%26%26a%2EgetAttribute%28%22class%22%29%7C%7C%22%22%29%7D%29%7D%2CATTR%3Afunction%28a%2Cb%2Cc%29%7Breturn%20function%28d%29%7Bvar%20e%3Dfb%2Eattr%28d%2Ca%29%3Breturn%20null%3D%3De%3F%22%21%3D%22%3D%3D%3Db%3Ab%3F%28e%2B%3D%22%22%2C%22%3D%22%3D%3D%3Db%3Fe%3D%3D%3Dc%3A%22%21%3D%22%3D%3D%3Db%3Fe%21%3D%3Dc%3A%22%5E%3D%22%3D%3D%3Db%3Fc%26%260%3D%3D%3De%2EindexOf%28c%29%3A%22%2A%3D%22%3D%3D%3Db%3Fc%26%26e%2EindexOf%28c%29%3E%2D1%3A%22%24%3D%22%3D%3D%3Db%3Fc%26%26e%2Eslice%28%2Dc%2Elength%29%3D%3D%3Dc%3A%22%7E%3D%22%3D%3D%3Db%3F%28%22%20%22%2Be%2B%22%20%22%29%2EindexOf%28c%29%3E%2D1%3A%22%7C%3D%22%3D%3D%3Db%3Fe%3D%3D%3Dc%7C%7Ce%2Eslice%280%2Cc%2Elength%2B1%29%3D%3D%3Dc%2B%22%2D%22%3A%211%29%3A%210%7D%7D%2CCHILD%3Afunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%3D%22nth%22%21%3D%3Da%2Eslice%280%2C3%29%2Cg%3D%22last%22%21%3D%3Da%2Eslice%28%2D4%29%2Ch%3D%22of%2Dtype%22%3D%3D%3Db%3Breturn%201%3D%3D%3Dd%26%260%3D%3D%3De%3Ffunction%28a%29%7Breturn%21%21a%2EparentNode%7D%3Afunction%28b%2Cc%2Ci%29%7Bvar%20j%2Ck%2Cl%2Cm%2Cn%2Co%2Cp%3Df%21%3D%3Dg%3F%22nextSibling%22%3A%22previousSibling%22%2Cq%3Db%2EparentNode%2Cr%3Dh%26%26b%2EnodeName%2EtoLowerCase%28%29%2Cs%3D%21i%26%26%21h%3Bif%28q%29%7Bif%28f%29%7Bwhile%28p%29%7Bl%3Db%3Bwhile%28l%3Dl%5Bp%5D%29if%28h%3Fl%2EnodeName%2EtoLowerCase%28%29%3D%3D%3Dr%3A1%3D%3D%3Dl%2EnodeType%29return%211%3Bo%3Dp%3D%22only%22%3D%3D%3Da%26%26%21o%26%26%22nextSibling%22%7Dreturn%210%7Dif%28o%3D%5Bg%3Fq%2EfirstChild%3Aq%2ElastChild%5D%2Cg%26%26s%29%7Bk%3Dq%5Bu%5D%7C%7C%28q%5Bu%5D%3D%7B%7D%29%2Cj%3Dk%5Ba%5D%7C%7C%5B%5D%2Cn%3Dj%5B0%5D%3D%3D%3Dw%26%26j%5B1%5D%2Cm%3Dj%5B0%5D%3D%3D%3Dw%26%26j%5B2%5D%2Cl%3Dn%26%26q%2EchildNodes%5Bn%5D%3Bwhile%28l%3D%2B%2Bn%26%26l%26%26l%5Bp%5D%7C%7C%28m%3Dn%3D0%29%7C%7Co%2Epop%28%29%29if%281%3D%3D%3Dl%2EnodeType%26%26%2B%2Bm%26%26l%3D%3D%3Db%29%7Bk%5Ba%5D%3D%5Bw%2Cn%2Cm%5D%3Bbreak%7D%7Delse%20if%28s%26%26%28j%3D%28b%5Bu%5D%7C%7C%28b%5Bu%5D%3D%7B%7D%29%29%5Ba%5D%29%26%26j%5B0%5D%3D%3D%3Dw%29m%3Dj%5B1%5D%3Belse%20while%28l%3D%2B%2Bn%26%26l%26%26l%5Bp%5D%7C%7C%28m%3Dn%3D0%29%7C%7Co%2Epop%28%29%29if%28%28h%3Fl%2EnodeName%2EtoLowerCase%28%29%3D%3D%3Dr%3A1%3D%3D%3Dl%2EnodeType%29%26%26%2B%2Bm%26%26%28s%26%26%28%28l%5Bu%5D%7C%7C%28l%5Bu%5D%3D%7B%7D%29%29%5Ba%5D%3D%5Bw%2Cm%5D%29%2Cl%3D%3D%3Db%29%29break%3Breturn%20m%2D%3De%2Cm%3D%3D%3Dd%7C%7Cm%25d%3D%3D%3D0%26%26m%2Fd%3E%3D0%7D%7D%7D%2CPSEUDO%3Afunction%28a%2Cb%29%7Bvar%20c%2Ce%3Dd%2Epseudos%5Ba%5D%7C%7Cd%2EsetFilters%5Ba%2EtoLowerCase%28%29%5D%7C%7Cfb%2Eerror%28%22unsupported%20pseudo%3A%20%22%2Ba%29%3Breturn%20e%5Bu%5D%3Fe%28b%29%3Ae%2Elength%3E1%3F%28c%3D%5Ba%2Ca%2C%22%22%2Cb%5D%2Cd%2EsetFilters%2EhasOwnProperty%28a%2EtoLowerCase%28%29%29%3Fhb%28function%28a%2Cc%29%7Bvar%20d%2Cf%3De%28a%2Cb%29%2Cg%3Df%2Elength%3Bwhile%28g%2D%2D%29d%3DK%2Ecall%28a%2Cf%5Bg%5D%29%2Ca%5Bd%5D%3D%21%28c%5Bd%5D%3Df%5Bg%5D%29%7D%29%3Afunction%28a%29%7Breturn%20e%28a%2C0%2Cc%29%7D%29%3Ae%7D%7D%2Cpseudos%3A%7Bnot%3Ahb%28function%28a%29%7Bvar%20b%3D%5B%5D%2Cc%3D%5B%5D%2Cd%3Dh%28a%2Ereplace%28R%2C%22%241%22%29%29%3Breturn%20d%5Bu%5D%3Fhb%28function%28a%2Cb%2Cc%2Ce%29%7Bvar%20f%2Cg%3Dd%28a%2Cnull%2Ce%2C%5B%5D%29%2Ch%3Da%2Elength%3Bwhile%28h%2D%2D%29%28f%3Dg%5Bh%5D%29%26%26%28a%5Bh%5D%3D%21%28b%5Bh%5D%3Df%29%29%7D%29%3Afunction%28a%2Ce%2Cf%29%7Breturn%20b%5B0%5D%3Da%2Cd%28b%2Cnull%2Cf%2Cc%29%2C%21c%2Epop%28%29%7D%7D%29%2Chas%3Ahb%28function%28a%29%7Breturn%20function%28b%29%7Breturn%20fb%28a%2Cb%29%2Elength%3E0%7D%7D%29%2Ccontains%3Ahb%28function%28a%29%7Breturn%20function%28b%29%7Breturn%28b%2EtextContent%7C%7Cb%2EinnerText%7C%7Ce%28b%29%29%2EindexOf%28a%29%3E%2D1%7D%7D%29%2Clang%3Ahb%28function%28a%29%7Breturn%20W%2Etest%28a%7C%7C%22%22%29%7C%7Cfb%2Eerror%28%22unsupported%20lang%3A%20%22%2Ba%29%2Ca%3Da%2Ereplace%28cb%2Cdb%29%2EtoLowerCase%28%29%2Cfunction%28b%29%7Bvar%20c%3Bdo%20if%28c%3Dp%3Fb%2Elang%3Ab%2EgetAttribute%28%22xml%3Alang%22%29%7C%7Cb%2EgetAttribute%28%22lang%22%29%29return%20c%3Dc%2EtoLowerCase%28%29%2Cc%3D%3D%3Da%7C%7C0%3D%3D%3Dc%2EindexOf%28a%2B%22%2D%22%29%3Bwhile%28%28b%3Db%2EparentNode%29%26%261%3D%3D%3Db%2EnodeType%29%3Breturn%211%7D%7D%29%2Ctarget%3Afunction%28b%29%7Bvar%20c%3Da%2Elocation%26%26a%2Elocation%2Ehash%3Breturn%20c%26%26c%2Eslice%281%29%3D%3D%3Db%2Eid%7D%2Croot%3Afunction%28a%29%7Breturn%20a%3D%3D%3Do%7D%2Cfocus%3Afunction%28a%29%7Breturn%20a%3D%3D%3Dn%2EactiveElement%26%26%28%21n%2EhasFocus%7C%7Cn%2EhasFocus%28%29%29%26%26%21%21%28a%2Etype%7C%7Ca%2Ehref%7C%7C%7Ea%2EtabIndex%29%7D%2Cenabled%3Afunction%28a%29%7Breturn%20a%2Edisabled%3D%3D%3D%211%7D%2Cdisabled%3Afunction%28a%29%7Breturn%20a%2Edisabled%3D%3D%3D%210%7D%2Cchecked%3Afunction%28a%29%7Bvar%20b%3Da%2EnodeName%2EtoLowerCase%28%29%3Breturn%22input%22%3D%3D%3Db%26%26%21%21a%2Echecked%7C%7C%22option%22%3D%3D%3Db%26%26%21%21a%2Eselected%7D%2Cselected%3Afunction%28a%29%7Breturn%20a%2EparentNode%26%26a%2EparentNode%2EselectedIndex%2Ca%2Eselected%3D%3D%3D%210%7D%2Cempty%3Afunction%28a%29%7Bfor%28a%3Da%2EfirstChild%3Ba%3Ba%3Da%2EnextSibling%29if%28a%2EnodeType%3C6%29return%211%3Breturn%210%7D%2Cparent%3Afunction%28a%29%7Breturn%21d%2Epseudos%2Eempty%28a%29%7D%2Cheader%3Afunction%28a%29%7Breturn%20Z%2Etest%28a%2EnodeName%29%7D%2Cinput%3Afunction%28a%29%7Breturn%20Y%2Etest%28a%2EnodeName%29%7D%2Cbutton%3Afunction%28a%29%7Bvar%20b%3Da%2EnodeName%2EtoLowerCase%28%29%3Breturn%22input%22%3D%3D%3Db%26%26%22button%22%3D%3D%3Da%2Etype%7C%7C%22button%22%3D%3D%3Db%7D%2Ctext%3Afunction%28a%29%7Bvar%20b%3Breturn%22input%22%3D%3D%3Da%2EnodeName%2EtoLowerCase%28%29%26%26%22text%22%3D%3D%3Da%2Etype%26%26%28null%3D%3D%28b%3Da%2EgetAttribute%28%22type%22%29%29%7C%7C%22text%22%3D%3D%3Db%2EtoLowerCase%28%29%29%7D%2Cfirst%3Anb%28function%28%29%7Breturn%5B0%5D%7D%29%2Clast%3Anb%28function%28a%2Cb%29%7Breturn%5Bb%2D1%5D%7D%29%2Ceq%3Anb%28function%28a%2Cb%2Cc%29%7Breturn%5B0%3Ec%3Fc%2Bb%3Ac%5D%7D%29%2Ceven%3Anb%28function%28a%2Cb%29%7Bfor%28var%20c%3D0%3Bb%3Ec%3Bc%2B%3D2%29a%2Epush%28c%29%3Breturn%20a%7D%29%2Codd%3Anb%28function%28a%2Cb%29%7Bfor%28var%20c%3D1%3Bb%3Ec%3Bc%2B%3D2%29a%2Epush%28c%29%3Breturn%20a%7D%29%2Clt%3Anb%28function%28a%2Cb%2Cc%29%7Bfor%28var%20d%3D0%3Ec%3Fc%2Bb%3Ac%3B%2D%2Dd%3E%3D0%3B%29a%2Epush%28d%29%3Breturn%20a%7D%29%2Cgt%3Anb%28function%28a%2Cb%2Cc%29%7Bfor%28var%20d%3D0%3Ec%3Fc%2Bb%3Ac%3B%2B%2Bd%3Cb%3B%29a%2Epush%28d%29%3Breturn%20a%7D%29%7D%7D%2Cd%2Epseudos%2Enth%3Dd%2Epseudos%2Eeq%3Bfor%28b%20in%7Bradio%3A%210%2Ccheckbox%3A%210%2Cfile%3A%210%2Cpassword%3A%210%2Cimage%3A%210%7D%29d%2Epseudos%5Bb%5D%3Dlb%28b%29%3Bfor%28b%20in%7Bsubmit%3A%210%2Creset%3A%210%7D%29d%2Epseudos%5Bb%5D%3Dmb%28b%29%3Bfunction%20pb%28%29%7B%7Dpb%2Eprototype%3Dd%2Efilters%3Dd%2Epseudos%2Cd%2EsetFilters%3Dnew%20pb%2Cg%3Dfb%2Etokenize%3Dfunction%28a%2Cb%29%7Bvar%20c%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%3Dz%5Ba%2B%22%20%22%5D%3Bif%28k%29return%20b%3F0%3Ak%2Eslice%280%29%3Bh%3Da%2Ci%3D%5B%5D%2Cj%3Dd%2EpreFilter%3Bwhile%28h%29%7B%28%21c%7C%7C%28e%3DS%2Eexec%28h%29%29%29%26%26%28e%26%26%28h%3Dh%2Eslice%28e%5B0%5D%2Elength%29%7C%7Ch%29%2Ci%2Epush%28f%3D%5B%5D%29%29%2Cc%3D%211%2C%28e%3DT%2Eexec%28h%29%29%26%26%28c%3De%2Eshift%28%29%2Cf%2Epush%28%7Bvalue%3Ac%2Ctype%3Ae%5B0%5D%2Ereplace%28R%2C%22%20%22%29%7D%29%2Ch%3Dh%2Eslice%28c%2Elength%29%29%3Bfor%28g%20in%20d%2Efilter%29%21%28e%3DX%5Bg%5D%2Eexec%28h%29%29%7C%7Cj%5Bg%5D%26%26%21%28e%3Dj%5Bg%5D%28e%29%29%7C%7C%28c%3De%2Eshift%28%29%2Cf%2Epush%28%7Bvalue%3Ac%2Ctype%3Ag%2Cmatches%3Ae%7D%29%2Ch%3Dh%2Eslice%28c%2Elength%29%29%3Bif%28%21c%29break%7Dreturn%20b%3Fh%2Elength%3Ah%3Ffb%2Eerror%28a%29%3Az%28a%2Ci%29%2Eslice%280%29%7D%3Bfunction%20qb%28a%29%7Bfor%28var%20b%3D0%2Cc%3Da%2Elength%2Cd%3D%22%22%3Bc%3Eb%3Bb%2B%2B%29d%2B%3Da%5Bb%5D%2Evalue%3Breturn%20d%7Dfunction%20rb%28a%2Cb%2Cc%29%7Bvar%20d%3Db%2Edir%2Ce%3Dc%26%26%22parentNode%22%3D%3D%3Dd%2Cf%3Dx%2B%2B%3Breturn%20b%2Efirst%3Ffunction%28b%2Cc%2Cf%29%7Bwhile%28b%3Db%5Bd%5D%29if%281%3D%3D%3Db%2EnodeType%7C%7Ce%29return%20a%28b%2Cc%2Cf%29%7D%3Afunction%28b%2Cc%2Cg%29%7Bvar%20h%2Ci%2Cj%3D%5Bw%2Cf%5D%3Bif%28g%29%7Bwhile%28b%3Db%5Bd%5D%29if%28%281%3D%3D%3Db%2EnodeType%7C%7Ce%29%26%26a%28b%2Cc%2Cg%29%29return%210%7Delse%20while%28b%3Db%5Bd%5D%29if%281%3D%3D%3Db%2EnodeType%7C%7Ce%29%7Bif%28i%3Db%5Bu%5D%7C%7C%28b%5Bu%5D%3D%7B%7D%29%2C%28h%3Di%5Bd%5D%29%26%26h%5B0%5D%3D%3D%3Dw%26%26h%5B1%5D%3D%3D%3Df%29return%20j%5B2%5D%3Dh%5B2%5D%3Bif%28i%5Bd%5D%3Dj%2Cj%5B2%5D%3Da%28b%2Cc%2Cg%29%29return%210%7D%7D%7Dfunction%20sb%28a%29%7Breturn%20a%2Elength%3E1%3Ffunction%28b%2Cc%2Cd%29%7Bvar%20e%3Da%2Elength%3Bwhile%28e%2D%2D%29if%28%21a%5Be%5D%28b%2Cc%2Cd%29%29return%211%3Breturn%210%7D%3Aa%5B0%5D%7Dfunction%20tb%28a%2Cb%2Cc%29%7Bfor%28var%20d%3D0%2Ce%3Db%2Elength%3Be%3Ed%3Bd%2B%2B%29fb%28a%2Cb%5Bd%5D%2Cc%29%3Breturn%20c%7Dfunction%20ub%28a%2Cb%2Cc%2Cd%2Ce%29%7Bfor%28var%20f%2Cg%3D%5B%5D%2Ch%3D0%2Ci%3Da%2Elength%2Cj%3Dnull%21%3Db%3Bi%3Eh%3Bh%2B%2B%29%28f%3Da%5Bh%5D%29%26%26%28%21c%7C%7Cc%28f%2Cd%2Ce%29%29%26%26%28g%2Epush%28f%29%2Cj%26%26b%2Epush%28h%29%29%3Breturn%20g%7Dfunction%20vb%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Breturn%20d%26%26%21d%5Bu%5D%26%26%28d%3Dvb%28d%29%29%2Ce%26%26%21e%5Bu%5D%26%26%28e%3Dvb%28e%2Cf%29%29%2Chb%28function%28f%2Cg%2Ch%2Ci%29%7Bvar%20j%2Ck%2Cl%2Cm%3D%5B%5D%2Cn%3D%5B%5D%2Co%3Dg%2Elength%2Cp%3Df%7C%7Ctb%28b%7C%7C%22%2A%22%2Ch%2EnodeType%3F%5Bh%5D%3Ah%2C%5B%5D%29%2Cq%3D%21a%7C%7C%21f%26%26b%3Fp%3Aub%28p%2Cm%2Ca%2Ch%2Ci%29%2Cr%3Dc%3Fe%7C%7C%28f%3Fa%3Ao%7C%7Cd%29%3F%5B%5D%3Ag%3Aq%3Bif%28c%26%26c%28q%2Cr%2Ch%2Ci%29%2Cd%29%7Bj%3Dub%28r%2Cn%29%2Cd%28j%2C%5B%5D%2Ch%2Ci%29%2Ck%3Dj%2Elength%3Bwhile%28k%2D%2D%29%28l%3Dj%5Bk%5D%29%26%26%28r%5Bn%5Bk%5D%5D%3D%21%28q%5Bn%5Bk%5D%5D%3Dl%29%29%7Dif%28f%29%7Bif%28e%7C%7Ca%29%7Bif%28e%29%7Bj%3D%5B%5D%2Ck%3Dr%2Elength%3Bwhile%28k%2D%2D%29%28l%3Dr%5Bk%5D%29%26%26j%2Epush%28q%5Bk%5D%3Dl%29%3Be%28null%2Cr%3D%5B%5D%2Cj%2Ci%29%7Dk%3Dr%2Elength%3Bwhile%28k%2D%2D%29%28l%3Dr%5Bk%5D%29%26%26%28j%3De%3FK%2Ecall%28f%2Cl%29%3Am%5Bk%5D%29%3E%2D1%26%26%28f%5Bj%5D%3D%21%28g%5Bj%5D%3Dl%29%29%7D%7Delse%20r%3Dub%28r%3D%3D%3Dg%3Fr%2Esplice%28o%2Cr%2Elength%29%3Ar%29%2Ce%3Fe%28null%2Cg%2Cr%2Ci%29%3AI%2Eapply%28g%2Cr%29%7D%29%7Dfunction%20wb%28a%29%7Bfor%28var%20b%2Cc%2Ce%2Cf%3Da%2Elength%2Cg%3Dd%2Erelative%5Ba%5B0%5D%2Etype%5D%2Ch%3Dg%7C%7Cd%2Erelative%5B%22%20%22%5D%2Ci%3Dg%3F1%3A0%2Ck%3Drb%28function%28a%29%7Breturn%20a%3D%3D%3Db%7D%2Ch%2C%210%29%2Cl%3Drb%28function%28a%29%7Breturn%20K%2Ecall%28b%2Ca%29%3E%2D1%7D%2Ch%2C%210%29%2Cm%3D%5Bfunction%28a%2Cc%2Cd%29%7Breturn%21g%26%26%28d%7C%7Cc%21%3D%3Dj%29%7C%7C%28%28b%3Dc%29%2EnodeType%3Fk%28a%2Cc%2Cd%29%3Al%28a%2Cc%2Cd%29%29%7D%5D%3Bf%3Ei%3Bi%2B%2B%29if%28c%3Dd%2Erelative%5Ba%5Bi%5D%2Etype%5D%29m%3D%5Brb%28sb%28m%29%2Cc%29%5D%3Belse%7Bif%28c%3Dd%2Efilter%5Ba%5Bi%5D%2Etype%5D%2Eapply%28null%2Ca%5Bi%5D%2Ematches%29%2Cc%5Bu%5D%29%7Bfor%28e%3D%2B%2Bi%3Bf%3Ee%3Be%2B%2B%29if%28d%2Erelative%5Ba%5Be%5D%2Etype%5D%29break%3Breturn%20vb%28i%3E1%26%26sb%28m%29%2Ci%3E1%26%26qb%28a%2Eslice%280%2Ci%2D1%29%2Econcat%28%7Bvalue%3A%22%20%22%3D%3D%3Da%5Bi%2D2%5D%2Etype%3F%22%2A%22%3A%22%22%7D%29%29%2Ereplace%28R%2C%22%241%22%29%2Cc%2Ce%3Ei%26%26wb%28a%2Eslice%28i%2Ce%29%29%2Cf%3Ee%26%26wb%28a%3Da%2Eslice%28e%29%29%2Cf%3Ee%26%26qb%28a%29%29%7Dm%2Epush%28c%29%7Dreturn%20sb%28m%29%7Dfunction%20xb%28a%2Cb%29%7Bvar%20c%3Db%2Elength%3E0%2Ce%3Da%2Elength%3E0%2Cf%3Dfunction%28f%2Cg%2Ch%2Ci%2Ck%29%7Bvar%20l%2Cm%2Co%2Cp%3D0%2Cq%3D%220%22%2Cr%3Df%26%26%5B%5D%2Cs%3D%5B%5D%2Ct%3Dj%2Cu%3Df%7C%7Ce%26%26d%2Efind%2ETAG%28%22%2A%22%2Ck%29%2Cv%3Dw%2B%3Dnull%3D%3Dt%3F1%3AMath%2Erandom%28%29%7C%7C%2E1%2Cx%3Du%2Elength%3Bfor%28k%26%26%28j%3Dg%21%3D%3Dn%26%26g%29%3Bq%21%3D%3Dx%26%26null%21%3D%28l%3Du%5Bq%5D%29%3Bq%2B%2B%29%7Bif%28e%26%26l%29%7Bm%3D0%3Bwhile%28o%3Da%5Bm%2B%2B%5D%29if%28o%28l%2Cg%2Ch%29%29%7Bi%2Epush%28l%29%3Bbreak%7Dk%26%26%28w%3Dv%29%7Dc%26%26%28%28l%3D%21o%26%26l%29%26%26p%2D%2D%2Cf%26%26r%2Epush%28l%29%29%7Dif%28p%2B%3Dq%2Cc%26%26q%21%3D%3Dp%29%7Bm%3D0%3Bwhile%28o%3Db%5Bm%2B%2B%5D%29o%28r%2Cs%2Cg%2Ch%29%3Bif%28f%29%7Bif%28p%3E0%29while%28q%2D%2D%29r%5Bq%5D%7C%7Cs%5Bq%5D%7C%7C%28s%5Bq%5D%3DG%2Ecall%28i%29%29%3Bs%3Dub%28s%29%7DI%2Eapply%28i%2Cs%29%2Ck%26%26%21f%26%26s%2Elength%3E0%26%26p%2Bb%2Elength%3E1%26%26fb%2EuniqueSort%28i%29%7Dreturn%20k%26%26%28w%3Dv%2Cj%3Dt%29%2Cr%7D%3Breturn%20c%3Fhb%28f%29%3Af%7Dreturn%20h%3Dfb%2Ecompile%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%3D%5B%5D%2Ce%3D%5B%5D%2Cf%3DA%5Ba%2B%22%20%22%5D%3Bif%28%21f%29%7Bb%7C%7C%28b%3Dg%28a%29%29%2Cc%3Db%2Elength%3Bwhile%28c%2D%2D%29f%3Dwb%28b%5Bc%5D%29%2Cf%5Bu%5D%3Fd%2Epush%28f%29%3Ae%2Epush%28f%29%3Bf%3DA%28a%2Cxb%28e%2Cd%29%29%2Cf%2Eselector%3Da%7Dreturn%20f%7D%2Ci%3Dfb%2Eselect%3Dfunction%28a%2Cb%2Ce%2Cf%29%7Bvar%20i%2Cj%2Ck%2Cl%2Cm%2Cn%3D%22function%22%3D%3Dtypeof%20a%26%26a%2Co%3D%21f%26%26g%28a%3Dn%2Eselector%7C%7Ca%29%3Bif%28e%3De%7C%7C%5B%5D%2C1%3D%3D%3Do%2Elength%29%7Bif%28j%3Do%5B0%5D%3Do%5B0%5D%2Eslice%280%29%2Cj%2Elength%3E2%26%26%22ID%22%3D%3D%3D%28k%3Dj%5B0%5D%29%2Etype%26%26c%2EgetById%26%269%3D%3D%3Db%2EnodeType%26%26p%26%26d%2Erelative%5Bj%5B1%5D%2Etype%5D%29%7Bif%28b%3D%28d%2Efind%2EID%28k%2Ematches%5B0%5D%2Ereplace%28cb%2Cdb%29%2Cb%29%7C%7C%5B%5D%29%5B0%5D%2C%21b%29return%20e%3Bn%26%26%28b%3Db%2EparentNode%29%2Ca%3Da%2Eslice%28j%2Eshift%28%29%2Evalue%2Elength%29%7Di%3DX%2EneedsContext%2Etest%28a%29%3F0%3Aj%2Elength%3Bwhile%28i%2D%2D%29%7Bif%28k%3Dj%5Bi%5D%2Cd%2Erelative%5Bl%3Dk%2Etype%5D%29break%3Bif%28%28m%3Dd%2Efind%5Bl%5D%29%26%26%28f%3Dm%28k%2Ematches%5B0%5D%2Ereplace%28cb%2Cdb%29%2Cab%2Etest%28j%5B0%5D%2Etype%29%26%26ob%28b%2EparentNode%29%7C%7Cb%29%29%29%7Bif%28j%2Esplice%28i%2C1%29%2Ca%3Df%2Elength%26%26qb%28j%29%2C%21a%29return%20I%2Eapply%28e%2Cf%29%2Ce%3Bbreak%7D%7D%7Dreturn%28n%7C%7Ch%28a%2Co%29%29%28f%2Cb%2C%21p%2Ce%2Cab%2Etest%28a%29%26%26ob%28b%2EparentNode%29%7C%7Cb%29%2Ce%7D%2Cc%2EsortStable%3Du%2Esplit%28%22%22%29%2Esort%28B%29%2Ejoin%28%22%22%29%3D%3D%3Du%2Cc%2EdetectDuplicates%3D%21%21l%2Cm%28%29%2Cc%2EsortDetached%3Dib%28function%28a%29%7Breturn%201%26a%2EcompareDocumentPosition%28n%2EcreateElement%28%22div%22%29%29%7D%29%2Cib%28function%28a%29%7Breturn%20a%2EinnerHTML%3D%22%3Ca%20href%3D%27%23%27%3E%3C%2Fa%3E%22%2C%22%23%22%3D%3D%3Da%2EfirstChild%2EgetAttribute%28%22href%22%29%7D%29%7C%7Cjb%28%22type%7Chref%7Cheight%7Cwidth%22%2Cfunction%28a%2Cb%2Cc%29%7Breturn%20c%3Fvoid%200%3Aa%2EgetAttribute%28b%2C%22type%22%3D%3D%3Db%2EtoLowerCase%28%29%3F1%3A2%29%7D%29%2Cc%2Eattributes%26%26ib%28function%28a%29%7Breturn%20a%2EinnerHTML%3D%22%3Cinput%2F%3E%22%2Ca%2EfirstChild%2EsetAttribute%28%22value%22%2C%22%22%29%2C%22%22%3D%3D%3Da%2EfirstChild%2EgetAttribute%28%22value%22%29%7D%29%7C%7Cjb%28%22value%22%2Cfunction%28a%2Cb%2Cc%29%7Breturn%20c%7C%7C%22input%22%21%3D%3Da%2EnodeName%2EtoLowerCase%28%29%3Fvoid%200%3Aa%2EdefaultValue%7D%29%2Cib%28function%28a%29%7Breturn%20null%3D%3Da%2EgetAttribute%28%22disabled%22%29%7D%29%7C%7Cjb%28L%2Cfunction%28a%2Cb%2Cc%29%7Bvar%20d%3Breturn%20c%3Fvoid%200%3Aa%5Bb%5D%3D%3D%3D%210%3Fb%2EtoLowerCase%28%29%3A%28d%3Da%2EgetAttributeNode%28b%29%29%26%26d%2Especified%3Fd%2Evalue%3Anull%7D%29%2Cfb%7D%28a%29%3Bn%2Efind%3Dt%2Cn%2Eexpr%3Dt%2Eselectors%2Cn%2Eexpr%5B%22%3A%22%5D%3Dn%2Eexpr%2Epseudos%2Cn%2Eunique%3Dt%2EuniqueSort%2Cn%2Etext%3Dt%2EgetText%2Cn%2EisXMLDoc%3Dt%2EisXML%2Cn%2Econtains%3Dt%2Econtains%3Bvar%20u%3Dn%2Eexpr%2Ematch%2EneedsContext%2Cv%3D%2F%5E%3C%28%5Cw%2B%29%5Cs%2A%5C%2F%3F%3E%28%3F%3A%3C%5C%2F%5C1%3E%7C%29%24%2F%2Cw%3D%2F%5E%2E%5B%5E%3A%23%5C%5B%5C%2E%2C%5D%2A%24%2F%3Bfunction%20x%28a%2Cb%2Cc%29%7Bif%28n%2EisFunction%28b%29%29return%20n%2Egrep%28a%2Cfunction%28a%2Cd%29%7Breturn%21%21b%2Ecall%28a%2Cd%2Ca%29%21%3D%3Dc%7D%29%3Bif%28b%2EnodeType%29return%20n%2Egrep%28a%2Cfunction%28a%29%7Breturn%20a%3D%3D%3Db%21%3D%3Dc%7D%29%3Bif%28%22string%22%3D%3Dtypeof%20b%29%7Bif%28w%2Etest%28b%29%29return%20n%2Efilter%28b%2Ca%2Cc%29%3Bb%3Dn%2Efilter%28b%2Ca%29%7Dreturn%20n%2Egrep%28a%2Cfunction%28a%29%7Breturn%20g%2Ecall%28b%2Ca%29%3E%3D0%21%3D%3Dc%7D%29%7Dn%2Efilter%3Dfunction%28a%2Cb%2Cc%29%7Bvar%20d%3Db%5B0%5D%3Breturn%20c%26%26%28a%3D%22%3Anot%28%22%2Ba%2B%22%29%22%29%2C1%3D%3D%3Db%2Elength%26%261%3D%3D%3Dd%2EnodeType%3Fn%2Efind%2EmatchesSelector%28d%2Ca%29%3F%5Bd%5D%3A%5B%5D%3An%2Efind%2Ematches%28a%2Cn%2Egrep%28b%2Cfunction%28a%29%7Breturn%201%3D%3D%3Da%2EnodeType%7D%29%29%7D%2Cn%2Efn%2Eextend%28%7Bfind%3Afunction%28a%29%7Bvar%20b%2Cc%3Dthis%2Elength%2Cd%3D%5B%5D%2Ce%3Dthis%3Bif%28%22string%22%21%3Dtypeof%20a%29return%20this%2EpushStack%28n%28a%29%2Efilter%28function%28%29%7Bfor%28b%3D0%3Bc%3Eb%3Bb%2B%2B%29if%28n%2Econtains%28e%5Bb%5D%2Cthis%29%29return%210%7D%29%29%3Bfor%28b%3D0%3Bc%3Eb%3Bb%2B%2B%29n%2Efind%28a%2Ce%5Bb%5D%2Cd%29%3Breturn%20d%3Dthis%2EpushStack%28c%3E1%3Fn%2Eunique%28d%29%3Ad%29%2Cd%2Eselector%3Dthis%2Eselector%3Fthis%2Eselector%2B%22%20%22%2Ba%3Aa%2Cd%7D%2Cfilter%3Afunction%28a%29%7Breturn%20this%2EpushStack%28x%28this%2Ca%7C%7C%5B%5D%2C%211%29%29%7D%2Cnot%3Afunction%28a%29%7Breturn%20this%2EpushStack%28x%28this%2Ca%7C%7C%5B%5D%2C%210%29%29%7D%2Cis%3Afunction%28a%29%7Breturn%21%21x%28this%2C%22string%22%3D%3Dtypeof%20a%26%26u%2Etest%28a%29%3Fn%28a%29%3Aa%7C%7C%5B%5D%2C%211%29%2Elength%7D%7D%29%3Bvar%20y%2Cz%3D%2F%5E%28%3F%3A%5Cs%2A%28%3C%5B%5Cw%5CW%5D%2B%3E%29%5B%5E%3E%5D%2A%7C%23%28%5B%5Cw%2D%5D%2A%29%29%24%2F%2CA%3Dn%2Efn%2Einit%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%3Bif%28%21a%29return%20this%3Bif%28%22string%22%3D%3Dtypeof%20a%29%7Bif%28c%3D%22%3C%22%3D%3D%3Da%5B0%5D%26%26%22%3E%22%3D%3D%3Da%5Ba%2Elength%2D1%5D%26%26a%2Elength%3E%3D3%3F%5Bnull%2Ca%2Cnull%5D%3Az%2Eexec%28a%29%2C%21c%7C%7C%21c%5B1%5D%26%26b%29return%21b%7C%7Cb%2Ejquery%3F%28b%7C%7Cy%29%2Efind%28a%29%3Athis%2Econstructor%28b%29%2Efind%28a%29%3Bif%28c%5B1%5D%29%7Bif%28b%3Db%20instanceof%20n%3Fb%5B0%5D%3Ab%2Cn%2Emerge%28this%2Cn%2EparseHTML%28c%5B1%5D%2Cb%26%26b%2EnodeType%3Fb%2EownerDocument%7C%7Cb%3Al%2C%210%29%29%2Cv%2Etest%28c%5B1%5D%29%26%26n%2EisPlainObject%28b%29%29for%28c%20in%20b%29n%2EisFunction%28this%5Bc%5D%29%3Fthis%5Bc%5D%28b%5Bc%5D%29%3Athis%2Eattr%28c%2Cb%5Bc%5D%29%3Breturn%20this%7Dreturn%20d%3Dl%2EgetElementById%28c%5B2%5D%29%2Cd%26%26d%2EparentNode%26%26%28this%2Elength%3D1%2Cthis%5B0%5D%3Dd%29%2Cthis%2Econtext%3Dl%2Cthis%2Eselector%3Da%2Cthis%7Dreturn%20a%2EnodeType%3F%28this%2Econtext%3Dthis%5B0%5D%3Da%2Cthis%2Elength%3D1%2Cthis%29%3An%2EisFunction%28a%29%3F%22undefined%22%21%3Dtypeof%20y%2Eready%3Fy%2Eready%28a%29%3Aa%28n%29%3A%28void%200%21%3D%3Da%2Eselector%26%26%28this%2Eselector%3Da%2Eselector%2Cthis%2Econtext%3Da%2Econtext%29%2Cn%2EmakeArray%28a%2Cthis%29%29%7D%3BA%2Eprototype%3Dn%2Efn%2Cy%3Dn%28l%29%3Bvar%20B%3D%2F%5E%28%3F%3Aparents%7Cprev%28%3F%3AUntil%7CAll%29%29%2F%2CC%3D%7Bchildren%3A%210%2Ccontents%3A%210%2Cnext%3A%210%2Cprev%3A%210%7D%3Bn%2Eextend%28%7Bdir%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%3D%5B%5D%2Ce%3Dvoid%200%21%3D%3Dc%3Bwhile%28%28a%3Da%5Bb%5D%29%26%269%21%3D%3Da%2EnodeType%29if%281%3D%3D%3Da%2EnodeType%29%7Bif%28e%26%26n%28a%29%2Eis%28c%29%29break%3Bd%2Epush%28a%29%7Dreturn%20d%7D%2Csibling%3Afunction%28a%2Cb%29%7Bfor%28var%20c%3D%5B%5D%3Ba%3Ba%3Da%2EnextSibling%291%3D%3D%3Da%2EnodeType%26%26a%21%3D%3Db%26%26c%2Epush%28a%29%3Breturn%20c%7D%7D%29%2Cn%2Efn%2Eextend%28%7Bhas%3Afunction%28a%29%7Bvar%20b%3Dn%28a%2Cthis%29%2Cc%3Db%2Elength%3Breturn%20this%2Efilter%28function%28%29%7Bfor%28var%20a%3D0%3Bc%3Ea%3Ba%2B%2B%29if%28n%2Econtains%28this%2Cb%5Ba%5D%29%29return%210%7D%29%7D%2Cclosest%3Afunction%28a%2Cb%29%7Bfor%28var%20c%2Cd%3D0%2Ce%3Dthis%2Elength%2Cf%3D%5B%5D%2Cg%3Du%2Etest%28a%29%7C%7C%22string%22%21%3Dtypeof%20a%3Fn%28a%2Cb%7C%7Cthis%2Econtext%29%3A0%3Be%3Ed%3Bd%2B%2B%29for%28c%3Dthis%5Bd%5D%3Bc%26%26c%21%3D%3Db%3Bc%3Dc%2EparentNode%29if%28c%2EnodeType%3C11%26%26%28g%3Fg%2Eindex%28c%29%3E%2D1%3A1%3D%3D%3Dc%2EnodeType%26%26n%2Efind%2EmatchesSelector%28c%2Ca%29%29%29%7Bf%2Epush%28c%29%3Bbreak%7Dreturn%20this%2EpushStack%28f%2Elength%3E1%3Fn%2Eunique%28f%29%3Af%29%7D%2Cindex%3Afunction%28a%29%7Breturn%20a%3F%22string%22%3D%3Dtypeof%20a%3Fg%2Ecall%28n%28a%29%2Cthis%5B0%5D%29%3Ag%2Ecall%28this%2Ca%2Ejquery%3Fa%5B0%5D%3Aa%29%3Athis%5B0%5D%26%26this%5B0%5D%2EparentNode%3Fthis%2Efirst%28%29%2EprevAll%28%29%2Elength%3A%2D1%7D%2Cadd%3Afunction%28a%2Cb%29%7Breturn%20this%2EpushStack%28n%2Eunique%28n%2Emerge%28this%2Eget%28%29%2Cn%28a%2Cb%29%29%29%29%7D%2CaddBack%3Afunction%28a%29%7Breturn%20this%2Eadd%28null%3D%3Da%3Fthis%2EprevObject%3Athis%2EprevObject%2Efilter%28a%29%29%7D%7D%29%3Bfunction%20D%28a%2Cb%29%7Bwhile%28%28a%3Da%5Bb%5D%29%26%261%21%3D%3Da%2EnodeType%29%3Breturn%20a%7Dn%2Eeach%28%7Bparent%3Afunction%28a%29%7Bvar%20b%3Da%2EparentNode%3Breturn%20b%26%2611%21%3D%3Db%2EnodeType%3Fb%3Anull%7D%2Cparents%3Afunction%28a%29%7Breturn%20n%2Edir%28a%2C%22parentNode%22%29%7D%2CparentsUntil%3Afunction%28a%2Cb%2Cc%29%7Breturn%20n%2Edir%28a%2C%22parentNode%22%2Cc%29%7D%2Cnext%3Afunction%28a%29%7Breturn%20D%28a%2C%22nextSibling%22%29%7D%2Cprev%3Afunction%28a%29%7Breturn%20D%28a%2C%22previousSibling%22%29%7D%2CnextAll%3Afunction%28a%29%7Breturn%20n%2Edir%28a%2C%22nextSibling%22%29%7D%2CprevAll%3Afunction%28a%29%7Breturn%20n%2Edir%28a%2C%22previousSibling%22%29%7D%2CnextUntil%3Afunction%28a%2Cb%2Cc%29%7Breturn%20n%2Edir%28a%2C%22nextSibling%22%2Cc%29%7D%2CprevUntil%3Afunction%28a%2Cb%2Cc%29%7Breturn%20n%2Edir%28a%2C%22previousSibling%22%2Cc%29%7D%2Csiblings%3Afunction%28a%29%7Breturn%20n%2Esibling%28%28a%2EparentNode%7C%7C%7B%7D%29%2EfirstChild%2Ca%29%7D%2Cchildren%3Afunction%28a%29%7Breturn%20n%2Esibling%28a%2EfirstChild%29%7D%2Ccontents%3Afunction%28a%29%7Breturn%20a%2EcontentDocument%7C%7Cn%2Emerge%28%5B%5D%2Ca%2EchildNodes%29%7D%7D%2Cfunction%28a%2Cb%29%7Bn%2Efn%5Ba%5D%3Dfunction%28c%2Cd%29%7Bvar%20e%3Dn%2Emap%28this%2Cb%2Cc%29%3Breturn%22Until%22%21%3D%3Da%2Eslice%28%2D5%29%26%26%28d%3Dc%29%2Cd%26%26%22string%22%3D%3Dtypeof%20d%26%26%28e%3Dn%2Efilter%28d%2Ce%29%29%2Cthis%2Elength%3E1%26%26%28C%5Ba%5D%7C%7Cn%2Eunique%28e%29%2CB%2Etest%28a%29%26%26e%2Ereverse%28%29%29%2Cthis%2EpushStack%28e%29%7D%7D%29%3Bvar%20E%3D%2F%5CS%2B%2Fg%2CF%3D%7B%7D%3Bfunction%20G%28a%29%7Bvar%20b%3DF%5Ba%5D%3D%7B%7D%3Breturn%20n%2Eeach%28a%2Ematch%28E%29%7C%7C%5B%5D%2Cfunction%28a%2Cc%29%7Bb%5Bc%5D%3D%210%7D%29%2Cb%7Dn%2ECallbacks%3Dfunction%28a%29%7Ba%3D%22string%22%3D%3Dtypeof%20a%3FF%5Ba%5D%7C%7CG%28a%29%3An%2Eextend%28%7B%7D%2Ca%29%3Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%3D%5B%5D%2Ci%3D%21a%2Eonce%26%26%5B%5D%2Cj%3Dfunction%28l%29%7Bfor%28b%3Da%2Ememory%26%26l%2Cc%3D%210%2Cg%3De%7C%7C0%2Ce%3D0%2Cf%3Dh%2Elength%2Cd%3D%210%3Bh%26%26f%3Eg%3Bg%2B%2B%29if%28h%5Bg%5D%2Eapply%28l%5B0%5D%2Cl%5B1%5D%29%3D%3D%3D%211%26%26a%2EstopOnFalse%29%7Bb%3D%211%3Bbreak%7Dd%3D%211%2Ch%26%26%28i%3Fi%2Elength%26%26j%28i%2Eshift%28%29%29%3Ab%3Fh%3D%5B%5D%3Ak%2Edisable%28%29%29%7D%2Ck%3D%7Badd%3Afunction%28%29%7Bif%28h%29%7Bvar%20c%3Dh%2Elength%3B%21function%20g%28b%29%7Bn%2Eeach%28b%2Cfunction%28b%2Cc%29%7Bvar%20d%3Dn%2Etype%28c%29%3B%22function%22%3D%3D%3Dd%3Fa%2Eunique%26%26k%2Ehas%28c%29%7C%7Ch%2Epush%28c%29%3Ac%26%26c%2Elength%26%26%22string%22%21%3D%3Dd%26%26g%28c%29%7D%29%7D%28arguments%29%2Cd%3Ff%3Dh%2Elength%3Ab%26%26%28e%3Dc%2Cj%28b%29%29%7Dreturn%20this%7D%2Cremove%3Afunction%28%29%7Breturn%20h%26%26n%2Eeach%28arguments%2Cfunction%28a%2Cb%29%7Bvar%20c%3Bwhile%28%28c%3Dn%2EinArray%28b%2Ch%2Cc%29%29%3E%2D1%29h%2Esplice%28c%2C1%29%2Cd%26%26%28f%3E%3Dc%26%26f%2D%2D%2Cg%3E%3Dc%26%26g%2D%2D%29%7D%29%2Cthis%7D%2Chas%3Afunction%28a%29%7Breturn%20a%3Fn%2EinArray%28a%2Ch%29%3E%2D1%3A%21%28%21h%7C%7C%21h%2Elength%29%7D%2Cempty%3Afunction%28%29%7Breturn%20h%3D%5B%5D%2Cf%3D0%2Cthis%7D%2Cdisable%3Afunction%28%29%7Breturn%20h%3Di%3Db%3Dvoid%200%2Cthis%7D%2Cdisabled%3Afunction%28%29%7Breturn%21h%7D%2Clock%3Afunction%28%29%7Breturn%20i%3Dvoid%200%2Cb%7C%7Ck%2Edisable%28%29%2Cthis%7D%2Clocked%3Afunction%28%29%7Breturn%21i%7D%2CfireWith%3Afunction%28a%2Cb%29%7Breturn%21h%7C%7Cc%26%26%21i%7C%7C%28b%3Db%7C%7C%5B%5D%2Cb%3D%5Ba%2Cb%2Eslice%3Fb%2Eslice%28%29%3Ab%5D%2Cd%3Fi%2Epush%28b%29%3Aj%28b%29%29%2Cthis%7D%2Cfire%3Afunction%28%29%7Breturn%20k%2EfireWith%28this%2Carguments%29%2Cthis%7D%2Cfired%3Afunction%28%29%7Breturn%21%21c%7D%7D%3Breturn%20k%7D%2Cn%2Eextend%28%7BDeferred%3Afunction%28a%29%7Bvar%20b%3D%5B%5B%22resolve%22%2C%22done%22%2Cn%2ECallbacks%28%22once%20memory%22%29%2C%22resolved%22%5D%2C%5B%22reject%22%2C%22fail%22%2Cn%2ECallbacks%28%22once%20memory%22%29%2C%22rejected%22%5D%2C%5B%22notify%22%2C%22progress%22%2Cn%2ECallbacks%28%22memory%22%29%5D%5D%2Cc%3D%22pending%22%2Cd%3D%7Bstate%3Afunction%28%29%7Breturn%20c%7D%2Calways%3Afunction%28%29%7Breturn%20e%2Edone%28arguments%29%2Efail%28arguments%29%2Cthis%7D%2Cthen%3Afunction%28%29%7Bvar%20a%3Darguments%3Breturn%20n%2EDeferred%28function%28c%29%7Bn%2Eeach%28b%2Cfunction%28b%2Cf%29%7Bvar%20g%3Dn%2EisFunction%28a%5Bb%5D%29%26%26a%5Bb%5D%3Be%5Bf%5B1%5D%5D%28function%28%29%7Bvar%20a%3Dg%26%26g%2Eapply%28this%2Carguments%29%3Ba%26%26n%2EisFunction%28a%2Epromise%29%3Fa%2Epromise%28%29%2Edone%28c%2Eresolve%29%2Efail%28c%2Ereject%29%2Eprogress%28c%2Enotify%29%3Ac%5Bf%5B0%5D%2B%22With%22%5D%28this%3D%3D%3Dd%3Fc%2Epromise%28%29%3Athis%2Cg%3F%5Ba%5D%3Aarguments%29%7D%29%7D%29%2Ca%3Dnull%7D%29%2Epromise%28%29%7D%2Cpromise%3Afunction%28a%29%7Breturn%20null%21%3Da%3Fn%2Eextend%28a%2Cd%29%3Ad%7D%7D%2Ce%3D%7B%7D%3Breturn%20d%2Epipe%3Dd%2Ethen%2Cn%2Eeach%28b%2Cfunction%28a%2Cf%29%7Bvar%20g%3Df%5B2%5D%2Ch%3Df%5B3%5D%3Bd%5Bf%5B1%5D%5D%3Dg%2Eadd%2Ch%26%26g%2Eadd%28function%28%29%7Bc%3Dh%7D%2Cb%5B1%5Ea%5D%5B2%5D%2Edisable%2Cb%5B2%5D%5B2%5D%2Elock%29%2Ce%5Bf%5B0%5D%5D%3Dfunction%28%29%7Breturn%20e%5Bf%5B0%5D%2B%22With%22%5D%28this%3D%3D%3De%3Fd%3Athis%2Carguments%29%2Cthis%7D%2Ce%5Bf%5B0%5D%2B%22With%22%5D%3Dg%2EfireWith%7D%29%2Cd%2Epromise%28e%29%2Ca%26%26a%2Ecall%28e%2Ce%29%2Ce%7D%2Cwhen%3Afunction%28a%29%7Bvar%20b%3D0%2Cc%3Dd%2Ecall%28arguments%29%2Ce%3Dc%2Elength%2Cf%3D1%21%3D%3De%7C%7Ca%26%26n%2EisFunction%28a%2Epromise%29%3Fe%3A0%2Cg%3D1%3D%3D%3Df%3Fa%3An%2EDeferred%28%29%2Ch%3Dfunction%28a%2Cb%2Cc%29%7Breturn%20function%28e%29%7Bb%5Ba%5D%3Dthis%2Cc%5Ba%5D%3Darguments%2Elength%3E1%3Fd%2Ecall%28arguments%29%3Ae%2Cc%3D%3D%3Di%3Fg%2EnotifyWith%28b%2Cc%29%3A%2D%2Df%7C%7Cg%2EresolveWith%28b%2Cc%29%7D%7D%2Ci%2Cj%2Ck%3Bif%28e%3E1%29for%28i%3Dnew%20Array%28e%29%2Cj%3Dnew%20Array%28e%29%2Ck%3Dnew%20Array%28e%29%3Be%3Eb%3Bb%2B%2B%29c%5Bb%5D%26%26n%2EisFunction%28c%5Bb%5D%2Epromise%29%3Fc%5Bb%5D%2Epromise%28%29%2Edone%28h%28b%2Ck%2Cc%29%29%2Efail%28g%2Ereject%29%2Eprogress%28h%28b%2Cj%2Ci%29%29%3A%2D%2Df%3Breturn%20f%7C%7Cg%2EresolveWith%28k%2Cc%29%2Cg%2Epromise%28%29%7D%7D%29%3Bvar%20H%3Bn%2Efn%2Eready%3Dfunction%28a%29%7Breturn%20n%2Eready%2Epromise%28%29%2Edone%28a%29%2Cthis%7D%2Cn%2Eextend%28%7BisReady%3A%211%2CreadyWait%3A1%2CholdReady%3Afunction%28a%29%7Ba%3Fn%2EreadyWait%2B%2B%3An%2Eready%28%210%29%7D%2Cready%3Afunction%28a%29%7B%28a%3D%3D%3D%210%3F%2D%2Dn%2EreadyWait%3An%2EisReady%29%7C%7C%28n%2EisReady%3D%210%2Ca%21%3D%3D%210%26%26%2D%2Dn%2EreadyWait%3E0%7C%7C%28H%2EresolveWith%28l%2C%5Bn%5D%29%2Cn%2Efn%2EtriggerHandler%26%26%28n%28l%29%2EtriggerHandler%28%22ready%22%29%2Cn%28l%29%2Eoff%28%22ready%22%29%29%29%29%7D%7D%29%3Bfunction%20I%28%29%7Bl%2EremoveEventListener%28%22DOMContentLoaded%22%2CI%2C%211%29%2Ca%2EremoveEventListener%28%22load%22%2CI%2C%211%29%2Cn%2Eready%28%29%7Dn%2Eready%2Epromise%3Dfunction%28b%29%7Breturn%20H%7C%7C%28H%3Dn%2EDeferred%28%29%2C%22complete%22%3D%3D%3Dl%2EreadyState%3FsetTimeout%28n%2Eready%29%3A%28l%2EaddEventListener%28%22DOMContentLoaded%22%2CI%2C%211%29%2Ca%2EaddEventListener%28%22load%22%2CI%2C%211%29%29%29%2CH%2Epromise%28b%29%7D%2Cn%2Eready%2Epromise%28%29%3Bvar%20J%3Dn%2Eaccess%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%29%7Bvar%20h%3D0%2Ci%3Da%2Elength%2Cj%3Dnull%3D%3Dc%3Bif%28%22object%22%3D%3D%3Dn%2Etype%28c%29%29%7Be%3D%210%3Bfor%28h%20in%20c%29n%2Eaccess%28a%2Cb%2Ch%2Cc%5Bh%5D%2C%210%2Cf%2Cg%29%7Delse%20if%28void%200%21%3D%3Dd%26%26%28e%3D%210%2Cn%2EisFunction%28d%29%7C%7C%28g%3D%210%29%2Cj%26%26%28g%3F%28b%2Ecall%28a%2Cd%29%2Cb%3Dnull%29%3A%28j%3Db%2Cb%3Dfunction%28a%2Cb%2Cc%29%7Breturn%20j%2Ecall%28n%28a%29%2Cc%29%7D%29%29%2Cb%29%29for%28%3Bi%3Eh%3Bh%2B%2B%29b%28a%5Bh%5D%2Cc%2Cg%3Fd%3Ad%2Ecall%28a%5Bh%5D%2Ch%2Cb%28a%5Bh%5D%2Cc%29%29%29%3Breturn%20e%3Fa%3Aj%3Fb%2Ecall%28a%29%3Ai%3Fb%28a%5B0%5D%2Cc%29%3Af%7D%3Bn%2EacceptData%3Dfunction%28a%29%7Breturn%201%3D%3D%3Da%2EnodeType%7C%7C9%3D%3D%3Da%2EnodeType%7C%7C%21%2Ba%2EnodeType%7D%3Bfunction%20K%28%29%7BObject%2EdefineProperty%28this%2Ecache%3D%7B%7D%2C0%2C%7Bget%3Afunction%28%29%7Breturn%7B%7D%7D%7D%29%2Cthis%2Eexpando%3Dn%2Eexpando%2BMath%2Erandom%28%29%7DK%2Euid%3D1%2CK%2Eaccepts%3Dn%2EacceptData%2CK%2Eprototype%3D%7Bkey%3Afunction%28a%29%7Bif%28%21K%2Eaccepts%28a%29%29return%200%3Bvar%20b%3D%7B%7D%2Cc%3Da%5Bthis%2Eexpando%5D%3Bif%28%21c%29%7Bc%3DK%2Euid%2B%2B%3Btry%7Bb%5Bthis%2Eexpando%5D%3D%7Bvalue%3Ac%7D%2CObject%2EdefineProperties%28a%2Cb%29%7Dcatch%28d%29%7Bb%5Bthis%2Eexpando%5D%3Dc%2Cn%2Eextend%28a%2Cb%29%7D%7Dreturn%20this%2Ecache%5Bc%5D%7C%7C%28this%2Ecache%5Bc%5D%3D%7B%7D%29%2Cc%7D%2Cset%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%3Dthis%2Ekey%28a%29%2Cf%3Dthis%2Ecache%5Be%5D%3Bif%28%22string%22%3D%3Dtypeof%20b%29f%5Bb%5D%3Dc%3Belse%20if%28n%2EisEmptyObject%28f%29%29n%2Eextend%28this%2Ecache%5Be%5D%2Cb%29%3Belse%20for%28d%20in%20b%29f%5Bd%5D%3Db%5Bd%5D%3Breturn%20f%7D%2Cget%3Afunction%28a%2Cb%29%7Bvar%20c%3Dthis%2Ecache%5Bthis%2Ekey%28a%29%5D%3Breturn%20void%200%3D%3D%3Db%3Fc%3Ac%5Bb%5D%7D%2Caccess%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%3Breturn%20void%200%3D%3D%3Db%7C%7Cb%26%26%22string%22%3D%3Dtypeof%20b%26%26void%200%3D%3D%3Dc%3F%28d%3Dthis%2Eget%28a%2Cb%29%2Cvoid%200%21%3D%3Dd%3Fd%3Athis%2Eget%28a%2Cn%2EcamelCase%28b%29%29%29%3A%28this%2Eset%28a%2Cb%2Cc%29%2Cvoid%200%21%3D%3Dc%3Fc%3Ab%29%7D%2Cremove%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%3Dthis%2Ekey%28a%29%2Cg%3Dthis%2Ecache%5Bf%5D%3Bif%28void%200%3D%3D%3Db%29this%2Ecache%5Bf%5D%3D%7B%7D%3Belse%7Bn%2EisArray%28b%29%3Fd%3Db%2Econcat%28b%2Emap%28n%2EcamelCase%29%29%3A%28e%3Dn%2EcamelCase%28b%29%2Cb%20in%20g%3Fd%3D%5Bb%2Ce%5D%3A%28d%3De%2Cd%3Dd%20in%20g%3F%5Bd%5D%3Ad%2Ematch%28E%29%7C%7C%5B%5D%29%29%2Cc%3Dd%2Elength%3Bwhile%28c%2D%2D%29delete%20g%5Bd%5Bc%5D%5D%7D%7D%2ChasData%3Afunction%28a%29%7Breturn%21n%2EisEmptyObject%28this%2Ecache%5Ba%5Bthis%2Eexpando%5D%5D%7C%7C%7B%7D%29%7D%2Cdiscard%3Afunction%28a%29%7Ba%5Bthis%2Eexpando%5D%26%26delete%20this%2Ecache%5Ba%5Bthis%2Eexpando%5D%5D%7D%7D%3Bvar%20L%3Dnew%20K%2CM%3Dnew%20K%2CN%3D%2F%5E%28%3F%3A%5C%7B%5B%5Cw%5CW%5D%2A%5C%7D%7C%5C%5B%5B%5Cw%5CW%5D%2A%5C%5D%29%24%2F%2CO%3D%2F%28%5BA%2DZ%5D%29%2Fg%3Bfunction%20P%28a%2Cb%2Cc%29%7Bvar%20d%3Bif%28void%200%3D%3D%3Dc%26%261%3D%3D%3Da%2EnodeType%29if%28d%3D%22data%2D%22%2Bb%2Ereplace%28O%2C%22%2D%241%22%29%2EtoLowerCase%28%29%2Cc%3Da%2EgetAttribute%28d%29%2C%22string%22%3D%3Dtypeof%20c%29%7Btry%7Bc%3D%22true%22%3D%3D%3Dc%3F%210%3A%22false%22%3D%3D%3Dc%3F%211%3A%22null%22%3D%3D%3Dc%3Fnull%3A%2Bc%2B%22%22%3D%3D%3Dc%3F%2Bc%3AN%2Etest%28c%29%3Fn%2EparseJSON%28c%29%3Ac%7Dcatch%28e%29%7B%7DM%2Eset%28a%2Cb%2Cc%29%7Delse%20c%3Dvoid%200%3Breturn%20c%7Dn%2Eextend%28%7BhasData%3Afunction%28a%29%7Breturn%20M%2EhasData%28a%29%7C%7CL%2EhasData%28a%29%7D%2Cdata%3Afunction%28a%2Cb%2Cc%29%7Breturn%20M%2Eaccess%28a%2Cb%2Cc%29%7D%2CremoveData%3Afunction%28a%2Cb%29%7BM%2Eremove%28a%2Cb%29%0A%7D%2C%5Fdata%3Afunction%28a%2Cb%2Cc%29%7Breturn%20L%2Eaccess%28a%2Cb%2Cc%29%7D%2C%5FremoveData%3Afunction%28a%2Cb%29%7BL%2Eremove%28a%2Cb%29%7D%7D%29%2Cn%2Efn%2Eextend%28%7Bdata%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%3Dthis%5B0%5D%2Cg%3Df%26%26f%2Eattributes%3Bif%28void%200%3D%3D%3Da%29%7Bif%28this%2Elength%26%26%28e%3DM%2Eget%28f%29%2C1%3D%3D%3Df%2EnodeType%26%26%21L%2Eget%28f%2C%22hasDataAttrs%22%29%29%29%7Bc%3Dg%2Elength%3Bwhile%28c%2D%2D%29g%5Bc%5D%26%26%28d%3Dg%5Bc%5D%2Ename%2C0%3D%3D%3Dd%2EindexOf%28%22data%2D%22%29%26%26%28d%3Dn%2EcamelCase%28d%2Eslice%285%29%29%2CP%28f%2Cd%2Ce%5Bd%5D%29%29%29%3BL%2Eset%28f%2C%22hasDataAttrs%22%2C%210%29%7Dreturn%20e%7Dreturn%22object%22%3D%3Dtypeof%20a%3Fthis%2Eeach%28function%28%29%7BM%2Eset%28this%2Ca%29%7D%29%3AJ%28this%2Cfunction%28b%29%7Bvar%20c%2Cd%3Dn%2EcamelCase%28a%29%3Bif%28f%26%26void%200%3D%3D%3Db%29%7Bif%28c%3DM%2Eget%28f%2Ca%29%2Cvoid%200%21%3D%3Dc%29return%20c%3Bif%28c%3DM%2Eget%28f%2Cd%29%2Cvoid%200%21%3D%3Dc%29return%20c%3Bif%28c%3DP%28f%2Cd%2Cvoid%200%29%2Cvoid%200%21%3D%3Dc%29return%20c%7Delse%20this%2Eeach%28function%28%29%7Bvar%20c%3DM%2Eget%28this%2Cd%29%3BM%2Eset%28this%2Cd%2Cb%29%2C%2D1%21%3D%3Da%2EindexOf%28%22%2D%22%29%26%26void%200%21%3D%3Dc%26%26M%2Eset%28this%2Ca%2Cb%29%7D%29%7D%2Cnull%2Cb%2Carguments%2Elength%3E1%2Cnull%2C%210%29%7D%2CremoveData%3Afunction%28a%29%7Breturn%20this%2Eeach%28function%28%29%7BM%2Eremove%28this%2Ca%29%7D%29%7D%7D%29%2Cn%2Eextend%28%7Bqueue%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%3Breturn%20a%3F%28b%3D%28b%7C%7C%22fx%22%29%2B%22queue%22%2Cd%3DL%2Eget%28a%2Cb%29%2Cc%26%26%28%21d%7C%7Cn%2EisArray%28c%29%3Fd%3DL%2Eaccess%28a%2Cb%2Cn%2EmakeArray%28c%29%29%3Ad%2Epush%28c%29%29%2Cd%7C%7C%5B%5D%29%3Avoid%200%7D%2Cdequeue%3Afunction%28a%2Cb%29%7Bb%3Db%7C%7C%22fx%22%3Bvar%20c%3Dn%2Equeue%28a%2Cb%29%2Cd%3Dc%2Elength%2Ce%3Dc%2Eshift%28%29%2Cf%3Dn%2E%5FqueueHooks%28a%2Cb%29%2Cg%3Dfunction%28%29%7Bn%2Edequeue%28a%2Cb%29%7D%3B%22inprogress%22%3D%3D%3De%26%26%28e%3Dc%2Eshift%28%29%2Cd%2D%2D%29%2Ce%26%26%28%22fx%22%3D%3D%3Db%26%26c%2Eunshift%28%22inprogress%22%29%2Cdelete%20f%2Estop%2Ce%2Ecall%28a%2Cg%2Cf%29%29%2C%21d%26%26f%26%26f%2Eempty%2Efire%28%29%7D%2C%5FqueueHooks%3Afunction%28a%2Cb%29%7Bvar%20c%3Db%2B%22queueHooks%22%3Breturn%20L%2Eget%28a%2Cc%29%7C%7CL%2Eaccess%28a%2Cc%2C%7Bempty%3An%2ECallbacks%28%22once%20memory%22%29%2Eadd%28function%28%29%7BL%2Eremove%28a%2C%5Bb%2B%22queue%22%2Cc%5D%29%7D%29%7D%29%7D%7D%29%2Cn%2Efn%2Eextend%28%7Bqueue%3Afunction%28a%2Cb%29%7Bvar%20c%3D2%3Breturn%22string%22%21%3Dtypeof%20a%26%26%28b%3Da%2Ca%3D%22fx%22%2Cc%2D%2D%29%2Carguments%2Elength%3Cc%3Fn%2Equeue%28this%5B0%5D%2Ca%29%3Avoid%200%3D%3D%3Db%3Fthis%3Athis%2Eeach%28function%28%29%7Bvar%20c%3Dn%2Equeue%28this%2Ca%2Cb%29%3Bn%2E%5FqueueHooks%28this%2Ca%29%2C%22fx%22%3D%3D%3Da%26%26%22inprogress%22%21%3D%3Dc%5B0%5D%26%26n%2Edequeue%28this%2Ca%29%7D%29%7D%2Cdequeue%3Afunction%28a%29%7Breturn%20this%2Eeach%28function%28%29%7Bn%2Edequeue%28this%2Ca%29%7D%29%7D%2CclearQueue%3Afunction%28a%29%7Breturn%20this%2Equeue%28a%7C%7C%22fx%22%2C%5B%5D%29%7D%2Cpromise%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%3D1%2Ce%3Dn%2EDeferred%28%29%2Cf%3Dthis%2Cg%3Dthis%2Elength%2Ch%3Dfunction%28%29%7B%2D%2Dd%7C%7Ce%2EresolveWith%28f%2C%5Bf%5D%29%7D%3B%22string%22%21%3Dtypeof%20a%26%26%28b%3Da%2Ca%3Dvoid%200%29%2Ca%3Da%7C%7C%22fx%22%3Bwhile%28g%2D%2D%29c%3DL%2Eget%28f%5Bg%5D%2Ca%2B%22queueHooks%22%29%2Cc%26%26c%2Eempty%26%26%28d%2B%2B%2Cc%2Eempty%2Eadd%28h%29%29%3Breturn%20h%28%29%2Ce%2Epromise%28b%29%7D%7D%29%3Bvar%20Q%3D%2F%5B%2B%2D%5D%3F%28%3F%3A%5Cd%2A%5C%2E%7C%29%5Cd%2B%28%3F%3A%5BeE%5D%5B%2B%2D%5D%3F%5Cd%2B%7C%29%2F%2Esource%2CR%3D%5B%22Top%22%2C%22Right%22%2C%22Bottom%22%2C%22Left%22%5D%2CS%3Dfunction%28a%2Cb%29%7Breturn%20a%3Db%7C%7Ca%2C%22none%22%3D%3D%3Dn%2Ecss%28a%2C%22display%22%29%7C%7C%21n%2Econtains%28a%2EownerDocument%2Ca%29%7D%2CT%3D%2F%5E%28%3F%3Acheckbox%7Cradio%29%24%2Fi%3B%21function%28%29%7Bvar%20a%3Dl%2EcreateDocumentFragment%28%29%2Cb%3Da%2EappendChild%28l%2EcreateElement%28%22div%22%29%29%2Cc%3Dl%2EcreateElement%28%22input%22%29%3Bc%2EsetAttribute%28%22type%22%2C%22radio%22%29%2Cc%2EsetAttribute%28%22checked%22%2C%22checked%22%29%2Cc%2EsetAttribute%28%22name%22%2C%22t%22%29%2Cb%2EappendChild%28c%29%2Ck%2EcheckClone%3Db%2EcloneNode%28%210%29%2EcloneNode%28%210%29%2ElastChild%2Echecked%2Cb%2EinnerHTML%3D%22%3Ctextarea%3Ex%3C%2Ftextarea%3E%22%2Ck%2EnoCloneChecked%3D%21%21b%2EcloneNode%28%210%29%2ElastChild%2EdefaultValue%7D%28%29%3Bvar%20U%3D%22undefined%22%3Bk%2EfocusinBubbles%3D%22onfocusin%22in%20a%3Bvar%20V%3D%2F%5Ekey%2F%2CW%3D%2F%5E%28%3F%3Amouse%7Cpointer%7Ccontextmenu%29%7Cclick%2F%2CX%3D%2F%5E%28%3F%3Afocusinfocus%7Cfocusoutblur%29%24%2F%2CY%3D%2F%5E%28%5B%5E%2E%5D%2A%29%28%3F%3A%5C%2E%28%2E%2B%29%7C%29%24%2F%3Bfunction%20Z%28%29%7Breturn%210%7Dfunction%20%24%28%29%7Breturn%211%7Dfunction%20%5F%28%29%7Btry%7Breturn%20l%2EactiveElement%7Dcatch%28a%29%7B%7D%7Dn%2Eevent%3D%7Bglobal%3A%7B%7D%2Cadd%3Afunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Co%2Cp%2Cq%2Cr%3DL%2Eget%28a%29%3Bif%28r%29%7Bc%2Ehandler%26%26%28f%3Dc%2Cc%3Df%2Ehandler%2Ce%3Df%2Eselector%29%2Cc%2Eguid%7C%7C%28c%2Eguid%3Dn%2Eguid%2B%2B%29%2C%28i%3Dr%2Eevents%29%7C%7C%28i%3Dr%2Eevents%3D%7B%7D%29%2C%28g%3Dr%2Ehandle%29%7C%7C%28g%3Dr%2Ehandle%3Dfunction%28b%29%7Breturn%20typeof%20n%21%3D%3DU%26%26n%2Eevent%2Etriggered%21%3D%3Db%2Etype%3Fn%2Eevent%2Edispatch%2Eapply%28a%2Carguments%29%3Avoid%200%7D%29%2Cb%3D%28b%7C%7C%22%22%29%2Ematch%28E%29%7C%7C%5B%22%22%5D%2Cj%3Db%2Elength%3Bwhile%28j%2D%2D%29h%3DY%2Eexec%28b%5Bj%5D%29%7C%7C%5B%5D%2Co%3Dq%3Dh%5B1%5D%2Cp%3D%28h%5B2%5D%7C%7C%22%22%29%2Esplit%28%22%2E%22%29%2Esort%28%29%2Co%26%26%28l%3Dn%2Eevent%2Especial%5Bo%5D%7C%7C%7B%7D%2Co%3D%28e%3Fl%2EdelegateType%3Al%2EbindType%29%7C%7Co%2Cl%3Dn%2Eevent%2Especial%5Bo%5D%7C%7C%7B%7D%2Ck%3Dn%2Eextend%28%7Btype%3Ao%2CorigType%3Aq%2Cdata%3Ad%2Chandler%3Ac%2Cguid%3Ac%2Eguid%2Cselector%3Ae%2CneedsContext%3Ae%26%26n%2Eexpr%2Ematch%2EneedsContext%2Etest%28e%29%2Cnamespace%3Ap%2Ejoin%28%22%2E%22%29%7D%2Cf%29%2C%28m%3Di%5Bo%5D%29%7C%7C%28m%3Di%5Bo%5D%3D%5B%5D%2Cm%2EdelegateCount%3D0%2Cl%2Esetup%26%26l%2Esetup%2Ecall%28a%2Cd%2Cp%2Cg%29%21%3D%3D%211%7C%7Ca%2EaddEventListener%26%26a%2EaddEventListener%28o%2Cg%2C%211%29%29%2Cl%2Eadd%26%26%28l%2Eadd%2Ecall%28a%2Ck%29%2Ck%2Ehandler%2Eguid%7C%7C%28k%2Ehandler%2Eguid%3Dc%2Eguid%29%29%2Ce%3Fm%2Esplice%28m%2EdelegateCount%2B%2B%2C0%2Ck%29%3Am%2Epush%28k%29%2Cn%2Eevent%2Eglobal%5Bo%5D%3D%210%29%7D%7D%2Cremove%3Afunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Co%2Cp%2Cq%2Cr%3DL%2EhasData%28a%29%26%26L%2Eget%28a%29%3Bif%28r%26%26%28i%3Dr%2Eevents%29%29%7Bb%3D%28b%7C%7C%22%22%29%2Ematch%28E%29%7C%7C%5B%22%22%5D%2Cj%3Db%2Elength%3Bwhile%28j%2D%2D%29if%28h%3DY%2Eexec%28b%5Bj%5D%29%7C%7C%5B%5D%2Co%3Dq%3Dh%5B1%5D%2Cp%3D%28h%5B2%5D%7C%7C%22%22%29%2Esplit%28%22%2E%22%29%2Esort%28%29%2Co%29%7Bl%3Dn%2Eevent%2Especial%5Bo%5D%7C%7C%7B%7D%2Co%3D%28d%3Fl%2EdelegateType%3Al%2EbindType%29%7C%7Co%2Cm%3Di%5Bo%5D%7C%7C%5B%5D%2Ch%3Dh%5B2%5D%26%26new%20RegExp%28%22%28%5E%7C%5C%5C%2E%29%22%2Bp%2Ejoin%28%22%5C%5C%2E%28%3F%3A%2E%2A%5C%5C%2E%7C%29%22%29%2B%22%28%5C%5C%2E%7C%24%29%22%29%2Cg%3Df%3Dm%2Elength%3Bwhile%28f%2D%2D%29k%3Dm%5Bf%5D%2C%21e%26%26q%21%3D%3Dk%2EorigType%7C%7Cc%26%26c%2Eguid%21%3D%3Dk%2Eguid%7C%7Ch%26%26%21h%2Etest%28k%2Enamespace%29%7C%7Cd%26%26d%21%3D%3Dk%2Eselector%26%26%28%22%2A%2A%22%21%3D%3Dd%7C%7C%21k%2Eselector%29%7C%7C%28m%2Esplice%28f%2C1%29%2Ck%2Eselector%26%26m%2EdelegateCount%2D%2D%2Cl%2Eremove%26%26l%2Eremove%2Ecall%28a%2Ck%29%29%3Bg%26%26%21m%2Elength%26%26%28l%2Eteardown%26%26l%2Eteardown%2Ecall%28a%2Cp%2Cr%2Ehandle%29%21%3D%3D%211%7C%7Cn%2EremoveEvent%28a%2Co%2Cr%2Ehandle%29%2Cdelete%20i%5Bo%5D%29%7Delse%20for%28o%20in%20i%29n%2Eevent%2Eremove%28a%2Co%2Bb%5Bj%5D%2Cc%2Cd%2C%210%29%3Bn%2EisEmptyObject%28i%29%26%26%28delete%20r%2Ehandle%2CL%2Eremove%28a%2C%22events%22%29%29%7D%7D%2Ctrigger%3Afunction%28b%2Cc%2Cd%2Ce%29%7Bvar%20f%2Cg%2Ch%2Ci%2Ck%2Cm%2Co%2Cp%3D%5Bd%7C%7Cl%5D%2Cq%3Dj%2Ecall%28b%2C%22type%22%29%3Fb%2Etype%3Ab%2Cr%3Dj%2Ecall%28b%2C%22namespace%22%29%3Fb%2Enamespace%2Esplit%28%22%2E%22%29%3A%5B%5D%3Bif%28g%3Dh%3Dd%3Dd%7C%7Cl%2C3%21%3D%3Dd%2EnodeType%26%268%21%3D%3Dd%2EnodeType%26%26%21X%2Etest%28q%2Bn%2Eevent%2Etriggered%29%26%26%28q%2EindexOf%28%22%2E%22%29%3E%3D0%26%26%28r%3Dq%2Esplit%28%22%2E%22%29%2Cq%3Dr%2Eshift%28%29%2Cr%2Esort%28%29%29%2Ck%3Dq%2EindexOf%28%22%3A%22%29%3C0%26%26%22on%22%2Bq%2Cb%3Db%5Bn%2Eexpando%5D%3Fb%3Anew%20n%2EEvent%28q%2C%22object%22%3D%3Dtypeof%20b%26%26b%29%2Cb%2EisTrigger%3De%3F2%3A3%2Cb%2Enamespace%3Dr%2Ejoin%28%22%2E%22%29%2Cb%2Enamespace%5Fre%3Db%2Enamespace%3Fnew%20RegExp%28%22%28%5E%7C%5C%5C%2E%29%22%2Br%2Ejoin%28%22%5C%5C%2E%28%3F%3A%2E%2A%5C%5C%2E%7C%29%22%29%2B%22%28%5C%5C%2E%7C%24%29%22%29%3Anull%2Cb%2Eresult%3Dvoid%200%2Cb%2Etarget%7C%7C%28b%2Etarget%3Dd%29%2Cc%3Dnull%3D%3Dc%3F%5Bb%5D%3An%2EmakeArray%28c%2C%5Bb%5D%29%2Co%3Dn%2Eevent%2Especial%5Bq%5D%7C%7C%7B%7D%2Ce%7C%7C%21o%2Etrigger%7C%7Co%2Etrigger%2Eapply%28d%2Cc%29%21%3D%3D%211%29%29%7Bif%28%21e%26%26%21o%2EnoBubble%26%26%21n%2EisWindow%28d%29%29%7Bfor%28i%3Do%2EdelegateType%7C%7Cq%2CX%2Etest%28i%2Bq%29%7C%7C%28g%3Dg%2EparentNode%29%3Bg%3Bg%3Dg%2EparentNode%29p%2Epush%28g%29%2Ch%3Dg%3Bh%3D%3D%3D%28d%2EownerDocument%7C%7Cl%29%26%26p%2Epush%28h%2EdefaultView%7C%7Ch%2EparentWindow%7C%7Ca%29%7Df%3D0%3Bwhile%28%28g%3Dp%5Bf%2B%2B%5D%29%26%26%21b%2EisPropagationStopped%28%29%29b%2Etype%3Df%3E1%3Fi%3Ao%2EbindType%7C%7Cq%2Cm%3D%28L%2Eget%28g%2C%22events%22%29%7C%7C%7B%7D%29%5Bb%2Etype%5D%26%26L%2Eget%28g%2C%22handle%22%29%2Cm%26%26m%2Eapply%28g%2Cc%29%2Cm%3Dk%26%26g%5Bk%5D%2Cm%26%26m%2Eapply%26%26n%2EacceptData%28g%29%26%26%28b%2Eresult%3Dm%2Eapply%28g%2Cc%29%2Cb%2Eresult%3D%3D%3D%211%26%26b%2EpreventDefault%28%29%29%3Breturn%20b%2Etype%3Dq%2Ce%7C%7Cb%2EisDefaultPrevented%28%29%7C%7Co%2E%5Fdefault%26%26o%2E%5Fdefault%2Eapply%28p%2Epop%28%29%2Cc%29%21%3D%3D%211%7C%7C%21n%2EacceptData%28d%29%7C%7Ck%26%26n%2EisFunction%28d%5Bq%5D%29%26%26%21n%2EisWindow%28d%29%26%26%28h%3Dd%5Bk%5D%2Ch%26%26%28d%5Bk%5D%3Dnull%29%2Cn%2Eevent%2Etriggered%3Dq%2Cd%5Bq%5D%28%29%2Cn%2Eevent%2Etriggered%3Dvoid%200%2Ch%26%26%28d%5Bk%5D%3Dh%29%29%2Cb%2Eresult%7D%7D%2Cdispatch%3Afunction%28a%29%7Ba%3Dn%2Eevent%2Efix%28a%29%3Bvar%20b%2Cc%2Ce%2Cf%2Cg%2Ch%3D%5B%5D%2Ci%3Dd%2Ecall%28arguments%29%2Cj%3D%28L%2Eget%28this%2C%22events%22%29%7C%7C%7B%7D%29%5Ba%2Etype%5D%7C%7C%5B%5D%2Ck%3Dn%2Eevent%2Especial%5Ba%2Etype%5D%7C%7C%7B%7D%3Bif%28i%5B0%5D%3Da%2Ca%2EdelegateTarget%3Dthis%2C%21k%2EpreDispatch%7C%7Ck%2EpreDispatch%2Ecall%28this%2Ca%29%21%3D%3D%211%29%7Bh%3Dn%2Eevent%2Ehandlers%2Ecall%28this%2Ca%2Cj%29%2Cb%3D0%3Bwhile%28%28f%3Dh%5Bb%2B%2B%5D%29%26%26%21a%2EisPropagationStopped%28%29%29%7Ba%2EcurrentTarget%3Df%2Eelem%2Cc%3D0%3Bwhile%28%28g%3Df%2Ehandlers%5Bc%2B%2B%5D%29%26%26%21a%2EisImmediatePropagationStopped%28%29%29%28%21a%2Enamespace%5Fre%7C%7Ca%2Enamespace%5Fre%2Etest%28g%2Enamespace%29%29%26%26%28a%2EhandleObj%3Dg%2Ca%2Edata%3Dg%2Edata%2Ce%3D%28%28n%2Eevent%2Especial%5Bg%2EorigType%5D%7C%7C%7B%7D%29%2Ehandle%7C%7Cg%2Ehandler%29%2Eapply%28f%2Eelem%2Ci%29%2Cvoid%200%21%3D%3De%26%26%28a%2Eresult%3De%29%3D%3D%3D%211%26%26%28a%2EpreventDefault%28%29%2Ca%2EstopPropagation%28%29%29%29%7Dreturn%20k%2EpostDispatch%26%26k%2EpostDispatch%2Ecall%28this%2Ca%29%2Ca%2Eresult%7D%7D%2Chandlers%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%2Cg%3D%5B%5D%2Ch%3Db%2EdelegateCount%2Ci%3Da%2Etarget%3Bif%28h%26%26i%2EnodeType%26%26%28%21a%2Ebutton%7C%7C%22click%22%21%3D%3Da%2Etype%29%29for%28%3Bi%21%3D%3Dthis%3Bi%3Di%2EparentNode%7C%7Cthis%29if%28i%2Edisabled%21%3D%3D%210%7C%7C%22click%22%21%3D%3Da%2Etype%29%7Bfor%28d%3D%5B%5D%2Cc%3D0%3Bh%3Ec%3Bc%2B%2B%29f%3Db%5Bc%5D%2Ce%3Df%2Eselector%2B%22%20%22%2Cvoid%200%3D%3D%3Dd%5Be%5D%26%26%28d%5Be%5D%3Df%2EneedsContext%3Fn%28e%2Cthis%29%2Eindex%28i%29%3E%3D0%3An%2Efind%28e%2Cthis%2Cnull%2C%5Bi%5D%29%2Elength%29%2Cd%5Be%5D%26%26d%2Epush%28f%29%3Bd%2Elength%26%26g%2Epush%28%7Belem%3Ai%2Chandlers%3Ad%7D%29%7Dreturn%20h%3Cb%2Elength%26%26g%2Epush%28%7Belem%3Athis%2Chandlers%3Ab%2Eslice%28h%29%7D%29%2Cg%7D%2Cprops%3A%22altKey%20bubbles%20cancelable%20ctrlKey%20currentTarget%20eventPhase%20metaKey%20relatedTarget%20shiftKey%20target%20timeStamp%20view%20which%22%2Esplit%28%22%20%22%29%2CfixHooks%3A%7B%7D%2CkeyHooks%3A%7Bprops%3A%22char%20charCode%20key%20keyCode%22%2Esplit%28%22%20%22%29%2Cfilter%3Afunction%28a%2Cb%29%7Breturn%20null%3D%3Da%2Ewhich%26%26%28a%2Ewhich%3Dnull%21%3Db%2EcharCode%3Fb%2EcharCode%3Ab%2EkeyCode%29%2Ca%7D%7D%2CmouseHooks%3A%7Bprops%3A%22button%20buttons%20clientX%20clientY%20offsetX%20offsetY%20pageX%20pageY%20screenX%20screenY%20toElement%22%2Esplit%28%22%20%22%29%2Cfilter%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%3Db%2Ebutton%3Breturn%20null%3D%3Da%2EpageX%26%26null%21%3Db%2EclientX%26%26%28c%3Da%2Etarget%2EownerDocument%7C%7Cl%2Cd%3Dc%2EdocumentElement%2Ce%3Dc%2Ebody%2Ca%2EpageX%3Db%2EclientX%2B%28d%26%26d%2EscrollLeft%7C%7Ce%26%26e%2EscrollLeft%7C%7C0%29%2D%28d%26%26d%2EclientLeft%7C%7Ce%26%26e%2EclientLeft%7C%7C0%29%2Ca%2EpageY%3Db%2EclientY%2B%28d%26%26d%2EscrollTop%7C%7Ce%26%26e%2EscrollTop%7C%7C0%29%2D%28d%26%26d%2EclientTop%7C%7Ce%26%26e%2EclientTop%7C%7C0%29%29%2Ca%2Ewhich%7C%7Cvoid%200%3D%3D%3Df%7C%7C%28a%2Ewhich%3D1%26f%3F1%3A2%26f%3F3%3A4%26f%3F2%3A0%29%2Ca%7D%7D%2Cfix%3Afunction%28a%29%7Bif%28a%5Bn%2Eexpando%5D%29return%20a%3Bvar%20b%2Cc%2Cd%2Ce%3Da%2Etype%2Cf%3Da%2Cg%3Dthis%2EfixHooks%5Be%5D%3Bg%7C%7C%28this%2EfixHooks%5Be%5D%3Dg%3DW%2Etest%28e%29%3Fthis%2EmouseHooks%3AV%2Etest%28e%29%3Fthis%2EkeyHooks%3A%7B%7D%29%2Cd%3Dg%2Eprops%3Fthis%2Eprops%2Econcat%28g%2Eprops%29%3Athis%2Eprops%2Ca%3Dnew%20n%2EEvent%28f%29%2Cb%3Dd%2Elength%3Bwhile%28b%2D%2D%29c%3Dd%5Bb%5D%2Ca%5Bc%5D%3Df%5Bc%5D%3Breturn%20a%2Etarget%7C%7C%28a%2Etarget%3Dl%29%2C3%3D%3D%3Da%2Etarget%2EnodeType%26%26%28a%2Etarget%3Da%2Etarget%2EparentNode%29%2Cg%2Efilter%3Fg%2Efilter%28a%2Cf%29%3Aa%7D%2Cspecial%3A%7Bload%3A%7BnoBubble%3A%210%7D%2Cfocus%3A%7Btrigger%3Afunction%28%29%7Breturn%20this%21%3D%3D%5F%28%29%26%26this%2Efocus%3F%28this%2Efocus%28%29%2C%211%29%3Avoid%200%7D%2CdelegateType%3A%22focusin%22%7D%2Cblur%3A%7Btrigger%3Afunction%28%29%7Breturn%20this%3D%3D%3D%5F%28%29%26%26this%2Eblur%3F%28this%2Eblur%28%29%2C%211%29%3Avoid%200%7D%2CdelegateType%3A%22focusout%22%7D%2Cclick%3A%7Btrigger%3Afunction%28%29%7Breturn%22checkbox%22%3D%3D%3Dthis%2Etype%26%26this%2Eclick%26%26n%2EnodeName%28this%2C%22input%22%29%3F%28this%2Eclick%28%29%2C%211%29%3Avoid%200%7D%2C%5Fdefault%3Afunction%28a%29%7Breturn%20n%2EnodeName%28a%2Etarget%2C%22a%22%29%7D%7D%2Cbeforeunload%3A%7BpostDispatch%3Afunction%28a%29%7Bvoid%200%21%3D%3Da%2Eresult%26%26a%2EoriginalEvent%26%26%28a%2EoriginalEvent%2EreturnValue%3Da%2Eresult%29%7D%7D%7D%2Csimulate%3Afunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3Dn%2Eextend%28new%20n%2EEvent%2Cc%2C%7Btype%3Aa%2CisSimulated%3A%210%2CoriginalEvent%3A%7B%7D%7D%29%3Bd%3Fn%2Eevent%2Etrigger%28e%2Cnull%2Cb%29%3An%2Eevent%2Edispatch%2Ecall%28b%2Ce%29%2Ce%2EisDefaultPrevented%28%29%26%26c%2EpreventDefault%28%29%7D%7D%2Cn%2EremoveEvent%3Dfunction%28a%2Cb%2Cc%29%7Ba%2EremoveEventListener%26%26a%2EremoveEventListener%28b%2Cc%2C%211%29%7D%2Cn%2EEvent%3Dfunction%28a%2Cb%29%7Breturn%20this%20instanceof%20n%2EEvent%3F%28a%26%26a%2Etype%3F%28this%2EoriginalEvent%3Da%2Cthis%2Etype%3Da%2Etype%2Cthis%2EisDefaultPrevented%3Da%2EdefaultPrevented%7C%7Cvoid%200%3D%3D%3Da%2EdefaultPrevented%26%26a%2EreturnValue%3D%3D%3D%211%3FZ%3A%24%29%3Athis%2Etype%3Da%2Cb%26%26n%2Eextend%28this%2Cb%29%2Cthis%2EtimeStamp%3Da%26%26a%2EtimeStamp%7C%7Cn%2Enow%28%29%2Cvoid%28this%5Bn%2Eexpando%5D%3D%210%29%29%3Anew%20n%2EEvent%28a%2Cb%29%7D%2Cn%2EEvent%2Eprototype%3D%7BisDefaultPrevented%3A%24%2CisPropagationStopped%3A%24%2CisImmediatePropagationStopped%3A%24%2CpreventDefault%3Afunction%28%29%7Bvar%20a%3Dthis%2EoriginalEvent%3Bthis%2EisDefaultPrevented%3DZ%2Ca%26%26a%2EpreventDefault%26%26a%2EpreventDefault%28%29%7D%2CstopPropagation%3Afunction%28%29%7Bvar%20a%3Dthis%2EoriginalEvent%3Bthis%2EisPropagationStopped%3DZ%2Ca%26%26a%2EstopPropagation%26%26a%2EstopPropagation%28%29%7D%2CstopImmediatePropagation%3Afunction%28%29%7Bvar%20a%3Dthis%2EoriginalEvent%3Bthis%2EisImmediatePropagationStopped%3DZ%2Ca%26%26a%2EstopImmediatePropagation%26%26a%2EstopImmediatePropagation%28%29%2Cthis%2EstopPropagation%28%29%7D%7D%2Cn%2Eeach%28%7Bmouseenter%3A%22mouseover%22%2Cmouseleave%3A%22mouseout%22%2Cpointerenter%3A%22pointerover%22%2Cpointerleave%3A%22pointerout%22%7D%2Cfunction%28a%2Cb%29%7Bn%2Eevent%2Especial%5Ba%5D%3D%7BdelegateType%3Ab%2CbindType%3Ab%2Chandle%3Afunction%28a%29%7Bvar%20c%2Cd%3Dthis%2Ce%3Da%2ErelatedTarget%2Cf%3Da%2EhandleObj%3Breturn%28%21e%7C%7Ce%21%3D%3Dd%26%26%21n%2Econtains%28d%2Ce%29%29%26%26%28a%2Etype%3Df%2EorigType%2Cc%3Df%2Ehandler%2Eapply%28this%2Carguments%29%2Ca%2Etype%3Db%29%2Cc%7D%7D%7D%29%2Ck%2EfocusinBubbles%7C%7Cn%2Eeach%28%7Bfocus%3A%22focusin%22%2Cblur%3A%22focusout%22%7D%2Cfunction%28a%2Cb%29%7Bvar%20c%3Dfunction%28a%29%7Bn%2Eevent%2Esimulate%28b%2Ca%2Etarget%2Cn%2Eevent%2Efix%28a%29%2C%210%29%7D%3Bn%2Eevent%2Especial%5Bb%5D%3D%7Bsetup%3Afunction%28%29%7Bvar%20d%3Dthis%2EownerDocument%7C%7Cthis%2Ce%3DL%2Eaccess%28d%2Cb%29%3Be%7C%7Cd%2EaddEventListener%28a%2Cc%2C%210%29%2CL%2Eaccess%28d%2Cb%2C%28e%7C%7C0%29%2B1%29%7D%2Cteardown%3Afunction%28%29%7Bvar%20d%3Dthis%2EownerDocument%7C%7Cthis%2Ce%3DL%2Eaccess%28d%2Cb%29%2D1%3Be%3FL%2Eaccess%28d%2Cb%2Ce%29%3A%28d%2EremoveEventListener%28a%2Cc%2C%210%29%2CL%2Eremove%28d%2Cb%29%29%7D%7D%7D%29%2Cn%2Efn%2Eextend%28%7Bon%3Afunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%2Cg%3Bif%28%22object%22%3D%3Dtypeof%20a%29%7B%22string%22%21%3Dtypeof%20b%26%26%28c%3Dc%7C%7Cb%2Cb%3Dvoid%200%29%3Bfor%28g%20in%20a%29this%2Eon%28g%2Cb%2Cc%2Ca%5Bg%5D%2Ce%29%3Breturn%20this%7Dif%28null%3D%3Dc%26%26null%3D%3Dd%3F%28d%3Db%2Cc%3Db%3Dvoid%200%29%3Anull%3D%3Dd%26%26%28%22string%22%3D%3Dtypeof%20b%3F%28d%3Dc%2Cc%3Dvoid%200%29%3A%28d%3Dc%2Cc%3Db%2Cb%3Dvoid%200%29%29%2Cd%3D%3D%3D%211%29d%3D%24%3Belse%20if%28%21d%29return%20this%3Breturn%201%3D%3D%3De%26%26%28f%3Dd%2Cd%3Dfunction%28a%29%7Breturn%20n%28%29%2Eoff%28a%29%2Cf%2Eapply%28this%2Carguments%29%7D%2Cd%2Eguid%3Df%2Eguid%7C%7C%28f%2Eguid%3Dn%2Eguid%2B%2B%29%29%2Cthis%2Eeach%28function%28%29%7Bn%2Eevent%2Eadd%28this%2Ca%2Cd%2Cc%2Cb%29%7D%29%7D%2Cone%3Afunction%28a%2Cb%2Cc%2Cd%29%7Breturn%20this%2Eon%28a%2Cb%2Cc%2Cd%2C1%29%7D%2Coff%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%3Bif%28a%26%26a%2EpreventDefault%26%26a%2EhandleObj%29return%20d%3Da%2EhandleObj%2Cn%28a%2EdelegateTarget%29%2Eoff%28d%2Enamespace%3Fd%2EorigType%2B%22%2E%22%2Bd%2Enamespace%3Ad%2EorigType%2Cd%2Eselector%2Cd%2Ehandler%29%2Cthis%3Bif%28%22object%22%3D%3Dtypeof%20a%29%7Bfor%28e%20in%20a%29this%2Eoff%28e%2Cb%2Ca%5Be%5D%29%3Breturn%20this%7Dreturn%28b%3D%3D%3D%211%7C%7C%22function%22%3D%3Dtypeof%20b%29%26%26%28c%3Db%2Cb%3Dvoid%200%29%2Cc%3D%3D%3D%211%26%26%28c%3D%24%29%2Cthis%2Eeach%28function%28%29%7Bn%2Eevent%2Eremove%28this%2Ca%2Cc%2Cb%29%7D%29%7D%2Ctrigger%3Afunction%28a%2Cb%29%7Breturn%20this%2Eeach%28function%28%29%7Bn%2Eevent%2Etrigger%28a%2Cb%2Cthis%29%7D%29%7D%2CtriggerHandler%3Afunction%28a%2Cb%29%7Bvar%20c%3Dthis%5B0%5D%3Breturn%20c%3Fn%2Eevent%2Etrigger%28a%2Cb%2Cc%2C%210%29%3Avoid%200%7D%7D%29%3Bvar%20ab%3D%2F%3C%28%3F%21area%7Cbr%7Ccol%7Cembed%7Chr%7Cimg%7Cinput%7Clink%7Cmeta%7Cparam%29%28%28%5B%5Cw%3A%5D%2B%29%5B%5E%3E%5D%2A%29%5C%2F%3E%2Fgi%2Cbb%3D%2F%3C%28%5B%5Cw%3A%5D%2B%29%2F%2Ccb%3D%2F%3C%7C%26%23%3F%5Cw%2B%3B%2F%2Cdb%3D%2F%3C%28%3F%3Ascript%7Cstyle%7Clink%29%2Fi%2Ceb%3D%2Fchecked%5Cs%2A%28%3F%3A%5B%5E%3D%5D%7C%3D%5Cs%2A%2Echecked%2E%29%2Fi%2Cfb%3D%2F%5E%24%7C%5C%2F%28%3F%3Ajava%7Cecma%29script%2Fi%2Cgb%3D%2F%5Etrue%5C%2F%28%2E%2A%29%2F%2Chb%3D%2F%5E%5Cs%2A%3C%21%28%3F%3A%5C%5BCDATA%5C%5B%7C%2D%2D%29%7C%28%3F%3A%5C%5D%5C%5D%7C%2D%2D%29%3E%5Cs%2A%24%2Fg%2Cib%3D%7Boption%3A%5B1%2C%22%3Cselect%20multiple%3D%27multiple%27%3E%22%2C%22%3C%2Fselect%3E%22%5D%2Cthead%3A%5B1%2C%22%3Ctable%3E%22%2C%22%3C%2Ftable%3E%22%5D%2Ccol%3A%5B2%2C%22%3Ctable%3E%3Ccolgroup%3E%22%2C%22%3C%2Fcolgroup%3E%3C%2Ftable%3E%22%5D%2Ctr%3A%5B2%2C%22%3Ctable%3E%3Ctbody%3E%22%2C%22%3C%2Ftbody%3E%3C%2Ftable%3E%22%5D%2Ctd%3A%5B3%2C%22%3Ctable%3E%3Ctbody%3E%3Ctr%3E%22%2C%22%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%5D%2C%5Fdefault%3A%5B0%2C%22%22%2C%22%22%5D%7D%3Bib%2Eoptgroup%3Dib%2Eoption%2Cib%2Etbody%3Dib%2Etfoot%3Dib%2Ecolgroup%3Dib%2Ecaption%3Dib%2Ethead%2Cib%2Eth%3Dib%2Etd%3Bfunction%20jb%28a%2Cb%29%7Breturn%20n%2EnodeName%28a%2C%22table%22%29%26%26n%2EnodeName%2811%21%3D%3Db%2EnodeType%3Fb%3Ab%2EfirstChild%2C%22tr%22%29%3Fa%2EgetElementsByTagName%28%22tbody%22%29%5B0%5D%7C%7Ca%2EappendChild%28a%2EownerDocument%2EcreateElement%28%22tbody%22%29%29%3Aa%7Dfunction%20kb%28a%29%7Breturn%20a%2Etype%3D%28null%21%3D%3Da%2EgetAttribute%28%22type%22%29%29%2B%22%2F%22%2Ba%2Etype%2Ca%7Dfunction%20lb%28a%29%7Bvar%20b%3Dgb%2Eexec%28a%2Etype%29%3Breturn%20b%3Fa%2Etype%3Db%5B1%5D%3Aa%2EremoveAttribute%28%22type%22%29%2Ca%7Dfunction%20mb%28a%2Cb%29%7Bfor%28var%20c%3D0%2Cd%3Da%2Elength%3Bd%3Ec%3Bc%2B%2B%29L%2Eset%28a%5Bc%5D%2C%22globalEval%22%2C%21b%7C%7CL%2Eget%28b%5Bc%5D%2C%22globalEval%22%29%29%7Dfunction%20nb%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%3Bif%281%3D%3D%3Db%2EnodeType%29%7Bif%28L%2EhasData%28a%29%26%26%28f%3DL%2Eaccess%28a%29%2Cg%3DL%2Eset%28b%2Cf%29%2Cj%3Df%2Eevents%29%29%7Bdelete%20g%2Ehandle%2Cg%2Eevents%3D%7B%7D%3Bfor%28e%20in%20j%29for%28c%3D0%2Cd%3Dj%5Be%5D%2Elength%3Bd%3Ec%3Bc%2B%2B%29n%2Eevent%2Eadd%28b%2Ce%2Cj%5Be%5D%5Bc%5D%29%7DM%2EhasData%28a%29%26%26%28h%3DM%2Eaccess%28a%29%2Ci%3Dn%2Eextend%28%7B%7D%2Ch%29%2CM%2Eset%28b%2Ci%29%29%7D%7Dfunction%20ob%28a%2Cb%29%7Bvar%20c%3Da%2EgetElementsByTagName%3Fa%2EgetElementsByTagName%28b%7C%7C%22%2A%22%29%3Aa%2EquerySelectorAll%3Fa%2EquerySelectorAll%28b%7C%7C%22%2A%22%29%3A%5B%5D%3Breturn%20void%200%3D%3D%3Db%7C%7Cb%26%26n%2EnodeName%28a%2Cb%29%3Fn%2Emerge%28%5Ba%5D%2Cc%29%3Ac%7Dfunction%20pb%28a%2Cb%29%7Bvar%20c%3Db%2EnodeName%2EtoLowerCase%28%29%3B%22input%22%3D%3D%3Dc%26%26T%2Etest%28a%2Etype%29%3Fb%2Echecked%3Da%2Echecked%3A%28%22input%22%3D%3D%3Dc%7C%7C%22textarea%22%3D%3D%3Dc%29%26%26%28b%2EdefaultValue%3Da%2EdefaultValue%29%7Dn%2Eextend%28%7Bclone%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%2Ch%3Da%2EcloneNode%28%210%29%2Ci%3Dn%2Econtains%28a%2EownerDocument%2Ca%29%3Bif%28%21%28k%2EnoCloneChecked%7C%7C1%21%3D%3Da%2EnodeType%26%2611%21%3D%3Da%2EnodeType%7C%7Cn%2EisXMLDoc%28a%29%29%29for%28g%3Dob%28h%29%2Cf%3Dob%28a%29%2Cd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Bd%2B%2B%29pb%28f%5Bd%5D%2Cg%5Bd%5D%29%3Bif%28b%29if%28c%29for%28f%3Df%7C%7Cob%28a%29%2Cg%3Dg%7C%7Cob%28h%29%2Cd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Bd%2B%2B%29nb%28f%5Bd%5D%2Cg%5Bd%5D%29%3Belse%20nb%28a%2Ch%29%3Breturn%20g%3Dob%28h%2C%22script%22%29%2Cg%2Elength%3E0%26%26mb%28g%2C%21i%26%26ob%28a%2C%22script%22%29%29%2Ch%7D%2CbuildFragment%3Afunction%28a%2Cb%2Cc%2Cd%29%7Bfor%28var%20e%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%3Db%2EcreateDocumentFragment%28%29%2Cl%3D%5B%5D%2Cm%3D0%2Co%3Da%2Elength%3Bo%3Em%3Bm%2B%2B%29if%28e%3Da%5Bm%5D%2Ce%7C%7C0%3D%3D%3De%29if%28%22object%22%3D%3D%3Dn%2Etype%28e%29%29n%2Emerge%28l%2Ce%2EnodeType%3F%5Be%5D%3Ae%29%3Belse%20if%28cb%2Etest%28e%29%29%7Bf%3Df%7C%7Ck%2EappendChild%28b%2EcreateElement%28%22div%22%29%29%2Cg%3D%28bb%2Eexec%28e%29%7C%7C%5B%22%22%2C%22%22%5D%29%5B1%5D%2EtoLowerCase%28%29%2Ch%3Dib%5Bg%5D%7C%7Cib%2E%5Fdefault%2Cf%2EinnerHTML%3Dh%5B1%5D%2Be%2Ereplace%28ab%2C%22%3C%241%3E%3C%2F%242%3E%22%29%2Bh%5B2%5D%2Cj%3Dh%5B0%5D%3Bwhile%28j%2D%2D%29f%3Df%2ElastChild%3Bn%2Emerge%28l%2Cf%2EchildNodes%29%2Cf%3Dk%2EfirstChild%2Cf%2EtextContent%3D%22%22%7Delse%20l%2Epush%28b%2EcreateTextNode%28e%29%29%3Bk%2EtextContent%3D%22%22%2Cm%3D0%3Bwhile%28e%3Dl%5Bm%2B%2B%5D%29if%28%28%21d%7C%7C%2D1%3D%3D%3Dn%2EinArray%28e%2Cd%29%29%26%26%28i%3Dn%2Econtains%28e%2EownerDocument%2Ce%29%2Cf%3Dob%28k%2EappendChild%28e%29%2C%22script%22%29%2Ci%26%26mb%28f%29%2Cc%29%29%7Bj%3D0%3Bwhile%28e%3Df%5Bj%2B%2B%5D%29fb%2Etest%28e%2Etype%7C%7C%22%22%29%26%26c%2Epush%28e%29%7Dreturn%20k%7D%2CcleanData%3Afunction%28a%29%7Bfor%28var%20b%2Cc%2Cd%2Ce%2Cf%3Dn%2Eevent%2Especial%2Cg%3D0%3Bvoid%200%21%3D%3D%28c%3Da%5Bg%5D%29%3Bg%2B%2B%29%7Bif%28n%2EacceptData%28c%29%26%26%28e%3Dc%5BL%2Eexpando%5D%2Ce%26%26%28b%3DL%2Ecache%5Be%5D%29%29%29%7Bif%28b%2Eevents%29for%28d%20in%20b%2Eevents%29f%5Bd%5D%3Fn%2Eevent%2Eremove%28c%2Cd%29%3An%2EremoveEvent%28c%2Cd%2Cb%2Ehandle%29%3BL%2Ecache%5Be%5D%26%26delete%20L%2Ecache%5Be%5D%7Ddelete%20M%2Ecache%5Bc%5BM%2Eexpando%5D%5D%7D%7D%7D%29%2Cn%2Efn%2Eextend%28%7Btext%3Afunction%28a%29%7Breturn%20J%28this%2Cfunction%28a%29%7Breturn%20void%200%3D%3D%3Da%3Fn%2Etext%28this%29%3Athis%2Eempty%28%29%2Eeach%28function%28%29%7B%281%3D%3D%3Dthis%2EnodeType%7C%7C11%3D%3D%3Dthis%2EnodeType%7C%7C9%3D%3D%3Dthis%2EnodeType%29%26%26%28this%2EtextContent%3Da%29%7D%29%7D%2Cnull%2Ca%2Carguments%2Elength%29%7D%2Cappend%3Afunction%28%29%7Breturn%20this%2EdomManip%28arguments%2Cfunction%28a%29%7Bif%281%3D%3D%3Dthis%2EnodeType%7C%7C11%3D%3D%3Dthis%2EnodeType%7C%7C9%3D%3D%3Dthis%2EnodeType%29%7Bvar%20b%3Djb%28this%2Ca%29%3Bb%2EappendChild%28a%29%7D%7D%29%7D%2Cprepend%3Afunction%28%29%7Breturn%20this%2EdomManip%28arguments%2Cfunction%28a%29%7Bif%281%3D%3D%3Dthis%2EnodeType%7C%7C11%3D%3D%3Dthis%2EnodeType%7C%7C9%3D%3D%3Dthis%2EnodeType%29%7Bvar%20b%3Djb%28this%2Ca%29%3Bb%2EinsertBefore%28a%2Cb%2EfirstChild%29%7D%7D%29%7D%2Cbefore%3Afunction%28%29%7Breturn%20this%2EdomManip%28arguments%2Cfunction%28a%29%7Bthis%2EparentNode%26%26this%2EparentNode%2EinsertBefore%28a%2Cthis%29%7D%29%7D%2Cafter%3Afunction%28%29%7Breturn%20this%2EdomManip%28arguments%2Cfunction%28a%29%7Bthis%2EparentNode%26%26this%2EparentNode%2EinsertBefore%28a%2Cthis%2EnextSibling%29%7D%29%7D%2Cremove%3Afunction%28a%2Cb%29%7Bfor%28var%20c%2Cd%3Da%3Fn%2Efilter%28a%2Cthis%29%3Athis%2Ce%3D0%3Bnull%21%3D%28c%3Dd%5Be%5D%29%3Be%2B%2B%29b%7C%7C1%21%3D%3Dc%2EnodeType%7C%7Cn%2EcleanData%28ob%28c%29%29%2Cc%2EparentNode%26%26%28b%26%26n%2Econtains%28c%2EownerDocument%2Cc%29%26%26mb%28ob%28c%2C%22script%22%29%29%2Cc%2EparentNode%2EremoveChild%28c%29%29%3Breturn%20this%7D%2Cempty%3Afunction%28%29%7Bfor%28var%20a%2Cb%3D0%3Bnull%21%3D%28a%3Dthis%5Bb%5D%29%3Bb%2B%2B%291%3D%3D%3Da%2EnodeType%26%26%28n%2EcleanData%28ob%28a%2C%211%29%29%2Ca%2EtextContent%3D%22%22%29%3Breturn%20this%7D%2Cclone%3Afunction%28a%2Cb%29%7Breturn%20a%3Dnull%3D%3Da%3F%211%3Aa%2Cb%3Dnull%3D%3Db%3Fa%3Ab%2Cthis%2Emap%28function%28%29%7Breturn%20n%2Eclone%28this%2Ca%2Cb%29%7D%29%7D%2Chtml%3Afunction%28a%29%7Breturn%20J%28this%2Cfunction%28a%29%7Bvar%20b%3Dthis%5B0%5D%7C%7C%7B%7D%2Cc%3D0%2Cd%3Dthis%2Elength%3Bif%28void%200%3D%3D%3Da%26%261%3D%3D%3Db%2EnodeType%29return%20b%2EinnerHTML%3Bif%28%22string%22%3D%3Dtypeof%20a%26%26%21db%2Etest%28a%29%26%26%21ib%5B%28bb%2Eexec%28a%29%7C%7C%5B%22%22%2C%22%22%5D%29%5B1%5D%2EtoLowerCase%28%29%5D%29%7Ba%3Da%2Ereplace%28ab%2C%22%3C%241%3E%3C%2F%242%3E%22%29%3Btry%7Bfor%28%3Bd%3Ec%3Bc%2B%2B%29b%3Dthis%5Bc%5D%7C%7C%7B%7D%2C1%3D%3D%3Db%2EnodeType%26%26%28n%2EcleanData%28ob%28b%2C%211%29%29%2Cb%2EinnerHTML%3Da%29%3Bb%3D0%7Dcatch%28e%29%7B%7D%7Db%26%26this%2Eempty%28%29%2Eappend%28a%29%7D%2Cnull%2Ca%2Carguments%2Elength%29%7D%2CreplaceWith%3Afunction%28%29%7Bvar%20a%3Darguments%5B0%5D%3Breturn%20this%2EdomManip%28arguments%2Cfunction%28b%29%7Ba%3Dthis%2EparentNode%2Cn%2EcleanData%28ob%28this%29%29%2Ca%26%26a%2EreplaceChild%28b%2Cthis%29%7D%29%2Ca%26%26%28a%2Elength%7C%7Ca%2EnodeType%29%3Fthis%3Athis%2Eremove%28%29%7D%2Cdetach%3Afunction%28a%29%7Breturn%20this%2Eremove%28a%2C%210%29%7D%2CdomManip%3Afunction%28a%2Cb%29%7Ba%3De%2Eapply%28%5B%5D%2Ca%29%3Bvar%20c%2Cd%2Cf%2Cg%2Ch%2Ci%2Cj%3D0%2Cl%3Dthis%2Elength%2Cm%3Dthis%2Co%3Dl%2D1%2Cp%3Da%5B0%5D%2Cq%3Dn%2EisFunction%28p%29%3Bif%28q%7C%7Cl%3E1%26%26%22string%22%3D%3Dtypeof%20p%26%26%21k%2EcheckClone%26%26eb%2Etest%28p%29%29return%20this%2Eeach%28function%28c%29%7Bvar%20d%3Dm%2Eeq%28c%29%3Bq%26%26%28a%5B0%5D%3Dp%2Ecall%28this%2Cc%2Cd%2Ehtml%28%29%29%29%2Cd%2EdomManip%28a%2Cb%29%7D%29%3Bif%28l%26%26%28c%3Dn%2EbuildFragment%28a%2Cthis%5B0%5D%2EownerDocument%2C%211%2Cthis%29%2Cd%3Dc%2EfirstChild%2C1%3D%3D%3Dc%2EchildNodes%2Elength%26%26%28c%3Dd%29%2Cd%29%29%7Bfor%28f%3Dn%2Emap%28ob%28c%2C%22script%22%29%2Ckb%29%2Cg%3Df%2Elength%3Bl%3Ej%3Bj%2B%2B%29h%3Dc%2Cj%21%3D%3Do%26%26%28h%3Dn%2Eclone%28h%2C%210%2C%210%29%2Cg%26%26n%2Emerge%28f%2Cob%28h%2C%22script%22%29%29%29%2Cb%2Ecall%28this%5Bj%5D%2Ch%2Cj%29%3Bif%28g%29for%28i%3Df%5Bf%2Elength%2D1%5D%2EownerDocument%2Cn%2Emap%28f%2Clb%29%2Cj%3D0%3Bg%3Ej%3Bj%2B%2B%29h%3Df%5Bj%5D%2Cfb%2Etest%28h%2Etype%7C%7C%22%22%29%26%26%21L%2Eaccess%28h%2C%22globalEval%22%29%26%26n%2Econtains%28i%2Ch%29%26%26%28h%2Esrc%3Fn%2E%5FevalUrl%26%26n%2E%5FevalUrl%28h%2Esrc%29%3An%2EglobalEval%28h%2EtextContent%2Ereplace%28hb%2C%22%22%29%29%29%7Dreturn%20this%7D%7D%29%2Cn%2Eeach%28%7BappendTo%3A%22append%22%2CprependTo%3A%22prepend%22%2CinsertBefore%3A%22before%22%2CinsertAfter%3A%22after%22%2CreplaceAll%3A%22replaceWith%22%7D%2Cfunction%28a%2Cb%29%7Bn%2Efn%5Ba%5D%3Dfunction%28a%29%7Bfor%28var%20c%2Cd%3D%5B%5D%2Ce%3Dn%28a%29%2Cg%3De%2Elength%2D1%2Ch%3D0%3Bg%3E%3Dh%3Bh%2B%2B%29c%3Dh%3D%3D%3Dg%3Fthis%3Athis%2Eclone%28%210%29%2Cn%28e%5Bh%5D%29%5Bb%5D%28c%29%2Cf%2Eapply%28d%2Cc%2Eget%28%29%29%3Breturn%20this%2EpushStack%28d%29%7D%7D%29%3Bvar%20qb%2Crb%3D%7B%7D%3Bfunction%20sb%28b%2Cc%29%7Bvar%20d%2Ce%3Dn%28c%2EcreateElement%28b%29%29%2EappendTo%28c%2Ebody%29%2Cf%3Da%2EgetDefaultComputedStyle%26%26%28d%3Da%2EgetDefaultComputedStyle%28e%5B0%5D%29%29%3Fd%2Edisplay%3An%2Ecss%28e%5B0%5D%2C%22display%22%29%3Breturn%20e%2Edetach%28%29%2Cf%7Dfunction%20tb%28a%29%7Bvar%20b%3Dl%2Cc%3Drb%5Ba%5D%3Breturn%20c%7C%7C%28c%3Dsb%28a%2Cb%29%2C%22none%22%21%3D%3Dc%26%26c%7C%7C%28qb%3D%28qb%7C%7Cn%28%22%3Ciframe%20frameborder%3D%270%27%20width%3D%270%27%20height%3D%270%27%2F%3E%22%29%29%2EappendTo%28b%2EdocumentElement%29%2Cb%3Dqb%5B0%5D%2EcontentDocument%2Cb%2Ewrite%28%29%2Cb%2Eclose%28%29%2Cc%3Dsb%28a%2Cb%29%2Cqb%2Edetach%28%29%29%2Crb%5Ba%5D%3Dc%29%2Cc%7Dvar%20ub%3D%2F%5Emargin%2F%2Cvb%3Dnew%20RegExp%28%22%5E%28%22%2BQ%2B%22%29%28%3F%21px%29%5Ba%2Dz%25%5D%2B%24%22%2C%22i%22%29%2Cwb%3Dfunction%28a%29%7Breturn%20a%2EownerDocument%2EdefaultView%2EgetComputedStyle%28a%2Cnull%29%7D%3Bfunction%20xb%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%2Ch%3Da%2Estyle%3Breturn%20c%3Dc%7C%7Cwb%28a%29%2Cc%26%26%28g%3Dc%2EgetPropertyValue%28b%29%7C%7Cc%5Bb%5D%29%2Cc%26%26%28%22%22%21%3D%3Dg%7C%7Cn%2Econtains%28a%2EownerDocument%2Ca%29%7C%7C%28g%3Dn%2Estyle%28a%2Cb%29%29%2Cvb%2Etest%28g%29%26%26ub%2Etest%28b%29%26%26%28d%3Dh%2Ewidth%2Ce%3Dh%2EminWidth%2Cf%3Dh%2EmaxWidth%2Ch%2EminWidth%3Dh%2EmaxWidth%3Dh%2Ewidth%3Dg%2Cg%3Dc%2Ewidth%2Ch%2Ewidth%3Dd%2Ch%2EminWidth%3De%2Ch%2EmaxWidth%3Df%29%29%2Cvoid%200%21%3D%3Dg%3Fg%2B%22%22%3Ag%7Dfunction%20yb%28a%2Cb%29%7Breturn%7Bget%3Afunction%28%29%7Breturn%20a%28%29%3Fvoid%20delete%20this%2Eget%3A%28this%2Eget%3Db%29%2Eapply%28this%2Carguments%29%7D%7D%7D%21function%28%29%7Bvar%20b%2Cc%2Cd%3Dl%2EdocumentElement%2Ce%3Dl%2EcreateElement%28%22div%22%29%2Cf%3Dl%2EcreateElement%28%22div%22%29%3Bif%28f%2Estyle%29%7Bf%2Estyle%2EbackgroundClip%3D%22content%2Dbox%22%2Cf%2EcloneNode%28%210%29%2Estyle%2EbackgroundClip%3D%22%22%2Ck%2EclearCloneStyle%3D%22content%2Dbox%22%3D%3D%3Df%2Estyle%2EbackgroundClip%2Ce%2Estyle%2EcssText%3D%22border%3A0%3Bwidth%3A0%3Bheight%3A0%3Btop%3A0%3Bleft%3A%2D9999px%3Bmargin%2Dtop%3A1px%3Bposition%3Aabsolute%22%2Ce%2EappendChild%28f%29%3Bfunction%20g%28%29%7Bf%2Estyle%2EcssText%3D%22%2Dwebkit%2Dbox%2Dsizing%3Aborder%2Dbox%3B%2Dmoz%2Dbox%2Dsizing%3Aborder%2Dbox%3Bbox%2Dsizing%3Aborder%2Dbox%3Bdisplay%3Ablock%3Bmargin%2Dtop%3A1%25%3Btop%3A1%25%3Bborder%3A1px%3Bpadding%3A1px%3Bwidth%3A4px%3Bposition%3Aabsolute%22%2Cf%2EinnerHTML%3D%22%22%2Cd%2EappendChild%28e%29%3Bvar%20g%3Da%2EgetComputedStyle%28f%2Cnull%29%3Bb%3D%221%25%22%21%3D%3Dg%2Etop%2Cc%3D%224px%22%3D%3D%3Dg%2Ewidth%2Cd%2EremoveChild%28e%29%7Da%2EgetComputedStyle%26%26n%2Eextend%28k%2C%7BpixelPosition%3Afunction%28%29%7Breturn%20g%28%29%2Cb%7D%2CboxSizingReliable%3Afunction%28%29%7Breturn%20null%3D%3Dc%26%26g%28%29%2Cc%7D%2CreliableMarginRight%3Afunction%28%29%7Bvar%20b%2Cc%3Df%2EappendChild%28l%2EcreateElement%28%22div%22%29%29%3Breturn%20c%2Estyle%2EcssText%3Df%2Estyle%2EcssText%3D%22%2Dwebkit%2Dbox%2Dsizing%3Acontent%2Dbox%3B%2Dmoz%2Dbox%2Dsizing%3Acontent%2Dbox%3Bbox%2Dsizing%3Acontent%2Dbox%3Bdisplay%3Ablock%3Bmargin%3A0%3Bborder%3A0%3Bpadding%3A0%22%2Cc%2Estyle%2EmarginRight%3Dc%2Estyle%2Ewidth%3D%220%22%2Cf%2Estyle%2Ewidth%3D%221px%22%2Cd%2EappendChild%28e%29%2Cb%3D%21parseFloat%28a%2EgetComputedStyle%28c%2Cnull%29%2EmarginRight%29%2Cd%2EremoveChild%28e%29%2Cb%7D%7D%29%7D%7D%28%29%2Cn%2Eswap%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%2Cf%2Cg%3D%7B%7D%3Bfor%28f%20in%20b%29g%5Bf%5D%3Da%2Estyle%5Bf%5D%2Ca%2Estyle%5Bf%5D%3Db%5Bf%5D%3Be%3Dc%2Eapply%28a%2Cd%7C%7C%5B%5D%29%3Bfor%28f%20in%20b%29a%2Estyle%5Bf%5D%3Dg%5Bf%5D%3Breturn%20e%7D%3Bvar%20zb%3D%2F%5E%28none%7Ctable%28%3F%21%2Dc%5Bea%5D%29%2E%2B%29%2F%2CAb%3Dnew%20RegExp%28%22%5E%28%22%2BQ%2B%22%29%28%2E%2A%29%24%22%2C%22i%22%29%2CBb%3Dnew%20RegExp%28%22%5E%28%5B%2B%2D%5D%29%3D%28%22%2BQ%2B%22%29%22%2C%22i%22%29%2CCb%3D%7Bposition%3A%22absolute%22%2Cvisibility%3A%22hidden%22%2Cdisplay%3A%22block%22%7D%2CDb%3D%7BletterSpacing%3A%220%22%2CfontWeight%3A%22400%22%7D%2CEb%3D%5B%22Webkit%22%2C%22O%22%2C%22Moz%22%2C%22ms%22%5D%3Bfunction%20Fb%28a%2Cb%29%7Bif%28b%20in%20a%29return%20b%3Bvar%20c%3Db%5B0%5D%2EtoUpperCase%28%29%2Bb%2Eslice%281%29%2Cd%3Db%2Ce%3DEb%2Elength%3Bwhile%28e%2D%2D%29if%28b%3DEb%5Be%5D%2Bc%2Cb%20in%20a%29return%20b%3Breturn%20d%7Dfunction%20Gb%28a%2Cb%2Cc%29%7Bvar%20d%3DAb%2Eexec%28b%29%3Breturn%20d%3FMath%2Emax%280%2Cd%5B1%5D%2D%28c%7C%7C0%29%29%2B%28d%5B2%5D%7C%7C%22px%22%29%3Ab%7Dfunction%20Hb%28a%2Cb%2Cc%2Cd%2Ce%29%7Bfor%28var%20f%3Dc%3D%3D%3D%28d%3F%22border%22%3A%22content%22%29%3F4%3A%22width%22%3D%3D%3Db%3F1%3A0%2Cg%3D0%3B4%3Ef%3Bf%2B%3D2%29%22margin%22%3D%3D%3Dc%26%26%28g%2B%3Dn%2Ecss%28a%2Cc%2BR%5Bf%5D%2C%210%2Ce%29%29%2Cd%3F%28%22content%22%3D%3D%3Dc%26%26%28g%2D%3Dn%2Ecss%28a%2C%22padding%22%2BR%5Bf%5D%2C%210%2Ce%29%29%2C%22margin%22%21%3D%3Dc%26%26%28g%2D%3Dn%2Ecss%28a%2C%22border%22%2BR%5Bf%5D%2B%22Width%22%2C%210%2Ce%29%29%29%3A%28g%2B%3Dn%2Ecss%28a%2C%22padding%22%2BR%5Bf%5D%2C%210%2Ce%29%2C%22padding%22%21%3D%3Dc%26%26%28g%2B%3Dn%2Ecss%28a%2C%22border%22%2BR%5Bf%5D%2B%22Width%22%2C%210%2Ce%29%29%29%3Breturn%20g%7Dfunction%20Ib%28a%2Cb%2Cc%29%7Bvar%20d%3D%210%2Ce%3D%22width%22%3D%3D%3Db%3Fa%2EoffsetWidth%3Aa%2EoffsetHeight%2Cf%3Dwb%28a%29%2Cg%3D%22border%2Dbox%22%3D%3D%3Dn%2Ecss%28a%2C%22boxSizing%22%2C%211%2Cf%29%3Bif%280%3E%3De%7C%7Cnull%3D%3De%29%7Bif%28e%3Dxb%28a%2Cb%2Cf%29%2C%280%3Ee%7C%7Cnull%3D%3De%29%26%26%28e%3Da%2Estyle%5Bb%5D%29%2Cvb%2Etest%28e%29%29return%20e%3Bd%3Dg%26%26%28k%2EboxSizingReliable%28%29%7C%7Ce%3D%3D%3Da%2Estyle%5Bb%5D%29%2Ce%3DparseFloat%28e%29%7C%7C0%7Dreturn%20e%2BHb%28a%2Cb%2Cc%7C%7C%28g%3F%22border%22%3A%22content%22%29%2Cd%2Cf%29%2B%22px%22%7Dfunction%20Jb%28a%2Cb%29%7Bfor%28var%20c%2Cd%2Ce%2Cf%3D%5B%5D%2Cg%3D0%2Ch%3Da%2Elength%3Bh%3Eg%3Bg%2B%2B%29d%3Da%5Bg%5D%2Cd%2Estyle%26%26%28f%5Bg%5D%3DL%2Eget%28d%2C%22olddisplay%22%29%2Cc%3Dd%2Estyle%2Edisplay%2Cb%3F%28f%5Bg%5D%7C%7C%22none%22%21%3D%3Dc%7C%7C%28d%2Estyle%2Edisplay%3D%22%22%29%2C%22%22%3D%3D%3Dd%2Estyle%2Edisplay%26%26S%28d%29%26%26%28f%5Bg%5D%3DL%2Eaccess%28d%2C%22olddisplay%22%2Ctb%28d%2EnodeName%29%29%29%29%3A%28e%3DS%28d%29%2C%22none%22%3D%3D%3Dc%26%26e%7C%7CL%2Eset%28d%2C%22olddisplay%22%2Ce%3Fc%3An%2Ecss%28d%2C%22display%22%29%29%29%29%3Bfor%28g%3D0%3Bh%3Eg%3Bg%2B%2B%29d%3Da%5Bg%5D%2Cd%2Estyle%26%26%28b%26%26%22none%22%21%3D%3Dd%2Estyle%2Edisplay%26%26%22%22%21%3D%3Dd%2Estyle%2Edisplay%7C%7C%28d%2Estyle%2Edisplay%3Db%3Ff%5Bg%5D%7C%7C%22%22%3A%22none%22%29%29%3Breturn%20a%7Dn%2Eextend%28%7BcssHooks%3A%7Bopacity%3A%7Bget%3Afunction%28a%2Cb%29%7Bif%28b%29%7Bvar%20c%3Dxb%28a%2C%22opacity%22%29%3Breturn%22%22%3D%3D%3Dc%3F%221%22%3Ac%7D%7D%7D%7D%2CcssNumber%3A%7BcolumnCount%3A%210%2CfillOpacity%3A%210%2CflexGrow%3A%210%2CflexShrink%3A%210%2CfontWeight%3A%210%2ClineHeight%3A%210%2Copacity%3A%210%2Corder%3A%210%2Corphans%3A%210%2Cwidows%3A%210%2CzIndex%3A%210%2Czoom%3A%210%7D%2CcssProps%3A%7B%22float%22%3A%22cssFloat%22%7D%2Cstyle%3Afunction%28a%2Cb%2Cc%2Cd%29%7Bif%28a%26%263%21%3D%3Da%2EnodeType%26%268%21%3D%3Da%2EnodeType%26%26a%2Estyle%29%7Bvar%20e%2Cf%2Cg%2Ch%3Dn%2EcamelCase%28b%29%2Ci%3Da%2Estyle%3Breturn%20b%3Dn%2EcssProps%5Bh%5D%7C%7C%28n%2EcssProps%5Bh%5D%3DFb%28i%2Ch%29%29%2Cg%3Dn%2EcssHooks%5Bb%5D%7C%7Cn%2EcssHooks%5Bh%5D%2Cvoid%200%3D%3D%3Dc%3Fg%26%26%22get%22in%20g%26%26void%200%21%3D%3D%28e%3Dg%2Eget%28a%2C%211%2Cd%29%29%3Fe%3Ai%5Bb%5D%3A%28f%3Dtypeof%20c%2C%22string%22%3D%3D%3Df%26%26%28e%3DBb%2Eexec%28c%29%29%26%26%28c%3D%28e%5B1%5D%2B1%29%2Ae%5B2%5D%2BparseFloat%28n%2Ecss%28a%2Cb%29%29%2Cf%3D%22number%22%29%2Cnull%21%3Dc%26%26c%3D%3D%3Dc%26%26%28%22number%22%21%3D%3Df%7C%7Cn%2EcssNumber%5Bh%5D%7C%7C%28c%2B%3D%22px%22%29%2Ck%2EclearCloneStyle%7C%7C%22%22%21%3D%3Dc%7C%7C0%21%3D%3Db%2EindexOf%28%22background%22%29%7C%7C%28i%5Bb%5D%3D%22inherit%22%29%2Cg%26%26%22set%22in%20g%26%26void%200%3D%3D%3D%28c%3Dg%2Eset%28a%2Cc%2Cd%29%29%7C%7C%28i%5Bb%5D%3Dc%29%29%2Cvoid%200%29%7D%7D%2Ccss%3Afunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%2Cf%2Cg%2Ch%3Dn%2EcamelCase%28b%29%3Breturn%20b%3Dn%2EcssProps%5Bh%5D%7C%7C%28n%2EcssProps%5Bh%5D%3DFb%28a%2Estyle%2Ch%29%29%2Cg%3Dn%2EcssHooks%5Bb%5D%7C%7Cn%2EcssHooks%5Bh%5D%2Cg%26%26%22get%22in%20g%26%26%28e%3Dg%2Eget%28a%2C%210%2Cc%29%29%2Cvoid%200%3D%3D%3De%26%26%28e%3Dxb%28a%2Cb%2Cd%29%29%2C%22normal%22%3D%3D%3De%26%26b%20in%20Db%26%26%28e%3DDb%5Bb%5D%29%2C%22%22%3D%3D%3Dc%7C%7Cc%3F%28f%3DparseFloat%28e%29%2Cc%3D%3D%3D%210%7C%7Cn%2EisNumeric%28f%29%3Ff%7C%7C0%3Ae%29%3Ae%7D%7D%29%2Cn%2Eeach%28%5B%22height%22%2C%22width%22%5D%2Cfunction%28a%2Cb%29%7Bn%2EcssHooks%5Bb%5D%3D%7Bget%3Afunction%28a%2Cc%2Cd%29%7Breturn%20c%3Fzb%2Etest%28n%2Ecss%28a%2C%22display%22%29%29%26%260%3D%3D%3Da%2EoffsetWidth%3Fn%2Eswap%28a%2CCb%2Cfunction%28%29%7Breturn%20Ib%28a%2Cb%2Cd%29%7D%29%3AIb%28a%2Cb%2Cd%29%3Avoid%200%7D%2Cset%3Afunction%28a%2Cc%2Cd%29%7Bvar%20e%3Dd%26%26wb%28a%29%3Breturn%20Gb%28a%2Cc%2Cd%3FHb%28a%2Cb%2Cd%2C%22border%2Dbox%22%3D%3D%3Dn%2Ecss%28a%2C%22boxSizing%22%2C%211%2Ce%29%2Ce%29%3A0%29%7D%7D%7D%29%2Cn%2EcssHooks%2EmarginRight%3Dyb%28k%2EreliableMarginRight%2Cfunction%28a%2Cb%29%7Breturn%20b%3Fn%2Eswap%28a%2C%7Bdisplay%3A%22inline%2Dblock%22%7D%2Cxb%2C%5Ba%2C%22marginRight%22%5D%29%3Avoid%200%7D%29%2Cn%2Eeach%28%7Bmargin%3A%22%22%2Cpadding%3A%22%22%2Cborder%3A%22Width%22%7D%2Cfunction%28a%2Cb%29%7Bn%2EcssHooks%5Ba%2Bb%5D%3D%7Bexpand%3Afunction%28c%29%7Bfor%28var%20d%3D0%2Ce%3D%7B%7D%2Cf%3D%22string%22%3D%3Dtypeof%20c%3Fc%2Esplit%28%22%20%22%29%3A%5Bc%5D%3B4%3Ed%3Bd%2B%2B%29e%5Ba%2BR%5Bd%5D%2Bb%5D%3Df%5Bd%5D%7C%7Cf%5Bd%2D2%5D%7C%7Cf%5B0%5D%3Breturn%20e%7D%7D%2Cub%2Etest%28a%29%7C%7C%28n%2EcssHooks%5Ba%2Bb%5D%2Eset%3DGb%29%7D%29%2Cn%2Efn%2Eextend%28%7Bcss%3Afunction%28a%2Cb%29%7Breturn%20J%28this%2Cfunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%3D%7B%7D%2Cg%3D0%3Bif%28n%2EisArray%28b%29%29%7Bfor%28d%3Dwb%28a%29%2Ce%3Db%2Elength%3Be%3Eg%3Bg%2B%2B%29f%5Bb%5Bg%5D%5D%3Dn%2Ecss%28a%2Cb%5Bg%5D%2C%211%2Cd%29%3Breturn%20f%7Dreturn%20void%200%21%3D%3Dc%3Fn%2Estyle%28a%2Cb%2Cc%29%3An%2Ecss%28a%2Cb%29%7D%2Ca%2Cb%2Carguments%2Elength%3E1%29%7D%2Cshow%3Afunction%28%29%7Breturn%20Jb%28this%2C%210%29%7D%2Chide%3Afunction%28%29%7Breturn%20Jb%28this%29%7D%2Ctoggle%3Afunction%28a%29%7Breturn%22boolean%22%3D%3Dtypeof%20a%3Fa%3Fthis%2Eshow%28%29%3Athis%2Ehide%28%29%3Athis%2Eeach%28function%28%29%7BS%28this%29%3Fn%28this%29%2Eshow%28%29%3An%28this%29%2Ehide%28%29%7D%29%7D%7D%29%3Bfunction%20Kb%28a%2Cb%2Cc%2Cd%2Ce%29%7Breturn%20new%20Kb%2Eprototype%2Einit%28a%2Cb%2Cc%2Cd%2Ce%29%7Dn%2ETween%3DKb%2CKb%2Eprototype%3D%7Bconstructor%3AKb%2Cinit%3Afunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bthis%2Eelem%3Da%2Cthis%2Eprop%3Dc%2Cthis%2Eeasing%3De%7C%7C%22swing%22%2Cthis%2Eoptions%3Db%2Cthis%2Estart%3Dthis%2Enow%3Dthis%2Ecur%28%29%2Cthis%2Eend%3Dd%2Cthis%2Eunit%3Df%7C%7C%28n%2EcssNumber%5Bc%5D%3F%22%22%3A%22px%22%29%7D%2Ccur%3Afunction%28%29%7Bvar%20a%3DKb%2EpropHooks%5Bthis%2Eprop%5D%3Breturn%20a%26%26a%2Eget%3Fa%2Eget%28this%29%3AKb%2EpropHooks%2E%5Fdefault%2Eget%28this%29%7D%2Crun%3Afunction%28a%29%7Bvar%20b%2Cc%3DKb%2EpropHooks%5Bthis%2Eprop%5D%3Breturn%20this%2Epos%3Db%3Dthis%2Eoptions%2Eduration%3Fn%2Eeasing%5Bthis%2Eeasing%5D%28a%2Cthis%2Eoptions%2Eduration%2Aa%2C0%2C1%2Cthis%2Eoptions%2Eduration%29%3Aa%2Cthis%2Enow%3D%28this%2Eend%2Dthis%2Estart%29%2Ab%2Bthis%2Estart%2Cthis%2Eoptions%2Estep%26%26this%2Eoptions%2Estep%2Ecall%28this%2Eelem%2Cthis%2Enow%2Cthis%29%2Cc%26%26c%2Eset%3Fc%2Eset%28this%29%3AKb%2EpropHooks%2E%5Fdefault%2Eset%28this%29%2Cthis%7D%7D%2CKb%2Eprototype%2Einit%2Eprototype%3DKb%2Eprototype%2CKb%2EpropHooks%3D%7B%5Fdefault%3A%7Bget%3Afunction%28a%29%7Bvar%20b%3Breturn%20null%3D%3Da%2Eelem%5Ba%2Eprop%5D%7C%7Ca%2Eelem%2Estyle%26%26null%21%3Da%2Eelem%2Estyle%5Ba%2Eprop%5D%3F%28b%3Dn%2Ecss%28a%2Eelem%2Ca%2Eprop%2C%22%22%29%2Cb%26%26%22auto%22%21%3D%3Db%3Fb%3A0%29%3Aa%2Eelem%5Ba%2Eprop%5D%7D%2Cset%3Afunction%28a%29%7Bn%2Efx%2Estep%5Ba%2Eprop%5D%3Fn%2Efx%2Estep%5Ba%2Eprop%5D%28a%29%3Aa%2Eelem%2Estyle%26%26%28null%21%3Da%2Eelem%2Estyle%5Bn%2EcssProps%5Ba%2Eprop%5D%5D%7C%7Cn%2EcssHooks%5Ba%2Eprop%5D%29%3Fn%2Estyle%28a%2Eelem%2Ca%2Eprop%2Ca%2Enow%2Ba%2Eunit%29%3Aa%2Eelem%5Ba%2Eprop%5D%3Da%2Enow%7D%7D%7D%2CKb%2EpropHooks%2EscrollTop%3DKb%2EpropHooks%2EscrollLeft%3D%7Bset%3Afunction%28a%29%7Ba%2Eelem%2EnodeType%26%26a%2Eelem%2EparentNode%26%26%28a%2Eelem%5Ba%2Eprop%5D%3Da%2Enow%29%7D%7D%2Cn%2Eeasing%3D%7Blinear%3Afunction%28a%29%7Breturn%20a%7D%2Cswing%3Afunction%28a%29%7Breturn%2E5%2DMath%2Ecos%28a%2AMath%2EPI%29%2F2%7D%7D%2Cn%2Efx%3DKb%2Eprototype%2Einit%2Cn%2Efx%2Estep%3D%7B%7D%3Bvar%20Lb%2CMb%2CNb%3D%2F%5E%28%3F%3Atoggle%7Cshow%7Chide%29%24%2F%2COb%3Dnew%20RegExp%28%22%5E%28%3F%3A%28%5B%2B%2D%5D%29%3D%7C%29%28%22%2BQ%2B%22%29%28%5Ba%2Dz%25%5D%2A%29%24%22%2C%22i%22%29%2CPb%3D%2FqueueHooks%24%2F%2CQb%3D%5BVb%5D%2CRb%3D%7B%22%2A%22%3A%5Bfunction%28a%2Cb%29%7Bvar%20c%3Dthis%2EcreateTween%28a%2Cb%29%2Cd%3Dc%2Ecur%28%29%2Ce%3DOb%2Eexec%28b%29%2Cf%3De%26%26e%5B3%5D%7C%7C%28n%2EcssNumber%5Ba%5D%3F%22%22%3A%22px%22%29%2Cg%3D%28n%2EcssNumber%5Ba%5D%7C%7C%22px%22%21%3D%3Df%26%26%2Bd%29%26%26Ob%2Eexec%28n%2Ecss%28c%2Eelem%2Ca%29%29%2Ch%3D1%2Ci%3D20%3Bif%28g%26%26g%5B3%5D%21%3D%3Df%29%7Bf%3Df%7C%7Cg%5B3%5D%2Ce%3De%7C%7C%5B%5D%2Cg%3D%2Bd%7C%7C1%3Bdo%20h%3Dh%7C%7C%22%2E5%22%2Cg%2F%3Dh%2Cn%2Estyle%28c%2Eelem%2Ca%2Cg%2Bf%29%3Bwhile%28h%21%3D%3D%28h%3Dc%2Ecur%28%29%2Fd%29%26%261%21%3D%3Dh%26%26%2D%2Di%29%7Dreturn%20e%26%26%28g%3Dc%2Estart%3D%2Bg%7C%7C%2Bd%7C%7C0%2Cc%2Eunit%3Df%2Cc%2Eend%3De%5B1%5D%3Fg%2B%28e%5B1%5D%2B1%29%2Ae%5B2%5D%3A%2Be%5B2%5D%29%2Cc%7D%5D%7D%3Bfunction%20Sb%28%29%7Breturn%20setTimeout%28function%28%29%7BLb%3Dvoid%200%7D%29%2CLb%3Dn%2Enow%28%29%7Dfunction%20Tb%28a%2Cb%29%7Bvar%20c%2Cd%3D0%2Ce%3D%7Bheight%3Aa%7D%3Bfor%28b%3Db%3F1%3A0%3B4%3Ed%3Bd%2B%3D2%2Db%29c%3DR%5Bd%5D%2Ce%5B%22margin%22%2Bc%5D%3De%5B%22padding%22%2Bc%5D%3Da%3Breturn%20b%26%26%28e%2Eopacity%3De%2Ewidth%3Da%29%2Ce%7Dfunction%20Ub%28a%2Cb%2Cc%29%7Bfor%28var%20d%2Ce%3D%28Rb%5Bb%5D%7C%7C%5B%5D%29%2Econcat%28Rb%5B%22%2A%22%5D%29%2Cf%3D0%2Cg%3De%2Elength%3Bg%3Ef%3Bf%2B%2B%29if%28d%3De%5Bf%5D%2Ecall%28c%2Cb%2Ca%29%29return%20d%7Dfunction%20Vb%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%3Dthis%2Cm%3D%7B%7D%2Co%3Da%2Estyle%2Cp%3Da%2EnodeType%26%26S%28a%29%2Cq%3DL%2Eget%28a%2C%22fxshow%22%29%3Bc%2Equeue%7C%7C%28h%3Dn%2E%5FqueueHooks%28a%2C%22fx%22%29%2Cnull%3D%3Dh%2Eunqueued%26%26%28h%2Eunqueued%3D0%2Ci%3Dh%2Eempty%2Efire%2Ch%2Eempty%2Efire%3Dfunction%28%29%7Bh%2Eunqueued%7C%7Ci%28%29%7D%29%2Ch%2Eunqueued%2B%2B%2Cl%2Ealways%28function%28%29%7Bl%2Ealways%28function%28%29%7Bh%2Eunqueued%2D%2D%2Cn%2Equeue%28a%2C%22fx%22%29%2Elength%7C%7Ch%2Eempty%2Efire%28%29%7D%29%7D%29%29%2C1%3D%3D%3Da%2EnodeType%26%26%28%22height%22in%20b%7C%7C%22width%22in%20b%29%26%26%28c%2Eoverflow%3D%5Bo%2Eoverflow%2Co%2EoverflowX%2Co%2EoverflowY%5D%2Cj%3Dn%2Ecss%28a%2C%22display%22%29%2Ck%3D%22none%22%3D%3D%3Dj%3FL%2Eget%28a%2C%22olddisplay%22%29%7C%7Ctb%28a%2EnodeName%29%3Aj%2C%22inline%22%3D%3D%3Dk%26%26%22none%22%3D%3D%3Dn%2Ecss%28a%2C%22float%22%29%26%26%28o%2Edisplay%3D%22inline%2Dblock%22%29%29%2Cc%2Eoverflow%26%26%28o%2Eoverflow%3D%22hidden%22%2Cl%2Ealways%28function%28%29%7Bo%2Eoverflow%3Dc%2Eoverflow%5B0%5D%2Co%2EoverflowX%3Dc%2Eoverflow%5B1%5D%2Co%2EoverflowY%3Dc%2Eoverflow%5B2%5D%7D%29%29%3Bfor%28d%20in%20b%29if%28e%3Db%5Bd%5D%2CNb%2Eexec%28e%29%29%7Bif%28delete%20b%5Bd%5D%2Cf%3Df%7C%7C%22toggle%22%3D%3D%3De%2Ce%3D%3D%3D%28p%3F%22hide%22%3A%22show%22%29%29%7Bif%28%22show%22%21%3D%3De%7C%7C%21q%7C%7Cvoid%200%3D%3D%3Dq%5Bd%5D%29continue%3Bp%3D%210%7Dm%5Bd%5D%3Dq%26%26q%5Bd%5D%7C%7Cn%2Estyle%28a%2Cd%29%7Delse%20j%3Dvoid%200%3Bif%28n%2EisEmptyObject%28m%29%29%22inline%22%3D%3D%3D%28%22none%22%3D%3D%3Dj%3Ftb%28a%2EnodeName%29%3Aj%29%26%26%28o%2Edisplay%3Dj%29%3Belse%7Bq%3F%22hidden%22in%20q%26%26%28p%3Dq%2Ehidden%29%3Aq%3DL%2Eaccess%28a%2C%22fxshow%22%2C%7B%7D%29%2Cf%26%26%28q%2Ehidden%3D%21p%29%2Cp%3Fn%28a%29%2Eshow%28%29%3Al%2Edone%28function%28%29%7Bn%28a%29%2Ehide%28%29%7D%29%2Cl%2Edone%28function%28%29%7Bvar%20b%3BL%2Eremove%28a%2C%22fxshow%22%29%3Bfor%28b%20in%20m%29n%2Estyle%28a%2Cb%2Cm%5Bb%5D%29%7D%29%3Bfor%28d%20in%20m%29g%3DUb%28p%3Fq%5Bd%5D%3A0%2Cd%2Cl%29%2Cd%20in%20q%7C%7C%28q%5Bd%5D%3Dg%2Estart%2Cp%26%26%28g%2Eend%3Dg%2Estart%2Cg%2Estart%3D%22width%22%3D%3D%3Dd%7C%7C%22height%22%3D%3D%3Dd%3F1%3A0%29%29%7D%7Dfunction%20Wb%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%2Cg%3Bfor%28c%20in%20a%29if%28d%3Dn%2EcamelCase%28c%29%2Ce%3Db%5Bd%5D%2Cf%3Da%5Bc%5D%2Cn%2EisArray%28f%29%26%26%28e%3Df%5B1%5D%2Cf%3Da%5Bc%5D%3Df%5B0%5D%29%2Cc%21%3D%3Dd%26%26%28a%5Bd%5D%3Df%2Cdelete%20a%5Bc%5D%29%2Cg%3Dn%2EcssHooks%5Bd%5D%2Cg%26%26%22expand%22in%20g%29%7Bf%3Dg%2Eexpand%28f%29%2Cdelete%20a%5Bd%5D%3Bfor%28c%20in%20f%29c%20in%20a%7C%7C%28a%5Bc%5D%3Df%5Bc%5D%2Cb%5Bc%5D%3De%29%7Delse%20b%5Bd%5D%3De%7Dfunction%20Xb%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%3D0%2Cg%3DQb%2Elength%2Ch%3Dn%2EDeferred%28%29%2Ealways%28function%28%29%7Bdelete%20i%2Eelem%7D%29%2Ci%3Dfunction%28%29%7Bif%28e%29return%211%3Bfor%28var%20b%3DLb%7C%7CSb%28%29%2Cc%3DMath%2Emax%280%2Cj%2EstartTime%2Bj%2Eduration%2Db%29%2Cd%3Dc%2Fj%2Eduration%7C%7C0%2Cf%3D1%2Dd%2Cg%3D0%2Ci%3Dj%2Etweens%2Elength%3Bi%3Eg%3Bg%2B%2B%29j%2Etweens%5Bg%5D%2Erun%28f%29%3Breturn%20h%2EnotifyWith%28a%2C%5Bj%2Cf%2Cc%5D%29%2C1%3Ef%26%26i%3Fc%3A%28h%2EresolveWith%28a%2C%5Bj%5D%29%2C%211%29%7D%2Cj%3Dh%2Epromise%28%7Belem%3Aa%2Cprops%3An%2Eextend%28%7B%7D%2Cb%29%2Copts%3An%2Eextend%28%210%2C%7BspecialEasing%3A%7B%7D%7D%2Cc%29%2CoriginalProperties%3Ab%2CoriginalOptions%3Ac%2CstartTime%3ALb%7C%7CSb%28%29%2Cduration%3Ac%2Eduration%2Ctweens%3A%5B%5D%2CcreateTween%3Afunction%28b%2Cc%29%7Bvar%20d%3Dn%2ETween%28a%2Cj%2Eopts%2Cb%2Cc%2Cj%2Eopts%2EspecialEasing%5Bb%5D%7C%7Cj%2Eopts%2Eeasing%29%3Breturn%20j%2Etweens%2Epush%28d%29%2Cd%7D%2Cstop%3Afunction%28b%29%7Bvar%20c%3D0%2Cd%3Db%3Fj%2Etweens%2Elength%3A0%3Bif%28e%29return%20this%3Bfor%28e%3D%210%3Bd%3Ec%3Bc%2B%2B%29j%2Etweens%5Bc%5D%2Erun%281%29%3Breturn%20b%3Fh%2EresolveWith%28a%2C%5Bj%2Cb%5D%29%3Ah%2ErejectWith%28a%2C%5Bj%2Cb%5D%29%2Cthis%7D%7D%29%2Ck%3Dj%2Eprops%3Bfor%28Wb%28k%2Cj%2Eopts%2EspecialEasing%29%3Bg%3Ef%3Bf%2B%2B%29if%28d%3DQb%5Bf%5D%2Ecall%28j%2Ca%2Ck%2Cj%2Eopts%29%29return%20d%3Breturn%20n%2Emap%28k%2CUb%2Cj%29%2Cn%2EisFunction%28j%2Eopts%2Estart%29%26%26j%2Eopts%2Estart%2Ecall%28a%2Cj%29%2Cn%2Efx%2Etimer%28n%2Eextend%28i%2C%7Belem%3Aa%2Canim%3Aj%2Cqueue%3Aj%2Eopts%2Equeue%7D%29%29%2Cj%2Eprogress%28j%2Eopts%2Eprogress%29%2Edone%28j%2Eopts%2Edone%2Cj%2Eopts%2Ecomplete%29%2Efail%28j%2Eopts%2Efail%29%2Ealways%28j%2Eopts%2Ealways%29%7Dn%2EAnimation%3Dn%2Eextend%28Xb%2C%7Btweener%3Afunction%28a%2Cb%29%7Bn%2EisFunction%28a%29%3F%28b%3Da%2Ca%3D%5B%22%2A%22%5D%29%3Aa%3Da%2Esplit%28%22%20%22%29%3Bfor%28var%20c%2Cd%3D0%2Ce%3Da%2Elength%3Be%3Ed%3Bd%2B%2B%29c%3Da%5Bd%5D%2CRb%5Bc%5D%3DRb%5Bc%5D%7C%7C%5B%5D%2CRb%5Bc%5D%2Eunshift%28b%29%7D%2Cprefilter%3Afunction%28a%2Cb%29%7Bb%3FQb%2Eunshift%28a%29%3AQb%2Epush%28a%29%7D%7D%29%2Cn%2Espeed%3Dfunction%28a%2Cb%2Cc%29%7Bvar%20d%3Da%26%26%22object%22%3D%3Dtypeof%20a%3Fn%2Eextend%28%7B%7D%2Ca%29%3A%7Bcomplete%3Ac%7C%7C%21c%26%26b%7C%7Cn%2EisFunction%28a%29%26%26a%2Cduration%3Aa%2Ceasing%3Ac%26%26b%7C%7Cb%26%26%21n%2EisFunction%28b%29%26%26b%7D%3Breturn%20d%2Eduration%3Dn%2Efx%2Eoff%3F0%3A%22number%22%3D%3Dtypeof%20d%2Eduration%3Fd%2Eduration%3Ad%2Eduration%20in%20n%2Efx%2Espeeds%3Fn%2Efx%2Espeeds%5Bd%2Eduration%5D%3An%2Efx%2Espeeds%2E%5Fdefault%2C%28null%3D%3Dd%2Equeue%7C%7Cd%2Equeue%3D%3D%3D%210%29%26%26%28d%2Equeue%3D%22fx%22%29%2Cd%2Eold%3Dd%2Ecomplete%2Cd%2Ecomplete%3Dfunction%28%29%7Bn%2EisFunction%28d%2Eold%29%26%26d%2Eold%2Ecall%28this%29%2Cd%2Equeue%26%26n%2Edequeue%28this%2Cd%2Equeue%29%7D%2Cd%7D%2Cn%2Efn%2Eextend%28%7BfadeTo%3Afunction%28a%2Cb%2Cc%2Cd%29%7Breturn%20this%2Efilter%28S%29%2Ecss%28%22opacity%22%2C0%29%2Eshow%28%29%2Eend%28%29%2Eanimate%28%7Bopacity%3Ab%7D%2Ca%2Cc%2Cd%29%7D%2Canimate%3Afunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3Dn%2EisEmptyObject%28a%29%2Cf%3Dn%2Espeed%28b%2Cc%2Cd%29%2Cg%3Dfunction%28%29%7Bvar%20b%3DXb%28this%2Cn%2Eextend%28%7B%7D%2Ca%29%2Cf%29%3B%28e%7C%7CL%2Eget%28this%2C%22finish%22%29%29%26%26b%2Estop%28%210%29%7D%3Breturn%20g%2Efinish%3Dg%2Ce%7C%7Cf%2Equeue%3D%3D%3D%211%3Fthis%2Eeach%28g%29%3Athis%2Equeue%28f%2Equeue%2Cg%29%7D%2Cstop%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%3Dfunction%28a%29%7Bvar%20b%3Da%2Estop%3Bdelete%20a%2Estop%2Cb%28c%29%7D%3Breturn%22string%22%21%3Dtypeof%20a%26%26%28c%3Db%2Cb%3Da%2Ca%3Dvoid%200%29%2Cb%26%26a%21%3D%3D%211%26%26this%2Equeue%28a%7C%7C%22fx%22%2C%5B%5D%29%2Cthis%2Eeach%28function%28%29%7Bvar%20b%3D%210%2Ce%3Dnull%21%3Da%26%26a%2B%22queueHooks%22%2Cf%3Dn%2Etimers%2Cg%3DL%2Eget%28this%29%3Bif%28e%29g%5Be%5D%26%26g%5Be%5D%2Estop%26%26d%28g%5Be%5D%29%3Belse%20for%28e%20in%20g%29g%5Be%5D%26%26g%5Be%5D%2Estop%26%26Pb%2Etest%28e%29%26%26d%28g%5Be%5D%29%3Bfor%28e%3Df%2Elength%3Be%2D%2D%3B%29f%5Be%5D%2Eelem%21%3D%3Dthis%7C%7Cnull%21%3Da%26%26f%5Be%5D%2Equeue%21%3D%3Da%7C%7C%28f%5Be%5D%2Eanim%2Estop%28c%29%2Cb%3D%211%2Cf%2Esplice%28e%2C1%29%29%3B%28b%7C%7C%21c%29%26%26n%2Edequeue%28this%2Ca%29%7D%29%7D%2Cfinish%3Afunction%28a%29%7Breturn%20a%21%3D%3D%211%26%26%28a%3Da%7C%7C%22fx%22%29%2Cthis%2Eeach%28function%28%29%7Bvar%20b%2Cc%3DL%2Eget%28this%29%2Cd%3Dc%5Ba%2B%22queue%22%5D%2Ce%3Dc%5Ba%2B%22queueHooks%22%5D%2Cf%3Dn%2Etimers%2Cg%3Dd%3Fd%2Elength%3A0%3Bfor%28c%2Efinish%3D%210%2Cn%2Equeue%28this%2Ca%2C%5B%5D%29%2Ce%26%26e%2Estop%26%26e%2Estop%2Ecall%28this%2C%210%29%2Cb%3Df%2Elength%3Bb%2D%2D%3B%29f%5Bb%5D%2Eelem%3D%3D%3Dthis%26%26f%5Bb%5D%2Equeue%3D%3D%3Da%26%26%28f%5Bb%5D%2Eanim%2Estop%28%210%29%2Cf%2Esplice%28b%2C1%29%29%3Bfor%28b%3D0%3Bg%3Eb%3Bb%2B%2B%29d%5Bb%5D%26%26d%5Bb%5D%2Efinish%26%26d%5Bb%5D%2Efinish%2Ecall%28this%29%3Bdelete%20c%2Efinish%7D%29%7D%7D%29%2Cn%2Eeach%28%5B%22toggle%22%2C%22show%22%2C%22hide%22%5D%2Cfunction%28a%2Cb%29%7Bvar%20c%3Dn%2Efn%5Bb%5D%3Bn%2Efn%5Bb%5D%3Dfunction%28a%2Cd%2Ce%29%7Breturn%20null%3D%3Da%7C%7C%22boolean%22%3D%3Dtypeof%20a%3Fc%2Eapply%28this%2Carguments%29%3Athis%2Eanimate%28Tb%28b%2C%210%29%2Ca%2Cd%2Ce%29%7D%7D%29%2Cn%2Eeach%28%7BslideDown%3ATb%28%22show%22%29%2CslideUp%3ATb%28%22hide%22%29%2CslideToggle%3ATb%28%22toggle%22%29%2CfadeIn%3A%7Bopacity%3A%22show%22%7D%2CfadeOut%3A%7Bopacity%3A%22hide%22%7D%2CfadeToggle%3A%7Bopacity%3A%22toggle%22%7D%7D%2Cfunction%28a%2Cb%29%7Bn%2Efn%5Ba%5D%3Dfunction%28a%2Cc%2Cd%29%7Breturn%20this%2Eanimate%28b%2Ca%2Cc%2Cd%29%7D%7D%29%2Cn%2Etimers%3D%5B%5D%2Cn%2Efx%2Etick%3Dfunction%28%29%7Bvar%20a%2Cb%3D0%2Cc%3Dn%2Etimers%3Bfor%28Lb%3Dn%2Enow%28%29%3Bb%3Cc%2Elength%3Bb%2B%2B%29a%3Dc%5Bb%5D%2Ca%28%29%7C%7Cc%5Bb%5D%21%3D%3Da%7C%7Cc%2Esplice%28b%2D%2D%2C1%29%3Bc%2Elength%7C%7Cn%2Efx%2Estop%28%29%2CLb%3Dvoid%200%7D%2Cn%2Efx%2Etimer%3Dfunction%28a%29%7Bn%2Etimers%2Epush%28a%29%2Ca%28%29%3Fn%2Efx%2Estart%28%29%3An%2Etimers%2Epop%28%29%7D%2Cn%2Efx%2Einterval%3D13%2Cn%2Efx%2Estart%3Dfunction%28%29%7BMb%7C%7C%28Mb%3DsetInterval%28n%2Efx%2Etick%2Cn%2Efx%2Einterval%29%29%7D%2Cn%2Efx%2Estop%3Dfunction%28%29%7BclearInterval%28Mb%29%2CMb%3Dnull%7D%2Cn%2Efx%2Espeeds%3D%7Bslow%3A600%2Cfast%3A200%2C%5Fdefault%3A400%7D%2Cn%2Efn%2Edelay%3Dfunction%28a%2Cb%29%7Breturn%20a%3Dn%2Efx%3Fn%2Efx%2Espeeds%5Ba%5D%7C%7Ca%3Aa%2Cb%3Db%7C%7C%22fx%22%2Cthis%2Equeue%28b%2Cfunction%28b%2Cc%29%7Bvar%20d%3DsetTimeout%28b%2Ca%29%3Bc%2Estop%3Dfunction%28%29%7BclearTimeout%28d%29%7D%7D%29%7D%2Cfunction%28%29%7Bvar%20a%3Dl%2EcreateElement%28%22input%22%29%2Cb%3Dl%2EcreateElement%28%22select%22%29%2Cc%3Db%2EappendChild%28l%2EcreateElement%28%22option%22%29%29%3Ba%2Etype%3D%22checkbox%22%2Ck%2EcheckOn%3D%22%22%21%3D%3Da%2Evalue%2Ck%2EoptSelected%3Dc%2Eselected%2Cb%2Edisabled%3D%210%2Ck%2EoptDisabled%3D%21c%2Edisabled%2Ca%3Dl%2EcreateElement%28%22input%22%29%2Ca%2Evalue%3D%22t%22%2Ca%2Etype%3D%22radio%22%2Ck%2EradioValue%3D%22t%22%3D%3D%3Da%2Evalue%7D%28%29%3Bvar%20Yb%2CZb%2C%24b%3Dn%2Eexpr%2EattrHandle%3Bn%2Efn%2Eextend%28%7Battr%3Afunction%28a%2Cb%29%7Breturn%20J%28this%2Cn%2Eattr%2Ca%2Cb%2Carguments%2Elength%3E1%29%7D%2CremoveAttr%3Afunction%28a%29%7Breturn%20this%2Eeach%28function%28%29%7Bn%2EremoveAttr%28this%2Ca%29%7D%29%7D%7D%29%2Cn%2Eextend%28%7Battr%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%3Da%2EnodeType%3Bif%28a%26%263%21%3D%3Df%26%268%21%3D%3Df%26%262%21%3D%3Df%29return%20typeof%20a%2EgetAttribute%3D%3D%3DU%3Fn%2Eprop%28a%2Cb%2Cc%29%3A%281%3D%3D%3Df%26%26n%2EisXMLDoc%28a%29%7C%7C%28b%3Db%2EtoLowerCase%28%29%2Cd%3Dn%2EattrHooks%5Bb%5D%7C%7C%28n%2Eexpr%2Ematch%2Ebool%2Etest%28b%29%3FZb%3AYb%29%29%2Cvoid%200%3D%3D%3Dc%3Fd%26%26%22get%22in%20d%26%26null%21%3D%3D%28e%3Dd%2Eget%28a%2Cb%29%29%3Fe%3A%28e%3Dn%2Efind%2Eattr%28a%2Cb%29%2Cnull%3D%3De%3Fvoid%200%3Ae%29%3Anull%21%3D%3Dc%3Fd%26%26%22set%22in%20d%26%26void%200%21%3D%3D%28e%3Dd%2Eset%28a%2Cc%2Cb%29%29%3Fe%3A%28a%2EsetAttribute%28b%2Cc%2B%22%22%29%2Cc%29%3Avoid%20n%2EremoveAttr%28a%2Cb%29%29%0A%7D%2CremoveAttr%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%3D0%2Cf%3Db%26%26b%2Ematch%28E%29%3Bif%28f%26%261%3D%3D%3Da%2EnodeType%29while%28c%3Df%5Be%2B%2B%5D%29d%3Dn%2EpropFix%5Bc%5D%7C%7Cc%2Cn%2Eexpr%2Ematch%2Ebool%2Etest%28c%29%26%26%28a%5Bd%5D%3D%211%29%2Ca%2EremoveAttribute%28c%29%7D%2CattrHooks%3A%7Btype%3A%7Bset%3Afunction%28a%2Cb%29%7Bif%28%21k%2EradioValue%26%26%22radio%22%3D%3D%3Db%26%26n%2EnodeName%28a%2C%22input%22%29%29%7Bvar%20c%3Da%2Evalue%3Breturn%20a%2EsetAttribute%28%22type%22%2Cb%29%2Cc%26%26%28a%2Evalue%3Dc%29%2Cb%7D%7D%7D%7D%7D%29%2CZb%3D%7Bset%3Afunction%28a%2Cb%2Cc%29%7Breturn%20b%3D%3D%3D%211%3Fn%2EremoveAttr%28a%2Cc%29%3Aa%2EsetAttribute%28c%2Cc%29%2Cc%7D%7D%2Cn%2Eeach%28n%2Eexpr%2Ematch%2Ebool%2Esource%2Ematch%28%2F%5Cw%2B%2Fg%29%2Cfunction%28a%2Cb%29%7Bvar%20c%3D%24b%5Bb%5D%7C%7Cn%2Efind%2Eattr%3B%24b%5Bb%5D%3Dfunction%28a%2Cb%2Cd%29%7Bvar%20e%2Cf%3Breturn%20d%7C%7C%28f%3D%24b%5Bb%5D%2C%24b%5Bb%5D%3De%2Ce%3Dnull%21%3Dc%28a%2Cb%2Cd%29%3Fb%2EtoLowerCase%28%29%3Anull%2C%24b%5Bb%5D%3Df%29%2Ce%7D%7D%29%3Bvar%20%5Fb%3D%2F%5E%28%3F%3Ainput%7Cselect%7Ctextarea%7Cbutton%29%24%2Fi%3Bn%2Efn%2Eextend%28%7Bprop%3Afunction%28a%2Cb%29%7Breturn%20J%28this%2Cn%2Eprop%2Ca%2Cb%2Carguments%2Elength%3E1%29%7D%2CremoveProp%3Afunction%28a%29%7Breturn%20this%2Eeach%28function%28%29%7Bdelete%20this%5Bn%2EpropFix%5Ba%5D%7C%7Ca%5D%7D%29%7D%7D%29%2Cn%2Eextend%28%7BpropFix%3A%7B%22for%22%3A%22htmlFor%22%2C%22class%22%3A%22className%22%7D%2Cprop%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%3Da%2EnodeType%3Bif%28a%26%263%21%3D%3Dg%26%268%21%3D%3Dg%26%262%21%3D%3Dg%29return%20f%3D1%21%3D%3Dg%7C%7C%21n%2EisXMLDoc%28a%29%2Cf%26%26%28b%3Dn%2EpropFix%5Bb%5D%7C%7Cb%2Ce%3Dn%2EpropHooks%5Bb%5D%29%2Cvoid%200%21%3D%3Dc%3Fe%26%26%22set%22in%20e%26%26void%200%21%3D%3D%28d%3De%2Eset%28a%2Cc%2Cb%29%29%3Fd%3Aa%5Bb%5D%3Dc%3Ae%26%26%22get%22in%20e%26%26null%21%3D%3D%28d%3De%2Eget%28a%2Cb%29%29%3Fd%3Aa%5Bb%5D%7D%2CpropHooks%3A%7BtabIndex%3A%7Bget%3Afunction%28a%29%7Breturn%20a%2EhasAttribute%28%22tabindex%22%29%7C%7C%5Fb%2Etest%28a%2EnodeName%29%7C%7Ca%2Ehref%3Fa%2EtabIndex%3A%2D1%7D%7D%7D%7D%29%2Ck%2EoptSelected%7C%7C%28n%2EpropHooks%2Eselected%3D%7Bget%3Afunction%28a%29%7Bvar%20b%3Da%2EparentNode%3Breturn%20b%26%26b%2EparentNode%26%26b%2EparentNode%2EselectedIndex%2Cnull%7D%7D%29%2Cn%2Eeach%28%5B%22tabIndex%22%2C%22readOnly%22%2C%22maxLength%22%2C%22cellSpacing%22%2C%22cellPadding%22%2C%22rowSpan%22%2C%22colSpan%22%2C%22useMap%22%2C%22frameBorder%22%2C%22contentEditable%22%5D%2Cfunction%28%29%7Bn%2EpropFix%5Bthis%2EtoLowerCase%28%29%5D%3Dthis%7D%29%3Bvar%20ac%3D%2F%5B%5Ct%5Cr%5Cn%5Cf%5D%2Fg%3Bn%2Efn%2Eextend%28%7BaddClass%3Afunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%3D%22string%22%3D%3Dtypeof%20a%26%26a%2Ci%3D0%2Cj%3Dthis%2Elength%3Bif%28n%2EisFunction%28a%29%29return%20this%2Eeach%28function%28b%29%7Bn%28this%29%2EaddClass%28a%2Ecall%28this%2Cb%2Cthis%2EclassName%29%29%7D%29%3Bif%28h%29for%28b%3D%28a%7C%7C%22%22%29%2Ematch%28E%29%7C%7C%5B%5D%3Bj%3Ei%3Bi%2B%2B%29if%28c%3Dthis%5Bi%5D%2Cd%3D1%3D%3D%3Dc%2EnodeType%26%26%28c%2EclassName%3F%28%22%20%22%2Bc%2EclassName%2B%22%20%22%29%2Ereplace%28ac%2C%22%20%22%29%3A%22%20%22%29%29%7Bf%3D0%3Bwhile%28e%3Db%5Bf%2B%2B%5D%29d%2EindexOf%28%22%20%22%2Be%2B%22%20%22%29%3C0%26%26%28d%2B%3De%2B%22%20%22%29%3Bg%3Dn%2Etrim%28d%29%2Cc%2EclassName%21%3D%3Dg%26%26%28c%2EclassName%3Dg%29%7Dreturn%20this%7D%2CremoveClass%3Afunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%3D0%3D%3D%3Darguments%2Elength%7C%7C%22string%22%3D%3Dtypeof%20a%26%26a%2Ci%3D0%2Cj%3Dthis%2Elength%3Bif%28n%2EisFunction%28a%29%29return%20this%2Eeach%28function%28b%29%7Bn%28this%29%2EremoveClass%28a%2Ecall%28this%2Cb%2Cthis%2EclassName%29%29%7D%29%3Bif%28h%29for%28b%3D%28a%7C%7C%22%22%29%2Ematch%28E%29%7C%7C%5B%5D%3Bj%3Ei%3Bi%2B%2B%29if%28c%3Dthis%5Bi%5D%2Cd%3D1%3D%3D%3Dc%2EnodeType%26%26%28c%2EclassName%3F%28%22%20%22%2Bc%2EclassName%2B%22%20%22%29%2Ereplace%28ac%2C%22%20%22%29%3A%22%22%29%29%7Bf%3D0%3Bwhile%28e%3Db%5Bf%2B%2B%5D%29while%28d%2EindexOf%28%22%20%22%2Be%2B%22%20%22%29%3E%3D0%29d%3Dd%2Ereplace%28%22%20%22%2Be%2B%22%20%22%2C%22%20%22%29%3Bg%3Da%3Fn%2Etrim%28d%29%3A%22%22%2Cc%2EclassName%21%3D%3Dg%26%26%28c%2EclassName%3Dg%29%7Dreturn%20this%7D%2CtoggleClass%3Afunction%28a%2Cb%29%7Bvar%20c%3Dtypeof%20a%3Breturn%22boolean%22%3D%3Dtypeof%20b%26%26%22string%22%3D%3D%3Dc%3Fb%3Fthis%2EaddClass%28a%29%3Athis%2EremoveClass%28a%29%3Athis%2Eeach%28n%2EisFunction%28a%29%3Ffunction%28c%29%7Bn%28this%29%2EtoggleClass%28a%2Ecall%28this%2Cc%2Cthis%2EclassName%2Cb%29%2Cb%29%7D%3Afunction%28%29%7Bif%28%22string%22%3D%3D%3Dc%29%7Bvar%20b%2Cd%3D0%2Ce%3Dn%28this%29%2Cf%3Da%2Ematch%28E%29%7C%7C%5B%5D%3Bwhile%28b%3Df%5Bd%2B%2B%5D%29e%2EhasClass%28b%29%3Fe%2EremoveClass%28b%29%3Ae%2EaddClass%28b%29%7Delse%28c%3D%3D%3DU%7C%7C%22boolean%22%3D%3D%3Dc%29%26%26%28this%2EclassName%26%26L%2Eset%28this%2C%22%5F%5FclassName%5F%5F%22%2Cthis%2EclassName%29%2Cthis%2EclassName%3Dthis%2EclassName%7C%7Ca%3D%3D%3D%211%3F%22%22%3AL%2Eget%28this%2C%22%5F%5FclassName%5F%5F%22%29%7C%7C%22%22%29%7D%29%7D%2ChasClass%3Afunction%28a%29%7Bfor%28var%20b%3D%22%20%22%2Ba%2B%22%20%22%2Cc%3D0%2Cd%3Dthis%2Elength%3Bd%3Ec%3Bc%2B%2B%29if%281%3D%3D%3Dthis%5Bc%5D%2EnodeType%26%26%28%22%20%22%2Bthis%5Bc%5D%2EclassName%2B%22%20%22%29%2Ereplace%28ac%2C%22%20%22%29%2EindexOf%28b%29%3E%3D0%29return%210%3Breturn%211%7D%7D%29%3Bvar%20bc%3D%2F%5Cr%2Fg%3Bn%2Efn%2Eextend%28%7Bval%3Afunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%3Dthis%5B0%5D%3B%7Bif%28arguments%2Elength%29return%20d%3Dn%2EisFunction%28a%29%2Cthis%2Eeach%28function%28c%29%7Bvar%20e%3B1%3D%3D%3Dthis%2EnodeType%26%26%28e%3Dd%3Fa%2Ecall%28this%2Cc%2Cn%28this%29%2Eval%28%29%29%3Aa%2Cnull%3D%3De%3Fe%3D%22%22%3A%22number%22%3D%3Dtypeof%20e%3Fe%2B%3D%22%22%3An%2EisArray%28e%29%26%26%28e%3Dn%2Emap%28e%2Cfunction%28a%29%7Breturn%20null%3D%3Da%3F%22%22%3Aa%2B%22%22%7D%29%29%2Cb%3Dn%2EvalHooks%5Bthis%2Etype%5D%7C%7Cn%2EvalHooks%5Bthis%2EnodeName%2EtoLowerCase%28%29%5D%2Cb%26%26%22set%22in%20b%26%26void%200%21%3D%3Db%2Eset%28this%2Ce%2C%22value%22%29%7C%7C%28this%2Evalue%3De%29%29%7D%29%3Bif%28e%29return%20b%3Dn%2EvalHooks%5Be%2Etype%5D%7C%7Cn%2EvalHooks%5Be%2EnodeName%2EtoLowerCase%28%29%5D%2Cb%26%26%22get%22in%20b%26%26void%200%21%3D%3D%28c%3Db%2Eget%28e%2C%22value%22%29%29%3Fc%3A%28c%3De%2Evalue%2C%22string%22%3D%3Dtypeof%20c%3Fc%2Ereplace%28bc%2C%22%22%29%3Anull%3D%3Dc%3F%22%22%3Ac%29%7D%7D%7D%29%2Cn%2Eextend%28%7BvalHooks%3A%7Boption%3A%7Bget%3Afunction%28a%29%7Bvar%20b%3Dn%2Efind%2Eattr%28a%2C%22value%22%29%3Breturn%20null%21%3Db%3Fb%3An%2Etrim%28n%2Etext%28a%29%29%7D%7D%2Cselect%3A%7Bget%3Afunction%28a%29%7Bfor%28var%20b%2Cc%2Cd%3Da%2Eoptions%2Ce%3Da%2EselectedIndex%2Cf%3D%22select%2Done%22%3D%3D%3Da%2Etype%7C%7C0%3Ee%2Cg%3Df%3Fnull%3A%5B%5D%2Ch%3Df%3Fe%2B1%3Ad%2Elength%2Ci%3D0%3Ee%3Fh%3Af%3Fe%3A0%3Bh%3Ei%3Bi%2B%2B%29if%28c%3Dd%5Bi%5D%2C%21%28%21c%2Eselected%26%26i%21%3D%3De%7C%7C%28k%2EoptDisabled%3Fc%2Edisabled%3Anull%21%3D%3Dc%2EgetAttribute%28%22disabled%22%29%29%7C%7Cc%2EparentNode%2Edisabled%26%26n%2EnodeName%28c%2EparentNode%2C%22optgroup%22%29%29%29%7Bif%28b%3Dn%28c%29%2Eval%28%29%2Cf%29return%20b%3Bg%2Epush%28b%29%7Dreturn%20g%7D%2Cset%3Afunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%3Da%2Eoptions%2Cf%3Dn%2EmakeArray%28b%29%2Cg%3De%2Elength%3Bwhile%28g%2D%2D%29d%3De%5Bg%5D%2C%28d%2Eselected%3Dn%2EinArray%28d%2Evalue%2Cf%29%3E%3D0%29%26%26%28c%3D%210%29%3Breturn%20c%7C%7C%28a%2EselectedIndex%3D%2D1%29%2Cf%7D%7D%7D%7D%29%2Cn%2Eeach%28%5B%22radio%22%2C%22checkbox%22%5D%2Cfunction%28%29%7Bn%2EvalHooks%5Bthis%5D%3D%7Bset%3Afunction%28a%2Cb%29%7Breturn%20n%2EisArray%28b%29%3Fa%2Echecked%3Dn%2EinArray%28n%28a%29%2Eval%28%29%2Cb%29%3E%3D0%3Avoid%200%7D%7D%2Ck%2EcheckOn%7C%7C%28n%2EvalHooks%5Bthis%5D%2Eget%3Dfunction%28a%29%7Breturn%20null%3D%3D%3Da%2EgetAttribute%28%22value%22%29%3F%22on%22%3Aa%2Evalue%7D%29%7D%29%2Cn%2Eeach%28%22blur%20focus%20focusin%20focusout%20load%20resize%20scroll%20unload%20click%20dblclick%20mousedown%20mouseup%20mousemove%20mouseover%20mouseout%20mouseenter%20mouseleave%20change%20select%20submit%20keydown%20keypress%20keyup%20error%20contextmenu%22%2Esplit%28%22%20%22%29%2Cfunction%28a%2Cb%29%7Bn%2Efn%5Bb%5D%3Dfunction%28a%2Cc%29%7Breturn%20arguments%2Elength%3E0%3Fthis%2Eon%28b%2Cnull%2Ca%2Cc%29%3Athis%2Etrigger%28b%29%7D%7D%29%2Cn%2Efn%2Eextend%28%7Bhover%3Afunction%28a%2Cb%29%7Breturn%20this%2Emouseenter%28a%29%2Emouseleave%28b%7C%7Ca%29%7D%2Cbind%3Afunction%28a%2Cb%2Cc%29%7Breturn%20this%2Eon%28a%2Cnull%2Cb%2Cc%29%7D%2Cunbind%3Afunction%28a%2Cb%29%7Breturn%20this%2Eoff%28a%2Cnull%2Cb%29%7D%2Cdelegate%3Afunction%28a%2Cb%2Cc%2Cd%29%7Breturn%20this%2Eon%28b%2Ca%2Cc%2Cd%29%7D%2Cundelegate%3Afunction%28a%2Cb%2Cc%29%7Breturn%201%3D%3D%3Darguments%2Elength%3Fthis%2Eoff%28a%2C%22%2A%2A%22%29%3Athis%2Eoff%28b%2Ca%7C%7C%22%2A%2A%22%2Cc%29%7D%7D%29%3Bvar%20cc%3Dn%2Enow%28%29%2Cdc%3D%2F%5C%3F%2F%3Bn%2EparseJSON%3Dfunction%28a%29%7Breturn%20JSON%2Eparse%28a%2B%22%22%29%7D%2Cn%2EparseXML%3Dfunction%28a%29%7Bvar%20b%2Cc%3Bif%28%21a%7C%7C%22string%22%21%3Dtypeof%20a%29return%20null%3Btry%7Bc%3Dnew%20DOMParser%2Cb%3Dc%2EparseFromString%28a%2C%22text%2Fxml%22%29%7Dcatch%28d%29%7Bb%3Dvoid%200%7Dreturn%28%21b%7C%7Cb%2EgetElementsByTagName%28%22parsererror%22%29%2Elength%29%26%26n%2Eerror%28%22Invalid%20XML%3A%20%22%2Ba%29%2Cb%7D%3Bvar%20ec%2Cfc%2Cgc%3D%2F%23%2E%2A%24%2F%2Chc%3D%2F%28%5B%3F%26%5D%29%5F%3D%5B%5E%26%5D%2A%2F%2Cic%3D%2F%5E%28%2E%2A%3F%29%3A%5B%20%5Ct%5D%2A%28%5B%5E%5Cr%5Cn%5D%2A%29%24%2Fgm%2Cjc%3D%2F%5E%28%3F%3Aabout%7Capp%7Capp%2Dstorage%7C%2E%2B%2Dextension%7Cfile%7Cres%7Cwidget%29%3A%24%2F%2Ckc%3D%2F%5E%28%3F%3AGET%7CHEAD%29%24%2F%2Clc%3D%2F%5E%5C%2F%5C%2F%2F%2Cmc%3D%2F%5E%28%5B%5Cw%2E%2B%2D%5D%2B%3A%29%28%3F%3A%5C%2F%5C%2F%28%3F%3A%5B%5E%5C%2F%3F%23%5D%2A%40%7C%29%28%5B%5E%5C%2F%3F%23%3A%5D%2A%29%28%3F%3A%3A%28%5Cd%2B%29%7C%29%7C%29%2F%2Cnc%3D%7B%7D%2Coc%3D%7B%7D%2Cpc%3D%22%2A%2F%22%2Econcat%28%22%2A%22%29%3Btry%7Bfc%3Dlocation%2Ehref%7Dcatch%28qc%29%7Bfc%3Dl%2EcreateElement%28%22a%22%29%2Cfc%2Ehref%3D%22%22%2Cfc%3Dfc%2Ehref%7Dec%3Dmc%2Eexec%28fc%2EtoLowerCase%28%29%29%7C%7C%5B%5D%3Bfunction%20rc%28a%29%7Breturn%20function%28b%2Cc%29%7B%22string%22%21%3Dtypeof%20b%26%26%28c%3Db%2Cb%3D%22%2A%22%29%3Bvar%20d%2Ce%3D0%2Cf%3Db%2EtoLowerCase%28%29%2Ematch%28E%29%7C%7C%5B%5D%3Bif%28n%2EisFunction%28c%29%29while%28d%3Df%5Be%2B%2B%5D%29%22%2B%22%3D%3D%3Dd%5B0%5D%3F%28d%3Dd%2Eslice%281%29%7C%7C%22%2A%22%2C%28a%5Bd%5D%3Da%5Bd%5D%7C%7C%5B%5D%29%2Eunshift%28c%29%29%3A%28a%5Bd%5D%3Da%5Bd%5D%7C%7C%5B%5D%29%2Epush%28c%29%7D%7Dfunction%20sc%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3D%7B%7D%2Cf%3Da%3D%3D%3Doc%3Bfunction%20g%28h%29%7Bvar%20i%3Breturn%20e%5Bh%5D%3D%210%2Cn%2Eeach%28a%5Bh%5D%7C%7C%5B%5D%2Cfunction%28a%2Ch%29%7Bvar%20j%3Dh%28b%2Cc%2Cd%29%3Breturn%22string%22%21%3Dtypeof%20j%7C%7Cf%7C%7Ce%5Bj%5D%3Ff%3F%21%28i%3Dj%29%3Avoid%200%3A%28b%2EdataTypes%2Eunshift%28j%29%2Cg%28j%29%2C%211%29%7D%29%2Ci%7Dreturn%20g%28b%2EdataTypes%5B0%5D%29%7C%7C%21e%5B%22%2A%22%5D%26%26g%28%22%2A%22%29%7Dfunction%20tc%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%3Dn%2EajaxSettings%2EflatOptions%7C%7C%7B%7D%3Bfor%28c%20in%20b%29void%200%21%3D%3Db%5Bc%5D%26%26%28%28e%5Bc%5D%3Fa%3Ad%7C%7C%28d%3D%7B%7D%29%29%5Bc%5D%3Db%5Bc%5D%29%3Breturn%20d%26%26n%2Eextend%28%210%2Ca%2Cd%29%2Ca%7Dfunction%20uc%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%2Ch%3Da%2Econtents%2Ci%3Da%2EdataTypes%3Bwhile%28%22%2A%22%3D%3D%3Di%5B0%5D%29i%2Eshift%28%29%2Cvoid%200%3D%3D%3Dd%26%26%28d%3Da%2EmimeType%7C%7Cb%2EgetResponseHeader%28%22Content%2DType%22%29%29%3Bif%28d%29for%28e%20in%20h%29if%28h%5Be%5D%26%26h%5Be%5D%2Etest%28d%29%29%7Bi%2Eunshift%28e%29%3Bbreak%7Dif%28i%5B0%5Din%20c%29f%3Di%5B0%5D%3Belse%7Bfor%28e%20in%20c%29%7Bif%28%21i%5B0%5D%7C%7Ca%2Econverters%5Be%2B%22%20%22%2Bi%5B0%5D%5D%29%7Bf%3De%3Bbreak%7Dg%7C%7C%28g%3De%29%7Df%3Df%7C%7Cg%7Dreturn%20f%3F%28f%21%3D%3Di%5B0%5D%26%26i%2Eunshift%28f%29%2Cc%5Bf%5D%29%3Avoid%200%7Dfunction%20vc%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%2Cf%2Cg%2Ch%2Ci%2Cj%3D%7B%7D%2Ck%3Da%2EdataTypes%2Eslice%28%29%3Bif%28k%5B1%5D%29for%28g%20in%20a%2Econverters%29j%5Bg%2EtoLowerCase%28%29%5D%3Da%2Econverters%5Bg%5D%3Bf%3Dk%2Eshift%28%29%3Bwhile%28f%29if%28a%2EresponseFields%5Bf%5D%26%26%28c%5Ba%2EresponseFields%5Bf%5D%5D%3Db%29%2C%21i%26%26d%26%26a%2EdataFilter%26%26%28b%3Da%2EdataFilter%28b%2Ca%2EdataType%29%29%2Ci%3Df%2Cf%3Dk%2Eshift%28%29%29if%28%22%2A%22%3D%3D%3Df%29f%3Di%3Belse%20if%28%22%2A%22%21%3D%3Di%26%26i%21%3D%3Df%29%7Bif%28g%3Dj%5Bi%2B%22%20%22%2Bf%5D%7C%7Cj%5B%22%2A%20%22%2Bf%5D%2C%21g%29for%28e%20in%20j%29if%28h%3De%2Esplit%28%22%20%22%29%2Ch%5B1%5D%3D%3D%3Df%26%26%28g%3Dj%5Bi%2B%22%20%22%2Bh%5B0%5D%5D%7C%7Cj%5B%22%2A%20%22%2Bh%5B0%5D%5D%29%29%7Bg%3D%3D%3D%210%3Fg%3Dj%5Be%5D%3Aj%5Be%5D%21%3D%3D%210%26%26%28f%3Dh%5B0%5D%2Ck%2Eunshift%28h%5B1%5D%29%29%3Bbreak%7Dif%28g%21%3D%3D%210%29if%28g%26%26a%5B%22throws%22%5D%29b%3Dg%28b%29%3Belse%20try%7Bb%3Dg%28b%29%7Dcatch%28l%29%7Breturn%7Bstate%3A%22parsererror%22%2Cerror%3Ag%3Fl%3A%22No%20conversion%20from%20%22%2Bi%2B%22%20to%20%22%2Bf%7D%7D%7Dreturn%7Bstate%3A%22success%22%2Cdata%3Ab%7D%7Dn%2Eextend%28%7Bactive%3A0%2ClastModified%3A%7B%7D%2Cetag%3A%7B%7D%2CajaxSettings%3A%7Burl%3Afc%2Ctype%3A%22GET%22%2CisLocal%3Ajc%2Etest%28ec%5B1%5D%29%2Cglobal%3A%210%2CprocessData%3A%210%2Casync%3A%210%2CcontentType%3A%22application%2Fx%2Dwww%2Dform%2Durlencoded%3B%20charset%3DUTF%2D8%22%2Caccepts%3A%7B%22%2A%22%3Apc%2Ctext%3A%22text%2Fplain%22%2Chtml%3A%22text%2Fhtml%22%2Cxml%3A%22application%2Fxml%2C%20text%2Fxml%22%2Cjson%3A%22application%2Fjson%2C%20text%2Fjavascript%22%7D%2Ccontents%3A%7Bxml%3A%2Fxml%2F%2Chtml%3A%2Fhtml%2F%2Cjson%3A%2Fjson%2F%7D%2CresponseFields%3A%7Bxml%3A%22responseXML%22%2Ctext%3A%22responseText%22%2Cjson%3A%22responseJSON%22%7D%2Cconverters%3A%7B%22%2A%20text%22%3AString%2C%22text%20html%22%3A%210%2C%22text%20json%22%3An%2EparseJSON%2C%22text%20xml%22%3An%2EparseXML%7D%2CflatOptions%3A%7Burl%3A%210%2Ccontext%3A%210%7D%7D%2CajaxSetup%3Afunction%28a%2Cb%29%7Breturn%20b%3Ftc%28tc%28a%2Cn%2EajaxSettings%29%2Cb%29%3Atc%28n%2EajaxSettings%2Ca%29%7D%2CajaxPrefilter%3Arc%28nc%29%2CajaxTransport%3Arc%28oc%29%2Cajax%3Afunction%28a%2Cb%29%7B%22object%22%3D%3Dtypeof%20a%26%26%28b%3Da%2Ca%3Dvoid%200%29%2Cb%3Db%7C%7C%7B%7D%3Bvar%20c%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%3Dn%2EajaxSetup%28%7B%7D%2Cb%29%2Cl%3Dk%2Econtext%7C%7Ck%2Cm%3Dk%2Econtext%26%26%28l%2EnodeType%7C%7Cl%2Ejquery%29%3Fn%28l%29%3An%2Eevent%2Co%3Dn%2EDeferred%28%29%2Cp%3Dn%2ECallbacks%28%22once%20memory%22%29%2Cq%3Dk%2EstatusCode%7C%7C%7B%7D%2Cr%3D%7B%7D%2Cs%3D%7B%7D%2Ct%3D0%2Cu%3D%22canceled%22%2Cv%3D%7BreadyState%3A0%2CgetResponseHeader%3Afunction%28a%29%7Bvar%20b%3Bif%282%3D%3D%3Dt%29%7Bif%28%21f%29%7Bf%3D%7B%7D%3Bwhile%28b%3Dic%2Eexec%28e%29%29f%5Bb%5B1%5D%2EtoLowerCase%28%29%5D%3Db%5B2%5D%7Db%3Df%5Ba%2EtoLowerCase%28%29%5D%7Dreturn%20null%3D%3Db%3Fnull%3Ab%7D%2CgetAllResponseHeaders%3Afunction%28%29%7Breturn%202%3D%3D%3Dt%3Fe%3Anull%7D%2CsetRequestHeader%3Afunction%28a%2Cb%29%7Bvar%20c%3Da%2EtoLowerCase%28%29%3Breturn%20t%7C%7C%28a%3Ds%5Bc%5D%3Ds%5Bc%5D%7C%7Ca%2Cr%5Ba%5D%3Db%29%2Cthis%7D%2CoverrideMimeType%3Afunction%28a%29%7Breturn%20t%7C%7C%28k%2EmimeType%3Da%29%2Cthis%7D%2CstatusCode%3Afunction%28a%29%7Bvar%20b%3Bif%28a%29if%282%3Et%29for%28b%20in%20a%29q%5Bb%5D%3D%5Bq%5Bb%5D%2Ca%5Bb%5D%5D%3Belse%20v%2Ealways%28a%5Bv%2Estatus%5D%29%3Breturn%20this%7D%2Cabort%3Afunction%28a%29%7Bvar%20b%3Da%7C%7Cu%3Breturn%20c%26%26c%2Eabort%28b%29%2Cx%280%2Cb%29%2Cthis%7D%7D%3Bif%28o%2Epromise%28v%29%2Ecomplete%3Dp%2Eadd%2Cv%2Esuccess%3Dv%2Edone%2Cv%2Eerror%3Dv%2Efail%2Ck%2Eurl%3D%28%28a%7C%7Ck%2Eurl%7C%7Cfc%29%2B%22%22%29%2Ereplace%28gc%2C%22%22%29%2Ereplace%28lc%2Cec%5B1%5D%2B%22%2F%2F%22%29%2Ck%2Etype%3Db%2Emethod%7C%7Cb%2Etype%7C%7Ck%2Emethod%7C%7Ck%2Etype%2Ck%2EdataTypes%3Dn%2Etrim%28k%2EdataType%7C%7C%22%2A%22%29%2EtoLowerCase%28%29%2Ematch%28E%29%7C%7C%5B%22%22%5D%2Cnull%3D%3Dk%2EcrossDomain%26%26%28h%3Dmc%2Eexec%28k%2Eurl%2EtoLowerCase%28%29%29%2Ck%2EcrossDomain%3D%21%28%21h%7C%7Ch%5B1%5D%3D%3D%3Dec%5B1%5D%26%26h%5B2%5D%3D%3D%3Dec%5B2%5D%26%26%28h%5B3%5D%7C%7C%28%22http%3A%22%3D%3D%3Dh%5B1%5D%3F%2280%22%3A%22443%22%29%29%3D%3D%3D%28ec%5B3%5D%7C%7C%28%22http%3A%22%3D%3D%3Dec%5B1%5D%3F%2280%22%3A%22443%22%29%29%29%29%2Ck%2Edata%26%26k%2EprocessData%26%26%22string%22%21%3Dtypeof%20k%2Edata%26%26%28k%2Edata%3Dn%2Eparam%28k%2Edata%2Ck%2Etraditional%29%29%2Csc%28nc%2Ck%2Cb%2Cv%29%2C2%3D%3D%3Dt%29return%20v%3Bi%3Dk%2Eglobal%2Ci%26%260%3D%3D%3Dn%2Eactive%2B%2B%26%26n%2Eevent%2Etrigger%28%22ajaxStart%22%29%2Ck%2Etype%3Dk%2Etype%2EtoUpperCase%28%29%2Ck%2EhasContent%3D%21kc%2Etest%28k%2Etype%29%2Cd%3Dk%2Eurl%2Ck%2EhasContent%7C%7C%28k%2Edata%26%26%28d%3Dk%2Eurl%2B%3D%28dc%2Etest%28d%29%3F%22%26%22%3A%22%3F%22%29%2Bk%2Edata%2Cdelete%20k%2Edata%29%2Ck%2Ecache%3D%3D%3D%211%26%26%28k%2Eurl%3Dhc%2Etest%28d%29%3Fd%2Ereplace%28hc%2C%22%241%5F%3D%22%2Bcc%2B%2B%29%3Ad%2B%28dc%2Etest%28d%29%3F%22%26%22%3A%22%3F%22%29%2B%22%5F%3D%22%2Bcc%2B%2B%29%29%2Ck%2EifModified%26%26%28n%2ElastModified%5Bd%5D%26%26v%2EsetRequestHeader%28%22If%2DModified%2DSince%22%2Cn%2ElastModified%5Bd%5D%29%2Cn%2Eetag%5Bd%5D%26%26v%2EsetRequestHeader%28%22If%2DNone%2DMatch%22%2Cn%2Eetag%5Bd%5D%29%29%2C%28k%2Edata%26%26k%2EhasContent%26%26k%2EcontentType%21%3D%3D%211%7C%7Cb%2EcontentType%29%26%26v%2EsetRequestHeader%28%22Content%2DType%22%2Ck%2EcontentType%29%2Cv%2EsetRequestHeader%28%22Accept%22%2Ck%2EdataTypes%5B0%5D%26%26k%2Eaccepts%5Bk%2EdataTypes%5B0%5D%5D%3Fk%2Eaccepts%5Bk%2EdataTypes%5B0%5D%5D%2B%28%22%2A%22%21%3D%3Dk%2EdataTypes%5B0%5D%3F%22%2C%20%22%2Bpc%2B%22%3B%20q%3D0%2E01%22%3A%22%22%29%3Ak%2Eaccepts%5B%22%2A%22%5D%29%3Bfor%28j%20in%20k%2Eheaders%29v%2EsetRequestHeader%28j%2Ck%2Eheaders%5Bj%5D%29%3Bif%28k%2EbeforeSend%26%26%28k%2EbeforeSend%2Ecall%28l%2Cv%2Ck%29%3D%3D%3D%211%7C%7C2%3D%3D%3Dt%29%29return%20v%2Eabort%28%29%3Bu%3D%22abort%22%3Bfor%28j%20in%7Bsuccess%3A1%2Cerror%3A1%2Ccomplete%3A1%7D%29v%5Bj%5D%28k%5Bj%5D%29%3Bif%28c%3Dsc%28oc%2Ck%2Cb%2Cv%29%29%7Bv%2EreadyState%3D1%2Ci%26%26m%2Etrigger%28%22ajaxSend%22%2C%5Bv%2Ck%5D%29%2Ck%2Easync%26%26k%2Etimeout%3E0%26%26%28g%3DsetTimeout%28function%28%29%7Bv%2Eabort%28%22timeout%22%29%7D%2Ck%2Etimeout%29%29%3Btry%7Bt%3D1%2Cc%2Esend%28r%2Cx%29%7Dcatch%28w%29%7Bif%28%21%282%3Et%29%29throw%20w%3Bx%28%2D1%2Cw%29%7D%7Delse%20x%28%2D1%2C%22No%20Transport%22%29%3Bfunction%20x%28a%2Cb%2Cf%2Ch%29%7Bvar%20j%2Cr%2Cs%2Cu%2Cw%2Cx%3Db%3B2%21%3D%3Dt%26%26%28t%3D2%2Cg%26%26clearTimeout%28g%29%2Cc%3Dvoid%200%2Ce%3Dh%7C%7C%22%22%2Cv%2EreadyState%3Da%3E0%3F4%3A0%2Cj%3Da%3E%3D200%26%26300%3Ea%7C%7C304%3D%3D%3Da%2Cf%26%26%28u%3Duc%28k%2Cv%2Cf%29%29%2Cu%3Dvc%28k%2Cu%2Cv%2Cj%29%2Cj%3F%28k%2EifModified%26%26%28w%3Dv%2EgetResponseHeader%28%22Last%2DModified%22%29%2Cw%26%26%28n%2ElastModified%5Bd%5D%3Dw%29%2Cw%3Dv%2EgetResponseHeader%28%22etag%22%29%2Cw%26%26%28n%2Eetag%5Bd%5D%3Dw%29%29%2C204%3D%3D%3Da%7C%7C%22HEAD%22%3D%3D%3Dk%2Etype%3Fx%3D%22nocontent%22%3A304%3D%3D%3Da%3Fx%3D%22notmodified%22%3A%28x%3Du%2Estate%2Cr%3Du%2Edata%2Cs%3Du%2Eerror%2Cj%3D%21s%29%29%3A%28s%3Dx%2C%28a%7C%7C%21x%29%26%26%28x%3D%22error%22%2C0%3Ea%26%26%28a%3D0%29%29%29%2Cv%2Estatus%3Da%2Cv%2EstatusText%3D%28b%7C%7Cx%29%2B%22%22%2Cj%3Fo%2EresolveWith%28l%2C%5Br%2Cx%2Cv%5D%29%3Ao%2ErejectWith%28l%2C%5Bv%2Cx%2Cs%5D%29%2Cv%2EstatusCode%28q%29%2Cq%3Dvoid%200%2Ci%26%26m%2Etrigger%28j%3F%22ajaxSuccess%22%3A%22ajaxError%22%2C%5Bv%2Ck%2Cj%3Fr%3As%5D%29%2Cp%2EfireWith%28l%2C%5Bv%2Cx%5D%29%2Ci%26%26%28m%2Etrigger%28%22ajaxComplete%22%2C%5Bv%2Ck%5D%29%2C%2D%2Dn%2Eactive%7C%7Cn%2Eevent%2Etrigger%28%22ajaxStop%22%29%29%29%7Dreturn%20v%7D%2CgetJSON%3Afunction%28a%2Cb%2Cc%29%7Breturn%20n%2Eget%28a%2Cb%2Cc%2C%22json%22%29%7D%2CgetScript%3Afunction%28a%2Cb%29%7Breturn%20n%2Eget%28a%2Cvoid%200%2Cb%2C%22script%22%29%7D%7D%29%2Cn%2Eeach%28%5B%22get%22%2C%22post%22%5D%2Cfunction%28a%2Cb%29%7Bn%5Bb%5D%3Dfunction%28a%2Cc%2Cd%2Ce%29%7Breturn%20n%2EisFunction%28c%29%26%26%28e%3De%7C%7Cd%2Cd%3Dc%2Cc%3Dvoid%200%29%2Cn%2Eajax%28%7Burl%3Aa%2Ctype%3Ab%2CdataType%3Ae%2Cdata%3Ac%2Csuccess%3Ad%7D%29%7D%7D%29%2Cn%2Eeach%28%5B%22ajaxStart%22%2C%22ajaxStop%22%2C%22ajaxComplete%22%2C%22ajaxError%22%2C%22ajaxSuccess%22%2C%22ajaxSend%22%5D%2Cfunction%28a%2Cb%29%7Bn%2Efn%5Bb%5D%3Dfunction%28a%29%7Breturn%20this%2Eon%28b%2Ca%29%7D%7D%29%2Cn%2E%5FevalUrl%3Dfunction%28a%29%7Breturn%20n%2Eajax%28%7Burl%3Aa%2Ctype%3A%22GET%22%2CdataType%3A%22script%22%2Casync%3A%211%2Cglobal%3A%211%2C%22throws%22%3A%210%7D%29%7D%2Cn%2Efn%2Eextend%28%7BwrapAll%3Afunction%28a%29%7Bvar%20b%3Breturn%20n%2EisFunction%28a%29%3Fthis%2Eeach%28function%28b%29%7Bn%28this%29%2EwrapAll%28a%2Ecall%28this%2Cb%29%29%7D%29%3A%28this%5B0%5D%26%26%28b%3Dn%28a%2Cthis%5B0%5D%2EownerDocument%29%2Eeq%280%29%2Eclone%28%210%29%2Cthis%5B0%5D%2EparentNode%26%26b%2EinsertBefore%28this%5B0%5D%29%2Cb%2Emap%28function%28%29%7Bvar%20a%3Dthis%3Bwhile%28a%2EfirstElementChild%29a%3Da%2EfirstElementChild%3Breturn%20a%7D%29%2Eappend%28this%29%29%2Cthis%29%7D%2CwrapInner%3Afunction%28a%29%7Breturn%20this%2Eeach%28n%2EisFunction%28a%29%3Ffunction%28b%29%7Bn%28this%29%2EwrapInner%28a%2Ecall%28this%2Cb%29%29%7D%3Afunction%28%29%7Bvar%20b%3Dn%28this%29%2Cc%3Db%2Econtents%28%29%3Bc%2Elength%3Fc%2EwrapAll%28a%29%3Ab%2Eappend%28a%29%7D%29%7D%2Cwrap%3Afunction%28a%29%7Bvar%20b%3Dn%2EisFunction%28a%29%3Breturn%20this%2Eeach%28function%28c%29%7Bn%28this%29%2EwrapAll%28b%3Fa%2Ecall%28this%2Cc%29%3Aa%29%7D%29%7D%2Cunwrap%3Afunction%28%29%7Breturn%20this%2Eparent%28%29%2Eeach%28function%28%29%7Bn%2EnodeName%28this%2C%22body%22%29%7C%7Cn%28this%29%2EreplaceWith%28this%2EchildNodes%29%7D%29%2Eend%28%29%7D%7D%29%2Cn%2Eexpr%2Efilters%2Ehidden%3Dfunction%28a%29%7Breturn%20a%2EoffsetWidth%3C%3D0%26%26a%2EoffsetHeight%3C%3D0%7D%2Cn%2Eexpr%2Efilters%2Evisible%3Dfunction%28a%29%7Breturn%21n%2Eexpr%2Efilters%2Ehidden%28a%29%7D%3Bvar%20wc%3D%2F%2520%2Fg%2Cxc%3D%2F%5C%5B%5C%5D%24%2F%2Cyc%3D%2F%5Cr%3F%5Cn%2Fg%2Czc%3D%2F%5E%28%3F%3Asubmit%7Cbutton%7Cimage%7Creset%7Cfile%29%24%2Fi%2CAc%3D%2F%5E%28%3F%3Ainput%7Cselect%7Ctextarea%7Ckeygen%29%2Fi%3Bfunction%20Bc%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3Bif%28n%2EisArray%28b%29%29n%2Eeach%28b%2Cfunction%28b%2Ce%29%7Bc%7C%7Cxc%2Etest%28a%29%3Fd%28a%2Ce%29%3ABc%28a%2B%22%5B%22%2B%28%22object%22%3D%3Dtypeof%20e%3Fb%3A%22%22%29%2B%22%5D%22%2Ce%2Cc%2Cd%29%7D%29%3Belse%20if%28c%7C%7C%22object%22%21%3D%3Dn%2Etype%28b%29%29d%28a%2Cb%29%3Belse%20for%28e%20in%20b%29Bc%28a%2B%22%5B%22%2Be%2B%22%5D%22%2Cb%5Be%5D%2Cc%2Cd%29%7Dn%2Eparam%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%3D%5B%5D%2Ce%3Dfunction%28a%2Cb%29%7Bb%3Dn%2EisFunction%28b%29%3Fb%28%29%3Anull%3D%3Db%3F%22%22%3Ab%2Cd%5Bd%2Elength%5D%3DencodeURIComponent%28a%29%2B%22%3D%22%2BencodeURIComponent%28b%29%7D%3Bif%28void%200%3D%3D%3Db%26%26%28b%3Dn%2EajaxSettings%26%26n%2EajaxSettings%2Etraditional%29%2Cn%2EisArray%28a%29%7C%7Ca%2Ejquery%26%26%21n%2EisPlainObject%28a%29%29n%2Eeach%28a%2Cfunction%28%29%7Be%28this%2Ename%2Cthis%2Evalue%29%7D%29%3Belse%20for%28c%20in%20a%29Bc%28c%2Ca%5Bc%5D%2Cb%2Ce%29%3Breturn%20d%2Ejoin%28%22%26%22%29%2Ereplace%28wc%2C%22%2B%22%29%7D%2Cn%2Efn%2Eextend%28%7Bserialize%3Afunction%28%29%7Breturn%20n%2Eparam%28this%2EserializeArray%28%29%29%7D%2CserializeArray%3Afunction%28%29%7Breturn%20this%2Emap%28function%28%29%7Bvar%20a%3Dn%2Eprop%28this%2C%22elements%22%29%3Breturn%20a%3Fn%2EmakeArray%28a%29%3Athis%7D%29%2Efilter%28function%28%29%7Bvar%20a%3Dthis%2Etype%3Breturn%20this%2Ename%26%26%21n%28this%29%2Eis%28%22%3Adisabled%22%29%26%26Ac%2Etest%28this%2EnodeName%29%26%26%21zc%2Etest%28a%29%26%26%28this%2Echecked%7C%7C%21T%2Etest%28a%29%29%7D%29%2Emap%28function%28a%2Cb%29%7Bvar%20c%3Dn%28this%29%2Eval%28%29%3Breturn%20null%3D%3Dc%3Fnull%3An%2EisArray%28c%29%3Fn%2Emap%28c%2Cfunction%28a%29%7Breturn%7Bname%3Ab%2Ename%2Cvalue%3Aa%2Ereplace%28yc%2C%22%5Cr%5Cn%22%29%7D%7D%29%3A%7Bname%3Ab%2Ename%2Cvalue%3Ac%2Ereplace%28yc%2C%22%5Cr%5Cn%22%29%7D%7D%29%2Eget%28%29%7D%7D%29%2Cn%2EajaxSettings%2Exhr%3Dfunction%28%29%7Btry%7Breturn%20new%20XMLHttpRequest%7Dcatch%28a%29%7B%7D%7D%3Bvar%20Cc%3D0%2CDc%3D%7B%7D%2CEc%3D%7B0%3A200%2C1223%3A204%7D%2CFc%3Dn%2EajaxSettings%2Exhr%28%29%3Ba%2EActiveXObject%26%26n%28a%29%2Eon%28%22unload%22%2Cfunction%28%29%7Bfor%28var%20a%20in%20Dc%29Dc%5Ba%5D%28%29%7D%29%2Ck%2Ecors%3D%21%21Fc%26%26%22withCredentials%22in%20Fc%2Ck%2Eajax%3DFc%3D%21%21Fc%2Cn%2EajaxTransport%28function%28a%29%7Bvar%20b%3Breturn%20k%2Ecors%7C%7CFc%26%26%21a%2EcrossDomain%3F%7Bsend%3Afunction%28c%2Cd%29%7Bvar%20e%2Cf%3Da%2Exhr%28%29%2Cg%3D%2B%2BCc%3Bif%28f%2Eopen%28a%2Etype%2Ca%2Eurl%2Ca%2Easync%2Ca%2Eusername%2Ca%2Epassword%29%2Ca%2ExhrFields%29for%28e%20in%20a%2ExhrFields%29f%5Be%5D%3Da%2ExhrFields%5Be%5D%3Ba%2EmimeType%26%26f%2EoverrideMimeType%26%26f%2EoverrideMimeType%28a%2EmimeType%29%2Ca%2EcrossDomain%7C%7Cc%5B%22X%2DRequested%2DWith%22%5D%7C%7C%28c%5B%22X%2DRequested%2DWith%22%5D%3D%22XMLHttpRequest%22%29%3Bfor%28e%20in%20c%29f%2EsetRequestHeader%28e%2Cc%5Be%5D%29%3Bb%3Dfunction%28a%29%7Breturn%20function%28%29%7Bb%26%26%28delete%20Dc%5Bg%5D%2Cb%3Df%2Eonload%3Df%2Eonerror%3Dnull%2C%22abort%22%3D%3D%3Da%3Ff%2Eabort%28%29%3A%22error%22%3D%3D%3Da%3Fd%28f%2Estatus%2Cf%2EstatusText%29%3Ad%28Ec%5Bf%2Estatus%5D%7C%7Cf%2Estatus%2Cf%2EstatusText%2C%22string%22%3D%3Dtypeof%20f%2EresponseText%3F%7Btext%3Af%2EresponseText%7D%3Avoid%200%2Cf%2EgetAllResponseHeaders%28%29%29%29%7D%7D%2Cf%2Eonload%3Db%28%29%2Cf%2Eonerror%3Db%28%22error%22%29%2Cb%3DDc%5Bg%5D%3Db%28%22abort%22%29%3Btry%7Bf%2Esend%28a%2EhasContent%26%26a%2Edata%7C%7Cnull%29%7Dcatch%28h%29%7Bif%28b%29throw%20h%7D%7D%2Cabort%3Afunction%28%29%7Bb%26%26b%28%29%7D%7D%3Avoid%200%7D%29%2Cn%2EajaxSetup%28%7Baccepts%3A%7Bscript%3A%22text%2Fjavascript%2C%20application%2Fjavascript%2C%20application%2Fecmascript%2C%20application%2Fx%2Decmascript%22%7D%2Ccontents%3A%7Bscript%3A%2F%28%3F%3Ajava%7Cecma%29script%2F%7D%2Cconverters%3A%7B%22text%20script%22%3Afunction%28a%29%7Breturn%20n%2EglobalEval%28a%29%2Ca%7D%7D%7D%29%2Cn%2EajaxPrefilter%28%22script%22%2Cfunction%28a%29%7Bvoid%200%3D%3D%3Da%2Ecache%26%26%28a%2Ecache%3D%211%29%2Ca%2EcrossDomain%26%26%28a%2Etype%3D%22GET%22%29%7D%29%2Cn%2EajaxTransport%28%22script%22%2Cfunction%28a%29%7Bif%28a%2EcrossDomain%29%7Bvar%20b%2Cc%3Breturn%7Bsend%3Afunction%28d%2Ce%29%7Bb%3Dn%28%22%3Cscript%3E%22%29%2Eprop%28%7Basync%3A%210%2Ccharset%3Aa%2EscriptCharset%2Csrc%3Aa%2Eurl%7D%29%2Eon%28%22load%20error%22%2Cc%3Dfunction%28a%29%7Bb%2Eremove%28%29%2Cc%3Dnull%2Ca%26%26e%28%22error%22%3D%3D%3Da%2Etype%3F404%3A200%2Ca%2Etype%29%7D%29%2Cl%2Ehead%2EappendChild%28b%5B0%5D%29%7D%2Cabort%3Afunction%28%29%7Bc%26%26c%28%29%7D%7D%7D%7D%29%3Bvar%20Gc%3D%5B%5D%2CHc%3D%2F%28%3D%29%5C%3F%28%3F%3D%26%7C%24%29%7C%5C%3F%5C%3F%2F%3Bn%2EajaxSetup%28%7Bjsonp%3A%22callback%22%2CjsonpCallback%3Afunction%28%29%7Bvar%20a%3DGc%2Epop%28%29%7C%7Cn%2Eexpando%2B%22%5F%22%2Bcc%2B%2B%3Breturn%20this%5Ba%5D%3D%210%2Ca%7D%7D%29%2Cn%2EajaxPrefilter%28%22json%20jsonp%22%2Cfunction%28b%2Cc%2Cd%29%7Bvar%20e%2Cf%2Cg%2Ch%3Db%2Ejsonp%21%3D%3D%211%26%26%28Hc%2Etest%28b%2Eurl%29%3F%22url%22%3A%22string%22%3D%3Dtypeof%20b%2Edata%26%26%21%28b%2EcontentType%7C%7C%22%22%29%2EindexOf%28%22application%2Fx%2Dwww%2Dform%2Durlencoded%22%29%26%26Hc%2Etest%28b%2Edata%29%26%26%22data%22%29%3Breturn%20h%7C%7C%22jsonp%22%3D%3D%3Db%2EdataTypes%5B0%5D%3F%28e%3Db%2EjsonpCallback%3Dn%2EisFunction%28b%2EjsonpCallback%29%3Fb%2EjsonpCallback%28%29%3Ab%2EjsonpCallback%2Ch%3Fb%5Bh%5D%3Db%5Bh%5D%2Ereplace%28Hc%2C%22%241%22%2Be%29%3Ab%2Ejsonp%21%3D%3D%211%26%26%28b%2Eurl%2B%3D%28dc%2Etest%28b%2Eurl%29%3F%22%26%22%3A%22%3F%22%29%2Bb%2Ejsonp%2B%22%3D%22%2Be%29%2Cb%2Econverters%5B%22script%20json%22%5D%3Dfunction%28%29%7Breturn%20g%7C%7Cn%2Eerror%28e%2B%22%20was%20not%20called%22%29%2Cg%5B0%5D%7D%2Cb%2EdataTypes%5B0%5D%3D%22json%22%2Cf%3Da%5Be%5D%2Ca%5Be%5D%3Dfunction%28%29%7Bg%3Darguments%7D%2Cd%2Ealways%28function%28%29%7Ba%5Be%5D%3Df%2Cb%5Be%5D%26%26%28b%2EjsonpCallback%3Dc%2EjsonpCallback%2CGc%2Epush%28e%29%29%2Cg%26%26n%2EisFunction%28f%29%26%26f%28g%5B0%5D%29%2Cg%3Df%3Dvoid%200%7D%29%2C%22script%22%29%3Avoid%200%7D%29%2Cn%2EparseHTML%3Dfunction%28a%2Cb%2Cc%29%7Bif%28%21a%7C%7C%22string%22%21%3Dtypeof%20a%29return%20null%3B%22boolean%22%3D%3Dtypeof%20b%26%26%28c%3Db%2Cb%3D%211%29%2Cb%3Db%7C%7Cl%3Bvar%20d%3Dv%2Eexec%28a%29%2Ce%3D%21c%26%26%5B%5D%3Breturn%20d%3F%5Bb%2EcreateElement%28d%5B1%5D%29%5D%3A%28d%3Dn%2EbuildFragment%28%5Ba%5D%2Cb%2Ce%29%2Ce%26%26e%2Elength%26%26n%28e%29%2Eremove%28%29%2Cn%2Emerge%28%5B%5D%2Cd%2EchildNodes%29%29%7D%3Bvar%20Ic%3Dn%2Efn%2Eload%3Bn%2Efn%2Eload%3Dfunction%28a%2Cb%2Cc%29%7Bif%28%22string%22%21%3Dtypeof%20a%26%26Ic%29return%20Ic%2Eapply%28this%2Carguments%29%3Bvar%20d%2Ce%2Cf%2Cg%3Dthis%2Ch%3Da%2EindexOf%28%22%20%22%29%3Breturn%20h%3E%3D0%26%26%28d%3Dn%2Etrim%28a%2Eslice%28h%29%29%2Ca%3Da%2Eslice%280%2Ch%29%29%2Cn%2EisFunction%28b%29%3F%28c%3Db%2Cb%3Dvoid%200%29%3Ab%26%26%22object%22%3D%3Dtypeof%20b%26%26%28e%3D%22POST%22%29%2Cg%2Elength%3E0%26%26n%2Eajax%28%7Burl%3Aa%2Ctype%3Ae%2CdataType%3A%22html%22%2Cdata%3Ab%7D%29%2Edone%28function%28a%29%7Bf%3Darguments%2Cg%2Ehtml%28d%3Fn%28%22%3Cdiv%3E%22%29%2Eappend%28n%2EparseHTML%28a%29%29%2Efind%28d%29%3Aa%29%7D%29%2Ecomplete%28c%26%26function%28a%2Cb%29%7Bg%2Eeach%28c%2Cf%7C%7C%5Ba%2EresponseText%2Cb%2Ca%5D%29%7D%29%2Cthis%7D%2Cn%2Eexpr%2Efilters%2Eanimated%3Dfunction%28a%29%7Breturn%20n%2Egrep%28n%2Etimers%2Cfunction%28b%29%7Breturn%20a%3D%3D%3Db%2Eelem%7D%29%2Elength%7D%3Bvar%20Jc%3Da%2Edocument%2EdocumentElement%3Bfunction%20Kc%28a%29%7Breturn%20n%2EisWindow%28a%29%3Fa%3A9%3D%3D%3Da%2EnodeType%26%26a%2EdefaultView%7Dn%2Eoffset%3D%7BsetOffset%3Afunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%3Dn%2Ecss%28a%2C%22position%22%29%2Cl%3Dn%28a%29%2Cm%3D%7B%7D%3B%22static%22%3D%3D%3Dk%26%26%28a%2Estyle%2Eposition%3D%22relative%22%29%2Ch%3Dl%2Eoffset%28%29%2Cf%3Dn%2Ecss%28a%2C%22top%22%29%2Ci%3Dn%2Ecss%28a%2C%22left%22%29%2Cj%3D%28%22absolute%22%3D%3D%3Dk%7C%7C%22fixed%22%3D%3D%3Dk%29%26%26%28f%2Bi%29%2EindexOf%28%22auto%22%29%3E%2D1%2Cj%3F%28d%3Dl%2Eposition%28%29%2Cg%3Dd%2Etop%2Ce%3Dd%2Eleft%29%3A%28g%3DparseFloat%28f%29%7C%7C0%2Ce%3DparseFloat%28i%29%7C%7C0%29%2Cn%2EisFunction%28b%29%26%26%28b%3Db%2Ecall%28a%2Cc%2Ch%29%29%2Cnull%21%3Db%2Etop%26%26%28m%2Etop%3Db%2Etop%2Dh%2Etop%2Bg%29%2Cnull%21%3Db%2Eleft%26%26%28m%2Eleft%3Db%2Eleft%2Dh%2Eleft%2Be%29%2C%22using%22in%20b%3Fb%2Eusing%2Ecall%28a%2Cm%29%3Al%2Ecss%28m%29%7D%7D%2Cn%2Efn%2Eextend%28%7Boffset%3Afunction%28a%29%7Bif%28arguments%2Elength%29return%20void%200%3D%3D%3Da%3Fthis%3Athis%2Eeach%28function%28b%29%7Bn%2Eoffset%2EsetOffset%28this%2Ca%2Cb%29%7D%29%3Bvar%20b%2Cc%2Cd%3Dthis%5B0%5D%2Ce%3D%7Btop%3A0%2Cleft%3A0%7D%2Cf%3Dd%26%26d%2EownerDocument%3Bif%28f%29return%20b%3Df%2EdocumentElement%2Cn%2Econtains%28b%2Cd%29%3F%28typeof%20d%2EgetBoundingClientRect%21%3D%3DU%26%26%28e%3Dd%2EgetBoundingClientRect%28%29%29%2Cc%3DKc%28f%29%2C%7Btop%3Ae%2Etop%2Bc%2EpageYOffset%2Db%2EclientTop%2Cleft%3Ae%2Eleft%2Bc%2EpageXOffset%2Db%2EclientLeft%7D%29%3Ae%7D%2Cposition%3Afunction%28%29%7Bif%28this%5B0%5D%29%7Bvar%20a%2Cb%2Cc%3Dthis%5B0%5D%2Cd%3D%7Btop%3A0%2Cleft%3A0%7D%3Breturn%22fixed%22%3D%3D%3Dn%2Ecss%28c%2C%22position%22%29%3Fb%3Dc%2EgetBoundingClientRect%28%29%3A%28a%3Dthis%2EoffsetParent%28%29%2Cb%3Dthis%2Eoffset%28%29%2Cn%2EnodeName%28a%5B0%5D%2C%22html%22%29%7C%7C%28d%3Da%2Eoffset%28%29%29%2Cd%2Etop%2B%3Dn%2Ecss%28a%5B0%5D%2C%22borderTopWidth%22%2C%210%29%2Cd%2Eleft%2B%3Dn%2Ecss%28a%5B0%5D%2C%22borderLeftWidth%22%2C%210%29%29%2C%7Btop%3Ab%2Etop%2Dd%2Etop%2Dn%2Ecss%28c%2C%22marginTop%22%2C%210%29%2Cleft%3Ab%2Eleft%2Dd%2Eleft%2Dn%2Ecss%28c%2C%22marginLeft%22%2C%210%29%7D%7D%7D%2CoffsetParent%3Afunction%28%29%7Breturn%20this%2Emap%28function%28%29%7Bvar%20a%3Dthis%2EoffsetParent%7C%7CJc%3Bwhile%28a%26%26%21n%2EnodeName%28a%2C%22html%22%29%26%26%22static%22%3D%3D%3Dn%2Ecss%28a%2C%22position%22%29%29a%3Da%2EoffsetParent%3Breturn%20a%7C%7CJc%7D%29%7D%7D%29%2Cn%2Eeach%28%7BscrollLeft%3A%22pageXOffset%22%2CscrollTop%3A%22pageYOffset%22%7D%2Cfunction%28b%2Cc%29%7Bvar%20d%3D%22pageYOffset%22%3D%3D%3Dc%3Bn%2Efn%5Bb%5D%3Dfunction%28e%29%7Breturn%20J%28this%2Cfunction%28b%2Ce%2Cf%29%7Bvar%20g%3DKc%28b%29%3Breturn%20void%200%3D%3D%3Df%3Fg%3Fg%5Bc%5D%3Ab%5Be%5D%3Avoid%28g%3Fg%2EscrollTo%28d%3Fa%2EpageXOffset%3Af%2Cd%3Ff%3Aa%2EpageYOffset%29%3Ab%5Be%5D%3Df%29%7D%2Cb%2Ce%2Carguments%2Elength%2Cnull%29%7D%7D%29%2Cn%2Eeach%28%5B%22top%22%2C%22left%22%5D%2Cfunction%28a%2Cb%29%7Bn%2EcssHooks%5Bb%5D%3Dyb%28k%2EpixelPosition%2Cfunction%28a%2Cc%29%7Breturn%20c%3F%28c%3Dxb%28a%2Cb%29%2Cvb%2Etest%28c%29%3Fn%28a%29%2Eposition%28%29%5Bb%5D%2B%22px%22%3Ac%29%3Avoid%200%7D%29%7D%29%2Cn%2Eeach%28%7BHeight%3A%22height%22%2CWidth%3A%22width%22%7D%2Cfunction%28a%2Cb%29%7Bn%2Eeach%28%7Bpadding%3A%22inner%22%2Ba%2Ccontent%3Ab%2C%22%22%3A%22outer%22%2Ba%7D%2Cfunction%28c%2Cd%29%7Bn%2Efn%5Bd%5D%3Dfunction%28d%2Ce%29%7Bvar%20f%3Darguments%2Elength%26%26%28c%7C%7C%22boolean%22%21%3Dtypeof%20d%29%2Cg%3Dc%7C%7C%28d%3D%3D%3D%210%7C%7Ce%3D%3D%3D%210%3F%22margin%22%3A%22border%22%29%3Breturn%20J%28this%2Cfunction%28b%2Cc%2Cd%29%7Bvar%20e%3Breturn%20n%2EisWindow%28b%29%3Fb%2Edocument%2EdocumentElement%5B%22client%22%2Ba%5D%3A9%3D%3D%3Db%2EnodeType%3F%28e%3Db%2EdocumentElement%2CMath%2Emax%28b%2Ebody%5B%22scroll%22%2Ba%5D%2Ce%5B%22scroll%22%2Ba%5D%2Cb%2Ebody%5B%22offset%22%2Ba%5D%2Ce%5B%22offset%22%2Ba%5D%2Ce%5B%22client%22%2Ba%5D%29%29%3Avoid%200%3D%3D%3Dd%3Fn%2Ecss%28b%2Cc%2Cg%29%3An%2Estyle%28b%2Cc%2Cd%2Cg%29%7D%2Cb%2Cf%3Fd%3Avoid%200%2Cf%2Cnull%29%7D%7D%29%7D%29%2Cn%2Efn%2Esize%3Dfunction%28%29%7Breturn%20this%2Elength%7D%2Cn%2Efn%2EandSelf%3Dn%2Efn%2EaddBack%2C%22function%22%3D%3Dtypeof%20define%26%26define%2Eamd%26%26define%28%22jquery%22%2C%5B%5D%2Cfunction%28%29%7Breturn%20n%7D%29%3Bvar%20Lc%3Da%2EjQuery%2CMc%3Da%2E%24%3Breturn%20n%2EnoConflict%3Dfunction%28b%29%7Breturn%20a%2E%24%3D%3D%3Dn%26%26%28a%2E%24%3DMc%29%2Cb%26%26a%2EjQuery%3D%3D%3Dn%26%26%28a%2EjQuery%3DLc%29%2Cn%7D%2Ctypeof%20b%3D%3D%3DU%26%26%28a%2EjQuery%3Da%2E%24%3Dn%29%2Cn%7D%29%3B%0A%2F%2F%23%20sourceMappingURL%3Djquery%2Emin%2Emap"></script>
<script src="data:application/x-javascriptapha%C3%ABl%202%2E1%2E1%20%2D%20JavaScript%20Vector%20Libraryopyright%20%C2%A9%202008%2D2012%20Dmitry%20Baranovskiy%20%28http%3A%2F%2Fraphaeljs%2Ecom%29%20%20%20%20%E2%94%82%20%5C%5C%0A%2F%2F%20%E2%94%82%20Copyright%20%C2%A9%202008%2D2012%20Sencha%20Labs%20%28http%3A%2F%2Fsencha%2Ecomicensed%20under%20the%20MIT%20%28http%3A%2F%2Fraphaeljs%2Ecom%2Flicense%2Ehtml%29%20licensefunction%28a%29%7Bvar%20b%2Cc%2Cd%3D%220%2E4%2E2%22%2Ce%3D%22hasOwnProperty%22%2Cf%3D%2F%5B%5C%2E%5C%2F%5D%2F%2Cg%3D%22%2A%22%2Ch%3Dfunction%28%29%7B%7D%2Ci%3Dfunction%28a%2Cb%29%7Breturn%20a%2Db%7D%2Cj%3D%7Bn%3A%7B%7D%7D%2Ck%3Dfunction%28a%2Cd%29%7Ba%3DString%28a%29%3Bvar%20e%2Cf%3Dc%2Cg%3DArray%2Eprototype%2Eslice%2Ecall%28arguments%2C2%29%2Ch%3Dk%2Elisteners%28a%29%2Cj%3D0%2Cl%3D%5B%5D%2Cm%3D%7B%7D%2Cn%3D%5B%5D%2Co%3Db%3Bb%3Da%2Cc%3D0%3Bfor%28var%20p%3D0%2Cq%3Dh%2Elength%3Bq%3Ep%3Bp%2B%2B%29%22zIndex%22in%20h%5Bp%5D%26%26%28l%2Epush%28h%5Bp%5D%2EzIndex%29%2Ch%5Bp%5D%2EzIndex%3C0%26%26%28m%5Bh%5Bp%5D%2EzIndex%5D%3Dh%5Bp%5D%29%29%3Bfor%28l%2Esort%28i%29%3Bl%5Bj%5D%3C0%3B%29if%28e%3Dm%5Bl%5Bj%2B%2B%5D%5D%2Cn%2Epush%28e%2Eapply%28d%2Cg%29%29%2Cc%29return%20c%3Df%2Cn%3Bfor%28p%3D0%3Bq%3Ep%3Bp%2B%2B%29if%28e%3Dh%5Bp%5D%2C%22zIndex%22in%20e%29if%28e%2EzIndex%3D%3Dl%5Bj%5D%29%7Bif%28n%2Epush%28e%2Eapply%28d%2Cg%29%29%2Cc%29break%3Bdo%20if%28j%2B%2B%2Ce%3Dm%5Bl%5Bj%5D%5D%2Ce%26%26n%2Epush%28e%2Eapply%28d%2Cg%29%29%2Cc%29break%3Bwhile%28e%29%7Delse%20m%5Be%2EzIndex%5D%3De%3Belse%20if%28n%2Epush%28e%2Eapply%28d%2Cg%29%29%2Cc%29break%3Breturn%20c%3Df%2Cb%3Do%2Cn%2Elength%3Fn%3Anull%7D%3Bk%2E%5Fevents%3Dj%2Ck%2Elisteners%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Ch%2Ci%2Ck%2Cl%2Cm%3Da%2Esplit%28f%29%2Cn%3Dj%2Co%3D%5Bn%5D%2Cp%3D%5B%5D%3Bfor%28e%3D0%2Ch%3Dm%2Elength%3Bh%3Ee%3Be%2B%2B%29%7Bfor%28l%3D%5B%5D%2Ci%3D0%2Ck%3Do%2Elength%3Bk%3Ei%3Bi%2B%2B%29for%28n%3Do%5Bi%5D%2En%2Cc%3D%5Bn%5Bm%5Be%5D%5D%2Cn%5Bg%5D%5D%2Cd%3D2%3Bd%2D%2D%3B%29b%3Dc%5Bd%5D%2Cb%26%26%28l%2Epush%28b%29%2Cp%3Dp%2Econcat%28b%2Ef%7C%7C%5B%5D%29%29%3Bo%3Dl%7Dreturn%20p%7D%2Ck%2Eon%3Dfunction%28a%2Cb%29%7Bif%28a%3DString%28a%29%2C%22function%22%21%3Dtypeof%20b%29return%20function%28%29%7B%7D%3Bfor%28var%20c%3Da%2Esplit%28f%29%2Cd%3Dj%2Ce%3D0%2Cg%3Dc%2Elength%3Bg%3Ee%3Be%2B%2B%29d%3Dd%2En%2Cd%3Dd%2EhasOwnProperty%28c%5Be%5D%29%26%26d%5Bc%5Be%5D%5D%7C%7C%28d%5Bc%5Be%5D%5D%3D%7Bn%3A%7B%7D%7D%29%3Bfor%28d%2Ef%3Dd%2Ef%7C%7C%5B%5D%2Ce%3D0%2Cg%3Dd%2Ef%2Elength%3Bg%3Ee%3Be%2B%2B%29if%28d%2Ef%5Be%5D%3D%3Db%29return%20h%3Breturn%20d%2Ef%2Epush%28b%29%2Cfunction%28a%29%7B%2Ba%3D%3D%2Ba%26%26%28b%2EzIndex%3D%2Ba%29%7D%7D%2Ck%2Ef%3Dfunction%28a%29%7Bvar%20b%3D%5B%5D%2Eslice%2Ecall%28arguments%2C1%29%3Breturn%20function%28%29%7Bk%2Eapply%28null%2C%5Ba%2Cnull%5D%2Econcat%28b%29%2Econcat%28%5B%5D%2Eslice%2Ecall%28arguments%2C0%29%29%29%7D%7D%2Ck%2Estop%3Dfunction%28%29%7Bc%3D1%7D%2Ck%2Ent%3Dfunction%28a%29%7Breturn%20a%3Fnew%20RegExp%28%22%28%3F%3A%5C%5C%2E%7C%5C%5C%2F%7C%5E%29%22%2Ba%2B%22%28%3F%3A%5C%5C%2E%7C%5C%5C%2F%7C%24%29%22%29%2Etest%28b%29%3Ab%7D%2Ck%2Ents%3Dfunction%28%29%7Breturn%20b%2Esplit%28f%29%7D%2Ck%2Eoff%3Dk%2Eunbind%3Dfunction%28a%2Cb%29%7Bif%28%21a%29return%20k%2E%5Fevents%3Dj%3D%7Bn%3A%7B%7D%7D%2Cvoid%200%3Bvar%20c%2Cd%2Ch%2Ci%2Cl%2Cm%2Cn%2Co%3Da%2Esplit%28f%29%2Cp%3D%5Bj%5D%3Bfor%28i%3D0%2Cl%3Do%2Elength%3Bl%3Ei%3Bi%2B%2B%29for%28m%3D0%3Bm%3Cp%2Elength%3Bm%2B%3Dh%2Elength%2D2%29%7Bif%28h%3D%5Bm%2C1%5D%2Cc%3Dp%5Bm%5D%2En%2Co%5Bi%5D%21%3Dg%29c%5Bo%5Bi%5D%5D%26%26h%2Epush%28c%5Bo%5Bi%5D%5D%29%3Belse%20for%28d%20in%20c%29c%5Be%5D%28d%29%26%26h%2Epush%28c%5Bd%5D%29%3Bp%2Esplice%2Eapply%28p%2Ch%29%7Dfor%28i%3D0%2Cl%3Dp%2Elength%3Bl%3Ei%3Bi%2B%2B%29for%28c%3Dp%5Bi%5D%3Bc%2En%3B%29%7Bif%28b%29%7Bif%28c%2Ef%29%7Bfor%28m%3D0%2Cn%3Dc%2Ef%2Elength%3Bn%3Em%3Bm%2B%2B%29if%28c%2Ef%5Bm%5D%3D%3Db%29%7Bc%2Ef%2Esplice%28m%2C1%29%3Bbreak%7D%21c%2Ef%2Elength%26%26delete%20c%2Ef%7Dfor%28d%20in%20c%2En%29if%28c%2En%5Be%5D%28d%29%26%26c%2En%5Bd%5D%2Ef%29%7Bvar%20q%3Dc%2En%5Bd%5D%2Ef%3Bfor%28m%3D0%2Cn%3Dq%2Elength%3Bn%3Em%3Bm%2B%2B%29if%28q%5Bm%5D%3D%3Db%29%7Bq%2Esplice%28m%2C1%29%3Bbreak%7D%21q%2Elength%26%26delete%20c%2En%5Bd%5D%2Ef%7D%7Delse%7Bdelete%20c%2Ef%3Bfor%28d%20in%20c%2En%29c%2En%5Be%5D%28d%29%26%26c%2En%5Bd%5D%2Ef%26%26delete%20c%2En%5Bd%5D%2Ef%7Dc%3Dc%2En%7D%7D%2Ck%2Eonce%3Dfunction%28a%2Cb%29%7Bvar%20c%3Dfunction%28%29%7Breturn%20k%2Eunbind%28a%2Cc%29%2Cb%2Eapply%28this%2Carguments%29%7D%3Breturn%20k%2Eon%28a%2Cc%29%7D%2Ck%2Eversion%3Dd%2Ck%2EtoString%3Dfunction%28%29%7Breturn%22You%20are%20running%20Eve%20%22%2Bd%7D%2C%22undefined%22%21%3Dtypeof%20module%26%26module%2Eexports%3Fmodule%2Eexports%3Dk%3A%22undefined%22%21%3Dtypeof%20define%3Fdefine%28%22eve%22%2C%5B%5D%2Cfunction%28%29%7Breturn%20k%7D%29%3Aa%2Eeve%3Dk%7D%28this%29%2Cfunction%28a%2Cb%29%7B%22function%22%3D%3Dtypeof%20define%26%26define%2Eamd%3Fdefine%28%5B%22eve%22%5D%2Cfunction%28c%29%7Breturn%20b%28a%2Cc%29%7D%29%3Ab%28a%2Ca%2Eeve%29%7D%28this%2Cfunction%28a%2Cb%29%7Bfunction%20c%28a%29%7Bif%28c%2Eis%28a%2C%22function%22%29%29return%20u%3Fa%28%29%3Ab%2Eon%28%22raphael%2EDOMload%22%2Ca%29%3Bif%28c%2Eis%28a%2CV%29%29return%20c%2E%5Fengine%2Ecreate%5BD%5D%28c%2Ca%2Esplice%280%2C3%2Bc%2Eis%28a%5B0%5D%2CT%29%29%29%2Eadd%28a%29%3Bvar%20d%3DArray%2Eprototype%2Eslice%2Ecall%28arguments%2C0%29%3Bif%28c%2Eis%28d%5Bd%2Elength%2D1%5D%2C%22function%22%29%29%7Bvar%20e%3Dd%2Epop%28%29%3Breturn%20u%3Fe%2Ecall%28c%2E%5Fengine%2Ecreate%5BD%5D%28c%2Cd%29%29%3Ab%2Eon%28%22raphael%2EDOMload%22%2Cfunction%28%29%7Be%2Ecall%28c%2E%5Fengine%2Ecreate%5BD%5D%28c%2Cd%29%29%7D%29%7Dreturn%20c%2E%5Fengine%2Ecreate%5BD%5D%28c%2Carguments%29%7Dfunction%20d%28a%29%7Bif%28%22function%22%3D%3Dtypeof%20a%7C%7CObject%28a%29%21%3D%3Da%29return%20a%3Bvar%20b%3Dnew%20a%2Econstructor%3Bfor%28var%20c%20in%20a%29a%5Bz%5D%28c%29%26%26%28b%5Bc%5D%3Dd%28a%5Bc%5D%29%29%3Breturn%20b%7Dfunction%20e%28a%2Cb%29%7Bfor%28var%20c%3D0%2Cd%3Da%2Elength%3Bd%3Ec%3Bc%2B%2B%29if%28a%5Bc%5D%3D%3D%3Db%29return%20a%2Epush%28a%2Esplice%28c%2C1%29%5B0%5D%29%7Dfunction%20f%28a%2Cb%2Cc%29%7Bfunction%20d%28%29%7Bvar%20f%3DArray%2Eprototype%2Eslice%2Ecall%28arguments%2C0%29%2Cg%3Df%2Ejoin%28%22%E2%90%80%22%29%2Ch%3Dd%2Ecache%3Dd%2Ecache%7C%7C%7B%7D%2Ci%3Dd%2Ecount%3Dd%2Ecount%7C%7C%5B%5D%3Breturn%20h%5Bz%5D%28g%29%3F%28e%28i%2Cg%29%2Cc%3Fc%28h%5Bg%5D%29%3Ah%5Bg%5D%29%3A%28i%2Elength%3E%3D1e3%26%26delete%20h%5Bi%2Eshift%28%29%5D%2Ci%2Epush%28g%29%2Ch%5Bg%5D%3Da%5BD%5D%28b%2Cf%29%2Cc%3Fc%28h%5Bg%5D%29%3Ah%5Bg%5D%29%7Dreturn%20d%7Dfunction%20g%28%29%7Breturn%20this%2Ehex%7Dfunction%20h%28a%2Cb%29%7Bfor%28var%20c%3D%5B%5D%2Cd%3D0%2Ce%3Da%2Elength%3Be%2D2%2A%21b%3Ed%3Bd%2B%3D2%29%7Bvar%20f%3D%5B%7Bx%3A%2Ba%5Bd%2D2%5D%2Cy%3A%2Ba%5Bd%2D1%5D%7D%2C%7Bx%3A%2Ba%5Bd%5D%2Cy%3A%2Ba%5Bd%2B1%5D%7D%2C%7Bx%3A%2Ba%5Bd%2B2%5D%2Cy%3A%2Ba%5Bd%2B3%5D%7D%2C%7Bx%3A%2Ba%5Bd%2B4%5D%2Cy%3A%2Ba%5Bd%2B5%5D%7D%5D%3Bb%3Fd%3Fe%2D4%3D%3Dd%3Ff%5B3%5D%3D%7Bx%3A%2Ba%5B0%5D%2Cy%3A%2Ba%5B1%5D%7D%3Ae%2D2%3D%3Dd%26%26%28f%5B2%5D%3D%7Bx%3A%2Ba%5B0%5D%2Cy%3A%2Ba%5B1%5D%7D%2Cf%5B3%5D%3D%7Bx%3A%2Ba%5B2%5D%2Cy%3A%2Ba%5B3%5D%7D%29%3Af%5B0%5D%3D%7Bx%3A%2Ba%5Be%2D2%5D%2Cy%3A%2Ba%5Be%2D1%5D%7D%3Ae%2D4%3D%3Dd%3Ff%5B3%5D%3Df%5B2%5D%3Ad%7C%7C%28f%5B0%5D%3D%7Bx%3A%2Ba%5Bd%5D%2Cy%3A%2Ba%5Bd%2B1%5D%7D%29%2Cc%2Epush%28%5B%22C%22%2C%28%2Df%5B0%5D%2Ex%2B6%2Af%5B1%5D%2Ex%2Bf%5B2%5D%2Ex%29%2F6%2C%28%2Df%5B0%5D%2Ey%2B6%2Af%5B1%5D%2Ey%2Bf%5B2%5D%2Ey%29%2F6%2C%28f%5B1%5D%2Ex%2B6%2Af%5B2%5D%2Ex%2Df%5B3%5D%2Ex%29%2F6%2C%28f%5B1%5D%2Ey%2B6%2Af%5B2%5D%2Ey%2Df%5B3%5D%2Ey%29%2F6%2Cf%5B2%5D%2Ex%2Cf%5B2%5D%2Ey%5D%29%7Dreturn%20c%7Dfunction%20i%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%3D%2D3%2Ab%2B9%2Ac%2D9%2Ad%2B3%2Ae%2Cg%3Da%2Af%2B6%2Ab%2D12%2Ac%2B6%2Ad%3Breturn%20a%2Ag%2D3%2Ab%2B3%2Ac%7Dfunction%20j%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Cj%29%7Bnull%3D%3Dj%26%26%28j%3D1%29%2Cj%3Dj%3E1%3F1%3A0%3Ej%3F0%3Aj%3Bfor%28var%20k%3Dj%2F2%2Cl%3D12%2Cm%3D%5B%2D%2E1252%2C%2E1252%2C%2D%2E3678%2C%2E3678%2C%2D%2E5873%2C%2E5873%2C%2D%2E7699%2C%2E7699%2C%2D%2E9041%2C%2E9041%2C%2D%2E9816%2C%2E9816%5D%2Cn%3D%5B%2E2491%2C%2E2491%2C%2E2335%2C%2E2335%2C%2E2032%2C%2E2032%2C%2E1601%2C%2E1601%2C%2E1069%2C%2E1069%2C%2E0472%2C%2E0472%5D%2Co%3D0%2Cp%3D0%3Bl%3Ep%3Bp%2B%2B%29%7Bvar%20q%3Dk%2Am%5Bp%5D%2Bk%2Cr%3Di%28q%2Ca%2Cc%2Ce%2Cg%29%2Cs%3Di%28q%2Cb%2Cd%2Cf%2Ch%29%2Ct%3Dr%2Ar%2Bs%2As%3Bo%2B%3Dn%5Bp%5D%2AN%2Esqrt%28t%29%7Dreturn%20k%2Ao%7Dfunction%20k%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%29%7Bif%28%21%280%3Ei%7C%7Cj%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%29%3Ci%29%29%7Bvar%20k%2Cl%3D1%2Cm%3Dl%2F2%2Cn%3Dl%2Dm%2Co%3D%2E01%3Bfor%28k%3Dj%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Cn%29%3BQ%28k%2Di%29%3Eo%3B%29m%2F%3D2%2Cn%2B%3D%28i%3Ek%3F1%3A%2D1%29%2Am%2Ck%3Dj%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Cn%29%3Breturn%20n%7D%7Dfunction%20l%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%29%7Bif%28%21%28O%28a%2Cc%29%3CP%28e%2Cg%29%7C%7CP%28a%2Cc%29%3EO%28e%2Cg%29%7C%7CO%28b%2Cd%29%3CP%28f%2Ch%29%7C%7CP%28b%2Cd%29%3EO%28f%2Ch%29%29%29%7Bvar%20i%3D%28a%2Ad%2Db%2Ac%29%2A%28e%2Dg%29%2D%28a%2Dc%29%2A%28e%2Ah%2Df%2Ag%29%2Cj%3D%28a%2Ad%2Db%2Ac%29%2A%28f%2Dh%29%2D%28b%2Dd%29%2A%28e%2Ah%2Df%2Ag%29%2Ck%3D%28a%2Dc%29%2A%28f%2Dh%29%2D%28b%2Dd%29%2A%28e%2Dg%29%3Bif%28k%29%7Bvar%20l%3Di%2Fk%2Cm%3Dj%2Fk%2Cn%3D%2Bl%2EtoFixed%282%29%2Co%3D%2Bm%2EtoFixed%282%29%3Bif%28%21%28n%3C%2BP%28a%2Cc%29%2EtoFixed%282%29%7C%7Cn%3E%2BO%28a%2Cc%29%2EtoFixed%282%29%7C%7Cn%3C%2BP%28e%2Cg%29%2EtoFixed%282%29%7C%7Cn%3E%2BO%28e%2Cg%29%2EtoFixed%282%29%7C%7Co%3C%2BP%28b%2Cd%29%2EtoFixed%282%29%7C%7Co%3E%2BO%28b%2Cd%29%2EtoFixed%282%29%7C%7Co%3C%2BP%28f%2Ch%29%2EtoFixed%282%29%7C%7Co%3E%2BO%28f%2Ch%29%2EtoFixed%282%29%29%29return%7Bx%3Al%2Cy%3Am%7D%7D%7D%7Dfunction%20m%28a%2Cb%2Cd%29%7Bvar%20e%3Dc%2EbezierBBox%28a%29%2Cf%3Dc%2EbezierBBox%28b%29%3Bif%28%21c%2EisBBoxIntersect%28e%2Cf%29%29return%20d%3F0%3A%5B%5D%3Bfor%28var%20g%3Dj%2Eapply%280%2Ca%29%2Ch%3Dj%2Eapply%280%2Cb%29%2Ci%3DO%28%7E%7E%28g%2F5%29%2C1%29%2Ck%3DO%28%7E%7E%28h%2F5%29%2C1%29%2Cm%3D%5B%5D%2Cn%3D%5B%5D%2Co%3D%7B%7D%2Cp%3Dd%3F0%3A%5B%5D%2Cq%3D0%3Bi%2B1%3Eq%3Bq%2B%2B%29%7Bvar%20r%3Dc%2EfindDotsAtSegment%2Eapply%28c%2Ca%2Econcat%28q%2Fi%29%29%3Bm%2Epush%28%7Bx%3Ar%2Ex%2Cy%3Ar%2Ey%2Ct%3Aq%2Fi%7D%29%7Dfor%28q%3D0%3Bk%2B1%3Eq%3Bq%2B%2B%29r%3Dc%2EfindDotsAtSegment%2Eapply%28c%2Cb%2Econcat%28q%2Fk%29%29%2Cn%2Epush%28%7Bx%3Ar%2Ex%2Cy%3Ar%2Ey%2Ct%3Aq%2Fk%7D%29%3Bfor%28q%3D0%3Bi%3Eq%3Bq%2B%2B%29for%28var%20s%3D0%3Bk%3Es%3Bs%2B%2B%29%7Bvar%20t%3Dm%5Bq%5D%2Cu%3Dm%5Bq%2B1%5D%2Cv%3Dn%5Bs%5D%2Cw%3Dn%5Bs%2B1%5D%2Cx%3DQ%28u%2Ex%2Dt%2Ex%29%3C%2E001%3F%22y%22%3A%22x%22%2Cy%3DQ%28w%2Ex%2Dv%2Ex%29%3C%2E001%3F%22y%22%3A%22x%22%2Cz%3Dl%28t%2Ex%2Ct%2Ey%2Cu%2Ex%2Cu%2Ey%2Cv%2Ex%2Cv%2Ey%2Cw%2Ex%2Cw%2Ey%29%3Bif%28z%29%7Bif%28o%5Bz%2Ex%2EtoFixed%284%29%5D%3D%3Dz%2Ey%2EtoFixed%284%29%29continue%3Bo%5Bz%2Ex%2EtoFixed%284%29%5D%3Dz%2Ey%2EtoFixed%284%29%3Bvar%20A%3Dt%2Et%2BQ%28%28z%5Bx%5D%2Dt%5Bx%5D%29%2F%28u%5Bx%5D%2Dt%5Bx%5D%29%29%2A%28u%2Et%2Dt%2Et%29%2CB%3Dv%2Et%2BQ%28%28z%5By%5D%2Dv%5By%5D%29%2F%28w%5By%5D%2Dv%5By%5D%29%29%2A%28w%2Et%2Dv%2Et%29%3BA%3E%3D0%26%261%2E001%3E%3DA%26%26B%3E%3D0%26%261%2E001%3E%3DB%26%26%28d%3Fp%2B%2B%3Ap%2Epush%28%7Bx%3Az%2Ex%2Cy%3Az%2Ey%2Ct1%3AP%28A%2C1%29%2Ct2%3AP%28B%2C1%29%7D%29%29%7D%7Dreturn%20p%7Dfunction%20n%28a%2Cb%2Cd%29%7Ba%3Dc%2E%5Fpath2curve%28a%29%2Cb%3Dc%2E%5Fpath2curve%28b%29%3Bfor%28var%20e%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cn%2Co%2Cp%3Dd%3F0%3A%5B%5D%2Cq%3D0%2Cr%3Da%2Elength%3Br%3Eq%3Bq%2B%2B%29%7Bvar%20s%3Da%5Bq%5D%3Bif%28%22M%22%3D%3Ds%5B0%5D%29e%3Di%3Ds%5B1%5D%2Cf%3Dj%3Ds%5B2%5D%3Belse%7B%22C%22%3D%3Ds%5B0%5D%3F%28n%3D%5Be%2Cf%5D%2Econcat%28s%2Eslice%281%29%29%2Ce%3Dn%5B6%5D%2Cf%3Dn%5B7%5D%29%3A%28n%3D%5Be%2Cf%2Ce%2Cf%2Ci%2Cj%2Ci%2Cj%5D%2Ce%3Di%2Cf%3Dj%29%3Bfor%28var%20t%3D0%2Cu%3Db%2Elength%3Bu%3Et%3Bt%2B%2B%29%7Bvar%20v%3Db%5Bt%5D%3Bif%28%22M%22%3D%3Dv%5B0%5D%29g%3Dk%3Dv%5B1%5D%2Ch%3Dl%3Dv%5B2%5D%3Belse%7B%22C%22%3D%3Dv%5B0%5D%3F%28o%3D%5Bg%2Ch%5D%2Econcat%28v%2Eslice%281%29%29%2Cg%3Do%5B6%5D%2Ch%3Do%5B7%5D%29%3A%28o%3D%5Bg%2Ch%2Cg%2Ch%2Ck%2Cl%2Ck%2Cl%5D%2Cg%3Dk%2Ch%3Dl%29%3Bvar%20w%3Dm%28n%2Co%2Cd%29%3Bif%28d%29p%2B%3Dw%3Belse%7Bfor%28var%20x%3D0%2Cy%3Dw%2Elength%3By%3Ex%3Bx%2B%2B%29w%5Bx%5D%2Esegment1%3Dq%2Cw%5Bx%5D%2Esegment2%3Dt%2Cw%5Bx%5D%2Ebez1%3Dn%2Cw%5Bx%5D%2Ebez2%3Do%3Bp%3Dp%2Econcat%28w%29%7D%7D%7D%7D%7Dreturn%20p%7Dfunction%20o%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bnull%21%3Da%3F%28this%2Ea%3D%2Ba%2Cthis%2Eb%3D%2Bb%2Cthis%2Ec%3D%2Bc%2Cthis%2Ed%3D%2Bd%2Cthis%2Ee%3D%2Be%2Cthis%2Ef%3D%2Bf%29%3A%28this%2Ea%3D1%2Cthis%2Eb%3D0%2Cthis%2Ec%3D0%2Cthis%2Ed%3D1%2Cthis%2Ee%3D0%2Cthis%2Ef%3D0%29%7Dfunction%20p%28%29%7Breturn%20this%2Ex%2BH%2Bthis%2Ey%2BH%2Bthis%2Ewidth%2B%22%20%C3%97%20%22%2Bthis%2Eheight%7Dfunction%20q%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bfunction%20g%28a%29%7Breturn%28%28l%2Aa%2Bk%29%2Aa%2Bj%29%2Aa%7Dfunction%20h%28a%2Cb%29%7Bvar%20c%3Di%28a%2Cb%29%3Breturn%28%28o%2Ac%2Bn%29%2Ac%2Bm%29%2Ac%7Dfunction%20i%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%2Ch%2Ci%3Bfor%28e%3Da%2Ci%3D0%3B8%3Ei%3Bi%2B%2B%29%7Bif%28f%3Dg%28e%29%2Da%2CQ%28f%29%3Cb%29return%20e%3Bif%28h%3D%283%2Al%2Ae%2B2%2Ak%29%2Ae%2Bj%2CQ%28h%29%3C1e%2D6%29break%3Be%2D%3Df%2Fh%7Dif%28c%3D0%2Cd%3D1%2Ce%3Da%2Cc%3Ee%29return%20c%3Bif%28e%3Ed%29return%20d%3Bfor%28%3Bd%3Ec%3B%29%7Bif%28f%3Dg%28e%29%2CQ%28f%2Da%29%3Cb%29return%20e%3Ba%3Ef%3Fc%3De%3Ad%3De%2Ce%3D%28d%2Dc%29%2F2%2Bc%7Dreturn%20e%7Dvar%20j%3D3%2Ab%2Ck%3D3%2A%28d%2Db%29%2Dj%2Cl%3D1%2Dj%2Dk%2Cm%3D3%2Ac%2Cn%3D3%2A%28e%2Dc%29%2Dm%2Co%3D1%2Dm%2Dn%3Breturn%20h%28a%2C1%2F%28200%2Af%29%29%7Dfunction%20r%28a%2Cb%29%7Bvar%20c%3D%5B%5D%2Cd%3D%7B%7D%3Bif%28this%2Ems%3Db%2Cthis%2Etimes%3D1%2Ca%29%7Bfor%28var%20e%20in%20a%29a%5Bz%5D%28e%29%26%26%28d%5B%5F%28e%29%5D%3Da%5Be%5D%2Cc%2Epush%28%5F%28e%29%29%29%3Bc%2Esort%28lb%29%7Dthis%2Eanim%3Dd%2Cthis%2Etop%3Dc%5Bc%2Elength%2D1%5D%2Cthis%2Epercents%3Dc%7Dfunction%20s%28a%2Cd%2Ce%2Cf%2Cg%2Ch%29%7Be%3D%5F%28e%29%3Bvar%20i%2Cj%2Ck%2Cl%2Cm%2Cn%2Cp%3Da%2Ems%2Cr%3D%7B%7D%2Cs%3D%7B%7D%2Ct%3D%7B%7D%3Bif%28f%29for%28v%3D0%2Cx%3Dic%2Elength%3Bx%3Ev%3Bv%2B%2B%29%7Bvar%20u%3Dic%5Bv%5D%3Bif%28u%2Eel%2Eid%3D%3Dd%2Eid%26%26u%2Eanim%3D%3Da%29%7Bu%2Epercent%21%3De%3F%28ic%2Esplice%28v%2C1%29%2Ck%3D1%29%3Aj%3Du%2Cd%2Eattr%28u%2EtotalOrigin%29%3Bbreak%7D%7Delse%20f%3D%2Bs%3Bfor%28var%20v%3D0%2Cx%3Da%2Epercents%2Elength%3Bx%3Ev%3Bv%2B%2B%29%7Bif%28a%2Epercents%5Bv%5D%3D%3De%7C%7Ca%2Epercents%5Bv%5D%3Ef%2Aa%2Etop%29%7Be%3Da%2Epercents%5Bv%5D%2Cm%3Da%2Epercents%5Bv%2D1%5D%7C%7C0%2Cp%3Dp%2Fa%2Etop%2A%28e%2Dm%29%2Cl%3Da%2Epercents%5Bv%2B1%5D%2Ci%3Da%2Eanim%5Be%5D%3Bbreak%7Df%26%26d%2Eattr%28a%2Eanim%5Ba%2Epercents%5Bv%5D%5D%29%7Dif%28i%29%7Bif%28j%29j%2Einitstatus%3Df%2Cj%2Estart%3Dnew%20Date%2Dj%2Ems%2Af%3Belse%7Bfor%28var%20y%20in%20i%29if%28i%5Bz%5D%28y%29%26%26%28db%5Bz%5D%28y%29%7C%7Cd%2Epaper%2EcustomAttributes%5Bz%5D%28y%29%29%29switch%28r%5By%5D%3Dd%2Eattr%28y%29%2Cnull%3D%3Dr%5By%5D%26%26%28r%5By%5D%3Dcb%5By%5D%29%2Cs%5By%5D%3Di%5By%5D%2Cdb%5By%5D%29%7Bcase%20T%3At%5By%5D%3D%28s%5By%5D%2Dr%5By%5D%29%2Fp%3Bbreak%3Bcase%22colour%22%3Ar%5By%5D%3Dc%2EgetRGB%28r%5By%5D%29%3Bvar%20A%3Dc%2EgetRGB%28s%5By%5D%29%3Bt%5By%5D%3D%7Br%3A%28A%2Er%2Dr%5By%5D%2Er%29%2Fp%2Cg%3A%28A%2Eg%2Dr%5By%5D%2Eg%29%2Fp%2Cb%3A%28A%2Eb%2Dr%5By%5D%2Eb%29%2Fp%7D%3Bbreak%3Bcase%22path%22%3Avar%20B%3DKb%28r%5By%5D%2Cs%5By%5D%29%2CC%3DB%5B1%5D%3Bfor%28r%5By%5D%3DB%5B0%5D%2Ct%5By%5D%3D%5B%5D%2Cv%3D0%2Cx%3Dr%5By%5D%2Elength%3Bx%3Ev%3Bv%2B%2B%29%7Bt%5By%5D%5Bv%5D%3D%5B0%5D%3Bfor%28var%20D%3D1%2CF%3Dr%5By%5D%5Bv%5D%2Elength%3BF%3ED%3BD%2B%2B%29t%5By%5D%5Bv%5D%5BD%5D%3D%28C%5Bv%5D%5BD%5D%2Dr%5By%5D%5Bv%5D%5BD%5D%29%2Fp%7Dbreak%3Bcase%22transform%22%3Avar%20G%3Dd%2E%5F%2CH%3DPb%28G%5By%5D%2Cs%5By%5D%29%3Bif%28H%29for%28r%5By%5D%3DH%2Efrom%2Cs%5By%5D%3DH%2Eto%2Ct%5By%5D%3D%5B%5D%2Ct%5By%5D%2Ereal%3D%210%2Cv%3D0%2Cx%3Dr%5By%5D%2Elength%3Bx%3Ev%3Bv%2B%2B%29for%28t%5By%5D%5Bv%5D%3D%5Br%5By%5D%5Bv%5D%5B0%5D%5D%2CD%3D1%2CF%3Dr%5By%5D%5Bv%5D%2Elength%3BF%3ED%3BD%2B%2B%29t%5By%5D%5Bv%5D%5BD%5D%3D%28s%5By%5D%5Bv%5D%5BD%5D%2Dr%5By%5D%5Bv%5D%5BD%5D%29%2Fp%3Belse%7Bvar%20K%3Dd%2Ematrix%7C%7Cnew%20o%2CL%3D%7B%5F%3A%7Btransform%3AG%2Etransform%7D%2CgetBBox%3Afunction%28%29%7Breturn%20d%2EgetBBox%281%29%7D%7D%3Br%5By%5D%3D%5BK%2Ea%2CK%2Eb%2CK%2Ec%2CK%2Ed%2CK%2Ee%2CK%2Ef%5D%2CNb%28L%2Cs%5By%5D%29%2Cs%5By%5D%3DL%2E%5F%2Etransform%2Ct%5By%5D%3D%5B%28L%2Ematrix%2Ea%2DK%2Ea%29%2Fp%2C%28L%2Ematrix%2Eb%2DK%2Eb%29%2Fp%2C%28L%2Ematrix%2Ec%2DK%2Ec%29%2Fp%2C%28L%2Ematrix%2Ed%2DK%2Ed%29%2Fp%2C%28L%2Ematrix%2Ee%2DK%2Ee%29%2Fp%2C%28L%2Ematrix%2Ef%2DK%2Ef%29%2Fp%5D%7Dbreak%3Bcase%22csv%22%3Avar%20M%3DI%28i%5By%5D%29%5BJ%5D%28w%29%2CN%3DI%28r%5By%5D%29%5BJ%5D%28w%29%3Bif%28%22clip%2Drect%22%3D%3Dy%29for%28r%5By%5D%3DN%2Ct%5By%5D%3D%5B%5D%2Cv%3DN%2Elength%3Bv%2D%2D%3B%29t%5By%5D%5Bv%5D%3D%28M%5Bv%5D%2Dr%5By%5D%5Bv%5D%29%2Fp%3Bs%5By%5D%3DM%3Bbreak%3Bdefault%3Afor%28M%3D%5B%5D%5BE%5D%28i%5By%5D%29%2CN%3D%5B%5D%5BE%5D%28r%5By%5D%29%2Ct%5By%5D%3D%5B%5D%2Cv%3Dd%2Epaper%2EcustomAttributes%5By%5D%2Elength%3Bv%2D%2D%3B%29t%5By%5D%5Bv%5D%3D%28%28M%5Bv%5D%7C%7C0%29%2D%28N%5Bv%5D%7C%7C0%29%29%2Fp%7Dvar%20O%3Di%2Eeasing%2CP%3Dc%2Eeasing%5Fformulas%5BO%5D%3Bif%28%21P%29if%28P%3DI%28O%29%2Ematch%28Z%29%2CP%26%265%3D%3DP%2Elength%29%7Bvar%20Q%3DP%3BP%3Dfunction%28a%29%7Breturn%20q%28a%2C%2BQ%5B1%5D%2C%2BQ%5B2%5D%2C%2BQ%5B3%5D%2C%2BQ%5B4%5D%2Cp%29%7D%7Delse%20P%3Dnb%3Bif%28n%3Di%2Estart%7C%7Ca%2Estart%7C%7C%2Bnew%20Date%2Cu%3D%7Banim%3Aa%2Cpercent%3Ae%2Ctimestamp%3An%2Cstart%3An%2B%28a%2Edel%7C%7C0%29%2Cstatus%3A0%2Cinitstatus%3Af%7C%7C0%2Cstop%3A%211%2Cms%3Ap%2Ceasing%3AP%2Cfrom%3Ar%2Cdiff%3At%2Cto%3As%2Cel%3Ad%2Ccallback%3Ai%2Ecallback%2Cprev%3Am%2Cnext%3Al%2Crepeat%3Ah%7C%7Ca%2Etimes%2Corigin%3Ad%2Eattr%28%29%2CtotalOrigin%3Ag%7D%2Cic%2Epush%28u%29%2Cf%26%26%21j%26%26%21k%26%26%28u%2Estop%3D%210%2Cu%2Estart%3Dnew%20Date%2Dp%2Af%2C1%3D%3Dic%2Elength%29%29return%20kc%28%29%3Bk%26%26%28u%2Estart%3Dnew%20Date%2Du%2Ems%2Af%29%2C1%3D%3Dic%2Elength%26%26jc%28kc%29%7Db%28%22raphael%2Eanim%2Estart%2E%22%2Bd%2Eid%2Cd%2Ca%29%7D%7Dfunction%20t%28a%29%7Bfor%28var%20b%3D0%3Bb%3Cic%2Elength%3Bb%2B%2B%29ic%5Bb%5D%2Eel%2Epaper%3D%3Da%26%26ic%2Esplice%28b%2D%2D%2C1%29%7Dc%2Eversion%3D%222%2E1%2E0%22%2Cc%2Eeve%3Db%3Bvar%20u%2Cv%2Cw%3D%2F%5B%2C%20%5D%2B%2F%2Cx%3D%7Bcircle%3A1%2Crect%3A1%2Cpath%3A1%2Cellipse%3A1%2Ctext%3A1%2Cimage%3A1%7D%2Cy%3D%2F%5C%7B%28%5Cd%2B%29%5C%7D%2Fg%2Cz%3D%22hasOwnProperty%22%2CA%3D%7Bdoc%3Adocument%2Cwin%3Aa%7D%2CB%3D%7Bwas%3AObject%2Eprototype%5Bz%5D%2Ecall%28A%2Ewin%2C%22Raphael%22%29%2Cis%3AA%2Ewin%2ERaphael%7D%2CC%3Dfunction%28%29%7Bthis%2Eca%3Dthis%2EcustomAttributes%3D%7B%7D%7D%2CD%3D%22apply%22%2CE%3D%22concat%22%2CF%3D%22ontouchstart%22in%20A%2Ewin%7C%7CA%2Ewin%2EDocumentTouch%26%26A%2Edoc%20instanceof%20DocumentTouch%2CG%3D%22%22%2CH%3D%22%20%22%2CI%3DString%2CJ%3D%22split%22%2CK%3D%22click%20dblclick%20mousedown%20mousemove%20mouseout%20mouseover%20mouseup%20touchstart%20touchmove%20touchend%20touchcancel%22%5BJ%5D%28H%29%2CL%3D%7Bmousedown%3A%22touchstart%22%2Cmousemove%3A%22touchmove%22%2Cmouseup%3A%22touchend%22%7D%2CM%3DI%2Eprototype%2EtoLowerCase%2CN%3DMath%2CO%3DN%2Emax%2CP%3DN%2Emin%2CQ%3DN%2Eabs%2CR%3DN%2Epow%2CS%3DN%2EPI%2CT%3D%22number%22%2CU%3D%22string%22%2CV%3D%22array%22%2CW%3DObject%2Eprototype%2EtoString%2CX%3D%28c%2E%5FISURL%3D%2F%5Eurl%5C%28%5B%27%22%5D%3F%28%5B%5E%5C%29%5D%2B%3F%29%5B%27%22%5D%3F%5C%29%24%2Fi%2C%2F%5E%5Cs%2A%28%28%23%5Ba%2Df%5Cd%5D%7B6%7D%29%7C%28%23%5Ba%2Df%5Cd%5D%7B3%7D%29%7Crgba%3F%5C%28%5Cs%2A%28%5B%5Cd%5C%2E%5D%2B%25%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%25%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%25%3F%28%3F%3A%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%25%3F%29%3F%29%5Cs%2A%5C%29%7Chsba%3F%5C%28%5Cs%2A%28%5B%5Cd%5C%2E%5D%2B%28%3F%3Adeg%7C%5Cxb0%7C%25%29%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%25%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%28%3F%3A%25%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%29%3F%29%25%3F%5Cs%2A%5C%29%7Chsla%3F%5C%28%5Cs%2A%28%5B%5Cd%5C%2E%5D%2B%28%3F%3Adeg%7C%5Cxb0%7C%25%29%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%25%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%28%3F%3A%25%3F%5Cs%2A%2C%5Cs%2A%5B%5Cd%5C%2E%5D%2B%29%3F%29%25%3F%5Cs%2A%5C%29%29%5Cs%2A%24%2Fi%29%2CY%3D%7BNaN%3A1%2CInfinity%3A1%2C%22%2DInfinity%22%3A1%7D%2CZ%3D%2F%5E%28%3F%3Acubic%2D%29%3Fbezier%5C%28%28%5B%5E%2C%5D%2B%29%2C%28%5B%5E%2C%5D%2B%29%2C%28%5B%5E%2C%5D%2B%29%2C%28%5B%5E%5C%29%5D%2B%29%5C%29%2F%2C%24%3DN%2Eround%2C%5F%3DparseFloat%2Cab%3DparseInt%2Cbb%3DI%2Eprototype%2EtoUpperCase%2Ccb%3Dc%2E%5FavailableAttrs%3D%7B%22arrow%2Dend%22%3A%22none%22%2C%22arrow%2Dstart%22%3A%22none%22%2Cblur%3A0%2C%22clip%2Drect%22%3A%220%200%201e9%201e9%22%2Ccursor%3A%22default%22%2Ccx%3A0%2Ccy%3A0%2Cfill%3A%22%23fff%22%2C%22fill%2Dopacity%22%3A1%2Cfont%3A%2710px%20%22Arial%22%27%2C%22font%2Dfamily%22%3A%27%22Arial%22%27%2C%22font%2Dsize%22%3A%2210%22%2C%22font%2Dstyle%22%3A%22normal%22%2C%22font%2Dweight%22%3A400%2Cgradient%3A0%2Cheight%3A0%2Chref%3A%22http%3A%2F%2Fraphaeljs%2Ecom%2F%22%2C%22letter%2Dspacing%22%3A0%2Copacity%3A1%2Cpath%3A%22M0%2C0%22%2Cr%3A0%2Crx%3A0%2Cry%3A0%2Csrc%3A%22%22%2Cstroke%3A%22%23000%22%2C%22stroke%2Ddasharray%22%3A%22%22%2C%22stroke%2Dlinecap%22%3A%22butt%22%2C%22stroke%2Dlinejoin%22%3A%22butt%22%2C%22stroke%2Dmiterlimit%22%3A0%2C%22stroke%2Dopacity%22%3A1%2C%22stroke%2Dwidth%22%3A1%2Ctarget%3A%22%5Fblank%22%2C%22text%2Danchor%22%3A%22middle%22%2Ctitle%3A%22Raphael%22%2Ctransform%3A%22%22%2Cwidth%3A0%2Cx%3A0%2Cy%3A0%7D%2Cdb%3Dc%2E%5FavailableAnimAttrs%3D%7Bblur%3AT%2C%22clip%2Drect%22%3A%22csv%22%2Ccx%3AT%2Ccy%3AT%2Cfill%3A%22colour%22%2C%22fill%2Dopacity%22%3AT%2C%22font%2Dsize%22%3AT%2Cheight%3AT%2Copacity%3AT%2Cpath%3A%22path%22%2Cr%3AT%2Crx%3AT%2Cry%3AT%2Cstroke%3A%22colour%22%2C%22stroke%2Dopacity%22%3AT%2C%22stroke%2Dwidth%22%3AT%2Ctransform%3A%22transform%22%2Cwidth%3AT%2Cx%3AT%2Cy%3AT%7D%2Ceb%3D%2F%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%2C%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%2F%2Cfb%3D%7Bhs%3A1%2Crg%3A1%7D%2Cgb%3D%2F%2C%3F%28%5Bachlmqrstvxz%5D%29%2C%3F%2Fgi%2Chb%3D%2F%28%5Bachlmrqstvz%5D%29%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%2C%5D%2A%28%28%2D%3F%5Cd%2A%5C%2E%3F%5Cd%2A%28%3F%3Ae%5B%5C%2D%2B%5D%3F%5Cd%2B%29%3F%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%2C%3F%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%29%2B%29%2Fgi%2Cib%3D%2F%28%5Brstm%5D%29%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%2C%5D%2A%28%28%2D%3F%5Cd%2A%5C%2E%3F%5Cd%2A%28%3F%3Ae%5B%5C%2D%2B%5D%3F%5Cd%2B%29%3F%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%2C%3F%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%29%2B%29%2Fgi%2Cjb%3D%2F%28%2D%3F%5Cd%2A%5C%2E%3F%5Cd%2A%28%3F%3Ae%5B%5C%2D%2B%5D%3F%5Cd%2B%29%3F%29%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%2C%3F%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%2Fgi%2Ckb%3D%28c%2E%5Fradial%5Fgradient%3D%2F%5Er%28%3F%3A%5C%28%28%5B%5E%2C%5D%2B%3F%29%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%2C%5B%5Cx09%5Cx0a%5Cx0b%5Cx0c%5Cx0d%5Cx20%5Cxa0%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%5Cu2028%5Cu2029%5D%2A%28%5B%5E%5C%29%5D%2B%3F%29%5C%29%29%3F%2F%2C%7B%7D%29%2Clb%3Dfunction%28a%2Cb%29%7Breturn%20%5F%28a%29%2D%5F%28b%29%7D%2Cmb%3Dfunction%28%29%7B%7D%2Cnb%3Dfunction%28a%29%7Breturn%20a%7D%2Cob%3Dc%2E%5FrectPath%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Breturn%20e%3F%5B%5B%22M%22%2Ca%2Be%2Cb%5D%2C%5B%22l%22%2Cc%2D2%2Ae%2C0%5D%2C%5B%22a%22%2Ce%2Ce%2C0%2C0%2C1%2Ce%2Ce%5D%2C%5B%22l%22%2C0%2Cd%2D2%2Ae%5D%2C%5B%22a%22%2Ce%2Ce%2C0%2C0%2C1%2C%2De%2Ce%5D%2C%5B%22l%22%2C2%2Ae%2Dc%2C0%5D%2C%5B%22a%22%2Ce%2Ce%2C0%2C0%2C1%2C%2De%2C%2De%5D%2C%5B%22l%22%2C0%2C2%2Ae%2Dd%5D%2C%5B%22a%22%2Ce%2Ce%2C0%2C0%2C1%2Ce%2C%2De%5D%2C%5B%22z%22%5D%5D%3A%5B%5B%22M%22%2Ca%2Cb%5D%2C%5B%22l%22%2Cc%2C0%5D%2C%5B%22l%22%2C0%2Cd%5D%2C%5B%22l%22%2C%2Dc%2C0%5D%2C%5B%22z%22%5D%5D%7D%2Cpb%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Breturn%20null%3D%3Dd%26%26%28d%3Dc%29%2C%5B%5B%22M%22%2Ca%2Cb%5D%2C%5B%22m%22%2C0%2C%2Dd%5D%2C%5B%22a%22%2Cc%2Cd%2C0%2C1%2C1%2C0%2C2%2Ad%5D%2C%5B%22a%22%2Cc%2Cd%2C0%2C1%2C1%2C0%2C%2D2%2Ad%5D%2C%5B%22z%22%5D%5D%7D%2Cqb%3Dc%2E%5FgetPath%3D%7Bpath%3Afunction%28a%29%7Breturn%20a%2Eattr%28%22path%22%29%7D%2Ccircle%3Afunction%28a%29%7Bvar%20b%3Da%2Eattrs%3Breturn%20pb%28b%2Ecx%2Cb%2Ecy%2Cb%2Er%29%7D%2Cellipse%3Afunction%28a%29%7Bvar%20b%3Da%2Eattrs%3Breturn%20pb%28b%2Ecx%2Cb%2Ecy%2Cb%2Erx%2Cb%2Ery%29%7D%2Crect%3Afunction%28a%29%7Bvar%20b%3Da%2Eattrs%3Breturn%20ob%28b%2Ex%2Cb%2Ey%2Cb%2Ewidth%2Cb%2Eheight%2Cb%2Er%29%7D%2Cimage%3Afunction%28a%29%7Bvar%20b%3Da%2Eattrs%3Breturn%20ob%28b%2Ex%2Cb%2Ey%2Cb%2Ewidth%2Cb%2Eheight%29%7D%2Ctext%3Afunction%28a%29%7Bvar%20b%3Da%2E%5FgetBBox%28%29%3Breturn%20ob%28b%2Ex%2Cb%2Ey%2Cb%2Ewidth%2Cb%2Eheight%29%7D%2Cset%3Afunction%28a%29%7Bvar%20b%3Da%2E%5FgetBBox%28%29%3Breturn%20ob%28b%2Ex%2Cb%2Ey%2Cb%2Ewidth%2Cb%2Eheight%29%7D%7D%2Crb%3Dc%2EmapPath%3Dfunction%28a%2Cb%29%7Bif%28%21b%29return%20a%3Bvar%20c%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%3Bfor%28a%3DKb%28a%29%2Ce%3D0%2Cg%3Da%2Elength%3Bg%3Ee%3Be%2B%2B%29for%28i%3Da%5Be%5D%2Cf%3D1%2Ch%3Di%2Elength%3Bh%3Ef%3Bf%2B%3D2%29c%3Db%2Ex%28i%5Bf%5D%2Ci%5Bf%2B1%5D%29%2Cd%3Db%2Ey%28i%5Bf%5D%2Ci%5Bf%2B1%5D%29%2Ci%5Bf%5D%3Dc%2Ci%5Bf%2B1%5D%3Dd%3Breturn%20a%7D%3Bif%28c%2E%5Fg%3DA%2Cc%2Etype%3DA%2Ewin%2ESVGAngle%7C%7CA%2Edoc%2Eimplementation%2EhasFeature%28%22http%3A%2F%2Fwww%2Ew3%2Eorg%2FTR%2FSVG11%2Ffeature%23BasicStructure%22%2C%221%2E1%22%29%3F%22SVG%22%3A%22VML%22%2C%22VML%22%3D%3Dc%2Etype%29%7Bvar%20sb%2Ctb%3DA%2Edoc%2EcreateElement%28%22div%22%29%3Bif%28tb%2EinnerHTML%3D%27%3Cv%3Ashape%20adj%3D%221%22%2F%3E%27%2Csb%3Dtb%2EfirstChild%2Csb%2Estyle%2Ebehavior%3D%22url%28%23default%23VML%29%22%2C%21sb%7C%7C%22object%22%21%3Dtypeof%20sb%2Eadj%29return%20c%2Etype%3DG%3Btb%3Dnull%7Dc%2Esvg%3D%21%28c%2Evml%3D%22VML%22%3D%3Dc%2Etype%29%2Cc%2E%5FPaper%3DC%2Cc%2Efn%3Dv%3DC%2Eprototype%3Dc%2Eprototype%2Cc%2E%5Fid%3D0%2Cc%2E%5Foid%3D0%2Cc%2Eis%3Dfunction%28a%2Cb%29%7Breturn%20b%3DM%2Ecall%28b%29%2C%22finite%22%3D%3Db%3F%21Y%5Bz%5D%28%2Ba%29%3A%22array%22%3D%3Db%3Fa%20instanceof%20Array%3A%22null%22%3D%3Db%26%26null%3D%3D%3Da%7C%7Cb%3D%3Dtypeof%20a%26%26null%21%3D%3Da%7C%7C%22object%22%3D%3Db%26%26a%3D%3D%3DObject%28a%29%7C%7C%22array%22%3D%3Db%26%26Array%2EisArray%26%26Array%2EisArray%28a%29%7C%7CW%2Ecall%28a%29%2Eslice%288%2C%2D1%29%2EtoLowerCase%28%29%3D%3Db%7D%2Cc%2Eangle%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%2Cg%29%7Bif%28null%3D%3Df%29%7Bvar%20h%3Da%2Dd%2Ci%3Db%2De%3Breturn%20h%7C%7Ci%3F%28180%2B180%2AN%2Eatan2%28%2Di%2C%2Dh%29%2FS%2B360%29%25360%3A0%7Dreturn%20c%2Eangle%28a%2Cb%2Cf%2Cg%29%2Dc%2Eangle%28d%2Ce%2Cf%2Cg%29%7D%2Cc%2Erad%3Dfunction%28a%29%7Breturn%20a%25360%2AS%2F180%7D%2Cc%2Edeg%3Dfunction%28a%29%7Breturn%20180%2Aa%2FS%25360%7D%2Cc%2EsnapTo%3Dfunction%28a%2Cb%2Cd%29%7Bif%28d%3Dc%2Eis%28d%2C%22finite%22%29%3Fd%3A10%2Cc%2Eis%28a%2CV%29%29%7Bfor%28var%20e%3Da%2Elength%3Be%2D%2D%3B%29if%28Q%28a%5Be%5D%2Db%29%3C%3Dd%29return%20a%5Be%5D%7Delse%7Ba%3D%2Ba%3Bvar%20f%3Db%25a%3Bif%28d%3Ef%29return%20b%2Df%3Bif%28f%3Ea%2Dd%29return%20b%2Df%2Ba%7Dreturn%20b%7D%2Cc%2EcreateUUID%3Dfunction%28a%2Cb%29%7Breturn%20function%28%29%7Breturn%22xxxxxxxx%2Dxxxx%2D4xxx%2Dyxxx%2Dxxxxxxxxxxxx%22%2Ereplace%28a%2Cb%29%2EtoUpperCase%28%29%7D%7D%28%2F%5Bxy%5D%2Fg%2Cfunction%28a%29%7Bvar%20b%3D0%7C16%2AN%2Erandom%28%29%2Cc%3D%22x%22%3D%3Da%3Fb%3A8%7C3%26b%3Breturn%20c%2EtoString%2816%29%7D%29%2Cc%2EsetWindow%3Dfunction%28a%29%7Bb%28%22raphael%2EsetWindow%22%2Cc%2CA%2Ewin%2Ca%29%2CA%2Ewin%3Da%2CA%2Edoc%3DA%2Ewin%2Edocument%2Cc%2E%5Fengine%2EinitWin%26%26c%2E%5Fengine%2EinitWin%28A%2Ewin%29%7D%3Bvar%20ub%3Dfunction%28a%29%7Bif%28c%2Evml%29%7Bvar%20b%2Cd%3D%2F%5E%5Cs%2B%7C%5Cs%2B%24%2Fg%3Btry%7Bvar%20e%3Dnew%20ActiveXObject%28%22htmlfile%22%29%3Be%2Ewrite%28%22%3Cbody%3E%22%29%2Ce%2Eclose%28%29%2Cb%3De%2Ebody%7Dcatch%28g%29%7Bb%3DcreatePopup%28%29%2Edocument%2Ebody%7Dvar%20h%3Db%2EcreateTextRange%28%29%3Bub%3Df%28function%28a%29%7Btry%7Bb%2Estyle%2Ecolor%3DI%28a%29%2Ereplace%28d%2CG%29%3Bvar%20c%3Dh%2EqueryCommandValue%28%22ForeColor%22%29%3Breturn%20c%3D%28255%26c%29%3C%3C16%7C65280%26c%7C%2816711680%26c%29%3E%3E%3E16%2C%22%23%22%2B%28%22000000%22%2Bc%2EtoString%2816%29%29%2Eslice%28%2D6%29%7Dcatch%28e%29%7Breturn%22none%22%7D%7D%29%7Delse%7Bvar%20i%3DA%2Edoc%2EcreateElement%28%22i%22%29%3Bi%2Etitle%3D%22Rapha%C3%ABl%20Colour%20Picker%22%2Ci%2Estyle%2Edisplay%3D%22none%22%2CA%2Edoc%2Ebody%2EappendChild%28i%29%2Cub%3Df%28function%28a%29%7Breturn%20i%2Estyle%2Ecolor%3Da%2CA%2Edoc%2EdefaultView%2EgetComputedStyle%28i%2CG%29%2EgetPropertyValue%28%22color%22%29%7D%29%7Dreturn%20ub%28a%29%7D%2Cvb%3Dfunction%28%29%7Breturn%22hsb%28%22%2B%5Bthis%2Eh%2Cthis%2Es%2Cthis%2Eb%5D%2B%22%29%22%7D%2Cwb%3Dfunction%28%29%7Breturn%22hsl%28%22%2B%5Bthis%2Eh%2Cthis%2Es%2Cthis%2El%5D%2B%22%29%22%7D%2Cxb%3Dfunction%28%29%7Breturn%20this%2Ehex%7D%2Cyb%3Dfunction%28a%2Cb%2Cd%29%7Bif%28null%3D%3Db%26%26c%2Eis%28a%2C%22object%22%29%26%26%22r%22in%20a%26%26%22g%22in%20a%26%26%22b%22in%20a%26%26%28d%3Da%2Eb%2Cb%3Da%2Eg%2Ca%3Da%2Er%29%2Cnull%3D%3Db%26%26c%2Eis%28a%2CU%29%29%7Bvar%20e%3Dc%2EgetRGB%28a%29%3Ba%3De%2Er%2Cb%3De%2Eg%2Cd%3De%2Eb%7Dreturn%28a%3E1%7C%7Cb%3E1%7C%7Cd%3E1%29%26%26%28a%2F%3D255%2Cb%2F%3D255%2Cd%2F%3D255%29%2C%5Ba%2Cb%2Cd%5D%7D%2Czb%3Dfunction%28a%2Cb%2Cd%2Ce%29%7Ba%2A%3D255%2Cb%2A%3D255%2Cd%2A%3D255%3Bvar%20f%3D%7Br%3Aa%2Cg%3Ab%2Cb%3Ad%2Chex%3Ac%2Ergb%28a%2Cb%2Cd%29%2CtoString%3Axb%7D%3Breturn%20c%2Eis%28e%2C%22finite%22%29%26%26%28f%2Eopacity%3De%29%2Cf%7D%3Bc%2Ecolor%3Dfunction%28a%29%7Bvar%20b%3Breturn%20c%2Eis%28a%2C%22object%22%29%26%26%22h%22in%20a%26%26%22s%22in%20a%26%26%22b%22in%20a%3F%28b%3Dc%2Ehsb2rgb%28a%29%2Ca%2Er%3Db%2Er%2Ca%2Eg%3Db%2Eg%2Ca%2Eb%3Db%2Eb%2Ca%2Ehex%3Db%2Ehex%29%3Ac%2Eis%28a%2C%22object%22%29%26%26%22h%22in%20a%26%26%22s%22in%20a%26%26%22l%22in%20a%3F%28b%3Dc%2Ehsl2rgb%28a%29%2Ca%2Er%3Db%2Er%2Ca%2Eg%3Db%2Eg%2Ca%2Eb%3Db%2Eb%2Ca%2Ehex%3Db%2Ehex%29%3A%28c%2Eis%28a%2C%22string%22%29%26%26%28a%3Dc%2EgetRGB%28a%29%29%2Cc%2Eis%28a%2C%22object%22%29%26%26%22r%22in%20a%26%26%22g%22in%20a%26%26%22b%22in%20a%3F%28b%3Dc%2Ergb2hsl%28a%29%2Ca%2Eh%3Db%2Eh%2Ca%2Es%3Db%2Es%2Ca%2El%3Db%2El%2Cb%3Dc%2Ergb2hsb%28a%29%2Ca%2Ev%3Db%2Eb%29%3A%28a%3D%7Bhex%3A%22none%22%7D%2Ca%2Er%3Da%2Eg%3Da%2Eb%3Da%2Eh%3Da%2Es%3Da%2Ev%3Da%2El%3D%2D1%29%29%2Ca%2EtoString%3Dxb%2Ca%7D%2Cc%2Ehsb2rgb%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Bthis%2Eis%28a%2C%22object%22%29%26%26%22h%22in%20a%26%26%22s%22in%20a%26%26%22b%22in%20a%26%26%28c%3Da%2Eb%2Cb%3Da%2Es%2Ca%3Da%2Eh%2Cd%3Da%2Eo%29%2Ca%2A%3D360%3Bvar%20e%2Cf%2Cg%2Ch%2Ci%3Breturn%20a%3Da%25360%2F60%2Ci%3Dc%2Ab%2Ch%3Di%2A%281%2DQ%28a%252%2D1%29%29%2Ce%3Df%3Dg%3Dc%2Di%2Ca%3D%7E%7Ea%2Ce%2B%3D%5Bi%2Ch%2C0%2C0%2Ch%2Ci%5D%5Ba%5D%2Cf%2B%3D%5Bh%2Ci%2Ci%2Ch%2C0%2C0%5D%5Ba%5D%2Cg%2B%3D%5B0%2C0%2Ch%2Ci%2Ci%2Ch%5D%5Ba%5D%2Czb%28e%2Cf%2Cg%2Cd%29%7D%2Cc%2Ehsl2rgb%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Bthis%2Eis%28a%2C%22object%22%29%26%26%22h%22in%20a%26%26%22s%22in%20a%26%26%22l%22in%20a%26%26%28c%3Da%2El%2Cb%3Da%2Es%2Ca%3Da%2Eh%29%2C%28a%3E1%7C%7Cb%3E1%7C%7Cc%3E1%29%26%26%28a%2F%3D360%2Cb%2F%3D100%2Cc%2F%3D100%29%2Ca%2A%3D360%3Bvar%20e%2Cf%2Cg%2Ch%2Ci%3Breturn%20a%3Da%25360%2F60%2Ci%3D2%2Ab%2A%28%2E5%3Ec%3Fc%3A1%2Dc%29%2Ch%3Di%2A%281%2DQ%28a%252%2D1%29%29%2Ce%3Df%3Dg%3Dc%2Di%2F2%2Ca%3D%7E%7Ea%2Ce%2B%3D%5Bi%2Ch%2C0%2C0%2Ch%2Ci%5D%5Ba%5D%2Cf%2B%3D%5Bh%2Ci%2Ci%2Ch%2C0%2C0%5D%5Ba%5D%2Cg%2B%3D%5B0%2C0%2Ch%2Ci%2Ci%2Ch%5D%5Ba%5D%2Czb%28e%2Cf%2Cg%2Cd%29%7D%2Cc%2Ergb2hsb%3Dfunction%28a%2Cb%2Cc%29%7Bc%3Dyb%28a%2Cb%2Cc%29%2Ca%3Dc%5B0%5D%2Cb%3Dc%5B1%5D%2Cc%3Dc%5B2%5D%3Bvar%20d%2Ce%2Cf%2Cg%3Breturn%20f%3DO%28a%2Cb%2Cc%29%2Cg%3Df%2DP%28a%2Cb%2Cc%29%2Cd%3D0%3D%3Dg%3Fnull%3Af%3D%3Da%3F%28b%2Dc%29%2Fg%3Af%3D%3Db%3F%28c%2Da%29%2Fg%2B2%3A%28a%2Db%29%2Fg%2B4%2Cd%3D60%2A%28%28d%2B360%29%256%29%2F360%2Ce%3D0%3D%3Dg%3F0%3Ag%2Ff%2C%7Bh%3Ad%2Cs%3Ae%2Cb%3Af%2CtoString%3Avb%7D%7D%2Cc%2Ergb2hsl%3Dfunction%28a%2Cb%2Cc%29%7Bc%3Dyb%28a%2Cb%2Cc%29%2Ca%3Dc%5B0%5D%2Cb%3Dc%5B1%5D%2Cc%3Dc%5B2%5D%3Bvar%20d%2Ce%2Cf%2Cg%2Ch%2Ci%3Breturn%20g%3DO%28a%2Cb%2Cc%29%2Ch%3DP%28a%2Cb%2Cc%29%2Ci%3Dg%2Dh%2Cd%3D0%3D%3Di%3Fnull%3Ag%3D%3Da%3F%28b%2Dc%29%2Fi%3Ag%3D%3Db%3F%28c%2Da%29%2Fi%2B2%3A%28a%2Db%29%2Fi%2B4%2Cd%3D60%2A%28%28d%2B360%29%256%29%2F360%2Cf%3D%28g%2Bh%29%2F2%2Ce%3D0%3D%3Di%3F0%3A%2E5%3Ef%3Fi%2F%282%2Af%29%3Ai%2F%282%2D2%2Af%29%2C%7Bh%3Ad%2Cs%3Ae%2Cl%3Af%2CtoString%3Awb%7D%7D%2Cc%2E%5Fpath2string%3Dfunction%28%29%7Breturn%20this%2Ejoin%28%22%2C%22%29%2Ereplace%28gb%2C%22%241%22%29%7D%2Cc%2E%5Fpreload%3Dfunction%28a%2Cb%29%7Bvar%20c%3DA%2Edoc%2EcreateElement%28%22img%22%29%3Bc%2Estyle%2EcssText%3D%22position%3Aabsolute%3Bleft%3A%2D9999em%3Btop%3A%2D9999em%22%2Cc%2Eonload%3Dfunction%28%29%7Bb%2Ecall%28this%29%2Cthis%2Eonload%3Dnull%2CA%2Edoc%2Ebody%2EremoveChild%28this%29%7D%2Cc%2Eonerror%3Dfunction%28%29%7BA%2Edoc%2Ebody%2EremoveChild%28this%29%7D%2CA%2Edoc%2Ebody%2EappendChild%28c%29%2Cc%2Esrc%3Da%7D%2Cc%2EgetRGB%3Df%28function%28a%29%7Bif%28%21a%7C%7C%28a%3DI%28a%29%29%2EindexOf%28%22%2D%22%29%2B1%29return%7Br%3A%2D1%2Cg%3A%2D1%2Cb%3A%2D1%2Chex%3A%22none%22%2Cerror%3A1%2CtoString%3Ag%7D%3Bif%28%22none%22%3D%3Da%29return%7Br%3A%2D1%2Cg%3A%2D1%2Cb%3A%2D1%2Chex%3A%22none%22%2CtoString%3Ag%7D%3B%21%28fb%5Bz%5D%28a%2EtoLowerCase%28%29%2Esubstring%280%2C2%29%29%7C%7C%22%23%22%3D%3Da%2EcharAt%28%29%29%26%26%28a%3Dub%28a%29%29%3Bvar%20b%2Cd%2Ce%2Cf%2Ch%2Ci%2Cj%3Da%2Ematch%28X%29%3Breturn%20j%3F%28j%5B2%5D%26%26%28e%3Dab%28j%5B2%5D%2Esubstring%285%29%2C16%29%2Cd%3Dab%28j%5B2%5D%2Esubstring%283%2C5%29%2C16%29%2Cb%3Dab%28j%5B2%5D%2Esubstring%281%2C3%29%2C16%29%29%2Cj%5B3%5D%26%26%28e%3Dab%28%28h%3Dj%5B3%5D%2EcharAt%283%29%29%2Bh%2C16%29%2Cd%3Dab%28%28h%3Dj%5B3%5D%2EcharAt%282%29%29%2Bh%2C16%29%2Cb%3Dab%28%28h%3Dj%5B3%5D%2EcharAt%281%29%29%2Bh%2C16%29%29%2Cj%5B4%5D%26%26%28i%3Dj%5B4%5D%5BJ%5D%28eb%29%2Cb%3D%5F%28i%5B0%5D%29%2C%22%25%22%3D%3Di%5B0%5D%2Eslice%28%2D1%29%26%26%28b%2A%3D2%2E55%29%2Cd%3D%5F%28i%5B1%5D%29%2C%22%25%22%3D%3Di%5B1%5D%2Eslice%28%2D1%29%26%26%28d%2A%3D2%2E55%29%2Ce%3D%5F%28i%5B2%5D%29%2C%22%25%22%3D%3Di%5B2%5D%2Eslice%28%2D1%29%26%26%28e%2A%3D2%2E55%29%2C%22rgba%22%3D%3Dj%5B1%5D%2EtoLowerCase%28%29%2Eslice%280%2C4%29%26%26%28f%3D%5F%28i%5B3%5D%29%29%2Ci%5B3%5D%26%26%22%25%22%3D%3Di%5B3%5D%2Eslice%28%2D1%29%26%26%28f%2F%3D100%29%29%2Cj%5B5%5D%3F%28i%3Dj%5B5%5D%5BJ%5D%28eb%29%2Cb%3D%5F%28i%5B0%5D%29%2C%22%25%22%3D%3Di%5B0%5D%2Eslice%28%2D1%29%26%26%28b%2A%3D2%2E55%29%2Cd%3D%5F%28i%5B1%5D%29%2C%22%25%22%3D%3Di%5B1%5D%2Eslice%28%2D1%29%26%26%28d%2A%3D2%2E55%29%2Ce%3D%5F%28i%5B2%5D%29%2C%22%25%22%3D%3Di%5B2%5D%2Eslice%28%2D1%29%26%26%28e%2A%3D2%2E55%29%2C%28%22deg%22%3D%3Di%5B0%5D%2Eslice%28%2D3%29%7C%7C%22%C2%B0%22%3D%3Di%5B0%5D%2Eslice%28%2D1%29%29%26%26%28b%2F%3D360%29%2C%22hsba%22%3D%3Dj%5B1%5D%2EtoLowerCase%28%29%2Eslice%280%2C4%29%26%26%28f%3D%5F%28i%5B3%5D%29%29%2Ci%5B3%5D%26%26%22%25%22%3D%3Di%5B3%5D%2Eslice%28%2D1%29%26%26%28f%2F%3D100%29%2Cc%2Ehsb2rgb%28b%2Cd%2Ce%2Cf%29%29%3Aj%5B6%5D%3F%28i%3Dj%5B6%5D%5BJ%5D%28eb%29%2Cb%3D%5F%28i%5B0%5D%29%2C%22%25%22%3D%3Di%5B0%5D%2Eslice%28%2D1%29%26%26%28b%2A%3D2%2E55%29%2Cd%3D%5F%28i%5B1%5D%29%2C%22%25%22%3D%3Di%5B1%5D%2Eslice%28%2D1%29%26%26%28d%2A%3D2%2E55%29%2Ce%3D%5F%28i%5B2%5D%29%2C%22%25%22%3D%3Di%5B2%5D%2Eslice%28%2D1%29%26%26%28e%2A%3D2%2E55%29%2C%28%22deg%22%3D%3Di%5B0%5D%2Eslice%28%2D3%29%7C%7C%22%C2%B0%22%3D%3Di%5B0%5D%2Eslice%28%2D1%29%29%26%26%28b%2F%3D360%29%2C%22hsla%22%3D%3Dj%5B1%5D%2EtoLowerCase%28%29%2Eslice%280%2C4%29%26%26%28f%3D%5F%28i%5B3%5D%29%29%2Ci%5B3%5D%26%26%22%25%22%3D%3Di%5B3%5D%2Eslice%28%2D1%29%26%26%28f%2F%3D100%29%2Cc%2Ehsl2rgb%28b%2Cd%2Ce%2Cf%29%29%3A%28j%3D%7Br%3Ab%2Cg%3Ad%2Cb%3Ae%2CtoString%3Ag%7D%2Cj%2Ehex%3D%22%23%22%2B%2816777216%7Ce%7Cd%3C%3C8%7Cb%3C%3C16%29%2EtoString%2816%29%2Eslice%281%29%2Cc%2Eis%28f%2C%22finite%22%29%26%26%28j%2Eopacity%3Df%29%2Cj%29%29%3A%7Br%3A%2D1%2Cg%3A%2D1%2Cb%3A%2D1%2Chex%3A%22none%22%2Cerror%3A1%2CtoString%3Ag%7D%7D%2Cc%29%2Cc%2Ehsb%3Df%28function%28a%2Cb%2Cd%29%7Breturn%20c%2Ehsb2rgb%28a%2Cb%2Cd%29%2Ehex%7D%29%2Cc%2Ehsl%3Df%28function%28a%2Cb%2Cd%29%7Breturn%20c%2Ehsl2rgb%28a%2Cb%2Cd%29%2Ehex%7D%29%2Cc%2Ergb%3Df%28function%28a%2Cb%2Cc%29%7Breturn%22%23%22%2B%2816777216%7Cc%7Cb%3C%3C8%7Ca%3C%3C16%29%2EtoString%2816%29%2Eslice%281%29%7D%29%2Cc%2EgetColor%3Dfunction%28a%29%7Bvar%20b%3Dthis%2EgetColor%2Estart%3Dthis%2EgetColor%2Estart%7C%7C%7Bh%3A0%2Cs%3A1%2Cb%3Aa%7C%7C%2E75%7D%2Cc%3Dthis%2Ehsb2rgb%28b%2Eh%2Cb%2Es%2Cb%2Eb%29%3Breturn%20b%2Eh%2B%3D%2E075%2Cb%2Eh%3E1%26%26%28b%2Eh%3D0%2Cb%2Es%2D%3D%2E2%2Cb%2Es%3C%3D0%26%26%28this%2EgetColor%2Estart%3D%7Bh%3A0%2Cs%3A1%2Cb%3Ab%2Eb%7D%29%29%2Cc%2Ehex%7D%2Cc%2EgetColor%2Ereset%3Dfunction%28%29%7Bdelete%20this%2Estart%7D%2Cc%2EparsePathString%3Dfunction%28a%29%7Bif%28%21a%29return%20null%3Bvar%20b%3DAb%28a%29%3Bif%28b%2Earr%29return%20Cb%28b%2Earr%29%3Bvar%20d%3D%7Ba%3A7%2Cc%3A6%2Ch%3A1%2Cl%3A2%2Cm%3A2%2Cr%3A4%2Cq%3A4%2Cs%3A4%2Ct%3A2%2Cv%3A1%2Cz%3A0%7D%2Ce%3D%5B%5D%3Breturn%20c%2Eis%28a%2CV%29%26%26c%2Eis%28a%5B0%5D%2CV%29%26%26%28e%3DCb%28a%29%29%2Ce%2Elength%7C%7CI%28a%29%2Ereplace%28hb%2Cfunction%28a%2Cb%2Cc%29%7Bvar%20f%3D%5B%5D%2Cg%3Db%2EtoLowerCase%28%29%3Bif%28c%2Ereplace%28jb%2Cfunction%28a%2Cb%29%7Bb%26%26f%2Epush%28%2Bb%29%7D%29%2C%22m%22%3D%3Dg%26%26f%2Elength%3E2%26%26%28e%2Epush%28%5Bb%5D%5BE%5D%28f%2Esplice%280%2C2%29%29%29%2Cg%3D%22l%22%2Cb%3D%22m%22%3D%3Db%3F%22l%22%3A%22L%22%29%2C%22r%22%3D%3Dg%29e%2Epush%28%5Bb%5D%5BE%5D%28f%29%29%3Belse%20for%28%3Bf%2Elength%3E%3Dd%5Bg%5D%26%26%28e%2Epush%28%5Bb%5D%5BE%5D%28f%2Esplice%280%2Cd%5Bg%5D%29%29%29%2Cd%5Bg%5D%29%3B%29%3B%7D%29%2Ce%2EtoString%3Dc%2E%5Fpath2string%2Cb%2Earr%3DCb%28e%29%2Ce%7D%2Cc%2EparseTransformString%3Df%28function%28a%29%7Bif%28%21a%29return%20null%3Bvar%20b%3D%5B%5D%3Breturn%20c%2Eis%28a%2CV%29%26%26c%2Eis%28a%5B0%5D%2CV%29%26%26%28b%3DCb%28a%29%29%2Cb%2Elength%7C%7CI%28a%29%2Ereplace%28ib%2Cfunction%28a%2Cc%2Cd%29%7Bvar%20e%3D%5B%5D%3BM%2Ecall%28c%29%2Cd%2Ereplace%28jb%2Cfunction%28a%2Cb%29%7Bb%26%26e%2Epush%28%2Bb%29%7D%29%2Cb%2Epush%28%5Bc%5D%5BE%5D%28e%29%29%7D%29%2Cb%2EtoString%3Dc%2E%5Fpath2string%2Cb%7D%29%3Bvar%20Ab%3Dfunction%28a%29%7Bvar%20b%3DAb%2Eps%3DAb%2Eps%7C%7C%7B%7D%3Breturn%20b%5Ba%5D%3Fb%5Ba%5D%2Esleep%3D100%3Ab%5Ba%5D%3D%7Bsleep%3A100%7D%2CsetTimeout%28function%28%29%7Bfor%28var%20c%20in%20b%29b%5Bz%5D%28c%29%26%26c%21%3Da%26%26%28b%5Bc%5D%2Esleep%2D%2D%2C%21b%5Bc%5D%2Esleep%26%26delete%20b%5Bc%5D%29%7D%29%2Cb%5Ba%5D%7D%3Bc%2EfindDotsAtSegment%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%29%7Bvar%20j%3D1%2Di%2Ck%3DR%28j%2C3%29%2Cl%3DR%28j%2C2%29%2Cm%3Di%2Ai%2Cn%3Dm%2Ai%2Co%3Dk%2Aa%2B3%2Al%2Ai%2Ac%2B3%2Aj%2Ai%2Ai%2Ae%2Bn%2Ag%2Cp%3Dk%2Ab%2B3%2Al%2Ai%2Ad%2B3%2Aj%2Ai%2Ai%2Af%2Bn%2Ah%2Cq%3Da%2B2%2Ai%2A%28c%2Da%29%2Bm%2A%28e%2D2%2Ac%2Ba%29%2Cr%3Db%2B2%2Ai%2A%28d%2Db%29%2Bm%2A%28f%2D2%2Ad%2Bb%29%2Cs%3Dc%2B2%2Ai%2A%28e%2Dc%29%2Bm%2A%28g%2D2%2Ae%2Bc%29%2Ct%3Dd%2B2%2Ai%2A%28f%2Dd%29%2Bm%2A%28h%2D2%2Af%2Bd%29%2Cu%3Dj%2Aa%2Bi%2Ac%2Cv%3Dj%2Ab%2Bi%2Ad%2Cw%3Dj%2Ae%2Bi%2Ag%2Cx%3Dj%2Af%2Bi%2Ah%2Cy%3D90%2D180%2AN%2Eatan2%28q%2Ds%2Cr%2Dt%29%2FS%3Breturn%28q%3Es%7C%7Ct%3Er%29%26%26%28y%2B%3D180%29%2C%7Bx%3Ao%2Cy%3Ap%2Cm%3A%7Bx%3Aq%2Cy%3Ar%7D%2Cn%3A%7Bx%3As%2Cy%3At%7D%2Cstart%3A%7Bx%3Au%2Cy%3Av%7D%2Cend%3A%7Bx%3Aw%2Cy%3Ax%7D%2Calpha%3Ay%7D%7D%2Cc%2EbezierBBox%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%29%7Bc%2Eis%28a%2C%22array%22%29%7C%7C%28a%3D%5Ba%2Cb%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%5D%29%3Bvar%20j%3DJb%2Eapply%28null%2Ca%29%3Breturn%7Bx%3Aj%2Emin%2Ex%2Cy%3Aj%2Emin%2Ey%2Cx2%3Aj%2Emax%2Ex%2Cy2%3Aj%2Emax%2Ey%2Cwidth%3Aj%2Emax%2Ex%2Dj%2Emin%2Ex%2Cheight%3Aj%2Emax%2Ey%2Dj%2Emin%2Ey%7D%7D%2Cc%2EisPointInsideBBox%3Dfunction%28a%2Cb%2Cc%29%7Breturn%20b%3E%3Da%2Ex%26%26b%3C%3Da%2Ex2%26%26c%3E%3Da%2Ey%26%26c%3C%3Da%2Ey2%7D%2Cc%2EisBBoxIntersect%3Dfunction%28a%2Cb%29%7Bvar%20d%3Dc%2EisPointInsideBBox%3Breturn%20d%28b%2Ca%2Ex%2Ca%2Ey%29%7C%7Cd%28b%2Ca%2Ex2%2Ca%2Ey%29%7C%7Cd%28b%2Ca%2Ex%2Ca%2Ey2%29%7C%7Cd%28b%2Ca%2Ex2%2Ca%2Ey2%29%7C%7Cd%28a%2Cb%2Ex%2Cb%2Ey%29%7C%7Cd%28a%2Cb%2Ex2%2Cb%2Ey%29%7C%7Cd%28a%2Cb%2Ex%2Cb%2Ey2%29%7C%7Cd%28a%2Cb%2Ex2%2Cb%2Ey2%29%7C%7C%28a%2Ex%3Cb%2Ex2%26%26a%2Ex%3Eb%2Ex%7C%7Cb%2Ex%3Ca%2Ex2%26%26b%2Ex%3Ea%2Ex%29%26%26%28a%2Ey%3Cb%2Ey2%26%26a%2Ey%3Eb%2Ey%7C%7Cb%2Ey%3Ca%2Ey2%26%26b%2Ey%3Ea%2Ey%29%7D%2Cc%2EpathIntersection%3Dfunction%28a%2Cb%29%7Breturn%20n%28a%2Cb%29%7D%2Cc%2EpathIntersectionNumber%3Dfunction%28a%2Cb%29%7Breturn%20n%28a%2Cb%2C1%29%7D%2Cc%2EisPointInsidePath%3Dfunction%28a%2Cb%2Cd%29%7Bvar%20e%3Dc%2EpathBBox%28a%29%3Breturn%20c%2EisPointInsideBBox%28e%2Cb%2Cd%29%26%261%3D%3Dn%28a%2C%5B%5B%22M%22%2Cb%2Cd%5D%2C%5B%22H%22%2Ce%2Ex2%2B10%5D%5D%2C1%29%252%7D%2Cc%2E%5FremovedFactory%3Dfunction%28a%29%7Breturn%20function%28%29%7Bb%28%22raphael%2Elog%22%2Cnull%2C%22Rapha%C3%ABl%3A%20you%20are%20calling%20to%20method%20%E2%80%9C%22%2Ba%2B%22%E2%80%9D%20of%20removed%20object%22%2Ca%29%7D%7D%3Bvar%20Bb%3Dc%2EpathBBox%3Dfunction%28a%29%7Bvar%20b%3DAb%28a%29%3Bif%28b%2Ebbox%29return%20d%28b%2Ebbox%29%3Bif%28%21a%29return%7Bx%3A0%2Cy%3A0%2Cwidth%3A0%2Cheight%3A0%2Cx2%3A0%2Cy2%3A0%7D%3Ba%3DKb%28a%29%3Bfor%28var%20c%2Ce%3D0%2Cf%3D0%2Cg%3D%5B%5D%2Ch%3D%5B%5D%2Ci%3D0%2Cj%3Da%2Elength%3Bj%3Ei%3Bi%2B%2B%29if%28c%3Da%5Bi%5D%2C%22M%22%3D%3Dc%5B0%5D%29e%3Dc%5B1%5D%2Cf%3Dc%5B2%5D%2Cg%2Epush%28e%29%2Ch%2Epush%28f%29%3Belse%7Bvar%20k%3DJb%28e%2Cf%2Cc%5B1%5D%2Cc%5B2%5D%2Cc%5B3%5D%2Cc%5B4%5D%2Cc%5B5%5D%2Cc%5B6%5D%29%3Bg%3Dg%5BE%5D%28k%2Emin%2Ex%2Ck%2Emax%2Ex%29%2Ch%3Dh%5BE%5D%28k%2Emin%2Ey%2Ck%2Emax%2Ey%29%2Ce%3Dc%5B5%5D%2Cf%3Dc%5B6%5D%7Dvar%20l%3DP%5BD%5D%280%2Cg%29%2Cm%3DP%5BD%5D%280%2Ch%29%2Cn%3DO%5BD%5D%280%2Cg%29%2Co%3DO%5BD%5D%280%2Ch%29%2Cp%3Dn%2Dl%2Cq%3Do%2Dm%2Cr%3D%7Bx%3Al%2Cy%3Am%2Cx2%3An%2Cy2%3Ao%2Cwidth%3Ap%2Cheight%3Aq%2Ccx%3Al%2Bp%2F2%2Ccy%3Am%2Bq%2F2%7D%3Breturn%20b%2Ebbox%3Dd%28r%29%2Cr%7D%2CCb%3Dfunction%28a%29%7Bvar%20b%3Dd%28a%29%3Breturn%20b%2EtoString%3Dc%2E%5Fpath2string%2Cb%7D%2CDb%3Dc%2E%5FpathToRelative%3Dfunction%28a%29%7Bvar%20b%3DAb%28a%29%3Bif%28b%2Erel%29return%20Cb%28b%2Erel%29%3Bc%2Eis%28a%2CV%29%26%26c%2Eis%28a%26%26a%5B0%5D%2CV%29%7C%7C%28a%3Dc%2EparsePathString%28a%29%29%3Bvar%20d%3D%5B%5D%2Ce%3D0%2Cf%3D0%2Cg%3D0%2Ch%3D0%2Ci%3D0%3B%22M%22%3D%3Da%5B0%5D%5B0%5D%26%26%28e%3Da%5B0%5D%5B1%5D%2Cf%3Da%5B0%5D%5B2%5D%2Cg%3De%2Ch%3Df%2Ci%2B%2B%2Cd%2Epush%28%5B%22M%22%2Ce%2Cf%5D%29%29%3Bfor%28var%20j%3Di%2Ck%3Da%2Elength%3Bk%3Ej%3Bj%2B%2B%29%7Bvar%20l%3Dd%5Bj%5D%3D%5B%5D%2Cm%3Da%5Bj%5D%3Bif%28m%5B0%5D%21%3DM%2Ecall%28m%5B0%5D%29%29switch%28l%5B0%5D%3DM%2Ecall%28m%5B0%5D%29%2Cl%5B0%5D%29%7Bcase%22a%22%3Al%5B1%5D%3Dm%5B1%5D%2Cl%5B2%5D%3Dm%5B2%5D%2Cl%5B3%5D%3Dm%5B3%5D%2Cl%5B4%5D%3Dm%5B4%5D%2Cl%5B5%5D%3Dm%5B5%5D%2Cl%5B6%5D%3D%2B%28m%5B6%5D%2De%29%2EtoFixed%283%29%2Cl%5B7%5D%3D%2B%28m%5B7%5D%2Df%29%2EtoFixed%283%29%3Bbreak%3Bcase%22v%22%3Al%5B1%5D%3D%2B%28m%5B1%5D%2Df%29%2EtoFixed%283%29%3Bbreak%3Bcase%22m%22%3Ag%3Dm%5B1%5D%2Ch%3Dm%5B2%5D%3Bdefault%3Afor%28var%20n%3D1%2Co%3Dm%2Elength%3Bo%3En%3Bn%2B%2B%29l%5Bn%5D%3D%2B%28m%5Bn%5D%2D%28n%252%3Fe%3Af%29%29%2EtoFixed%283%29%7Delse%7Bl%3Dd%5Bj%5D%3D%5B%5D%2C%22m%22%3D%3Dm%5B0%5D%26%26%28g%3Dm%5B1%5D%2Be%2Ch%3Dm%5B2%5D%2Bf%29%3Bfor%28var%20p%3D0%2Cq%3Dm%2Elength%3Bq%3Ep%3Bp%2B%2B%29d%5Bj%5D%5Bp%5D%3Dm%5Bp%5D%7Dvar%20r%3Dd%5Bj%5D%2Elength%3Bswitch%28d%5Bj%5D%5B0%5D%29%7Bcase%22z%22%3Ae%3Dg%2Cf%3Dh%3Bbreak%3Bcase%22h%22%3Ae%2B%3D%2Bd%5Bj%5D%5Br%2D1%5D%3Bbreak%3Bcase%22v%22%3Af%2B%3D%2Bd%5Bj%5D%5Br%2D1%5D%3Bbreak%3Bdefault%3Ae%2B%3D%2Bd%5Bj%5D%5Br%2D2%5D%2Cf%2B%3D%2Bd%5Bj%5D%5Br%2D1%5D%7D%7Dreturn%20d%2EtoString%3Dc%2E%5Fpath2string%2Cb%2Erel%3DCb%28d%29%2Cd%7D%2CEb%3Dc%2E%5FpathToAbsolute%3Dfunction%28a%29%7Bvar%20b%3DAb%28a%29%3Bif%28b%2Eabs%29return%20Cb%28b%2Eabs%29%3Bif%28c%2Eis%28a%2CV%29%26%26c%2Eis%28a%26%26a%5B0%5D%2CV%29%7C%7C%28a%3Dc%2EparsePathString%28a%29%29%2C%21a%7C%7C%21a%2Elength%29return%5B%5B%22M%22%2C0%2C0%5D%5D%3Bvar%20d%3D%5B%5D%2Ce%3D0%2Cf%3D0%2Cg%3D0%2Ci%3D0%2Cj%3D0%3B%22M%22%3D%3Da%5B0%5D%5B0%5D%26%26%28e%3D%2Ba%5B0%5D%5B1%5D%2Cf%3D%2Ba%5B0%5D%5B2%5D%2Cg%3De%2Ci%3Df%2Cj%2B%2B%2Cd%5B0%5D%3D%5B%22M%22%2Ce%2Cf%5D%29%3Bfor%28var%20k%2Cl%2Cm%3D3%3D%3Da%2Elength%26%26%22M%22%3D%3Da%5B0%5D%5B0%5D%26%26%22R%22%3D%3Da%5B1%5D%5B0%5D%2EtoUpperCase%28%29%26%26%22Z%22%3D%3Da%5B2%5D%5B0%5D%2EtoUpperCase%28%29%2Cn%3Dj%2Co%3Da%2Elength%3Bo%3En%3Bn%2B%2B%29%7Bif%28d%2Epush%28k%3D%5B%5D%29%2Cl%3Da%5Bn%5D%2Cl%5B0%5D%21%3Dbb%2Ecall%28l%5B0%5D%29%29switch%28k%5B0%5D%3Dbb%2Ecall%28l%5B0%5D%29%2Ck%5B0%5D%29%7Bcase%22A%22%3Ak%5B1%5D%3Dl%5B1%5D%2Ck%5B2%5D%3Dl%5B2%5D%2Ck%5B3%5D%3Dl%5B3%5D%2Ck%5B4%5D%3Dl%5B4%5D%2Ck%5B5%5D%3Dl%5B5%5D%2Ck%5B6%5D%3D%2B%28l%5B6%5D%2Be%29%2Ck%5B7%5D%3D%2B%28l%5B7%5D%2Bf%29%3Bbreak%3Bcase%22V%22%3Ak%5B1%5D%3D%2Bl%5B1%5D%2Bf%3Bbreak%3Bcase%22H%22%3Ak%5B1%5D%3D%2Bl%5B1%5D%2Be%3Bbreak%3Bcase%22R%22%3Afor%28var%20p%3D%5Be%2Cf%5D%5BE%5D%28l%2Eslice%281%29%29%2Cq%3D2%2Cr%3Dp%2Elength%3Br%3Eq%3Bq%2B%2B%29p%5Bq%5D%3D%2Bp%5Bq%5D%2Be%2Cp%5B%2B%2Bq%5D%3D%2Bp%5Bq%5D%2Bf%3Bd%2Epop%28%29%2Cd%3Dd%5BE%5D%28h%28p%2Cm%29%29%3Bbreak%3Bcase%22M%22%3Ag%3D%2Bl%5B1%5D%2Be%2Ci%3D%2Bl%5B2%5D%2Bf%3Bdefault%3Afor%28q%3D1%2Cr%3Dl%2Elength%3Br%3Eq%3Bq%2B%2B%29k%5Bq%5D%3D%2Bl%5Bq%5D%2B%28q%252%3Fe%3Af%29%7Delse%20if%28%22R%22%3D%3Dl%5B0%5D%29p%3D%5Be%2Cf%5D%5BE%5D%28l%2Eslice%281%29%29%2Cd%2Epop%28%29%2Cd%3Dd%5BE%5D%28h%28p%2Cm%29%29%2Ck%3D%5B%22R%22%5D%5BE%5D%28l%2Eslice%28%2D2%29%29%3Belse%20for%28var%20s%3D0%2Ct%3Dl%2Elength%3Bt%3Es%3Bs%2B%2B%29k%5Bs%5D%3Dl%5Bs%5D%3Bswitch%28k%5B0%5D%29%7Bcase%22Z%22%3Ae%3Dg%2Cf%3Di%3Bbreak%3Bcase%22H%22%3Ae%3Dk%5B1%5D%3Bbreak%3Bcase%22V%22%3Af%3Dk%5B1%5D%3Bbreak%3Bcase%22M%22%3Ag%3Dk%5Bk%2Elength%2D2%5D%2Ci%3Dk%5Bk%2Elength%2D1%5D%3Bdefault%3Ae%3Dk%5Bk%2Elength%2D2%5D%2Cf%3Dk%5Bk%2Elength%2D1%5D%7D%7Dreturn%20d%2EtoString%3Dc%2E%5Fpath2string%2Cb%2Eabs%3DCb%28d%29%2Cd%7D%2CFb%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Breturn%5Ba%2Cb%2Cc%2Cd%2Cc%2Cd%5D%7D%2CGb%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bvar%20g%3D1%2F3%2Ch%3D2%2F3%3Breturn%5Bg%2Aa%2Bh%2Ac%2Cg%2Ab%2Bh%2Ad%2Cg%2Ae%2Bh%2Ac%2Cg%2Af%2Bh%2Ad%2Ce%2Cf%5D%7D%2CHb%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cg%2Ch%2Ci%2Cj%2Ck%29%7Bvar%20l%2Cm%3D120%2AS%2F180%2Cn%3DS%2F180%2A%28%2Be%7C%7C0%29%2Co%3D%5B%5D%2Cp%3Df%28function%28a%2Cb%2Cc%29%7Bvar%20d%3Da%2AN%2Ecos%28c%29%2Db%2AN%2Esin%28c%29%2Ce%3Da%2AN%2Esin%28c%29%2Bb%2AN%2Ecos%28c%29%3Breturn%7Bx%3Ad%2Cy%3Ae%7D%7D%29%3Bif%28k%29y%3Dk%5B0%5D%2Cz%3Dk%5B1%5D%2Cw%3Dk%5B2%5D%2Cx%3Dk%5B3%5D%3Belse%7Bl%3Dp%28a%2Cb%2C%2Dn%29%2Ca%3Dl%2Ex%2Cb%3Dl%2Ey%2Cl%3Dp%28i%2Cj%2C%2Dn%29%2Ci%3Dl%2Ex%2Cj%3Dl%2Ey%3Bvar%20q%3D%28N%2Ecos%28S%2F180%2Ae%29%2CN%2Esin%28S%2F180%2Ae%29%2C%28a%2Di%29%2F2%29%2Cr%3D%28b%2Dj%29%2F2%2Cs%3Dq%2Aq%2F%28c%2Ac%29%2Br%2Ar%2F%28d%2Ad%29%3Bs%3E1%26%26%28s%3DN%2Esqrt%28s%29%2Cc%3Ds%2Ac%2Cd%3Ds%2Ad%29%3Bvar%20t%3Dc%2Ac%2Cu%3Dd%2Ad%2Cv%3D%28g%3D%3Dh%3F%2D1%3A1%29%2AN%2Esqrt%28Q%28%28t%2Au%2Dt%2Ar%2Ar%2Du%2Aq%2Aq%29%2F%28t%2Ar%2Ar%2Bu%2Aq%2Aq%29%29%29%2Cw%3Dv%2Ac%2Ar%2Fd%2B%28a%2Bi%29%2F2%2Cx%3Dv%2A%2Dd%2Aq%2Fc%2B%28b%2Bj%29%2F2%2Cy%3DN%2Easin%28%28%28b%2Dx%29%2Fd%29%2EtoFixed%289%29%29%2Cz%3DN%2Easin%28%28%28j%2Dx%29%2Fd%29%2EtoFixed%289%29%29%3By%3Dw%3Ea%3FS%2Dy%3Ay%2Cz%3Dw%3Ei%3FS%2Dz%3Az%2C0%3Ey%26%26%28y%3D2%2AS%2By%29%2C0%3Ez%26%26%28z%3D2%2AS%2Bz%29%2Ch%26%26y%3Ez%26%26%28y%2D%3D2%2AS%29%2C%21h%26%26z%3Ey%26%26%28z%2D%3D2%2AS%29%7Dvar%20A%3Dz%2Dy%3Bif%28Q%28A%29%3Em%29%7Bvar%20B%3Dz%2CC%3Di%2CD%3Dj%3Bz%3Dy%2Bm%2A%28h%26%26z%3Ey%3F1%3A%2D1%29%2Ci%3Dw%2Bc%2AN%2Ecos%28z%29%2Cj%3Dx%2Bd%2AN%2Esin%28z%29%2Co%3DHb%28i%2Cj%2Cc%2Cd%2Ce%2C0%2Ch%2CC%2CD%2C%5Bz%2CB%2Cw%2Cx%5D%29%7DA%3Dz%2Dy%3Bvar%20F%3DN%2Ecos%28y%29%2CG%3DN%2Esin%28y%29%2CH%3DN%2Ecos%28z%29%2CI%3DN%2Esin%28z%29%2CK%3DN%2Etan%28A%2F4%29%2CL%3D4%2F3%2Ac%2AK%2CM%3D4%2F3%2Ad%2AK%2CO%3D%5Ba%2Cb%5D%2CP%3D%5Ba%2BL%2AG%2Cb%2DM%2AF%5D%2CR%3D%5Bi%2BL%2AI%2Cj%2DM%2AH%5D%2CT%3D%5Bi%2Cj%5D%3Bif%28P%5B0%5D%3D2%2AO%5B0%5D%2DP%5B0%5D%2CP%5B1%5D%3D2%2AO%5B1%5D%2DP%5B1%5D%2Ck%29return%5BP%2CR%2CT%5D%5BE%5D%28o%29%3Bo%3D%5BP%2CR%2CT%5D%5BE%5D%28o%29%2Ejoin%28%29%5BJ%5D%28%22%2C%22%29%3Bfor%28var%20U%3D%5B%5D%2CV%3D0%2CW%3Do%2Elength%3BW%3EV%3BV%2B%2B%29U%5BV%5D%3DV%252%3Fp%28o%5BV%2D1%5D%2Co%5BV%5D%2Cn%29%2Ey%3Ap%28o%5BV%5D%2Co%5BV%2B1%5D%2Cn%29%2Ex%3Breturn%20U%7D%2CIb%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%29%7Bvar%20j%3D1%2Di%3Breturn%7Bx%3AR%28j%2C3%29%2Aa%2B3%2AR%28j%2C2%29%2Ai%2Ac%2B3%2Aj%2Ai%2Ai%2Ae%2BR%28i%2C3%29%2Ag%2Cy%3AR%28j%2C3%29%2Ab%2B3%2AR%28j%2C2%29%2Ai%2Ad%2B3%2Aj%2Ai%2Ai%2Af%2BR%28i%2C3%29%2Ah%7D%7D%2CJb%3Df%28function%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%29%7Bvar%20i%2Cj%3De%2D2%2Ac%2Ba%2D%28g%2D2%2Ae%2Bc%29%2Ck%3D2%2A%28c%2Da%29%2D2%2A%28e%2Dc%29%2Cl%3Da%2Dc%2Cm%3D%28%2Dk%2BN%2Esqrt%28k%2Ak%2D4%2Aj%2Al%29%29%2F2%2Fj%2Cn%3D%28%2Dk%2DN%2Esqrt%28k%2Ak%2D4%2Aj%2Al%29%29%2F2%2Fj%2Co%3D%5Bb%2Ch%5D%2Cp%3D%5Ba%2Cg%5D%3Breturn%20Q%28m%29%3E%221e12%22%26%26%28m%3D%2E5%29%2CQ%28n%29%3E%221e12%22%26%26%28n%3D%2E5%29%2Cm%3E0%26%261%3Em%26%26%28i%3DIb%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Cm%29%2Cp%2Epush%28i%2Ex%29%2Co%2Epush%28i%2Ey%29%29%2Cn%3E0%26%261%3En%26%26%28i%3DIb%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Cn%29%2Cp%2Epush%28i%2Ex%29%2Co%2Epush%28i%2Ey%29%29%2Cj%3Df%2D2%2Ad%2Bb%2D%28h%2D2%2Af%2Bd%29%2Ck%3D2%2A%28d%2Db%29%2D2%2A%28f%2Dd%29%2Cl%3Db%2Dd%2Cm%3D%28%2Dk%2BN%2Esqrt%28k%2Ak%2D4%2Aj%2Al%29%29%2F2%2Fj%2Cn%3D%28%2Dk%2DN%2Esqrt%28k%2Ak%2D4%2Aj%2Al%29%29%2F2%2Fj%2CQ%28m%29%3E%221e12%22%26%26%28m%3D%2E5%29%2CQ%28n%29%3E%221e12%22%26%26%28n%3D%2E5%29%2Cm%3E0%26%261%3Em%26%26%28i%3DIb%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Cm%29%2Cp%2Epush%28i%2Ex%29%2Co%2Epush%28i%2Ey%29%29%2Cn%3E0%26%261%3En%26%26%28i%3DIb%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Cn%29%2Cp%2Epush%28i%2Ex%29%2Co%2Epush%28i%2Ey%29%29%2C%7Bmin%3A%7Bx%3AP%5BD%5D%280%2Cp%29%2Cy%3AP%5BD%5D%280%2Co%29%7D%2Cmax%3A%7Bx%3AO%5BD%5D%280%2Cp%29%2Cy%3AO%5BD%5D%280%2Co%29%7D%7D%7D%29%2CKb%3Dc%2E%5Fpath2curve%3Df%28function%28a%2Cb%29%7Bvar%20c%3D%21b%26%26Ab%28a%29%3Bif%28%21b%26%26c%2Ecurve%29return%20Cb%28c%2Ecurve%29%3Bfor%28var%20d%3DEb%28a%29%2Ce%3Db%26%26Eb%28b%29%2Cf%3D%7Bx%3A0%2Cy%3A0%2Cbx%3A0%2Cby%3A0%2CX%3A0%2CY%3A0%2Cqx%3Anull%2Cqy%3Anull%7D%2Cg%3D%7Bx%3A0%2Cy%3A0%2Cbx%3A0%2Cby%3A0%2CX%3A0%2CY%3A0%2Cqx%3Anull%2Cqy%3Anull%7D%2Ch%3D%28function%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%3Bif%28%21a%29return%5B%22C%22%2Cb%2Ex%2Cb%2Ey%2Cb%2Ex%2Cb%2Ey%2Cb%2Ex%2Cb%2Ey%5D%3Bswitch%28%21%28a%5B0%5Din%7BT%3A1%2CQ%3A1%7D%29%26%26%28b%2Eqx%3Db%2Eqy%3Dnull%29%2Ca%5B0%5D%29%7Bcase%22M%22%3Ab%2EX%3Da%5B1%5D%2Cb%2EY%3Da%5B2%5D%3Bbreak%3Bcase%22A%22%3Aa%3D%5B%22C%22%5D%5BE%5D%28Hb%5BD%5D%280%2C%5Bb%2Ex%2Cb%2Ey%5D%5BE%5D%28a%2Eslice%281%29%29%29%29%3Bbreak%3Bcase%22S%22%3A%22C%22%3D%3Dc%7C%7C%22S%22%3D%3Dc%3F%28d%3D2%2Ab%2Ex%2Db%2Ebx%2Ce%3D2%2Ab%2Ey%2Db%2Eby%29%3A%28d%3Db%2Ex%2Ce%3Db%2Ey%29%2Ca%3D%5B%22C%22%2Cd%2Ce%5D%5BE%5D%28a%2Eslice%281%29%29%3Bbreak%3Bcase%22T%22%3A%22Q%22%3D%3Dc%7C%7C%22T%22%3D%3Dc%3F%28b%2Eqx%3D2%2Ab%2Ex%2Db%2Eqx%2Cb%2Eqy%3D2%2Ab%2Ey%2Db%2Eqy%29%3A%28b%2Eqx%3Db%2Ex%2Cb%2Eqy%3Db%2Ey%29%2Ca%3D%5B%22C%22%5D%5BE%5D%28Gb%28b%2Ex%2Cb%2Ey%2Cb%2Eqx%2Cb%2Eqy%2Ca%5B1%5D%2Ca%5B2%5D%29%29%3Bbreak%3Bcase%22Q%22%3Ab%2Eqx%3Da%5B1%5D%2Cb%2Eqy%3Da%5B2%5D%2Ca%3D%5B%22C%22%5D%5BE%5D%28Gb%28b%2Ex%2Cb%2Ey%2Ca%5B1%5D%2Ca%5B2%5D%2Ca%5B3%5D%2Ca%5B4%5D%29%29%3Bbreak%3Bcase%22L%22%3Aa%3D%5B%22C%22%5D%5BE%5D%28Fb%28b%2Ex%2Cb%2Ey%2Ca%5B1%5D%2Ca%5B2%5D%29%29%3Bbreak%3Bcase%22H%22%3Aa%3D%5B%22C%22%5D%5BE%5D%28Fb%28b%2Ex%2Cb%2Ey%2Ca%5B1%5D%2Cb%2Ey%29%29%3Bbreak%3Bcase%22V%22%3Aa%3D%5B%22C%22%5D%5BE%5D%28Fb%28b%2Ex%2Cb%2Ey%2Cb%2Ex%2Ca%5B1%5D%29%29%3Bbreak%3Bcase%22Z%22%3Aa%3D%5B%22C%22%5D%5BE%5D%28Fb%28b%2Ex%2Cb%2Ey%2Cb%2EX%2Cb%2EY%29%29%7Dreturn%20a%7D%29%2Ci%3Dfunction%28a%2Cb%29%7Bif%28a%5Bb%5D%2Elength%3E7%29%7Ba%5Bb%5D%2Eshift%28%29%3Bfor%28var%20c%3Da%5Bb%5D%3Bc%2Elength%3B%29a%2Esplice%28b%2B%2B%2C0%2C%5B%22C%22%5D%5BE%5D%28c%2Esplice%280%2C6%29%29%29%3Ba%2Esplice%28b%2C1%29%2Cl%3DO%28d%2Elength%2Ce%26%26e%2Elength%7C%7C0%29%7D%7D%2Cj%3Dfunction%28a%2Cb%2Cc%2Cf%2Cg%29%7Ba%26%26b%26%26%22M%22%3D%3Da%5Bg%5D%5B0%5D%26%26%22M%22%21%3Db%5Bg%5D%5B0%5D%26%26%28b%2Esplice%28g%2C0%2C%5B%22M%22%2Cf%2Ex%2Cf%2Ey%5D%29%2Cc%2Ebx%3D0%2Cc%2Eby%3D0%2Cc%2Ex%3Da%5Bg%5D%5B1%5D%2Cc%2Ey%3Da%5Bg%5D%5B2%5D%2Cl%3DO%28d%2Elength%2Ce%26%26e%2Elength%7C%7C0%29%29%7D%2Ck%3D0%2Cl%3DO%28d%2Elength%2Ce%26%26e%2Elength%7C%7C0%29%3Bl%3Ek%3Bk%2B%2B%29%7Bd%5Bk%5D%3Dh%28d%5Bk%5D%2Cf%29%2Ci%28d%2Ck%29%2Ce%26%26%28e%5Bk%5D%3Dh%28e%5Bk%5D%2Cg%29%29%2Ce%26%26i%28e%2Ck%29%2Cj%28d%2Ce%2Cf%2Cg%2Ck%29%2Cj%28e%2Cd%2Cg%2Cf%2Ck%29%3Bvar%20m%3Dd%5Bk%5D%2Cn%3De%26%26e%5Bk%5D%2Co%3Dm%2Elength%2Cp%3De%26%26n%2Elength%3Bf%2Ex%3Dm%5Bo%2D2%5D%2Cf%2Ey%3Dm%5Bo%2D1%5D%2Cf%2Ebx%3D%5F%28m%5Bo%2D4%5D%29%7C%7Cf%2Ex%2Cf%2Eby%3D%5F%28m%5Bo%2D3%5D%29%7C%7Cf%2Ey%2Cg%2Ebx%3De%26%26%28%5F%28n%5Bp%2D4%5D%29%7C%7Cg%2Ex%29%2Cg%2Eby%3De%26%26%28%5F%28n%5Bp%2D3%5D%29%7C%7Cg%2Ey%29%2Cg%2Ex%3De%26%26n%5Bp%2D2%5D%2Cg%2Ey%3De%26%26n%5Bp%2D1%5D%7Dreturn%20e%7C%7C%28c%2Ecurve%3DCb%28d%29%29%2Ce%3F%5Bd%2Ce%5D%3Ad%7D%2Cnull%2CCb%29%2CLb%3D%28c%2E%5FparseDots%3Df%28function%28a%29%7Bfor%28var%20b%3D%5B%5D%2Cd%3D0%2Ce%3Da%2Elength%3Be%3Ed%3Bd%2B%2B%29%7Bvar%20f%3D%7B%7D%2Cg%3Da%5Bd%5D%2Ematch%28%2F%5E%28%5B%5E%3A%5D%2A%29%3A%3F%28%5B%5Cd%5C%2E%5D%2A%29%2F%29%3Bif%28f%2Ecolor%3Dc%2EgetRGB%28g%5B1%5D%29%2Cf%2Ecolor%2Eerror%29return%20null%3Bf%2Ecolor%3Df%2Ecolor%2Ehex%2Cg%5B2%5D%26%26%28f%2Eoffset%3Dg%5B2%5D%2B%22%25%22%29%2Cb%2Epush%28f%29%7Dfor%28d%3D1%2Ce%3Db%2Elength%2D1%3Be%3Ed%3Bd%2B%2B%29if%28%21b%5Bd%5D%2Eoffset%29%7Bfor%28var%20h%3D%5F%28b%5Bd%2D1%5D%2Eoffset%7C%7C0%29%2Ci%3D0%2Cj%3Dd%2B1%3Be%3Ej%3Bj%2B%2B%29if%28b%5Bj%5D%2Eoffset%29%7Bi%3Db%5Bj%5D%2Eoffset%3Bbreak%7Di%7C%7C%28i%3D100%2Cj%3De%29%2Ci%3D%5F%28i%29%3Bfor%28var%20k%3D%28i%2Dh%29%2F%28j%2Dd%2B1%29%3Bj%3Ed%3Bd%2B%2B%29h%2B%3Dk%2Cb%5Bd%5D%2Eoffset%3Dh%2B%22%25%22%7Dreturn%20b%7D%29%2Cc%2E%5Ftear%3Dfunction%28a%2Cb%29%7Ba%3D%3Db%2Etop%26%26%28b%2Etop%3Da%2Eprev%29%2Ca%3D%3Db%2Ebottom%26%26%28b%2Ebottom%3Da%2Enext%29%2Ca%2Enext%26%26%28a%2Enext%2Eprev%3Da%2Eprev%29%2Ca%2Eprev%26%26%28a%2Eprev%2Enext%3Da%2Enext%29%7D%29%2CMb%3D%28c%2E%5Ftofront%3Dfunction%28a%2Cb%29%7Bb%2Etop%21%3D%3Da%26%26%28Lb%28a%2Cb%29%2Ca%2Enext%3Dnull%2Ca%2Eprev%3Db%2Etop%2Cb%2Etop%2Enext%3Da%2Cb%2Etop%3Da%29%7D%2Cc%2E%5Ftoback%3Dfunction%28a%2Cb%29%7Bb%2Ebottom%21%3D%3Da%26%26%28Lb%28a%2Cb%29%2Ca%2Enext%3Db%2Ebottom%2Ca%2Eprev%3Dnull%2Cb%2Ebottom%2Eprev%3Da%2Cb%2Ebottom%3Da%29%7D%2Cc%2E%5Finsertafter%3Dfunction%28a%2Cb%2Cc%29%7BLb%28a%2Cc%29%2Cb%3D%3Dc%2Etop%26%26%28c%2Etop%3Da%29%2Cb%2Enext%26%26%28b%2Enext%2Eprev%3Da%29%2Ca%2Enext%3Db%2Enext%2Ca%2Eprev%3Db%2Cb%2Enext%3Da%7D%2Cc%2E%5Finsertbefore%3Dfunction%28a%2Cb%2Cc%29%7BLb%28a%2Cc%29%2Cb%3D%3Dc%2Ebottom%26%26%28c%2Ebottom%3Da%29%2Cb%2Eprev%26%26%28b%2Eprev%2Enext%3Da%29%2Ca%2Eprev%3Db%2Eprev%2Cb%2Eprev%3Da%2Ca%2Enext%3Db%7D%2Cc%2EtoMatrix%3Dfunction%28a%2Cb%29%7Bvar%20c%3DBb%28a%29%2Cd%3D%7B%5F%3A%7Btransform%3AG%7D%2CgetBBox%3Afunction%28%29%7Breturn%20c%7D%7D%3Breturn%20Nb%28d%2Cb%29%2Cd%2Ematrix%7D%29%2CNb%3D%28c%2EtransformPath%3Dfunction%28a%2Cb%29%7Breturn%20rb%28a%2CMb%28a%2Cb%29%29%7D%2Cc%2E%5FextractTransform%3Dfunction%28a%2Cb%29%7Bif%28null%3D%3Db%29return%20a%2E%5F%2Etransform%3Bb%3DI%28b%29%2Ereplace%28%2F%5C%2E%7B3%7D%7C%5Cu2026%2Fg%2Ca%2E%5F%2Etransform%7C%7CG%29%3Bvar%20d%3Dc%2EparseTransformString%28b%29%2Ce%3D0%2Cf%3D0%2Cg%3D0%2Ch%3D1%2Ci%3D1%2Cj%3Da%2E%5F%2Ck%3Dnew%20o%3Bif%28j%2Etransform%3Dd%7C%7C%5B%5D%2Cd%29for%28var%20l%3D0%2Cm%3Dd%2Elength%3Bm%3El%3Bl%2B%2B%29%7Bvar%20n%2Cp%2Cq%2Cr%2Cs%2Ct%3Dd%5Bl%5D%2Cu%3Dt%2Elength%2Cv%3DI%28t%5B0%5D%29%2EtoLowerCase%28%29%2Cw%3Dt%5B0%5D%21%3Dv%2Cx%3Dw%3Fk%2Einvert%28%29%3A0%3B%22t%22%3D%3Dv%26%263%3D%3Du%3Fw%3F%28n%3Dx%2Ex%280%2C0%29%2Cp%3Dx%2Ey%280%2C0%29%2Cq%3Dx%2Ex%28t%5B1%5D%2Ct%5B2%5D%29%2Cr%3Dx%2Ey%28t%5B1%5D%2Ct%5B2%5D%29%2Ck%2Etranslate%28q%2Dn%2Cr%2Dp%29%29%3Ak%2Etranslate%28t%5B1%5D%2Ct%5B2%5D%29%3A%22r%22%3D%3Dv%3F2%3D%3Du%3F%28s%3Ds%7C%7Ca%2EgetBBox%281%29%2Ck%2Erotate%28t%5B1%5D%2Cs%2Ex%2Bs%2Ewidth%2F2%2Cs%2Ey%2Bs%2Eheight%2F2%29%2Ce%2B%3Dt%5B1%5D%29%3A4%3D%3Du%26%26%28w%3F%28q%3Dx%2Ex%28t%5B2%5D%2Ct%5B3%5D%29%2Cr%3Dx%2Ey%28t%5B2%5D%2Ct%5B3%5D%29%2Ck%2Erotate%28t%5B1%5D%2Cq%2Cr%29%29%3Ak%2Erotate%28t%5B1%5D%2Ct%5B2%5D%2Ct%5B3%5D%29%2Ce%2B%3Dt%5B1%5D%29%3A%22s%22%3D%3Dv%3F2%3D%3Du%7C%7C3%3D%3Du%3F%28s%3Ds%7C%7Ca%2EgetBBox%281%29%2Ck%2Escale%28t%5B1%5D%2Ct%5Bu%2D1%5D%2Cs%2Ex%2Bs%2Ewidth%2F2%2Cs%2Ey%2Bs%2Eheight%2F2%29%2Ch%2A%3Dt%5B1%5D%2Ci%2A%3Dt%5Bu%2D1%5D%29%3A5%3D%3Du%26%26%28w%3F%28q%3Dx%2Ex%28t%5B3%5D%2Ct%5B4%5D%29%2Cr%3Dx%2Ey%28t%5B3%5D%2Ct%5B4%5D%29%2Ck%2Escale%28t%5B1%5D%2Ct%5B2%5D%2Cq%2Cr%29%29%3Ak%2Escale%28t%5B1%5D%2Ct%5B2%5D%2Ct%5B3%5D%2Ct%5B4%5D%29%2Ch%2A%3Dt%5B1%5D%2Ci%2A%3Dt%5B2%5D%29%3A%22m%22%3D%3Dv%26%267%3D%3Du%26%26k%2Eadd%28t%5B1%5D%2Ct%5B2%5D%2Ct%5B3%5D%2Ct%5B4%5D%2Ct%5B5%5D%2Ct%5B6%5D%29%2Cj%2EdirtyT%3D1%2Ca%2Ematrix%3Dk%7Da%2Ematrix%3Dk%2Cj%2Esx%3Dh%2Cj%2Esy%3Di%2Cj%2Edeg%3De%2Cj%2Edx%3Df%3Dk%2Ee%2Cj%2Edy%3Dg%3Dk%2Ef%2C1%3D%3Dh%26%261%3D%3Di%26%26%21e%26%26j%2Ebbox%3F%28j%2Ebbox%2Ex%2B%3D%2Bf%2Cj%2Ebbox%2Ey%2B%3D%2Bg%29%3Aj%2EdirtyT%3D1%7D%29%2COb%3Dfunction%28a%29%7Bvar%20b%3Da%5B0%5D%3Bswitch%28b%2EtoLowerCase%28%29%29%7Bcase%22t%22%3Areturn%5Bb%2C0%2C0%5D%3Bcase%22m%22%3Areturn%5Bb%2C1%2C0%2C0%2C1%2C0%2C0%5D%3Bcase%22r%22%3Areturn%204%3D%3Da%2Elength%3F%5Bb%2C0%2Ca%5B2%5D%2Ca%5B3%5D%5D%3A%5Bb%2C0%5D%3Bcase%22s%22%3Areturn%205%3D%3Da%2Elength%3F%5Bb%2C1%2C1%2Ca%5B3%5D%2Ca%5B4%5D%5D%3A3%3D%3Da%2Elength%3F%5Bb%2C1%2C1%5D%3A%5Bb%2C1%5D%7D%7D%2CPb%3Dc%2E%5FequaliseTransform%3Dfunction%28a%2Cb%29%7Bb%3DI%28b%29%2Ereplace%28%2F%5C%2E%7B3%7D%7C%5Cu2026%2Fg%2Ca%29%2Ca%3Dc%2EparseTransformString%28a%29%7C%7C%5B%5D%2Cb%3Dc%2EparseTransformString%28b%29%7C%7C%5B%5D%3Bfor%28var%20d%2Ce%2Cf%2Cg%2Ch%3DO%28a%2Elength%2Cb%2Elength%29%2Ci%3D%5B%5D%2Cj%3D%5B%5D%2Ck%3D0%3Bh%3Ek%3Bk%2B%2B%29%7Bif%28f%3Da%5Bk%5D%7C%7COb%28b%5Bk%5D%29%2Cg%3Db%5Bk%5D%7C%7COb%28f%29%2Cf%5B0%5D%21%3Dg%5B0%5D%7C%7C%22r%22%3D%3Df%5B0%5D%2EtoLowerCase%28%29%26%26%28f%5B2%5D%21%3Dg%5B2%5D%7C%7Cf%5B3%5D%21%3Dg%5B3%5D%29%7C%7C%22s%22%3D%3Df%5B0%5D%2EtoLowerCase%28%29%26%26%28f%5B3%5D%21%3Dg%5B3%5D%7C%7Cf%5B4%5D%21%3Dg%5B4%5D%29%29return%3Bfor%28i%5Bk%5D%3D%5B%5D%2Cj%5Bk%5D%3D%5B%5D%2Cd%3D0%2Ce%3DO%28f%2Elength%2Cg%2Elength%29%3Be%3Ed%3Bd%2B%2B%29d%20in%20f%26%26%28i%5Bk%5D%5Bd%5D%3Df%5Bd%5D%29%2Cd%20in%20g%26%26%28j%5Bk%5D%5Bd%5D%3Dg%5Bd%5D%29%0A%7Dreturn%7Bfrom%3Ai%2Cto%3Aj%7D%7D%3Bc%2E%5FgetContainer%3Dfunction%28a%2Cb%2Cd%2Ce%29%7Bvar%20f%3Breturn%20f%3Dnull%21%3De%7C%7Cc%2Eis%28a%2C%22object%22%29%3Fa%3AA%2Edoc%2EgetElementById%28a%29%2Cnull%21%3Df%3Ff%2EtagName%3Fnull%3D%3Db%3F%7Bcontainer%3Af%2Cwidth%3Af%2Estyle%2EpixelWidth%7C%7Cf%2EoffsetWidth%2Cheight%3Af%2Estyle%2EpixelHeight%7C%7Cf%2EoffsetHeight%7D%3A%7Bcontainer%3Af%2Cwidth%3Ab%2Cheight%3Ad%7D%3A%7Bcontainer%3A1%2Cx%3Aa%2Cy%3Ab%2Cwidth%3Ad%2Cheight%3Ae%7D%3Avoid%200%7D%2Cc%2EpathToRelative%3DDb%2Cc%2E%5Fengine%3D%7B%7D%2Cc%2Epath2curve%3DKb%2Cc%2Ematrix%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Breturn%20new%20o%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7D%2Cfunction%28a%29%7Bfunction%20b%28a%29%7Breturn%20a%5B0%5D%2Aa%5B0%5D%2Ba%5B1%5D%2Aa%5B1%5D%7Dfunction%20d%28a%29%7Bvar%20c%3DN%2Esqrt%28b%28a%29%29%3Ba%5B0%5D%26%26%28a%5B0%5D%2F%3Dc%29%2Ca%5B1%5D%26%26%28a%5B1%5D%2F%3Dc%29%7Da%2Eadd%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bvar%20g%2Ch%2Ci%2Cj%2Ck%3D%5B%5B%5D%2C%5B%5D%2C%5B%5D%5D%2Cl%3D%5B%5Bthis%2Ea%2Cthis%2Ec%2Cthis%2Ee%5D%2C%5Bthis%2Eb%2Cthis%2Ed%2Cthis%2Ef%5D%2C%5B0%2C0%2C1%5D%5D%2Cm%3D%5B%5Ba%2Cc%2Ce%5D%2C%5Bb%2Cd%2Cf%5D%2C%5B0%2C0%2C1%5D%5D%3Bfor%28a%26%26a%20instanceof%20o%26%26%28m%3D%5B%5Ba%2Ea%2Ca%2Ec%2Ca%2Ee%5D%2C%5Ba%2Eb%2Ca%2Ed%2Ca%2Ef%5D%2C%5B0%2C0%2C1%5D%5D%29%2Cg%3D0%3B3%3Eg%3Bg%2B%2B%29for%28h%3D0%3B3%3Eh%3Bh%2B%2B%29%7Bfor%28j%3D0%2Ci%3D0%3B3%3Ei%3Bi%2B%2B%29j%2B%3Dl%5Bg%5D%5Bi%5D%2Am%5Bi%5D%5Bh%5D%3Bk%5Bg%5D%5Bh%5D%3Dj%7Dthis%2Ea%3Dk%5B0%5D%5B0%5D%2Cthis%2Eb%3Dk%5B1%5D%5B0%5D%2Cthis%2Ec%3Dk%5B0%5D%5B1%5D%2Cthis%2Ed%3Dk%5B1%5D%5B1%5D%2Cthis%2Ee%3Dk%5B0%5D%5B2%5D%2Cthis%2Ef%3Dk%5B1%5D%5B2%5D%7D%2Ca%2Einvert%3Dfunction%28%29%7Bvar%20a%3Dthis%2Cb%3Da%2Ea%2Aa%2Ed%2Da%2Eb%2Aa%2Ec%3Breturn%20new%20o%28a%2Ed%2Fb%2C%2Da%2Eb%2Fb%2C%2Da%2Ec%2Fb%2Ca%2Ea%2Fb%2C%28a%2Ec%2Aa%2Ef%2Da%2Ed%2Aa%2Ee%29%2Fb%2C%28a%2Eb%2Aa%2Ee%2Da%2Ea%2Aa%2Ef%29%2Fb%29%7D%2Ca%2Eclone%3Dfunction%28%29%7Breturn%20new%20o%28this%2Ea%2Cthis%2Eb%2Cthis%2Ec%2Cthis%2Ed%2Cthis%2Ee%2Cthis%2Ef%29%7D%2Ca%2Etranslate%3Dfunction%28a%2Cb%29%7Bthis%2Eadd%281%2C0%2C0%2C1%2Ca%2Cb%29%7D%2Ca%2Escale%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Bnull%3D%3Db%26%26%28b%3Da%29%2C%28c%7C%7Cd%29%26%26this%2Eadd%281%2C0%2C0%2C1%2Cc%2Cd%29%2Cthis%2Eadd%28a%2C0%2C0%2Cb%2C0%2C0%29%2C%28c%7C%7Cd%29%26%26this%2Eadd%281%2C0%2C0%2C1%2C%2Dc%2C%2Dd%29%7D%2Ca%2Erotate%3Dfunction%28a%2Cb%2Cd%29%7Ba%3Dc%2Erad%28a%29%2Cb%3Db%7C%7C0%2Cd%3Dd%7C%7C0%3Bvar%20e%3D%2BN%2Ecos%28a%29%2EtoFixed%289%29%2Cf%3D%2BN%2Esin%28a%29%2EtoFixed%289%29%3Bthis%2Eadd%28e%2Cf%2C%2Df%2Ce%2Cb%2Cd%29%2Cthis%2Eadd%281%2C0%2C0%2C1%2C%2Db%2C%2Dd%29%7D%2Ca%2Ex%3Dfunction%28a%2Cb%29%7Breturn%20a%2Athis%2Ea%2Bb%2Athis%2Ec%2Bthis%2Ee%7D%2Ca%2Ey%3Dfunction%28a%2Cb%29%7Breturn%20a%2Athis%2Eb%2Bb%2Athis%2Ed%2Bthis%2Ef%7D%2Ca%2Eget%3Dfunction%28a%29%7Breturn%2Bthis%5BI%2EfromCharCode%2897%2Ba%29%5D%2EtoFixed%284%29%7D%2Ca%2EtoString%3Dfunction%28%29%7Breturn%20c%2Esvg%3F%22matrix%28%22%2B%5Bthis%2Eget%280%29%2Cthis%2Eget%281%29%2Cthis%2Eget%282%29%2Cthis%2Eget%283%29%2Cthis%2Eget%284%29%2Cthis%2Eget%285%29%5D%2Ejoin%28%29%2B%22%29%22%3A%5Bthis%2Eget%280%29%2Cthis%2Eget%282%29%2Cthis%2Eget%281%29%2Cthis%2Eget%283%29%2C0%2C0%5D%2Ejoin%28%29%7D%2Ca%2EtoFilter%3Dfunction%28%29%7Breturn%22progid%3ADXImageTransform%2EMicrosoft%2EMatrix%28M11%3D%22%2Bthis%2Eget%280%29%2B%22%2C%20M12%3D%22%2Bthis%2Eget%282%29%2B%22%2C%20M21%3D%22%2Bthis%2Eget%281%29%2B%22%2C%20M22%3D%22%2Bthis%2Eget%283%29%2B%22%2C%20Dx%3D%22%2Bthis%2Eget%284%29%2B%22%2C%20Dy%3D%22%2Bthis%2Eget%285%29%2B%22%2C%20sizingmethod%3D%27auto%20expand%27%29%22%7D%2Ca%2Eoffset%3Dfunction%28%29%7Breturn%5Bthis%2Ee%2EtoFixed%284%29%2Cthis%2Ef%2EtoFixed%284%29%5D%7D%2Ca%2Esplit%3Dfunction%28%29%7Bvar%20a%3D%7B%7D%3Ba%2Edx%3Dthis%2Ee%2Ca%2Edy%3Dthis%2Ef%3Bvar%20e%3D%5B%5Bthis%2Ea%2Cthis%2Ec%5D%2C%5Bthis%2Eb%2Cthis%2Ed%5D%5D%3Ba%2Escalex%3DN%2Esqrt%28b%28e%5B0%5D%29%29%2Cd%28e%5B0%5D%29%2Ca%2Eshear%3De%5B0%5D%5B0%5D%2Ae%5B1%5D%5B0%5D%2Be%5B0%5D%5B1%5D%2Ae%5B1%5D%5B1%5D%2Ce%5B1%5D%3D%5Be%5B1%5D%5B0%5D%2De%5B0%5D%5B0%5D%2Aa%2Eshear%2Ce%5B1%5D%5B1%5D%2De%5B0%5D%5B1%5D%2Aa%2Eshear%5D%2Ca%2Escaley%3DN%2Esqrt%28b%28e%5B1%5D%29%29%2Cd%28e%5B1%5D%29%2Ca%2Eshear%2F%3Da%2Escaley%3Bvar%20f%3D%2De%5B0%5D%5B1%5D%2Cg%3De%5B1%5D%5B1%5D%3Breturn%200%3Eg%3F%28a%2Erotate%3Dc%2Edeg%28N%2Eacos%28g%29%29%2C0%3Ef%26%26%28a%2Erotate%3D360%2Da%2Erotate%29%29%3Aa%2Erotate%3Dc%2Edeg%28N%2Easin%28f%29%29%2Ca%2EisSimple%3D%21%28%2Ba%2Eshear%2EtoFixed%289%29%7C%7Ca%2Escalex%2EtoFixed%289%29%21%3Da%2Escaley%2EtoFixed%289%29%26%26a%2Erotate%29%2Ca%2EisSuperSimple%3D%21%2Ba%2Eshear%2EtoFixed%289%29%26%26a%2Escalex%2EtoFixed%289%29%3D%3Da%2Escaley%2EtoFixed%289%29%26%26%21a%2Erotate%2Ca%2EnoRotation%3D%21%2Ba%2Eshear%2EtoFixed%289%29%26%26%21a%2Erotate%2Ca%7D%2Ca%2EtoTransformString%3Dfunction%28a%29%7Bvar%20b%3Da%7C%7Cthis%5BJ%5D%28%29%3Breturn%20b%2EisSimple%3F%28b%2Escalex%3D%2Bb%2Escalex%2EtoFixed%284%29%2Cb%2Escaley%3D%2Bb%2Escaley%2EtoFixed%284%29%2Cb%2Erotate%3D%2Bb%2Erotate%2EtoFixed%284%29%2C%28b%2Edx%7C%7Cb%2Edy%3F%22t%22%2B%5Bb%2Edx%2Cb%2Edy%5D%3AG%29%2B%281%21%3Db%2Escalex%7C%7C1%21%3Db%2Escaley%3F%22s%22%2B%5Bb%2Escalex%2Cb%2Escaley%2C0%2C0%5D%3AG%29%2B%28b%2Erotate%3F%22r%22%2B%5Bb%2Erotate%2C0%2C0%5D%3AG%29%29%3A%22m%22%2B%5Bthis%2Eget%280%29%2Cthis%2Eget%281%29%2Cthis%2Eget%282%29%2Cthis%2Eget%283%29%2Cthis%2Eget%284%29%2Cthis%2Eget%285%29%5D%7D%7D%28o%2Eprototype%29%3Bvar%20Qb%3Dnavigator%2EuserAgent%2Ematch%28%2FVersion%5C%2F%28%2E%2A%3F%29%5Cs%2F%29%7C%7Cnavigator%2EuserAgent%2Ematch%28%2FChrome%5C%2F%28%5Cd%2B%29%2F%29%3Bv%2Esafari%3D%22Apple%20Computer%2C%20Inc%2E%22%3D%3Dnavigator%2Evendor%26%26%28Qb%26%26Qb%5B1%5D%3C4%7C%7C%22iP%22%3D%3Dnavigator%2Eplatform%2Eslice%280%2C2%29%29%7C%7C%22Google%20Inc%2E%22%3D%3Dnavigator%2Evendor%26%26Qb%26%26Qb%5B1%5D%3C8%3Ffunction%28%29%7Bvar%20a%3Dthis%2Erect%28%2D99%2C%2D99%2Cthis%2Ewidth%2B99%2Cthis%2Eheight%2B99%29%2Eattr%28%7Bstroke%3A%22none%22%7D%29%3BsetTimeout%28function%28%29%7Ba%2Eremove%28%29%7D%29%7D%3Amb%3Bfor%28var%20Rb%3Dfunction%28%29%7Bthis%2EreturnValue%3D%211%7D%2CSb%3Dfunction%28%29%7Breturn%20this%2EoriginalEvent%2EpreventDefault%28%29%7D%2CTb%3Dfunction%28%29%7Bthis%2EcancelBubble%3D%210%7D%2CUb%3Dfunction%28%29%7Breturn%20this%2EoriginalEvent%2EstopPropagation%28%29%7D%2CVb%3Dfunction%28a%29%7Bvar%20b%3DA%2Edoc%2EdocumentElement%2EscrollTop%7C%7CA%2Edoc%2Ebody%2EscrollTop%2Cc%3DA%2Edoc%2EdocumentElement%2EscrollLeft%7C%7CA%2Edoc%2Ebody%2EscrollLeft%3Breturn%7Bx%3Aa%2EclientX%2Bc%2Cy%3Aa%2EclientY%2Bb%7D%7D%2CWb%3Dfunction%28%29%7Breturn%20A%2Edoc%2EaddEventListener%3Ffunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3Dfunction%28a%29%7Bvar%20b%3DVb%28a%29%3Breturn%20c%2Ecall%28d%2Ca%2Cb%2Ex%2Cb%2Ey%29%7D%3Bif%28a%2EaddEventListener%28b%2Ce%2C%211%29%2CF%26%26L%5Bb%5D%29%7Bvar%20f%3Dfunction%28b%29%7Bfor%28var%20e%3DVb%28b%29%2Cf%3Db%2Cg%3D0%2Ch%3Db%2EtargetTouches%26%26b%2EtargetTouches%2Elength%3Bh%3Eg%3Bg%2B%2B%29if%28b%2EtargetTouches%5Bg%5D%2Etarget%3D%3Da%29%7Bb%3Db%2EtargetTouches%5Bg%5D%2Cb%2EoriginalEvent%3Df%2Cb%2EpreventDefault%3DSb%2Cb%2EstopPropagation%3DUb%3Bbreak%7Dreturn%20c%2Ecall%28d%2Cb%2Ce%2Ex%2Ce%2Ey%29%7D%3Ba%2EaddEventListener%28L%5Bb%5D%2Cf%2C%211%29%7Dreturn%20function%28%29%7Breturn%20a%2EremoveEventListener%28b%2Ce%2C%211%29%2CF%26%26L%5Bb%5D%26%26a%2EremoveEventListener%28L%5Bb%5D%2Ce%2C%211%29%2C%210%7D%7D%3AA%2Edoc%2EattachEvent%3Ffunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3Dfunction%28a%29%7Ba%3Da%7C%7CA%2Ewin%2Eevent%3Bvar%20b%3DA%2Edoc%2EdocumentElement%2EscrollTop%7C%7CA%2Edoc%2Ebody%2EscrollTop%2Ce%3DA%2Edoc%2EdocumentElement%2EscrollLeft%7C%7CA%2Edoc%2Ebody%2EscrollLeft%2Cf%3Da%2EclientX%2Be%2Cg%3Da%2EclientY%2Bb%3Breturn%20a%2EpreventDefault%3Da%2EpreventDefault%7C%7CRb%2Ca%2EstopPropagation%3Da%2EstopPropagation%7C%7CTb%2Cc%2Ecall%28d%2Ca%2Cf%2Cg%29%7D%3Ba%2EattachEvent%28%22on%22%2Bb%2Ce%29%3Bvar%20f%3Dfunction%28%29%7Breturn%20a%2EdetachEvent%28%22on%22%2Bb%2Ce%29%2C%210%7D%3Breturn%20f%7D%3Avoid%200%7D%28%29%2CXb%3D%5B%5D%2CYb%3Dfunction%28a%29%7Bfor%28var%20c%2Cd%3Da%2EclientX%2Ce%3Da%2EclientY%2Cf%3DA%2Edoc%2EdocumentElement%2EscrollTop%7C%7CA%2Edoc%2Ebody%2EscrollTop%2Cg%3DA%2Edoc%2EdocumentElement%2EscrollLeft%7C%7CA%2Edoc%2Ebody%2EscrollLeft%2Ch%3DXb%2Elength%3Bh%2D%2D%3B%29%7Bif%28c%3DXb%5Bh%5D%2CF%26%26a%2Etouches%29%7Bfor%28var%20i%2Cj%3Da%2Etouches%2Elength%3Bj%2D%2D%3B%29if%28i%3Da%2Etouches%5Bj%5D%2Ci%2Eidentifier%3D%3Dc%2Eel%2E%5Fdrag%2Eid%29%7Bd%3Di%2EclientX%2Ce%3Di%2EclientY%2C%28a%2EoriginalEvent%3Fa%2EoriginalEvent%3Aa%29%2EpreventDefault%28%29%3Bbreak%7D%7Delse%20a%2EpreventDefault%28%29%3Bvar%20k%2Cl%3Dc%2Eel%2Enode%2Cm%3Dl%2EnextSibling%2Cn%3Dl%2EparentNode%2Co%3Dl%2Estyle%2Edisplay%3BA%2Ewin%2Eopera%26%26n%2EremoveChild%28l%29%2Cl%2Estyle%2Edisplay%3D%22none%22%2Ck%3Dc%2Eel%2Epaper%2EgetElementByPoint%28d%2Ce%29%2Cl%2Estyle%2Edisplay%3Do%2CA%2Ewin%2Eopera%26%26%28m%3Fn%2EinsertBefore%28l%2Cm%29%3An%2EappendChild%28l%29%29%2Ck%26%26b%28%22raphael%2Edrag%2Eover%2E%22%2Bc%2Eel%2Eid%2Cc%2Eel%2Ck%29%2Cd%2B%3Dg%2Ce%2B%3Df%2Cb%28%22raphael%2Edrag%2Emove%2E%22%2Bc%2Eel%2Eid%2Cc%2Emove%5Fscope%7C%7Cc%2Eel%2Cd%2Dc%2Eel%2E%5Fdrag%2Ex%2Ce%2Dc%2Eel%2E%5Fdrag%2Ey%2Cd%2Ce%2Ca%29%7D%7D%2CZb%3Dfunction%28a%29%7Bc%2Eunmousemove%28Yb%29%2Eunmouseup%28Zb%29%3Bfor%28var%20d%2Ce%3DXb%2Elength%3Be%2D%2D%3B%29d%3DXb%5Be%5D%2Cd%2Eel%2E%5Fdrag%3D%7B%7D%2Cb%28%22raphael%2Edrag%2Eend%2E%22%2Bd%2Eel%2Eid%2Cd%2Eend%5Fscope%7C%7Cd%2Estart%5Fscope%7C%7Cd%2Emove%5Fscope%7C%7Cd%2Eel%2Ca%29%3BXb%3D%5B%5D%7D%2C%24b%3Dc%2Eel%3D%7B%7D%2C%5Fb%3DK%2Elength%3B%5Fb%2D%2D%3B%29%21function%28a%29%7Bc%5Ba%5D%3D%24b%5Ba%5D%3Dfunction%28b%2Cd%29%7Breturn%20c%2Eis%28b%2C%22function%22%29%26%26%28this%2Eevents%3Dthis%2Eevents%7C%7C%5B%5D%2Cthis%2Eevents%2Epush%28%7Bname%3Aa%2Cf%3Ab%2Cunbind%3AWb%28this%2Eshape%7C%7Cthis%2Enode%7C%7CA%2Edoc%2Ca%2Cb%2Cd%7C%7Cthis%29%7D%29%29%2Cthis%7D%2Cc%5B%22un%22%2Ba%5D%3D%24b%5B%22un%22%2Ba%5D%3Dfunction%28b%29%7Bfor%28var%20d%3Dthis%2Eevents%7C%7C%5B%5D%2Ce%3Dd%2Elength%3Be%2D%2D%3B%29d%5Be%5D%2Ename%21%3Da%7C%7C%21c%2Eis%28b%2C%22undefined%22%29%26%26d%5Be%5D%2Ef%21%3Db%7C%7C%28d%5Be%5D%2Eunbind%28%29%2Cd%2Esplice%28e%2C1%29%2C%21d%2Elength%26%26delete%20this%2Eevents%29%3Breturn%20this%7D%7D%28K%5B%5Fb%5D%29%3B%24b%2Edata%3Dfunction%28a%2Cd%29%7Bvar%20e%3Dkb%5Bthis%2Eid%5D%3Dkb%5Bthis%2Eid%5D%7C%7C%7B%7D%3Bif%280%3D%3Darguments%2Elength%29return%20e%3Bif%281%3D%3Darguments%2Elength%29%7Bif%28c%2Eis%28a%2C%22object%22%29%29%7Bfor%28var%20f%20in%20a%29a%5Bz%5D%28f%29%26%26this%2Edata%28f%2Ca%5Bf%5D%29%3Breturn%20this%7Dreturn%20b%28%22raphael%2Edata%2Eget%2E%22%2Bthis%2Eid%2Cthis%2Ce%5Ba%5D%2Ca%29%2Ce%5Ba%5D%7Dreturn%20e%5Ba%5D%3Dd%2Cb%28%22raphael%2Edata%2Eset%2E%22%2Bthis%2Eid%2Cthis%2Cd%2Ca%29%2Cthis%7D%2C%24b%2EremoveData%3Dfunction%28a%29%7Breturn%20null%3D%3Da%3Fkb%5Bthis%2Eid%5D%3D%7B%7D%3Akb%5Bthis%2Eid%5D%26%26delete%20kb%5Bthis%2Eid%5D%5Ba%5D%2Cthis%7D%2C%24b%2EgetData%3Dfunction%28%29%7Breturn%20d%28kb%5Bthis%2Eid%5D%7C%7C%7B%7D%29%7D%2C%24b%2Ehover%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Breturn%20this%2Emouseover%28a%2Cc%29%2Emouseout%28b%2Cd%7C%7Cc%29%7D%2C%24b%2Eunhover%3Dfunction%28a%2Cb%29%7Breturn%20this%2Eunmouseover%28a%29%2Eunmouseout%28b%29%7D%3Bvar%20ac%3D%5B%5D%3B%24b%2Edrag%3Dfunction%28a%2Cd%2Ce%2Cf%2Cg%2Ch%29%7Bfunction%20i%28i%29%7B%28i%2EoriginalEvent%7C%7Ci%29%2EpreventDefault%28%29%3Bvar%20j%3Di%2EclientX%2Ck%3Di%2EclientY%2Cl%3DA%2Edoc%2EdocumentElement%2EscrollTop%7C%7CA%2Edoc%2Ebody%2EscrollTop%2Cm%3DA%2Edoc%2EdocumentElement%2EscrollLeft%7C%7CA%2Edoc%2Ebody%2EscrollLeft%3Bif%28this%2E%5Fdrag%2Eid%3Di%2Eidentifier%2CF%26%26i%2Etouches%29for%28var%20n%2Co%3Di%2Etouches%2Elength%3Bo%2D%2D%3B%29if%28n%3Di%2Etouches%5Bo%5D%2Cthis%2E%5Fdrag%2Eid%3Dn%2Eidentifier%2Cn%2Eidentifier%3D%3Dthis%2E%5Fdrag%2Eid%29%7Bj%3Dn%2EclientX%2Ck%3Dn%2EclientY%3Bbreak%7Dthis%2E%5Fdrag%2Ex%3Dj%2Bm%2Cthis%2E%5Fdrag%2Ey%3Dk%2Bl%2C%21Xb%2Elength%26%26c%2Emousemove%28Yb%29%2Emouseup%28Zb%29%2CXb%2Epush%28%7Bel%3Athis%2Cmove%5Fscope%3Af%2Cstart%5Fscope%3Ag%2Cend%5Fscope%3Ah%7D%29%2Cd%26%26b%2Eon%28%22raphael%2Edrag%2Estart%2E%22%2Bthis%2Eid%2Cd%29%2Ca%26%26b%2Eon%28%22raphael%2Edrag%2Emove%2E%22%2Bthis%2Eid%2Ca%29%2Ce%26%26b%2Eon%28%22raphael%2Edrag%2Eend%2E%22%2Bthis%2Eid%2Ce%29%2Cb%28%22raphael%2Edrag%2Estart%2E%22%2Bthis%2Eid%2Cg%7C%7Cf%7C%7Cthis%2Ci%2EclientX%2Bm%2Ci%2EclientY%2Bl%2Ci%29%7Dreturn%20this%2E%5Fdrag%3D%7B%7D%2Cac%2Epush%28%7Bel%3Athis%2Cstart%3Ai%7D%29%2Cthis%2Emousedown%28i%29%2Cthis%7D%2C%24b%2EonDragOver%3Dfunction%28a%29%7Ba%3Fb%2Eon%28%22raphael%2Edrag%2Eover%2E%22%2Bthis%2Eid%2Ca%29%3Ab%2Eunbind%28%22raphael%2Edrag%2Eover%2E%22%2Bthis%2Eid%29%7D%2C%24b%2Eundrag%3Dfunction%28%29%7Bfor%28var%20a%3Dac%2Elength%3Ba%2D%2D%3B%29ac%5Ba%5D%2Eel%3D%3Dthis%26%26%28this%2Eunmousedown%28ac%5Ba%5D%2Estart%29%2Cac%2Esplice%28a%2C1%29%2Cb%2Eunbind%28%22raphael%2Edrag%2E%2A%2E%22%2Bthis%2Eid%29%29%3B%21ac%2Elength%26%26c%2Eunmousemove%28Yb%29%2Eunmouseup%28Zb%29%2CXb%3D%5B%5D%7D%2Cv%2Ecircle%3Dfunction%28a%2Cb%2Cd%29%7Bvar%20e%3Dc%2E%5Fengine%2Ecircle%28this%2Ca%7C%7C0%2Cb%7C%7C0%2Cd%7C%7C0%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28e%29%2Ce%7D%2Cv%2Erect%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%29%7Bvar%20g%3Dc%2E%5Fengine%2Erect%28this%2Ca%7C%7C0%2Cb%7C%7C0%2Cd%7C%7C0%2Ce%7C%7C0%2Cf%7C%7C0%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28g%29%2Cg%7D%2Cv%2Eellipse%3Dfunction%28a%2Cb%2Cd%2Ce%29%7Bvar%20f%3Dc%2E%5Fengine%2Eellipse%28this%2Ca%7C%7C0%2Cb%7C%7C0%2Cd%7C%7C0%2Ce%7C%7C0%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28f%29%2Cf%7D%2Cv%2Epath%3Dfunction%28a%29%7Ba%26%26%21c%2Eis%28a%2CU%29%26%26%21c%2Eis%28a%5B0%5D%2CV%29%26%26%28a%2B%3DG%29%3Bvar%20b%3Dc%2E%5Fengine%2Epath%28c%2Eformat%5BD%5D%28c%2Carguments%29%2Cthis%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28b%29%2Cb%7D%2Cv%2Eimage%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%29%7Bvar%20g%3Dc%2E%5Fengine%2Eimage%28this%2Ca%7C%7C%22about%3Ablank%22%2Cb%7C%7C0%2Cd%7C%7C0%2Ce%7C%7C0%2Cf%7C%7C0%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28g%29%2Cg%7D%2Cv%2Etext%3Dfunction%28a%2Cb%2Cd%29%7Bvar%20e%3Dc%2E%5Fengine%2Etext%28this%2Ca%7C%7C0%2Cb%7C%7C0%2CI%28d%29%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28e%29%2Ce%7D%2Cv%2Eset%3Dfunction%28a%29%7B%21c%2Eis%28a%2C%22array%22%29%26%26%28a%3DArray%2Eprototype%2Esplice%2Ecall%28arguments%2C0%2Carguments%2Elength%29%29%3Bvar%20b%3Dnew%20mc%28a%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28b%29%2Cb%2Epaper%3Dthis%2Cb%2Etype%3D%22set%22%2Cb%7D%2Cv%2EsetStart%3Dfunction%28a%29%7Bthis%2E%5F%5Fset%5F%5F%3Da%7C%7Cthis%2Eset%28%29%7D%2Cv%2EsetFinish%3Dfunction%28%29%7Bvar%20a%3Dthis%2E%5F%5Fset%5F%5F%3Breturn%20delete%20this%2E%5F%5Fset%5F%5F%2Ca%7D%2Cv%2EsetSize%3Dfunction%28a%2Cb%29%7Breturn%20c%2E%5Fengine%2EsetSize%2Ecall%28this%2Ca%2Cb%29%7D%2Cv%2EsetViewBox%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%29%7Breturn%20c%2E%5Fengine%2EsetViewBox%2Ecall%28this%2Ca%2Cb%2Cd%2Ce%2Cf%29%7D%2Cv%2Etop%3Dv%2Ebottom%3Dnull%2Cv%2Eraphael%3Dc%3Bvar%20bc%3Dfunction%28a%29%7Bvar%20b%3Da%2EgetBoundingClientRect%28%29%2Cc%3Da%2EownerDocument%2Cd%3Dc%2Ebody%2Ce%3Dc%2EdocumentElement%2Cf%3De%2EclientTop%7C%7Cd%2EclientTop%7C%7C0%2Cg%3De%2EclientLeft%7C%7Cd%2EclientLeft%7C%7C0%2Ch%3Db%2Etop%2B%28A%2Ewin%2EpageYOffset%7C%7Ce%2EscrollTop%7C%7Cd%2EscrollTop%29%2Df%2Ci%3Db%2Eleft%2B%28A%2Ewin%2EpageXOffset%7C%7Ce%2EscrollLeft%7C%7Cd%2EscrollLeft%29%2Dg%3Breturn%7By%3Ah%2Cx%3Ai%7D%7D%3Bv%2EgetElementByPoint%3Dfunction%28a%2Cb%29%7Bvar%20c%3Dthis%2Cd%3Dc%2Ecanvas%2Ce%3DA%2Edoc%2EelementFromPoint%28a%2Cb%29%3Bif%28A%2Ewin%2Eopera%26%26%22svg%22%3D%3De%2EtagName%29%7Bvar%20f%3Dbc%28d%29%2Cg%3Dd%2EcreateSVGRect%28%29%3Bg%2Ex%3Da%2Df%2Ex%2Cg%2Ey%3Db%2Df%2Ey%2Cg%2Ewidth%3Dg%2Eheight%3D1%3Bvar%20h%3Dd%2EgetIntersectionList%28g%2Cnull%29%3Bh%2Elength%26%26%28e%3Dh%5Bh%2Elength%2D1%5D%29%7Dif%28%21e%29return%20null%3Bfor%28%3Be%2EparentNode%26%26e%21%3Dd%2EparentNode%26%26%21e%2Eraphael%3B%29e%3De%2EparentNode%3Breturn%20e%3D%3Dc%2Ecanvas%2EparentNode%26%26%28e%3Dd%29%2Ce%3De%26%26e%2Eraphael%3Fc%2EgetById%28e%2Eraphaelid%29%3Anull%7D%2Cv%2EgetElementsByBBox%3Dfunction%28a%29%7Bvar%20b%3Dthis%2Eset%28%29%3Breturn%20this%2EforEach%28function%28d%29%7Bc%2EisBBoxIntersect%28d%2EgetBBox%28%29%2Ca%29%26%26b%2Epush%28d%29%7D%29%2Cb%7D%2Cv%2EgetById%3Dfunction%28a%29%7Bfor%28var%20b%3Dthis%2Ebottom%3Bb%3B%29%7Bif%28b%2Eid%3D%3Da%29return%20b%3Bb%3Db%2Enext%7Dreturn%20null%7D%2Cv%2EforEach%3Dfunction%28a%2Cb%29%7Bfor%28var%20c%3Dthis%2Ebottom%3Bc%3B%29%7Bif%28a%2Ecall%28b%2Cc%29%3D%3D%3D%211%29return%20this%3Bc%3Dc%2Enext%7Dreturn%20this%7D%2Cv%2EgetElementsByPoint%3Dfunction%28a%2Cb%29%7Bvar%20c%3Dthis%2Eset%28%29%3Breturn%20this%2EforEach%28function%28d%29%7Bd%2EisPointInside%28a%2Cb%29%26%26c%2Epush%28d%29%7D%29%2Cc%7D%2C%24b%2EisPointInside%3Dfunction%28a%2Cb%29%7Bvar%20d%3Dthis%2ErealPath%3Dqb%5Bthis%2Etype%5D%28this%29%3Breturn%20this%2Eattr%28%22transform%22%29%26%26this%2Eattr%28%22transform%22%29%2Elength%26%26%28d%3Dc%2EtransformPath%28d%2Cthis%2Eattr%28%22transform%22%29%29%29%2Cc%2EisPointInsidePath%28d%2Ca%2Cb%29%7D%2C%24b%2EgetBBox%3Dfunction%28a%29%7Bif%28this%2Eremoved%29return%7B%7D%3Bvar%20b%3Dthis%2E%5F%3Breturn%20a%3F%28%28b%2Edirty%7C%7C%21b%2Ebboxwt%29%26%26%28this%2ErealPath%3Dqb%5Bthis%2Etype%5D%28this%29%2Cb%2Ebboxwt%3DBb%28this%2ErealPath%29%2Cb%2Ebboxwt%2EtoString%3Dp%2Cb%2Edirty%3D0%29%2Cb%2Ebboxwt%29%3A%28%28b%2Edirty%7C%7Cb%2EdirtyT%7C%7C%21b%2Ebbox%29%26%26%28%28b%2Edirty%7C%7C%21this%2ErealPath%29%26%26%28b%2Ebboxwt%3D0%2Cthis%2ErealPath%3Dqb%5Bthis%2Etype%5D%28this%29%29%2Cb%2Ebbox%3DBb%28rb%28this%2ErealPath%2Cthis%2Ematrix%29%29%2Cb%2Ebbox%2EtoString%3Dp%2Cb%2Edirty%3Db%2EdirtyT%3D0%29%2Cb%2Ebbox%29%7D%2C%24b%2Eclone%3Dfunction%28%29%7Bif%28this%2Eremoved%29return%20null%3Bvar%20a%3Dthis%2Epaper%5Bthis%2Etype%5D%28%29%2Eattr%28this%2Eattr%28%29%29%3Breturn%20this%2E%5F%5Fset%5F%5F%26%26this%2E%5F%5Fset%5F%5F%2Epush%28a%29%2Ca%7D%2C%24b%2Eglow%3Dfunction%28a%29%7Bif%28%22text%22%3D%3Dthis%2Etype%29return%20null%3Ba%3Da%7C%7C%7B%7D%3Bvar%20b%3D%7Bwidth%3A%28a%2Ewidth%7C%7C10%29%2B%28%2Bthis%2Eattr%28%22stroke%2Dwidth%22%29%7C%7C1%29%2Cfill%3Aa%2Efill%7C%7C%211%2Copacity%3Aa%2Eopacity%7C%7C%2E5%2Coffsetx%3Aa%2Eoffsetx%7C%7C0%2Coffsety%3Aa%2Eoffsety%7C%7C0%2Ccolor%3Aa%2Ecolor%7C%7C%22%23000%22%7D%2Cc%3Db%2Ewidth%2F2%2Cd%3Dthis%2Epaper%2Ce%3Dd%2Eset%28%29%2Cf%3Dthis%2ErealPath%7C%7Cqb%5Bthis%2Etype%5D%28this%29%3Bf%3Dthis%2Ematrix%3Frb%28f%2Cthis%2Ematrix%29%3Af%3Bfor%28var%20g%3D1%3Bc%2B1%3Eg%3Bg%2B%2B%29e%2Epush%28d%2Epath%28f%29%2Eattr%28%7Bstroke%3Ab%2Ecolor%2Cfill%3Ab%2Efill%3Fb%2Ecolor%3A%22none%22%2C%22stroke%2Dlinejoin%22%3A%22round%22%2C%22stroke%2Dlinecap%22%3A%22round%22%2C%22stroke%2Dwidth%22%3A%2B%28b%2Ewidth%2Fc%2Ag%29%2EtoFixed%283%29%2Copacity%3A%2B%28b%2Eopacity%2Fc%29%2EtoFixed%283%29%7D%29%29%3Breturn%20e%2EinsertBefore%28this%29%2Etranslate%28b%2Eoffsetx%2Cb%2Eoffsety%29%7D%3Bvar%20cc%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cl%29%7Breturn%20null%3D%3Dl%3Fj%28a%2Cb%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%29%3Ac%2EfindDotsAtSegment%28a%2Cb%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Ck%28a%2Cb%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cl%29%29%7D%2Cdc%3Dfunction%28a%2Cb%29%7Breturn%20function%28d%2Ce%2Cf%29%7Bd%3DKb%28d%29%3Bfor%28var%20g%2Ch%2Ci%2Cj%2Ck%2Cl%3D%22%22%2Cm%3D%7B%7D%2Cn%3D0%2Co%3D0%2Cp%3Dd%2Elength%3Bp%3Eo%3Bo%2B%2B%29%7Bif%28i%3Dd%5Bo%5D%2C%22M%22%3D%3Di%5B0%5D%29g%3D%2Bi%5B1%5D%2Ch%3D%2Bi%5B2%5D%3Belse%7Bif%28j%3Dcc%28g%2Ch%2Ci%5B1%5D%2Ci%5B2%5D%2Ci%5B3%5D%2Ci%5B4%5D%2Ci%5B5%5D%2Ci%5B6%5D%29%2Cn%2Bj%3Ee%29%7Bif%28b%26%26%21m%2Estart%29%7Bif%28k%3Dcc%28g%2Ch%2Ci%5B1%5D%2Ci%5B2%5D%2Ci%5B3%5D%2Ci%5B4%5D%2Ci%5B5%5D%2Ci%5B6%5D%2Ce%2Dn%29%2Cl%2B%3D%5B%22C%22%2Bk%2Estart%2Ex%2Ck%2Estart%2Ey%2Ck%2Em%2Ex%2Ck%2Em%2Ey%2Ck%2Ex%2Ck%2Ey%5D%2Cf%29return%20l%3Bm%2Estart%3Dl%2Cl%3D%5B%22M%22%2Bk%2Ex%2Ck%2Ey%2B%22C%22%2Bk%2En%2Ex%2Ck%2En%2Ey%2Ck%2Eend%2Ex%2Ck%2Eend%2Ey%2Ci%5B5%5D%2Ci%5B6%5D%5D%2Ejoin%28%29%2Cn%2B%3Dj%2Cg%3D%2Bi%5B5%5D%2Ch%3D%2Bi%5B6%5D%3Bcontinue%7Dif%28%21a%26%26%21b%29return%20k%3Dcc%28g%2Ch%2Ci%5B1%5D%2Ci%5B2%5D%2Ci%5B3%5D%2Ci%5B4%5D%2Ci%5B5%5D%2Ci%5B6%5D%2Ce%2Dn%29%2C%7Bx%3Ak%2Ex%2Cy%3Ak%2Ey%2Calpha%3Ak%2Ealpha%7D%7Dn%2B%3Dj%2Cg%3D%2Bi%5B5%5D%2Ch%3D%2Bi%5B6%5D%7Dl%2B%3Di%2Eshift%28%29%2Bi%7Dreturn%20m%2Eend%3Dl%2Ck%3Da%3Fn%3Ab%3Fm%3Ac%2EfindDotsAtSegment%28g%2Ch%2Ci%5B0%5D%2Ci%5B1%5D%2Ci%5B2%5D%2Ci%5B3%5D%2Ci%5B4%5D%2Ci%5B5%5D%2C1%29%2Ck%2Ealpha%26%26%28k%3D%7Bx%3Ak%2Ex%2Cy%3Ak%2Ey%2Calpha%3Ak%2Ealpha%7D%29%2Ck%7D%7D%2Cec%3Ddc%281%29%2Cfc%3Ddc%28%29%2Cgc%3Ddc%280%2C1%29%3Bc%2EgetTotalLength%3Dec%2Cc%2EgetPointAtLength%3Dfc%2Cc%2EgetSubpath%3Dfunction%28a%2Cb%2Cc%29%7Bif%28this%2EgetTotalLength%28a%29%2Dc%3C1e%2D6%29return%20gc%28a%2Cb%29%2Eend%3Bvar%20d%3Dgc%28a%2Cc%2C1%29%3Breturn%20b%3Fgc%28d%2Cb%29%2Eend%3Ad%7D%2C%24b%2EgetTotalLength%3Dfunction%28%29%7Bvar%20a%3Dthis%2EgetPath%28%29%3Bif%28a%29return%20this%2Enode%2EgetTotalLength%3Fthis%2Enode%2EgetTotalLength%28%29%3Aec%28a%29%7D%2C%24b%2EgetPointAtLength%3Dfunction%28a%29%7Bvar%20b%3Dthis%2EgetPath%28%29%3Bif%28b%29return%20fc%28b%2Ca%29%7D%2C%24b%2EgetPath%3Dfunction%28%29%7Bvar%20a%2Cb%3Dc%2E%5FgetPath%5Bthis%2Etype%5D%3Bif%28%22text%22%21%3Dthis%2Etype%26%26%22set%22%21%3Dthis%2Etype%29return%20b%26%26%28a%3Db%28this%29%29%2Ca%7D%2C%24b%2EgetSubpath%3Dfunction%28a%2Cb%29%7Bvar%20d%3Dthis%2EgetPath%28%29%3Bif%28d%29return%20c%2EgetSubpath%28d%2Ca%2Cb%29%7D%3Bvar%20hc%3Dc%2Eeasing%5Fformulas%3D%7Blinear%3Afunction%28a%29%7Breturn%20a%7D%2C%22%3C%22%3Afunction%28a%29%7Breturn%20R%28a%2C1%2E7%29%7D%2C%22%3E%22%3Afunction%28a%29%7Breturn%20R%28a%2C%2E48%29%7D%2C%22%3C%3E%22%3Afunction%28a%29%7Bvar%20b%3D%2E48%2Da%2F1%2E04%2Cc%3DN%2Esqrt%28%2E1734%2Bb%2Ab%29%2Cd%3Dc%2Db%2Ce%3DR%28Q%28d%29%2C1%2F3%29%2A%280%3Ed%3F%2D1%3A1%29%2Cf%3D%2Dc%2Db%2Cg%3DR%28Q%28f%29%2C1%2F3%29%2A%280%3Ef%3F%2D1%3A1%29%2Ch%3De%2Bg%2B%2E5%3Breturn%203%2A%281%2Dh%29%2Ah%2Ah%2Bh%2Ah%2Ah%7D%2CbackIn%3Afunction%28a%29%7Bvar%20b%3D1%2E70158%3Breturn%20a%2Aa%2A%28%28b%2B1%29%2Aa%2Db%29%7D%2CbackOut%3Afunction%28a%29%7Ba%2D%3D1%3Bvar%20b%3D1%2E70158%3Breturn%20a%2Aa%2A%28%28b%2B1%29%2Aa%2Bb%29%2B1%7D%2Celastic%3Afunction%28a%29%7Breturn%20a%3D%3D%21%21a%3Fa%3AR%282%2C%2D10%2Aa%29%2AN%2Esin%28%28a%2D%2E075%29%2A2%2AS%2F%2E3%29%2B1%7D%2Cbounce%3Afunction%28a%29%7Bvar%20b%2Cc%3D7%2E5625%2Cd%3D2%2E75%3Breturn%201%2Fd%3Ea%3Fb%3Dc%2Aa%2Aa%3A2%2Fd%3Ea%3F%28a%2D%3D1%2E5%2Fd%2Cb%3Dc%2Aa%2Aa%2B%2E75%29%3A2%2E5%2Fd%3Ea%3F%28a%2D%3D2%2E25%2Fd%2Cb%3Dc%2Aa%2Aa%2B%2E9375%29%3A%28a%2D%3D2%2E625%2Fd%2Cb%3Dc%2Aa%2Aa%2B%2E984375%29%2Cb%7D%7D%3Bhc%2EeaseIn%3Dhc%5B%22ease%2Din%22%5D%3Dhc%5B%22%3C%22%5D%2Chc%2EeaseOut%3Dhc%5B%22ease%2Dout%22%5D%3Dhc%5B%22%3E%22%5D%2Chc%2EeaseInOut%3Dhc%5B%22ease%2Din%2Dout%22%5D%3Dhc%5B%22%3C%3E%22%5D%2Chc%5B%22back%2Din%22%5D%3Dhc%2EbackIn%2Chc%5B%22back%2Dout%22%5D%3Dhc%2EbackOut%3Bvar%20ic%3D%5B%5D%2Cjc%3Da%2ErequestAnimationFrame%7C%7Ca%2EwebkitRequestAnimationFrame%7C%7Ca%2EmozRequestAnimationFrame%7C%7Ca%2EoRequestAnimationFrame%7C%7Ca%2EmsRequestAnimationFrame%7C%7Cfunction%28a%29%7BsetTimeout%28a%2C16%29%7D%2Ckc%3Dfunction%28%29%7Bfor%28var%20a%3D%2Bnew%20Date%2Cd%3D0%3Bd%3Cic%2Elength%3Bd%2B%2B%29%7Bvar%20e%3Dic%5Bd%5D%3Bif%28%21e%2Eel%2Eremoved%26%26%21e%2Epaused%29%7Bvar%20f%2Cg%2Ch%3Da%2De%2Estart%2Ci%3De%2Ems%2Cj%3De%2Eeasing%2Ck%3De%2Efrom%2Cl%3De%2Ediff%2Cm%3De%2Eto%2Cn%3D%28e%2Et%2Ce%2Eel%29%2Co%3D%7B%7D%2Cp%3D%7B%7D%3Bif%28e%2Einitstatus%3F%28h%3D%28e%2Einitstatus%2Ae%2Eanim%2Etop%2De%2Eprev%29%2F%28e%2Epercent%2De%2Eprev%29%2Ai%2Ce%2Estatus%3De%2Einitstatus%2Cdelete%20e%2Einitstatus%2Ce%2Estop%26%26ic%2Esplice%28d%2D%2D%2C1%29%29%3Ae%2Estatus%3D%28e%2Eprev%2B%28e%2Epercent%2De%2Eprev%29%2A%28h%2Fi%29%29%2Fe%2Eanim%2Etop%2C%21%280%3Eh%29%29if%28i%3Eh%29%7Bvar%20q%3Dj%28h%2Fi%29%3Bfor%28var%20r%20in%20k%29if%28k%5Bz%5D%28r%29%29%7Bswitch%28db%5Br%5D%29%7Bcase%20T%3Af%3D%2Bk%5Br%5D%2Bq%2Ai%2Al%5Br%5D%3Bbreak%3Bcase%22colour%22%3Af%3D%22rgb%28%22%2B%5Blc%28%24%28k%5Br%5D%2Er%2Bq%2Ai%2Al%5Br%5D%2Er%29%29%2Clc%28%24%28k%5Br%5D%2Eg%2Bq%2Ai%2Al%5Br%5D%2Eg%29%29%2Clc%28%24%28k%5Br%5D%2Eb%2Bq%2Ai%2Al%5Br%5D%2Eb%29%29%5D%2Ejoin%28%22%2C%22%29%2B%22%29%22%3Bbreak%3Bcase%22path%22%3Af%3D%5B%5D%3Bfor%28var%20t%3D0%2Cu%3Dk%5Br%5D%2Elength%3Bu%3Et%3Bt%2B%2B%29%7Bf%5Bt%5D%3D%5Bk%5Br%5D%5Bt%5D%5B0%5D%5D%3Bfor%28var%20v%3D1%2Cw%3Dk%5Br%5D%5Bt%5D%2Elength%3Bw%3Ev%3Bv%2B%2B%29f%5Bt%5D%5Bv%5D%3D%2Bk%5Br%5D%5Bt%5D%5Bv%5D%2Bq%2Ai%2Al%5Br%5D%5Bt%5D%5Bv%5D%3Bf%5Bt%5D%3Df%5Bt%5D%2Ejoin%28H%29%7Df%3Df%2Ejoin%28H%29%3Bbreak%3Bcase%22transform%22%3Aif%28l%5Br%5D%2Ereal%29for%28f%3D%5B%5D%2Ct%3D0%2Cu%3Dk%5Br%5D%2Elength%3Bu%3Et%3Bt%2B%2B%29for%28f%5Bt%5D%3D%5Bk%5Br%5D%5Bt%5D%5B0%5D%5D%2Cv%3D1%2Cw%3Dk%5Br%5D%5Bt%5D%2Elength%3Bw%3Ev%3Bv%2B%2B%29f%5Bt%5D%5Bv%5D%3Dk%5Br%5D%5Bt%5D%5Bv%5D%2Bq%2Ai%2Al%5Br%5D%5Bt%5D%5Bv%5D%3Belse%7Bvar%20x%3Dfunction%28a%29%7Breturn%2Bk%5Br%5D%5Ba%5D%2Bq%2Ai%2Al%5Br%5D%5Ba%5D%7D%3Bf%3D%5B%5B%22m%22%2Cx%280%29%2Cx%281%29%2Cx%282%29%2Cx%283%29%2Cx%284%29%2Cx%285%29%5D%5D%7Dbreak%3Bcase%22csv%22%3Aif%28%22clip%2Drect%22%3D%3Dr%29for%28f%3D%5B%5D%2Ct%3D4%3Bt%2D%2D%3B%29f%5Bt%5D%3D%2Bk%5Br%5D%5Bt%5D%2Bq%2Ai%2Al%5Br%5D%5Bt%5D%3Bbreak%3Bdefault%3Avar%20y%3D%5B%5D%5BE%5D%28k%5Br%5D%29%3Bfor%28f%3D%5B%5D%2Ct%3Dn%2Epaper%2EcustomAttributes%5Br%5D%2Elength%3Bt%2D%2D%3B%29f%5Bt%5D%3D%2By%5Bt%5D%2Bq%2Ai%2Al%5Br%5D%5Bt%5D%7Do%5Br%5D%3Df%7Dn%2Eattr%28o%29%2Cfunction%28a%2Cc%2Cd%29%7BsetTimeout%28function%28%29%7Bb%28%22raphael%2Eanim%2Eframe%2E%22%2Ba%2Cc%2Cd%29%7D%29%7D%28n%2Eid%2Cn%2Ce%2Eanim%29%7Delse%7Bif%28function%28a%2Cd%2Ce%29%7BsetTimeout%28function%28%29%7Bb%28%22raphael%2Eanim%2Eframe%2E%22%2Bd%2Eid%2Cd%2Ce%29%2Cb%28%22raphael%2Eanim%2Efinish%2E%22%2Bd%2Eid%2Cd%2Ce%29%2Cc%2Eis%28a%2C%22function%22%29%26%26a%2Ecall%28d%29%7D%29%7D%28e%2Ecallback%2Cn%2Ce%2Eanim%29%2Cn%2Eattr%28m%29%2Cic%2Esplice%28d%2D%2D%2C1%29%2Ce%2Erepeat%3E1%26%26%21e%2Enext%29%7Bfor%28g%20in%20m%29m%5Bz%5D%28g%29%26%26%28p%5Bg%5D%3De%2EtotalOrigin%5Bg%5D%29%3Be%2Eel%2Eattr%28p%29%2Cs%28e%2Eanim%2Ce%2Eel%2Ce%2Eanim%2Epercents%5B0%5D%2Cnull%2Ce%2EtotalOrigin%2Ce%2Erepeat%2D1%29%7De%2Enext%26%26%21e%2Estop%26%26s%28e%2Eanim%2Ce%2Eel%2Ce%2Enext%2Cnull%2Ce%2EtotalOrigin%2Ce%2Erepeat%29%7D%7D%7Dc%2Esvg%26%26n%26%26n%2Epaper%26%26n%2Epaper%2Esafari%28%29%2Cic%2Elength%26%26jc%28kc%29%7D%2Clc%3Dfunction%28a%29%7Breturn%20a%3E255%3F255%3A0%3Ea%3F0%3Aa%7D%3B%24b%2EanimateWith%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%2Cg%29%7Bvar%20h%3Dthis%3Bif%28h%2Eremoved%29return%20g%26%26g%2Ecall%28h%29%2Ch%3Bvar%20i%3Dd%20instanceof%20r%3Fd%3Ac%2Eanimation%28d%2Ce%2Cf%2Cg%29%3Bs%28i%2Ch%2Ci%2Epercents%5B0%5D%2Cnull%2Ch%2Eattr%28%29%29%3Bfor%28var%20j%3D0%2Ck%3Dic%2Elength%3Bk%3Ej%3Bj%2B%2B%29if%28ic%5Bj%5D%2Eanim%3D%3Db%26%26ic%5Bj%5D%2Eel%3D%3Da%29%7Bic%5Bk%2D1%5D%2Estart%3Dic%5Bj%5D%2Estart%3Bbreak%7Dreturn%20h%7D%2C%24b%2EonAnimation%3Dfunction%28a%29%7Breturn%20a%3Fb%2Eon%28%22raphael%2Eanim%2Eframe%2E%22%2Bthis%2Eid%2Ca%29%3Ab%2Eunbind%28%22raphael%2Eanim%2Eframe%2E%22%2Bthis%2Eid%29%2Cthis%7D%2Cr%2Eprototype%2Edelay%3Dfunction%28a%29%7Bvar%20b%3Dnew%20r%28this%2Eanim%2Cthis%2Ems%29%3Breturn%20b%2Etimes%3Dthis%2Etimes%2Cb%2Edel%3D%2Ba%7C%7C0%2Cb%7D%2Cr%2Eprototype%2Erepeat%3Dfunction%28a%29%7Bvar%20b%3Dnew%20r%28this%2Eanim%2Cthis%2Ems%29%3Breturn%20b%2Edel%3Dthis%2Edel%2Cb%2Etimes%3DN%2Efloor%28O%28a%2C0%29%29%7C%7C1%2Cb%7D%2Cc%2Eanimation%3Dfunction%28a%2Cb%2Cd%2Ce%29%7Bif%28a%20instanceof%20r%29return%20a%3B%28c%2Eis%28d%2C%22function%22%29%7C%7C%21d%29%26%26%28e%3De%7C%7Cd%7C%7Cnull%2Cd%3Dnull%29%2Ca%3DObject%28a%29%2Cb%3D%2Bb%7C%7C0%3Bvar%20f%2Cg%2Ch%3D%7B%7D%3Bfor%28g%20in%20a%29a%5Bz%5D%28g%29%26%26%5F%28g%29%21%3Dg%26%26%5F%28g%29%2B%22%25%22%21%3Dg%26%26%28f%3D%210%2Ch%5Bg%5D%3Da%5Bg%5D%29%3Breturn%20f%3F%28d%26%26%28h%2Eeasing%3Dd%29%2Ce%26%26%28h%2Ecallback%3De%29%2Cnew%20r%28%7B100%3Ah%7D%2Cb%29%29%3Anew%20r%28a%2Cb%29%7D%2C%24b%2Eanimate%3Dfunction%28a%2Cb%2Cd%2Ce%29%7Bvar%20f%3Dthis%3Bif%28f%2Eremoved%29return%20e%26%26e%2Ecall%28f%29%2Cf%3Bvar%20g%3Da%20instanceof%20r%3Fa%3Ac%2Eanimation%28a%2Cb%2Cd%2Ce%29%3Breturn%20s%28g%2Cf%2Cg%2Epercents%5B0%5D%2Cnull%2Cf%2Eattr%28%29%29%2Cf%7D%2C%24b%2EsetTime%3Dfunction%28a%2Cb%29%7Breturn%20a%26%26null%21%3Db%26%26this%2Estatus%28a%2CP%28b%2Ca%2Ems%29%2Fa%2Ems%29%2Cthis%7D%2C%24b%2Estatus%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%3D%5B%5D%2Cf%3D0%3Bif%28null%21%3Db%29return%20s%28a%2Cthis%2C%2D1%2CP%28b%2C1%29%29%2Cthis%3Bfor%28c%3Dic%2Elength%3Bc%3Ef%3Bf%2B%2B%29if%28d%3Dic%5Bf%5D%2Cd%2Eel%2Eid%3D%3Dthis%2Eid%26%26%28%21a%7C%7Cd%2Eanim%3D%3Da%29%29%7Bif%28a%29return%20d%2Estatus%3Be%2Epush%28%7Banim%3Ad%2Eanim%2Cstatus%3Ad%2Estatus%7D%29%7Dreturn%20a%3F0%3Ae%7D%2C%24b%2Epause%3Dfunction%28a%29%7Bfor%28var%20c%3D0%3Bc%3Cic%2Elength%3Bc%2B%2B%29ic%5Bc%5D%2Eel%2Eid%21%3Dthis%2Eid%7C%7Ca%26%26ic%5Bc%5D%2Eanim%21%3Da%7C%7Cb%28%22raphael%2Eanim%2Epause%2E%22%2Bthis%2Eid%2Cthis%2Cic%5Bc%5D%2Eanim%29%21%3D%3D%211%26%26%28ic%5Bc%5D%2Epaused%3D%210%29%3Breturn%20this%7D%2C%24b%2Eresume%3Dfunction%28a%29%7Bfor%28var%20c%3D0%3Bc%3Cic%2Elength%3Bc%2B%2B%29if%28ic%5Bc%5D%2Eel%2Eid%3D%3Dthis%2Eid%26%26%28%21a%7C%7Cic%5Bc%5D%2Eanim%3D%3Da%29%29%7Bvar%20d%3Dic%5Bc%5D%3Bb%28%22raphael%2Eanim%2Eresume%2E%22%2Bthis%2Eid%2Cthis%2Cd%2Eanim%29%21%3D%3D%211%26%26%28delete%20d%2Epaused%2Cthis%2Estatus%28d%2Eanim%2Cd%2Estatus%29%29%7Dreturn%20this%7D%2C%24b%2Estop%3Dfunction%28a%29%7Bfor%28var%20c%3D0%3Bc%3Cic%2Elength%3Bc%2B%2B%29ic%5Bc%5D%2Eel%2Eid%21%3Dthis%2Eid%7C%7Ca%26%26ic%5Bc%5D%2Eanim%21%3Da%7C%7Cb%28%22raphael%2Eanim%2Estop%2E%22%2Bthis%2Eid%2Cthis%2Cic%5Bc%5D%2Eanim%29%21%3D%3D%211%26%26ic%2Esplice%28c%2D%2D%2C1%29%3Breturn%20this%7D%2Cb%2Eon%28%22raphael%2Eremove%22%2Ct%29%2Cb%2Eon%28%22raphael%2Eclear%22%2Ct%29%2C%24b%2EtoString%3Dfunction%28%29%7Breturn%22Rapha%C3%ABl%E2%80%99s%20object%22%7D%3Bvar%20mc%3Dfunction%28a%29%7Bif%28this%2Eitems%3D%5B%5D%2Cthis%2Elength%3D0%2Cthis%2Etype%3D%22set%22%2Ca%29for%28var%20b%3D0%2Cc%3Da%2Elength%3Bc%3Eb%3Bb%2B%2B%29%21a%5Bb%5D%7C%7Ca%5Bb%5D%2Econstructor%21%3D%24b%2Econstructor%26%26a%5Bb%5D%2Econstructor%21%3Dmc%7C%7C%28this%5Bthis%2Eitems%2Elength%5D%3Dthis%2Eitems%5Bthis%2Eitems%2Elength%5D%3Da%5Bb%5D%2Cthis%2Elength%2B%2B%29%7D%2Cnc%3Dmc%2Eprototype%3Bnc%2Epush%3Dfunction%28%29%7Bfor%28var%20a%2Cb%2Cc%3D0%2Cd%3Darguments%2Elength%3Bd%3Ec%3Bc%2B%2B%29a%3Darguments%5Bc%5D%2C%21a%7C%7Ca%2Econstructor%21%3D%24b%2Econstructor%26%26a%2Econstructor%21%3Dmc%7C%7C%28b%3Dthis%2Eitems%2Elength%2Cthis%5Bb%5D%3Dthis%2Eitems%5Bb%5D%3Da%2Cthis%2Elength%2B%2B%29%3Breturn%20this%7D%2Cnc%2Epop%3Dfunction%28%29%7Breturn%20this%2Elength%26%26delete%20this%5Bthis%2Elength%2D%2D%5D%2Cthis%2Eitems%2Epop%28%29%7D%2Cnc%2EforEach%3Dfunction%28a%2Cb%29%7Bfor%28var%20c%3D0%2Cd%3Dthis%2Eitems%2Elength%3Bd%3Ec%3Bc%2B%2B%29if%28a%2Ecall%28b%2Cthis%2Eitems%5Bc%5D%2Cc%29%3D%3D%3D%211%29return%20this%3Breturn%20this%7D%3Bfor%28var%20oc%20in%20%24b%29%24b%5Bz%5D%28oc%29%26%26%28nc%5Boc%5D%3Dfunction%28a%29%7Breturn%20function%28%29%7Bvar%20b%3Darguments%3Breturn%20this%2EforEach%28function%28c%29%7Bc%5Ba%5D%5BD%5D%28c%2Cb%29%7D%29%7D%7D%28oc%29%29%3Breturn%20nc%2Eattr%3Dfunction%28a%2Cb%29%7Bif%28a%26%26c%2Eis%28a%2CV%29%26%26c%2Eis%28a%5B0%5D%2C%22object%22%29%29for%28var%20d%3D0%2Ce%3Da%2Elength%3Be%3Ed%3Bd%2B%2B%29this%2Eitems%5Bd%5D%2Eattr%28a%5Bd%5D%29%3Belse%20for%28var%20f%3D0%2Cg%3Dthis%2Eitems%2Elength%3Bg%3Ef%3Bf%2B%2B%29this%2Eitems%5Bf%5D%2Eattr%28a%2Cb%29%3Breturn%20this%7D%2Cnc%2Eclear%3Dfunction%28%29%7Bfor%28%3Bthis%2Elength%3B%29this%2Epop%28%29%7D%2Cnc%2Esplice%3Dfunction%28a%2Cb%29%7Ba%3D0%3Ea%3FO%28this%2Elength%2Ba%2C0%29%3Aa%2Cb%3DO%280%2CP%28this%2Elength%2Da%2Cb%29%29%3Bvar%20c%2Cd%3D%5B%5D%2Ce%3D%5B%5D%2Cf%3D%5B%5D%3Bfor%28c%3D2%3Bc%3Carguments%2Elength%3Bc%2B%2B%29f%2Epush%28arguments%5Bc%5D%29%3Bfor%28c%3D0%3Bb%3Ec%3Bc%2B%2B%29e%2Epush%28this%5Ba%2Bc%5D%29%3Bfor%28%3Bc%3Cthis%2Elength%2Da%3Bc%2B%2B%29d%2Epush%28this%5Ba%2Bc%5D%29%3Bvar%20g%3Df%2Elength%3Bfor%28c%3D0%3Bc%3Cg%2Bd%2Elength%3Bc%2B%2B%29this%2Eitems%5Ba%2Bc%5D%3Dthis%5Ba%2Bc%5D%3Dg%3Ec%3Ff%5Bc%5D%3Ad%5Bc%2Dg%5D%3Bfor%28c%3Dthis%2Eitems%2Elength%3Dthis%2Elength%2D%3Db%2Dg%3Bthis%5Bc%5D%3B%29delete%20this%5Bc%2B%2B%5D%3Breturn%20new%20mc%28e%29%7D%2Cnc%2Eexclude%3Dfunction%28a%29%7Bfor%28var%20b%3D0%2Cc%3Dthis%2Elength%3Bc%3Eb%3Bb%2B%2B%29if%28this%5Bb%5D%3D%3Da%29return%20this%2Esplice%28b%2C1%29%2C%210%7D%2Cnc%2Eanimate%3Dfunction%28a%2Cb%2Cd%2Ce%29%7B%28c%2Eis%28d%2C%22function%22%29%7C%7C%21d%29%26%26%28e%3Dd%7C%7Cnull%29%3Bvar%20f%2Cg%2Ch%3Dthis%2Eitems%2Elength%2Ci%3Dh%2Cj%3Dthis%3Bif%28%21h%29return%20this%3Be%26%26%28g%3Dfunction%28%29%7B%21%2D%2Dh%26%26e%2Ecall%28j%29%7D%29%2Cd%3Dc%2Eis%28d%2CU%29%3Fd%3Ag%3Bvar%20k%3Dc%2Eanimation%28a%2Cb%2Cd%2Cg%29%3Bfor%28f%3Dthis%2Eitems%5B%2D%2Di%5D%2Eanimate%28k%29%3Bi%2D%2D%3B%29this%2Eitems%5Bi%5D%26%26%21this%2Eitems%5Bi%5D%2Eremoved%26%26this%2Eitems%5Bi%5D%2EanimateWith%28f%2Ck%2Ck%29%2Cthis%2Eitems%5Bi%5D%26%26%21this%2Eitems%5Bi%5D%2Eremoved%7C%7Ch%2D%2D%3Breturn%20this%7D%2Cnc%2EinsertAfter%3Dfunction%28a%29%7Bfor%28var%20b%3Dthis%2Eitems%2Elength%3Bb%2D%2D%3B%29this%2Eitems%5Bb%5D%2EinsertAfter%28a%29%3Breturn%20this%7D%2Cnc%2EgetBBox%3Dfunction%28%29%7Bfor%28var%20a%3D%5B%5D%2Cb%3D%5B%5D%2Cc%3D%5B%5D%2Cd%3D%5B%5D%2Ce%3Dthis%2Eitems%2Elength%3Be%2D%2D%3B%29if%28%21this%2Eitems%5Be%5D%2Eremoved%29%7Bvar%20f%3Dthis%2Eitems%5Be%5D%2EgetBBox%28%29%3Ba%2Epush%28f%2Ex%29%2Cb%2Epush%28f%2Ey%29%2Cc%2Epush%28f%2Ex%2Bf%2Ewidth%29%2Cd%2Epush%28f%2Ey%2Bf%2Eheight%29%7Dreturn%20a%3DP%5BD%5D%280%2Ca%29%2Cb%3DP%5BD%5D%280%2Cb%29%2Cc%3DO%5BD%5D%280%2Cc%29%2Cd%3DO%5BD%5D%280%2Cd%29%2C%7Bx%3Aa%2Cy%3Ab%2Cx2%3Ac%2Cy2%3Ad%2Cwidth%3Ac%2Da%2Cheight%3Ad%2Db%7D%7D%2Cnc%2Eclone%3Dfunction%28a%29%7Ba%3Dthis%2Epaper%2Eset%28%29%3Bfor%28var%20b%3D0%2Cc%3Dthis%2Eitems%2Elength%3Bc%3Eb%3Bb%2B%2B%29a%2Epush%28this%2Eitems%5Bb%5D%2Eclone%28%29%29%3Breturn%20a%7D%2Cnc%2EtoString%3Dfunction%28%29%7Breturn%22Rapha%C3%ABl%E2%80%98s%20set%22%7D%2Cnc%2Eglow%3Dfunction%28a%29%7Bvar%20b%3Dthis%2Epaper%2Eset%28%29%3Breturn%20this%2EforEach%28function%28c%29%7Bvar%20d%3Dc%2Eglow%28a%29%3Bnull%21%3Dd%26%26d%2EforEach%28function%28a%29%7Bb%2Epush%28a%29%7D%29%7D%29%2Cb%7D%2Cnc%2EisPointInside%3Dfunction%28a%2Cb%29%7Bvar%20c%3D%211%3Breturn%20this%2EforEach%28function%28d%29%7Breturn%20d%2EisPointInside%28a%2Cb%29%3F%28console%2Elog%28%22runned%22%29%2Cc%3D%210%2C%211%29%3Avoid%200%7D%29%2Cc%7D%2Cc%2EregisterFont%3Dfunction%28a%29%7Bif%28%21a%2Eface%29return%20a%3Bthis%2Efonts%3Dthis%2Efonts%7C%7C%7B%7D%3Bvar%20b%3D%7Bw%3Aa%2Ew%2Cface%3A%7B%7D%2Cglyphs%3A%7B%7D%7D%2Cc%3Da%2Eface%5B%22font%2Dfamily%22%5D%3Bfor%28var%20d%20in%20a%2Eface%29a%2Eface%5Bz%5D%28d%29%26%26%28b%2Eface%5Bd%5D%3Da%2Eface%5Bd%5D%29%3Bif%28this%2Efonts%5Bc%5D%3Fthis%2Efonts%5Bc%5D%2Epush%28b%29%3Athis%2Efonts%5Bc%5D%3D%5Bb%5D%2C%21a%2Esvg%29%7Bb%2Eface%5B%22units%2Dper%2Dem%22%5D%3Dab%28a%2Eface%5B%22units%2Dper%2Dem%22%5D%2C10%29%3Bfor%28var%20e%20in%20a%2Eglyphs%29if%28a%2Eglyphs%5Bz%5D%28e%29%29%7Bvar%20f%3Da%2Eglyphs%5Be%5D%3Bif%28b%2Eglyphs%5Be%5D%3D%7Bw%3Af%2Ew%2Ck%3A%7B%7D%2Cd%3Af%2Ed%26%26%22M%22%2Bf%2Ed%2Ereplace%28%2F%5Bmlcxtrv%5D%2Fg%2Cfunction%28a%29%7Breturn%7Bl%3A%22L%22%2Cc%3A%22C%22%2Cx%3A%22z%22%2Ct%3A%22m%22%2Cr%3A%22l%22%2Cv%3A%22c%22%7D%5Ba%5D%7C%7C%22M%22%7D%29%2B%22z%22%7D%2Cf%2Ek%29for%28var%20g%20in%20f%2Ek%29f%5Bz%5D%28g%29%26%26%28b%2Eglyphs%5Be%5D%2Ek%5Bg%5D%3Df%2Ek%5Bg%5D%29%7D%7Dreturn%20a%7D%2Cv%2EgetFont%3Dfunction%28a%2Cb%2Cd%2Ce%29%7Bif%28e%3De%7C%7C%22normal%22%2Cd%3Dd%7C%7C%22normal%22%2Cb%3D%2Bb%7C%7C%7Bnormal%3A400%2Cbold%3A700%2Clighter%3A300%2Cbolder%3A800%7D%5Bb%5D%7C%7C400%2Cc%2Efonts%29%7Bvar%20f%3Dc%2Efonts%5Ba%5D%3Bif%28%21f%29%7Bvar%20g%3Dnew%20RegExp%28%22%28%5E%7C%5C%5Cs%29%22%2Ba%2Ereplace%28%2F%5B%5E%5Cw%5Cd%5Cs%2B%21%7E%2E%3A%5F%2D%5D%2Fg%2CG%29%2B%22%28%5C%5Cs%7C%24%29%22%2C%22i%22%29%3Bfor%28var%20h%20in%20c%2Efonts%29if%28c%2Efonts%5Bz%5D%28h%29%26%26g%2Etest%28h%29%29%7Bf%3Dc%2Efonts%5Bh%5D%3Bbreak%7D%7Dvar%20i%3Bif%28f%29for%28var%20j%3D0%2Ck%3Df%2Elength%3Bk%3Ej%26%26%28i%3Df%5Bj%5D%2Ci%2Eface%5B%22font%2Dweight%22%5D%21%3Db%7C%7Ci%2Eface%5B%22font%2Dstyle%22%5D%21%3Dd%26%26i%2Eface%5B%22font%2Dstyle%22%5D%7C%7Ci%2Eface%5B%22font%2Dstretch%22%5D%21%3De%29%3Bj%2B%2B%29%3Breturn%20i%7D%7D%2Cv%2Eprint%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%29%7Bg%3Dg%7C%7C%22middle%22%2Ch%3DO%28P%28h%7C%7C0%2C1%29%2C%2D1%29%2Ci%3DO%28P%28i%7C%7C1%2C3%29%2C1%29%3Bvar%20j%2Ck%3DI%28d%29%5BJ%5D%28G%29%2Cl%3D0%2Cm%3D0%2Cn%3DG%3Bif%28c%2Eis%28e%2C%22string%22%29%26%26%28e%3Dthis%2EgetFont%28e%29%29%2Ce%29%7Bj%3D%28f%7C%7C16%29%2Fe%2Eface%5B%22units%2Dper%2Dem%22%5D%3Bfor%28var%20o%3De%2Eface%2Ebbox%5BJ%5D%28w%29%2Cp%3D%2Bo%5B0%5D%2Cq%3Do%5B3%5D%2Do%5B1%5D%2Cr%3D0%2Cs%3D%2Bo%5B1%5D%2B%28%22baseline%22%3D%3Dg%3Fq%2B%20%2Be%2Eface%2Edescent%3Aq%2F2%29%2Ct%3D0%2Cu%3Dk%2Elength%3Bu%3Et%3Bt%2B%2B%29%7Bif%28%22%5Cn%22%3D%3Dk%5Bt%5D%29l%3D0%2Cx%3D0%2Cm%3D0%2Cr%2B%3Dq%2Ai%3Belse%7Bvar%20v%3Dm%26%26e%2Eglyphs%5Bk%5Bt%2D1%5D%5D%7C%7C%7B%7D%2Cx%3De%2Eglyphs%5Bk%5Bt%5D%5D%3Bl%2B%3Dm%3F%28v%2Ew%7C%7Ce%2Ew%29%2B%28v%2Ek%26%26v%2Ek%5Bk%5Bt%5D%5D%7C%7C0%29%2Be%2Ew%2Ah%3A0%2Cm%3D1%7Dx%26%26x%2Ed%26%26%28n%2B%3Dc%2EtransformPath%28x%2Ed%2C%5B%22t%22%2Cl%2Aj%2Cr%2Aj%2C%22s%22%2Cj%2Cj%2Cp%2Cs%2C%22t%22%2C%28a%2Dp%29%2Fj%2C%28b%2Ds%29%2Fj%5D%29%29%7D%7Dreturn%20this%2Epath%28n%29%2Eattr%28%7Bfill%3A%22%23000%22%2Cstroke%3A%22none%22%7D%29%7D%2Cv%2Eadd%3Dfunction%28a%29%7Bif%28c%2Eis%28a%2C%22array%22%29%29for%28var%20b%2Cd%3Dthis%2Eset%28%29%2Ce%3D0%2Cf%3Da%2Elength%3Bf%3Ee%3Be%2B%2B%29b%3Da%5Be%5D%7C%7C%7B%7D%2Cx%5Bz%5D%28b%2Etype%29%26%26d%2Epush%28this%5Bb%2Etype%5D%28%29%2Eattr%28b%29%29%3Breturn%20d%7D%2Cc%2Eformat%3Dfunction%28a%2Cb%29%7Bvar%20d%3Dc%2Eis%28b%2CV%29%3F%5B0%5D%5BE%5D%28b%29%3Aarguments%3Breturn%20a%26%26c%2Eis%28a%2CU%29%26%26d%2Elength%2D1%26%26%28a%3Da%2Ereplace%28y%2Cfunction%28a%2Cb%29%7Breturn%20null%3D%3Dd%5B%2B%2Bb%5D%3FG%3Ad%5Bb%5D%7D%29%29%2Ca%7C%7CG%7D%2Cc%2Efullfill%3Dfunction%28%29%7Bvar%20a%3D%2F%5C%7B%28%5B%5E%5C%7D%5D%2B%29%5C%7D%2Fg%2Cb%3D%2F%28%3F%3A%28%3F%3A%5E%7C%5C%2E%29%28%2E%2B%3F%29%28%3F%3D%5C%5B%7C%5C%2E%7C%24%7C%5C%28%29%7C%5C%5B%28%27%7C%22%29%28%2E%2B%3F%29%5C2%5C%5D%29%28%5C%28%5C%29%29%3F%2Fg%2Cc%3Dfunction%28a%2Cc%2Cd%29%7Bvar%20e%3Dd%3Breturn%20c%2Ereplace%28b%2Cfunction%28a%2Cb%2Cc%2Cd%2Cf%29%7Bb%3Db%7C%7Cd%2Ce%26%26%28b%20in%20e%26%26%28e%3De%5Bb%5D%29%2C%22function%22%3D%3Dtypeof%20e%26%26f%26%26%28e%3De%28%29%29%29%7D%29%2Ce%3D%28null%3D%3De%7C%7Ce%3D%3Dd%3Fa%3Ae%29%2B%22%22%7D%3Breturn%20function%28b%2Cd%29%7Breturn%20String%28b%29%2Ereplace%28a%2Cfunction%28a%2Cb%29%7Breturn%20c%28a%2Cb%2Cd%29%7D%29%7D%7D%28%29%2Cc%2Eninja%3Dfunction%28%29%7Breturn%20B%2Ewas%3FA%2Ewin%2ERaphael%3DB%2Eis%3Adelete%20Raphael%2Cc%7D%2Cc%2Est%3Dnc%2Cfunction%28a%2Cb%2Cd%29%7Bfunction%20e%28%29%7B%2Fin%2F%2Etest%28a%2EreadyState%29%3FsetTimeout%28e%2C9%29%3Ac%2Eeve%28%22raphael%2EDOMload%22%29%7Dnull%3D%3Da%2EreadyState%26%26a%2EaddEventListener%26%26%28a%2EaddEventListener%28b%2Cd%3Dfunction%28%29%7Ba%2EremoveEventListener%28b%2Cd%2C%211%29%2Ca%2EreadyState%3D%22complete%22%7D%2C%211%29%2Ca%2EreadyState%3D%22loading%22%29%2Ce%28%29%7D%28document%2C%22DOMContentLoaded%22%29%2Cb%2Eon%28%22raphael%2EDOMload%22%2Cfunction%28%29%7Bu%3D%210%7D%29%2Cfunction%28%29%7Bif%28c%2Esvg%29%7Bvar%20a%3D%22hasOwnProperty%22%2Cb%3DString%2Cd%3DparseFloat%2Ce%3DparseInt%2Cf%3DMath%2Cg%3Df%2Emax%2Ch%3Df%2Eabs%2Ci%3Df%2Epow%2Cj%3D%2F%5B%2C%20%5D%2B%2F%2Ck%3Dc%2Eeve%2Cl%3D%22%22%2Cm%3D%22%20%22%2Cn%3D%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F1999%2Fxlink%22%2Co%3D%7Bblock%3A%22M5%2C0%200%2C2%2E5%205%2C5z%22%2Cclassic%3A%22M5%2C0%200%2C2%2E5%205%2C5%203%2E5%2C3%203%2E5%2C2z%22%2Cdiamond%3A%22M2%2E5%2C0%205%2C2%2E5%202%2E5%2C5%200%2C2%2E5z%22%2Copen%3A%22M6%2C1%201%2C3%2E5%206%2C6%22%2Coval%3A%22M2%2E5%2C0A2%2E5%2C2%2E5%2C0%2C0%2C1%2C2%2E5%2C5%202%2E5%2C2%2E5%2C0%2C0%2C1%2C2%2E5%2C0z%22%7D%2Cp%3D%7B%7D%3Bc%2EtoString%3Dfunction%28%29%7Breturn%22Your%20browser%20supports%20SVG%2E%5CnYou%20are%20running%20Rapha%C3%ABl%20%22%2Bthis%2Eversion%7D%3Bvar%20q%3Dfunction%28d%2Ce%29%7Bif%28e%29%7B%22string%22%3D%3Dtypeof%20d%26%26%28d%3Dq%28d%29%29%3Bfor%28var%20f%20in%20e%29e%5Ba%5D%28f%29%26%26%28%22xlink%3A%22%3D%3Df%2Esubstring%280%2C6%29%3Fd%2EsetAttributeNS%28n%2Cf%2Esubstring%286%29%2Cb%28e%5Bf%5D%29%29%3Ad%2EsetAttribute%28f%2Cb%28e%5Bf%5D%29%29%29%7Delse%20d%3Dc%2E%5Fg%2Edoc%2EcreateElementNS%28%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F2000%2Fsvg%22%2Cd%29%2Cd%2Estyle%26%26%28d%2Estyle%2EwebkitTapHighlightColor%3D%22rgba%280%2C0%2C0%2C0%29%22%29%3Breturn%20d%7D%2Cr%3Dfunction%28a%2Ce%29%7Bvar%20j%3D%22linear%22%2Ck%3Da%2Eid%2Be%2Cm%3D%2E5%2Cn%3D%2E5%2Co%3Da%2Enode%2Cp%3Da%2Epaper%2Cr%3Do%2Estyle%2Cs%3Dc%2E%5Fg%2Edoc%2EgetElementById%28k%29%3Bif%28%21s%29%7Bif%28e%3Db%28e%29%2Ereplace%28c%2E%5Fradial%5Fgradient%2Cfunction%28a%2Cb%2Cc%29%7Bif%28j%3D%22radial%22%2Cb%26%26c%29%7Bm%3Dd%28b%29%2Cn%3Dd%28c%29%3Bvar%20e%3D2%2A%28n%3E%2E5%29%2D1%3Bi%28m%2D%2E5%2C2%29%2Bi%28n%2D%2E5%2C2%29%3E%2E25%26%26%28n%3Df%2Esqrt%28%2E25%2Di%28m%2D%2E5%2C2%29%29%2Ae%2B%2E5%29%26%26%2E5%21%3Dn%26%26%28n%3Dn%2EtoFixed%285%29%2D1e%2D5%2Ae%29%7Dreturn%20l%7D%29%2Ce%3De%2Esplit%28%2F%5Cs%2A%5C%2D%5Cs%2A%2F%29%2C%22linear%22%3D%3Dj%29%7Bvar%20t%3De%2Eshift%28%29%3Bif%28t%3D%2Dd%28t%29%2CisNaN%28t%29%29return%20null%3Bvar%20u%3D%5B0%2C0%2Cf%2Ecos%28c%2Erad%28t%29%29%2Cf%2Esin%28c%2Erad%28t%29%29%5D%2Cv%3D1%2F%28g%28h%28u%5B2%5D%29%2Ch%28u%5B3%5D%29%29%7C%7C1%29%3Bu%5B2%5D%2A%3Dv%2Cu%5B3%5D%2A%3Dv%2Cu%5B2%5D%3C0%26%26%28u%5B0%5D%3D%2Du%5B2%5D%2Cu%5B2%5D%3D0%29%2Cu%5B3%5D%3C0%26%26%28u%5B1%5D%3D%2Du%5B3%5D%2Cu%5B3%5D%3D0%29%7Dvar%20w%3Dc%2E%5FparseDots%28e%29%3Bif%28%21w%29return%20null%3Bif%28k%3Dk%2Ereplace%28%2F%5B%5C%28%5C%29%5Cs%2C%5Cxb0%23%5D%2Fg%2C%22%5F%22%29%2Ca%2Egradient%26%26k%21%3Da%2Egradient%2Eid%26%26%28p%2Edefs%2EremoveChild%28a%2Egradient%29%2Cdelete%20a%2Egradient%29%2C%21a%2Egradient%29%7Bs%3Dq%28j%2B%22Gradient%22%2C%7Bid%3Ak%7D%29%2Ca%2Egradient%3Ds%2Cq%28s%2C%22radial%22%3D%3Dj%3F%7Bfx%3Am%2Cfy%3An%7D%3A%7Bx1%3Au%5B0%5D%2Cy1%3Au%5B1%5D%2Cx2%3Au%5B2%5D%2Cy2%3Au%5B3%5D%2CgradientTransform%3Aa%2Ematrix%2Einvert%28%29%7D%29%2Cp%2Edefs%2EappendChild%28s%29%3Bfor%28var%20x%3D0%2Cy%3Dw%2Elength%3By%3Ex%3Bx%2B%2B%29s%2EappendChild%28q%28%22stop%22%2C%7Boffset%3Aw%5Bx%5D%2Eoffset%3Fw%5Bx%5D%2Eoffset%3Ax%3F%22100%25%22%3A%220%25%22%2C%22stop%2Dcolor%22%3Aw%5Bx%5D%2Ecolor%7C%7C%22%23fff%22%7D%29%29%7D%7Dreturn%20q%28o%2C%7Bfill%3A%22url%28%23%22%2Bk%2B%22%29%22%2Copacity%3A1%2C%22fill%2Dopacity%22%3A1%7D%29%2Cr%2Efill%3Dl%2Cr%2Eopacity%3D1%2Cr%2EfillOpacity%3D1%2C1%7D%2Cs%3Dfunction%28a%29%7Bvar%20b%3Da%2EgetBBox%281%29%3Bq%28a%2Epattern%2C%7BpatternTransform%3Aa%2Ematrix%2Einvert%28%29%2B%22%20translate%28%22%2Bb%2Ex%2B%22%2C%22%2Bb%2Ey%2B%22%29%22%7D%29%7D%2Ct%3Dfunction%28d%2Ce%2Cf%29%7Bif%28%22path%22%3D%3Dd%2Etype%29%7Bfor%28var%20g%2Ch%2Ci%2Cj%2Ck%2Cm%3Db%28e%29%2EtoLowerCase%28%29%2Esplit%28%22%2D%22%29%2Cn%3Dd%2Epaper%2Cr%3Df%3F%22end%22%3A%22start%22%2Cs%3Dd%2Enode%2Ct%3Dd%2Eattrs%2Cu%3Dt%5B%22stroke%2Dwidth%22%5D%2Cv%3Dm%2Elength%2Cw%3D%22classic%22%2Cx%3D3%2Cy%3D3%2Cz%3D5%3Bv%2D%2D%3B%29switch%28m%5Bv%5D%29%7Bcase%22block%22%3Acase%22classic%22%3Acase%22oval%22%3Acase%22diamond%22%3Acase%22open%22%3Acase%22none%22%3Aw%3Dm%5Bv%5D%3Bbreak%3Bcase%22wide%22%3Ay%3D5%3Bbreak%3Bcase%22narrow%22%3Ay%3D2%3Bbreak%3Bcase%22long%22%3Ax%3D5%3Bbreak%3Bcase%22short%22%3Ax%3D2%7Dif%28%22open%22%3D%3Dw%3F%28x%2B%3D2%2Cy%2B%3D2%2Cz%2B%3D2%2Ci%3D1%2Cj%3Df%3F4%3A1%2Ck%3D%7Bfill%3A%22none%22%2Cstroke%3At%2Estroke%7D%29%3A%28j%3Di%3Dx%2F2%2Ck%3D%7Bfill%3At%2Estroke%2Cstroke%3A%22none%22%7D%29%2Cd%2E%5F%2Earrows%3Ff%3F%28d%2E%5F%2Earrows%2EendPath%26%26p%5Bd%2E%5F%2Earrows%2EendPath%5D%2D%2D%2Cd%2E%5F%2Earrows%2EendMarker%26%26p%5Bd%2E%5F%2Earrows%2EendMarker%5D%2D%2D%29%3A%28d%2E%5F%2Earrows%2EstartPath%26%26p%5Bd%2E%5F%2Earrows%2EstartPath%5D%2D%2D%2Cd%2E%5F%2Earrows%2EstartMarker%26%26p%5Bd%2E%5F%2Earrows%2EstartMarker%5D%2D%2D%29%3Ad%2E%5F%2Earrows%3D%7B%7D%2C%22none%22%21%3Dw%29%7Bvar%20A%3D%22raphael%2Dmarker%2D%22%2Bw%2CB%3D%22raphael%2Dmarker%2D%22%2Br%2Bw%2Bx%2By%3Bc%2E%5Fg%2Edoc%2EgetElementById%28A%29%3Fp%5BA%5D%2B%2B%3A%28n%2Edefs%2EappendChild%28q%28q%28%22path%22%29%2C%7B%22stroke%2Dlinecap%22%3A%22round%22%2Cd%3Ao%5Bw%5D%2Cid%3AA%7D%29%29%2Cp%5BA%5D%3D1%29%3Bvar%20C%2CD%3Dc%2E%5Fg%2Edoc%2EgetElementById%28B%29%3BD%3F%28p%5BB%5D%2B%2B%2CC%3DD%2EgetElementsByTagName%28%22use%22%29%5B0%5D%29%3A%28D%3Dq%28q%28%22marker%22%29%2C%7Bid%3AB%2CmarkerHeight%3Ay%2CmarkerWidth%3Ax%2Corient%3A%22auto%22%2CrefX%3Aj%2CrefY%3Ay%2F2%7D%29%2CC%3Dq%28q%28%22use%22%29%2C%7B%22xlink%3Ahref%22%3A%22%23%22%2BA%2Ctransform%3A%28f%3F%22rotate%28180%20%22%2Bx%2F2%2B%22%20%22%2By%2F2%2B%22%29%20%22%3Al%29%2B%22scale%28%22%2Bx%2Fz%2B%22%2C%22%2By%2Fz%2B%22%29%22%2C%22stroke%2Dwidth%22%3A%281%2F%28%28x%2Fz%2By%2Fz%29%2F2%29%29%2EtoFixed%284%29%7D%29%2CD%2EappendChild%28C%29%2Cn%2Edefs%2EappendChild%28D%29%2Cp%5BB%5D%3D1%29%2Cq%28C%2Ck%29%3Bvar%20E%3Di%2A%28%22diamond%22%21%3Dw%26%26%22oval%22%21%3Dw%29%3Bf%3F%28g%3Dd%2E%5F%2Earrows%2Estartdx%2Au%7C%7C0%2Ch%3Dc%2EgetTotalLength%28t%2Epath%29%2DE%2Au%29%3A%28g%3DE%2Au%2Ch%3Dc%2EgetTotalLength%28t%2Epath%29%2D%28d%2E%5F%2Earrows%2Eenddx%2Au%7C%7C0%29%29%2Ck%3D%7B%7D%2Ck%5B%22marker%2D%22%2Br%5D%3D%22url%28%23%22%2BB%2B%22%29%22%2C%28h%7C%7Cg%29%26%26%28k%2Ed%3Dc%2EgetSubpath%28t%2Epath%2Cg%2Ch%29%29%2Cq%28s%2Ck%29%2Cd%2E%5F%2Earrows%5Br%2B%22Path%22%5D%3DA%2Cd%2E%5F%2Earrows%5Br%2B%22Marker%22%5D%3DB%2Cd%2E%5F%2Earrows%5Br%2B%22dx%22%5D%3DE%2Cd%2E%5F%2Earrows%5Br%2B%22Type%22%5D%3Dw%2Cd%2E%5F%2Earrows%5Br%2B%22String%22%5D%3De%7Delse%20f%3F%28g%3Dd%2E%5F%2Earrows%2Estartdx%2Au%7C%7C0%2Ch%3Dc%2EgetTotalLength%28t%2Epath%29%2Dg%29%3A%28g%3D0%2Ch%3Dc%2EgetTotalLength%28t%2Epath%29%2D%28d%2E%5F%2Earrows%2Eenddx%2Au%7C%7C0%29%29%2Cd%2E%5F%2Earrows%5Br%2B%22Path%22%5D%26%26q%28s%2C%7Bd%3Ac%2EgetSubpath%28t%2Epath%2Cg%2Ch%29%7D%29%2Cdelete%20d%2E%5F%2Earrows%5Br%2B%22Path%22%5D%2Cdelete%20d%2E%5F%2Earrows%5Br%2B%22Marker%22%5D%2Cdelete%20d%2E%5F%2Earrows%5Br%2B%22dx%22%5D%2Cdelete%20d%2E%5F%2Earrows%5Br%2B%22Type%22%5D%2Cdelete%20d%2E%5F%2Earrows%5Br%2B%22String%22%5D%3Bfor%28k%20in%20p%29if%28p%5Ba%5D%28k%29%26%26%21p%5Bk%5D%29%7Bvar%20F%3Dc%2E%5Fg%2Edoc%2EgetElementById%28k%29%3BF%26%26F%2EparentNode%2EremoveChild%28F%29%7D%7D%7D%2Cu%3D%7B%22%22%3A%5B0%5D%2Cnone%3A%5B0%5D%2C%22%2D%22%3A%5B3%2C1%5D%2C%22%2E%22%3A%5B1%2C1%5D%2C%22%2D%2E%22%3A%5B3%2C1%2C1%2C1%5D%2C%22%2D%2E%2E%22%3A%5B3%2C1%2C1%2C1%2C1%2C1%5D%2C%22%2E%20%22%3A%5B1%2C3%5D%2C%22%2D%20%22%3A%5B4%2C3%5D%2C%22%2D%2D%22%3A%5B8%2C3%5D%2C%22%2D%20%2E%22%3A%5B4%2C3%2C1%2C3%5D%2C%22%2D%2D%2E%22%3A%5B8%2C3%2C1%2C3%5D%2C%22%2D%2D%2E%2E%22%3A%5B8%2C3%2C1%2C3%2C1%2C3%5D%7D%2Cv%3Dfunction%28a%2Cc%2Cd%29%7Bif%28c%3Du%5Bb%28c%29%2EtoLowerCase%28%29%5D%29%7Bfor%28var%20e%3Da%2Eattrs%5B%22stroke%2Dwidth%22%5D%7C%7C%221%22%2Cf%3D%7Bround%3Ae%2Csquare%3Ae%2Cbutt%3A0%7D%5Ba%2Eattrs%5B%22stroke%2Dlinecap%22%5D%7C%7Cd%5B%22stroke%2Dlinecap%22%5D%5D%7C%7C0%2Cg%3D%5B%5D%2Ch%3Dc%2Elength%3Bh%2D%2D%3B%29g%5Bh%5D%3Dc%5Bh%5D%2Ae%2B%28h%252%3F1%3A%2D1%29%2Af%3Bq%28a%2Enode%2C%7B%22stroke%2Ddasharray%22%3Ag%2Ejoin%28%22%2C%22%29%7D%29%7D%7D%2Cw%3Dfunction%28d%2Cf%29%7Bvar%20i%3Dd%2Enode%2Ck%3Dd%2Eattrs%2Cm%3Di%2Estyle%2Evisibility%3Bi%2Estyle%2Evisibility%3D%22hidden%22%3Bfor%28var%20o%20in%20f%29if%28f%5Ba%5D%28o%29%29%7Bif%28%21c%2E%5FavailableAttrs%5Ba%5D%28o%29%29continue%3Bvar%20p%3Df%5Bo%5D%3Bswitch%28k%5Bo%5D%3Dp%2Co%29%7Bcase%22blur%22%3Ad%2Eblur%28p%29%3Bbreak%3Bcase%22href%22%3Acase%22title%22%3Avar%20u%3Dq%28%22title%22%29%2Cw%3Dc%2E%5Fg%2Edoc%2EcreateTextNode%28p%29%3Bu%2EappendChild%28w%29%2Ci%2EappendChild%28u%29%3Bbreak%3Bcase%22target%22%3Avar%20x%3Di%2EparentNode%3Bif%28%22a%22%21%3Dx%2EtagName%2EtoLowerCase%28%29%29%7Bvar%20u%3Dq%28%22a%22%29%3Bx%2EinsertBefore%28u%2Ci%29%2Cu%2EappendChild%28i%29%2Cx%3Du%7D%22target%22%3D%3Do%3Fx%2EsetAttributeNS%28n%2C%22show%22%2C%22blank%22%3D%3Dp%3F%22new%22%3Ap%29%3Ax%2EsetAttributeNS%28n%2Co%2Cp%29%3Bbreak%3Bcase%22cursor%22%3Ai%2Estyle%2Ecursor%3Dp%3Bbreak%3Bcase%22transform%22%3Ad%2Etransform%28p%29%3Bbreak%3Bcase%22arrow%2Dstart%22%3At%28d%2Cp%29%3Bbreak%3Bcase%22arrow%2Dend%22%3At%28d%2Cp%2C1%29%3Bbreak%3Bcase%22clip%2Drect%22%3Avar%20z%3Db%28p%29%2Esplit%28j%29%3Bif%284%3D%3Dz%2Elength%29%7Bd%2Eclip%26%26d%2Eclip%2EparentNode%2EparentNode%2EremoveChild%28d%2Eclip%2EparentNode%29%3Bvar%20A%3Dq%28%22clipPath%22%29%2CB%3Dq%28%22rect%22%29%3BA%2Eid%3Dc%2EcreateUUID%28%29%2Cq%28B%2C%7Bx%3Az%5B0%5D%2Cy%3Az%5B1%5D%2Cwidth%3Az%5B2%5D%2Cheight%3Az%5B3%5D%7D%29%2CA%2EappendChild%28B%29%2Cd%2Epaper%2Edefs%2EappendChild%28A%29%2Cq%28i%2C%7B%22clip%2Dpath%22%3A%22url%28%23%22%2BA%2Eid%2B%22%29%22%7D%29%2Cd%2Eclip%3DB%7Dif%28%21p%29%7Bvar%20C%3Di%2EgetAttribute%28%22clip%2Dpath%22%29%3Bif%28C%29%7Bvar%20D%3Dc%2E%5Fg%2Edoc%2EgetElementById%28C%2Ereplace%28%2F%28%5Eurl%5C%28%23%7C%5C%29%24%29%2Fg%2Cl%29%29%3BD%26%26D%2EparentNode%2EremoveChild%28D%29%2Cq%28i%2C%7B%22clip%2Dpath%22%3Al%7D%29%2Cdelete%20d%2Eclip%7D%7Dbreak%3Bcase%22path%22%3A%22path%22%3D%3Dd%2Etype%26%26%28q%28i%2C%7Bd%3Ap%3Fk%2Epath%3Dc%2E%5FpathToAbsolute%28p%29%3A%22M0%2C0%22%7D%29%2Cd%2E%5F%2Edirty%3D1%2Cd%2E%5F%2Earrows%26%26%28%22startString%22in%20d%2E%5F%2Earrows%26%26t%28d%2Cd%2E%5F%2Earrows%2EstartString%29%2C%22endString%22in%20d%2E%5F%2Earrows%26%26t%28d%2Cd%2E%5F%2Earrows%2EendString%2C1%29%29%29%3Bbreak%3Bcase%22width%22%3Aif%28i%2EsetAttribute%28o%2Cp%29%2Cd%2E%5F%2Edirty%3D1%2C%21k%2Efx%29break%3Bo%3D%22x%22%2Cp%3Dk%2Ex%3Bcase%22x%22%3Ak%2Efx%26%26%28p%3D%2Dk%2Ex%2D%28k%2Ewidth%7C%7C0%29%29%3Bcase%22rx%22%3Aif%28%22rx%22%3D%3Do%26%26%22rect%22%3D%3Dd%2Etype%29break%3Bcase%22cx%22%3Ai%2EsetAttribute%28o%2Cp%29%2Cd%2Epattern%26%26s%28d%29%2Cd%2E%5F%2Edirty%3D1%3Bbreak%3Bcase%22height%22%3Aif%28i%2EsetAttribute%28o%2Cp%29%2Cd%2E%5F%2Edirty%3D1%2C%21k%2Efy%29break%3Bo%3D%22y%22%2Cp%3Dk%2Ey%3Bcase%22y%22%3Ak%2Efy%26%26%28p%3D%2Dk%2Ey%2D%28k%2Eheight%7C%7C0%29%29%3Bcase%22ry%22%3Aif%28%22ry%22%3D%3Do%26%26%22rect%22%3D%3Dd%2Etype%29break%3Bcase%22cy%22%3Ai%2EsetAttribute%28o%2Cp%29%2Cd%2Epattern%26%26s%28d%29%2Cd%2E%5F%2Edirty%3D1%3Bbreak%3Bcase%22r%22%3A%22rect%22%3D%3Dd%2Etype%3Fq%28i%2C%7Brx%3Ap%2Cry%3Ap%7D%29%3Ai%2EsetAttribute%28o%2Cp%29%2Cd%2E%5F%2Edirty%3D1%3Bbreak%3Bcase%22src%22%3A%22image%22%3D%3Dd%2Etype%26%26i%2EsetAttributeNS%28n%2C%22href%22%2Cp%29%3Bbreak%3Bcase%22stroke%2Dwidth%22%3A%281%21%3Dd%2E%5F%2Esx%7C%7C1%21%3Dd%2E%5F%2Esy%29%26%26%28p%2F%3Dg%28h%28d%2E%5F%2Esx%29%2Ch%28d%2E%5F%2Esy%29%29%7C%7C1%29%2Cd%2Epaper%2E%5FvbSize%26%26%28p%2A%3Dd%2Epaper%2E%5FvbSize%29%2Ci%2EsetAttribute%28o%2Cp%29%2Ck%5B%22stroke%2Ddasharray%22%5D%26%26v%28d%2Ck%5B%22stroke%2Ddasharray%22%5D%2Cf%29%2Cd%2E%5F%2Earrows%26%26%28%22startString%22in%20d%2E%5F%2Earrows%26%26t%28d%2Cd%2E%5F%2Earrows%2EstartString%29%2C%22endString%22in%20d%2E%5F%2Earrows%26%26t%28d%2Cd%2E%5F%2Earrows%2EendString%2C1%29%29%3Bbreak%3Bcase%22stroke%2Ddasharray%22%3Av%28d%2Cp%2Cf%29%3Bbreak%3Bcase%22fill%22%3Avar%20E%3Db%28p%29%2Ematch%28c%2E%5FISURL%29%3Bif%28E%29%7BA%3Dq%28%22pattern%22%29%3Bvar%20F%3Dq%28%22image%22%29%3BA%2Eid%3Dc%2EcreateUUID%28%29%2Cq%28A%2C%7Bx%3A0%2Cy%3A0%2CpatternUnits%3A%22userSpaceOnUse%22%2Cheight%3A1%2Cwidth%3A1%7D%29%2Cq%28F%2C%7Bx%3A0%2Cy%3A0%2C%22xlink%3Ahref%22%3AE%5B1%5D%7D%29%2CA%2EappendChild%28F%29%2Cfunction%28a%29%7Bc%2E%5Fpreload%28E%5B1%5D%2Cfunction%28%29%7Bvar%20b%3Dthis%2EoffsetWidth%2Cc%3Dthis%2EoffsetHeight%3Bq%28a%2C%7Bwidth%3Ab%2Cheight%3Ac%7D%29%2Cq%28F%2C%7Bwidth%3Ab%2Cheight%3Ac%7D%29%2Cd%2Epaper%2Esafari%28%29%7D%29%7D%28A%29%2Cd%2Epaper%2Edefs%2EappendChild%28A%29%2Cq%28i%2C%7Bfill%3A%22url%28%23%22%2BA%2Eid%2B%22%29%22%7D%29%2Cd%2Epattern%3DA%2Cd%2Epattern%26%26s%28d%29%3Bbreak%7Dvar%20G%3Dc%2EgetRGB%28p%29%3Bif%28G%2Eerror%29%7Bif%28%28%22circle%22%3D%3Dd%2Etype%7C%7C%22ellipse%22%3D%3Dd%2Etype%7C%7C%22r%22%21%3Db%28p%29%2EcharAt%28%29%29%26%26r%28d%2Cp%29%29%7Bif%28%22opacity%22in%20k%7C%7C%22fill%2Dopacity%22in%20k%29%7Bvar%20H%3Dc%2E%5Fg%2Edoc%2EgetElementById%28i%2EgetAttribute%28%22fill%22%29%2Ereplace%28%2F%5Eurl%5C%28%23%7C%5C%29%24%2Fg%2Cl%29%29%3Bif%28H%29%7Bvar%20I%3DH%2EgetElementsByTagName%28%22stop%22%29%3Bq%28I%5BI%2Elength%2D1%5D%2C%7B%22stop%2Dopacity%22%3A%28%22opacity%22in%20k%3Fk%2Eopacity%3A1%29%2A%28%22fill%2Dopacity%22in%20k%3Fk%5B%22fill%2Dopacity%22%5D%3A1%29%7D%29%7D%7Dk%2Egradient%3Dp%2Ck%2Efill%3D%22none%22%3Bbreak%7D%7Delse%20delete%20f%2Egradient%2Cdelete%20k%2Egradient%2C%21c%2Eis%28k%2Eopacity%2C%22undefined%22%29%26%26c%2Eis%28f%2Eopacity%2C%22undefined%22%29%26%26q%28i%2C%7Bopacity%3Ak%2Eopacity%7D%29%2C%21c%2Eis%28k%5B%22fill%2Dopacity%22%5D%2C%22undefined%22%29%26%26c%2Eis%28f%5B%22fill%2Dopacity%22%5D%2C%22undefined%22%29%26%26q%28i%2C%7B%22fill%2Dopacity%22%3Ak%5B%22fill%2Dopacity%22%5D%7D%29%3BG%5Ba%5D%28%22opacity%22%29%26%26q%28i%2C%7B%22fill%2Dopacity%22%3AG%2Eopacity%3E1%3FG%2Eopacity%2F100%3AG%2Eopacity%7D%29%3Bcase%22stroke%22%3AG%3Dc%2EgetRGB%28p%29%2Ci%2EsetAttribute%28o%2CG%2Ehex%29%2C%22stroke%22%3D%3Do%26%26G%5Ba%5D%28%22opacity%22%29%26%26q%28i%2C%7B%22stroke%2Dopacity%22%3AG%2Eopacity%3E1%3FG%2Eopacity%2F100%3AG%2Eopacity%7D%29%2C%22stroke%22%3D%3Do%26%26d%2E%5F%2Earrows%26%26%28%22startString%22in%20d%2E%5F%2Earrows%26%26t%28d%2Cd%2E%5F%2Earrows%2EstartString%29%2C%22endString%22in%20d%2E%5F%2Earrows%26%26t%28d%2Cd%2E%5F%2Earrows%2EendString%2C1%29%29%3Bbreak%3Bcase%22gradient%22%3A%28%22circle%22%3D%3Dd%2Etype%7C%7C%22ellipse%22%3D%3Dd%2Etype%7C%7C%22r%22%21%3Db%28p%29%2EcharAt%28%29%29%26%26r%28d%2Cp%29%3Bbreak%3Bcase%22opacity%22%3Ak%2Egradient%26%26%21k%5Ba%5D%28%22stroke%2Dopacity%22%29%26%26q%28i%2C%7B%22stroke%2Dopacity%22%3Ap%3E1%3Fp%2F100%3Ap%7D%29%3Bcase%22fill%2Dopacity%22%3Aif%28k%2Egradient%29%7BH%3Dc%2E%5Fg%2Edoc%2EgetElementById%28i%2EgetAttribute%28%22fill%22%29%2Ereplace%28%2F%5Eurl%5C%28%23%7C%5C%29%24%2Fg%2Cl%29%29%2CH%26%26%28I%3DH%2EgetElementsByTagName%28%22stop%22%29%2Cq%28I%5BI%2Elength%2D1%5D%2C%7B%22stop%2Dopacity%22%3Ap%7D%29%29%3Bbreak%7Ddefault%3A%22font%2Dsize%22%3D%3Do%26%26%28p%3De%28p%2C10%29%2B%22px%22%29%3Bvar%20J%3Do%2Ereplace%28%2F%28%5C%2D%2E%29%2Fg%2Cfunction%28a%29%7Breturn%20a%2Esubstring%281%29%2EtoUpperCase%28%29%7D%29%3Bi%2Estyle%5BJ%5D%3Dp%2Cd%2E%5F%2Edirty%3D1%2Ci%2EsetAttribute%28o%2Cp%29%7D%7Dy%28d%2Cf%29%2Ci%2Estyle%2Evisibility%3Dm%7D%2Cx%3D1%2E2%2Cy%3Dfunction%28d%2Cf%29%7Bif%28%22text%22%3D%3Dd%2Etype%26%26%28f%5Ba%5D%28%22text%22%29%7C%7Cf%5Ba%5D%28%22font%22%29%7C%7Cf%5Ba%5D%28%22font%2Dsize%22%29%7C%7Cf%5Ba%5D%28%22x%22%29%7C%7Cf%5Ba%5D%28%22y%22%29%29%29%7Bvar%20g%3Dd%2Eattrs%2Ch%3Dd%2Enode%2Ci%3Dh%2EfirstChild%3Fe%28c%2E%5Fg%2Edoc%2EdefaultView%2EgetComputedStyle%28h%2EfirstChild%2Cl%29%2EgetPropertyValue%28%22font%2Dsize%22%29%2C10%29%3A10%3B%0Aif%28f%5Ba%5D%28%22text%22%29%29%7Bfor%28g%2Etext%3Df%2Etext%3Bh%2EfirstChild%3B%29h%2EremoveChild%28h%2EfirstChild%29%3Bfor%28var%20j%2Ck%3Db%28f%2Etext%29%2Esplit%28%22%5Cn%22%29%2Cm%3D%5B%5D%2Cn%3D0%2Co%3Dk%2Elength%3Bo%3En%3Bn%2B%2B%29j%3Dq%28%22tspan%22%29%2Cn%26%26q%28j%2C%7Bdy%3Ai%2Ax%2Cx%3Ag%2Ex%7D%29%2Cj%2EappendChild%28c%2E%5Fg%2Edoc%2EcreateTextNode%28k%5Bn%5D%29%29%2Ch%2EappendChild%28j%29%2Cm%5Bn%5D%3Dj%7Delse%20for%28m%3Dh%2EgetElementsByTagName%28%22tspan%22%29%2Cn%3D0%2Co%3Dm%2Elength%3Bo%3En%3Bn%2B%2B%29n%3Fq%28m%5Bn%5D%2C%7Bdy%3Ai%2Ax%2Cx%3Ag%2Ex%7D%29%3Aq%28m%5B0%5D%2C%7Bdy%3A0%7D%29%3Bq%28h%2C%7Bx%3Ag%2Ex%2Cy%3Ag%2Ey%7D%29%2Cd%2E%5F%2Edirty%3D1%3Bvar%20p%3Dd%2E%5FgetBBox%28%29%2Cr%3Dg%2Ey%2D%28p%2Ey%2Bp%2Eheight%2F2%29%3Br%26%26c%2Eis%28r%2C%22finite%22%29%26%26q%28m%5B0%5D%2C%7Bdy%3Ar%7D%29%7D%7D%2Cz%3Dfunction%28a%2Cb%29%7Bthis%5B0%5D%3Dthis%2Enode%3Da%2Ca%2Eraphael%3D%210%2Cthis%2Eid%3Dc%2E%5Foid%2B%2B%2Ca%2Eraphaelid%3Dthis%2Eid%2Cthis%2Ematrix%3Dc%2Ematrix%28%29%2Cthis%2ErealPath%3Dnull%2Cthis%2Epaper%3Db%2Cthis%2Eattrs%3Dthis%2Eattrs%7C%7C%7B%7D%2Cthis%2E%5F%3D%7Btransform%3A%5B%5D%2Csx%3A1%2Csy%3A1%2Cdeg%3A0%2Cdx%3A0%2Cdy%3A0%2Cdirty%3A1%7D%2C%21b%2Ebottom%26%26%28b%2Ebottom%3Dthis%29%2Cthis%2Eprev%3Db%2Etop%2Cb%2Etop%26%26%28b%2Etop%2Enext%3Dthis%29%2Cb%2Etop%3Dthis%2Cthis%2Enext%3Dnull%7D%2CA%3Dc%2Eel%3Bz%2Eprototype%3DA%2CA%2Econstructor%3Dz%2Cc%2E%5Fengine%2Epath%3Dfunction%28a%2Cb%29%7Bvar%20c%3Dq%28%22path%22%29%3Bb%2Ecanvas%26%26b%2Ecanvas%2EappendChild%28c%29%3Bvar%20d%3Dnew%20z%28c%2Cb%29%3Breturn%20d%2Etype%3D%22path%22%2Cw%28d%2C%7Bfill%3A%22none%22%2Cstroke%3A%22%23000%22%2Cpath%3Aa%7D%29%2Cd%7D%2CA%2Erotate%3Dfunction%28a%2Cc%2Ce%29%7Bif%28this%2Eremoved%29return%20this%3Bif%28a%3Db%28a%29%2Esplit%28j%29%2Ca%2Elength%2D1%26%26%28c%3Dd%28a%5B1%5D%29%2Ce%3Dd%28a%5B2%5D%29%29%2Ca%3Dd%28a%5B0%5D%29%2Cnull%3D%3De%26%26%28c%3De%29%2Cnull%3D%3Dc%7C%7Cnull%3D%3De%29%7Bvar%20f%3Dthis%2EgetBBox%281%29%3Bc%3Df%2Ex%2Bf%2Ewidth%2F2%2Ce%3Df%2Ey%2Bf%2Eheight%2F2%7Dreturn%20this%2Etransform%28this%2E%5F%2Etransform%2Econcat%28%5B%5B%22r%22%2Ca%2Cc%2Ce%5D%5D%29%29%2Cthis%7D%2CA%2Escale%3Dfunction%28a%2Cc%2Ce%2Cf%29%7Bif%28this%2Eremoved%29return%20this%3Bif%28a%3Db%28a%29%2Esplit%28j%29%2Ca%2Elength%2D1%26%26%28c%3Dd%28a%5B1%5D%29%2Ce%3Dd%28a%5B2%5D%29%2Cf%3Dd%28a%5B3%5D%29%29%2Ca%3Dd%28a%5B0%5D%29%2Cnull%3D%3Dc%26%26%28c%3Da%29%2Cnull%3D%3Df%26%26%28e%3Df%29%2Cnull%3D%3De%7C%7Cnull%3D%3Df%29var%20g%3Dthis%2EgetBBox%281%29%3Breturn%20e%3Dnull%3D%3De%3Fg%2Ex%2Bg%2Ewidth%2F2%3Ae%2Cf%3Dnull%3D%3Df%3Fg%2Ey%2Bg%2Eheight%2F2%3Af%2Cthis%2Etransform%28this%2E%5F%2Etransform%2Econcat%28%5B%5B%22s%22%2Ca%2Cc%2Ce%2Cf%5D%5D%29%29%2Cthis%7D%2CA%2Etranslate%3Dfunction%28a%2Cc%29%7Breturn%20this%2Eremoved%3Fthis%3A%28a%3Db%28a%29%2Esplit%28j%29%2Ca%2Elength%2D1%26%26%28c%3Dd%28a%5B1%5D%29%29%2Ca%3Dd%28a%5B0%5D%29%7C%7C0%2Cc%3D%2Bc%7C%7C0%2Cthis%2Etransform%28this%2E%5F%2Etransform%2Econcat%28%5B%5B%22t%22%2Ca%2Cc%5D%5D%29%29%2Cthis%29%7D%2CA%2Etransform%3Dfunction%28b%29%7Bvar%20d%3Dthis%2E%5F%3Bif%28null%3D%3Db%29return%20d%2Etransform%3Bif%28c%2E%5FextractTransform%28this%2Cb%29%2Cthis%2Eclip%26%26q%28this%2Eclip%2C%7Btransform%3Athis%2Ematrix%2Einvert%28%29%7D%29%2Cthis%2Epattern%26%26s%28this%29%2Cthis%2Enode%26%26q%28this%2Enode%2C%7Btransform%3Athis%2Ematrix%7D%29%2C1%21%3Dd%2Esx%7C%7C1%21%3Dd%2Esy%29%7Bvar%20e%3Dthis%2Eattrs%5Ba%5D%28%22stroke%2Dwidth%22%29%3Fthis%2Eattrs%5B%22stroke%2Dwidth%22%5D%3A1%3Bthis%2Eattr%28%7B%22stroke%2Dwidth%22%3Ae%7D%29%7Dreturn%20this%7D%2CA%2Ehide%3Dfunction%28%29%7Breturn%21this%2Eremoved%26%26this%2Epaper%2Esafari%28this%2Enode%2Estyle%2Edisplay%3D%22none%22%29%2Cthis%7D%2CA%2Eshow%3Dfunction%28%29%7Breturn%21this%2Eremoved%26%26this%2Epaper%2Esafari%28this%2Enode%2Estyle%2Edisplay%3D%22%22%29%2Cthis%7D%2CA%2Eremove%3Dfunction%28%29%7Bif%28%21this%2Eremoved%26%26this%2Enode%2EparentNode%29%7Bvar%20a%3Dthis%2Epaper%3Ba%2E%5F%5Fset%5F%5F%26%26a%2E%5F%5Fset%5F%5F%2Eexclude%28this%29%2Ck%2Eunbind%28%22raphael%2E%2A%2E%2A%2E%22%2Bthis%2Eid%29%2Cthis%2Egradient%26%26a%2Edefs%2EremoveChild%28this%2Egradient%29%2Cc%2E%5Ftear%28this%2Ca%29%2C%22a%22%3D%3Dthis%2Enode%2EparentNode%2EtagName%2EtoLowerCase%28%29%3Fthis%2Enode%2EparentNode%2EparentNode%2EremoveChild%28this%2Enode%2EparentNode%29%3Athis%2Enode%2EparentNode%2EremoveChild%28this%2Enode%29%3Bfor%28var%20b%20in%20this%29this%5Bb%5D%3D%22function%22%3D%3Dtypeof%20this%5Bb%5D%3Fc%2E%5FremovedFactory%28b%29%3Anull%3Bthis%2Eremoved%3D%210%7D%7D%2CA%2E%5FgetBBox%3Dfunction%28%29%7Bif%28%22none%22%3D%3Dthis%2Enode%2Estyle%2Edisplay%29%7Bthis%2Eshow%28%29%3Bvar%20a%3D%210%7Dvar%20b%3D%7B%7D%3Btry%7Bb%3Dthis%2Enode%2EgetBBox%28%29%7Dcatch%28c%29%7B%7Dfinally%7Bb%3Db%7C%7C%7B%7D%7Dreturn%20a%26%26this%2Ehide%28%29%2Cb%7D%2CA%2Eattr%3Dfunction%28b%2Cd%29%7Bif%28this%2Eremoved%29return%20this%3Bif%28null%3D%3Db%29%7Bvar%20e%3D%7B%7D%3Bfor%28var%20f%20in%20this%2Eattrs%29this%2Eattrs%5Ba%5D%28f%29%26%26%28e%5Bf%5D%3Dthis%2Eattrs%5Bf%5D%29%3Breturn%20e%2Egradient%26%26%22none%22%3D%3De%2Efill%26%26%28e%2Efill%3De%2Egradient%29%26%26delete%20e%2Egradient%2Ce%2Etransform%3Dthis%2E%5F%2Etransform%2Ce%7Dif%28null%3D%3Dd%26%26c%2Eis%28b%2C%22string%22%29%29%7Bif%28%22fill%22%3D%3Db%26%26%22none%22%3D%3Dthis%2Eattrs%2Efill%26%26this%2Eattrs%2Egradient%29return%20this%2Eattrs%2Egradient%3Bif%28%22transform%22%3D%3Db%29return%20this%2E%5F%2Etransform%3Bfor%28var%20g%3Db%2Esplit%28j%29%2Ch%3D%7B%7D%2Ci%3D0%2Cl%3Dg%2Elength%3Bl%3Ei%3Bi%2B%2B%29b%3Dg%5Bi%5D%2Ch%5Bb%5D%3Db%20in%20this%2Eattrs%3Fthis%2Eattrs%5Bb%5D%3Ac%2Eis%28this%2Epaper%2EcustomAttributes%5Bb%5D%2C%22function%22%29%3Fthis%2Epaper%2EcustomAttributes%5Bb%5D%2Edef%3Ac%2E%5FavailableAttrs%5Bb%5D%3Breturn%20l%2D1%3Fh%3Ah%5Bg%5B0%5D%5D%7Dif%28null%3D%3Dd%26%26c%2Eis%28b%2C%22array%22%29%29%7Bfor%28h%3D%7B%7D%2Ci%3D0%2Cl%3Db%2Elength%3Bl%3Ei%3Bi%2B%2B%29h%5Bb%5Bi%5D%5D%3Dthis%2Eattr%28b%5Bi%5D%29%3Breturn%20h%7Dif%28null%21%3Dd%29%7Bvar%20m%3D%7B%7D%3Bm%5Bb%5D%3Dd%7Delse%20null%21%3Db%26%26c%2Eis%28b%2C%22object%22%29%26%26%28m%3Db%29%3Bfor%28var%20n%20in%20m%29k%28%22raphael%2Eattr%2E%22%2Bn%2B%22%2E%22%2Bthis%2Eid%2Cthis%2Cm%5Bn%5D%29%3Bfor%28n%20in%20this%2Epaper%2EcustomAttributes%29if%28this%2Epaper%2EcustomAttributes%5Ba%5D%28n%29%26%26m%5Ba%5D%28n%29%26%26c%2Eis%28this%2Epaper%2EcustomAttributes%5Bn%5D%2C%22function%22%29%29%7Bvar%20o%3Dthis%2Epaper%2EcustomAttributes%5Bn%5D%2Eapply%28this%2C%5B%5D%2Econcat%28m%5Bn%5D%29%29%3Bthis%2Eattrs%5Bn%5D%3Dm%5Bn%5D%3Bfor%28var%20p%20in%20o%29o%5Ba%5D%28p%29%26%26%28m%5Bp%5D%3Do%5Bp%5D%29%7Dreturn%20w%28this%2Cm%29%2Cthis%7D%2CA%2EtoFront%3Dfunction%28%29%7Bif%28this%2Eremoved%29return%20this%3B%22a%22%3D%3Dthis%2Enode%2EparentNode%2EtagName%2EtoLowerCase%28%29%3Fthis%2Enode%2EparentNode%2EparentNode%2EappendChild%28this%2Enode%2EparentNode%29%3Athis%2Enode%2EparentNode%2EappendChild%28this%2Enode%29%3Bvar%20a%3Dthis%2Epaper%3Breturn%20a%2Etop%21%3Dthis%26%26c%2E%5Ftofront%28this%2Ca%29%2Cthis%7D%2CA%2EtoBack%3Dfunction%28%29%7Bif%28this%2Eremoved%29return%20this%3Bvar%20a%3Dthis%2Enode%2EparentNode%3Breturn%22a%22%3D%3Da%2EtagName%2EtoLowerCase%28%29%3Fa%2EparentNode%2EinsertBefore%28this%2Enode%2EparentNode%2Cthis%2Enode%2EparentNode%2EparentNode%2EfirstChild%29%3Aa%2EfirstChild%21%3Dthis%2Enode%26%26a%2EinsertBefore%28this%2Enode%2Cthis%2Enode%2EparentNode%2EfirstChild%29%2Cc%2E%5Ftoback%28this%2Cthis%2Epaper%29%2Cthis%2Epaper%2Cthis%7D%2CA%2EinsertAfter%3Dfunction%28a%29%7Bif%28this%2Eremoved%29return%20this%3Bvar%20b%3Da%2Enode%7C%7Ca%5Ba%2Elength%2D1%5D%2Enode%3Breturn%20b%2EnextSibling%3Fb%2EparentNode%2EinsertBefore%28this%2Enode%2Cb%2EnextSibling%29%3Ab%2EparentNode%2EappendChild%28this%2Enode%29%2Cc%2E%5Finsertafter%28this%2Ca%2Cthis%2Epaper%29%2Cthis%7D%2CA%2EinsertBefore%3Dfunction%28a%29%7Bif%28this%2Eremoved%29return%20this%3Bvar%20b%3Da%2Enode%7C%7Ca%5B0%5D%2Enode%3Breturn%20b%2EparentNode%2EinsertBefore%28this%2Enode%2Cb%29%2Cc%2E%5Finsertbefore%28this%2Ca%2Cthis%2Epaper%29%2Cthis%7D%2CA%2Eblur%3Dfunction%28a%29%7Bvar%20b%3Dthis%3Bif%280%21%3D%3D%2Ba%29%7Bvar%20d%3Dq%28%22filter%22%29%2Ce%3Dq%28%22feGaussianBlur%22%29%3Bb%2Eattrs%2Eblur%3Da%2Cd%2Eid%3Dc%2EcreateUUID%28%29%2Cq%28e%2C%7BstdDeviation%3A%2Ba%7C%7C1%2E5%7D%29%2Cd%2EappendChild%28e%29%2Cb%2Epaper%2Edefs%2EappendChild%28d%29%2Cb%2E%5Fblur%3Dd%2Cq%28b%2Enode%2C%7Bfilter%3A%22url%28%23%22%2Bd%2Eid%2B%22%29%22%7D%29%7Delse%20b%2E%5Fblur%26%26%28b%2E%5Fblur%2EparentNode%2EremoveChild%28b%2E%5Fblur%29%2Cdelete%20b%2E%5Fblur%2Cdelete%20b%2Eattrs%2Eblur%29%2Cb%2Enode%2EremoveAttribute%28%22filter%22%29%3Breturn%20b%7D%2Cc%2E%5Fengine%2Ecircle%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3Dq%28%22circle%22%29%3Ba%2Ecanvas%26%26a%2Ecanvas%2EappendChild%28e%29%3Bvar%20f%3Dnew%20z%28e%2Ca%29%3Breturn%20f%2Eattrs%3D%7Bcx%3Ab%2Ccy%3Ac%2Cr%3Ad%2Cfill%3A%22none%22%2Cstroke%3A%22%23000%22%7D%2Cf%2Etype%3D%22circle%22%2Cq%28e%2Cf%2Eattrs%29%2Cf%7D%2Cc%2E%5Fengine%2Erect%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bvar%20g%3Dq%28%22rect%22%29%3Ba%2Ecanvas%26%26a%2Ecanvas%2EappendChild%28g%29%3Bvar%20h%3Dnew%20z%28g%2Ca%29%3Breturn%20h%2Eattrs%3D%7Bx%3Ab%2Cy%3Ac%2Cwidth%3Ad%2Cheight%3Ae%2Cr%3Af%7C%7C0%2Crx%3Af%7C%7C0%2Cry%3Af%7C%7C0%2Cfill%3A%22none%22%2Cstroke%3A%22%23000%22%7D%2Ch%2Etype%3D%22rect%22%2Cq%28g%2Ch%2Eattrs%29%2Ch%7D%2Cc%2E%5Fengine%2Eellipse%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%3Dq%28%22ellipse%22%29%3Ba%2Ecanvas%26%26a%2Ecanvas%2EappendChild%28f%29%3Bvar%20g%3Dnew%20z%28f%2Ca%29%3Breturn%20g%2Eattrs%3D%7Bcx%3Ab%2Ccy%3Ac%2Crx%3Ad%2Cry%3Ae%2Cfill%3A%22none%22%2Cstroke%3A%22%23000%22%7D%2Cg%2Etype%3D%22ellipse%22%2Cq%28f%2Cg%2Eattrs%29%2Cg%7D%2Cc%2E%5Fengine%2Eimage%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bvar%20g%3Dq%28%22image%22%29%3Bq%28g%2C%7Bx%3Ac%2Cy%3Ad%2Cwidth%3Ae%2Cheight%3Af%2CpreserveAspectRatio%3A%22none%22%7D%29%2Cg%2EsetAttributeNS%28n%2C%22href%22%2Cb%29%2Ca%2Ecanvas%26%26a%2Ecanvas%2EappendChild%28g%29%3Bvar%20h%3Dnew%20z%28g%2Ca%29%3Breturn%20h%2Eattrs%3D%7Bx%3Ac%2Cy%3Ad%2Cwidth%3Ae%2Cheight%3Af%2Csrc%3Ab%7D%2Ch%2Etype%3D%22image%22%2Ch%7D%2Cc%2E%5Fengine%2Etext%3Dfunction%28a%2Cb%2Cd%2Ce%29%7Bvar%20f%3Dq%28%22text%22%29%3Ba%2Ecanvas%26%26a%2Ecanvas%2EappendChild%28f%29%3Bvar%20g%3Dnew%20z%28f%2Ca%29%3Breturn%20g%2Eattrs%3D%7Bx%3Ab%2Cy%3Ad%2C%22text%2Danchor%22%3A%22middle%22%2Ctext%3Ae%2Cfont%3Ac%2E%5FavailableAttrs%2Efont%2Cstroke%3A%22none%22%2Cfill%3A%22%23000%22%7D%2Cg%2Etype%3D%22text%22%2Cw%28g%2Cg%2Eattrs%29%2Cg%7D%2Cc%2E%5Fengine%2EsetSize%3Dfunction%28a%2Cb%29%7Breturn%20this%2Ewidth%3Da%7C%7Cthis%2Ewidth%2Cthis%2Eheight%3Db%7C%7Cthis%2Eheight%2Cthis%2Ecanvas%2EsetAttribute%28%22width%22%2Cthis%2Ewidth%29%2Cthis%2Ecanvas%2EsetAttribute%28%22height%22%2Cthis%2Eheight%29%2Cthis%2E%5FviewBox%26%26this%2EsetViewBox%2Eapply%28this%2Cthis%2E%5FviewBox%29%2Cthis%7D%2Cc%2E%5Fengine%2Ecreate%3Dfunction%28%29%7Bvar%20a%3Dc%2E%5FgetContainer%2Eapply%280%2Carguments%29%2Cb%3Da%26%26a%2Econtainer%2Cd%3Da%2Ex%2Ce%3Da%2Ey%2Cf%3Da%2Ewidth%2Cg%3Da%2Eheight%3Bif%28%21b%29throw%20new%20Error%28%22SVG%20container%20not%20found%2E%22%29%3Bvar%20h%2Ci%3Dq%28%22svg%22%29%2Cj%3D%22overflow%3Ahidden%3B%22%3Breturn%20d%3Dd%7C%7C0%2Ce%3De%7C%7C0%2Cf%3Df%7C%7C512%2Cg%3Dg%7C%7C342%2Cq%28i%2C%7Bheight%3Ag%2Cversion%3A1%2E1%2Cwidth%3Af%2Cxmlns%3A%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F2000%2Fsvg%22%7D%29%2C1%3D%3Db%3F%28i%2Estyle%2EcssText%3Dj%2B%22position%3Aabsolute%3Bleft%3A%22%2Bd%2B%22px%3Btop%3A%22%2Be%2B%22px%22%2Cc%2E%5Fg%2Edoc%2Ebody%2EappendChild%28i%29%2Ch%3D1%29%3A%28i%2Estyle%2EcssText%3Dj%2B%22position%3Arelative%22%2Cb%2EfirstChild%3Fb%2EinsertBefore%28i%2Cb%2EfirstChild%29%3Ab%2EappendChild%28i%29%29%2Cb%3Dnew%20c%2E%5FPaper%2Cb%2Ewidth%3Df%2Cb%2Eheight%3Dg%2Cb%2Ecanvas%3Di%2Cb%2Eclear%28%29%2Cb%2E%5Fleft%3Db%2E%5Ftop%3D0%2Ch%26%26%28b%2Erenderfix%3Dfunction%28%29%7B%7D%29%2Cb%2Erenderfix%28%29%2Cb%7D%2Cc%2E%5Fengine%2EsetViewBox%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bk%28%22raphael%2EsetViewBox%22%2Cthis%2Cthis%2E%5FviewBox%2C%5Ba%2Cb%2Cc%2Cd%2Ce%5D%29%3Bvar%20f%2Ch%2Ci%3Dg%28c%2Fthis%2Ewidth%2Cd%2Fthis%2Eheight%29%2Cj%3Dthis%2Etop%2Cl%3De%3F%22meet%22%3A%22xMinYMin%22%3Bfor%28null%3D%3Da%3F%28this%2E%5FvbSize%26%26%28i%3D1%29%2Cdelete%20this%2E%5FvbSize%2Cf%3D%220%200%20%22%2Bthis%2Ewidth%2Bm%2Bthis%2Eheight%29%3A%28this%2E%5FvbSize%3Di%2Cf%3Da%2Bm%2Bb%2Bm%2Bc%2Bm%2Bd%29%2Cq%28this%2Ecanvas%2C%7BviewBox%3Af%2CpreserveAspectRatio%3Al%7D%29%3Bi%26%26j%3B%29h%3D%22stroke%2Dwidth%22in%20j%2Eattrs%3Fj%2Eattrs%5B%22stroke%2Dwidth%22%5D%3A1%2Cj%2Eattr%28%7B%22stroke%2Dwidth%22%3Ah%7D%29%2Cj%2E%5F%2Edirty%3D1%2Cj%2E%5F%2EdirtyT%3D1%2Cj%3Dj%2Eprev%3Breturn%20this%2E%5FviewBox%3D%5Ba%2Cb%2Cc%2Cd%2C%21%21e%5D%2Cthis%7D%2Cc%2Eprototype%2Erenderfix%3Dfunction%28%29%7Bvar%20a%2Cb%3Dthis%2Ecanvas%2Cc%3Db%2Estyle%3Btry%7Ba%3Db%2EgetScreenCTM%28%29%7C%7Cb%2EcreateSVGMatrix%28%29%7Dcatch%28d%29%7Ba%3Db%2EcreateSVGMatrix%28%29%7Dvar%20e%3D%2Da%2Ee%251%2Cf%3D%2Da%2Ef%251%3B%28e%7C%7Cf%29%26%26%28e%26%26%28this%2E%5Fleft%3D%28this%2E%5Fleft%2Be%29%251%2Cc%2Eleft%3Dthis%2E%5Fleft%2B%22px%22%29%2Cf%26%26%28this%2E%5Ftop%3D%28this%2E%5Ftop%2Bf%29%251%2Cc%2Etop%3Dthis%2E%5Ftop%2B%22px%22%29%29%7D%2Cc%2Eprototype%2Eclear%3Dfunction%28%29%7Bc%2Eeve%28%22raphael%2Eclear%22%2Cthis%29%3Bfor%28var%20a%3Dthis%2Ecanvas%3Ba%2EfirstChild%3B%29a%2EremoveChild%28a%2EfirstChild%29%3Bthis%2Ebottom%3Dthis%2Etop%3Dnull%2C%28this%2Edesc%3Dq%28%22desc%22%29%29%2EappendChild%28c%2E%5Fg%2Edoc%2EcreateTextNode%28%22Created%20with%20Rapha%C3%ABl%20%22%2Bc%2Eversion%29%29%2Ca%2EappendChild%28this%2Edesc%29%2Ca%2EappendChild%28this%2Edefs%3Dq%28%22defs%22%29%29%7D%2Cc%2Eprototype%2Eremove%3Dfunction%28%29%7Bk%28%22raphael%2Eremove%22%2Cthis%29%2Cthis%2Ecanvas%2EparentNode%26%26this%2Ecanvas%2EparentNode%2EremoveChild%28this%2Ecanvas%29%3Bfor%28var%20a%20in%20this%29this%5Ba%5D%3D%22function%22%3D%3Dtypeof%20this%5Ba%5D%3Fc%2E%5FremovedFactory%28a%29%3Anull%7D%3Bvar%20B%3Dc%2Est%3Bfor%28var%20C%20in%20A%29A%5Ba%5D%28C%29%26%26%21B%5Ba%5D%28C%29%26%26%28B%5BC%5D%3Dfunction%28a%29%7Breturn%20function%28%29%7Bvar%20b%3Darguments%3Breturn%20this%2EforEach%28function%28c%29%7Bc%5Ba%5D%2Eapply%28c%2Cb%29%7D%29%7D%7D%28C%29%29%7D%7D%28%29%2Cfunction%28%29%7Bif%28c%2Evml%29%7Bvar%20a%3D%22hasOwnProperty%22%2Cb%3DString%2Cd%3DparseFloat%2Ce%3DMath%2Cf%3De%2Eround%2Cg%3De%2Emax%2Ch%3De%2Emin%2Ci%3De%2Eabs%2Cj%3D%22fill%22%2Ck%3D%2F%5B%2C%20%5D%2B%2F%2Cl%3Dc%2Eeve%2Cm%3D%22%20progid%3ADXImageTransform%2EMicrosoft%22%2Cn%3D%22%20%22%2Co%3D%22%22%2Cp%3D%7BM%3A%22m%22%2CL%3A%22l%22%2CC%3A%22c%22%2CZ%3A%22x%22%2Cm%3A%22t%22%2Cl%3A%22r%22%2Cc%3A%22v%22%2Cz%3A%22x%22%7D%2Cq%3D%2F%28%5Bclmz%5D%29%2C%3F%28%5B%5Eclmz%5D%2A%29%2Fgi%2Cr%3D%2F%20progid%3A%5CS%2BBlur%5C%28%5B%5E%5C%29%5D%2B%5C%29%2Fg%2Cs%3D%2F%2D%3F%5B%5E%2C%5Cs%2D%5D%2B%2Fg%2Ct%3D%22position%3Aabsolute%3Bleft%3A0%3Btop%3A0%3Bwidth%3A1px%3Bheight%3A1px%22%2Cu%3D21600%2Cv%3D%7Bpath%3A1%2Crect%3A1%2Cimage%3A1%7D%2Cw%3D%7Bcircle%3A1%2Cellipse%3A1%7D%2Cx%3Dfunction%28a%29%7Bvar%20d%3D%2F%5Bahqstv%5D%2Fgi%2Ce%3Dc%2E%5FpathToAbsolute%3Bif%28b%28a%29%2Ematch%28d%29%26%26%28e%3Dc%2E%5Fpath2curve%29%2Cd%3D%2F%5Bclmz%5D%2Fg%2Ce%3D%3Dc%2E%5FpathToAbsolute%26%26%21b%28a%29%2Ematch%28d%29%29%7Bvar%20g%3Db%28a%29%2Ereplace%28q%2Cfunction%28a%2Cb%2Cc%29%7Bvar%20d%3D%5B%5D%2Ce%3D%22m%22%3D%3Db%2EtoLowerCase%28%29%2Cg%3Dp%5Bb%5D%3Breturn%20c%2Ereplace%28s%2Cfunction%28a%29%7Be%26%262%3D%3Dd%2Elength%26%26%28g%2B%3Dd%2Bp%5B%22m%22%3D%3Db%3F%22l%22%3A%22L%22%5D%2Cd%3D%5B%5D%29%2Cd%2Epush%28f%28a%2Au%29%29%7D%29%2Cg%2Bd%7D%29%3Breturn%20g%7Dvar%20h%2Ci%2Cj%3De%28a%29%3Bg%3D%5B%5D%3Bfor%28var%20k%3D0%2Cl%3Dj%2Elength%3Bl%3Ek%3Bk%2B%2B%29%7Bh%3Dj%5Bk%5D%2Ci%3Dj%5Bk%5D%5B0%5D%2EtoLowerCase%28%29%2C%22z%22%3D%3Di%26%26%28i%3D%22x%22%29%3Bfor%28var%20m%3D1%2Cr%3Dh%2Elength%3Br%3Em%3Bm%2B%2B%29i%2B%3Df%28h%5Bm%5D%2Au%29%2B%28m%21%3Dr%2D1%3F%22%2C%22%3Ao%29%3Bg%2Epush%28i%29%7Dreturn%20g%2Ejoin%28n%29%7D%2Cy%3Dfunction%28a%2Cb%2Cd%29%7Bvar%20e%3Dc%2Ematrix%28%29%3Breturn%20e%2Erotate%28%2Da%2C%2E5%2C%2E5%29%2C%7Bdx%3Ae%2Ex%28b%2Cd%29%2Cdy%3Ae%2Ey%28b%2Cd%29%7D%7D%2Cz%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%29%7Bvar%20g%3Da%2E%5F%2Ch%3Da%2Ematrix%2Ck%3Dg%2Efillpos%2Cl%3Da%2Enode%2Cm%3Dl%2Estyle%2Co%3D1%2Cp%3D%22%22%2Cq%3Du%2Fb%2Cr%3Du%2Fc%3Bif%28m%2Evisibility%3D%22hidden%22%2Cb%26%26c%29%7Bif%28l%2Ecoordsize%3Di%28q%29%2Bn%2Bi%28r%29%2Cm%2Erotation%3Df%2A%280%3Eb%2Ac%3F%2D1%3A1%29%2Cf%29%7Bvar%20s%3Dy%28f%2Cd%2Ce%29%3Bd%3Ds%2Edx%2Ce%3Ds%2Edy%7Dif%280%3Eb%26%26%28p%2B%3D%22x%22%29%2C0%3Ec%26%26%28p%2B%3D%22%20y%22%29%26%26%28o%3D%2D1%29%2Cm%2Eflip%3Dp%2Cl%2Ecoordorigin%3Dd%2A%2Dq%2Bn%2Be%2A%2Dr%2Ck%7C%7Cg%2Efillsize%29%7Bvar%20t%3Dl%2EgetElementsByTagName%28j%29%3Bt%3Dt%26%26t%5B0%5D%2Cl%2EremoveChild%28t%29%2Ck%26%26%28s%3Dy%28f%2Ch%2Ex%28k%5B0%5D%2Ck%5B1%5D%29%2Ch%2Ey%28k%5B0%5D%2Ck%5B1%5D%29%29%2Ct%2Eposition%3Ds%2Edx%2Ao%2Bn%2Bs%2Edy%2Ao%29%2Cg%2Efillsize%26%26%28t%2Esize%3Dg%2Efillsize%5B0%5D%2Ai%28b%29%2Bn%2Bg%2Efillsize%5B1%5D%2Ai%28c%29%29%2Cl%2EappendChild%28t%29%7Dm%2Evisibility%3D%22visible%22%7D%7D%3Bc%2EtoString%3Dfunction%28%29%7Breturn%22Your%20browser%20doesn%E2%80%99t%20support%20SVG%2E%20Falling%20down%20to%20VML%2E%5CnYou%20are%20running%20Rapha%C3%ABl%20%22%2Bthis%2Eversion%7D%3Bvar%20A%3Dfunction%28a%2Cc%2Cd%29%7Bfor%28var%20e%3Db%28c%29%2EtoLowerCase%28%29%2Esplit%28%22%2D%22%29%2Cf%3Dd%3F%22end%22%3A%22start%22%2Cg%3De%2Elength%2Ch%3D%22classic%22%2Ci%3D%22medium%22%2Cj%3D%22medium%22%3Bg%2D%2D%3B%29switch%28e%5Bg%5D%29%7Bcase%22block%22%3Acase%22classic%22%3Acase%22oval%22%3Acase%22diamond%22%3Acase%22open%22%3Acase%22none%22%3Ah%3De%5Bg%5D%3Bbreak%3Bcase%22wide%22%3Acase%22narrow%22%3Aj%3De%5Bg%5D%3Bbreak%3Bcase%22long%22%3Acase%22short%22%3Ai%3De%5Bg%5D%7Dvar%20k%3Da%2Enode%2EgetElementsByTagName%28%22stroke%22%29%5B0%5D%3Bk%5Bf%2B%22arrow%22%5D%3Dh%2Ck%5Bf%2B%22arrowlength%22%5D%3Di%2Ck%5Bf%2B%22arrowwidth%22%5D%3Dj%7D%2CB%3Dfunction%28e%2Ci%29%7Be%2Eattrs%3De%2Eattrs%7C%7C%7B%7D%3Bvar%20l%3De%2Enode%2Cm%3De%2Eattrs%2Cp%3Dl%2Estyle%2Cq%3Dv%5Be%2Etype%5D%26%26%28i%2Ex%21%3Dm%2Ex%7C%7Ci%2Ey%21%3Dm%2Ey%7C%7Ci%2Ewidth%21%3Dm%2Ewidth%7C%7Ci%2Eheight%21%3Dm%2Eheight%7C%7Ci%2Ecx%21%3Dm%2Ecx%7C%7Ci%2Ecy%21%3Dm%2Ecy%7C%7Ci%2Erx%21%3Dm%2Erx%7C%7Ci%2Ery%21%3Dm%2Ery%7C%7Ci%2Er%21%3Dm%2Er%29%2Cr%3Dw%5Be%2Etype%5D%26%26%28m%2Ecx%21%3Di%2Ecx%7C%7Cm%2Ecy%21%3Di%2Ecy%7C%7Cm%2Er%21%3Di%2Er%7C%7Cm%2Erx%21%3Di%2Erx%7C%7Cm%2Ery%21%3Di%2Ery%29%2Cs%3De%3Bfor%28var%20t%20in%20i%29i%5Ba%5D%28t%29%26%26%28m%5Bt%5D%3Di%5Bt%5D%29%3Bif%28q%26%26%28m%2Epath%3Dc%2E%5FgetPath%5Be%2Etype%5D%28e%29%2Ce%2E%5F%2Edirty%3D1%29%2Ci%2Ehref%26%26%28l%2Ehref%3Di%2Ehref%29%2Ci%2Etitle%26%26%28l%2Etitle%3Di%2Etitle%29%2Ci%2Etarget%26%26%28l%2Etarget%3Di%2Etarget%29%2Ci%2Ecursor%26%26%28p%2Ecursor%3Di%2Ecursor%29%2C%22blur%22in%20i%26%26e%2Eblur%28i%2Eblur%29%2C%28i%2Epath%26%26%22path%22%3D%3De%2Etype%7C%7Cq%29%26%26%28l%2Epath%3Dx%28%7Eb%28m%2Epath%29%2EtoLowerCase%28%29%2EindexOf%28%22r%22%29%3Fc%2E%5FpathToAbsolute%28m%2Epath%29%3Am%2Epath%29%2C%22image%22%3D%3De%2Etype%26%26%28e%2E%5F%2Efillpos%3D%5Bm%2Ex%2Cm%2Ey%5D%2Ce%2E%5F%2Efillsize%3D%5Bm%2Ewidth%2Cm%2Eheight%5D%2Cz%28e%2C1%2C1%2C0%2C0%2C0%29%29%29%2C%22transform%22in%20i%26%26e%2Etransform%28i%2Etransform%29%2Cr%29%7Bvar%20y%3D%2Bm%2Ecx%2CB%3D%2Bm%2Ecy%2CD%3D%2Bm%2Erx%7C%7C%2Bm%2Er%7C%7C0%2CE%3D%2Bm%2Ery%7C%7C%2Bm%2Er%7C%7C0%3Bl%2Epath%3Dc%2Eformat%28%22ar%7B0%7D%2C%7B1%7D%2C%7B2%7D%2C%7B3%7D%2C%7B4%7D%2C%7B1%7D%2C%7B4%7D%2C%7B1%7Dx%22%2Cf%28%28y%2DD%29%2Au%29%2Cf%28%28B%2DE%29%2Au%29%2Cf%28%28y%2BD%29%2Au%29%2Cf%28%28B%2BE%29%2Au%29%2Cf%28y%2Au%29%29%2Ce%2E%5F%2Edirty%3D1%7Dif%28%22clip%2Drect%22in%20i%29%7Bvar%20G%3Db%28i%5B%22clip%2Drect%22%5D%29%2Esplit%28k%29%3Bif%284%3D%3DG%2Elength%29%7BG%5B2%5D%3D%2BG%5B2%5D%2B%20%2BG%5B0%5D%2CG%5B3%5D%3D%2BG%5B3%5D%2B%20%2BG%5B1%5D%3Bvar%20H%3Dl%2EclipRect%7C%7Cc%2E%5Fg%2Edoc%2EcreateElement%28%22div%22%29%2CI%3DH%2Estyle%3BI%2Eclip%3Dc%2Eformat%28%22rect%28%7B1%7Dpx%20%7B2%7Dpx%20%7B3%7Dpx%20%7B0%7Dpx%29%22%2CG%29%2Cl%2EclipRect%7C%7C%28I%2Eposition%3D%22absolute%22%2CI%2Etop%3D0%2CI%2Eleft%3D0%2CI%2Ewidth%3De%2Epaper%2Ewidth%2B%22px%22%2CI%2Eheight%3De%2Epaper%2Eheight%2B%22px%22%2Cl%2EparentNode%2EinsertBefore%28H%2Cl%29%2CH%2EappendChild%28l%29%2Cl%2EclipRect%3DH%29%7Di%5B%22clip%2Drect%22%5D%7C%7Cl%2EclipRect%26%26%28l%2EclipRect%2Estyle%2Eclip%3D%22auto%22%29%7Dif%28e%2Etextpath%29%7Bvar%20J%3De%2Etextpath%2Estyle%3Bi%2Efont%26%26%28J%2Efont%3Di%2Efont%29%2Ci%5B%22font%2Dfamily%22%5D%26%26%28J%2EfontFamily%3D%27%22%27%2Bi%5B%22font%2Dfamily%22%5D%2Esplit%28%22%2C%22%29%5B0%5D%2Ereplace%28%2F%5E%5B%27%22%5D%2B%7C%5B%27%22%5D%2B%24%2Fg%2Co%29%2B%27%22%27%29%2Ci%5B%22font%2Dsize%22%5D%26%26%28J%2EfontSize%3Di%5B%22font%2Dsize%22%5D%29%2Ci%5B%22font%2Dweight%22%5D%26%26%28J%2EfontWeight%3Di%5B%22font%2Dweight%22%5D%29%2Ci%5B%22font%2Dstyle%22%5D%26%26%28J%2EfontStyle%3Di%5B%22font%2Dstyle%22%5D%29%7Dif%28%22arrow%2Dstart%22in%20i%26%26A%28s%2Ci%5B%22arrow%2Dstart%22%5D%29%2C%22arrow%2Dend%22in%20i%26%26A%28s%2Ci%5B%22arrow%2Dend%22%5D%2C1%29%2Cnull%21%3Di%2Eopacity%7C%7Cnull%21%3Di%5B%22stroke%2Dwidth%22%5D%7C%7Cnull%21%3Di%2Efill%7C%7Cnull%21%3Di%2Esrc%7C%7Cnull%21%3Di%2Estroke%7C%7Cnull%21%3Di%5B%22stroke%2Dwidth%22%5D%7C%7Cnull%21%3Di%5B%22stroke%2Dopacity%22%5D%7C%7Cnull%21%3Di%5B%22fill%2Dopacity%22%5D%7C%7Cnull%21%3Di%5B%22stroke%2Ddasharray%22%5D%7C%7Cnull%21%3Di%5B%22stroke%2Dmiterlimit%22%5D%7C%7Cnull%21%3Di%5B%22stroke%2Dlinejoin%22%5D%7C%7Cnull%21%3Di%5B%22stroke%2Dlinecap%22%5D%29%7Bvar%20K%3Dl%2EgetElementsByTagName%28j%29%2CL%3D%211%3Bif%28K%3DK%26%26K%5B0%5D%2C%21K%26%26%28L%3DK%3DF%28j%29%29%2C%22image%22%3D%3De%2Etype%26%26i%2Esrc%26%26%28K%2Esrc%3Di%2Esrc%29%2Ci%2Efill%26%26%28K%2Eon%3D%210%29%2C%28null%3D%3DK%2Eon%7C%7C%22none%22%3D%3Di%2Efill%7C%7Cnull%3D%3D%3Di%2Efill%29%26%26%28K%2Eon%3D%211%29%2CK%2Eon%26%26i%2Efill%29%7Bvar%20M%3Db%28i%2Efill%29%2Ematch%28c%2E%5FISURL%29%3Bif%28M%29%7BK%2EparentNode%3D%3Dl%26%26l%2EremoveChild%28K%29%2CK%2Erotate%3D%210%2CK%2Esrc%3DM%5B1%5D%2CK%2Etype%3D%22tile%22%3Bvar%20N%3De%2EgetBBox%281%29%3BK%2Eposition%3DN%2Ex%2Bn%2BN%2Ey%2Ce%2E%5F%2Efillpos%3D%5BN%2Ex%2CN%2Ey%5D%2Cc%2E%5Fpreload%28M%5B1%5D%2Cfunction%28%29%7Be%2E%5F%2Efillsize%3D%5Bthis%2EoffsetWidth%2Cthis%2EoffsetHeight%5D%7D%29%7Delse%20K%2Ecolor%3Dc%2EgetRGB%28i%2Efill%29%2Ehex%2CK%2Esrc%3Do%2CK%2Etype%3D%22solid%22%2Cc%2EgetRGB%28i%2Efill%29%2Eerror%26%26%28s%2Etype%20in%7Bcircle%3A1%2Cellipse%3A1%7D%7C%7C%22r%22%21%3Db%28i%2Efill%29%2EcharAt%28%29%29%26%26C%28s%2Ci%2Efill%2CK%29%26%26%28m%2Efill%3D%22none%22%2Cm%2Egradient%3Di%2Efill%2CK%2Erotate%3D%211%29%7Dif%28%22fill%2Dopacity%22in%20i%7C%7C%22opacity%22in%20i%29%7Bvar%20O%3D%28%28%2Bm%5B%22fill%2Dopacity%22%5D%2B1%7C%7C2%29%2D1%29%2A%28%28%2Bm%2Eopacity%2B1%7C%7C2%29%2D1%29%2A%28%28%2Bc%2EgetRGB%28i%2Efill%29%2Eo%2B1%7C%7C2%29%2D1%29%3BO%3Dh%28g%28O%2C0%29%2C1%29%2CK%2Eopacity%3DO%2CK%2Esrc%26%26%28K%2Ecolor%3D%22none%22%29%7Dl%2EappendChild%28K%29%3Bvar%20P%3Dl%2EgetElementsByTagName%28%22stroke%22%29%26%26l%2EgetElementsByTagName%28%22stroke%22%29%5B0%5D%2CQ%3D%211%3B%21P%26%26%28Q%3DP%3DF%28%22stroke%22%29%29%2C%28i%2Estroke%26%26%22none%22%21%3Di%2Estroke%7C%7Ci%5B%22stroke%2Dwidth%22%5D%7C%7Cnull%21%3Di%5B%22stroke%2Dopacity%22%5D%7C%7Ci%5B%22stroke%2Ddasharray%22%5D%7C%7Ci%5B%22stroke%2Dmiterlimit%22%5D%7C%7Ci%5B%22stroke%2Dlinejoin%22%5D%7C%7Ci%5B%22stroke%2Dlinecap%22%5D%29%26%26%28P%2Eon%3D%210%29%2C%28%22none%22%3D%3Di%2Estroke%7C%7Cnull%3D%3D%3Di%2Estroke%7C%7Cnull%3D%3DP%2Eon%7C%7C0%3D%3Di%2Estroke%7C%7C0%3D%3Di%5B%22stroke%2Dwidth%22%5D%29%26%26%28P%2Eon%3D%211%29%3Bvar%20R%3Dc%2EgetRGB%28i%2Estroke%29%3BP%2Eon%26%26i%2Estroke%26%26%28P%2Ecolor%3DR%2Ehex%29%2CO%3D%28%28%2Bm%5B%22stroke%2Dopacity%22%5D%2B1%7C%7C2%29%2D1%29%2A%28%28%2Bm%2Eopacity%2B1%7C%7C2%29%2D1%29%2A%28%28%2BR%2Eo%2B1%7C%7C2%29%2D1%29%3Bvar%20S%3D%2E75%2A%28d%28i%5B%22stroke%2Dwidth%22%5D%29%7C%7C1%29%3Bif%28O%3Dh%28g%28O%2C0%29%2C1%29%2Cnull%3D%3Di%5B%22stroke%2Dwidth%22%5D%26%26%28S%3Dm%5B%22stroke%2Dwidth%22%5D%29%2Ci%5B%22stroke%2Dwidth%22%5D%26%26%28P%2Eweight%3DS%29%2CS%26%261%3ES%26%26%28O%2A%3DS%29%26%26%28P%2Eweight%3D1%29%2CP%2Eopacity%3DO%2Ci%5B%22stroke%2Dlinejoin%22%5D%26%26%28P%2Ejoinstyle%3Di%5B%22stroke%2Dlinejoin%22%5D%7C%7C%22miter%22%29%2CP%2Emiterlimit%3Di%5B%22stroke%2Dmiterlimit%22%5D%7C%7C8%2Ci%5B%22stroke%2Dlinecap%22%5D%26%26%28P%2Eendcap%3D%22butt%22%3D%3Di%5B%22stroke%2Dlinecap%22%5D%3F%22flat%22%3A%22square%22%3D%3Di%5B%22stroke%2Dlinecap%22%5D%3F%22square%22%3A%22round%22%29%2Ci%5B%22stroke%2Ddasharray%22%5D%29%7Bvar%20T%3D%7B%22%2D%22%3A%22shortdash%22%2C%22%2E%22%3A%22shortdot%22%2C%22%2D%2E%22%3A%22shortdashdot%22%2C%22%2D%2E%2E%22%3A%22shortdashdotdot%22%2C%22%2E%20%22%3A%22dot%22%2C%22%2D%20%22%3A%22dash%22%2C%22%2D%2D%22%3A%22longdash%22%2C%22%2D%20%2E%22%3A%22dashdot%22%2C%22%2D%2D%2E%22%3A%22longdashdot%22%2C%22%2D%2D%2E%2E%22%3A%22longdashdotdot%22%7D%3BP%2Edashstyle%3DT%5Ba%5D%28i%5B%22stroke%2Ddasharray%22%5D%29%3FT%5Bi%5B%22stroke%2Ddasharray%22%5D%5D%3Ao%7DQ%26%26l%2EappendChild%28P%29%7Dif%28%22text%22%3D%3Ds%2Etype%29%7Bs%2Epaper%2Ecanvas%2Estyle%2Edisplay%3Do%3Bvar%20U%3Ds%2Epaper%2Espan%2CV%3D100%2CW%3Dm%2Efont%26%26m%2Efont%2Ematch%28%2F%5Cd%2B%28%3F%3A%5C%2E%5Cd%2A%29%3F%28%3F%3Dpx%29%2F%29%3Bp%3DU%2Estyle%2Cm%2Efont%26%26%28p%2Efont%3Dm%2Efont%29%2Cm%5B%22font%2Dfamily%22%5D%26%26%28p%2EfontFamily%3Dm%5B%22font%2Dfamily%22%5D%29%2Cm%5B%22font%2Dweight%22%5D%26%26%28p%2EfontWeight%3Dm%5B%22font%2Dweight%22%5D%29%2Cm%5B%22font%2Dstyle%22%5D%26%26%28p%2EfontStyle%3Dm%5B%22font%2Dstyle%22%5D%29%2CW%3Dd%28m%5B%22font%2Dsize%22%5D%7C%7CW%26%26W%5B0%5D%29%7C%7C10%2Cp%2EfontSize%3DW%2AV%2B%22px%22%2Cs%2Etextpath%2Estring%26%26%28U%2EinnerHTML%3Db%28s%2Etextpath%2Estring%29%2Ereplace%28%2F%3C%2Fg%2C%22%26%2360%3B%22%29%2Ereplace%28%2F%26%2Fg%2C%22%26%2338%3B%22%29%2Ereplace%28%2F%5Cn%2Fg%2C%22%3Cbr%3E%22%29%29%3Bvar%20X%3DU%2EgetBoundingClientRect%28%29%3Bs%2EW%3Dm%2Ew%3D%28X%2Eright%2DX%2Eleft%29%2FV%2Cs%2EH%3Dm%2Eh%3D%28X%2Ebottom%2DX%2Etop%29%2FV%2Cs%2EX%3Dm%2Ex%2Cs%2EY%3Dm%2Ey%2Bs%2EH%2F2%2C%28%22x%22in%20i%7C%7C%22y%22in%20i%29%26%26%28s%2Epath%2Ev%3Dc%2Eformat%28%22m%7B0%7D%2C%7B1%7Dl%7B2%7D%2C%7B1%7D%22%2Cf%28m%2Ex%2Au%29%2Cf%28m%2Ey%2Au%29%2Cf%28m%2Ex%2Au%29%2B1%29%29%3Bfor%28var%20Y%3D%5B%22x%22%2C%22y%22%2C%22text%22%2C%22font%22%2C%22font%2Dfamily%22%2C%22font%2Dweight%22%2C%22font%2Dstyle%22%2C%22font%2Dsize%22%5D%2CZ%3D0%2C%24%3DY%2Elength%3B%24%3EZ%3BZ%2B%2B%29if%28Y%5BZ%5Din%20i%29%7Bs%2E%5F%2Edirty%3D1%3Bbreak%7Dswitch%28m%5B%22text%2Danchor%22%5D%29%7Bcase%22start%22%3As%2Etextpath%2Estyle%5B%22v%2Dtext%2Dalign%22%5D%3D%22left%22%2Cs%2Ebbx%3Ds%2EW%2F2%3Bbreak%3Bcase%22end%22%3As%2Etextpath%2Estyle%5B%22v%2Dtext%2Dalign%22%5D%3D%22right%22%2Cs%2Ebbx%3D%2Ds%2EW%2F2%3Bbreak%3Bdefault%3As%2Etextpath%2Estyle%5B%22v%2Dtext%2Dalign%22%5D%3D%22center%22%2Cs%2Ebbx%3D0%7Ds%2Etextpath%2Estyle%5B%22v%2Dtext%2Dkern%22%5D%3D%210%7D%7D%2CC%3Dfunction%28a%2Cf%2Cg%29%7Ba%2Eattrs%3Da%2Eattrs%7C%7C%7B%7D%3Bvar%20h%3D%28a%2Eattrs%2CMath%2Epow%29%2Ci%3D%22linear%22%2Cj%3D%22%2E5%20%2E5%22%3Bif%28a%2Eattrs%2Egradient%3Df%2Cf%3Db%28f%29%2Ereplace%28c%2E%5Fradial%5Fgradient%2Cfunction%28a%2Cb%2Cc%29%7Breturn%20i%3D%22radial%22%2Cb%26%26c%26%26%28b%3Dd%28b%29%2Cc%3Dd%28c%29%2Ch%28b%2D%2E5%2C2%29%2Bh%28c%2D%2E5%2C2%29%3E%2E25%26%26%28c%3De%2Esqrt%28%2E25%2Dh%28b%2D%2E5%2C2%29%29%2A%282%2A%28c%3E%2E5%29%2D1%29%2B%2E5%29%2Cj%3Db%2Bn%2Bc%29%2Co%7D%29%2Cf%3Df%2Esplit%28%2F%5Cs%2A%5C%2D%5Cs%2A%2F%29%2C%22linear%22%3D%3Di%29%7Bvar%20k%3Df%2Eshift%28%29%3Bif%28k%3D%2Dd%28k%29%2CisNaN%28k%29%29return%20null%7Dvar%20l%3Dc%2E%5FparseDots%28f%29%3Bif%28%21l%29return%20null%3Bif%28a%3Da%2Eshape%7C%7Ca%2Enode%2Cl%2Elength%29%7Ba%2EremoveChild%28g%29%2Cg%2Eon%3D%210%2Cg%2Emethod%3D%22none%22%2Cg%2Ecolor%3Dl%5B0%5D%2Ecolor%2Cg%2Ecolor2%3Dl%5Bl%2Elength%2D1%5D%2Ecolor%3Bfor%28var%20m%3D%5B%5D%2Cp%3D0%2Cq%3Dl%2Elength%3Bq%3Ep%3Bp%2B%2B%29l%5Bp%5D%2Eoffset%26%26m%2Epush%28l%5Bp%5D%2Eoffset%2Bn%2Bl%5Bp%5D%2Ecolor%29%3Bg%2Ecolors%3Dm%2Elength%3Fm%2Ejoin%28%29%3A%220%25%20%22%2Bg%2Ecolor%2C%22radial%22%3D%3Di%3F%28g%2Etype%3D%22gradientTitle%22%2Cg%2Efocus%3D%22100%25%22%2Cg%2Efocussize%3D%220%200%22%2Cg%2Efocusposition%3Dj%2Cg%2Eangle%3D0%29%3A%28g%2Etype%3D%22gradient%22%2Cg%2Eangle%3D%28270%2Dk%29%25360%29%2Ca%2EappendChild%28g%29%7Dreturn%201%7D%2CD%3Dfunction%28a%2Cb%29%7Bthis%5B0%5D%3Dthis%2Enode%3Da%2Ca%2Eraphael%3D%210%2Cthis%2Eid%3Dc%2E%5Foid%2B%2B%2Ca%2Eraphaelid%3Dthis%2Eid%2Cthis%2EX%3D0%2Cthis%2EY%3D0%2Cthis%2Eattrs%3D%7B%7D%2Cthis%2Epaper%3Db%2Cthis%2Ematrix%3Dc%2Ematrix%28%29%2Cthis%2E%5F%3D%7Btransform%3A%5B%5D%2Csx%3A1%2Csy%3A1%2Cdx%3A0%2Cdy%3A0%2Cdeg%3A0%2Cdirty%3A1%2CdirtyT%3A1%7D%2C%21b%2Ebottom%26%26%28b%2Ebottom%3Dthis%29%2Cthis%2Eprev%3Db%2Etop%2Cb%2Etop%26%26%28b%2Etop%2Enext%3Dthis%29%2Cb%2Etop%3Dthis%2Cthis%2Enext%3Dnull%7D%2CE%3Dc%2Eel%3BD%2Eprototype%3DE%2CE%2Econstructor%3DD%2CE%2Etransform%3Dfunction%28a%29%7Bif%28null%3D%3Da%29return%20this%2E%5F%2Etransform%3Bvar%20d%2Ce%3Dthis%2Epaper%2E%5FviewBoxShift%2Cf%3De%3F%22s%22%2B%5Be%2Escale%2Ce%2Escale%5D%2B%22%2D1%2D1t%22%2B%5Be%2Edx%2Ce%2Edy%5D%3Ao%3Be%26%26%28d%3Da%3Db%28a%29%2Ereplace%28%2F%5C%2E%7B3%7D%7C%5Cu2026%2Fg%2Cthis%2E%5F%2Etransform%7C%7Co%29%29%2Cc%2E%5FextractTransform%28this%2Cf%2Ba%29%3Bvar%20g%2Ch%3Dthis%2Ematrix%2Eclone%28%29%2Ci%3Dthis%2Eskew%2Cj%3Dthis%2Enode%2Ck%3D%7Eb%28this%2Eattrs%2Efill%29%2EindexOf%28%22%2D%22%29%2Cl%3D%21b%28this%2Eattrs%2Efill%29%2EindexOf%28%22url%28%22%29%3Bif%28h%2Etranslate%281%2C1%29%2Cl%7C%7Ck%7C%7C%22image%22%3D%3Dthis%2Etype%29if%28i%2Ematrix%3D%221%200%200%201%22%2Ci%2Eoffset%3D%220%200%22%2Cg%3Dh%2Esplit%28%29%2Ck%26%26g%2EnoRotation%7C%7C%21g%2EisSimple%29%7Bj%2Estyle%2Efilter%3Dh%2EtoFilter%28%29%3Bvar%20m%3Dthis%2EgetBBox%28%29%2Cp%3Dthis%2EgetBBox%281%29%2Cq%3Dm%2Ex%2Dp%2Ex%2Cr%3Dm%2Ey%2Dp%2Ey%3Bj%2Ecoordorigin%3Dq%2A%2Du%2Bn%2Br%2A%2Du%2Cz%28this%2C1%2C1%2Cq%2Cr%2C0%29%7Delse%20j%2Estyle%2Efilter%3Do%2Cz%28this%2Cg%2Escalex%2Cg%2Escaley%2Cg%2Edx%2Cg%2Edy%2Cg%2Erotate%29%3Belse%20j%2Estyle%2Efilter%3Do%2Ci%2Ematrix%3Db%28h%29%2Ci%2Eoffset%3Dh%2Eoffset%28%29%3Breturn%20d%26%26%28this%2E%5F%2Etransform%3Dd%29%2Cthis%7D%2CE%2Erotate%3Dfunction%28a%2Cc%2Ce%29%7Bif%28this%2Eremoved%29return%20this%3Bif%28null%21%3Da%29%7Bif%28a%3Db%28a%29%2Esplit%28k%29%2Ca%2Elength%2D1%26%26%28c%3Dd%28a%5B1%5D%29%2Ce%3Dd%28a%5B2%5D%29%29%2Ca%3Dd%28a%5B0%5D%29%2Cnull%3D%3De%26%26%28c%3De%29%2Cnull%3D%3Dc%7C%7Cnull%3D%3De%29%7Bvar%20f%3Dthis%2EgetBBox%281%29%3Bc%3Df%2Ex%2Bf%2Ewidth%2F2%2Ce%3Df%2Ey%2Bf%2Eheight%2F2%7Dreturn%20this%2E%5F%2EdirtyT%3D1%2Cthis%2Etransform%28this%2E%5F%2Etransform%2Econcat%28%5B%5B%22r%22%2Ca%2Cc%2Ce%5D%5D%29%29%2Cthis%7D%7D%2CE%2Etranslate%3Dfunction%28a%2Cc%29%7Breturn%20this%2Eremoved%3Fthis%3A%28a%3Db%28a%29%2Esplit%28k%29%2Ca%2Elength%2D1%26%26%28c%3Dd%28a%5B1%5D%29%29%2Ca%3Dd%28a%5B0%5D%29%7C%7C0%2Cc%3D%2Bc%7C%7C0%2Cthis%2E%5F%2Ebbox%26%26%28this%2E%5F%2Ebbox%2Ex%2B%3Da%2Cthis%2E%5F%2Ebbox%2Ey%2B%3Dc%29%2Cthis%2Etransform%28this%2E%5F%2Etransform%2Econcat%28%5B%5B%22t%22%2Ca%2Cc%5D%5D%29%29%2Cthis%29%7D%2CE%2Escale%3Dfunction%28a%2Cc%2Ce%2Cf%29%7Bif%28this%2Eremoved%29return%20this%3Bif%28a%3Db%28a%29%2Esplit%28k%29%2Ca%2Elength%2D1%26%26%28c%3Dd%28a%5B1%5D%29%2Ce%3Dd%28a%5B2%5D%29%2Cf%3Dd%28a%5B3%5D%29%2CisNaN%28e%29%26%26%28e%3Dnull%29%2CisNaN%28f%29%26%26%28f%3Dnull%29%29%2Ca%3Dd%28a%5B0%5D%29%2Cnull%3D%3Dc%26%26%28c%3Da%29%2Cnull%3D%3Df%26%26%28e%3Df%29%2Cnull%3D%3De%7C%7Cnull%3D%3Df%29var%20g%3Dthis%2EgetBBox%281%29%3Breturn%20e%3Dnull%3D%3De%3Fg%2Ex%2Bg%2Ewidth%2F2%3Ae%2Cf%3Dnull%3D%3Df%3Fg%2Ey%2Bg%2Eheight%2F2%3Af%2Cthis%2Etransform%28this%2E%5F%2Etransform%2Econcat%28%5B%5B%22s%22%2Ca%2Cc%2Ce%2Cf%5D%5D%29%29%2Cthis%2E%5F%2EdirtyT%3D1%2Cthis%7D%2CE%2Ehide%3Dfunction%28%29%7Breturn%21this%2Eremoved%26%26%28this%2Enode%2Estyle%2Edisplay%3D%22none%22%29%2Cthis%7D%2CE%2Eshow%3Dfunction%28%29%7Breturn%21this%2Eremoved%26%26%28this%2Enode%2Estyle%2Edisplay%3Do%29%2Cthis%7D%2CE%2E%5FgetBBox%3Dfunction%28%29%7Breturn%20this%2Eremoved%3F%7B%7D%3A%7Bx%3Athis%2EX%2B%28this%2Ebbx%7C%7C0%29%2Dthis%2EW%2F2%2Cy%3Athis%2EY%2Dthis%2EH%2Cwidth%3Athis%2EW%2Cheight%3Athis%2EH%7D%7D%2CE%2Eremove%3Dfunction%28%29%7Bif%28%21this%2Eremoved%26%26this%2Enode%2EparentNode%29%7Bthis%2Epaper%2E%5F%5Fset%5F%5F%26%26this%2Epaper%2E%5F%5Fset%5F%5F%2Eexclude%28this%29%2Cc%2Eeve%2Eunbind%28%22raphael%2E%2A%2E%2A%2E%22%2Bthis%2Eid%29%2Cc%2E%5Ftear%28this%2Cthis%2Epaper%29%2Cthis%2Enode%2EparentNode%2EremoveChild%28this%2Enode%29%2Cthis%2Eshape%26%26this%2Eshape%2EparentNode%2EremoveChild%28this%2Eshape%29%3Bfor%28var%20a%20in%20this%29this%5Ba%5D%3D%22function%22%3D%3Dtypeof%20this%5Ba%5D%3Fc%2E%5FremovedFactory%28a%29%3Anull%3Bthis%2Eremoved%3D%210%7D%7D%2CE%2Eattr%3Dfunction%28b%2Cd%29%7Bif%28this%2Eremoved%29return%20this%3Bif%28null%3D%3Db%29%7Bvar%20e%3D%7B%7D%3Bfor%28var%20f%20in%20this%2Eattrs%29this%2Eattrs%5Ba%5D%28f%29%26%26%28e%5Bf%5D%3Dthis%2Eattrs%5Bf%5D%29%3Breturn%20e%2Egradient%26%26%22none%22%3D%3De%2Efill%26%26%28e%2Efill%3De%2Egradient%29%26%26delete%20e%2Egradient%2Ce%2Etransform%3Dthis%2E%5F%2Etransform%2Ce%7Dif%28null%3D%3Dd%26%26c%2Eis%28b%2C%22string%22%29%29%7Bif%28b%3D%3Dj%26%26%22none%22%3D%3Dthis%2Eattrs%2Efill%26%26this%2Eattrs%2Egradient%29return%20this%2Eattrs%2Egradient%3Bfor%28var%20g%3Db%2Esplit%28k%29%2Ch%3D%7B%7D%2Ci%3D0%2Cm%3Dg%2Elength%3Bm%3Ei%3Bi%2B%2B%29b%3Dg%5Bi%5D%2Ch%5Bb%5D%3Db%20in%20this%2Eattrs%3Fthis%2Eattrs%5Bb%5D%3Ac%2Eis%28this%2Epaper%2EcustomAttributes%5Bb%5D%2C%22function%22%29%3Fthis%2Epaper%2EcustomAttributes%5Bb%5D%2Edef%3Ac%2E%5FavailableAttrs%5Bb%5D%3Breturn%20m%2D1%3Fh%3Ah%5Bg%5B0%5D%5D%7Dif%28this%2Eattrs%26%26null%3D%3Dd%26%26c%2Eis%28b%2C%22array%22%29%29%7Bfor%28h%3D%7B%7D%2Ci%3D0%2Cm%3Db%2Elength%3Bm%3Ei%3Bi%2B%2B%29h%5Bb%5Bi%5D%5D%3Dthis%2Eattr%28b%5Bi%5D%29%3Breturn%20h%7Dvar%20n%3Bnull%21%3Dd%26%26%28n%3D%7B%7D%2Cn%5Bb%5D%3Dd%29%2Cnull%3D%3Dd%26%26c%2Eis%28b%2C%22object%22%29%26%26%28n%3Db%29%3Bfor%28var%20o%20in%20n%29l%28%22raphael%2Eattr%2E%22%2Bo%2B%22%2E%22%2Bthis%2Eid%2Cthis%2Cn%5Bo%5D%29%3Bif%28n%29%7Bfor%28o%20in%20this%2Epaper%2EcustomAttributes%29if%28this%2Epaper%2EcustomAttributes%5Ba%5D%28o%29%26%26n%5Ba%5D%28o%29%26%26c%2Eis%28this%2Epaper%2EcustomAttributes%5Bo%5D%2C%22function%22%29%29%7Bvar%20p%3Dthis%2Epaper%2EcustomAttributes%5Bo%5D%2Eapply%28this%2C%5B%5D%2Econcat%28n%5Bo%5D%29%29%3Bthis%2Eattrs%5Bo%5D%3Dn%5Bo%5D%3Bfor%28var%20q%20in%20p%29p%5Ba%5D%28q%29%26%26%28n%5Bq%5D%3Dp%5Bq%5D%29%7Dn%2Etext%26%26%22text%22%3D%3Dthis%2Etype%26%26%28this%2Etextpath%2Estring%3Dn%2Etext%29%2CB%28this%2Cn%29%7Dreturn%20this%7D%2CE%2EtoFront%3Dfunction%28%29%7Breturn%21this%2Eremoved%26%26this%2Enode%2EparentNode%2EappendChild%28this%2Enode%29%2Cthis%2Epaper%26%26this%2Epaper%2Etop%21%3Dthis%26%26c%2E%5Ftofront%28this%2Cthis%2Epaper%29%2Cthis%7D%2CE%2EtoBack%3Dfunction%28%29%7Breturn%20this%2Eremoved%3Fthis%3A%28this%2Enode%2EparentNode%2EfirstChild%21%3Dthis%2Enode%26%26%28this%2Enode%2EparentNode%2EinsertBefore%28this%2Enode%2Cthis%2Enode%2EparentNode%2EfirstChild%29%2Cc%2E%5Ftoback%28this%2Cthis%2Epaper%29%29%2Cthis%29%7D%2CE%2EinsertAfter%3Dfunction%28a%29%7Breturn%20this%2Eremoved%3Fthis%3A%28a%2Econstructor%3D%3Dc%2Est%2Econstructor%26%26%28a%3Da%5Ba%2Elength%2D1%5D%29%2Ca%2Enode%2EnextSibling%3Fa%2Enode%2EparentNode%2EinsertBefore%28this%2Enode%2Ca%2Enode%2EnextSibling%29%3Aa%2Enode%2EparentNode%2EappendChild%28this%2Enode%29%2Cc%2E%5Finsertafter%28this%2Ca%2Cthis%2Epaper%29%2Cthis%29%7D%2CE%2EinsertBefore%3Dfunction%28a%29%7Breturn%20this%2Eremoved%3Fthis%3A%28a%2Econstructor%3D%3Dc%2Est%2Econstructor%26%26%28a%3Da%5B0%5D%29%2Ca%2Enode%2EparentNode%2EinsertBefore%28this%2Enode%2Ca%2Enode%29%2Cc%2E%5Finsertbefore%28this%2Ca%2Cthis%2Epaper%29%2Cthis%29%7D%2CE%2Eblur%3Dfunction%28a%29%7Bvar%20b%3Dthis%2Enode%2EruntimeStyle%2Cd%3Db%2Efilter%3Breturn%20d%3Dd%2Ereplace%28r%2Co%29%2C0%21%3D%3D%2Ba%3F%28this%2Eattrs%2Eblur%3Da%2Cb%2Efilter%3Dd%2Bn%2Bm%2B%22%2EBlur%28pixelradius%3D%22%2B%28%2Ba%7C%7C1%2E5%29%2B%22%29%22%2Cb%2Emargin%3Dc%2Eformat%28%22%2D%7B0%7Dpx%200%200%20%2D%7B0%7Dpx%22%2Cf%28%2Ba%7C%7C1%2E5%29%29%29%3A%28b%2Efilter%3Dd%2Cb%2Emargin%3D0%2Cdelete%20this%2Eattrs%2Eblur%29%2Cthis%7D%2Cc%2E%5Fengine%2Epath%3Dfunction%28a%2Cb%29%7Bvar%20c%3DF%28%22shape%22%29%3Bc%2Estyle%2EcssText%3Dt%2Cc%2Ecoordsize%3Du%2Bn%2Bu%2Cc%2Ecoordorigin%3Db%2Ecoordorigin%3Bvar%20d%3Dnew%20D%28c%2Cb%29%2Ce%3D%7Bfill%3A%22none%22%2Cstroke%3A%22%23000%22%7D%3Ba%26%26%28e%2Epath%3Da%29%2Cd%2Etype%3D%22path%22%2Cd%2Epath%3D%5B%5D%2Cd%2EPath%3Do%2CB%28d%2Ce%29%2Cb%2Ecanvas%2EappendChild%28c%29%3Bvar%20f%3DF%28%22skew%22%29%3Breturn%20f%2Eon%3D%210%2Cc%2EappendChild%28f%29%2Cd%2Eskew%3Df%2Cd%2Etransform%28o%29%2Cd%7D%2Cc%2E%5Fengine%2Erect%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%2Cg%29%7Bvar%20h%3Dc%2E%5FrectPath%28b%2Cd%2Ce%2Cf%2Cg%29%2Ci%3Da%2Epath%28h%29%2Cj%3Di%2Eattrs%3Breturn%20i%2EX%3Dj%2Ex%3Db%2Ci%2EY%3Dj%2Ey%3Dd%2Ci%2EW%3Dj%2Ewidth%3De%2Ci%2EH%3Dj%2Eheight%3Df%2Cj%2Er%3Dg%2Cj%2Epath%3Dh%2Ci%2Etype%3D%22rect%22%2Ci%7D%2Cc%2E%5Fengine%2Eellipse%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%3Da%2Epath%28%29%3Breturn%20f%2Eattrs%2Cf%2EX%3Db%2Dd%2Cf%2EY%3Dc%2De%2Cf%2EW%3D2%2Ad%2Cf%2EH%3D2%2Ae%2Cf%2Etype%3D%22ellipse%22%2CB%28f%2C%7Bcx%3Ab%2Ccy%3Ac%2Crx%3Ad%2Cry%3Ae%7D%29%2Cf%7D%2Cc%2E%5Fengine%2Ecircle%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Bvar%20e%3Da%2Epath%28%29%3Breturn%20e%2Eattrs%2Ce%2EX%3Db%2Dd%2Ce%2EY%3Dc%2Dd%2Ce%2EW%3De%2EH%3D2%2Ad%2Ce%2Etype%3D%22circle%22%2CB%28e%2C%7Bcx%3Ab%2Ccy%3Ac%2Cr%3Ad%7D%29%2Ce%7D%2Cc%2E%5Fengine%2Eimage%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%2Cg%29%7Bvar%20h%3Dc%2E%5FrectPath%28d%2Ce%2Cf%2Cg%29%2Ci%3Da%2Epath%28h%29%2Eattr%28%7Bstroke%3A%22none%22%7D%29%2Ck%3Di%2Eattrs%2Cl%3Di%2Enode%2Cm%3Dl%2EgetElementsByTagName%28j%29%5B0%5D%3Breturn%20k%2Esrc%3Db%2Ci%2EX%3Dk%2Ex%3Dd%2Ci%2EY%3Dk%2Ey%3De%2Ci%2EW%3Dk%2Ewidth%3Df%2Ci%2EH%3Dk%2Eheight%3Dg%2Ck%2Epath%3Dh%2Ci%2Etype%3D%22image%22%2Cm%2EparentNode%3D%3Dl%26%26l%2EremoveChild%28m%29%2Cm%2Erotate%3D%210%2Cm%2Esrc%3Db%2Cm%2Etype%3D%22tile%22%2Ci%2E%5F%2Efillpos%3D%5Bd%2Ce%5D%2Ci%2E%5F%2Efillsize%3D%5Bf%2Cg%5D%2Cl%2EappendChild%28m%29%2Cz%28i%2C1%2C1%2C0%2C0%2C0%29%2Ci%7D%2Cc%2E%5Fengine%2Etext%3Dfunction%28a%2Cd%2Ce%2Cg%29%7Bvar%20h%3DF%28%22shape%22%29%2Ci%3DF%28%22path%22%29%2Cj%3DF%28%22textpath%22%29%3Bd%3Dd%7C%7C0%2Ce%3De%7C%7C0%2Cg%3Dg%7C%7C%22%22%2Ci%2Ev%3Dc%2Eformat%28%22m%7B0%7D%2C%7B1%7Dl%7B2%7D%2C%7B1%7D%22%2Cf%28d%2Au%29%2Cf%28e%2Au%29%2Cf%28d%2Au%29%2B1%29%2Ci%2Etextpathok%3D%210%2Cj%2Estring%3Db%28g%29%2Cj%2Eon%3D%210%2Ch%2Estyle%2EcssText%3Dt%2Ch%2Ecoordsize%3Du%2Bn%2Bu%2Ch%2Ecoordorigin%3D%220%200%22%3Bvar%20k%3Dnew%20D%28h%2Ca%29%2Cl%3D%7Bfill%3A%22%23000%22%2Cstroke%3A%22none%22%2Cfont%3Ac%2E%5FavailableAttrs%2Efont%2Ctext%3Ag%7D%3Bk%2Eshape%3Dh%2Ck%2Epath%3Di%2Ck%2Etextpath%3Dj%2Ck%2Etype%3D%22text%22%2Ck%2Eattrs%2Etext%3Db%28g%29%2Ck%2Eattrs%2Ex%3Dd%2Ck%2Eattrs%2Ey%3De%2Ck%2Eattrs%2Ew%3D1%2Ck%2Eattrs%2Eh%3D1%2CB%28k%2Cl%29%2Ch%2EappendChild%28j%29%2Ch%2EappendChild%28i%29%2Ca%2Ecanvas%2EappendChild%28h%29%3Bvar%20m%3DF%28%22skew%22%29%3Breturn%20m%2Eon%3D%210%2Ch%2EappendChild%28m%29%2Ck%2Eskew%3Dm%2Ck%2Etransform%28o%29%2Ck%7D%2Cc%2E%5Fengine%2EsetSize%3Dfunction%28a%2Cb%29%7Bvar%20d%3Dthis%2Ecanvas%2Estyle%3Breturn%20this%2Ewidth%3Da%2Cthis%2Eheight%3Db%2Ca%3D%3D%2Ba%26%26%28a%2B%3D%22px%22%29%2Cb%3D%3D%2Bb%26%26%28b%2B%3D%22px%22%29%2Cd%2Ewidth%3Da%2Cd%2Eheight%3Db%2Cd%2Eclip%3D%22rect%280%20%22%2Ba%2B%22%20%22%2Bb%2B%22%200%29%22%2Cthis%2E%5FviewBox%26%26c%2E%5Fengine%2EsetViewBox%2Eapply%28this%2Cthis%2E%5FviewBox%29%2Cthis%7D%2Cc%2E%5Fengine%2EsetViewBox%3Dfunction%28a%2Cb%2Cd%2Ce%2Cf%29%7Bc%2Eeve%28%22raphael%2EsetViewBox%22%2Cthis%2Cthis%2E%5FviewBox%2C%5Ba%2Cb%2Cd%2Ce%2Cf%5D%29%3Bvar%20h%2Ci%2Cj%3Dthis%2Ewidth%2Ck%3Dthis%2Eheight%2Cl%3D1%2Fg%28d%2Fj%2Ce%2Fk%29%3Breturn%20f%26%26%28h%3Dk%2Fe%2Ci%3Dj%2Fd%2Cj%3Ed%2Ah%26%26%28a%2D%3D%28j%2Dd%2Ah%29%2F2%2Fh%29%2Ck%3Ee%2Ai%26%26%28b%2D%3D%28k%2De%2Ai%29%2F2%2Fi%29%29%2Cthis%2E%5FviewBox%3D%5Ba%2Cb%2Cd%2Ce%2C%21%21f%5D%2Cthis%2E%5FviewBoxShift%3D%7Bdx%3A%2Da%2Cdy%3A%2Db%2Cscale%3Al%7D%2Cthis%2EforEach%28function%28a%29%7Ba%2Etransform%28%22%2E%2E%2E%22%29%7D%29%2Cthis%7D%3Bvar%20F%3Bc%2E%5Fengine%2EinitWin%3Dfunction%28a%29%7Bvar%20b%3Da%2Edocument%3Bb%2EcreateStyleSheet%28%29%2EaddRule%28%22%2Ervml%22%2C%22behavior%3Aurl%28%23default%23VML%29%22%29%3Btry%7B%21b%2Enamespaces%2Ervml%26%26b%2Enamespaces%2Eadd%28%22rvml%22%2C%22urn%3Aschemas%2Dmicrosoft%2Dcom%3Avml%22%29%2CF%3Dfunction%28a%29%7Breturn%20b%2EcreateElement%28%22%3Crvml%3A%22%2Ba%2B%27%20class%3D%22rvml%22%3E%27%29%7D%7Dcatch%28c%29%7BF%3Dfunction%28a%29%7Breturn%20b%2EcreateElement%28%22%3C%22%2Ba%2B%27%20xmlns%3D%22urn%3Aschemas%2Dmicrosoft%2Ecom%3Avml%22%20class%3D%22rvml%22%3E%27%29%7D%7D%7D%2Cc%2E%5Fengine%2EinitWin%28c%2E%5Fg%2Ewin%29%2Cc%2E%5Fengine%2Ecreate%3Dfunction%28%29%7Bvar%20a%3Dc%2E%5FgetContainer%2Eapply%280%2Carguments%29%2Cb%3Da%2Econtainer%2Cd%3Da%2Eheight%2Ce%3Da%2Ewidth%2Cf%3Da%2Ex%2Cg%3Da%2Ey%3Bif%28%21b%29throw%20new%20Error%28%22VML%20container%20not%20found%2E%22%29%3Bvar%20h%3Dnew%20c%2E%5FPaper%2Ci%3Dh%2Ecanvas%3Dc%2E%5Fg%2Edoc%2EcreateElement%28%22div%22%29%2Cj%3Di%2Estyle%3Breturn%20f%3Df%7C%7C0%2Cg%3Dg%7C%7C0%2Ce%3De%7C%7C512%2Cd%3Dd%7C%7C342%2Ch%2Ewidth%3De%2Ch%2Eheight%3Dd%2Ce%3D%3D%2Be%26%26%28e%2B%3D%22px%22%29%2Cd%3D%3D%2Bd%26%26%28d%2B%3D%22px%22%29%2Ch%2Ecoordsize%3D1e3%2Au%2Bn%2B1e3%2Au%2Ch%2Ecoordorigin%3D%220%200%22%2Ch%2Espan%3Dc%2E%5Fg%2Edoc%2EcreateElement%28%22span%22%29%2Ch%2Espan%2Estyle%2EcssText%3D%22position%3Aabsolute%3Bleft%3A%2D9999em%3Btop%3A%2D9999em%3Bpadding%3A0%3Bmargin%3A0%3Bline%2Dheight%3A1%3B%22%2Ci%2EappendChild%28h%2Espan%29%2Cj%2EcssText%3Dc%2Eformat%28%22top%3A0%3Bleft%3A0%3Bwidth%3A%7B0%7D%3Bheight%3A%7B1%7D%3Bdisplay%3Ainline%2Dblock%3Bposition%3Arelative%3Bclip%3Arect%280%20%7B0%7D%20%7B1%7D%200%29%3Boverflow%3Ahidden%22%2Ce%2Cd%29%2C1%3D%3Db%3F%28c%2E%5Fg%2Edoc%2Ebody%2EappendChild%28i%29%2Cj%2Eleft%3Df%2B%22px%22%2Cj%2Etop%3Dg%2B%22px%22%2Cj%2Eposition%3D%22absolute%22%29%3Ab%2EfirstChild%3Fb%2EinsertBefore%28i%2Cb%2EfirstChild%29%3Ab%2EappendChild%28i%29%2Ch%2Erenderfix%3Dfunction%28%29%7B%7D%2Ch%7D%2Cc%2Eprototype%2Eclear%3Dfunction%28%29%7Bc%2Eeve%28%22raphael%2Eclear%22%2Cthis%29%2Cthis%2Ecanvas%2EinnerHTML%3Do%2Cthis%2Espan%3Dc%2E%5Fg%2Edoc%2EcreateElement%28%22span%22%29%2Cthis%2Espan%2Estyle%2EcssText%3D%22position%3Aabsolute%3Bleft%3A%2D9999em%3Btop%3A%2D9999em%3Bpadding%3A0%3Bmargin%3A0%3Bline%2Dheight%3A1%3Bdisplay%3Ainline%3B%22%2Cthis%2Ecanvas%2EappendChild%28this%2Espan%29%2Cthis%2Ebottom%3Dthis%2Etop%3Dnull%7D%2Cc%2Eprototype%2Eremove%3Dfunction%28%29%7Bc%2Eeve%28%22raphael%2Eremove%22%2Cthis%29%2Cthis%2Ecanvas%2EparentNode%2EremoveChild%28this%2Ecanvas%29%3Bfor%28var%20a%20in%20this%29this%5Ba%5D%3D%22function%22%3D%3Dtypeof%20this%5Ba%5D%3Fc%2E%5FremovedFactory%28a%29%3Anull%3Breturn%210%7D%3Bvar%20G%3Dc%2Est%3Bfor%28var%20H%20in%20E%29E%5Ba%5D%28H%29%26%26%21G%5Ba%5D%28H%29%26%26%28G%5BH%5D%3Dfunction%28a%29%7Breturn%20function%28%29%7Bvar%20b%3Darguments%3Breturn%20this%2EforEach%28function%28c%29%7Bc%5Ba%5D%2Eapply%28c%2Cb%29%7D%29%7D%7D%28H%29%29%7D%7D%28%29%2CB%2Ewas%3FA%2Ewin%2ERaphael%3Dc%3ARaphael%3Dc%2Cc%7D%29%3B"></script>
<link href="data:text/css,%2Emorris%2Dhover%7Bposition%3Aabsolute%3Bz%2Dindex%3A1000%7D%2Emorris%2Dhover%2Emorris%2Ddefault%2Dstyle%7Bborder%2Dradius%3A10px%3Bpadding%3A6px%3Bcolor%3A%23666%3Bbackground%3Argba%28255%2C255%2C255%2C0%2E8%29%3Bborder%3Asolid%202px%20rgba%28230%2C230%2C230%2C0%2E8%29%3Bfont%2Dfamily%3Asans%2Dserif%3Bfont%2Dsize%3A12px%3Btext%2Dalign%3Acenter%7D%2Emorris%2Dhover%2Emorris%2Ddefault%2Dstyle%20%2Emorris%2Dhover%2Drow%2Dlabel%7Bfont%2Dweight%3Abold%3Bmargin%3A0%2E25em%200%7D%0A%2Emorris%2Dhover%2Emorris%2Ddefault%2Dstyle%20%2Emorris%2Dhover%2Dpoint%7Bwhite%2Dspace%3Anowrap%3Bmargin%3A0%2E1em%200%7D%0A" rel="stylesheet" />
<script src="data:application/x-javascript,%2F%2A%20%40license%0Amorris%2Ejs%20v0%2E5%2E0%0ACopyright%202014%20Olly%20Smith%20All%20rights%20reserved%2E%0ALicensed%20under%20the%20BSD%2D2%2DClause%20License%2E%0A%2A%2F%0A%28function%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%3D%5B%5D%2Eslice%2Cf%3Dfunction%28a%2Cb%29%7Breturn%20function%28%29%7Breturn%20a%2Eapply%28b%2Carguments%29%7D%7D%2Cg%3D%7B%7D%2EhasOwnProperty%2Ch%3Dfunction%28a%2Cb%29%7Bfunction%20c%28%29%7Bthis%2Econstructor%3Da%7Dfor%28var%20d%20in%20b%29g%2Ecall%28b%2Cd%29%26%26%28a%5Bd%5D%3Db%5Bd%5D%29%3Breturn%20c%2Eprototype%3Db%2Eprototype%2Ca%2Eprototype%3Dnew%20c%2Ca%2E%5F%5Fsuper%5F%5F%3Db%2Eprototype%2Ca%7D%2Ci%3D%5B%5D%2EindexOf%7C%7Cfunction%28a%29%7Bfor%28var%20b%3D0%2Cc%3Dthis%2Elength%3Bc%3Eb%3Bb%2B%2B%29if%28b%20in%20this%26%26this%5Bb%5D%3D%3D%3Da%29return%20b%3Breturn%2D1%7D%3Bb%3Dwindow%2EMorris%3D%7B%7D%2Ca%3DjQuery%2Cb%2EEventEmitter%3Dfunction%28%29%7Bfunction%20a%28%29%7B%7Dreturn%20a%2Eprototype%2Eon%3Dfunction%28a%2Cb%29%7Breturn%20null%3D%3Dthis%2Ehandlers%26%26%28this%2Ehandlers%3D%7B%7D%29%2Cnull%3D%3Dthis%2Ehandlers%5Ba%5D%26%26%28this%2Ehandlers%5Ba%5D%3D%5B%5D%29%2Cthis%2Ehandlers%5Ba%5D%2Epush%28b%29%2Cthis%7D%2Ca%2Eprototype%2Efire%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Cf%2Cg%2Ch%3Bif%28c%3Darguments%5B0%5D%2Ca%3D2%3C%3Darguments%2Elength%3Fe%2Ecall%28arguments%2C1%29%3A%5B%5D%2Cnull%21%3Dthis%2Ehandlers%26%26null%21%3Dthis%2Ehandlers%5Bc%5D%29%7Bfor%28g%3Dthis%2Ehandlers%5Bc%5D%2Ch%3D%5B%5D%2Cd%3D0%2Cf%3Dg%2Elength%3Bf%3Ed%3Bd%2B%2B%29b%3Dg%5Bd%5D%2Ch%2Epush%28b%2Eapply%28null%2Ca%29%29%3Breturn%20h%7D%7D%2Ca%7D%28%29%2Cb%2Ecommas%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%3Breturn%20null%21%3Da%3F%28d%3D0%3Ea%3F%22%2D%22%3A%22%22%2Cb%3DMath%2Eabs%28a%29%2Cc%3DMath%2Efloor%28b%29%2EtoFixed%280%29%2Cd%2B%3Dc%2Ereplace%28%2F%28%3F%3D%28%3F%3A%5Cd%7B3%7D%29%2B%24%29%28%3F%21%5E%29%2Fg%2C%22%2C%22%29%2Ce%3Db%2EtoString%28%29%2Ce%2Elength%3Ec%2Elength%26%26%28d%2B%3De%2Eslice%28c%2Elength%29%29%2Cd%29%3A%22%2D%22%7D%2Cb%2Epad2%3Dfunction%28a%29%7Breturn%2810%3Ea%3F%220%22%3A%22%22%29%2Ba%7D%2Cb%2EGrid%3Dfunction%28c%29%7Bfunction%20d%28b%29%7Bthis%2EresizeHandler%3Df%28this%2EresizeHandler%2Cthis%29%3Bvar%20c%3Dthis%3Bif%28this%2Eel%3D%22string%22%3D%3Dtypeof%20b%2Eelement%3Fa%28document%2EgetElementById%28b%2Eelement%29%29%3Aa%28b%2Eelement%29%2Cnull%3D%3Dthis%2Eel%7C%7C0%3D%3D%3Dthis%2Eel%2Elength%29throw%20new%20Error%28%22Graph%20container%20element%20not%20found%22%29%3B%22static%22%3D%3D%3Dthis%2Eel%2Ecss%28%22position%22%29%26%26this%2Eel%2Ecss%28%22position%22%2C%22relative%22%29%2Cthis%2Eoptions%3Da%2Eextend%28%7B%7D%2Cthis%2EgridDefaults%2Cthis%2Edefaults%7C%7C%7B%7D%2Cb%29%2C%22string%22%3D%3Dtypeof%20this%2Eoptions%2Eunits%26%26%28this%2Eoptions%2EpostUnits%3Db%2Eunits%29%2Cthis%2Eraphael%3Dnew%20Raphael%28this%2Eel%5B0%5D%29%2Cthis%2EelementWidth%3Dnull%2Cthis%2EelementHeight%3Dnull%2Cthis%2Edirty%3D%211%2Cthis%2EselectFrom%3Dnull%2Cthis%2Einit%26%26this%2Einit%28%29%2Cthis%2EsetData%28this%2Eoptions%2Edata%29%2Cthis%2Eel%2Ebind%28%22mousemove%22%2Cfunction%28a%29%7Bvar%20b%2Cd%2Ce%2Cf%2Cg%3Breturn%20d%3Dc%2Eel%2Eoffset%28%29%2Cg%3Da%2EpageX%2Dd%2Eleft%2Cc%2EselectFrom%3F%28b%3Dc%2Edata%5Bc%2EhitTest%28Math%2Emin%28g%2Cc%2EselectFrom%29%29%5D%2E%5Fx%2Ce%3Dc%2Edata%5Bc%2EhitTest%28Math%2Emax%28g%2Cc%2EselectFrom%29%29%5D%2E%5Fx%2Cf%3De%2Db%2Cc%2EselectionRect%2Eattr%28%7Bx%3Ab%2Cwidth%3Af%7D%29%29%3Ac%2Efire%28%22hovermove%22%2Cg%2Ca%2EpageY%2Dd%2Etop%29%7D%29%2Cthis%2Eel%2Ebind%28%22mouseleave%22%2Cfunction%28%29%7Breturn%20c%2EselectFrom%26%26%28c%2EselectionRect%2Ehide%28%29%2Cc%2EselectFrom%3Dnull%29%2Cc%2Efire%28%22hoverout%22%29%7D%29%2Cthis%2Eel%2Ebind%28%22touchstart%20touchmove%20touchend%22%2Cfunction%28a%29%7Bvar%20b%2Cd%3Breturn%20d%3Da%2EoriginalEvent%2Etouches%5B0%5D%7C%7Ca%2EoriginalEvent%2EchangedTouches%5B0%5D%2Cb%3Dc%2Eel%2Eoffset%28%29%2Cc%2Efire%28%22hovermove%22%2Cd%2EpageX%2Db%2Eleft%2Cd%2EpageY%2Db%2Etop%29%7D%29%2Cthis%2Eel%2Ebind%28%22click%22%2Cfunction%28a%29%7Bvar%20b%3Breturn%20b%3Dc%2Eel%2Eoffset%28%29%2Cc%2Efire%28%22gridclick%22%2Ca%2EpageX%2Db%2Eleft%2Ca%2EpageY%2Db%2Etop%29%7D%29%2Cthis%2Eoptions%2ErangeSelect%26%26%28this%2EselectionRect%3Dthis%2Eraphael%2Erect%280%2C0%2C0%2Cthis%2Eel%2EinnerHeight%28%29%29%2Eattr%28%7Bfill%3Athis%2Eoptions%2ErangeSelectColor%2Cstroke%3A%211%7D%29%2EtoBack%28%29%2Ehide%28%29%2Cthis%2Eel%2Ebind%28%22mousedown%22%2Cfunction%28a%29%7Bvar%20b%3Breturn%20b%3Dc%2Eel%2Eoffset%28%29%2Cc%2EstartRange%28a%2EpageX%2Db%2Eleft%29%7D%29%2Cthis%2Eel%2Ebind%28%22mouseup%22%2Cfunction%28a%29%7Bvar%20b%3Breturn%20b%3Dc%2Eel%2Eoffset%28%29%2Cc%2EendRange%28a%2EpageX%2Db%2Eleft%29%2Cc%2Efire%28%22hovermove%22%2Ca%2EpageX%2Db%2Eleft%2Ca%2EpageY%2Db%2Etop%29%7D%29%29%2Cthis%2Eoptions%2Eresize%26%26a%28window%29%2Ebind%28%22resize%22%2Cfunction%28%29%7Breturn%20null%21%3Dc%2EtimeoutId%26%26window%2EclearTimeout%28c%2EtimeoutId%29%2Cc%2EtimeoutId%3Dwindow%2EsetTimeout%28c%2EresizeHandler%2C100%29%7D%29%2Cthis%2Eel%2Ecss%28%22%2Dwebkit%2Dtap%2Dhighlight%2Dcolor%22%2C%22rgba%280%2C0%2C0%2C0%29%22%29%2Cthis%2EpostInit%26%26this%2EpostInit%28%29%7Dreturn%20h%28d%2Cc%29%2Cd%2Eprototype%2EgridDefaults%3D%7BdateFormat%3Anull%2Caxes%3A%210%2Cgrid%3A%210%2CgridLineColor%3A%22%23aaa%22%2CgridStrokeWidth%3A%2E5%2CgridTextColor%3A%22%23888%22%2CgridTextSize%3A12%2CgridTextFamily%3A%22sans%2Dserif%22%2CgridTextWeight%3A%22normal%22%2ChideHover%3A%211%2CyLabelFormat%3Anull%2CxLabelAngle%3A0%2CnumLines%3A5%2Cpadding%3A25%2CparseTime%3A%210%2CpostUnits%3A%22%22%2CpreUnits%3A%22%22%2Cymax%3A%22auto%22%2Cymin%3A%22auto%200%22%2Cgoals%3A%5B%5D%2CgoalStrokeWidth%3A1%2CgoalLineColors%3A%5B%22%23666633%22%2C%22%23999966%22%2C%22%23cc6666%22%2C%22%23663333%22%5D%2Cevents%3A%5B%5D%2CeventStrokeWidth%3A1%2CeventLineColors%3A%5B%22%23005a04%22%2C%22%23ccffbb%22%2C%22%233a5f0b%22%2C%22%23005502%22%5D%2CrangeSelect%3Anull%2CrangeSelectColor%3A%22%23eef%22%2Cresize%3A%211%7D%2Cd%2Eprototype%2EsetData%3Dfunction%28a%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%2Co%2Cp%2Cq%2Cr%3Breturn%20null%3D%3Dc%26%26%28c%3D%210%29%2Cthis%2Eoptions%2Edata%3Da%2Cnull%3D%3Da%7C%7C0%3D%3D%3Da%2Elength%3F%28this%2Edata%3D%5B%5D%2Cthis%2Eraphael%2Eclear%28%29%2Cnull%21%3Dthis%2Ehover%26%26this%2Ehover%2Ehide%28%29%2Cvoid%200%29%3A%28o%3Dthis%2Ecumulative%3F0%3Anull%2Cp%3Dthis%2Ecumulative%3F0%3Anull%2Cthis%2Eoptions%2Egoals%2Elength%3E0%26%26%28h%3DMath%2Emin%2Eapply%28Math%2Cthis%2Eoptions%2Egoals%29%2Cg%3DMath%2Emax%2Eapply%28Math%2Cthis%2Eoptions%2Egoals%29%2Cp%3Dnull%21%3Dp%3FMath%2Emin%28p%2Ch%29%3Ah%2Co%3Dnull%21%3Do%3FMath%2Emax%28o%2Cg%29%3Ag%29%2Cthis%2Edata%3Dfunction%28%29%7Bvar%20c%2Cd%2Cg%3Bfor%28g%3D%5B%5D%2Cf%3Dc%3D0%2Cd%3Da%2Elength%3Bd%3Ec%3Bf%3D%2B%2Bc%29j%3Da%5Bf%5D%2Ci%3D%7Bsrc%3Aj%7D%2Ci%2Elabel%3Dj%5Bthis%2Eoptions%2Exkey%5D%2Cthis%2Eoptions%2EparseTime%3F%28i%2Ex%3Db%2EparseDate%28i%2Elabel%29%2Cthis%2Eoptions%2EdateFormat%3Fi%2Elabel%3Dthis%2Eoptions%2EdateFormat%28i%2Ex%29%3A%22number%22%3D%3Dtypeof%20i%2Elabel%26%26%28i%2Elabel%3Dnew%20Date%28i%2Elabel%29%2EtoString%28%29%29%29%3A%28i%2Ex%3Df%2Cthis%2Eoptions%2ExLabelFormat%26%26%28i%2Elabel%3Dthis%2Eoptions%2ExLabelFormat%28i%29%29%29%2Cl%3D0%2Ci%2Ey%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%3Bfor%28c%3Dthis%2Eoptions%2Eykeys%2Cd%3D%5B%5D%2Ce%3Da%3D0%2Cb%3Dc%2Elength%3Bb%3Ea%3Be%3D%2B%2Ba%29n%3Dc%5Be%5D%2Cq%3Dj%5Bn%5D%2C%22string%22%3D%3Dtypeof%20q%26%26%28q%3DparseFloat%28q%29%29%2Cnull%21%3Dq%26%26%22number%22%21%3Dtypeof%20q%26%26%28q%3Dnull%29%2Cnull%21%3Dq%26%26%28this%2Ecumulative%3Fl%2B%3Dq%3Anull%21%3Do%3F%28o%3DMath%2Emax%28q%2Co%29%2Cp%3DMath%2Emin%28q%2Cp%29%29%3Ao%3Dp%3Dq%29%2Cthis%2Ecumulative%26%26null%21%3Dl%26%26%28o%3DMath%2Emax%28l%2Co%29%2Cp%3DMath%2Emin%28l%2Cp%29%29%2Cd%2Epush%28q%29%3Breturn%20d%7D%2Ecall%28this%29%2Cg%2Epush%28i%29%3Breturn%20g%7D%2Ecall%28this%29%2Cthis%2Eoptions%2EparseTime%26%26%28this%2Edata%3Dthis%2Edata%2Esort%28function%28a%2Cb%29%7Breturn%28a%2Ex%3Eb%2Ex%29%2D%28b%2Ex%3Ea%2Ex%29%7D%29%29%2Cthis%2Exmin%3Dthis%2Edata%5B0%5D%2Ex%2Cthis%2Exmax%3Dthis%2Edata%5Bthis%2Edata%2Elength%2D1%5D%2Ex%2Cthis%2Eevents%3D%5B%5D%2Cthis%2Eoptions%2Eevents%2Elength%3E0%26%26%28this%2Eevents%3Dthis%2Eoptions%2EparseTime%3Ffunction%28%29%7Bvar%20a%2Cc%2Ce%2Cf%3Bfor%28e%3Dthis%2Eoptions%2Eevents%2Cf%3D%5B%5D%2Ca%3D0%2Cc%3De%2Elength%3Bc%3Ea%3Ba%2B%2B%29d%3De%5Ba%5D%2Cf%2Epush%28b%2EparseDate%28d%29%29%3Breturn%20f%7D%2Ecall%28this%29%3Athis%2Eoptions%2Eevents%2Cthis%2Exmax%3DMath%2Emax%28this%2Exmax%2CMath%2Emax%2Eapply%28Math%2Cthis%2Eevents%29%29%2Cthis%2Exmin%3DMath%2Emin%28this%2Exmin%2CMath%2Emin%2Eapply%28Math%2Cthis%2Eevents%29%29%29%2Cthis%2Exmin%3D%3D%3Dthis%2Exmax%26%26%28this%2Exmin%2D%3D1%2Cthis%2Exmax%2B%3D1%29%2Cthis%2Eymin%3Dthis%2Eyboundary%28%22min%22%2Cp%29%2Cthis%2Eymax%3Dthis%2Eyboundary%28%22max%22%2Co%29%2Cthis%2Eymin%3D%3D%3Dthis%2Eymax%26%26%28p%26%26%28this%2Eymin%2D%3D1%29%2Cthis%2Eymax%2B%3D1%29%2C%28%28r%3Dthis%2Eoptions%2Eaxes%29%3D%3D%3D%210%7C%7C%22both%22%3D%3D%3Dr%7C%7C%22y%22%3D%3D%3Dr%7C%7Cthis%2Eoptions%2Egrid%3D%3D%3D%210%29%26%26%28this%2Eoptions%2Eymax%3D%3D%3Dthis%2EgridDefaults%2Eymax%26%26this%2Eoptions%2Eymin%3D%3D%3Dthis%2EgridDefaults%2Eymin%3F%28this%2Egrid%3Dthis%2EautoGridLines%28this%2Eymin%2Cthis%2Eymax%2Cthis%2Eoptions%2EnumLines%29%2Cthis%2Eymin%3DMath%2Emin%28this%2Eymin%2Cthis%2Egrid%5B0%5D%29%2Cthis%2Eymax%3DMath%2Emax%28this%2Eymax%2Cthis%2Egrid%5Bthis%2Egrid%2Elength%2D1%5D%29%29%3A%28k%3D%28this%2Eymax%2Dthis%2Eymin%29%2F%28this%2Eoptions%2EnumLines%2D1%29%2Cthis%2Egrid%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%3Bfor%28d%3D%5B%5D%2Cm%3Da%3Db%3Dthis%2Eymin%2Cc%3Dthis%2Eymax%3Bk%3E0%3Fc%3E%3Da%3Aa%3E%3Dc%3Bm%3Da%2B%3Dk%29d%2Epush%28m%29%3Breturn%20d%7D%2Ecall%28this%29%29%29%2Cthis%2Edirty%3D%210%2Cc%3Fthis%2Eredraw%28%29%3Avoid%200%29%7D%2Cd%2Eprototype%2Eyboundary%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%3Breturn%20c%3Dthis%2Eoptions%5B%22y%22%2Ba%5D%2C%22string%22%3D%3Dtypeof%20c%3F%22auto%22%3D%3D%3Dc%2Eslice%280%2C4%29%3Fc%2Elength%3E5%3F%28d%3DparseInt%28c%2Eslice%285%29%2C10%29%2Cnull%3D%3Db%3Fd%3AMath%5Ba%5D%28b%2Cd%29%29%3Anull%21%3Db%3Fb%3A0%3AparseInt%28c%2C10%29%3Ac%7D%2Cd%2Eprototype%2EautoGridLines%3Dfunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%3Breturn%20h%3Db%2Da%2Cl%3DMath%2Efloor%28Math%2Elog%28h%29%2FMath%2Elog%2810%29%29%2Cj%3DMath%2Epow%2810%2Cl%29%2Ce%3DMath%2Efloor%28a%2Fj%29%2Aj%2Cd%3DMath%2Eceil%28b%2Fj%29%2Aj%2Ci%3D%28d%2De%29%2F%28c%2D1%29%2C1%3D%3D%3Dj%26%26i%3E1%26%26Math%2Eceil%28i%29%21%3D%3Di%26%26%28i%3DMath%2Eceil%28i%29%2Cd%3De%2Bi%2A%28c%2D1%29%29%2C0%3Ee%26%26d%3E0%26%26%28e%3DMath%2Efloor%28a%2Fi%29%2Ai%2Cd%3DMath%2Eceil%28b%2Fi%29%2Ai%29%2C1%3Ei%3F%28g%3DMath%2Efloor%28Math%2Elog%28i%29%2FMath%2Elog%2810%29%29%2Cf%3Dfunction%28%29%7Bvar%20a%2Cb%3Bfor%28b%3D%5B%5D%2Ck%3Da%3De%3Bi%3E0%3Fd%3E%3Da%3Aa%3E%3Dd%3Bk%3Da%2B%3Di%29b%2Epush%28parseFloat%28k%2EtoFixed%281%2Dg%29%29%29%3Breturn%20b%7D%28%29%29%3Af%3Dfunction%28%29%7Bvar%20a%2Cb%3Bfor%28b%3D%5B%5D%2Ck%3Da%3De%3Bi%3E0%3Fd%3E%3Da%3Aa%3E%3Dd%3Bk%3Da%2B%3Di%29b%2Epush%28k%29%3Breturn%20b%7D%28%29%2Cf%7D%2Cd%2Eprototype%2E%5Fcalc%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%3Breturn%20e%3Dthis%2Eel%2Ewidth%28%29%2Cc%3Dthis%2Eel%2Eheight%28%29%2C%28this%2EelementWidth%21%3D%3De%7C%7Cthis%2EelementHeight%21%3D%3Dc%7C%7Cthis%2Edirty%29%26%26%28this%2EelementWidth%3De%2Cthis%2EelementHeight%3Dc%2Cthis%2Edirty%3D%211%2Cthis%2Eleft%3Dthis%2Eoptions%2Epadding%2Cthis%2Eright%3Dthis%2EelementWidth%2Dthis%2Eoptions%2Epadding%2Cthis%2Etop%3Dthis%2Eoptions%2Epadding%2Cthis%2Ebottom%3Dthis%2EelementHeight%2Dthis%2Eoptions%2Epadding%2C%28%28g%3Dthis%2Eoptions%2Eaxes%29%3D%3D%3D%210%7C%7C%22both%22%3D%3D%3Dg%7C%7C%22y%22%3D%3D%3Dg%29%26%26%28f%3Dfunction%28%29%7Bvar%20a%2Cc%2Cd%2Ce%3Bfor%28d%3Dthis%2Egrid%2Ce%3D%5B%5D%2Ca%3D0%2Cc%3Dd%2Elength%3Bc%3Ea%3Ba%2B%2B%29b%3Dd%5Ba%5D%2Ce%2Epush%28this%2EmeasureText%28this%2EyAxisFormat%28b%29%29%2Ewidth%29%3Breturn%20e%7D%2Ecall%28this%29%2Cthis%2Eleft%2B%3DMath%2Emax%2Eapply%28Math%2Cf%29%29%2C%28%28h%3Dthis%2Eoptions%2Eaxes%29%3D%3D%3D%210%7C%7C%22both%22%3D%3D%3Dh%7C%7C%22x%22%3D%3D%3Dh%29%26%26%28a%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%3Bfor%28c%3D%5B%5D%2Cd%3Da%3D0%2Cb%3Dthis%2Edata%2Elength%3Bb%3E%3D0%3Fb%3Ea%3Aa%3Eb%3Bd%3Db%3E%3D0%3F%2B%2Ba%3A%2D%2Da%29c%2Epush%28this%2EmeasureText%28this%2Edata%5Bd%5D%2Etext%2C%2Dthis%2Eoptions%2ExLabelAngle%29%2Eheight%29%3Breturn%20c%7D%2Ecall%28this%29%2Cthis%2Ebottom%2D%3DMath%2Emax%2Eapply%28Math%2Ca%29%29%2Cthis%2Ewidth%3DMath%2Emax%281%2Cthis%2Eright%2Dthis%2Eleft%29%2Cthis%2Eheight%3DMath%2Emax%281%2Cthis%2Ebottom%2Dthis%2Etop%29%2Cthis%2Edx%3Dthis%2Ewidth%2F%28this%2Exmax%2Dthis%2Exmin%29%2Cthis%2Edy%3Dthis%2Eheight%2F%28this%2Eymax%2Dthis%2Eymin%29%2Cthis%2Ecalc%29%3Fthis%2Ecalc%28%29%3Avoid%200%7D%2Cd%2Eprototype%2EtransY%3Dfunction%28a%29%7Breturn%20this%2Ebottom%2D%28a%2Dthis%2Eymin%29%2Athis%2Edy%7D%2Cd%2Eprototype%2EtransX%3Dfunction%28a%29%7Breturn%201%3D%3D%3Dthis%2Edata%2Elength%3F%28this%2Eleft%2Bthis%2Eright%29%2F2%3Athis%2Eleft%2B%28a%2Dthis%2Exmin%29%2Athis%2Edx%7D%2Cd%2Eprototype%2Eredraw%3Dfunction%28%29%7Breturn%20this%2Eraphael%2Eclear%28%29%2Cthis%2E%5Fcalc%28%29%2Cthis%2EdrawGrid%28%29%2Cthis%2EdrawGoals%28%29%2Cthis%2EdrawEvents%28%29%2Cthis%2Edraw%3Fthis%2Edraw%28%29%3Avoid%200%7D%2Cd%2Eprototype%2EmeasureText%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%3Breturn%20null%3D%3Db%26%26%28b%3D0%29%2Cd%3Dthis%2Eraphael%2Etext%28100%2C100%2Ca%29%2Eattr%28%22font%2Dsize%22%2Cthis%2Eoptions%2EgridTextSize%29%2Eattr%28%22font%2Dfamily%22%2Cthis%2Eoptions%2EgridTextFamily%29%2Eattr%28%22font%2Dweight%22%2Cthis%2Eoptions%2EgridTextWeight%29%2Erotate%28b%29%2Cc%3Dd%2EgetBBox%28%29%2Cd%2Eremove%28%29%2Cc%7D%2Cd%2Eprototype%2EyAxisFormat%3Dfunction%28a%29%7Breturn%20this%2EyLabelFormat%28a%29%7D%2Cd%2Eprototype%2EyLabelFormat%3Dfunction%28a%29%7Breturn%22function%22%3D%3Dtypeof%20this%2Eoptions%2EyLabelFormat%3Fthis%2Eoptions%2EyLabelFormat%28a%29%3A%22%22%2Bthis%2Eoptions%2EpreUnits%2Bb%2Ecommas%28a%29%2Bthis%2Eoptions%2EpostUnits%7D%2Cd%2Eprototype%2EdrawGrid%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%3Bif%28this%2Eoptions%2Egrid%21%3D%3D%211%7C%7C%28e%3Dthis%2Eoptions%2Eaxes%29%3D%3D%3D%210%7C%7C%22both%22%3D%3D%3De%7C%7C%22y%22%3D%3D%3De%29%7Bfor%28f%3Dthis%2Egrid%2Ch%3D%5B%5D%2Cc%3D0%2Cd%3Df%2Elength%3Bd%3Ec%3Bc%2B%2B%29a%3Df%5Bc%5D%2Cb%3Dthis%2EtransY%28a%29%2C%28%28g%3Dthis%2Eoptions%2Eaxes%29%3D%3D%3D%210%7C%7C%22both%22%3D%3D%3Dg%7C%7C%22y%22%3D%3D%3Dg%29%26%26this%2EdrawYAxisLabel%28this%2Eleft%2Dthis%2Eoptions%2Epadding%2F2%2Cb%2Cthis%2EyAxisFormat%28a%29%29%2Cthis%2Eoptions%2Egrid%3Fh%2Epush%28this%2EdrawGridLine%28%22M%22%2Bthis%2Eleft%2B%22%2C%22%2Bb%2B%22H%22%2B%28this%2Eleft%2Bthis%2Ewidth%29%29%29%3Ah%2Epush%28void%200%29%3Breturn%20h%7D%7D%2Cd%2Eprototype%2EdrawGoals%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%3Bfor%28f%3Dthis%2Eoptions%2Egoals%2Cg%3D%5B%5D%2Cc%3Dd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Bc%3D%2B%2Bd%29b%3Df%5Bc%5D%2Ca%3Dthis%2Eoptions%2EgoalLineColors%5Bc%25this%2Eoptions%2EgoalLineColors%2Elength%5D%2Cg%2Epush%28this%2EdrawGoal%28b%2Ca%29%29%3Breturn%20g%7D%2Cd%2Eprototype%2EdrawEvents%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%3Bfor%28f%3Dthis%2Eevents%2Cg%3D%5B%5D%2Cc%3Dd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Bc%3D%2B%2Bd%29b%3Df%5Bc%5D%2Ca%3Dthis%2Eoptions%2EeventLineColors%5Bc%25this%2Eoptions%2EeventLineColors%2Elength%5D%2Cg%2Epush%28this%2EdrawEvent%28b%2Ca%29%29%3Breturn%20g%7D%2Cd%2Eprototype%2EdrawGoal%3Dfunction%28a%2Cb%29%7Breturn%20this%2Eraphael%2Epath%28%22M%22%2Bthis%2Eleft%2B%22%2C%22%2Bthis%2EtransY%28a%29%2B%22H%22%2Bthis%2Eright%29%2Eattr%28%22stroke%22%2Cb%29%2Eattr%28%22stroke%2Dwidth%22%2Cthis%2Eoptions%2EgoalStrokeWidth%29%7D%2Cd%2Eprototype%2EdrawEvent%3Dfunction%28a%2Cb%29%7Breturn%20this%2Eraphael%2Epath%28%22M%22%2Bthis%2EtransX%28a%29%2B%22%2C%22%2Bthis%2Ebottom%2B%22V%22%2Bthis%2Etop%29%2Eattr%28%22stroke%22%2Cb%29%2Eattr%28%22stroke%2Dwidth%22%2Cthis%2Eoptions%2EeventStrokeWidth%29%7D%2Cd%2Eprototype%2EdrawYAxisLabel%3Dfunction%28a%2Cb%2Cc%29%7Breturn%20this%2Eraphael%2Etext%28a%2Cb%2Cc%29%2Eattr%28%22font%2Dsize%22%2Cthis%2Eoptions%2EgridTextSize%29%2Eattr%28%22font%2Dfamily%22%2Cthis%2Eoptions%2EgridTextFamily%29%2Eattr%28%22font%2Dweight%22%2Cthis%2Eoptions%2EgridTextWeight%29%2Eattr%28%22fill%22%2Cthis%2Eoptions%2EgridTextColor%29%2Eattr%28%22text%2Danchor%22%2C%22end%22%29%7D%2Cd%2Eprototype%2EdrawGridLine%3Dfunction%28a%29%7Breturn%20this%2Eraphael%2Epath%28a%29%2Eattr%28%22stroke%22%2Cthis%2Eoptions%2EgridLineColor%29%2Eattr%28%22stroke%2Dwidth%22%2Cthis%2Eoptions%2EgridStrokeWidth%29%7D%2Cd%2Eprototype%2EstartRange%3Dfunction%28a%29%7Breturn%20this%2Ehover%2Ehide%28%29%2Cthis%2EselectFrom%3Da%2Cthis%2EselectionRect%2Eattr%28%7Bx%3Aa%2Cwidth%3A0%7D%29%2Eshow%28%29%7D%2Cd%2Eprototype%2EendRange%3Dfunction%28a%29%7Bvar%20b%2Cc%3Breturn%20this%2EselectFrom%3F%28c%3DMath%2Emin%28this%2EselectFrom%2Ca%29%2Cb%3DMath%2Emax%28this%2EselectFrom%2Ca%29%2Cthis%2Eoptions%2ErangeSelect%2Ecall%28this%2Eel%2C%7Bstart%3Athis%2Edata%5Bthis%2EhitTest%28c%29%5D%2Ex%2Cend%3Athis%2Edata%5Bthis%2EhitTest%28b%29%5D%2Ex%7D%29%2Cthis%2EselectFrom%3Dnull%29%3Avoid%200%7D%2Cd%2Eprototype%2EresizeHandler%3Dfunction%28%29%7Breturn%20this%2EtimeoutId%3Dnull%2Cthis%2Eraphael%2EsetSize%28this%2Eel%2Ewidth%28%29%2Cthis%2Eel%2Eheight%28%29%29%2Cthis%2Eredraw%28%29%7D%2Cd%7D%28b%2EEventEmitter%29%2Cb%2EparseDate%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%3Breturn%22number%22%3D%3Dtypeof%20a%3Fa%3A%28c%3Da%2Ematch%28%2F%5E%28%5Cd%2B%29%20Q%28%5Cd%29%24%2F%29%2Ce%3Da%2Ematch%28%2F%5E%28%5Cd%2B%29%2D%28%5Cd%2B%29%24%2F%29%2Cf%3Da%2Ematch%28%2F%5E%28%5Cd%2B%29%2D%28%5Cd%2B%29%2D%28%5Cd%2B%29%24%2F%29%2Ch%3Da%2Ematch%28%2F%5E%28%5Cd%2B%29%20W%28%5Cd%2B%29%24%2F%29%2Ci%3Da%2Ematch%28%2F%5E%28%5Cd%2B%29%2D%28%5Cd%2B%29%2D%28%5Cd%2B%29%5B%20T%5D%28%5Cd%2B%29%3A%28%5Cd%2B%29%28Z%7C%28%5B%2B%2D%5D%29%28%5Cd%5Cd%29%3A%3F%28%5Cd%5Cd%29%29%3F%24%2F%29%2Cj%3Da%2Ematch%28%2F%5E%28%5Cd%2B%29%2D%28%5Cd%2B%29%2D%28%5Cd%2B%29%5B%20T%5D%28%5Cd%2B%29%3A%28%5Cd%2B%29%3A%28%5Cd%2B%28%5C%2E%5Cd%2B%29%3F%29%28Z%7C%28%5B%2B%2D%5D%29%28%5Cd%5Cd%29%3A%3F%28%5Cd%5Cd%29%29%3F%24%2F%29%2Cc%3Fnew%20Date%28parseInt%28c%5B1%5D%2C10%29%2C3%2AparseInt%28c%5B2%5D%2C10%29%2D1%2C1%29%2EgetTime%28%29%3Ae%3Fnew%20Date%28parseInt%28e%5B1%5D%2C10%29%2CparseInt%28e%5B2%5D%2C10%29%2D1%2C1%29%2EgetTime%28%29%3Af%3Fnew%20Date%28parseInt%28f%5B1%5D%2C10%29%2CparseInt%28f%5B2%5D%2C10%29%2D1%2CparseInt%28f%5B3%5D%2C10%29%29%2EgetTime%28%29%3Ah%3F%28k%3Dnew%20Date%28parseInt%28h%5B1%5D%2C10%29%2C0%2C1%29%2C4%21%3D%3Dk%2EgetDay%28%29%26%26k%2EsetMonth%280%2C1%2B%284%2Dk%2EgetDay%28%29%2B7%29%257%29%2Ck%2EgetTime%28%29%2B6048e5%2AparseInt%28h%5B2%5D%2C10%29%29%3Ai%3Fi%5B6%5D%3F%28g%3D0%2C%22Z%22%21%3D%3Di%5B6%5D%26%26%28g%3D60%2AparseInt%28i%5B8%5D%2C10%29%2BparseInt%28i%5B9%5D%2C10%29%2C%22%2B%22%3D%3D%3Di%5B7%5D%26%26%28g%3D0%2Dg%29%29%2CDate%2EUTC%28parseInt%28i%5B1%5D%2C10%29%2CparseInt%28i%5B2%5D%2C10%29%2D1%2CparseInt%28i%5B3%5D%2C10%29%2CparseInt%28i%5B4%5D%2C10%29%2CparseInt%28i%5B5%5D%2C10%29%2Bg%29%29%3Anew%20Date%28parseInt%28i%5B1%5D%2C10%29%2CparseInt%28i%5B2%5D%2C10%29%2D1%2CparseInt%28i%5B3%5D%2C10%29%2CparseInt%28i%5B4%5D%2C10%29%2CparseInt%28i%5B5%5D%2C10%29%29%2EgetTime%28%29%3Aj%3F%28l%3DparseFloat%28j%5B6%5D%29%2Cb%3DMath%2Efloor%28l%29%2Cd%3DMath%2Eround%281e3%2A%28l%2Db%29%29%2Cj%5B8%5D%3F%28g%3D0%2C%22Z%22%21%3D%3Dj%5B8%5D%26%26%28g%3D60%2AparseInt%28j%5B10%5D%2C10%29%2BparseInt%28j%5B11%5D%2C10%29%2C%22%2B%22%3D%3D%3Dj%5B9%5D%26%26%28g%3D0%2Dg%29%29%2CDate%2EUTC%28parseInt%28j%5B1%5D%2C10%29%2CparseInt%28j%5B2%5D%2C10%29%2D1%2CparseInt%28j%5B3%5D%2C10%29%2CparseInt%28j%5B4%5D%2C10%29%2CparseInt%28j%5B5%5D%2C10%29%2Bg%2Cb%2Cd%29%29%3Anew%20Date%28parseInt%28j%5B1%5D%2C10%29%2CparseInt%28j%5B2%5D%2C10%29%2D1%2CparseInt%28j%5B3%5D%2C10%29%2CparseInt%28j%5B4%5D%2C10%29%2CparseInt%28j%5B5%5D%2C10%29%2Cb%2Cd%29%2EgetTime%28%29%29%3Anew%20Date%28parseInt%28a%2C10%29%2C0%2C1%29%2EgetTime%28%29%29%7D%2Cb%2EHover%3Dfunction%28%29%7Bfunction%20c%28c%29%7Bnull%3D%3Dc%26%26%28c%3D%7B%7D%29%2Cthis%2Eoptions%3Da%2Eextend%28%7B%7D%2Cb%2EHover%2Edefaults%2Cc%29%2Cthis%2Eel%3Da%28%22%3Cdiv%20class%3D%27%22%2Bthis%2Eoptions%5B%22class%22%5D%2B%22%27%3E%3C%2Fdiv%3E%22%29%2Cthis%2Eel%2Ehide%28%29%2Cthis%2Eoptions%2Eparent%2Eappend%28this%2Eel%29%7Dreturn%20c%2Edefaults%3D%7B%22class%22%3A%22morris%2Dhover%20morris%2Ddefault%2Dstyle%22%7D%2Cc%2Eprototype%2Eupdate%3Dfunction%28a%2Cb%2Cc%29%7Breturn%20a%3F%28this%2Ehtml%28a%29%2Cthis%2Eshow%28%29%2Cthis%2EmoveTo%28b%2Cc%29%29%3Athis%2Ehide%28%29%7D%2Cc%2Eprototype%2Ehtml%3Dfunction%28a%29%7Breturn%20this%2Eel%2Ehtml%28a%29%7D%2Cc%2Eprototype%2EmoveTo%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%2Cg%2Ch%3Breturn%20g%3Dthis%2Eoptions%2Eparent%2EinnerWidth%28%29%2Cf%3Dthis%2Eoptions%2Eparent%2EinnerHeight%28%29%2Cd%3Dthis%2Eel%2EouterWidth%28%29%2Cc%3Dthis%2Eel%2EouterHeight%28%29%2Ce%3DMath%2Emin%28Math%2Emax%280%2Ca%2Dd%2F2%29%2Cg%2Dd%29%2Cnull%21%3Db%3F%28h%3Db%2Dc%2D10%2C0%3Eh%26%26%28h%3Db%2B10%2Ch%2Bc%3Ef%26%26%28h%3Df%2F2%2Dc%2F2%29%29%29%3Ah%3Df%2F2%2Dc%2F2%2Cthis%2Eel%2Ecss%28%7Bleft%3Ae%2B%22px%22%2Ctop%3AparseInt%28h%29%2B%22px%22%7D%29%7D%2Cc%2Eprototype%2Eshow%3Dfunction%28%29%7Breturn%20this%2Eel%2Eshow%28%29%7D%2Cc%2Eprototype%2Ehide%3Dfunction%28%29%7Breturn%20this%2Eel%2Ehide%28%29%7D%2Cc%7D%28%29%2Cb%2ELine%3Dfunction%28a%29%7Bfunction%20c%28a%29%7Breturn%20this%2Ehilight%3Df%28this%2Ehilight%2Cthis%29%2Cthis%2EonHoverOut%3Df%28this%2EonHoverOut%2Cthis%29%2Cthis%2EonHoverMove%3Df%28this%2EonHoverMove%2Cthis%29%2Cthis%2EonGridClick%3Df%28this%2EonGridClick%2Cthis%29%2Cthis%20instanceof%20b%2ELine%3F%28c%2E%5F%5Fsuper%5F%5F%2Econstructor%2Ecall%28this%2Ca%29%2Cvoid%200%29%3Anew%20b%2ELine%28a%29%7Dreturn%20h%28c%2Ca%29%2Cc%2Eprototype%2Einit%3Dfunction%28%29%7Breturn%22always%22%21%3D%3Dthis%2Eoptions%2EhideHover%3F%28this%2Ehover%3Dnew%20b%2EHover%28%7Bparent%3Athis%2Eel%7D%29%2Cthis%2Eon%28%22hovermove%22%2Cthis%2EonHoverMove%29%2Cthis%2Eon%28%22hoverout%22%2Cthis%2EonHoverOut%29%2Cthis%2Eon%28%22gridclick%22%2Cthis%2EonGridClick%29%29%3Avoid%200%7D%2Cc%2Eprototype%2Edefaults%3D%7BlineWidth%3A3%2CpointSize%3A4%2ClineColors%3A%5B%22%230b62a4%22%2C%22%237A92A3%22%2C%22%234da74d%22%2C%22%23afd8f8%22%2C%22%23edc240%22%2C%22%23cb4b4b%22%2C%22%239440ed%22%5D%2CpointStrokeWidths%3A%5B1%5D%2CpointStrokeColors%3A%5B%22%23ffffff%22%5D%2CpointFillColors%3A%5B%5D%2Csmooth%3A%210%2CxLabels%3A%22auto%22%2CxLabelFormat%3Anull%2CxLabelMargin%3A24%2ChideHover%3A%211%7D%2Cc%2Eprototype%2Ecalc%3Dfunction%28%29%7Breturn%20this%2EcalcPoints%28%29%2Cthis%2EgeneratePaths%28%29%7D%2Cc%2Eprototype%2EcalcPoints%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%3Bfor%28e%3Dthis%2Edata%2Cf%3D%5B%5D%2Cc%3D0%2Cd%3De%2Elength%3Bd%3Ec%3Bc%2B%2B%29a%3De%5Bc%5D%2Ca%2E%5Fx%3Dthis%2EtransX%28a%2Ex%29%2Ca%2E%5Fy%3Dfunction%28%29%7Bvar%20c%2Cd%2Ce%2Cf%3Bfor%28e%3Da%2Ey%2Cf%3D%5B%5D%2Cc%3D0%2Cd%3De%2Elength%3Bd%3Ec%3Bc%2B%2B%29b%3De%5Bc%5D%2Cnull%21%3Db%3Ff%2Epush%28this%2EtransY%28b%29%29%3Af%2Epush%28b%29%3Breturn%20f%7D%2Ecall%28this%29%2Cf%2Epush%28a%2E%5Fymax%3DMath%2Emin%2Eapply%28Math%2C%5Bthis%2Ebottom%5D%2Econcat%28function%28%29%7Bvar%20c%2Cd%2Ce%2Cf%3Bfor%28e%3Da%2E%5Fy%2Cf%3D%5B%5D%2Cc%3D0%2Cd%3De%2Elength%3Bd%3Ec%3Bc%2B%2B%29b%3De%5Bc%5D%2Cnull%21%3Db%26%26f%2Epush%28b%29%3Breturn%20f%7D%28%29%29%29%29%3Breturn%20f%7D%2Cc%2Eprototype%2EhitTest%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%3Bif%280%3D%3D%3Dthis%2Edata%2Elength%29return%20null%3Bfor%28f%3Dthis%2Edata%2Eslice%281%29%2Cb%3Dd%3D0%2Ce%3Df%2Elength%3Be%3Ed%26%26%28c%3Df%5Bb%5D%2C%21%28a%3C%28c%2E%5Fx%2Bthis%2Edata%5Bb%5D%2E%5Fx%29%2F2%29%29%3Bb%3D%2B%2Bd%29%3Breturn%20b%7D%2Cc%2Eprototype%2EonGridClick%3Dfunction%28a%2Cb%29%7Bvar%20c%3Breturn%20c%3Dthis%2EhitTest%28a%29%2Cthis%2Efire%28%22click%22%2Cc%2Cthis%2Edata%5Bc%5D%2Esrc%2Ca%2Cb%29%7D%2Cc%2Eprototype%2EonHoverMove%3Dfunction%28a%29%7Bvar%20b%3Breturn%20b%3Dthis%2EhitTest%28a%29%2Cthis%2EdisplayHoverForRow%28b%29%7D%2Cc%2Eprototype%2EonHoverOut%3Dfunction%28%29%7Breturn%20this%2Eoptions%2EhideHover%21%3D%3D%211%3Fthis%2EdisplayHoverForRow%28null%29%3Avoid%200%7D%2Cc%2Eprototype%2EdisplayHoverForRow%3Dfunction%28a%29%7Bvar%20b%3Breturn%20null%21%3Da%3F%28%28b%3Dthis%2Ehover%29%2Eupdate%2Eapply%28b%2Cthis%2EhoverContentForRow%28a%29%29%2Cthis%2Ehilight%28a%29%29%3A%28this%2Ehover%2Ehide%28%29%2Cthis%2Ehilight%28%29%29%7D%2Cc%2Eprototype%2EhoverContentForRow%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%3Bfor%28d%3Dthis%2Edata%5Ba%5D%2Cb%3D%22%3Cdiv%20class%3D%27morris%2Dhover%2Drow%2Dlabel%27%3E%22%2Bd%2Elabel%2B%22%3C%2Fdiv%3E%22%2Ch%3Dd%2Ey%2Cc%3Df%3D0%2Cg%3Dh%2Elength%3Bg%3Ef%3Bc%3D%2B%2Bf%29e%3Dh%5Bc%5D%2Cb%2B%3D%22%3Cdiv%20class%3D%27morris%2Dhover%2Dpoint%27%20style%3D%27color%3A%20%22%2Bthis%2EcolorFor%28d%2Cc%2C%22label%22%29%2B%22%27%3E%5Cn%20%20%22%2Bthis%2Eoptions%2Elabels%5Bc%5D%2B%22%3A%5Cn%20%20%22%2Bthis%2EyLabelFormat%28e%29%2B%22%5Cn%3C%2Fdiv%3E%22%3Breturn%22function%22%3D%3Dtypeof%20this%2Eoptions%2EhoverCallback%26%26%28b%3Dthis%2Eoptions%2EhoverCallback%28a%2Cthis%2Eoptions%2Cb%2Cd%2Esrc%29%29%2C%5Bb%2Cd%2E%5Fx%2Cd%2E%5Fymax%5D%7D%2Cc%2Eprototype%2EgeneratePaths%3Dfunction%28%29%7Bvar%20a%2Cc%2Cd%2Ce%3Breturn%20this%2Epaths%3Dfunction%28%29%7Bvar%20f%2Cg%2Ch%2Cj%3Bfor%28j%3D%5B%5D%2Cc%3Df%3D0%2Cg%3Dthis%2Eoptions%2Eykeys%2Elength%3Bg%3E%3D0%3Fg%3Ef%3Af%3Eg%3Bc%3Dg%3E%3D0%3F%2B%2Bf%3A%2D%2Df%29e%3D%22boolean%22%3D%3Dtypeof%20this%2Eoptions%2Esmooth%3Fthis%2Eoptions%2Esmooth%3A%28h%3Dthis%2Eoptions%2Eykeys%5Bc%5D%2Ci%2Ecall%28this%2Eoptions%2Esmooth%2Ch%29%3E%3D0%29%2Ca%3Dfunction%28%29%7Bvar%20a%2Cb%2Ce%2Cf%3Bfor%28e%3Dthis%2Edata%2Cf%3D%5B%5D%2Ca%3D0%2Cb%3De%2Elength%3Bb%3Ea%3Ba%2B%2B%29d%3De%5Ba%5D%2Cvoid%200%21%3D%3Dd%2E%5Fy%5Bc%5D%26%26f%2Epush%28%7Bx%3Ad%2E%5Fx%2Cy%3Ad%2E%5Fy%5Bc%5D%7D%29%3Breturn%20f%7D%2Ecall%28this%29%2Ca%2Elength%3E1%3Fj%2Epush%28b%2ELine%2EcreatePath%28a%2Ce%2Cthis%2Ebottom%29%29%3Aj%2Epush%28null%29%3Breturn%20j%7D%2Ecall%28this%29%7D%2Cc%2Eprototype%2Edraw%3Dfunction%28%29%7Bvar%20a%3Breturn%28%28a%3Dthis%2Eoptions%2Eaxes%29%3D%3D%3D%210%7C%7C%22both%22%3D%3D%3Da%7C%7C%22x%22%3D%3D%3Da%29%26%26this%2EdrawXAxis%28%29%2Cthis%2EdrawSeries%28%29%2Cthis%2Eoptions%2EhideHover%3D%3D%3D%211%3Fthis%2EdisplayHoverForRow%28this%2Edata%2Elength%2D1%29%3Avoid%200%7D%2Cc%2Eprototype%2EdrawXAxis%3Dfunction%28%29%7Bvar%20a%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%3Dthis%3Bfor%28h%3Dthis%2Ebottom%2Bthis%2Eoptions%2Epadding%2F2%2Cf%3Dnull%2Ce%3Dnull%2Ca%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%2Cg%2Ci%2Cj%3Breturn%20c%3Dl%2EdrawXAxisLabel%28l%2EtransX%28b%29%2Ch%2Ca%29%2Cj%3Dc%2EgetBBox%28%29%2Cc%2Etransform%28%22r%22%2B%2Dl%2Eoptions%2ExLabelAngle%29%2Cd%3Dc%2EgetBBox%28%29%2Cc%2Etransform%28%22t0%2C%22%2Bd%2Eheight%2F2%2B%22%2E%2E%2E%22%29%2C0%21%3D%3Dl%2Eoptions%2ExLabelAngle%26%26%28i%3D%2D%2E5%2Aj%2Ewidth%2AMath%2Ecos%28l%2Eoptions%2ExLabelAngle%2AMath%2EPI%2F180%29%2Cc%2Etransform%28%22t%22%2Bi%2B%22%2C0%2E%2E%2E%22%29%29%2Cd%3Dc%2EgetBBox%28%29%2C%28null%3D%3Df%7C%7Cf%3E%3Dd%2Ex%2Bd%2Ewidth%7C%7Cnull%21%3De%26%26e%3E%3Dd%2Ex%29%26%26d%2Ex%3E%3D0%26%26d%2Ex%2Bd%2Ewidth%3Cl%2Eel%2Ewidth%28%29%3F%280%21%3D%3Dl%2Eoptions%2ExLabelAngle%26%26%28g%3D1%2E25%2Al%2Eoptions%2EgridTextSize%2FMath%2Esin%28l%2Eoptions%2ExLabelAngle%2AMath%2EPI%2F180%29%2Ce%3Dd%2Ex%2Dg%29%2Cf%3Dd%2Ex%2Dl%2Eoptions%2ExLabelMargin%29%3Ac%2Eremove%28%29%7D%2Cd%3Dthis%2Eoptions%2EparseTime%3F1%3D%3D%3Dthis%2Edata%2Elength%26%26%22auto%22%3D%3D%3Dthis%2Eoptions%2ExLabels%3F%5B%5Bthis%2Edata%5B0%5D%2Elabel%2Cthis%2Edata%5B0%5D%2Ex%5D%5D%3Ab%2ElabelSeries%28this%2Exmin%2Cthis%2Exmax%2Cthis%2Ewidth%2Cthis%2Eoptions%2ExLabels%2Cthis%2Eoptions%2ExLabelFormat%29%3Afunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%3Bfor%28c%3Dthis%2Edata%2Cd%3D%5B%5D%2Ca%3D0%2Cb%3Dc%2Elength%3Bb%3Ea%3Ba%2B%2B%29g%3Dc%5Ba%5D%2Cd%2Epush%28%5Bg%2Elabel%2Cg%2Ex%5D%29%3Breturn%20d%7D%2Ecall%28this%29%2Cd%2Ereverse%28%29%2Ck%3D%5B%5D%2Ci%3D0%2Cj%3Dd%2Elength%3Bj%3Ei%3Bi%2B%2B%29c%3Dd%5Bi%5D%2Ck%2Epush%28a%28c%5B0%5D%2Cc%5B1%5D%29%29%3Breturn%20k%7D%2Cc%2Eprototype%2EdrawSeries%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%3Bfor%28this%2EseriesPoints%3D%5B%5D%2Ca%3Db%3Dd%3Dthis%2Eoptions%2Eykeys%2Elength%2D1%3B0%3E%3Dd%3F0%3E%3Db%3Ab%3E%3D0%3Ba%3D0%3E%3Dd%3F%2B%2Bb%3A%2D%2Db%29this%2E%5FdrawLineFor%28a%29%3Bfor%28f%3D%5B%5D%2Ca%3Dc%3De%3Dthis%2Eoptions%2Eykeys%2Elength%2D1%3B0%3E%3De%3F0%3E%3Dc%3Ac%3E%3D0%3Ba%3D0%3E%3De%3F%2B%2Bc%3A%2D%2Dc%29f%2Epush%28this%2E%5FdrawPointFor%28a%29%29%3Breturn%20f%7D%2Cc%2Eprototype%2E%5FdrawPointFor%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%3Bfor%28this%2EseriesPoints%5Ba%5D%3D%5B%5D%2Cf%3Dthis%2Edata%2Cg%3D%5B%5D%2Cd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Bd%2B%2B%29c%3Df%5Bd%5D%2Cb%3Dnull%2Cnull%21%3Dc%2E%5Fy%5Ba%5D%26%26%28b%3Dthis%2EdrawLinePoint%28c%2E%5Fx%2Cc%2E%5Fy%5Ba%5D%2Cthis%2EcolorFor%28c%2Ca%2C%22point%22%29%2Ca%29%29%2Cg%2Epush%28this%2EseriesPoints%5Ba%5D%2Epush%28b%29%29%3Breturn%20g%7D%2Cc%2Eprototype%2E%5FdrawLineFor%3Dfunction%28a%29%7Bvar%20b%3Breturn%20b%3Dthis%2Epaths%5Ba%5D%2Cnull%21%3D%3Db%3Fthis%2EdrawLinePath%28b%2Cthis%2EcolorFor%28null%2Ca%2C%22line%22%29%2Ca%29%3Avoid%200%7D%2Cc%2EcreatePath%3Dfunction%28a%2Cc%2Cd%29%7Bvar%20e%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%2Co%2Cp%2Cq%2Cr%3Bfor%28k%3D%22%22%2Cc%26%26%28g%3Db%2ELine%2Egradients%28a%29%29%2Cl%3D%7By%3Anull%7D%2Ch%3Dq%3D0%2Cr%3Da%2Elength%3Br%3Eq%3Bh%3D%2B%2Bq%29e%3Da%5Bh%5D%2Cnull%21%3De%2Ey%26%26%28null%21%3Dl%2Ey%3Fc%3F%28f%3Dg%5Bh%5D%2Cj%3Dg%5Bh%2D1%5D%2Ci%3D%28e%2Ex%2Dl%2Ex%29%2F4%2Cm%3Dl%2Ex%2Bi%2Co%3DMath%2Emin%28d%2Cl%2Ey%2Bi%2Aj%29%2Cn%3De%2Ex%2Di%2Cp%3DMath%2Emin%28d%2Ce%2Ey%2Di%2Af%29%2Ck%2B%3D%22C%22%2Bm%2B%22%2C%22%2Bo%2B%22%2C%22%2Bn%2B%22%2C%22%2Bp%2B%22%2C%22%2Be%2Ex%2B%22%2C%22%2Be%2Ey%29%3Ak%2B%3D%22L%22%2Be%2Ex%2B%22%2C%22%2Be%2Ey%3Ac%26%26null%3D%3Dg%5Bh%5D%7C%7C%28k%2B%3D%22M%22%2Be%2Ex%2B%22%2C%22%2Be%2Ey%29%29%2Cl%3De%3Breturn%20k%7D%2Cc%2Egradients%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%3Bfor%28c%3Dfunction%28a%2Cb%29%7Breturn%28a%2Ey%2Db%2Ey%29%2F%28a%2Ex%2Db%2Ex%29%7D%2Ci%3D%5B%5D%2Cd%3Dg%3D0%2Ch%3Da%2Elength%3Bh%3Eg%3Bd%3D%2B%2Bg%29b%3Da%5Bd%5D%2Cnull%21%3Db%2Ey%3F%28e%3Da%5Bd%2B1%5D%7C%7C%7By%3Anull%7D%2Cf%3Da%5Bd%2D1%5D%7C%7C%7By%3Anull%7D%2Cnull%21%3Df%2Ey%26%26null%21%3De%2Ey%3Fi%2Epush%28c%28f%2Ce%29%29%3Anull%21%3Df%2Ey%3Fi%2Epush%28c%28f%2Cb%29%29%3Anull%21%3De%2Ey%3Fi%2Epush%28c%28b%2Ce%29%29%3Ai%2Epush%28null%29%29%3Ai%2Epush%28null%29%3Breturn%20i%7D%2Cc%2Eprototype%2Ehilight%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%3Bif%28null%21%3D%3Dthis%2EprevHilight%26%26this%2EprevHilight%21%3D%3Da%29for%28b%3Dc%3D0%2Ce%3Dthis%2EseriesPoints%2Elength%2D1%3Be%3E%3D0%3Fe%3E%3Dc%3Ac%3E%3De%3Bb%3De%3E%3D0%3F%2B%2Bc%3A%2D%2Dc%29this%2EseriesPoints%5Bb%5D%5Bthis%2EprevHilight%5D%26%26this%2EseriesPoints%5Bb%5D%5Bthis%2EprevHilight%5D%2Eanimate%28this%2EpointShrinkSeries%28b%29%29%3Bif%28null%21%3D%3Da%26%26this%2EprevHilight%21%3D%3Da%29for%28b%3Dd%3D0%2Cf%3Dthis%2EseriesPoints%2Elength%2D1%3Bf%3E%3D0%3Ff%3E%3Dd%3Ad%3E%3Df%3Bb%3Df%3E%3D0%3F%2B%2Bd%3A%2D%2Dd%29this%2EseriesPoints%5Bb%5D%5Ba%5D%26%26this%2EseriesPoints%5Bb%5D%5Ba%5D%2Eanimate%28this%2EpointGrowSeries%28b%29%29%3Breturn%20this%2EprevHilight%3Da%7D%2Cc%2Eprototype%2EcolorFor%3Dfunction%28a%2Cb%2Cc%29%7Breturn%22function%22%3D%3Dtypeof%20this%2Eoptions%2ElineColors%3Fthis%2Eoptions%2ElineColors%2Ecall%28this%2Ca%2Cb%2Cc%29%3A%22point%22%3D%3D%3Dc%3Fthis%2Eoptions%2EpointFillColors%5Bb%25this%2Eoptions%2EpointFillColors%2Elength%5D%7C%7Cthis%2Eoptions%2ElineColors%5Bb%25this%2Eoptions%2ElineColors%2Elength%5D%3Athis%2Eoptions%2ElineColors%5Bb%25this%2Eoptions%2ElineColors%2Elength%5D%7D%2Cc%2Eprototype%2EdrawXAxisLabel%3Dfunction%28a%2Cb%2Cc%29%7Breturn%20this%2Eraphael%2Etext%28a%2Cb%2Cc%29%2Eattr%28%22font%2Dsize%22%2Cthis%2Eoptions%2EgridTextSize%29%2Eattr%28%22font%2Dfamily%22%2Cthis%2Eoptions%2EgridTextFamily%29%2Eattr%28%22font%2Dweight%22%2Cthis%2Eoptions%2EgridTextWeight%29%2Eattr%28%22fill%22%2Cthis%2Eoptions%2EgridTextColor%29%7D%2Cc%2Eprototype%2EdrawLinePath%3Dfunction%28a%2Cb%2Cc%29%7Breturn%20this%2Eraphael%2Epath%28a%29%2Eattr%28%22stroke%22%2Cb%29%2Eattr%28%22stroke%2Dwidth%22%2Cthis%2ElineWidthForSeries%28c%29%29%7D%2Cc%2Eprototype%2EdrawLinePoint%3Dfunction%28a%2Cb%2Cc%2Cd%29%7Breturn%20this%2Eraphael%2Ecircle%28a%2Cb%2Cthis%2EpointSizeForSeries%28d%29%29%2Eattr%28%22fill%22%2Cc%29%2Eattr%28%22stroke%2Dwidth%22%2Cthis%2EpointStrokeWidthForSeries%28d%29%29%2Eattr%28%22stroke%22%2Cthis%2EpointStrokeColorForSeries%28d%29%29%7D%2Cc%2Eprototype%2EpointStrokeWidthForSeries%3Dfunction%28a%29%7Breturn%20this%2Eoptions%2EpointStrokeWidths%5Ba%25this%2Eoptions%2EpointStrokeWidths%2Elength%5D%7D%2Cc%2Eprototype%2EpointStrokeColorForSeries%3Dfunction%28a%29%7Breturn%20this%2Eoptions%2EpointStrokeColors%5Ba%25this%2Eoptions%2EpointStrokeColors%2Elength%5D%7D%2Cc%2Eprototype%2ElineWidthForSeries%3Dfunction%28a%29%7Breturn%20this%2Eoptions%2ElineWidth%20instanceof%20Array%3Fthis%2Eoptions%2ElineWidth%5Ba%25this%2Eoptions%2ElineWidth%2Elength%5D%3Athis%2Eoptions%2ElineWidth%7D%2Cc%2Eprototype%2EpointSizeForSeries%3Dfunction%28a%29%7Breturn%20this%2Eoptions%2EpointSize%20instanceof%20Array%3Fthis%2Eoptions%2EpointSize%5Ba%25this%2Eoptions%2EpointSize%2Elength%5D%3Athis%2Eoptions%2EpointSize%7D%2Cc%2Eprototype%2EpointGrowSeries%3Dfunction%28a%29%7Breturn%20Raphael%2Eanimation%28%7Br%3Athis%2EpointSizeForSeries%28a%29%2B3%7D%2C25%2C%22linear%22%29%7D%2Cc%2Eprototype%2EpointShrinkSeries%3Dfunction%28a%29%7Breturn%20Raphael%2Eanimation%28%7Br%3Athis%2EpointSizeForSeries%28a%29%7D%2C25%2C%22linear%22%29%7D%2Cc%7D%28b%2EGrid%29%2Cb%2ElabelSeries%3Dfunction%28c%2Cd%2Ce%2Cf%2Cg%29%7Bvar%20h%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%2Co%2Cp%2Cq%2Cr%3Bif%28j%3D200%2A%28d%2Dc%29%2Fe%2Ci%3Dnew%20Date%28c%29%2Cn%3Db%2ELABEL%5FSPECS%5Bf%5D%2Cvoid%200%3D%3D%3Dn%29for%28r%3Db%2EAUTO%5FLABEL%5FORDER%2Cp%3D0%2Cq%3Dr%2Elength%3Bq%3Ep%3Bp%2B%2B%29if%28k%3Dr%5Bp%5D%2Cm%3Db%2ELABEL%5FSPECS%5Bk%5D%2Cj%3E%3Dm%2Espan%29%7Bn%3Dm%3Bbreak%7Dfor%28void%200%3D%3D%3Dn%26%26%28n%3Db%2ELABEL%5FSPECS%2Esecond%29%2Cg%26%26%28n%3Da%2Eextend%28%7B%7D%2Cn%2C%7Bfmt%3Ag%7D%29%29%2Ch%3Dn%2Estart%28i%29%2Cl%3D%5B%5D%3B%28o%3Dh%2EgetTime%28%29%29%3C%3Dd%3B%29o%3E%3Dc%26%26l%2Epush%28%5Bn%2Efmt%28h%29%2Co%5D%29%2Cn%2Eincr%28h%29%3Breturn%20l%7D%2Cc%3Dfunction%28a%29%7Breturn%7Bspan%3A60%2Aa%2A1e3%2Cstart%3Afunction%28a%29%7Breturn%20new%20Date%28a%2EgetFullYear%28%29%2Ca%2EgetMonth%28%29%2Ca%2EgetDate%28%29%2Ca%2EgetHours%28%29%29%7D%2Cfmt%3Afunction%28a%29%7Breturn%22%22%2Bb%2Epad2%28a%2EgetHours%28%29%29%2B%22%3A%22%2Bb%2Epad2%28a%2EgetMinutes%28%29%29%7D%2Cincr%3Afunction%28b%29%7Breturn%20b%2EsetUTCMinutes%28b%2EgetUTCMinutes%28%29%2Ba%29%7D%7D%7D%2Cd%3Dfunction%28a%29%7Breturn%7Bspan%3A1e3%2Aa%2Cstart%3Afunction%28a%29%7Breturn%20new%20Date%28a%2EgetFullYear%28%29%2Ca%2EgetMonth%28%29%2Ca%2EgetDate%28%29%2Ca%2EgetHours%28%29%2Ca%2EgetMinutes%28%29%29%7D%2Cfmt%3Afunction%28a%29%7Breturn%22%22%2Bb%2Epad2%28a%2EgetHours%28%29%29%2B%22%3A%22%2Bb%2Epad2%28a%2EgetMinutes%28%29%29%2B%22%3A%22%2Bb%2Epad2%28a%2EgetSeconds%28%29%29%7D%2Cincr%3Afunction%28b%29%7Breturn%20b%2EsetUTCSeconds%28b%2EgetUTCSeconds%28%29%2Ba%29%7D%7D%7D%2Cb%2ELABEL%5FSPECS%3D%7Bdecade%3A%7Bspan%3A1728e8%2Cstart%3Afunction%28a%29%7Breturn%20new%20Date%28a%2EgetFullYear%28%29%2Da%2EgetFullYear%28%29%2510%2C0%2C1%29%7D%2Cfmt%3Afunction%28a%29%7Breturn%22%22%2Ba%2EgetFullYear%28%29%7D%2Cincr%3Afunction%28a%29%7Breturn%20a%2EsetFullYear%28a%2EgetFullYear%28%29%2B10%29%7D%7D%2Cyear%3A%7Bspan%3A1728e7%2Cstart%3Afunction%28a%29%7Breturn%20new%20Date%28a%2EgetFullYear%28%29%2C0%2C1%29%7D%2Cfmt%3Afunction%28a%29%7Breturn%22%22%2Ba%2EgetFullYear%28%29%7D%2Cincr%3Afunction%28a%29%7Breturn%20a%2EsetFullYear%28a%2EgetFullYear%28%29%2B1%29%7D%7D%2Cmonth%3A%7Bspan%3A24192e5%2Cstart%3Afunction%28a%29%7Breturn%20new%20Date%28a%2EgetFullYear%28%29%2Ca%2EgetMonth%28%29%2C1%29%7D%2Cfmt%3Afunction%28a%29%7Breturn%22%22%2Ba%2EgetFullYear%28%29%2B%22%2D%22%2Bb%2Epad2%28a%2EgetMonth%28%29%2B1%29%7D%2Cincr%3Afunction%28a%29%7Breturn%20a%2EsetMonth%28a%2EgetMonth%28%29%2B1%29%7D%7D%2Cweek%3A%7Bspan%3A6048e5%2Cstart%3Afunction%28a%29%7Breturn%20new%20Date%28a%2EgetFullYear%28%29%2Ca%2EgetMonth%28%29%2Ca%2EgetDate%28%29%29%7D%2Cfmt%3Afunction%28a%29%7Breturn%22%22%2Ba%2EgetFullYear%28%29%2B%22%2D%22%2Bb%2Epad2%28a%2EgetMonth%28%29%2B1%29%2B%22%2D%22%2Bb%2Epad2%28a%2EgetDate%28%29%29%7D%2Cincr%3Afunction%28a%29%7Breturn%20a%2EsetDate%28a%2EgetDate%28%29%2B7%29%7D%7D%2Cday%3A%7Bspan%3A864e5%2Cstart%3Afunction%28a%29%7Breturn%20new%20Date%28a%2EgetFullYear%28%29%2Ca%2EgetMonth%28%29%2Ca%2EgetDate%28%29%29%7D%2Cfmt%3Afunction%28a%29%7Breturn%22%22%2Ba%2EgetFullYear%28%29%2B%22%2D%22%2Bb%2Epad2%28a%2EgetMonth%28%29%2B1%29%2B%22%2D%22%2Bb%2Epad2%28a%2EgetDate%28%29%29%7D%2Cincr%3Afunction%28a%29%7Breturn%20a%2EsetDate%28a%2EgetDate%28%29%2B1%29%7D%7D%2Chour%3Ac%2860%29%2C%2230min%22%3Ac%2830%29%2C%2215min%22%3Ac%2815%29%2C%2210min%22%3Ac%2810%29%2C%225min%22%3Ac%285%29%2Cminute%3Ac%281%29%2C%2230sec%22%3Ad%2830%29%2C%2215sec%22%3Ad%2815%29%2C%2210sec%22%3Ad%2810%29%2C%225sec%22%3Ad%285%29%2Csecond%3Ad%281%29%7D%2Cb%2EAUTO%5FLABEL%5FORDER%3D%5B%22decade%22%2C%22year%22%2C%22month%22%2C%22week%22%2C%22day%22%2C%22hour%22%2C%2230min%22%2C%2215min%22%2C%2210min%22%2C%225min%22%2C%22minute%22%2C%2230sec%22%2C%2215sec%22%2C%2210sec%22%2C%225sec%22%2C%22second%22%5D%2Cb%2EArea%3Dfunction%28c%29%7Bfunction%20d%28c%29%7Bvar%20f%3Breturn%20this%20instanceof%20b%2EArea%3F%28f%3Da%2Eextend%28%7B%7D%2Ce%2Cc%29%2Cthis%2Ecumulative%3D%21f%2EbehaveLikeLine%2C%22auto%22%3D%3D%3Df%2EfillOpacity%26%26%28f%2EfillOpacity%3Df%2EbehaveLikeLine%3F%2E8%3A1%29%2Cd%2E%5F%5Fsuper%5F%5F%2Econstructor%2Ecall%28this%2Cf%29%2Cvoid%200%29%3Anew%20b%2EArea%28c%29%7Dvar%20e%3Breturn%20h%28d%2Cc%29%2Ce%3D%7BfillOpacity%3A%22auto%22%2CbehaveLikeLine%3A%211%7D%2Cd%2Eprototype%2EcalcPoints%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%3Bfor%28f%3Dthis%2Edata%2Cg%3D%5B%5D%2Cd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Bd%2B%2B%29a%3Df%5Bd%5D%2Ca%2E%5Fx%3Dthis%2EtransX%28a%2Ex%29%2Cb%3D0%2Ca%2E%5Fy%3Dfunction%28%29%7Bvar%20d%2Ce%2Cf%2Cg%3Bfor%28f%3Da%2Ey%2Cg%3D%5B%5D%2Cd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Bd%2B%2B%29c%3Df%5Bd%5D%2Cthis%2Eoptions%2EbehaveLikeLine%3Fg%2Epush%28this%2EtransY%28c%29%29%3A%28b%2B%3Dc%7C%7C0%2Cg%2Epush%28this%2EtransY%28b%29%29%29%3Breturn%20g%7D%2Ecall%28this%29%2Cg%2Epush%28a%2E%5Fymax%3DMath%2Emax%2Eapply%28Math%2Ca%2E%5Fy%29%29%3Breturn%20g%7D%2Cd%2Eprototype%2EdrawSeries%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%3Bfor%28this%2EseriesPoints%3D%5B%5D%2Cb%3Dthis%2Eoptions%2EbehaveLikeLine%3Ffunction%28%29%7Bf%3D%5B%5D%3Bfor%28var%20a%3D0%2Cb%3Dthis%2Eoptions%2Eykeys%2Elength%2D1%3Bb%3E%3D0%3Fb%3E%3Da%3Aa%3E%3Db%3Bb%3E%3D0%3Fa%2B%2B%3Aa%2D%2D%29f%2Epush%28a%29%3Breturn%20f%7D%2Eapply%28this%29%3Afunction%28%29%7Bg%3D%5B%5D%3Bfor%28var%20a%3De%3Dthis%2Eoptions%2Eykeys%2Elength%2D1%3B0%3E%3De%3F0%3E%3Da%3Aa%3E%3D0%3B0%3E%3De%3Fa%2B%2B%3Aa%2D%2D%29g%2Epush%28a%29%3Breturn%20g%7D%2Eapply%28this%29%2Ch%3D%5B%5D%2Cc%3D0%2Cd%3Db%2Elength%3Bd%3Ec%3Bc%2B%2B%29a%3Db%5Bc%5D%2Cthis%2E%5FdrawFillFor%28a%29%2Cthis%2E%5FdrawLineFor%28a%29%2Ch%2Epush%28this%2E%5FdrawPointFor%28a%29%29%3Breturn%20h%7D%2Cd%2Eprototype%2E%5FdrawFillFor%3Dfunction%28a%29%7Bvar%20b%3Breturn%20b%3Dthis%2Epaths%5Ba%5D%2Cnull%21%3D%3Db%3F%28b%2B%3D%22L%22%2Bthis%2EtransX%28this%2Exmax%29%2B%22%2C%22%2Bthis%2Ebottom%2B%22L%22%2Bthis%2EtransX%28this%2Exmin%29%2B%22%2C%22%2Bthis%2Ebottom%2B%22Z%22%2Cthis%2EdrawFilledPath%28b%2Cthis%2EfillForSeries%28a%29%29%29%3Avoid%200%7D%2Cd%2Eprototype%2EfillForSeries%3Dfunction%28a%29%7Bvar%20b%3Breturn%20b%3DRaphael%2Ergb2hsl%28this%2EcolorFor%28this%2Edata%5Ba%5D%2Ca%2C%22line%22%29%29%2CRaphael%2Ehsl%28b%2Eh%2Cthis%2Eoptions%2EbehaveLikeLine%3F%2E9%2Ab%2Es%3A%2E75%2Ab%2Es%2CMath%2Emin%28%2E98%2Cthis%2Eoptions%2EbehaveLikeLine%3F1%2E2%2Ab%2El%3A1%2E25%2Ab%2El%29%29%7D%2Cd%2Eprototype%2EdrawFilledPath%3Dfunction%28a%2Cb%29%7Breturn%20this%2Eraphael%2Epath%28a%29%2Eattr%28%22fill%22%2Cb%29%2Eattr%28%22fill%2Dopacity%22%2Cthis%2Eoptions%2EfillOpacity%29%2Eattr%28%22stroke%22%2C%22none%22%29%7D%2Cd%7D%28b%2ELine%29%2Cb%2EBar%3Dfunction%28c%29%7Bfunction%20d%28c%29%7Breturn%20this%2EonHoverOut%3Df%28this%2EonHoverOut%2Cthis%29%2Cthis%2EonHoverMove%3Df%28this%2EonHoverMove%2Cthis%29%2Cthis%2EonGridClick%3Df%28this%2EonGridClick%2Cthis%29%2Cthis%20instanceof%20b%2EBar%3F%28d%2E%5F%5Fsuper%5F%5F%2Econstructor%2Ecall%28this%2Ca%2Eextend%28%7B%7D%2Cc%2C%7BparseTime%3A%211%7D%29%29%2Cvoid%200%29%3Anew%20b%2EBar%28c%29%7Dreturn%20h%28d%2Cc%29%2Cd%2Eprototype%2Einit%3Dfunction%28%29%7Breturn%20this%2Ecumulative%3Dthis%2Eoptions%2Estacked%2C%22always%22%21%3D%3Dthis%2Eoptions%2EhideHover%3F%28this%2Ehover%3Dnew%20b%2EHover%28%7Bparent%3Athis%2Eel%7D%29%2Cthis%2Eon%28%22hovermove%22%2Cthis%2EonHoverMove%29%2Cthis%2Eon%28%22hoverout%22%2Cthis%2EonHoverOut%29%2Cthis%2Eon%28%22gridclick%22%2Cthis%2EonGridClick%29%29%3Avoid%200%7D%2Cd%2Eprototype%2Edefaults%3D%7BbarSizeRatio%3A%2E75%2CbarGap%3A3%2CbarColors%3A%5B%22%230b62a4%22%2C%22%237a92a3%22%2C%22%234da74d%22%2C%22%23afd8f8%22%2C%22%23edc240%22%2C%22%23cb4b4b%22%2C%22%239440ed%22%5D%2CbarOpacity%3A1%2CbarRadius%3A%5B0%2C0%2C0%2C0%5D%2CxLabelMargin%3A50%7D%2Cd%2Eprototype%2Ecalc%3Dfunction%28%29%7Bvar%20a%3Breturn%20this%2EcalcBars%28%29%2Cthis%2Eoptions%2EhideHover%3D%3D%3D%211%3F%28a%3Dthis%2Ehover%29%2Eupdate%2Eapply%28a%2Cthis%2EhoverContentForRow%28this%2Edata%2Elength%2D1%29%29%3Avoid%200%7D%2Cd%2Eprototype%2EcalcBars%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%3Bfor%28f%3Dthis%2Edata%2Cg%3D%5B%5D%2Ca%3Dd%3D0%2Ce%3Df%2Elength%3Be%3Ed%3Ba%3D%2B%2Bd%29b%3Df%5Ba%5D%2Cb%2E%5Fx%3Dthis%2Eleft%2Bthis%2Ewidth%2A%28a%2B%2E5%29%2Fthis%2Edata%2Elength%2Cg%2Epush%28b%2E%5Fy%3Dfunction%28%29%7Bvar%20a%2Cd%2Ce%2Cf%3Bfor%28e%3Db%2Ey%2Cf%3D%5B%5D%2Ca%3D0%2Cd%3De%2Elength%3Bd%3Ea%3Ba%2B%2B%29c%3De%5Ba%5D%2Cnull%21%3Dc%3Ff%2Epush%28this%2EtransY%28c%29%29%3Af%2Epush%28null%29%3Breturn%20f%7D%2Ecall%28this%29%29%3Breturn%20g%7D%2Cd%2Eprototype%2Edraw%3Dfunction%28%29%7Bvar%20a%3Breturn%28%28a%3Dthis%2Eoptions%2Eaxes%29%3D%3D%3D%210%7C%7C%22both%22%3D%3D%3Da%7C%7C%22x%22%3D%3D%3Da%29%26%26this%2EdrawXAxis%28%29%2Cthis%2EdrawSeries%28%29%7D%2Cd%2Eprototype%2EdrawXAxis%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%3Bfor%28j%3Dthis%2Ebottom%2B%28this%2Eoptions%2ExAxisLabelTopPadding%7C%7Cthis%2Eoptions%2Epadding%2F2%29%2Cg%3Dnull%2Cf%3Dnull%2Cm%3D%5B%5D%2Ca%3Dk%3D0%2Cl%3Dthis%2Edata%2Elength%3Bl%3E%3D0%3Fl%3Ek%3Ak%3El%3Ba%3Dl%3E%3D0%3F%2B%2Bk%3A%2D%2Dk%29h%3Dthis%2Edata%5Bthis%2Edata%2Elength%2D1%2Da%5D%2Cb%3Dthis%2EdrawXAxisLabel%28h%2E%5Fx%2Cj%2Ch%2Elabel%29%2Ci%3Db%2EgetBBox%28%29%2Cb%2Etransform%28%22r%22%2B%2Dthis%2Eoptions%2ExLabelAngle%29%2Cc%3Db%2EgetBBox%28%29%2Cb%2Etransform%28%22t0%2C%22%2Bc%2Eheight%2F2%2B%22%2E%2E%2E%22%29%2C0%21%3D%3Dthis%2Eoptions%2ExLabelAngle%26%26%28e%3D%2D%2E5%2Ai%2Ewidth%2AMath%2Ecos%28this%2Eoptions%2ExLabelAngle%2AMath%2EPI%2F180%29%2Cb%2Etransform%28%22t%22%2Be%2B%22%2C0%2E%2E%2E%22%29%29%2C%28null%3D%3Dg%7C%7Cg%3E%3Dc%2Ex%2Bc%2Ewidth%7C%7Cnull%21%3Df%26%26f%3E%3Dc%2Ex%29%26%26c%2Ex%3E%3D0%26%26c%2Ex%2Bc%2Ewidth%3Cthis%2Eel%2Ewidth%28%29%3F%280%21%3D%3Dthis%2Eoptions%2ExLabelAngle%26%26%28d%3D1%2E25%2Athis%2Eoptions%2EgridTextSize%2FMath%2Esin%28this%2Eoptions%2ExLabelAngle%2AMath%2EPI%2F180%29%2Cf%3Dc%2Ex%2Dd%29%2Cm%2Epush%28g%3Dc%2Ex%2Dthis%2Eoptions%2ExLabelMargin%29%29%3Am%2Epush%28b%2Eremove%28%29%29%3Breturn%20m%7D%2Cd%2Eprototype%2EdrawSeries%3Dfunction%28%29%7Bvar%20a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%2Co%3Breturn%20c%3Dthis%2Ewidth%2Fthis%2Eoptions%2Edata%2Elength%2Ch%3Dthis%2Eoptions%2Estacked%3F1%3Athis%2Eoptions%2Eykeys%2Elength%2Ca%3D%28c%2Athis%2Eoptions%2EbarSizeRatio%2Dthis%2Eoptions%2EbarGap%2A%28h%2D1%29%29%2Fh%2Cthis%2Eoptions%2EbarSize%26%26%28a%3DMath%2Emin%28a%2Cthis%2Eoptions%2EbarSize%29%29%2Cl%3Dc%2Da%2Ah%2Dthis%2Eoptions%2EbarGap%2A%28h%2D1%29%2Cg%3Dl%2F2%2Co%3Dthis%2Eymin%3C%3D0%26%26this%2Eymax%3E%3D0%3Fthis%2EtransY%280%29%3Anull%2Cthis%2Ebars%3Dfunction%28%29%7Bvar%20h%2Cl%2Cp%2Cq%3Bfor%28p%3Dthis%2Edata%2Cq%3D%5B%5D%2Cd%3Dh%3D0%2Cl%3Dp%2Elength%3Bl%3Eh%3Bd%3D%2B%2Bh%29i%3Dp%5Bd%5D%2Ce%3D0%2Cq%2Epush%28function%28%29%7Bvar%20h%2Cl%2Cp%2Cq%3Bfor%28p%3Di%2E%5Fy%2Cq%3D%5B%5D%2Cj%3Dh%3D0%2Cl%3Dp%2Elength%3Bl%3Eh%3Bj%3D%2B%2Bh%29n%3Dp%5Bj%5D%2Cnull%21%3D%3Dn%3F%28o%3F%28m%3DMath%2Emin%28n%2Co%29%2Cb%3DMath%2Emax%28n%2Co%29%29%3A%28m%3Dn%2Cb%3Dthis%2Ebottom%29%2Cf%3Dthis%2Eleft%2Bd%2Ac%2Bg%2Cthis%2Eoptions%2Estacked%7C%7C%28f%2B%3Dj%2A%28a%2Bthis%2Eoptions%2EbarGap%29%29%2Ck%3Db%2Dm%2Cthis%2Eoptions%2EverticalGridCondition%26%26this%2Eoptions%2EverticalGridCondition%28i%2Ex%29%26%26this%2EdrawBar%28this%2Eleft%2Bd%2Ac%2Cthis%2Etop%2Cc%2CMath%2Eabs%28this%2Etop%2Dthis%2Ebottom%29%2Cthis%2Eoptions%2EverticalGridColor%2Cthis%2Eoptions%2EverticalGridOpacity%2Cthis%2Eoptions%2EbarRadius%29%2Cthis%2Eoptions%2Estacked%26%26%28m%2D%3De%29%2Cthis%2EdrawBar%28f%2Cm%2Ca%2Ck%2Cthis%2EcolorFor%28i%2Cj%2C%22bar%22%29%2Cthis%2Eoptions%2EbarOpacity%2Cthis%2Eoptions%2EbarRadius%29%2Cq%2Epush%28e%2B%3Dk%29%29%3Aq%2Epush%28null%29%3Breturn%20q%7D%2Ecall%28this%29%29%3Breturn%20q%7D%2Ecall%28this%29%7D%2Cd%2Eprototype%2EcolorFor%3Dfunction%28a%2Cb%2Cc%29%7Bvar%20d%2Ce%3Breturn%22function%22%3D%3Dtypeof%20this%2Eoptions%2EbarColors%3F%28d%3D%7Bx%3Aa%2Ex%2Cy%3Aa%2Ey%5Bb%5D%2Clabel%3Aa%2Elabel%7D%2Ce%3D%7Bindex%3Ab%2Ckey%3Athis%2Eoptions%2Eykeys%5Bb%5D%2Clabel%3Athis%2Eoptions%2Elabels%5Bb%5D%7D%2Cthis%2Eoptions%2EbarColors%2Ecall%28this%2Cd%2Ce%2Cc%29%29%3Athis%2Eoptions%2EbarColors%5Bb%25this%2Eoptions%2EbarColors%2Elength%5D%7D%2Cd%2Eprototype%2EhitTest%3Dfunction%28a%29%7Breturn%200%3D%3D%3Dthis%2Edata%2Elength%3Fnull%3A%28a%3DMath%2Emax%28Math%2Emin%28a%2Cthis%2Eright%29%2Cthis%2Eleft%29%2CMath%2Emin%28this%2Edata%2Elength%2D1%2CMath%2Efloor%28%28a%2Dthis%2Eleft%29%2F%28this%2Ewidth%2Fthis%2Edata%2Elength%29%29%29%29%7D%2Cd%2Eprototype%2EonGridClick%3Dfunction%28a%2Cb%29%7Bvar%20c%3Breturn%20c%3Dthis%2EhitTest%28a%29%2Cthis%2Efire%28%22click%22%2Cc%2Cthis%2Edata%5Bc%5D%2Esrc%2Ca%2Cb%29%7D%2Cd%2Eprototype%2EonHoverMove%3Dfunction%28a%29%7Bvar%20b%2Cc%3Breturn%20b%3Dthis%2EhitTest%28a%29%2C%28c%3Dthis%2Ehover%29%2Eupdate%2Eapply%28c%2Cthis%2EhoverContentForRow%28b%29%29%7D%2Cd%2Eprototype%2EonHoverOut%3Dfunction%28%29%7Breturn%20this%2Eoptions%2EhideHover%21%3D%3D%211%3Fthis%2Ehover%2Ehide%28%29%3Avoid%200%7D%2Cd%2Eprototype%2EhoverContentForRow%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%3Bfor%28d%3Dthis%2Edata%5Ba%5D%2Cb%3D%22%3Cdiv%20class%3D%27morris%2Dhover%2Drow%2Dlabel%27%3E%22%2Bd%2Elabel%2B%22%3C%2Fdiv%3E%22%2Ci%3Dd%2Ey%2Cc%3Dg%3D0%2Ch%3Di%2Elength%3Bh%3Eg%3Bc%3D%2B%2Bg%29f%3Di%5Bc%5D%2Cb%2B%3D%22%3Cdiv%20class%3D%27morris%2Dhover%2Dpoint%27%20style%3D%27color%3A%20%22%2Bthis%2EcolorFor%28d%2Cc%2C%22label%22%29%2B%22%27%3E%5Cn%20%20%22%2Bthis%2Eoptions%2Elabels%5Bc%5D%2B%22%3A%5Cn%20%20%22%2Bthis%2EyLabelFormat%28f%29%2B%22%5Cn%3C%2Fdiv%3E%22%3Breturn%22function%22%3D%3Dtypeof%20this%2Eoptions%2EhoverCallback%26%26%28b%3Dthis%2Eoptions%2EhoverCallback%28a%2Cthis%2Eoptions%2Cb%2Cd%2Esrc%29%29%2Ce%3Dthis%2Eleft%2B%28a%2B%2E5%29%2Athis%2Ewidth%2Fthis%2Edata%2Elength%2C%5Bb%2Ce%5D%7D%2Cd%2Eprototype%2EdrawXAxisLabel%3Dfunction%28a%2Cb%2Cc%29%7Bvar%20d%3Breturn%20d%3Dthis%2Eraphael%2Etext%28a%2Cb%2Cc%29%2Eattr%28%22font%2Dsize%22%2Cthis%2Eoptions%2EgridTextSize%29%2Eattr%28%22font%2Dfamily%22%2Cthis%2Eoptions%2EgridTextFamily%29%2Eattr%28%22font%2Dweight%22%2Cthis%2Eoptions%2EgridTextWeight%29%2Eattr%28%22fill%22%2Cthis%2Eoptions%2EgridTextColor%29%7D%2Cd%2Eprototype%2EdrawBar%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%2Cf%2Cg%29%7Bvar%20h%2Ci%3Breturn%20h%3DMath%2Emax%2Eapply%28Math%2Cg%29%2Ci%3D0%3D%3D%3Dh%7C%7Ch%3Ed%3Fthis%2Eraphael%2Erect%28a%2Cb%2Cc%2Cd%29%3Athis%2Eraphael%2Epath%28this%2EroundedRect%28a%2Cb%2Cc%2Cd%2Cg%29%29%2Ci%2Eattr%28%22fill%22%2Ce%29%2Eattr%28%22fill%2Dopacity%22%2Cf%29%2Eattr%28%22stroke%22%2C%22none%22%29%7D%2Cd%2Eprototype%2EroundedRect%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Breturn%20null%3D%3De%26%26%28e%3D%5B0%2C0%2C0%2C0%5D%29%2C%5B%22M%22%2Ca%2Ce%5B0%5D%2Bb%2C%22Q%22%2Ca%2Cb%2Ca%2Be%5B0%5D%2Cb%2C%22L%22%2Ca%2Bc%2De%5B1%5D%2Cb%2C%22Q%22%2Ca%2Bc%2Cb%2Ca%2Bc%2Cb%2Be%5B1%5D%2C%22L%22%2Ca%2Bc%2Cb%2Bd%2De%5B2%5D%2C%22Q%22%2Ca%2Bc%2Cb%2Bd%2Ca%2Bc%2De%5B2%5D%2Cb%2Bd%2C%22L%22%2Ca%2Be%5B3%5D%2Cb%2Bd%2C%22Q%22%2Ca%2Cb%2Bd%2Ca%2Cb%2Bd%2De%5B3%5D%2C%22Z%22%5D%7D%2Cd%7D%28b%2EGrid%29%2Cb%2EDonut%3Dfunction%28c%29%7Bfunction%20d%28c%29%7Bthis%2EresizeHandler%3Df%28this%2EresizeHandler%2Cthis%29%2Cthis%2Eselect%3Df%28this%2Eselect%2Cthis%29%2Cthis%2Eclick%3Df%28this%2Eclick%2Cthis%29%3Bvar%20d%3Dthis%3Bif%28%21%28this%20instanceof%20b%2EDonut%29%29return%20new%20b%2EDonut%28c%29%3Bif%28this%2Eoptions%3Da%2Eextend%28%7B%7D%2Cthis%2Edefaults%2Cc%29%2Cthis%2Eel%3D%22string%22%3D%3Dtypeof%20c%2Eelement%3Fa%28document%2EgetElementById%28c%2Eelement%29%29%3Aa%28c%2Eelement%29%2Cnull%3D%3D%3Dthis%2Eel%7C%7C0%3D%3D%3Dthis%2Eel%2Elength%29throw%20new%20Error%28%22Graph%20placeholder%20not%20found%2E%22%29%3Bvoid%200%21%3D%3Dc%2Edata%26%260%21%3D%3Dc%2Edata%2Elength%26%26%28this%2Eraphael%3Dnew%20Raphael%28this%2Eel%5B0%5D%29%2Cthis%2Eoptions%2Eresize%26%26a%28window%29%2Ebind%28%22resize%22%2Cfunction%28%29%7Breturn%20null%21%3Dd%2EtimeoutId%26%26window%2EclearTimeout%28d%2EtimeoutId%29%2Cd%2EtimeoutId%3Dwindow%2EsetTimeout%28d%2EresizeHandler%2C100%29%7D%29%2Cthis%2EsetData%28c%2Edata%29%29%7Dreturn%20h%28d%2Cc%29%2Cd%2Eprototype%2Edefaults%3D%7Bcolors%3A%5B%22%230B62A4%22%2C%22%233980B5%22%2C%22%23679DC6%22%2C%22%2395BBD7%22%2C%22%23B0CCE1%22%2C%22%23095791%22%2C%22%23095085%22%2C%22%23083E67%22%2C%22%23052C48%22%2C%22%23042135%22%5D%2CbackgroundColor%3A%22%23FFFFFF%22%2ClabelColor%3A%22%23000000%22%2Cformatter%3Ab%2Ecommas%2Cresize%3A%211%7D%2Cd%2Eprototype%2Eredraw%3Dfunction%28%29%7Bvar%20a%2Cc%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%2Cm%2Cn%2Co%2Cp%2Cq%2Cr%2Cs%2Ct%2Cu%2Cv%2Cw%2Cx%3Bfor%28this%2Eraphael%2Eclear%28%29%2Cc%3Dthis%2Eel%2Ewidth%28%29%2F2%2Cd%3Dthis%2Eel%2Eheight%28%29%2F2%2Cn%3D%28Math%2Emin%28c%2Cd%29%2D10%29%2F3%2Cl%3D0%2Cu%3Dthis%2Evalues%2Co%3D0%2Cr%3Du%2Elength%3Br%3Eo%3Bo%2B%2B%29m%3Du%5Bo%5D%2Cl%2B%3Dm%3Bfor%28i%3D5%2F%282%2An%29%2Ca%3D1%2E9999%2AMath%2EPI%2Di%2Athis%2Edata%2Elength%2Cg%3D0%2Cf%3D0%2Cthis%2Esegments%3D%5B%5D%2Cv%3Dthis%2Evalues%2Ce%3Dp%3D0%2Cs%3Dv%2Elength%3Bs%3Ep%3Be%3D%2B%2Bp%29m%3Dv%5Be%5D%2Cj%3Dg%2Bi%2Ba%2A%28m%2Fl%29%2Ck%3Dnew%20b%2EDonutSegment%28c%2Cd%2C2%2An%2Cn%2Cg%2Cj%2Cthis%2Edata%5Be%5D%2Ecolor%7C%7Cthis%2Eoptions%2Ecolors%5Bf%25this%2Eoptions%2Ecolors%2Elength%5D%2Cthis%2Eoptions%2EbackgroundColor%2Cf%2Cthis%2Eraphael%29%2Ck%2Erender%28%29%2Cthis%2Esegments%2Epush%28k%29%2Ck%2Eon%28%22hover%22%2Cthis%2Eselect%29%2Ck%2Eon%28%22click%22%2Cthis%2Eclick%29%2Cg%3Dj%2Cf%2B%3D1%3Bfor%28this%2Etext1%3Dthis%2EdrawEmptyDonutLabel%28c%2Cd%2D10%2Cthis%2Eoptions%2ElabelColor%2C15%2C800%29%2Cthis%2Etext2%3Dthis%2EdrawEmptyDonutLabel%28c%2Cd%2B10%2Cthis%2Eoptions%2ElabelColor%2C14%29%2Ch%3DMath%2Emax%2Eapply%28Math%2Cthis%2Evalues%29%2Cf%3D0%2Cw%3Dthis%2Evalues%2Cx%3D%5B%5D%2Cq%3D0%2Ct%3Dw%2Elength%3Bt%3Eq%3Bq%2B%2B%29%7Bif%28m%3Dw%5Bq%5D%2Cm%3D%3D%3Dh%29%7Bthis%2Eselect%28f%29%3B%0Abreak%7Dx%2Epush%28f%2B%3D1%29%7Dreturn%20x%7D%2Cd%2Eprototype%2EsetData%3Dfunction%28a%29%7Bvar%20b%3Breturn%20this%2Edata%3Da%2Cthis%2Evalues%3Dfunction%28%29%7Bvar%20a%2Cc%2Cd%2Ce%3Bfor%28d%3Dthis%2Edata%2Ce%3D%5B%5D%2Ca%3D0%2Cc%3Dd%2Elength%3Bc%3Ea%3Ba%2B%2B%29b%3Dd%5Ba%5D%2Ce%2Epush%28parseFloat%28b%2Evalue%29%29%3Breturn%20e%7D%2Ecall%28this%29%2Cthis%2Eredraw%28%29%7D%2Cd%2Eprototype%2Eclick%3Dfunction%28a%29%7Breturn%20this%2Efire%28%22click%22%2Ca%2Cthis%2Edata%5Ba%5D%29%7D%2Cd%2Eprototype%2Eselect%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%2Cg%3Bfor%28g%3Dthis%2Esegments%2Ce%3D0%2Cf%3Dg%2Elength%3Bf%3Ee%3Be%2B%2B%29c%3Dg%5Be%5D%2Cc%2Edeselect%28%29%3Breturn%20d%3Dthis%2Esegments%5Ba%5D%2Cd%2Eselect%28%29%2Cb%3Dthis%2Edata%5Ba%5D%2Cthis%2EsetLabels%28b%2Elabel%2Cthis%2Eoptions%2Eformatter%28b%2Evalue%2Cb%29%29%7D%2Cd%2Eprototype%2EsetLabels%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%3Breturn%20c%3D2%2A%28Math%2Emin%28this%2Eel%2Ewidth%28%29%2F2%2Cthis%2Eel%2Eheight%28%29%2F2%29%2D10%29%2F3%2Cf%3D1%2E8%2Ac%2Ce%3Dc%2F2%2Cd%3Dc%2F3%2Cthis%2Etext1%2Eattr%28%7Btext%3Aa%2Ctransform%3A%22%22%7D%29%2Cg%3Dthis%2Etext1%2EgetBBox%28%29%2Ch%3DMath%2Emin%28f%2Fg%2Ewidth%2Ce%2Fg%2Eheight%29%2Cthis%2Etext1%2Eattr%28%7Btransform%3A%22S%22%2Bh%2B%22%2C%22%2Bh%2B%22%2C%22%2B%28g%2Ex%2Bg%2Ewidth%2F2%29%2B%22%2C%22%2B%28g%2Ey%2Bg%2Eheight%29%7D%29%2Cthis%2Etext2%2Eattr%28%7Btext%3Ab%2Ctransform%3A%22%22%7D%29%2Ci%3Dthis%2Etext2%2EgetBBox%28%29%2Cj%3DMath%2Emin%28f%2Fi%2Ewidth%2Cd%2Fi%2Eheight%29%2Cthis%2Etext2%2Eattr%28%7Btransform%3A%22S%22%2Bj%2B%22%2C%22%2Bj%2B%22%2C%22%2B%28i%2Ex%2Bi%2Ewidth%2F2%29%2B%22%2C%22%2Bi%2Ey%7D%29%7D%2Cd%2Eprototype%2EdrawEmptyDonutLabel%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Bvar%20f%3Breturn%20f%3Dthis%2Eraphael%2Etext%28a%2Cb%2C%22%22%29%2Eattr%28%22font%2Dsize%22%2Cd%29%2Eattr%28%22fill%22%2Cc%29%2Cnull%21%3De%26%26f%2Eattr%28%22font%2Dweight%22%2Ce%29%2Cf%7D%2Cd%2Eprototype%2EresizeHandler%3Dfunction%28%29%7Breturn%20this%2EtimeoutId%3Dnull%2Cthis%2Eraphael%2EsetSize%28this%2Eel%2Ewidth%28%29%2Cthis%2Eel%2Eheight%28%29%29%2Cthis%2Eredraw%28%29%7D%2Cd%7D%28b%2EEventEmitter%29%2Cb%2EDonutSegment%3Dfunction%28a%29%7Bfunction%20b%28a%2Cb%2Cc%2Cd%2Ce%2Cg%2Ch%2Ci%2Cj%2Ck%29%7Bthis%2Ecx%3Da%2Cthis%2Ecy%3Db%2Cthis%2Einner%3Dc%2Cthis%2Eouter%3Dd%2Cthis%2Ecolor%3Dh%2Cthis%2EbackgroundColor%3Di%2Cthis%2Eindex%3Dj%2Cthis%2Eraphael%3Dk%2Cthis%2Edeselect%3Df%28this%2Edeselect%2Cthis%29%2Cthis%2Eselect%3Df%28this%2Eselect%2Cthis%29%2Cthis%2Esin%5Fp0%3DMath%2Esin%28e%29%2Cthis%2Ecos%5Fp0%3DMath%2Ecos%28e%29%2Cthis%2Esin%5Fp1%3DMath%2Esin%28g%29%2Cthis%2Ecos%5Fp1%3DMath%2Ecos%28g%29%2Cthis%2Eis%5Flong%3Dg%2De%3EMath%2EPI%3F1%3A0%2Cthis%2Epath%3Dthis%2EcalcSegment%28this%2Einner%2B3%2Cthis%2Einner%2Bthis%2Eouter%2D5%29%2Cthis%2EselectedPath%3Dthis%2EcalcSegment%28this%2Einner%2B3%2Cthis%2Einner%2Bthis%2Eouter%29%2Cthis%2Ehilight%3Dthis%2EcalcArc%28this%2Einner%29%7Dreturn%20h%28b%2Ca%29%2Cb%2Eprototype%2EcalcArcPoints%3Dfunction%28a%29%7Breturn%5Bthis%2Ecx%2Ba%2Athis%2Esin%5Fp0%2Cthis%2Ecy%2Ba%2Athis%2Ecos%5Fp0%2Cthis%2Ecx%2Ba%2Athis%2Esin%5Fp1%2Cthis%2Ecy%2Ba%2Athis%2Ecos%5Fp1%5D%7D%2Cb%2Eprototype%2EcalcSegment%3Dfunction%28a%2Cb%29%7Bvar%20c%2Cd%2Ce%2Cf%2Cg%2Ch%2Ci%2Cj%2Ck%2Cl%3Breturn%20k%3Dthis%2EcalcArcPoints%28a%29%2Cc%3Dk%5B0%5D%2Ce%3Dk%5B1%5D%2Cd%3Dk%5B2%5D%2Cf%3Dk%5B3%5D%2Cl%3Dthis%2EcalcArcPoints%28b%29%2Cg%3Dl%5B0%5D%2Ci%3Dl%5B1%5D%2Ch%3Dl%5B2%5D%2Cj%3Dl%5B3%5D%2C%22M%22%2Bc%2B%22%2C%22%2Be%2B%28%22A%22%2Ba%2B%22%2C%22%2Ba%2B%22%2C0%2C%22%2Bthis%2Eis%5Flong%2B%22%2C0%2C%22%2Bd%2B%22%2C%22%2Bf%29%2B%28%22L%22%2Bh%2B%22%2C%22%2Bj%29%2B%28%22A%22%2Bb%2B%22%2C%22%2Bb%2B%22%2C0%2C%22%2Bthis%2Eis%5Flong%2B%22%2C1%2C%22%2Bg%2B%22%2C%22%2Bi%29%2B%22Z%22%7D%2Cb%2Eprototype%2EcalcArc%3Dfunction%28a%29%7Bvar%20b%2Cc%2Cd%2Ce%2Cf%3Breturn%20f%3Dthis%2EcalcArcPoints%28a%29%2Cb%3Df%5B0%5D%2Cd%3Df%5B1%5D%2Cc%3Df%5B2%5D%2Ce%3Df%5B3%5D%2C%22M%22%2Bb%2B%22%2C%22%2Bd%2B%28%22A%22%2Ba%2B%22%2C%22%2Ba%2B%22%2C0%2C%22%2Bthis%2Eis%5Flong%2B%22%2C0%2C%22%2Bc%2B%22%2C%22%2Be%29%7D%2Cb%2Eprototype%2Erender%3Dfunction%28%29%7Bvar%20a%3Dthis%3Breturn%20this%2Earc%3Dthis%2EdrawDonutArc%28this%2Ehilight%2Cthis%2Ecolor%29%2Cthis%2Eseg%3Dthis%2EdrawDonutSegment%28this%2Epath%2Cthis%2Ecolor%2Cthis%2EbackgroundColor%2Cfunction%28%29%7Breturn%20a%2Efire%28%22hover%22%2Ca%2Eindex%29%7D%2Cfunction%28%29%7Breturn%20a%2Efire%28%22click%22%2Ca%2Eindex%29%7D%29%7D%2Cb%2Eprototype%2EdrawDonutArc%3Dfunction%28a%2Cb%29%7Breturn%20this%2Eraphael%2Epath%28a%29%2Eattr%28%7Bstroke%3Ab%2C%22stroke%2Dwidth%22%3A2%2Copacity%3A0%7D%29%7D%2Cb%2Eprototype%2EdrawDonutSegment%3Dfunction%28a%2Cb%2Cc%2Cd%2Ce%29%7Breturn%20this%2Eraphael%2Epath%28a%29%2Eattr%28%7Bfill%3Ab%2Cstroke%3Ac%2C%22stroke%2Dwidth%22%3A3%7D%29%2Ehover%28d%29%2Eclick%28e%29%7D%2Cb%2Eprototype%2Eselect%3Dfunction%28%29%7Breturn%20this%2Eselected%3Fvoid%200%3A%28this%2Eseg%2Eanimate%28%7Bpath%3Athis%2EselectedPath%7D%2C150%2C%22%3C%3E%22%29%2Cthis%2Earc%2Eanimate%28%7Bopacity%3A1%7D%2C150%2C%22%3C%3E%22%29%2Cthis%2Eselected%3D%210%29%7D%2Cb%2Eprototype%2Edeselect%3Dfunction%28%29%7Breturn%20this%2Eselected%3F%28this%2Eseg%2Eanimate%28%7Bpath%3Athis%2Epath%7D%2C150%2C%22%3C%3E%22%29%2Cthis%2Earc%2Eanimate%28%7Bopacity%3A0%7D%2C150%2C%22%3C%3E%22%29%2Cthis%2Eselected%3D%211%29%3Avoid%200%7D%2Cb%7D%28b%2EEventEmitter%29%7D%29%2Ecall%28this%29%3B"></script>
<script src="data:application/x-javascript,%2F%2A%2A%0A%2A%20JSONfn%20%2D%20javascript%20%28both%20node%2Ejs%20and%20browser%29%20plugin%20to%20stringify%2C%20%0A%2A%20%20%20%20%20%20%20%20%20%20parse%20and%20clone%20objects%20with%20Functions%2C%20Regexp%20and%20Date%2E%0A%2A%20%20%0A%2A%20Version%20%2D%200%2E60%2E00%0A%2A%20Copyright%20%28c%29%202012%20%2D%202014%20Vadim%20Kiryukhin%0A%2A%20vkiryukhin%20%40%20gmail%2Ecom%0A%2A%20http%3A%2F%2Fwww%2Eeslinstructor%2Enet%2Fjsonfn%2F%0A%2A%20%0A%2A%20Licensed%20under%20the%20MIT%20license%20%28%20http%3A%2F%2Fwww%2Eopensource%2Eorg%2Flicenses%2Fmit%2Dlicense%2Ephp%20%29%0A%2A%0A%2A%20%20%20USAGE%3A%0A%2A%20%20%20%20%20browser%3A%0A%2A%20%20%20%20%20%20%20%20%20JSONfn%2Estringify%28obj%29%3B%0A%2A%20%20%20%20%20%20%20%20%20JSONfn%2Eparse%28str%5B%2C%20date2obj%5D%29%3B%0A%2A%20%20%20%20%20%20%20%20%20JSONfn%2Eclone%28obj%5B%2C%20date2obj%5D%29%3B%0A%2A%0A%2A%20%20%20%20%20nodejs%3A%0A%2A%20%20%20%20%20%20%20var%20JSONfn%20%3D%20require%28%27path%2Fto%2Fjson%2Dfn%27%29%3B%0A%2A%20%20%20%20%20%20%20JSONfn%2Estringify%28obj%29%3B%0A%2A%20%20%20%20%20%20%20JSONfn%2Eparse%28str%5B%2C%20date2obj%5D%29%3B%0A%2A%20%20%20%20%20%20%20JSONfn%2Eclone%28obj%5B%2C%20date2obj%5D%29%3B%0A%2A%0A%2A%0A%2A%20%20%20%20%20%40obj%20%20%20%20%20%20%2D%20%20Object%3B%0A%2A%20%20%20%20%20%40str%20%20%20%20%20%20%2D%20%20String%2C%20which%20is%20returned%20by%20JSONfn%2Estringify%28%29%20function%3B%20%0A%2A%20%20%20%20%20%40date2obj%20%2D%20Boolean%20%28optional%29%3B%20if%20true%2C%20date%20string%20in%20ISO8061%20format%0A%2A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20is%20converted%20into%20a%20Date%20object%3B%20otherwise%2C%20it%20is%20left%20as%20a%20String%2E%0A%2A%2F%0A%0A%22use%20strict%22%3B%0A%0A%28function%20%28exports%29%20%7B%0A%0A%20%20exports%2Estringify%20%3D%20function%20%28obj%29%20%7B%0A%0A%20%20%20%20return%20JSON%2Estringify%28obj%2C%20function%20%28key%2C%20value%29%20%7B%0A%20%20%20%20%20%20if%20%28value%20instanceof%20Function%20%7C%7C%20typeof%20value%20%3D%3D%20%27function%27%29%20%7B%0A%20%20%20%20%20%20%20%20return%20value%2EtoString%28%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20%28value%20instanceof%20RegExp%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%27%5FPxEgEr%5F%27%20%2B%20value%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%3B%0A%0A%20%20exports%2Eparse%20%3D%20function%20%28str%2C%20date2obj%29%20%7B%0A%0A%20%20%20%20var%20iso8061%20%3D%20date2obj%20%3F%20%2F%5E%28%5Cd%7B4%7D%29%2D%28%5Cd%7B2%7D%29%2D%28%5Cd%7B2%7D%29T%28%5Cd%7B2%7D%29%3A%28%5Cd%7B2%7D%29%3A%28%5Cd%7B2%7D%28%3F%3A%5C%2E%5Cd%2A%29%3F%29Z%24%2F%20%3A%20false%3B%0A%0A%20%20%20%20return%20JSON%2Eparse%28str%2C%20function%20%28key%2C%20value%29%20%7B%0A%20%20%20%20%20%20var%20prefix%3B%0A%0A%20%20%20%20%20%20if%20%28typeof%20value%20%21%3D%20%27string%27%29%20%7B%0A%20%20%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20%28value%2Elength%20%3C%208%29%20%7B%0A%20%20%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20prefix%20%3D%20value%2Esubstring%280%2C%208%29%3B%0A%0A%20%20%20%20%20%20if%20%28iso8061%20%26%26%20value%2Ematch%28iso8061%29%29%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Date%28value%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20%28prefix%20%3D%3D%3D%20%27function%27%29%20%7B%0A%20%20%20%20%20%20%20%20return%20eval%28%27%28%27%20%2B%20value%20%2B%20%27%29%27%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20%28prefix%20%3D%3D%3D%20%27%5FPxEgEr%5F%27%29%20%7B%0A%20%20%20%20%20%20%20%20return%20eval%28value%2Eslice%288%29%29%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%3B%0A%0A%20%20exports%2Eclone%20%3D%20function%20%28obj%2C%20date2obj%29%20%7B%0A%20%20%20%20return%20exports%2Eparse%28exports%2Estringify%28obj%29%2C%20date2obj%29%3B%0A%20%20%7D%3B%0A%0A%7D%28typeof%20exports%20%3D%3D%3D%20%27undefined%27%20%3F%20%28window%2EJSONfn%20%3D%20%7B%7D%29%20%3A%20exports%29%29%3B"></script>
<script src="data:application/x-javascript,%2F%2A%2A%0A%20%2A%20%40license%0A%20%2A%20Lo%2DDash%202%2E4%2E1%20%28Custom%20Build%29%20lodash%2Ecom%2Flicense%20%7C%20Underscore%2Ejs%201%2E5%2E2%20underscorejs%2Eorg%2FLICENSE%0A%20%2A%20Build%3A%20%60lodash%20modern%20%2Do%20%2E%2Fdist%2Flodash%2Ejs%60%0A%20%2A%2F%0A%3B%28function%28%29%7Bfunction%20n%28n%2Ct%2Ce%29%7Be%3D%28e%7C%7C0%29%2D1%3Bfor%28var%20r%3Dn%3Fn%2Elength%3A0%3B%2B%2Be%3Cr%3B%29if%28n%5Be%5D%3D%3D%3Dt%29return%20e%3Breturn%2D1%7Dfunction%20t%28t%2Ce%29%7Bvar%20r%3Dtypeof%20e%3Bif%28t%3Dt%2El%2C%22boolean%22%3D%3Dr%7C%7Cnull%3D%3De%29return%20t%5Be%5D%3F0%3A%2D1%3B%22number%22%21%3Dr%26%26%22string%22%21%3Dr%26%26%28r%3D%22object%22%29%3Bvar%20u%3D%22number%22%3D%3Dr%3Fe%3Am%2Be%3Breturn%20t%3D%28t%3Dt%5Br%5D%29%26%26t%5Bu%5D%2C%22object%22%3D%3Dr%3Ft%26%26%2D1%3Cn%28t%2Ce%29%3F0%3A%2D1%3At%3F0%3A%2D1%7Dfunction%20e%28n%29%7Bvar%20t%3Dthis%2El%2Ce%3Dtypeof%20n%3Bif%28%22boolean%22%3D%3De%7C%7Cnull%3D%3Dn%29t%5Bn%5D%3Dtrue%3Belse%7B%22number%22%21%3De%26%26%22string%22%21%3De%26%26%28e%3D%22object%22%29%3Bvar%20r%3D%22number%22%3D%3De%3Fn%3Am%2Bn%2Ct%3Dt%5Be%5D%7C%7C%28t%5Be%5D%3D%7B%7D%29%3B%22object%22%3D%3De%3F%28t%5Br%5D%7C%7C%28t%5Br%5D%3D%5B%5D%29%29%2Epush%28n%29%3At%5Br%5D%3Dtrue%0A%7D%7Dfunction%20r%28n%29%7Breturn%20n%2EcharCodeAt%280%29%7Dfunction%20u%28n%2Ct%29%7Bfor%28var%20e%3Dn%2Em%2Cr%3Dt%2Em%2Cu%3D%2D1%2Co%3De%2Elength%3B%2B%2Bu%3Co%3B%29%7Bvar%20i%3De%5Bu%5D%2Ca%3Dr%5Bu%5D%3Bif%28i%21%3D%3Da%29%7Bif%28i%3Ea%7C%7Ctypeof%20i%3D%3D%22undefined%22%29return%201%3Bif%28i%3Ca%7C%7Ctypeof%20a%3D%3D%22undefined%22%29return%2D1%7D%7Dreturn%20n%2En%2Dt%2En%7Dfunction%20o%28n%29%7Bvar%20t%3D%2D1%2Cr%3Dn%2Elength%2Cu%3Dn%5B0%5D%2Co%3Dn%5Br%2F2%7C0%5D%2Ci%3Dn%5Br%2D1%5D%3Bif%28u%26%26typeof%20u%3D%3D%22object%22%26%26o%26%26typeof%20o%3D%3D%22object%22%26%26i%26%26typeof%20i%3D%3D%22object%22%29return%20false%3Bfor%28u%3Df%28%29%2Cu%5B%22false%22%5D%3Du%5B%22null%22%5D%3Du%5B%22true%22%5D%3Du%2Eundefined%3Dfalse%2Co%3Df%28%29%2Co%2Ek%3Dn%2Co%2El%3Du%2Co%2Epush%3De%3B%2B%2Bt%3Cr%3B%29o%2Epush%28n%5Bt%5D%29%3Breturn%20o%7Dfunction%20i%28n%29%7Breturn%22%5C%5C%22%2BU%5Bn%5D%0A%7Dfunction%20a%28%29%7Breturn%20h%2Epop%28%29%7C%7C%5B%5D%7Dfunction%20f%28%29%7Breturn%20g%2Epop%28%29%7C%7C%7Bk%3Anull%2Cl%3Anull%2Cm%3Anull%2C%22false%22%3Afalse%2Cn%3A0%2C%22null%22%3Afalse%2Cnumber%3Anull%2Cobject%3Anull%2Cpush%3Anull%2Cstring%3Anull%2C%22true%22%3Afalse%2Cundefined%3Afalse%2Co%3Anull%7D%7Dfunction%20l%28n%29%7Bn%2Elength%3D0%2Ch%2Elength%3C%5F%26%26h%2Epush%28n%29%7Dfunction%20c%28n%29%7Bvar%20t%3Dn%2El%3Bt%26%26c%28t%29%2Cn%2Ek%3Dn%2El%3Dn%2Em%3Dn%2Eobject%3Dn%2Enumber%3Dn%2Estring%3Dn%2Eo%3Dnull%2Cg%2Elength%3C%5F%26%26g%2Epush%28n%29%7Dfunction%20p%28n%2Ct%2Ce%29%7Bt%7C%7C%28t%3D0%29%2Ctypeof%20e%3D%3D%22undefined%22%26%26%28e%3Dn%3Fn%2Elength%3A0%29%3Bvar%20r%3D%2D1%3Be%3De%2Dt%7C%7C0%3Bfor%28var%20u%3DArray%280%3Ee%3F0%3Ae%29%3B%2B%2Br%3Ce%3B%29u%5Br%5D%3Dn%5Bt%2Br%5D%3Breturn%20u%7Dfunction%20s%28e%29%7Bfunction%20h%28n%2Ct%2Ce%29%7Bif%28%21n%7C%7C%21V%5Btypeof%20n%5D%29return%20n%3B%0At%3Dt%26%26typeof%20e%3D%3D%22undefined%22%3Ft%3Att%28t%2Ce%2C3%29%3Bfor%28var%20r%3D%2D1%2Cu%3DV%5Btypeof%20n%5D%26%26Fe%28n%29%2Co%3Du%3Fu%2Elength%3A0%3B%2B%2Br%3Co%26%26%28e%3Du%5Br%5D%2Cfalse%21%3D%3Dt%28n%5Be%5D%2Ce%2Cn%29%29%3B%29%3Breturn%20n%7Dfunction%20g%28n%2Ct%2Ce%29%7Bvar%20r%3Bif%28%21n%7C%7C%21V%5Btypeof%20n%5D%29return%20n%3Bt%3Dt%26%26typeof%20e%3D%3D%22undefined%22%3Ft%3Att%28t%2Ce%2C3%29%3Bfor%28r%20in%20n%29if%28false%3D%3D%3Dt%28n%5Br%5D%2Cr%2Cn%29%29break%3Breturn%20n%7Dfunction%20%5F%28n%2Ct%2Ce%29%7Bvar%20r%2Cu%3Dn%2Co%3Du%3Bif%28%21u%29return%20o%3Bfor%28var%20i%3Darguments%2Ca%3D0%2Cf%3Dtypeof%20e%3D%3D%22number%22%3F2%3Ai%2Elength%3B%2B%2Ba%3Cf%3B%29if%28%28u%3Di%5Ba%5D%29%26%26V%5Btypeof%20u%5D%29for%28var%20l%3D%2D1%2Cc%3DV%5Btypeof%20u%5D%26%26Fe%28u%29%2Cp%3Dc%3Fc%2Elength%3A0%3B%2B%2Bl%3Cp%3B%29r%3Dc%5Bl%5D%2C%22undefined%22%3D%3Dtypeof%20o%5Br%5D%26%26%28o%5Br%5D%3Du%5Br%5D%29%3B%0Areturn%20o%7Dfunction%20U%28n%2Ct%2Ce%29%7Bvar%20r%2Cu%3Dn%2Co%3Du%3Bif%28%21u%29return%20o%3Bvar%20i%3Darguments%2Ca%3D0%2Cf%3Dtypeof%20e%3D%3D%22number%22%3F2%3Ai%2Elength%3Bif%283%3Cf%26%26%22function%22%3D%3Dtypeof%20i%5Bf%2D2%5D%29var%20l%3Dtt%28i%5B%2D%2Df%2D1%5D%2Ci%5Bf%2D%2D%5D%2C2%29%3Belse%202%3Cf%26%26%22function%22%3D%3Dtypeof%20i%5Bf%2D1%5D%26%26%28l%3Di%5B%2D%2Df%5D%29%3Bfor%28%3B%2B%2Ba%3Cf%3B%29if%28%28u%3Di%5Ba%5D%29%26%26V%5Btypeof%20u%5D%29for%28var%20c%3D%2D1%2Cp%3DV%5Btypeof%20u%5D%26%26Fe%28u%29%2Cs%3Dp%3Fp%2Elength%3A0%3B%2B%2Bc%3Cs%3B%29r%3Dp%5Bc%5D%2Co%5Br%5D%3Dl%3Fl%28o%5Br%5D%2Cu%5Br%5D%29%3Au%5Br%5D%3Breturn%20o%7Dfunction%20H%28n%29%7Bvar%20t%2Ce%3D%5B%5D%3Bif%28%21n%7C%7C%21V%5Btypeof%20n%5D%29return%20e%3Bfor%28t%20in%20n%29me%2Ecall%28n%2Ct%29%26%26e%2Epush%28t%29%3Breturn%20e%7Dfunction%20J%28n%29%7Breturn%20n%26%26typeof%20n%3D%3D%22object%22%26%26%21Te%28n%29%26%26me%2Ecall%28n%2C%22%5F%5Fwrapped%5F%5F%22%29%3Fn%3Anew%20Q%28n%29%0A%7Dfunction%20Q%28n%2Ct%29%7Bthis%2E%5F%5Fchain%5F%5F%3D%21%21t%2Cthis%2E%5F%5Fwrapped%5F%5F%3Dn%7Dfunction%20X%28n%29%7Bfunction%20t%28%29%7Bif%28r%29%7Bvar%20n%3Dp%28r%29%3Bbe%2Eapply%28n%2Carguments%29%7Dif%28this%20instanceof%20t%29%7Bvar%20o%3Dnt%28e%2Eprototype%29%2Cn%3De%2Eapply%28o%2Cn%7C%7Carguments%29%3Breturn%20wt%28n%29%3Fn%3Ao%7Dreturn%20e%2Eapply%28u%2Cn%7C%7Carguments%29%7Dvar%20e%3Dn%5B0%5D%2Cr%3Dn%5B2%5D%2Cu%3Dn%5B4%5D%3Breturn%20%24e%28t%2Cn%29%2Ct%7Dfunction%20Z%28n%2Ct%2Ce%2Cr%2Cu%29%7Bif%28e%29%7Bvar%20o%3De%28n%29%3Bif%28typeof%20o%21%3D%22undefined%22%29return%20o%7Dif%28%21wt%28n%29%29return%20n%3Bvar%20i%3Dce%2Ecall%28n%29%3Bif%28%21K%5Bi%5D%29return%20n%3Bvar%20f%3DAe%5Bi%5D%3Bswitch%28i%29%7Bcase%20T%3Acase%20F%3Areturn%20new%20f%28%2Bn%29%3Bcase%20W%3Acase%20P%3Areturn%20new%20f%28n%29%3Bcase%20z%3Areturn%20o%3Df%28n%2Esource%2CC%2Eexec%28n%29%29%2Co%2ElastIndex%3Dn%2ElastIndex%2Co%0A%7Dif%28i%3DTe%28n%29%2Ct%29%7Bvar%20c%3D%21r%3Br%7C%7C%28r%3Da%28%29%29%2Cu%7C%7C%28u%3Da%28%29%29%3Bfor%28var%20s%3Dr%2Elength%3Bs%2D%2D%3B%29if%28r%5Bs%5D%3D%3Dn%29return%20u%5Bs%5D%3Bo%3Di%3Ff%28n%2Elength%29%3A%7B%7D%7Delse%20o%3Di%3Fp%28n%29%3AU%28%7B%7D%2Cn%29%3Breturn%20i%26%26%28me%2Ecall%28n%2C%22index%22%29%26%26%28o%2Eindex%3Dn%2Eindex%29%2Cme%2Ecall%28n%2C%22input%22%29%26%26%28o%2Einput%3Dn%2Einput%29%29%2Ct%3F%28r%2Epush%28n%29%2Cu%2Epush%28o%29%2C%28i%3FSt%3Ah%29%28n%2Cfunction%28n%2Ci%29%7Bo%5Bi%5D%3DZ%28n%2Ct%2Ce%2Cr%2Cu%29%7D%29%2Cc%26%26%28l%28r%29%2Cl%28u%29%29%2Co%29%3Ao%7Dfunction%20nt%28n%29%7Breturn%20wt%28n%29%3Fke%28n%29%3A%7B%7D%7Dfunction%20tt%28n%2Ct%2Ce%29%7Bif%28typeof%20n%21%3D%22function%22%29return%20Ut%3Bif%28typeof%20t%3D%3D%22undefined%22%7C%7C%21%28%22prototype%22in%20n%29%29return%20n%3Bvar%20r%3Dn%2E%5F%5FbindData%5F%5F%3Bif%28typeof%20r%3D%3D%22undefined%22%26%26%28De%2EfuncNames%26%26%28r%3D%21n%2Ename%29%2Cr%3Dr%7C%7C%21De%2EfuncDecomp%2C%21r%29%29%7Bvar%20u%3Dge%2Ecall%28n%29%3B%0ADe%2EfuncNames%7C%7C%28r%3D%21O%2Etest%28u%29%29%2Cr%7C%7C%28r%3DE%2Etest%28u%29%2C%24e%28n%2Cr%29%29%7Dif%28false%3D%3D%3Dr%7C%7Ctrue%21%3D%3Dr%26%261%26r%5B1%5D%29return%20n%3Bswitch%28e%29%7Bcase%201%3Areturn%20function%28e%29%7Breturn%20n%2Ecall%28t%2Ce%29%7D%3Bcase%202%3Areturn%20function%28e%2Cr%29%7Breturn%20n%2Ecall%28t%2Ce%2Cr%29%7D%3Bcase%203%3Areturn%20function%28e%2Cr%2Cu%29%7Breturn%20n%2Ecall%28t%2Ce%2Cr%2Cu%29%7D%3Bcase%204%3Areturn%20function%28e%2Cr%2Cu%2Co%29%7Breturn%20n%2Ecall%28t%2Ce%2Cr%2Cu%2Co%29%7D%7Dreturn%20Mt%28n%2Ct%29%7Dfunction%20et%28n%29%7Bfunction%20t%28%29%7Bvar%20n%3Df%3Fi%3Athis%3Bif%28u%29%7Bvar%20h%3Dp%28u%29%3Bbe%2Eapply%28h%2Carguments%29%7Dreturn%28o%7C%7Cc%29%26%26%28h%7C%7C%28h%3Dp%28arguments%29%29%2Co%26%26be%2Eapply%28h%2Co%29%2Cc%26%26h%2Elength%3Ca%29%3F%28r%7C%3D16%2Cet%28%5Be%2Cs%3Fr%3A%2D4%26r%2Ch%2Cnull%2Ci%2Ca%5D%29%29%3A%28h%7C%7C%28h%3Darguments%29%2Cl%26%26%28e%3Dn%5Bv%5D%29%2Cthis%20instanceof%20t%3F%28n%3Dnt%28e%2Eprototype%29%2Ch%3De%2Eapply%28n%2Ch%29%2Cwt%28h%29%3Fh%3An%29%3Ae%2Eapply%28n%2Ch%29%29%0A%7Dvar%20e%3Dn%5B0%5D%2Cr%3Dn%5B1%5D%2Cu%3Dn%5B2%5D%2Co%3Dn%5B3%5D%2Ci%3Dn%5B4%5D%2Ca%3Dn%5B5%5D%2Cf%3D1%26r%2Cl%3D2%26r%2Cc%3D4%26r%2Cs%3D8%26r%2Cv%3De%3Breturn%20%24e%28t%2Cn%29%2Ct%7Dfunction%20rt%28e%2Cr%29%7Bvar%20u%3D%2D1%2Ci%3Dst%28%29%2Ca%3De%3Fe%2Elength%3A0%2Cf%3Da%3E%3Db%26%26i%3D%3D%3Dn%2Cl%3D%5B%5D%3Bif%28f%29%7Bvar%20p%3Do%28r%29%3Bp%3F%28i%3Dt%2Cr%3Dp%29%3Af%3Dfalse%7Dfor%28%3B%2B%2Bu%3Ca%3B%29p%3De%5Bu%5D%2C0%3Ei%28r%2Cp%29%26%26l%2Epush%28p%29%3Breturn%20f%26%26c%28r%29%2Cl%7Dfunction%20ut%28n%2Ct%2Ce%2Cr%29%7Br%3D%28r%7C%7C0%29%2D1%3Bfor%28var%20u%3Dn%3Fn%2Elength%3A0%2Co%3D%5B%5D%3B%2B%2Br%3Cu%3B%29%7Bvar%20i%3Dn%5Br%5D%3Bif%28i%26%26typeof%20i%3D%3D%22object%22%26%26typeof%20i%2Elength%3D%3D%22number%22%26%26%28Te%28i%29%7C%7Cyt%28i%29%29%29%7Bt%7C%7C%28i%3Dut%28i%2Ct%2Ce%29%29%3Bvar%20a%3D%2D1%2Cf%3Di%2Elength%2Cl%3Do%2Elength%3Bfor%28o%2Elength%2B%3Df%3B%2B%2Ba%3Cf%3B%29o%5Bl%2B%2B%5D%3Di%5Ba%5D%7Delse%20e%7C%7Co%2Epush%28i%29%7Dreturn%20o%0A%7Dfunction%20ot%28n%2Ct%2Ce%2Cr%2Cu%2Co%29%7Bif%28e%29%7Bvar%20i%3De%28n%2Ct%29%3Bif%28typeof%20i%21%3D%22undefined%22%29return%21%21i%7Dif%28n%3D%3D%3Dt%29return%200%21%3D%3Dn%7C%7C1%2Fn%3D%3D1%2Ft%3Bif%28n%3D%3D%3Dn%26%26%21%28n%26%26V%5Btypeof%20n%5D%7C%7Ct%26%26V%5Btypeof%20t%5D%29%29return%20false%3Bif%28null%3D%3Dn%7C%7Cnull%3D%3Dt%29return%20n%3D%3D%3Dt%3Bvar%20f%3Dce%2Ecall%28n%29%2Cc%3Dce%2Ecall%28t%29%3Bif%28f%3D%3DD%26%26%28f%3Dq%29%2Cc%3D%3DD%26%26%28c%3Dq%29%2Cf%21%3Dc%29return%20false%3Bswitch%28f%29%7Bcase%20T%3Acase%20F%3Areturn%2Bn%3D%3D%2Bt%3Bcase%20W%3Areturn%20n%21%3D%2Bn%3Ft%21%3D%2Bt%3A0%3D%3Dn%3F1%2Fn%3D%3D1%2Ft%3An%3D%3D%2Bt%3Bcase%20z%3Acase%20P%3Areturn%20n%3D%3Doe%28t%29%7Dif%28c%3Df%3D%3D%24%2C%21c%29%7Bvar%20p%3Dme%2Ecall%28n%2C%22%5F%5Fwrapped%5F%5F%22%29%2Cs%3Dme%2Ecall%28t%2C%22%5F%5Fwrapped%5F%5F%22%29%3Bif%28p%7C%7Cs%29return%20ot%28p%3Fn%2E%5F%5Fwrapped%5F%5F%3An%2Cs%3Ft%2E%5F%5Fwrapped%5F%5F%3At%2Ce%2Cr%2Cu%2Co%29%3B%0Aif%28f%21%3Dq%29return%20false%3Bif%28f%3Dn%2Econstructor%2Cp%3Dt%2Econstructor%2Cf%21%3Dp%26%26%21%28dt%28f%29%26%26f%20instanceof%20f%26%26dt%28p%29%26%26p%20instanceof%20p%29%26%26%22constructor%22in%20n%26%26%22constructor%22in%20t%29return%20false%7Dfor%28f%3D%21u%2Cu%7C%7C%28u%3Da%28%29%29%2Co%7C%7C%28o%3Da%28%29%29%2Cp%3Du%2Elength%3Bp%2D%2D%3B%29if%28u%5Bp%5D%3D%3Dn%29return%20o%5Bp%5D%3D%3Dt%3Bvar%20v%3D0%2Ci%3Dtrue%3Bif%28u%2Epush%28n%29%2Co%2Epush%28t%29%2Cc%29%7Bif%28p%3Dn%2Elength%2Cv%3Dt%2Elength%2C%28i%3Dv%3D%3Dp%29%7C%7Cr%29for%28%3Bv%2D%2D%3B%29if%28c%3Dp%2Cs%3Dt%5Bv%5D%2Cr%29for%28%3Bc%2D%2D%26%26%21%28i%3Dot%28n%5Bc%5D%2Cs%2Ce%2Cr%2Cu%2Co%29%29%3B%29%3Belse%20if%28%21%28i%3Dot%28n%5Bv%5D%2Cs%2Ce%2Cr%2Cu%2Co%29%29%29break%7Delse%20g%28t%2Cfunction%28t%2Ca%2Cf%29%7Breturn%20me%2Ecall%28f%2Ca%29%3F%28v%2B%2B%2Ci%3Dme%2Ecall%28n%2Ca%29%26%26ot%28n%5Ba%5D%2Ct%2Ce%2Cr%2Cu%2Co%29%29%3Avoid%200%7D%29%2Ci%26%26%21r%26%26g%28n%2Cfunction%28n%2Ct%2Ce%29%7Breturn%20me%2Ecall%28e%2Ct%29%3Fi%3D%2D1%3C%2D%2Dv%3Avoid%200%0A%7D%29%3Breturn%20u%2Epop%28%29%2Co%2Epop%28%29%2Cf%26%26%28l%28u%29%2Cl%28o%29%29%2Ci%7Dfunction%20it%28n%2Ct%2Ce%2Cr%2Cu%29%7B%28Te%28t%29%3FSt%3Ah%29%28t%2Cfunction%28t%2Co%29%7Bvar%20i%2Ca%2Cf%3Dt%2Cl%3Dn%5Bo%5D%3Bif%28t%26%26%28%28a%3DTe%28t%29%29%7C%7CPe%28t%29%29%29%7Bfor%28f%3Dr%2Elength%3Bf%2D%2D%3B%29if%28i%3Dr%5Bf%5D%3D%3Dt%29%7Bl%3Du%5Bf%5D%3Bbreak%7Dif%28%21i%29%7Bvar%20c%3Be%26%26%28f%3De%28l%2Ct%29%2Cc%3Dtypeof%20f%21%3D%22undefined%22%29%26%26%28l%3Df%29%2Cc%7C%7C%28l%3Da%3FTe%28l%29%3Fl%3A%5B%5D%3APe%28l%29%3Fl%3A%7B%7D%29%2Cr%2Epush%28t%29%2Cu%2Epush%28l%29%2Cc%7C%7Cit%28l%2Ct%2Ce%2Cr%2Cu%29%7D%7Delse%20e%26%26%28f%3De%28l%2Ct%29%2Ctypeof%20f%3D%3D%22undefined%22%26%26%28f%3Dt%29%29%2Ctypeof%20f%21%3D%22undefined%22%26%26%28l%3Df%29%3Bn%5Bo%5D%3Dl%7D%29%7Dfunction%20at%28n%2Ct%29%7Breturn%20n%2Bhe%28Re%28%29%2A%28t%2Dn%2B1%29%29%7Dfunction%20ft%28e%2Cr%2Cu%29%7Bvar%20i%3D%2D1%2Cf%3Dst%28%29%2Cp%3De%3Fe%2Elength%3A0%2Cs%3D%5B%5D%2Cv%3D%21r%26%26p%3E%3Db%26%26f%3D%3D%3Dn%2Ch%3Du%7C%7Cv%3Fa%28%29%3As%3B%0Afor%28v%26%26%28h%3Do%28h%29%2Cf%3Dt%29%3B%2B%2Bi%3Cp%3B%29%7Bvar%20g%3De%5Bi%5D%2Cy%3Du%3Fu%28g%2Ci%2Ce%29%3Ag%3B%28r%3F%21i%7C%7Ch%5Bh%2Elength%2D1%5D%21%3D%3Dy%3A0%3Ef%28h%2Cy%29%29%26%26%28%28u%7C%7Cv%29%26%26h%2Epush%28y%29%2Cs%2Epush%28g%29%29%7Dreturn%20v%3F%28l%28h%2Ek%29%2Cc%28h%29%29%3Au%26%26l%28h%29%2Cs%7Dfunction%20lt%28n%29%7Breturn%20function%28t%2Ce%2Cr%29%7Bvar%20u%3D%7B%7D%3Be%3DJ%2EcreateCallback%28e%2Cr%2C3%29%2Cr%3D%2D1%3Bvar%20o%3Dt%3Ft%2Elength%3A0%3Bif%28typeof%20o%3D%3D%22number%22%29for%28%3B%2B%2Br%3Co%3B%29%7Bvar%20i%3Dt%5Br%5D%3Bn%28u%2Ci%2Ce%28i%2Cr%2Ct%29%2Ct%29%7Delse%20h%28t%2Cfunction%28t%2Cr%2Co%29%7Bn%28u%2Ct%2Ce%28t%2Cr%2Co%29%2Co%29%7D%29%3Breturn%20u%7D%7Dfunction%20ct%28n%2Ct%2Ce%2Cr%2Cu%2Co%29%7Bvar%20i%3D1%26t%2Ca%3D4%26t%2Cf%3D16%26t%2Cl%3D32%26t%3Bif%28%21%282%26t%7C%7Cdt%28n%29%29%29throw%20new%20ie%3Bf%26%26%21e%2Elength%26%26%28t%26%3D%2D17%2Cf%3De%3Dfalse%29%2Cl%26%26%21r%2Elength%26%26%28t%26%3D%2D33%2Cl%3Dr%3Dfalse%29%3B%0Avar%20c%3Dn%26%26n%2E%5F%5FbindData%5F%5F%3Breturn%20c%26%26true%21%3D%3Dc%3F%28c%3Dp%28c%29%2Cc%5B2%5D%26%26%28c%5B2%5D%3Dp%28c%5B2%5D%29%29%2Cc%5B3%5D%26%26%28c%5B3%5D%3Dp%28c%5B3%5D%29%29%2C%21i%7C%7C1%26c%5B1%5D%7C%7C%28c%5B4%5D%3Du%29%2C%21i%26%261%26c%5B1%5D%26%26%28t%7C%3D8%29%2C%21a%7C%7C4%26c%5B1%5D%7C%7C%28c%5B5%5D%3Do%29%2Cf%26%26be%2Eapply%28c%5B2%5D%7C%7C%28c%5B2%5D%3D%5B%5D%29%2Ce%29%2Cl%26%26we%2Eapply%28c%5B3%5D%7C%7C%28c%5B3%5D%3D%5B%5D%29%2Cr%29%2Cc%5B1%5D%7C%3Dt%2Cct%2Eapply%28null%2Cc%29%29%3A%281%3D%3Dt%7C%7C17%3D%3D%3Dt%3FX%3Aet%29%28%5Bn%2Ct%2Ce%2Cr%2Cu%2Co%5D%29%7Dfunction%20pt%28n%29%7Breturn%20Be%5Bn%5D%7Dfunction%20st%28%29%7Bvar%20t%3D%28t%3DJ%2EindexOf%29%3D%3D%3DWt%3Fn%3At%3Breturn%20t%7Dfunction%20vt%28n%29%7Breturn%20typeof%20n%3D%3D%22function%22%26%26pe%2Etest%28n%29%7Dfunction%20ht%28n%29%7Bvar%20t%2Ce%3Breturn%20n%26%26ce%2Ecall%28n%29%3D%3Dq%26%26%28t%3Dn%2Econstructor%2C%21dt%28t%29%7C%7Ct%20instanceof%20t%29%3F%28g%28n%2Cfunction%28n%2Ct%29%7Be%3Dt%0A%7D%29%2Ctypeof%20e%3D%3D%22undefined%22%7C%7Cme%2Ecall%28n%2Ce%29%29%3Afalse%7Dfunction%20gt%28n%29%7Breturn%20We%5Bn%5D%7Dfunction%20yt%28n%29%7Breturn%20n%26%26typeof%20n%3D%3D%22object%22%26%26typeof%20n%2Elength%3D%3D%22number%22%26%26ce%2Ecall%28n%29%3D%3DD%7C%7Cfalse%7Dfunction%20mt%28n%2Ct%2Ce%29%7Bvar%20r%3DFe%28n%29%2Cu%3Dr%2Elength%3Bfor%28t%3Dtt%28t%2Ce%2C3%29%3Bu%2D%2D%26%26%28e%3Dr%5Bu%5D%2Cfalse%21%3D%3Dt%28n%5Be%5D%2Ce%2Cn%29%29%3B%29%3Breturn%20n%7Dfunction%20bt%28n%29%7Bvar%20t%3D%5B%5D%3Breturn%20g%28n%2Cfunction%28n%2Ce%29%7Bdt%28n%29%26%26t%2Epush%28e%29%7D%29%2Ct%2Esort%28%29%7Dfunction%20%5Ft%28n%29%7Bfor%28var%20t%3D%2D1%2Ce%3DFe%28n%29%2Cr%3De%2Elength%2Cu%3D%7B%7D%3B%2B%2Bt%3Cr%3B%29%7Bvar%20o%3De%5Bt%5D%3Bu%5Bn%5Bo%5D%5D%3Do%7Dreturn%20u%7Dfunction%20dt%28n%29%7Breturn%20typeof%20n%3D%3D%22function%22%7Dfunction%20wt%28n%29%7Breturn%21%28%21n%7C%7C%21V%5Btypeof%20n%5D%29%0A%7Dfunction%20jt%28n%29%7Breturn%20typeof%20n%3D%3D%22number%22%7C%7Cn%26%26typeof%20n%3D%3D%22object%22%26%26ce%2Ecall%28n%29%3D%3DW%7C%7Cfalse%7Dfunction%20kt%28n%29%7Breturn%20typeof%20n%3D%3D%22string%22%7C%7Cn%26%26typeof%20n%3D%3D%22object%22%26%26ce%2Ecall%28n%29%3D%3DP%7C%7Cfalse%7Dfunction%20xt%28n%29%7Bfor%28var%20t%3D%2D1%2Ce%3DFe%28n%29%2Cr%3De%2Elength%2Cu%3DXt%28r%29%3B%2B%2Bt%3Cr%3B%29u%5Bt%5D%3Dn%5Be%5Bt%5D%5D%3Breturn%20u%7Dfunction%20Ct%28n%2Ct%2Ce%29%7Bvar%20r%3D%2D1%2Cu%3Dst%28%29%2Co%3Dn%3Fn%2Elength%3A0%2Ci%3Dfalse%3Breturn%20e%3D%280%3Ee%3FIe%280%2Co%2Be%29%3Ae%29%7C%7C0%2CTe%28n%29%3Fi%3D%2D1%3Cu%28n%2Ct%2Ce%29%3Atypeof%20o%3D%3D%22number%22%3Fi%3D%2D1%3C%28kt%28n%29%3Fn%2EindexOf%28t%2Ce%29%3Au%28n%2Ct%2Ce%29%29%3Ah%28n%2Cfunction%28n%29%7Breturn%2B%2Br%3Ce%3Fvoid%200%3A%21%28i%3Dn%3D%3D%3Dt%29%7D%29%2Ci%7Dfunction%20Ot%28n%2Ct%2Ce%29%7Bvar%20r%3Dtrue%3Bt%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Ce%3D%2D1%3B%0Avar%20u%3Dn%3Fn%2Elength%3A0%3Bif%28typeof%20u%3D%3D%22number%22%29for%28%3B%2B%2Be%3Cu%26%26%28r%3D%21%21t%28n%5Be%5D%2Ce%2Cn%29%29%3B%29%3Belse%20h%28n%2Cfunction%28n%2Ce%2Cu%29%7Breturn%20r%3D%21%21t%28n%2Ce%2Cu%29%7D%29%3Breturn%20r%7Dfunction%20Nt%28n%2Ct%2Ce%29%7Bvar%20r%3D%5B%5D%3Bt%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Ce%3D%2D1%3Bvar%20u%3Dn%3Fn%2Elength%3A0%3Bif%28typeof%20u%3D%3D%22number%22%29for%28%3B%2B%2Be%3Cu%3B%29%7Bvar%20o%3Dn%5Be%5D%3Bt%28o%2Ce%2Cn%29%26%26r%2Epush%28o%29%7Delse%20h%28n%2Cfunction%28n%2Ce%2Cu%29%7Bt%28n%2Ce%2Cu%29%26%26r%2Epush%28n%29%7D%29%3Breturn%20r%7Dfunction%20It%28n%2Ct%2Ce%29%7Bt%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Ce%3D%2D1%3Bvar%20r%3Dn%3Fn%2Elength%3A0%3Bif%28typeof%20r%21%3D%22number%22%29%7Bvar%20u%3Breturn%20h%28n%2Cfunction%28n%2Ce%2Cr%29%7Breturn%20t%28n%2Ce%2Cr%29%3F%28u%3Dn%2Cfalse%29%3Avoid%200%7D%29%2Cu%7Dfor%28%3B%2B%2Be%3Cr%3B%29%7Bvar%20o%3Dn%5Be%5D%3B%0Aif%28t%28o%2Ce%2Cn%29%29return%20o%7D%7Dfunction%20St%28n%2Ct%2Ce%29%7Bvar%20r%3D%2D1%2Cu%3Dn%3Fn%2Elength%3A0%3Bif%28t%3Dt%26%26typeof%20e%3D%3D%22undefined%22%3Ft%3Att%28t%2Ce%2C3%29%2Ctypeof%20u%3D%3D%22number%22%29for%28%3B%2B%2Br%3Cu%26%26false%21%3D%3Dt%28n%5Br%5D%2Cr%2Cn%29%3B%29%3Belse%20h%28n%2Ct%29%3Breturn%20n%7Dfunction%20Et%28n%2Ct%2Ce%29%7Bvar%20r%3Dn%3Fn%2Elength%3A0%3Bif%28t%3Dt%26%26typeof%20e%3D%3D%22undefined%22%3Ft%3Att%28t%2Ce%2C3%29%2Ctypeof%20r%3D%3D%22number%22%29for%28%3Br%2D%2D%26%26false%21%3D%3Dt%28n%5Br%5D%2Cr%2Cn%29%3B%29%3Belse%7Bvar%20u%3DFe%28n%29%2Cr%3Du%2Elength%3Bh%28n%2Cfunction%28n%2Ce%2Co%29%7Breturn%20e%3Du%3Fu%5B%2D%2Dr%5D%3A%2D%2Dr%2Ct%28o%5Be%5D%2Ce%2Co%29%7D%29%7Dreturn%20n%7Dfunction%20Rt%28n%2Ct%2Ce%29%7Bvar%20r%3D%2D1%2Cu%3Dn%3Fn%2Elength%3A0%3Bif%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Ctypeof%20u%3D%3D%22number%22%29for%28var%20o%3DXt%28u%29%3B%2B%2Br%3Cu%3B%29o%5Br%5D%3Dt%28n%5Br%5D%2Cr%2Cn%29%3B%0Aelse%20o%3D%5B%5D%2Ch%28n%2Cfunction%28n%2Ce%2Cu%29%7Bo%5B%2B%2Br%5D%3Dt%28n%2Ce%2Cu%29%7D%29%3Breturn%20o%7Dfunction%20At%28n%2Ct%2Ce%29%7Bvar%20u%3D%2D1%2F0%2Co%3Du%3Bif%28typeof%20t%21%3D%22function%22%26%26e%26%26e%5Bt%5D%3D%3D%3Dn%26%26%28t%3Dnull%29%2Cnull%3D%3Dt%26%26Te%28n%29%29%7Be%3D%2D1%3Bfor%28var%20i%3Dn%2Elength%3B%2B%2Be%3Ci%3B%29%7Bvar%20a%3Dn%5Be%5D%3Ba%3Eo%26%26%28o%3Da%29%7D%7Delse%20t%3Dnull%3D%3Dt%26%26kt%28n%29%3Fr%3AJ%2EcreateCallback%28t%2Ce%2C3%29%2CSt%28n%2Cfunction%28n%2Ce%2Cr%29%7Be%3Dt%28n%2Ce%2Cr%29%2Ce%3Eu%26%26%28u%3De%2Co%3Dn%29%7D%29%3Breturn%20o%7Dfunction%20Dt%28n%2Ct%2Ce%2Cr%29%7Bif%28%21n%29return%20e%3Bvar%20u%3D3%3Earguments%2Elength%3Bt%3DJ%2EcreateCallback%28t%2Cr%2C4%29%3Bvar%20o%3D%2D1%2Ci%3Dn%2Elength%3Bif%28typeof%20i%3D%3D%22number%22%29for%28u%26%26%28e%3Dn%5B%2B%2Bo%5D%29%3B%2B%2Bo%3Ci%3B%29e%3Dt%28e%2Cn%5Bo%5D%2Co%2Cn%29%3Belse%20h%28n%2Cfunction%28n%2Cr%2Co%29%7Be%3Du%3F%28u%3Dfalse%2Cn%29%3At%28e%2Cn%2Cr%2Co%29%0A%7D%29%3Breturn%20e%7Dfunction%20%24t%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3D3%3Earguments%2Elength%3Breturn%20t%3DJ%2EcreateCallback%28t%2Cr%2C4%29%2CEt%28n%2Cfunction%28n%2Cr%2Co%29%7Be%3Du%3F%28u%3Dfalse%2Cn%29%3At%28e%2Cn%2Cr%2Co%29%7D%29%2Ce%7Dfunction%20Tt%28n%29%7Bvar%20t%3D%2D1%2Ce%3Dn%3Fn%2Elength%3A0%2Cr%3DXt%28typeof%20e%3D%3D%22number%22%3Fe%3A0%29%3Breturn%20St%28n%2Cfunction%28n%29%7Bvar%20e%3Dat%280%2C%2B%2Bt%29%3Br%5Bt%5D%3Dr%5Be%5D%2Cr%5Be%5D%3Dn%7D%29%2Cr%7Dfunction%20Ft%28n%2Ct%2Ce%29%7Bvar%20r%3Bt%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Ce%3D%2D1%3Bvar%20u%3Dn%3Fn%2Elength%3A0%3Bif%28typeof%20u%3D%3D%22number%22%29for%28%3B%2B%2Be%3Cu%26%26%21%28r%3Dt%28n%5Be%5D%2Ce%2Cn%29%29%3B%29%3Belse%20h%28n%2Cfunction%28n%2Ce%2Cu%29%7Breturn%21%28r%3Dt%28n%2Ce%2Cu%29%29%7D%29%3Breturn%21%21r%7Dfunction%20Bt%28n%2Ct%2Ce%29%7Bvar%20r%3D0%2Cu%3Dn%3Fn%2Elength%3A0%3Bif%28typeof%20t%21%3D%22number%22%26%26null%21%3Dt%29%7Bvar%20o%3D%2D1%3B%0Afor%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%3B%2B%2Bo%3Cu%26%26t%28n%5Bo%5D%2Co%2Cn%29%3B%29r%2B%2B%7Delse%20if%28r%3Dt%2Cnull%3D%3Dr%7C%7Ce%29return%20n%3Fn%5B0%5D%3Av%3Breturn%20p%28n%2C0%2CSe%28Ie%280%2Cr%29%2Cu%29%29%7Dfunction%20Wt%28t%2Ce%2Cr%29%7Bif%28typeof%20r%3D%3D%22number%22%29%7Bvar%20u%3Dt%3Ft%2Elength%3A0%3Br%3D0%3Er%3FIe%280%2Cu%2Br%29%3Ar%7C%7C0%7Delse%20if%28r%29return%20r%3Dzt%28t%2Ce%29%2Ct%5Br%5D%3D%3D%3De%3Fr%3A%2D1%3Breturn%20n%28t%2Ce%2Cr%29%7Dfunction%20qt%28n%2Ct%2Ce%29%7Bif%28typeof%20t%21%3D%22number%22%26%26null%21%3Dt%29%7Bvar%20r%3D0%2Cu%3D%2D1%2Co%3Dn%3Fn%2Elength%3A0%3Bfor%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%3B%2B%2Bu%3Co%26%26t%28n%5Bu%5D%2Cu%2Cn%29%3B%29r%2B%2B%7Delse%20r%3Dnull%3D%3Dt%7C%7Ce%3F1%3AIe%280%2Ct%29%3Breturn%20p%28n%2Cr%29%7Dfunction%20zt%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3D0%2Co%3Dn%3Fn%2Elength%3Au%3Bfor%28e%3De%3FJ%2EcreateCallback%28e%2Cr%2C1%29%3AUt%2Ct%3De%28t%29%3Bu%3Co%3B%29r%3Du%2Bo%3E%3E%3E1%2Ce%28n%5Br%5D%29%3Ct%3Fu%3Dr%2B1%3Ao%3Dr%3B%0Areturn%20u%7Dfunction%20Pt%28n%2Ct%2Ce%2Cr%29%7Breturn%20typeof%20t%21%3D%22boolean%22%26%26null%21%3Dt%26%26%28r%3De%2Ce%3Dtypeof%20t%21%3D%22function%22%26%26r%26%26r%5Bt%5D%3D%3D%3Dn%3Fnull%3At%2Ct%3Dfalse%29%2Cnull%21%3De%26%26%28e%3DJ%2EcreateCallback%28e%2Cr%2C3%29%29%2Cft%28n%2Ct%2Ce%29%7Dfunction%20Kt%28%29%7Bfor%28var%20n%3D1%3Carguments%2Elength%3Farguments%3Aarguments%5B0%5D%2Ct%3D%2D1%2Ce%3Dn%3FAt%28Ve%28n%2C%22length%22%29%29%3A0%2Cr%3DXt%280%3Ee%3F0%3Ae%29%3B%2B%2Bt%3Ce%3B%29r%5Bt%5D%3DVe%28n%2Ct%29%3Breturn%20r%7Dfunction%20Lt%28n%2Ct%29%7Bvar%20e%3D%2D1%2Cr%3Dn%3Fn%2Elength%3A0%2Cu%3D%7B%7D%3Bfor%28t%7C%7C%21r%7C%7CTe%28n%5B0%5D%29%7C%7C%28t%3D%5B%5D%29%3B%2B%2Be%3Cr%3B%29%7Bvar%20o%3Dn%5Be%5D%3Bt%3Fu%5Bo%5D%3Dt%5Be%5D%3Ao%26%26%28u%5Bo%5B0%5D%5D%3Do%5B1%5D%29%7Dreturn%20u%7Dfunction%20Mt%28n%2Ct%29%7Breturn%202%3Carguments%2Elength%3Fct%28n%2C17%2Cp%28arguments%2C2%29%2Cnull%2Ct%29%3Act%28n%2C1%2Cnull%2Cnull%2Ct%29%0A%7Dfunction%20Vt%28n%2Ct%2Ce%29%7Bfunction%20r%28%29%7Bc%26%26ve%28c%29%2Ci%3Dc%3Dp%3Dv%2C%28g%7C%7Ch%21%3D%3Dt%29%26%26%28s%3DUe%28%29%2Ca%3Dn%2Eapply%28l%2Co%29%2Cc%7C%7Ci%7C%7C%28o%3Dl%3Dnull%29%29%7Dfunction%20u%28%29%7Bvar%20e%3Dt%2D%28Ue%28%29%2Df%29%3B0%3Ce%3Fc%3D%5Fe%28u%2Ce%29%3A%28i%26%26ve%28i%29%2Ce%3Dp%2Ci%3Dc%3Dp%3Dv%2Ce%26%26%28s%3DUe%28%29%2Ca%3Dn%2Eapply%28l%2Co%29%2Cc%7C%7Ci%7C%7C%28o%3Dl%3Dnull%29%29%29%7Dvar%20o%2Ci%2Ca%2Cf%2Cl%2Cc%2Cp%2Cs%3D0%2Ch%3Dfalse%2Cg%3Dtrue%3Bif%28%21dt%28n%29%29throw%20new%20ie%3Bif%28t%3DIe%280%2Ct%29%7C%7C0%2Ctrue%3D%3D%3De%29var%20y%3Dtrue%2Cg%3Dfalse%3Belse%20wt%28e%29%26%26%28y%3De%2Eleading%2Ch%3D%22maxWait%22in%20e%26%26%28Ie%28t%2Ce%2EmaxWait%29%7C%7C0%29%2Cg%3D%22trailing%22in%20e%3Fe%2Etrailing%3Ag%29%3Breturn%20function%28%29%7Bif%28o%3Darguments%2Cf%3DUe%28%29%2Cl%3Dthis%2Cp%3Dg%26%26%28c%7C%7C%21y%29%2Cfalse%3D%3D%3Dh%29var%20e%3Dy%26%26%21c%3Belse%7Bi%7C%7Cy%7C%7C%28s%3Df%29%3Bvar%20v%3Dh%2D%28f%2Ds%29%2Cm%3D0%3E%3Dv%3B%0Am%3F%28i%26%26%28i%3Dve%28i%29%29%2Cs%3Df%2Ca%3Dn%2Eapply%28l%2Co%29%29%3Ai%7C%7C%28i%3D%5Fe%28r%2Cv%29%29%7Dreturn%20m%26%26c%3Fc%3Dve%28c%29%3Ac%7C%7Ct%3D%3D%3Dh%7C%7C%28c%3D%5Fe%28u%2Ct%29%29%2Ce%26%26%28m%3Dtrue%2Ca%3Dn%2Eapply%28l%2Co%29%29%2C%21m%7C%7Cc%7C%7Ci%7C%7C%28o%3Dl%3Dnull%29%2Ca%7D%7Dfunction%20Ut%28n%29%7Breturn%20n%7Dfunction%20Gt%28n%2Ct%2Ce%29%7Bvar%20r%3Dtrue%2Cu%3Dt%26%26bt%28t%29%3Bt%26%26%28e%7C%7Cu%2Elength%29%7C%7C%28null%3D%3De%26%26%28e%3Dt%29%2Co%3DQ%2Ct%3Dn%2Cn%3DJ%2Cu%3Dbt%28t%29%29%2Cfalse%3D%3D%3De%3Fr%3Dfalse%3Awt%28e%29%26%26%22chain%22in%20e%26%26%28r%3De%2Echain%29%3Bvar%20o%3Dn%2Ci%3Ddt%28o%29%3BSt%28u%2Cfunction%28e%29%7Bvar%20u%3Dn%5Be%5D%3Dt%5Be%5D%3Bi%26%26%28o%2Eprototype%5Be%5D%3Dfunction%28%29%7Bvar%20t%3Dthis%2E%5F%5Fchain%5F%5F%2Ce%3Dthis%2E%5F%5Fwrapped%5F%5F%2Ci%3D%5Be%5D%3Bif%28be%2Eapply%28i%2Carguments%29%2Ci%3Du%2Eapply%28n%2Ci%29%2Cr%7C%7Ct%29%7Bif%28e%3D%3D%3Di%26%26wt%28i%29%29return%20this%3B%0Ai%3Dnew%20o%28i%29%2Ci%2E%5F%5Fchain%5F%5F%3Dt%7Dreturn%20i%7D%29%7D%29%7Dfunction%20Ht%28%29%7B%7Dfunction%20Jt%28n%29%7Breturn%20function%28t%29%7Breturn%20t%5Bn%5D%7D%7Dfunction%20Qt%28%29%7Breturn%20this%2E%5F%5Fwrapped%5F%5F%7De%3De%3FY%2Edefaults%28G%2EObject%28%29%2Ce%2CY%2Epick%28G%2CA%29%29%3AG%3Bvar%20Xt%3De%2EArray%2CYt%3De%2EBoolean%2CZt%3De%2EDate%2Cne%3De%2EFunction%2Cte%3De%2EMath%2Cee%3De%2ENumber%2Cre%3De%2EObject%2Cue%3De%2ERegExp%2Coe%3De%2EString%2Cie%3De%2ETypeError%2Cae%3D%5B%5D%2Cfe%3Dre%2Eprototype%2Cle%3De%2E%5F%2Cce%3Dfe%2EtoString%2Cpe%3Due%28%22%5E%22%2Boe%28ce%29%2Ereplace%28%2F%5B%2E%2A%2B%3F%5E%24%7B%7D%28%29%7C%5B%5C%5D%5C%5C%5D%2Fg%2C%22%5C%5C%24%26%22%29%2Ereplace%28%2FtoString%7C%20for%20%5B%5E%5C%5D%5D%2B%2Fg%2C%22%2E%2A%3F%22%29%2B%22%24%22%29%2Cse%3Dte%2Eceil%2Cve%3De%2EclearTimeout%2Che%3Dte%2Efloor%2Cge%3Dne%2Eprototype%2EtoString%2Cye%3Dvt%28ye%3Dre%2EgetPrototypeOf%29%26%26ye%2Cme%3Dfe%2EhasOwnProperty%2Cbe%3Dae%2Epush%2C%5Fe%3De%2EsetTimeout%2Cde%3Dae%2Esplice%2Cwe%3Dae%2Eunshift%2Cje%3Dfunction%28%29%7Btry%7Bvar%20n%3D%7B%7D%2Ct%3Dvt%28t%3Dre%2EdefineProperty%29%26%26t%2Ce%3Dt%28n%2Cn%2Cn%29%26%26t%0A%7Dcatch%28r%29%7B%7Dreturn%20e%7D%28%29%2Cke%3Dvt%28ke%3Dre%2Ecreate%29%26%26ke%2Cxe%3Dvt%28xe%3DXt%2EisArray%29%26%26xe%2CCe%3De%2EisFinite%2COe%3De%2EisNaN%2CNe%3Dvt%28Ne%3Dre%2Ekeys%29%26%26Ne%2CIe%3Dte%2Emax%2CSe%3Dte%2Emin%2CEe%3De%2EparseInt%2CRe%3Dte%2Erandom%2CAe%3D%7B%7D%3BAe%5B%24%5D%3DXt%2CAe%5BT%5D%3DYt%2CAe%5BF%5D%3DZt%2CAe%5BB%5D%3Dne%2CAe%5Bq%5D%3Dre%2CAe%5BW%5D%3Dee%2CAe%5Bz%5D%3Due%2CAe%5BP%5D%3Doe%2CQ%2Eprototype%3DJ%2Eprototype%3Bvar%20De%3DJ%2Esupport%3D%7B%7D%3BDe%2EfuncDecomp%3D%21vt%28e%2Ea%29%26%26E%2Etest%28s%29%2CDe%2EfuncNames%3Dtypeof%20ne%2Ename%3D%3D%22string%22%2CJ%2EtemplateSettings%3D%7Bescape%3A%2F%3C%25%2D%28%5B%5Cs%5CS%5D%2B%3F%29%25%3E%2Fg%2Cevaluate%3A%2F%3C%25%28%5B%5Cs%5CS%5D%2B%3F%29%25%3E%2Fg%2Cinterpolate%3AN%2Cvariable%3A%22%22%2Cimports%3A%7B%5F%3AJ%7D%7D%2Cke%7C%7C%28nt%3Dfunction%28%29%7Bfunction%20n%28%29%7B%7Dreturn%20function%28t%29%7Bif%28wt%28t%29%29%7Bn%2Eprototype%3Dt%3B%0Avar%20r%3Dnew%20n%3Bn%2Eprototype%3Dnull%7Dreturn%20r%7C%7Ce%2EObject%28%29%7D%7D%28%29%29%3Bvar%20%24e%3Dje%3Ffunction%28n%2Ct%29%7BM%2Evalue%3Dt%2Cje%28n%2C%22%5F%5FbindData%5F%5F%22%2CM%29%7D%3AHt%2CTe%3Dxe%7C%7Cfunction%28n%29%7Breturn%20n%26%26typeof%20n%3D%3D%22object%22%26%26typeof%20n%2Elength%3D%3D%22number%22%26%26ce%2Ecall%28n%29%3D%3D%24%7C%7Cfalse%7D%2CFe%3DNe%3Ffunction%28n%29%7Breturn%20wt%28n%29%3FNe%28n%29%3A%5B%5D%7D%3AH%2CBe%3D%7B%22%26%22%3A%22%26amp%3B%22%2C%22%3C%22%3A%22%26lt%3B%22%2C%22%3E%22%3A%22%26gt%3B%22%2C%27%22%27%3A%22%26quot%3B%22%2C%22%27%22%3A%22%26%2339%3B%22%7D%2CWe%3D%5Ft%28Be%29%2Cqe%3Due%28%22%28%22%2BFe%28We%29%2Ejoin%28%22%7C%22%29%2B%22%29%22%2C%22g%22%29%2Cze%3Due%28%22%5B%22%2BFe%28Be%29%2Ejoin%28%22%22%29%2B%22%5D%22%2C%22g%22%29%2CPe%3Dye%3Ffunction%28n%29%7Bif%28%21n%7C%7Cce%2Ecall%28n%29%21%3Dq%29return%20false%3Bvar%20t%3Dn%2EvalueOf%2Ce%3Dvt%28t%29%26%26%28e%3Dye%28t%29%29%26%26ye%28e%29%3Breturn%20e%3Fn%3D%3De%7C%7Cye%28n%29%3D%3De%3Aht%28n%29%0A%7D%3Aht%2CKe%3Dlt%28function%28n%2Ct%2Ce%29%7Bme%2Ecall%28n%2Ce%29%3Fn%5Be%5D%2B%2B%3An%5Be%5D%3D1%7D%29%2CLe%3Dlt%28function%28n%2Ct%2Ce%29%7B%28me%2Ecall%28n%2Ce%29%3Fn%5Be%5D%3An%5Be%5D%3D%5B%5D%29%2Epush%28t%29%7D%29%2CMe%3Dlt%28function%28n%2Ct%2Ce%29%7Bn%5Be%5D%3Dt%7D%29%2CVe%3DRt%2CUe%3Dvt%28Ue%3DZt%2Enow%29%26%26Ue%7C%7Cfunction%28%29%7Breturn%28new%20Zt%29%2EgetTime%28%29%7D%2CGe%3D8%3D%3DEe%28d%2B%2208%22%29%3FEe%3Afunction%28n%2Ct%29%7Breturn%20Ee%28kt%28n%29%3Fn%2Ereplace%28I%2C%22%22%29%3An%2Ct%7C%7C0%29%7D%3Breturn%20J%2Eafter%3Dfunction%28n%2Ct%29%7Bif%28%21dt%28t%29%29throw%20new%20ie%3Breturn%20function%28%29%7Breturn%201%3E%2D%2Dn%3Ft%2Eapply%28this%2Carguments%29%3Avoid%200%7D%7D%2CJ%2Eassign%3DU%2CJ%2Eat%3Dfunction%28n%29%7Bfor%28var%20t%3Darguments%2Ce%3D%2D1%2Cr%3Dut%28t%2Ctrue%2Cfalse%2C1%29%2Ct%3Dt%5B2%5D%26%26t%5B2%5D%5Bt%5B1%5D%5D%3D%3D%3Dn%3F1%3Ar%2Elength%2Cu%3DXt%28t%29%3B%2B%2Be%3Ct%3B%29u%5Be%5D%3Dn%5Br%5Be%5D%5D%3B%0Areturn%20u%7D%2CJ%2Ebind%3DMt%2CJ%2EbindAll%3Dfunction%28n%29%7Bfor%28var%20t%3D1%3Carguments%2Elength%3Fut%28arguments%2Ctrue%2Cfalse%2C1%29%3Abt%28n%29%2Ce%3D%2D1%2Cr%3Dt%2Elength%3B%2B%2Be%3Cr%3B%29%7Bvar%20u%3Dt%5Be%5D%3Bn%5Bu%5D%3Dct%28n%5Bu%5D%2C1%2Cnull%2Cnull%2Cn%29%7Dreturn%20n%7D%2CJ%2EbindKey%3Dfunction%28n%2Ct%29%7Breturn%202%3Carguments%2Elength%3Fct%28t%2C19%2Cp%28arguments%2C2%29%2Cnull%2Cn%29%3Act%28t%2C3%2Cnull%2Cnull%2Cn%29%7D%2CJ%2Echain%3Dfunction%28n%29%7Breturn%20n%3Dnew%20Q%28n%29%2Cn%2E%5F%5Fchain%5F%5F%3Dtrue%2Cn%7D%2CJ%2Ecompact%3Dfunction%28n%29%7Bfor%28var%20t%3D%2D1%2Ce%3Dn%3Fn%2Elength%3A0%2Cr%3D%5B%5D%3B%2B%2Bt%3Ce%3B%29%7Bvar%20u%3Dn%5Bt%5D%3Bu%26%26r%2Epush%28u%29%7Dreturn%20r%7D%2CJ%2Ecompose%3Dfunction%28%29%7Bfor%28var%20n%3Darguments%2Ct%3Dn%2Elength%3Bt%2D%2D%3B%29if%28%21dt%28n%5Bt%5D%29%29throw%20new%20ie%3B%0Areturn%20function%28%29%7Bfor%28var%20t%3Darguments%2Ce%3Dn%2Elength%3Be%2D%2D%3B%29t%3D%5Bn%5Be%5D%2Eapply%28this%2Ct%29%5D%3Breturn%20t%5B0%5D%7D%7D%2CJ%2Econstant%3Dfunction%28n%29%7Breturn%20function%28%29%7Breturn%20n%7D%7D%2CJ%2EcountBy%3DKe%2CJ%2Ecreate%3Dfunction%28n%2Ct%29%7Bvar%20e%3Dnt%28n%29%3Breturn%20t%3FU%28e%2Ct%29%3Ae%7D%2CJ%2EcreateCallback%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Dtypeof%20n%3Bif%28null%3D%3Dn%7C%7C%22function%22%3D%3Dr%29return%20tt%28n%2Ct%2Ce%29%3Bif%28%22object%22%21%3Dr%29return%20Jt%28n%29%3Bvar%20u%3DFe%28n%29%2Co%3Du%5B0%5D%2Ci%3Dn%5Bo%5D%3Breturn%201%21%3Du%2Elength%7C%7Ci%21%3D%3Di%7C%7Cwt%28i%29%3Ffunction%28t%29%7Bfor%28var%20e%3Du%2Elength%2Cr%3Dfalse%3Be%2D%2D%26%26%28r%3Dot%28t%5Bu%5Be%5D%5D%2Cn%5Bu%5Be%5D%5D%2Cnull%2Ctrue%29%29%3B%29%3Breturn%20r%7D%3Afunction%28n%29%7Breturn%20n%3Dn%5Bo%5D%2Ci%3D%3D%3Dn%26%26%280%21%3D%3Di%7C%7C1%2Fi%3D%3D1%2Fn%29%0A%7D%7D%2CJ%2Ecurry%3Dfunction%28n%2Ct%29%7Breturn%20t%3Dtypeof%20t%3D%3D%22number%22%3Ft%3A%2Bt%7C%7Cn%2Elength%2Cct%28n%2C4%2Cnull%2Cnull%2Cnull%2Ct%29%7D%2CJ%2Edebounce%3DVt%2CJ%2Edefaults%3D%5F%2CJ%2Edefer%3Dfunction%28n%29%7Bif%28%21dt%28n%29%29throw%20new%20ie%3Bvar%20t%3Dp%28arguments%2C1%29%3Breturn%20%5Fe%28function%28%29%7Bn%2Eapply%28v%2Ct%29%7D%2C1%29%7D%2CJ%2Edelay%3Dfunction%28n%2Ct%29%7Bif%28%21dt%28n%29%29throw%20new%20ie%3Bvar%20e%3Dp%28arguments%2C2%29%3Breturn%20%5Fe%28function%28%29%7Bn%2Eapply%28v%2Ce%29%7D%2Ct%29%7D%2CJ%2Edifference%3Dfunction%28n%29%7Breturn%20rt%28n%2Cut%28arguments%2Ctrue%2Ctrue%2C1%29%29%7D%2CJ%2Efilter%3DNt%2CJ%2Eflatten%3Dfunction%28n%2Ct%2Ce%2Cr%29%7Breturn%20typeof%20t%21%3D%22boolean%22%26%26null%21%3Dt%26%26%28r%3De%2Ce%3Dtypeof%20t%21%3D%22function%22%26%26r%26%26r%5Bt%5D%3D%3D%3Dn%3Fnull%3At%2Ct%3Dfalse%29%2Cnull%21%3De%26%26%28n%3DRt%28n%2Ce%2Cr%29%29%2Cut%28n%2Ct%29%0A%7D%2CJ%2EforEach%3DSt%2CJ%2EforEachRight%3DEt%2CJ%2EforIn%3Dg%2CJ%2EforInRight%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D%5B%5D%3Bg%28n%2Cfunction%28n%2Ct%29%7Br%2Epush%28t%2Cn%29%7D%29%3Bvar%20u%3Dr%2Elength%3Bfor%28t%3Dtt%28t%2Ce%2C3%29%3Bu%2D%2D%26%26false%21%3D%3Dt%28r%5Bu%2D%2D%5D%2Cr%5Bu%5D%2Cn%29%3B%29%3Breturn%20n%7D%2CJ%2EforOwn%3Dh%2CJ%2EforOwnRight%3Dmt%2CJ%2Efunctions%3Dbt%2CJ%2EgroupBy%3DLe%2CJ%2EindexBy%3DMe%2CJ%2Einitial%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D0%2Cu%3Dn%3Fn%2Elength%3A0%3Bif%28typeof%20t%21%3D%22number%22%26%26null%21%3Dt%29%7Bvar%20o%3Du%3Bfor%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%3Bo%2D%2D%26%26t%28n%5Bo%5D%2Co%2Cn%29%3B%29r%2B%2B%7Delse%20r%3Dnull%3D%3Dt%7C%7Ce%3F1%3At%7C%7Cr%3Breturn%20p%28n%2C0%2CSe%28Ie%280%2Cu%2Dr%29%2Cu%29%29%7D%2CJ%2Eintersection%3Dfunction%28%29%7Bfor%28var%20e%3D%5B%5D%2Cr%3D%2D1%2Cu%3Darguments%2Elength%2Ci%3Da%28%29%2Cf%3Dst%28%29%2Cp%3Df%3D%3D%3Dn%2Cs%3Da%28%29%3B%2B%2Br%3Cu%3B%29%7Bvar%20v%3Darguments%5Br%5D%3B%0A%28Te%28v%29%7C%7Cyt%28v%29%29%26%26%28e%2Epush%28v%29%2Ci%2Epush%28p%26%26v%2Elength%3E%3Db%26%26o%28r%3Fe%5Br%5D%3As%29%29%29%7Dvar%20p%3De%5B0%5D%2Ch%3D%2D1%2Cg%3Dp%3Fp%2Elength%3A0%2Cy%3D%5B%5D%3Bn%3Afor%28%3B%2B%2Bh%3Cg%3B%29%7Bvar%20m%3Di%5B0%5D%2Cv%3Dp%5Bh%5D%3Bif%280%3E%28m%3Ft%28m%2Cv%29%3Af%28s%2Cv%29%29%29%7Bfor%28r%3Du%2C%28m%7C%7Cs%29%2Epush%28v%29%3B%2D%2Dr%3B%29if%28m%3Di%5Br%5D%2C0%3E%28m%3Ft%28m%2Cv%29%3Af%28e%5Br%5D%2Cv%29%29%29continue%20n%3By%2Epush%28v%29%7D%7Dfor%28%3Bu%2D%2D%3B%29%28m%3Di%5Bu%5D%29%26%26c%28m%29%3Breturn%20l%28i%29%2Cl%28s%29%2Cy%7D%2CJ%2Einvert%3D%5Ft%2CJ%2Einvoke%3Dfunction%28n%2Ct%29%7Bvar%20e%3Dp%28arguments%2C2%29%2Cr%3D%2D1%2Cu%3Dtypeof%20t%3D%3D%22function%22%2Co%3Dn%3Fn%2Elength%3A0%2Ci%3DXt%28typeof%20o%3D%3D%22number%22%3Fo%3A0%29%3Breturn%20St%28n%2Cfunction%28n%29%7Bi%5B%2B%2Br%5D%3D%28u%3Ft%3An%5Bt%5D%29%2Eapply%28n%2Ce%29%7D%29%2Ci%7D%2CJ%2Ekeys%3DFe%2CJ%2Emap%3DRt%2CJ%2EmapValues%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D%7B%7D%3B%0Areturn%20t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Ch%28n%2Cfunction%28n%2Ce%2Cu%29%7Br%5Be%5D%3Dt%28n%2Ce%2Cu%29%7D%29%2Cr%7D%2CJ%2Emax%3DAt%2CJ%2Ememoize%3Dfunction%28n%2Ct%29%7Bfunction%20e%28%29%7Bvar%20r%3De%2Ecache%2Cu%3Dt%3Ft%2Eapply%28this%2Carguments%29%3Am%2Barguments%5B0%5D%3Breturn%20me%2Ecall%28r%2Cu%29%3Fr%5Bu%5D%3Ar%5Bu%5D%3Dn%2Eapply%28this%2Carguments%29%7Dif%28%21dt%28n%29%29throw%20new%20ie%3Breturn%20e%2Ecache%3D%7B%7D%2Ce%7D%2CJ%2Emerge%3Dfunction%28n%29%7Bvar%20t%3Darguments%2Ce%3D2%3Bif%28%21wt%28n%29%29return%20n%3Bif%28%22number%22%21%3Dtypeof%20t%5B2%5D%26%26%28e%3Dt%2Elength%29%2C3%3Ce%26%26%22function%22%3D%3Dtypeof%20t%5Be%2D2%5D%29var%20r%3Dtt%28t%5B%2D%2De%2D1%5D%2Ct%5Be%2D%2D%5D%2C2%29%3Belse%202%3Ce%26%26%22function%22%3D%3Dtypeof%20t%5Be%2D1%5D%26%26%28r%3Dt%5B%2D%2De%5D%29%3Bfor%28var%20t%3Dp%28arguments%2C1%2Ce%29%2Cu%3D%2D1%2Co%3Da%28%29%2Ci%3Da%28%29%3B%2B%2Bu%3Ce%3B%29it%28n%2Ct%5Bu%5D%2Cr%2Co%2Ci%29%3B%0Areturn%20l%28o%29%2Cl%28i%29%2Cn%7D%2CJ%2Emin%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20u%3D1%2F0%2Co%3Du%3Bif%28typeof%20t%21%3D%22function%22%26%26e%26%26e%5Bt%5D%3D%3D%3Dn%26%26%28t%3Dnull%29%2Cnull%3D%3Dt%26%26Te%28n%29%29%7Be%3D%2D1%3Bfor%28var%20i%3Dn%2Elength%3B%2B%2Be%3Ci%3B%29%7Bvar%20a%3Dn%5Be%5D%3Ba%3Co%26%26%28o%3Da%29%7D%7Delse%20t%3Dnull%3D%3Dt%26%26kt%28n%29%3Fr%3AJ%2EcreateCallback%28t%2Ce%2C3%29%2CSt%28n%2Cfunction%28n%2Ce%2Cr%29%7Be%3Dt%28n%2Ce%2Cr%29%2Ce%3Cu%26%26%28u%3De%2Co%3Dn%29%7D%29%3Breturn%20o%7D%2CJ%2Eomit%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D%7B%7D%3Bif%28typeof%20t%21%3D%22function%22%29%7Bvar%20u%3D%5B%5D%3Bg%28n%2Cfunction%28n%2Ct%29%7Bu%2Epush%28t%29%7D%29%3Bfor%28var%20u%3Drt%28u%2Cut%28arguments%2Ctrue%2Cfalse%2C1%29%29%2Co%3D%2D1%2Ci%3Du%2Elength%3B%2B%2Bo%3Ci%3B%29%7Bvar%20a%3Du%5Bo%5D%3Br%5Ba%5D%3Dn%5Ba%5D%7D%7Delse%20t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Cg%28n%2Cfunction%28n%2Ce%2Cu%29%7Bt%28n%2Ce%2Cu%29%7C%7C%28r%5Be%5D%3Dn%29%0A%7D%29%3Breturn%20r%7D%2CJ%2Eonce%3Dfunction%28n%29%7Bvar%20t%2Ce%3Bif%28%21dt%28n%29%29throw%20new%20ie%3Breturn%20function%28%29%7Breturn%20t%3Fe%3A%28t%3Dtrue%2Ce%3Dn%2Eapply%28this%2Carguments%29%2Cn%3Dnull%2Ce%29%7D%7D%2CJ%2Epairs%3Dfunction%28n%29%7Bfor%28var%20t%3D%2D1%2Ce%3DFe%28n%29%2Cr%3De%2Elength%2Cu%3DXt%28r%29%3B%2B%2Bt%3Cr%3B%29%7Bvar%20o%3De%5Bt%5D%3Bu%5Bt%5D%3D%5Bo%2Cn%5Bo%5D%5D%7Dreturn%20u%7D%2CJ%2Epartial%3Dfunction%28n%29%7Breturn%20ct%28n%2C16%2Cp%28arguments%2C1%29%29%7D%2CJ%2EpartialRight%3Dfunction%28n%29%7Breturn%20ct%28n%2C32%2Cnull%2Cp%28arguments%2C1%29%29%7D%2CJ%2Epick%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D%7B%7D%3Bif%28typeof%20t%21%3D%22function%22%29for%28var%20u%3D%2D1%2Co%3Dut%28arguments%2Ctrue%2Cfalse%2C1%29%2Ci%3Dwt%28n%29%3Fo%2Elength%3A0%3B%2B%2Bu%3Ci%3B%29%7Bvar%20a%3Do%5Bu%5D%3Ba%20in%20n%26%26%28r%5Ba%5D%3Dn%5Ba%5D%29%0A%7Delse%20t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Cg%28n%2Cfunction%28n%2Ce%2Cu%29%7Bt%28n%2Ce%2Cu%29%26%26%28r%5Be%5D%3Dn%29%7D%29%3Breturn%20r%7D%2CJ%2Epluck%3DVe%2CJ%2Eproperty%3DJt%2CJ%2Epull%3Dfunction%28n%29%7Bfor%28var%20t%3Darguments%2Ce%3D0%2Cr%3Dt%2Elength%2Cu%3Dn%3Fn%2Elength%3A0%3B%2B%2Be%3Cr%3B%29for%28var%20o%3D%2D1%2Ci%3Dt%5Be%5D%3B%2B%2Bo%3Cu%3B%29n%5Bo%5D%3D%3D%3Di%26%26%28de%2Ecall%28n%2Co%2D%2D%2C1%29%2Cu%2D%2D%29%3Breturn%20n%7D%2CJ%2Erange%3Dfunction%28n%2Ct%2Ce%29%7Bn%3D%2Bn%7C%7C0%2Ce%3Dtypeof%20e%3D%3D%22number%22%3Fe%3A%2Be%7C%7C1%2Cnull%3D%3Dt%26%26%28t%3Dn%2Cn%3D0%29%3Bvar%20r%3D%2D1%3Bt%3DIe%280%2Cse%28%28t%2Dn%29%2F%28e%7C%7C1%29%29%29%3Bfor%28var%20u%3DXt%28t%29%3B%2B%2Br%3Ct%3B%29u%5Br%5D%3Dn%2Cn%2B%3De%3Breturn%20u%7D%2CJ%2Ereject%3Dfunction%28n%2Ct%2Ce%29%7Breturn%20t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2CNt%28n%2Cfunction%28n%2Ce%2Cr%29%7Breturn%21t%28n%2Ce%2Cr%29%0A%7D%29%7D%2CJ%2Eremove%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D%2D1%2Cu%3Dn%3Fn%2Elength%3A0%2Co%3D%5B%5D%3Bfor%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%3B%2B%2Br%3Cu%3B%29e%3Dn%5Br%5D%2Ct%28e%2Cr%2Cn%29%26%26%28o%2Epush%28e%29%2Cde%2Ecall%28n%2Cr%2D%2D%2C1%29%2Cu%2D%2D%29%3Breturn%20o%7D%2CJ%2Erest%3Dqt%2CJ%2Eshuffle%3DTt%2CJ%2EsortBy%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D%2D1%2Co%3DTe%28t%29%2Ci%3Dn%3Fn%2Elength%3A0%2Cp%3DXt%28typeof%20i%3D%3D%22number%22%3Fi%3A0%29%3Bfor%28o%7C%7C%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%29%2CSt%28n%2Cfunction%28n%2Ce%2Cu%29%7Bvar%20i%3Dp%5B%2B%2Br%5D%3Df%28%29%3Bo%3Fi%2Em%3DRt%28t%2Cfunction%28t%29%7Breturn%20n%5Bt%5D%7D%29%3A%28i%2Em%3Da%28%29%29%5B0%5D%3Dt%28n%2Ce%2Cu%29%2Ci%2En%3Dr%2Ci%2Eo%3Dn%7D%29%2Ci%3Dp%2Elength%2Cp%2Esort%28u%29%3Bi%2D%2D%3B%29n%3Dp%5Bi%5D%2Cp%5Bi%5D%3Dn%2Eo%2Co%7C%7Cl%28n%2Em%29%2Cc%28n%29%3Breturn%20p%7D%2CJ%2Etap%3Dfunction%28n%2Ct%29%7Breturn%20t%28n%29%2Cn%0A%7D%2CJ%2Ethrottle%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Dtrue%2Cu%3Dtrue%3Bif%28%21dt%28n%29%29throw%20new%20ie%3Breturn%20false%3D%3D%3De%3Fr%3Dfalse%3Awt%28e%29%26%26%28r%3D%22leading%22in%20e%3Fe%2Eleading%3Ar%2Cu%3D%22trailing%22in%20e%3Fe%2Etrailing%3Au%29%2CL%2Eleading%3Dr%2CL%2EmaxWait%3Dt%2CL%2Etrailing%3Du%2CVt%28n%2Ct%2CL%29%7D%2CJ%2Etimes%3Dfunction%28n%2Ct%2Ce%29%7Bn%3D%2D1%3C%28n%3D%2Bn%29%3Fn%3A0%3Bvar%20r%3D%2D1%2Cu%3DXt%28n%29%3Bfor%28t%3Dtt%28t%2Ce%2C1%29%3B%2B%2Br%3Cn%3B%29u%5Br%5D%3Dt%28r%29%3Breturn%20u%7D%2CJ%2EtoArray%3Dfunction%28n%29%7Breturn%20n%26%26typeof%20n%2Elength%3D%3D%22number%22%3Fp%28n%29%3Axt%28n%29%7D%2CJ%2Etransform%3Dfunction%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3DTe%28n%29%3Bif%28null%3D%3De%29if%28u%29e%3D%5B%5D%3Belse%7Bvar%20o%3Dn%26%26n%2Econstructor%3Be%3Dnt%28o%26%26o%2Eprototype%29%7Dreturn%20t%26%26%28t%3DJ%2EcreateCallback%28t%2Cr%2C4%29%2C%28u%3FSt%3Ah%29%28n%2Cfunction%28n%2Cr%2Cu%29%7Breturn%20t%28e%2Cn%2Cr%2Cu%29%0A%7D%29%29%2Ce%7D%2CJ%2Eunion%3Dfunction%28%29%7Breturn%20ft%28ut%28arguments%2Ctrue%2Ctrue%29%29%7D%2CJ%2Euniq%3DPt%2CJ%2Evalues%3Dxt%2CJ%2Ewhere%3DNt%2CJ%2Ewithout%3Dfunction%28n%29%7Breturn%20rt%28n%2Cp%28arguments%2C1%29%29%7D%2CJ%2Ewrap%3Dfunction%28n%2Ct%29%7Breturn%20ct%28t%2C16%2C%5Bn%5D%29%7D%2CJ%2Exor%3Dfunction%28%29%7Bfor%28var%20n%3D%2D1%2Ct%3Darguments%2Elength%3B%2B%2Bn%3Ct%3B%29%7Bvar%20e%3Darguments%5Bn%5D%3Bif%28Te%28e%29%7C%7Cyt%28e%29%29var%20r%3Dr%3Fft%28rt%28r%2Ce%29%2Econcat%28rt%28e%2Cr%29%29%29%3Ae%7Dreturn%20r%7C%7C%5B%5D%7D%2CJ%2Ezip%3DKt%2CJ%2EzipObject%3DLt%2CJ%2Ecollect%3DRt%2CJ%2Edrop%3Dqt%2CJ%2Eeach%3DSt%2CJ%2EeachRight%3DEt%2CJ%2Eextend%3DU%2CJ%2Emethods%3Dbt%2CJ%2Eobject%3DLt%2CJ%2Eselect%3DNt%2CJ%2Etail%3Dqt%2CJ%2Eunique%3DPt%2CJ%2Eunzip%3DKt%2CGt%28J%29%2CJ%2Eclone%3Dfunction%28n%2Ct%2Ce%2Cr%29%7Breturn%20typeof%20t%21%3D%22boolean%22%26%26null%21%3Dt%26%26%28r%3De%2Ce%3Dt%2Ct%3Dfalse%29%2CZ%28n%2Ct%2Ctypeof%20e%3D%3D%22function%22%26%26tt%28e%2Cr%2C1%29%29%0A%7D%2CJ%2EcloneDeep%3Dfunction%28n%2Ct%2Ce%29%7Breturn%20Z%28n%2Ctrue%2Ctypeof%20t%3D%3D%22function%22%26%26tt%28t%2Ce%2C1%29%29%7D%2CJ%2Econtains%3DCt%2CJ%2Eescape%3Dfunction%28n%29%7Breturn%20null%3D%3Dn%3F%22%22%3Aoe%28n%29%2Ereplace%28ze%2Cpt%29%7D%2CJ%2Eevery%3DOt%2CJ%2Efind%3DIt%2CJ%2EfindIndex%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D%2D1%2Cu%3Dn%3Fn%2Elength%3A0%3Bfor%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%3B%2B%2Br%3Cu%3B%29if%28t%28n%5Br%5D%2Cr%2Cn%29%29return%20r%3Breturn%2D1%7D%2CJ%2EfindKey%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Breturn%20t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Ch%28n%2Cfunction%28n%2Ce%2Cu%29%7Breturn%20t%28n%2Ce%2Cu%29%3F%28r%3De%2Cfalse%29%3Avoid%200%7D%29%2Cr%7D%2CJ%2EfindLast%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Breturn%20t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2CEt%28n%2Cfunction%28n%2Ce%2Cu%29%7Breturn%20t%28n%2Ce%2Cu%29%3F%28r%3Dn%2Cfalse%29%3Avoid%200%0A%7D%29%2Cr%7D%2CJ%2EfindLastIndex%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Dn%3Fn%2Elength%3A0%3Bfor%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%3Br%2D%2D%3B%29if%28t%28n%5Br%5D%2Cr%2Cn%29%29return%20r%3Breturn%2D1%7D%2CJ%2EfindLastKey%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Breturn%20t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%2Cmt%28n%2Cfunction%28n%2Ce%2Cu%29%7Breturn%20t%28n%2Ce%2Cu%29%3F%28r%3De%2Cfalse%29%3Avoid%200%7D%29%2Cr%7D%2CJ%2Ehas%3Dfunction%28n%2Ct%29%7Breturn%20n%3Fme%2Ecall%28n%2Ct%29%3Afalse%7D%2CJ%2Eidentity%3DUt%2CJ%2EindexOf%3DWt%2CJ%2EisArguments%3Dyt%2CJ%2EisArray%3DTe%2CJ%2EisBoolean%3Dfunction%28n%29%7Breturn%20true%3D%3D%3Dn%7C%7Cfalse%3D%3D%3Dn%7C%7Cn%26%26typeof%20n%3D%3D%22object%22%26%26ce%2Ecall%28n%29%3D%3DT%7C%7Cfalse%7D%2CJ%2EisDate%3Dfunction%28n%29%7Breturn%20n%26%26typeof%20n%3D%3D%22object%22%26%26ce%2Ecall%28n%29%3D%3DF%7C%7Cfalse%0A%7D%2CJ%2EisElement%3Dfunction%28n%29%7Breturn%20n%26%261%3D%3D%3Dn%2EnodeType%7C%7Cfalse%7D%2CJ%2EisEmpty%3Dfunction%28n%29%7Bvar%20t%3Dtrue%3Bif%28%21n%29return%20t%3Bvar%20e%3Dce%2Ecall%28n%29%2Cr%3Dn%2Elength%3Breturn%20e%3D%3D%24%7C%7Ce%3D%3DP%7C%7Ce%3D%3DD%7C%7Ce%3D%3Dq%26%26typeof%20r%3D%3D%22number%22%26%26dt%28n%2Esplice%29%3F%21r%3A%28h%28n%2Cfunction%28%29%7Breturn%20t%3Dfalse%7D%29%2Ct%29%7D%2CJ%2EisEqual%3Dfunction%28n%2Ct%2Ce%2Cr%29%7Breturn%20ot%28n%2Ct%2Ctypeof%20e%3D%3D%22function%22%26%26tt%28e%2Cr%2C2%29%29%7D%2CJ%2EisFinite%3Dfunction%28n%29%7Breturn%20Ce%28n%29%26%26%21Oe%28parseFloat%28n%29%29%7D%2CJ%2EisFunction%3Ddt%2CJ%2EisNaN%3Dfunction%28n%29%7Breturn%20jt%28n%29%26%26n%21%3D%2Bn%7D%2CJ%2EisNull%3Dfunction%28n%29%7Breturn%20null%3D%3D%3Dn%7D%2CJ%2EisNumber%3Djt%2CJ%2EisObject%3Dwt%2CJ%2EisPlainObject%3DPe%2CJ%2EisRegExp%3Dfunction%28n%29%7Breturn%20n%26%26typeof%20n%3D%3D%22object%22%26%26ce%2Ecall%28n%29%3D%3Dz%7C%7Cfalse%0A%7D%2CJ%2EisString%3Dkt%2CJ%2EisUndefined%3Dfunction%28n%29%7Breturn%20typeof%20n%3D%3D%22undefined%22%7D%2CJ%2ElastIndexOf%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Dn%3Fn%2Elength%3A0%3Bfor%28typeof%20e%3D%3D%22number%22%26%26%28r%3D%280%3Ee%3FIe%280%2Cr%2Be%29%3ASe%28e%2Cr%2D1%29%29%2B1%29%3Br%2D%2D%3B%29if%28n%5Br%5D%3D%3D%3Dt%29return%20r%3Breturn%2D1%7D%2CJ%2Emixin%3DGt%2CJ%2EnoConflict%3Dfunction%28%29%7Breturn%20e%2E%5F%3Dle%2Cthis%7D%2CJ%2Enoop%3DHt%2CJ%2Enow%3DUe%2CJ%2EparseInt%3DGe%2CJ%2Erandom%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Dnull%3D%3Dn%2Cu%3Dnull%3D%3Dt%3Breturn%20null%3D%3De%26%26%28typeof%20n%3D%3D%22boolean%22%26%26u%3F%28e%3Dn%2Cn%3D1%29%3Au%7C%7Ctypeof%20t%21%3D%22boolean%22%7C%7C%28e%3Dt%2Cu%3Dtrue%29%29%2Cr%26%26u%26%26%28t%3D1%29%2Cn%3D%2Bn%7C%7C0%2Cu%3F%28t%3Dn%2Cn%3D0%29%3At%3D%2Bt%7C%7C0%2Ce%7C%7Cn%251%7C%7Ct%251%3F%28e%3DRe%28%29%2CSe%28n%2Be%2A%28t%2Dn%2BparseFloat%28%221e%2D%22%2B%28%28e%2B%22%22%29%2Elength%2D1%29%29%29%2Ct%29%29%3Aat%28n%2Ct%29%0A%7D%2CJ%2Ereduce%3DDt%2CJ%2EreduceRight%3D%24t%2CJ%2Eresult%3Dfunction%28n%2Ct%29%7Bif%28n%29%7Bvar%20e%3Dn%5Bt%5D%3Breturn%20dt%28e%29%3Fn%5Bt%5D%28%29%3Ae%7D%7D%2CJ%2ErunInContext%3Ds%2CJ%2Esize%3Dfunction%28n%29%7Bvar%20t%3Dn%3Fn%2Elength%3A0%3Breturn%20typeof%20t%3D%3D%22number%22%3Ft%3AFe%28n%29%2Elength%7D%2CJ%2Esome%3DFt%2CJ%2EsortedIndex%3Dzt%2CJ%2Etemplate%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3DJ%2EtemplateSettings%3Bn%3Doe%28n%7C%7C%22%22%29%2Ce%3D%5F%28%7B%7D%2Ce%2Cr%29%3Bvar%20u%2Co%3D%5F%28%7B%7D%2Ce%2Eimports%2Cr%2Eimports%29%2Cr%3DFe%28o%29%2Co%3Dxt%28o%29%2Ca%3D0%2Cf%3De%2Einterpolate%7C%7CS%2Cl%3D%22%5F%5Fp%2B%3D%27%22%2Cf%3Due%28%28e%2Eescape%7C%7CS%29%2Esource%2B%22%7C%22%2Bf%2Esource%2B%22%7C%22%2B%28f%3D%3D%3DN%3Fx%3AS%29%2Esource%2B%22%7C%22%2B%28e%2Eevaluate%7C%7CS%29%2Esource%2B%22%7C%24%22%2C%22g%22%29%3Bn%2Ereplace%28f%2Cfunction%28t%2Ce%2Cr%2Co%2Cf%2Cc%29%7Breturn%20r%7C%7C%28r%3Do%29%2Cl%2B%3Dn%2Eslice%28a%2Cc%29%2Ereplace%28R%2Ci%29%2Ce%26%26%28l%2B%3D%22%27%2B%5F%5Fe%28%22%2Be%2B%22%29%2B%27%22%29%2Cf%26%26%28u%3Dtrue%2Cl%2B%3D%22%27%3B%22%2Bf%2B%22%3B%5Cn%5F%5Fp%2B%3D%27%22%29%2Cr%26%26%28l%2B%3D%22%27%2B%28%28%5F%5Ft%3D%28%22%2Br%2B%22%29%29%3D%3Dnull%3F%27%27%3A%5F%5Ft%29%2B%27%22%29%2Ca%3Dc%2Bt%2Elength%2Ct%0A%7D%29%2Cl%2B%3D%22%27%3B%22%2Cf%3De%3De%2Evariable%2Cf%7C%7C%28e%3D%22obj%22%2Cl%3D%22with%28%22%2Be%2B%22%29%7B%22%2Bl%2B%22%7D%22%29%2Cl%3D%28u%3Fl%2Ereplace%28w%2C%22%22%29%3Al%29%2Ereplace%28j%2C%22%241%22%29%2Ereplace%28k%2C%22%241%3B%22%29%2Cl%3D%22function%28%22%2Be%2B%22%29%7B%22%2B%28f%3F%22%22%3Ae%2B%22%7C%7C%28%22%2Be%2B%22%3D%7B%7D%29%3B%22%29%2B%22var%20%5F%5Ft%2C%5F%5Fp%3D%27%27%2C%5F%5Fe%3D%5F%2Eescape%22%2B%28u%3F%22%2C%5F%5Fj%3DArray%2Eprototype%2Ejoin%3Bfunction%20print%28%29%7B%5F%5Fp%2B%3D%5F%5Fj%2Ecall%28arguments%2C%27%27%29%7D%22%3A%22%3B%22%29%2Bl%2B%22return%20%5F%5Fp%7D%22%3Btry%7Bvar%20c%3Dne%28r%2C%22return%20%22%2Bl%29%2Eapply%28v%2Co%29%7Dcatch%28p%29%7Bthrow%20p%2Esource%3Dl%2Cp%7Dreturn%20t%3Fc%28t%29%3A%28c%2Esource%3Dl%2Cc%29%7D%2CJ%2Eunescape%3Dfunction%28n%29%7Breturn%20null%3D%3Dn%3F%22%22%3Aoe%28n%29%2Ereplace%28qe%2Cgt%29%7D%2CJ%2EuniqueId%3Dfunction%28n%29%7Bvar%20t%3D%2B%2By%3Breturn%20oe%28null%3D%3Dn%3F%22%22%3An%29%2Bt%0A%7D%2CJ%2Eall%3DOt%2CJ%2Eany%3DFt%2CJ%2Edetect%3DIt%2CJ%2EfindWhere%3DIt%2CJ%2Efoldl%3DDt%2CJ%2Efoldr%3D%24t%2CJ%2Einclude%3DCt%2CJ%2Einject%3DDt%2CGt%28function%28%29%7Bvar%20n%3D%7B%7D%3Breturn%20h%28J%2Cfunction%28t%2Ce%29%7BJ%2Eprototype%5Be%5D%7C%7C%28n%5Be%5D%3Dt%29%7D%29%2Cn%7D%28%29%2Cfalse%29%2CJ%2Efirst%3DBt%2CJ%2Elast%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3D0%2Cu%3Dn%3Fn%2Elength%3A0%3Bif%28typeof%20t%21%3D%22number%22%26%26null%21%3Dt%29%7Bvar%20o%3Du%3Bfor%28t%3DJ%2EcreateCallback%28t%2Ce%2C3%29%3Bo%2D%2D%26%26t%28n%5Bo%5D%2Co%2Cn%29%3B%29r%2B%2B%7Delse%20if%28r%3Dt%2Cnull%3D%3Dr%7C%7Ce%29return%20n%3Fn%5Bu%2D1%5D%3Av%3Breturn%20p%28n%2CIe%280%2Cu%2Dr%29%29%7D%2CJ%2Esample%3Dfunction%28n%2Ct%2Ce%29%7Breturn%20n%26%26typeof%20n%2Elength%21%3D%22number%22%26%26%28n%3Dxt%28n%29%29%2Cnull%3D%3Dt%7C%7Ce%3Fn%3Fn%5Bat%280%2Cn%2Elength%2D1%29%5D%3Av%3A%28n%3DTt%28n%29%2Cn%2Elength%3DSe%28Ie%280%2Ct%29%2Cn%2Elength%29%2Cn%29%0A%7D%2CJ%2Etake%3DBt%2CJ%2Ehead%3DBt%2Ch%28J%2Cfunction%28n%2Ct%29%7Bvar%20e%3D%22sample%22%21%3D%3Dt%3BJ%2Eprototype%5Bt%5D%7C%7C%28J%2Eprototype%5Bt%5D%3Dfunction%28t%2Cr%29%7Bvar%20u%3Dthis%2E%5F%5Fchain%5F%5F%2Co%3Dn%28this%2E%5F%5Fwrapped%5F%5F%2Ct%2Cr%29%3Breturn%20u%7C%7Cnull%21%3Dt%26%26%28%21r%7C%7Ce%26%26typeof%20t%3D%3D%22function%22%29%3Fnew%20Q%28o%2Cu%29%3Ao%7D%29%7D%29%2CJ%2EVERSION%3D%222%2E4%2E1%22%2CJ%2Eprototype%2Echain%3Dfunction%28%29%7Breturn%20this%2E%5F%5Fchain%5F%5F%3Dtrue%2Cthis%7D%2CJ%2Eprototype%2EtoString%3Dfunction%28%29%7Breturn%20oe%28this%2E%5F%5Fwrapped%5F%5F%29%7D%2CJ%2Eprototype%2Evalue%3DQt%2CJ%2Eprototype%2EvalueOf%3DQt%2CSt%28%5B%22join%22%2C%22pop%22%2C%22shift%22%5D%2Cfunction%28n%29%7Bvar%20t%3Dae%5Bn%5D%3BJ%2Eprototype%5Bn%5D%3Dfunction%28%29%7Bvar%20n%3Dthis%2E%5F%5Fchain%5F%5F%2Ce%3Dt%2Eapply%28this%2E%5F%5Fwrapped%5F%5F%2Carguments%29%3B%0Areturn%20n%3Fnew%20Q%28e%2Cn%29%3Ae%7D%7D%29%2CSt%28%5B%22push%22%2C%22reverse%22%2C%22sort%22%2C%22unshift%22%5D%2Cfunction%28n%29%7Bvar%20t%3Dae%5Bn%5D%3BJ%2Eprototype%5Bn%5D%3Dfunction%28%29%7Breturn%20t%2Eapply%28this%2E%5F%5Fwrapped%5F%5F%2Carguments%29%2Cthis%7D%7D%29%2CSt%28%5B%22concat%22%2C%22slice%22%2C%22splice%22%5D%2Cfunction%28n%29%7Bvar%20t%3Dae%5Bn%5D%3BJ%2Eprototype%5Bn%5D%3Dfunction%28%29%7Breturn%20new%20Q%28t%2Eapply%28this%2E%5F%5Fwrapped%5F%5F%2Carguments%29%2Cthis%2E%5F%5Fchain%5F%5F%29%7D%7D%29%2CJ%7Dvar%20v%2Ch%3D%5B%5D%2Cg%3D%5B%5D%2Cy%3D0%2Cm%3D%2Bnew%20Date%2B%22%22%2Cb%3D75%2C%5F%3D40%2Cd%3D%22%20%5Ct%5Cx0B%5Cf%5Cxa0%5Cufeff%5Cn%5Cr%5Cu2028%5Cu2029%5Cu1680%5Cu180e%5Cu2000%5Cu2001%5Cu2002%5Cu2003%5Cu2004%5Cu2005%5Cu2006%5Cu2007%5Cu2008%5Cu2009%5Cu200a%5Cu202f%5Cu205f%5Cu3000%22%2Cw%3D%2F%5Cb%5F%5Fp%5C%2B%3D%27%27%3B%2Fg%2Cj%3D%2F%5Cb%28%5F%5Fp%5C%2B%3D%29%27%27%5C%2B%2Fg%2Ck%3D%2F%28%5F%5Fe%5C%28%2E%2A%3F%5C%29%7C%5Cb%5F%5Ft%5C%29%29%5C%2B%27%27%3B%2Fg%2Cx%3D%2F%5C%24%5C%7B%28%5B%5E%5C%5C%7D%5D%2A%28%3F%3A%5C%5C%2E%5B%5E%5C%5C%7D%5D%2A%29%2A%29%5C%7D%2Fg%2CC%3D%2F%5Cw%2A%24%2F%2CO%3D%2F%5E%5Cs%2Afunction%5B%20%5Cn%5Cr%5Ct%5D%2B%5Cw%2F%2CN%3D%2F%3C%25%3D%28%5B%5Cs%5CS%5D%2B%3F%29%25%3E%2Fg%2CI%3DRegExp%28%22%5E%5B%22%2Bd%2B%22%5D%2A0%2B%28%3F%3D%2E%24%29%22%29%2CS%3D%2F%28%24%5E%29%2F%2CE%3D%2F%5Cbthis%5Cb%2F%2CR%3D%2F%5B%27%5Cn%5Cr%5Ct%5Cu2028%5Cu2029%5C%5C%5D%2Fg%2CA%3D%22Array%20Boolean%20Date%20Function%20Math%20Number%20Object%20RegExp%20String%20%5F%20attachEvent%20clearTimeout%20isFinite%20isNaN%20parseInt%20setTimeout%22%2Esplit%28%22%20%22%29%2CD%3D%22%5Bobject%20Arguments%5D%22%2C%24%3D%22%5Bobject%20Array%5D%22%2CT%3D%22%5Bobject%20Boolean%5D%22%2CF%3D%22%5Bobject%20Date%5D%22%2CB%3D%22%5Bobject%20Function%5D%22%2CW%3D%22%5Bobject%20Number%5D%22%2Cq%3D%22%5Bobject%20Object%5D%22%2Cz%3D%22%5Bobject%20RegExp%5D%22%2CP%3D%22%5Bobject%20String%5D%22%2CK%3D%7B%7D%3B%0AK%5BB%5D%3Dfalse%2CK%5BD%5D%3DK%5B%24%5D%3DK%5BT%5D%3DK%5BF%5D%3DK%5BW%5D%3DK%5Bq%5D%3DK%5Bz%5D%3DK%5BP%5D%3Dtrue%3Bvar%20L%3D%7Bleading%3Afalse%2CmaxWait%3A0%2Ctrailing%3Afalse%7D%2CM%3D%7Bconfigurable%3Afalse%2Cenumerable%3Afalse%2Cvalue%3Anull%2Cwritable%3Afalse%7D%2CV%3D%7B%22boolean%22%3Afalse%2C%22function%22%3Atrue%2Cobject%3Atrue%2Cnumber%3Afalse%2Cstring%3Afalse%2Cundefined%3Afalse%7D%2CU%3D%7B%22%5C%5C%22%3A%22%5C%5C%22%2C%22%27%22%3A%22%27%22%2C%22%5Cn%22%3A%22n%22%2C%22%5Cr%22%3A%22r%22%2C%22%5Ct%22%3A%22t%22%2C%22%5Cu2028%22%3A%22u2028%22%2C%22%5Cu2029%22%3A%22u2029%22%7D%2CG%3DV%5Btypeof%20window%5D%26%26window%7C%7Cthis%2CH%3DV%5Btypeof%20exports%5D%26%26exports%26%26%21exports%2EnodeType%26%26exports%2CJ%3DV%5Btypeof%20module%5D%26%26module%26%26%21module%2EnodeType%26%26module%2CQ%3DJ%26%26J%2Eexports%3D%3D%3DH%26%26H%2CX%3DV%5Btypeof%20global%5D%26%26global%3B%21X%7C%7CX%2Eglobal%21%3D%3DX%26%26X%2Ewindow%21%3D%3DX%7C%7C%28G%3DX%29%3B%0Avar%20Y%3Ds%28%29%3Btypeof%20define%3D%3D%22function%22%26%26typeof%20define%2Eamd%3D%3D%22object%22%26%26define%2Eamd%3F%28G%2E%5F%3DY%2C%20define%28function%28%29%7Breturn%20Y%7D%29%29%3AH%26%26J%3FQ%3F%28J%2Eexports%3DY%29%2E%5F%3DY%3AH%2E%5F%3DY%3AG%2E%5F%3DY%7D%29%2Ecall%28this%29%3B"></script>
<link href="data:text/css,%2F%2A%20%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%0A%20%2A%20CSS3%20GITHUB%20BUTTONS%20%28Nicolas%20Gallagher%29%0A%20%2A%20Licensed%20under%20Unlicense%0A%20%2A%20http%3A%2F%2Fgithub%2Ecom%2Fnecolas%2Fcss3%2Dgithub%2Dbuttons%0A%20%2A%20%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%20%2A%2F%0A%0A%0A%2F%2A%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20%20%20Base%20Button%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%20%7B%0A%20%20%20%20position%3A%20relative%3B%0A%20%20%20%20overflow%3A%20visible%3B%0A%20%20%20%20display%3A%20inline%2Dblock%3B%0A%20%20%20%20padding%3A%200%2E5em%201em%3B%0A%20%20%20%20border%3A%201px%20solid%20%23d4d4d4%3B%0A%20%20%20%20margin%3A%200%3B%0A%20%20%20%20text%2Ddecoration%3A%20none%3B%0A%20%20%20%20text%2Dalign%3A%20center%3B%0A%20%20%20%20text%2Dshadow%3A%201px%201px%200%20%23fff%3B%0A%20%20%20%20font%3A11px%2Fnormal%20sans%2Dserif%3B%0A%20%20%20%20color%3A%20%23333%3B%0A%20%20%20%20white%2Dspace%3A%20nowrap%3B%0A%20%20%20%20cursor%3A%20pointer%3B%0A%20%20%20%20outline%3A%20none%3B%0A%20%20%20%20background%2Dcolor%3A%20%23ececec%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dwebkit%2Dgradient%28linear%2C%200%200%2C%200%20100%25%2C%20from%28%23f4f4f4%29%2C%20to%28%23ececec%29%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dmoz%2Dlinear%2Dgradient%28%23f4f4f4%2C%20%23ececec%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dms%2Dlinear%2Dgradient%28%23f4f4f4%2C%20%23ececec%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Do%2Dlinear%2Dgradient%28%23f4f4f4%2C%20%23ececec%29%3B%0A%20%20%20%20background%2Dimage%3A%20linear%2Dgradient%28%23f4f4f4%2C%20%23ececec%29%3B%0A%20%20%20%20%2Dmoz%2Dbackground%2Dclip%3A%20padding%3B%20%2F%2A%20for%20Firefox%203%2E6%20%2A%2F%0A%20%20%20%20background%2Dclip%3A%20padding%2Dbox%3B%0A%20%20%20%20border%2Dradius%3A%200%2E2em%3B%0A%20%20%20%20%2F%2A%20IE%20hacks%20%2A%2F%0A%20%20%20%20zoom%3A%201%3B%0A%20%20%20%20%2Adisplay%3A%20inline%3B%0A%7D%0A%0A%2Ebutton%3Ahover%2C%0A%2Ebutton%3Afocus%2C%0A%2Ebutton%3Aactive%2C%0A%2Ebutton%2Eactive%20%7B%0A%20%20%20%20border%2Dcolor%3A%20%233072b3%3B%0A%20%20%20%20border%2Dbottom%2Dcolor%3A%20%232a65a0%3B%0A%20%20%20%20text%2Ddecoration%3A%20none%3B%0A%20%20%20%20text%2Dshadow%3A%20%2D1px%20%2D1px%200%20rgba%280%2C0%2C0%2C0%2E3%29%3B%0A%20%20%20%20color%3A%20%23fff%3B%0A%20%20%20%20background%2Dcolor%3A%20%233c8dde%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dwebkit%2Dgradient%28linear%2C%200%200%2C%200%20100%25%2C%20from%28%23599bdc%29%2C%20to%28%233072b3%29%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dmoz%2Dlinear%2Dgradient%28%23599bdc%2C%20%233072b3%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Do%2Dlinear%2Dgradient%28%23599bdc%2C%20%233072b3%29%3B%0A%20%20%20%20background%2Dimage%3A%20linear%2Dgradient%28%23599bdc%2C%20%233072b3%29%3B%0A%7D%0A%0A%2Ebutton%3Aactive%2C%0A%2Ebutton%2Eactive%20%7B%0A%20%20%20%20border%2Dcolor%3A%20%232a65a0%3B%0A%20%20%20%20border%2Dbottom%2Dcolor%3A%20%233884cd%3B%0A%20%20%20%20background%2Dcolor%3A%20%233072b3%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dwebkit%2Dgradient%28linear%2C%200%200%2C%200%20100%25%2C%20from%28%233072b3%29%2C%20to%28%23599bdc%29%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dmoz%2Dlinear%2Dgradient%28%233072b3%2C%20%23599bdc%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dms%2Dlinear%2Dgradient%28%233072b3%2C%20%23599bdc%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Do%2Dlinear%2Dgradient%28%233072b3%2C%20%23599bdc%29%3B%0A%20%20%20%20background%2Dimage%3A%20linear%2Dgradient%28%233072b3%2C%20%23599bdc%29%3B%0A%7D%0A%0A%2F%2A%20overrides%20extra%20padding%20on%20button%20elements%20in%20Firefox%20%2A%2F%0A%2Ebutton%3A%3A%2Dmoz%2Dfocus%2Dinner%20%7B%0A%20%20%20%20padding%3A%200%3B%0A%20%20%20%20border%3A%200%3B%0A%7D%0A%0A%0A%2F%2A%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20%20%20Button%20icons%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Eicon%3Abefore%20%7B%0A%20%20%20%20content%3A%20%22%22%3B%0A%20%20%20%20position%3A%20relative%3B%0A%20%20%20%20top%3A%201px%3B%0A%20%20%20%20float%3Aleft%3B%0A%20%20%20%20width%3A%2012px%3B%0A%20%20%20%20height%3A%2012px%3B%0A%20%20%20%20margin%3A%200%200%2E75em%200%20%2D0%2E25em%3B%0A%20%20%20%20background%3A%20url%28data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAABgAAAF0CAYAAAA5NvltAAAPM0lEQVR42u1d7ZHjOA7Vj6vanwpBISgEheAQFIJCUAgKgSE4BIbAEBSCQtDZfaTn6REAyZu2e3drVMUaj1uNJ4EkAOKruy6%2F%2BsfwjxHiZ%2FM6z7N%2FDP8Y4fm5dH8fCZ9xmCCR%2BJNwukwQJm6CCMRNEI24CGIQF0FKxC8gFcQzkBriL5BK4i%2BQJ4CjpwzG%2F93jlxw9ZTD%2B7xKbHPDZA0EPLHQwBy6xIC7RdHlgoZMmuhMAOm0VxX8vAPgz7ZIArI2WAZSuPwD%2FYoC3LtO3brS3i4q3C7u3i%2Bu3K5yPqMyPKH0GaTFbQi3xTlr3lQCuhfhr3VcSz1RkrV2kskmZZJVNEvG9kfjeQjwBeB7G8tyjLLqMVlFxNoqK8yMA1g5uYVHQWPT2FfSjIN%2B60T4iKiQdXQPiWoSdqxXXQPzvPdG%2FDeKFEQyl74Vhqs6z0Ww5W82WtwO8nUU%2Frtm%2BfZm%2BdaN9v6h4Kp13juL1n7%2F%2B6h8jPMb3S1cgfsbxffpBIP4coYH4a6M9iblIrLeIp5%2FzpJrLNRJHIkMFcSQymHtBIHZqxCNAaDk6aewQiVccn%2BS9UOL5t4gIAlGJKyB1IiKCuBJxAnEm8beLik%2FJIk16zo9xPMaY3taSno%2F%2Fz49xPMblfk3%2Bz%2FD9F0h8KlH%2BR%2BLp%2BgJJAJIGWwSdfIsA0vJchD1xSwA1zpAZFkSNM2RGFpVAZlxxFbs5uz9di3LS7KVfUNhyOcri%2FXONKwfeYK4Rdun%2BWXlyyejSiO8SSAI4BJ5Lc7JEgIN5rszJkgBGAJkVI8zBKhoBZFaEn%2BM5eILcFEtvEVbRE%2BSmCL%2Fs%2FtqT%2Flqp0dK1voDIEatZ2s%2FPKxGxLG2fQBBAuiZcAOyHENg0ZTuaADyxZSKBdwEg1%2FIKAL%2BkKgFswJ4ZAJ574y4AbMCeGQCee%2BPewqI0ybUsEif5D8DPA6zCcBpAXJY8HAO8XVRc3jARitdqsK7LWPG%2FN8juT7u1BDBFWfS1W0sAcS5WJmoBrDAFawXAr89EVLsygIJhnAHMoNGkzxeAKHdmMAIunyUAD5E%2F6TMDeIj8ZZ9LLBqTwVvDoqhCx99h0a2RRbcWFm1R%2BdeyaIvK%2F7OryCtyCIcHAK%2FIIRweAVoCFE3X82Q5PsauHMSf34%2FCitkVejuvpg6IexrpzLwTwK7YREnK7gzwRVw5NyeQniSoVyY2gfQMEBSALf58IoCgAGzx55PEohAJro%2BxwKn%2FjN%2FNxKIQCa7RVO9Rm70sb2OSn4BHHOlNNmOSQ7TmDniTjVmSnh6dVPOTRRHoFDbTQmfnZN0dmXZLjr%2Fo9VqR93FlnYLKdNHrtSLvcaMxwCpM9qi8gSg28BQkAYTIlkOYl00ACOCj4CubAw%2FEDth0W1pFRl7LAZtuw%2FMbO6QSyK0hDfGUzmx8DdGKO8jL4uLPmPgQJ%2Figt%2Fia9E5QkQcQTQoHvxulSSTWHHy6SU9%2BGIpnBZAhPvlhrKAVQIaOjVswwLwA4iTjlgUggLjkSjgEG5Ul5td9SRwIy9XTd6%2F7JGJSVsJFZQoA7MrxrJOlPK%2FAqVkKgBdcOS8AiUVSTNliURb1wPucsoL62knmxDGe5Lcv07dvtI%2BIChR4A0jUoULgDQAwaETHqAdYXbr4XUADLLIoCOrSxe%2FChUUVcZyLaVObBocASwXAUnDK8rUgz50U7RPYNcDkZtE%2BgV1Dx08qzM%2Fl51J6jyCXLtY1EjgEFWoBSCIjA3gvi94%2ByZ9apu%2FdaG8VFZ%2BKoy1CHAHHHSVqZMNh8P%2BOb7MIegDHTgpnEfQAjp0VzsEKxUjmuMMpZqxI5ni5lu8VroQdJMG9YvL3Vl%2BFb%2FRV%2BFaAvRGg6Q1wDooA0hw4CAihh2UTVlHasX1cUehh2axVFGr2AayiULsPZsptnGBI5spMsmeCoYqWSbN%2FDA%2B7bf%2FUXPEwfmrhW8uNVnP%2FE%2BDeCHCvBoj6%2BKgFiKvqqAKgLJGt9AsUKLXv5xQU1h2lFBTzfiLuhMwci7gT8ixM4jP7Jyimz8Rn9k8wQEC7CLwtNwWAg9MH%2Byxe98envXgfo5fr4tYUkga8EN663h8JJVNlSZZE%2FD691RStOtzFKW4%2FAEB6qylaG5enPylTLfteyErQclsuWQmJWJYVxd8Ti7TsnGtexSfsop5SgA6IgBwkyntywCbFMgt%2Bu9e%2BcA3ufS62Kl3u%2FfGDTwAsDQBL5eEjO4TUzIN2VDL5j9e9YFWI2kuzKmpTot9SLrZ3FdVEALLXVBNJTtqSSc%2B%2BI9Ok7yqCpSWQscUecrVp0LCqXAvxqjRo6XTfQrwIouwHV0N8g8iTCELEN4g85SBA%2FKDA0ATKX9rJBwWGJhDZTnryXjHEXm9CT65twF9vgkrfmJtkK02o9AsZI%2B71dmymKwDFFBM1%2FMUAaZJrAdIktwB4MsJKAJ6MMBkg%2FrvG4OkO%2FxcB4HS5x7HizyQAa0gAzflF6Cj3ZMosBacURwWXGp0QyM2%2FFHRCIDe%2FCLJ0eT3gqIRi0APpJB1h%2BSUmiH4gyzSZNMHcDGI8mfTyBCCYbKbp5emSdhW%2F14iH%2BNQTeAEu4TCh%2FmAAEMcHFCaulRMPCnGtnHiQiN%2BA9ympZul%2B5V4z8Rvw3mMaBCfyBcwj0hxVwpOvNcl7iTiyRHPnIHG8VHcOsgIrqy1R7OHJ91KfCjGnsQBQLXPYPaDKIMkfbcmgS5FJjQxigJIMkgBMGSQAmDJIAlhh9WTnBgFgzXKJrueGC8AKvHdKdhrOwwq8d1J2GgPUHP4QoOr8xwDsM70IOgGAfaYs6DKAFZbqCrt4VQBWWKoreF3WEkBKg54rASaqvVEBNmUvbgrAVshUywCOSIy974cCcECWGnrfDwlgLqyimQDmUqmStNH%2ByKIflEWCn60kizpBNv2RRX9k0T9WFikpV7uQxNQbsbNdSGK6NMSYBfemj7v4kv%2BViqoEj4uPu%2FiQ6nCw3iaQ0dt31%2BLPk%2BptAhq9UQjObJseXX3zhROesqqymn2kW4PxG7TlalnXvtG6ruphZyYKdOWCLCkH%2BDwr2j1swmHQAtj4MFgCwAPiUQGAB8Qs73qhFTR219LVS%2BEVnyQhJQgN4lNKmPTEewexfy8kTHrivYOQ1%2BUgvlHUaddcOJEVG0WddsuFIyVV8tIdDV%2BRE0paR21SDzrO7lJKKIfZz1%2BNwnYrJdR1cu%2BoVdqE8OROSWrNNqHodMLkGS312UqekU791q7OTv2l9B%2FpDfqWN1B82NkbYN4vazAnxNIw79fRpsvmhpOKcdPh%2FwclqRg33cHpP0jcA7FD0slE3AOxQ9PJuO7PUniL1v1ZE97K%2BlIUJGbWl6JGPMy1gTkAqSP%2Br2hK8tGQu9RHMBgA4Sz09CoZXplOtgwvTSdLpmPf5e0kuPDTkQ%2B113Qynm4cbLqd5I9Un%2Bxg0%2B2kk9XKUtfJTQvFylIjB9ssXe0FkW1V9%2FZCIs2%2FpXT1%2FIlWZ%2F%2FcmH4sF7jEMo30Q%2FS0YCyz7ObnaKySgthJ0VhxDlK0m5LHZortc0x%2FIgU0c8Ir8zzEJ58JCGuVHckgT4RnkqhOyqVYjTCwlONlhYHd%2B1n0O5MMDsJskq1lmnIcQ0xzKBkMKccxxM%2Fft9HOvK9X026u2cXtooJ0gtQD3jojezqnNf%2FJDl9xAC%2F6MVjZO8uVICh7Z7kSssZUgp5WiUsStoZ4VxFyd4oI9y3EgxIV14i%2FjLK3Eu9aiEv51iXiGHIvEseQey3xTliCrpBEyU2qXMkDyeZ7qXEtm%2B9F92ZV%2BqfhdbR9pyi%2FY2o6tjDwKVVdPBrlZWMeAhXXMxoUHh6khw9IS8fBZWN48OglgNT8YhR0wyIAZDmmlHSfAbzKAyChLJUIrALACWoynXom%2BCwCBLAmnsRvBYAA1sQUE2lUAE8VFCNM%2BCQAeDoyoZNkkgAGILhwmYwAMFBw9FImkwHAU6OhdddcDvDUYr61CEDW3EEdZ7SYMnqB%2BxqAVKK0Wk4TwXcq3i9aYqlUuAYA1v%2FQArCW3D58ZLVEUEZcsrQNWVbM8foDYANAVmwanvTB5eeay0BzMXQVmbJmnX5NF6y3A3D3q53abF1%2BbhQ8YxTEcybzn2X6gwAf8V0bJ81LNZ11yD7zZvM5QFSZK5VnBDa8KI6zUnlGyAyvSHwzNthN0Mebsb9uFwAyG%2BdoDyULYxbmaqFyvdtJ3YsZIO3ekdg1K4sh7V5uMTGLKtPqaacAFJMFJIC7spp8FHIMcC8kDtgsIkNsL7GIDLG9NMkj9VNbCpM8Ul3m0rJMN2mjGct0q9loaYzSJAsbLY3s%2Fo6Uiys1aSPl4s5SkzalZ8uOXkgluZ5LAaYSUGLPoTXIE1bMSqfMTVvnW1w1fRyr5hg8oSEeRJ9WqxbtpC58KzhjD6EZwEnRWMy3O7I3iYRWmosQ32SC7yYgtJ7Cn%2B87r%2B3AJwRIdeEoRQOp0B0AklJBKRpIhe7MIhefGk%2BXKzZliHrhpLYeeLpcKVvkJnVC7OF8fNCkOyHHt4fz8UGT%2FvK%2BD0KngQCtL0di0yB0GgiQJfgSeukNRmorhE%2B9IStT5g21FcKn3nC1sY%2FCQ2eBiX4WwPj1JPsnWEEe30iLBLoGh1TR646poL4EQqmgvgYEk1n70psQn%2FuaN0HX%2FVxiF7rulbxTV3IKlircqzsMSJ71IkhDK4O%2FB8giJHp3BsjCid5altqpJNpbod6zqDYFkKnihONaARCk6hewdLIlzOVqAaT4pnZpvRK6BhMmux%2FT0K2%2FHPA1KA1drex9OUM%2BkV800aRK41UAQUUMkzJOnhMssk3FDfj5kv9CRbZr%2FBc%2FZ4dyrGA56cknA2ASNNpkAVg64%2F8vo%2F9XsahXwr8agNUrYdVyejlxKRgAUiJTkAA%2B8me%2B0aS%2F1TTUBsDbWdFQ%2BzMJTBHg4F6nBQA1PVpjz9nQdxzPDDeJ4NLgu07thWp91wu2Hj0r%2FqTiSHUGZ2EljRgYcgZxRxGpvmAbuVP5k4oSyL3BbFH9SJZb4bd1Mp7TcHLvVqdWOkJ56sg0aKtJy%2FGSGmEsRo7XovksJuH7SXIYxqeehO%2Bni8PQyODnLt2aQ%2BqQssg137XX8okUAK%2FlE%2F0YAFt3WwFgkxyCFkDX%2FepxumieX2E1rbxyivEDy7Xccj%2F%2BwnNzcLszbJzKftPhzNud3cXMkO7avZ5Hav2qJQycgpttYIB7waq%2BE8C9IKrvP1Kf%2FFaA0t9ICwQQKrTZ173%2FBXUhp0eEZgYeAAAAAElFTkSuQmCC%29%200%2099px%20no%2Drepeat%3B%0A%7D%0A%0A%2Ebutton%2Earrowup%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%200%3B%20%7D%0A%2Ebutton%2Earrowup%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Earrowup%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Earrowup%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%200%3B%20%7D%0A%0A%2Ebutton%2Earrowdown%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D12px%3B%20%7D%0A%2Ebutton%2Earrowdown%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Earrowdown%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Earrowdown%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D12px%3B%20%7D%0A%0A%2Ebutton%2Earrowleft%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D24px%3B%20%7D%0A%2Ebutton%2Earrowleft%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Earrowleft%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Earrowleft%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D24px%3B%20%7D%0A%0A%2Ebutton%2Earrowright%2Eicon%3Abefore%20%7B%20float%3Aright%3B%20margin%3A%200%20%2D0%2E25em%200%200%2E5em%3B%20background%2Dposition%3A%200%20%2D36px%3B%20%7D%0A%2Ebutton%2Earrowright%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Earrowright%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Earrowright%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D36px%3B%20%7D%0A%0A%2Ebutton%2Eapprove%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D48px%3B%20%7D%0A%2Ebutton%2Eapprove%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Eapprove%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Eapprove%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D48px%3B%20%7D%0A%0A%2Ebutton%2Eadd%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D288px%3B%20%7D%0A%2Ebutton%2Eadd%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Eadd%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Eadd%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D288px%3B%20%7D%0A%0A%2Ebutton%2Eremove%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D60px%3B%20%7D%0A%2Ebutton%2Eremove%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Eremove%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Eremove%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D60px%3B%20%7D%0A%0A%2Ebutton%2Elog%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D72px%3B%20%7D%0A%2Ebutton%2Elog%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Elog%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Elog%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D72px%3B%20%7D%0A%0A%2Ebutton%2Ecalendar%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D84px%3B%20%7D%0A%2Ebutton%2Ecalendar%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Ecalendar%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Ecalendar%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D84px%3B%20%7D%0A%0A%2Ebutton%2Echat%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D96px%3B%20%7D%0A%2Ebutton%2Echat%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Echat%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Echat%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D96px%3B%20%7D%0A%0A%2Ebutton%2Eclock%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D108px%3B%20%7D%0A%2Ebutton%2Eclock%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Eclock%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Eclock%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D108px%3B%20%7D%0A%0A%2Ebutton%2Esettings%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D120px%3B%20%7D%0A%2Ebutton%2Esettings%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Esettings%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Esettings%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D120px%3B%20%7D%0A%0A%2Ebutton%2Ecomment%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D132px%3B%20%7D%0A%2Ebutton%2Ecomment%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Ecomment%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Ecomment%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D132px%3B%20%7D%0A%0A%2Ebutton%2Efork%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D144px%3B%20%7D%0A%2Ebutton%2Efork%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Efork%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Efork%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D144px%3B%20%7D%0A%0A%2Ebutton%2Elike%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D156px%3B%20%7D%0A%2Ebutton%2Elike%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Elike%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Elike%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D156px%3B%20%7D%0A%0A%2Ebutton%2Efavorite%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D348px%3B%20%7D%0A%2Ebutton%2Efavorite%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Efavorite%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Efavorite%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D348px%3B%20%7D%0A%0A%2Ebutton%2Ehome%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D168px%3B%20%7D%0A%2Ebutton%2Ehome%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Ehome%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Ehome%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D168px%3B%20%7D%0A%0A%2Ebutton%2Ekey%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D180px%3B%20%7D%0A%2Ebutton%2Ekey%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Ekey%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Ekey%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D180px%3B%20%7D%0A%0A%2Ebutton%2Elock%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D192px%3B%20%7D%0A%2Ebutton%2Elock%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Elock%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Elock%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D192px%3B%20%7D%0A%0A%2Ebutton%2Eunlock%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D204px%3B%20%7D%0A%2Ebutton%2Eunlock%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Eunlock%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Eunlock%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D204px%3B%20%7D%0A%0A%2Ebutton%2Eloop%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D216px%3B%20%7D%0A%2Ebutton%2Eloop%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Eloop%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Eloop%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D216px%3B%20%7D%0A%0A%2Ebutton%2Esearch%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D228px%3B%20%7D%0A%2Ebutton%2Esearch%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Esearch%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Esearch%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D228px%3B%20%7D%0A%0A%2Ebutton%2Email%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D240px%3B%20%7D%0A%2Ebutton%2Email%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Email%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Email%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D240px%3B%20%7D%0A%0A%2Ebutton%2Emove%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D252px%3B%20%7D%0A%2Ebutton%2Emove%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Emove%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Emove%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D252px%3B%20%7D%0A%0A%2Ebutton%2Eedit%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D264px%3B%20%7D%0A%2Ebutton%2Eedit%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Eedit%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Eedit%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D264px%3B%20%7D%0A%0A%2Ebutton%2Epin%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D276px%3B%20%7D%0A%2Ebutton%2Epin%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Epin%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Epin%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D276px%3B%20%7D%0A%0A%2Ebutton%2Ereload%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D300px%3B%20%7D%0A%2Ebutton%2Ereload%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Ereload%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Ereload%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D300px%3B%20%7D%0A%0A%2Ebutton%2Erss%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D312px%3B%20%7D%0A%2Ebutton%2Erss%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Erss%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Erss%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D312px%3B%20%7D%0A%0A%2Ebutton%2Etag%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D324px%3B%20%7D%0A%2Ebutton%2Etag%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Etag%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Etag%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D324px%3B%20%7D%0A%0A%2Ebutton%2Etrash%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D336px%3B%20%7D%0A%2Ebutton%2Etrash%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Etrash%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Etrash%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D336px%3B%20%7D%0A%0A%2Ebutton%2Euser%2Eicon%3Abefore%20%7B%20background%2Dposition%3A%200%20%2D360px%3B%20%7D%0A%2Ebutton%2Euser%2Eicon%3Ahover%3Abefore%2C%0A%2Ebutton%2Euser%2Eicon%3Afocus%3Abefore%2C%0A%2Ebutton%2Euser%2Eicon%3Aactive%3Abefore%20%7B%20background%2Dposition%3A%20%2D12px%20%2D360px%3B%20%7D%0A%0A%0A%2F%2A%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20%20%20Button%20extensions%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2F%2A%20Primary%20button%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Eprimary%20%7B%0A%20%20%20%20font%2Dweight%3A%20bold%3B%0A%7D%0A%0A%2F%2A%20Danger%20button%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Edanger%20%7B%0A%20%20%20%20color%3A%20%23900%3B%0A%7D%0A%0A%2Ebutton%2Edanger%3Ahover%2C%0A%2Ebutton%2Edanger%3Afocus%2C%0A%2Ebutton%2Edanger%3Aactive%20%7B%0A%20%20%20%20border%2Dcolor%3A%20%23b53f3a%3B%0A%20%20%20%20border%2Dbottom%2Dcolor%3A%20%23a0302a%3B%0A%20%20%20%20color%3A%20%23fff%3B%0A%20%20%20%20background%2Dcolor%3A%20%23dc5f59%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dwebkit%2Dgradient%28linear%2C%200%200%2C%200%20100%25%2C%20from%28%23dc5f59%29%2C%20to%28%23b33630%29%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dmoz%2Dlinear%2Dgradient%28%23dc5f59%2C%20%23b33630%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dms%2Dlinear%2Dgradient%28%23dc5f59%2C%20%23b33630%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Do%2Dlinear%2Dgradient%28%23dc5f59%2C%20%23b33630%29%3B%0A%20%20%20%20background%2Dimage%3A%20linear%2Dgradient%28%23dc5f59%2C%20%23b33630%29%3B%0A%7D%0A%0A%2Ebutton%2Edanger%3Aactive%2C%0A%2Ebutton%2Edanger%2Eactive%20%7B%0A%20%20%20%20border%2Dcolor%3A%20%23a0302a%3B%0A%20%20%20%20border%2Dbottom%2Dcolor%3A%20%23bf4843%3B%0A%20%20%20%20background%2Dcolor%3A%20%23b33630%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dwebkit%2Dgradient%28linear%2C%200%200%2C%200%20100%25%2C%20from%28%23b33630%29%2C%20to%28%23dc5f59%29%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dmoz%2Dlinear%2Dgradient%28%23b33630%2C%20%23dc5f59%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Dms%2Dlinear%2Dgradient%28%23b33630%2C%20%23dc5f59%29%3B%0A%20%20%20%20background%2Dimage%3A%20%2Do%2Dlinear%2Dgradient%28%23b33630%2C%20%23dc5f59%29%3B%0A%20%20%20%20background%2Dimage%3A%20linear%2Dgradient%28%23b33630%2C%20%23dc5f59%29%3B%0A%7D%0A%0A%2F%2A%20Pill%20button%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Epill%20%7B%0A%20%20%20%20border%2Dradius%3A%2050em%3B%0A%7D%0A%0A%2F%2A%20Disabled%20button%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Edisable%20%7B%0A%20%20%20%20opacity%3A%200%2E5%3B%0A%7D%0A%0A%2F%2A%20Big%20button%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Ebig%20%7B%0A%20%20%20%20font%2Dsize%3A%2014px%3B%0A%7D%0A%0A%2Ebutton%2Ebig%2Eicon%3Abefore%20%7B%0A%20%20%20%20top%3A%200%3B%0A%7D%0A%0A%0A%2F%2A%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20%20%20Button%20groups%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2F%2A%20Standard%20group%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Dgroup%20%7B%0A%20%20%20%20display%3A%20inline%2Dblock%3B%0A%20%20%20%20list%2Dstyle%3A%20none%3B%0A%20%20%20%20padding%3A%200%3B%0A%20%20%20%20margin%3A%200%3B%0A%20%20%20%20%2F%2A%20IE%20hacks%20%2A%2F%0A%20%20%20%20zoom%3A%201%3B%0A%20%20%20%20%2Adisplay%3A%20inline%3B%0A%7D%0A%0A%2Ebutton%20%2B%20%2Ebutton%2C%0A%2Ebutton%20%2B%20%2Ebutton%2Dgroup%2C%0A%2Ebutton%2Dgroup%20%2B%20%2Ebutton%2C%0A%2Ebutton%2Dgroup%20%2B%20%2Ebutton%2Dgroup%20%7B%0A%20%20%20%20margin%2Dleft%3A%2015px%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%20li%20%7B%0A%20%20%20%20float%3A%20left%3B%0A%20%20%20%20padding%3A%200%3B%0A%20%20%20%20margin%3A%200%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%20%2Ebutton%20%7B%0A%20%20%20%20float%3A%20left%3B%0A%20%20%20%20margin%2Dleft%3A%20%2D1px%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%20%3E%20%2Ebutton%3Anot%28%3Afirst%2Dchild%29%3Anot%28%3Alast%2Dchild%29%2C%0A%2Ebutton%2Dgroup%20li%3Anot%28%3Afirst%2Dchild%29%3Anot%28%3Alast%2Dchild%29%20%2Ebutton%20%7B%0A%20%20%20%20border%2Dradius%3A%200%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%20%3E%20%2Ebutton%3Afirst%2Dchild%2C%0A%2Ebutton%2Dgroup%20li%3Afirst%2Dchild%20%2Ebutton%20%7B%0A%20%20%20%20margin%2Dleft%3A%200%3B%0A%20%20%20%20border%2Dtop%2Dright%2Dradius%3A%200%3B%0A%20%20%20%20border%2Dbottom%2Dright%2Dradius%3A%200%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%20%3E%20%2Ebutton%3Alast%2Dchild%2C%0A%2Ebutton%2Dgroup%20li%3Alast%2Dchild%20%3E%20%2Ebutton%20%7B%0A%20%20%20%20border%2Dtop%2Dleft%2Dradius%3A%200%3B%0A%20%20%20%20border%2Dbottom%2Dleft%2Dradius%3A%200%3B%0A%7D%0A%0A%2F%2A%20Minor%20group%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Dgroup%2Eminor%2Dgroup%20%2Ebutton%20%7B%0A%20%20%20%20border%3A%201px%20solid%20%23d4d4d4%3B%0A%20%20%20%20text%2Dshadow%3A%20none%3B%0A%20%20%20%20background%2Dimage%3A%20none%3B%0A%20%20%20%20background%2Dcolor%3A%20%23fff%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%2Eminor%2Dgroup%20%2Ebutton%3Ahover%2C%0A%2Ebutton%2Dgroup%2Eminor%2Dgroup%20%2Ebutton%3Afocus%20%7B%0A%20%20%20%20background%2Dcolor%3A%20%23599bdc%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%2Eminor%2Dgroup%20%2Ebutton%3Aactive%2C%0A%2Ebutton%2Dgroup%2Eminor%2Dgroup%20%2Ebutton%2Eactive%20%7B%0A%20%20%20%20background%2Dcolor%3A%20%233072b3%3B%0A%7D%0A%0A%2Ebutton%2Dgroup%2Eminor%2Dgroup%20%2Ebutton%2Eicon%3Abefore%20%7B%0A%20%20%20%20opacity%3A%200%2E8%3B%0A%7D%0A%0A%2F%2A%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20%20%20Button%20container%20%28mixing%20buttons%20and%20groups%2C%20e%2Eg%2E%2C%20nav%20bar%29%0A%20%20%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%2A%2F%0A%0A%2Ebutton%2Dcontainer%20%2Ebutton%2C%0A%2Ebutton%2Dcontainer%20%2Ebutton%2Dgroup%20%7B%0A%20%20%20%20vertical%2Dalign%3A%20top%3B%0A%7D%0A%0A" rel="stylesheet" />
<script src="data:application/x-javascript,HTMLWidgets%2Ewidget%28%7B%0A%20%20type%3A%20%22output%22%2C%0A%20%20name%3A%20%22morris%22%2C%0A%20%20initialize%3A%20function%28el%29%20%7B%0A%20%20%20%20%0A%20%20%7D%2C%0A%20%20renderValue%3A%20function%28el%2C%20data%29%20%7B%0A%20%20%20%20var%20payload%20%3D%20JSONfn%2Eparse%28JSONfn%2Estringify%28data%29%29%0A%20%20%20%20if%20%28payload%2Efacet%29%7B%0A%20%20%20%20%20%20var%20data%5Fall%20%3D%20%5F%2EgroupBy%28payload%2Econfig%2Edata%2C%20payload%2Efacet%29%0A%20%20%20%20%20%20var%20groups%20%3D%20%5F%2Euniq%28%5F%2Epluck%28payload%2Econfig%2Edata%2C%20payload%2Efacet%29%29%2Esort%28%29%0A%20%20%20%20%20%20payload%2Econfig%2Edata%20%3D%20data%5Fall%5Bgroups%5B0%5D%5D%0A%20%20%20%20%7D%0A%20%20%20%20payload%2Econfig%2Eelement%20%3D%20el%0A%20%20%20%20%24%28el%29%2Eempty%28%29%0A%20%20%20%20el%2EnewChart%20%3D%20new%20Morris%5Bpayload%2Etype%5D%28payload%2Econfig%29%3B%0A%20%20%20%20if%20%28payload%2Efacet%29%7B%0A%20%20%20%20%20%20addFilter%28el%2C%20groups%2C%20function%28grp%29%7B%0A%20%20%20%20%20%20%20%20el%2EnewChart%2EsetData%28data%5Fall%5Bgrp%5D%29%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%29%3B%0A%0Afunction%20addFilter%28el%2C%20groups%2C%20callback%29%7B%0A%20%20%24buttons%20%3D%20%24%28el%29%2Eappend%28%22%3Cdiv%20class%20%3D%20%27button%2Dgroup%27%3E%3C%2Fdiv%3E%22%29%0A%20%20groups%2EforEach%28function%28v%2C%20i%29%7B%0A%20%20%20%20if%20%28i%20%3D%3D%3D%200%29%7B%0A%20%20%20%20%20%20var%20cl%20%3D%20%27button%20active%27%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20var%20cl%20%3D%20%27button%27%0A%20%20%20%20%7D%0A%20%20%20%20console%2Elog%28%24%28el%29%2Eattr%28%27id%27%29%20%2B%20%22%20div%2Ebutton%2Dgroup%22%29%0A%20%20%20%20%24%28%22%3Ca%20class%3D%27%22%20%2B%20cl%20%2B%20%22%27%20data%2Dvalue%3D%27%22%20%2B%20v%20%2B%20%22%27%3E%22%20%2B%20v%20%2B%20%22%3C%2Fa%3E%22%29%0A%20%20%20%20%20%20%2EappendTo%28%22%23%22%20%2B%20%24%28el%29%2Eattr%28%27id%27%29%20%2B%20%22%20div%2Ebutton%2Dgroup%22%29%0A%20%20%7D%29%0A%20%20%24%28%27a%2Ebutton%27%29%2Eclick%28function%28%29%7B%0A%20%20%20%20%2F%2F%20%24%28%22%23%22%20%2B%20%24%28el%29%2Eattr%28%27id%27%29%20%2B%20%27%20div%2Ebutton%2Dgroup%20a%27%29%2EremoveClass%28%27active%27%29%0A%20%20%20%20%24%28this%29%2Esiblings%28%29%2EremoveClass%28%27active%27%29%0A%20%20%20%20%24%28this%29%2EaddClass%28%27active%27%29%0A%20%20%20%20var%20grp%20%3D%20%24%28this%29%2Edata%28%27value%27%29%0A%20%20%20%20callback%28grp%29%0A%20%20%7D%29%0A%7D%0A"></script>

</head>
<body style="background-color:white;">
<div id="htmlwidget_container">
  <div id="htmlwidget-8910" style="width:600px;height:400px;" class="morris"></div>
</div>
<script type="application/json" data-for="htmlwidget-8910">{ "config": {
 "ykeys": [
 "mpg" 
],
"group": null,
"xkey": "wt",
"data": [
 {
 "mpg":     21,
"cyl":      6,
"disp":    160,
"hp":    110,
"drat":    3.9,
"wt":   2.62,
"qsec":  16.46,
"vs":      0,
"am":      1,
"gear":      4,
"carb":      4 
},
{
 "mpg":     21,
"cyl":      6,
"disp":    160,
"hp":    110,
"drat":    3.9,
"wt":  2.875,
"qsec":  17.02,
"vs":      0,
"am":      1,
"gear":      4,
"carb":      4 
},
{
 "mpg":   22.8,
"cyl":      4,
"disp":    108,
"hp":     93,
"drat":   3.85,
"wt":   2.32,
"qsec":  18.61,
"vs":      1,
"am":      1,
"gear":      4,
"carb":      1 
},
{
 "mpg":   21.4,
"cyl":      6,
"disp":    258,
"hp":    110,
"drat":   3.08,
"wt":  3.215,
"qsec":  19.44,
"vs":      1,
"am":      0,
"gear":      3,
"carb":      1 
},
{
 "mpg":   18.7,
"cyl":      8,
"disp":    360,
"hp":    175,
"drat":   3.15,
"wt":   3.44,
"qsec":  17.02,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      2 
},
{
 "mpg":   18.1,
"cyl":      6,
"disp":    225,
"hp":    105,
"drat":   2.76,
"wt":   3.46,
"qsec":  20.22,
"vs":      1,
"am":      0,
"gear":      3,
"carb":      1 
},
{
 "mpg":   14.3,
"cyl":      8,
"disp":    360,
"hp":    245,
"drat":   3.21,
"wt":   3.57,
"qsec":  15.84,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      4 
},
{
 "mpg":   24.4,
"cyl":      4,
"disp":  146.7,
"hp":     62,
"drat":   3.69,
"wt":   3.19,
"qsec":     20,
"vs":      1,
"am":      0,
"gear":      4,
"carb":      2 
},
{
 "mpg":   22.8,
"cyl":      4,
"disp":  140.8,
"hp":     95,
"drat":   3.92,
"wt":   3.15,
"qsec":   22.9,
"vs":      1,
"am":      0,
"gear":      4,
"carb":      2 
},
{
 "mpg":   19.2,
"cyl":      6,
"disp":  167.6,
"hp":    123,
"drat":   3.92,
"wt":   3.44,
"qsec":   18.3,
"vs":      1,
"am":      0,
"gear":      4,
"carb":      4 
},
{
 "mpg":   17.8,
"cyl":      6,
"disp":  167.6,
"hp":    123,
"drat":   3.92,
"wt":   3.44,
"qsec":   18.9,
"vs":      1,
"am":      0,
"gear":      4,
"carb":      4 
},
{
 "mpg":   16.4,
"cyl":      8,
"disp":  275.8,
"hp":    180,
"drat":   3.07,
"wt":   4.07,
"qsec":   17.4,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      3 
},
{
 "mpg":   17.3,
"cyl":      8,
"disp":  275.8,
"hp":    180,
"drat":   3.07,
"wt":   3.73,
"qsec":   17.6,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      3 
},
{
 "mpg":   15.2,
"cyl":      8,
"disp":  275.8,
"hp":    180,
"drat":   3.07,
"wt":   3.78,
"qsec":     18,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      3 
},
{
 "mpg":   10.4,
"cyl":      8,
"disp":    472,
"hp":    205,
"drat":   2.93,
"wt":   5.25,
"qsec":  17.98,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      4 
},
{
 "mpg":   10.4,
"cyl":      8,
"disp":    460,
"hp":    215,
"drat":      3,
"wt":  5.424,
"qsec":  17.82,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      4 
},
{
 "mpg":   14.7,
"cyl":      8,
"disp":    440,
"hp":    230,
"drat":   3.23,
"wt":  5.345,
"qsec":  17.42,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      4 
},
{
 "mpg":   32.4,
"cyl":      4,
"disp":   78.7,
"hp":     66,
"drat":   4.08,
"wt":    2.2,
"qsec":  19.47,
"vs":      1,
"am":      1,
"gear":      4,
"carb":      1 
},
{
 "mpg":   30.4,
"cyl":      4,
"disp":   75.7,
"hp":     52,
"drat":   4.93,
"wt":  1.615,
"qsec":  18.52,
"vs":      1,
"am":      1,
"gear":      4,
"carb":      2 
},
{
 "mpg":   33.9,
"cyl":      4,
"disp":   71.1,
"hp":     65,
"drat":   4.22,
"wt":  1.835,
"qsec":   19.9,
"vs":      1,
"am":      1,
"gear":      4,
"carb":      1 
},
{
 "mpg":   21.5,
"cyl":      4,
"disp":  120.1,
"hp":     97,
"drat":    3.7,
"wt":  2.465,
"qsec":  20.01,
"vs":      1,
"am":      0,
"gear":      3,
"carb":      1 
},
{
 "mpg":   15.5,
"cyl":      8,
"disp":    318,
"hp":    150,
"drat":   2.76,
"wt":   3.52,
"qsec":  16.87,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      2 
},
{
 "mpg":   15.2,
"cyl":      8,
"disp":    304,
"hp":    150,
"drat":   3.15,
"wt":  3.435,
"qsec":   17.3,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      2 
},
{
 "mpg":   13.3,
"cyl":      8,
"disp":    350,
"hp":    245,
"drat":   3.73,
"wt":   3.84,
"qsec":  15.41,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      4 
},
{
 "mpg":   19.2,
"cyl":      8,
"disp":    400,
"hp":    175,
"drat":   3.08,
"wt":  3.845,
"qsec":  17.05,
"vs":      0,
"am":      0,
"gear":      3,
"carb":      2 
},
{
 "mpg":   27.3,
"cyl":      4,
"disp":     79,
"hp":     66,
"drat":   4.08,
"wt":  1.935,
"qsec":   18.9,
"vs":      1,
"am":      1,
"gear":      4,
"carb":      1 
},
{
 "mpg":     26,
"cyl":      4,
"disp":  120.3,
"hp":     91,
"drat":   4.43,
"wt":   2.14,
"qsec":   16.7,
"vs":      0,
"am":      1,
"gear":      5,
"carb":      2 
},
{
 "mpg":   30.4,
"cyl":      4,
"disp":   95.1,
"hp":    113,
"drat":   3.77,
"wt":  1.513,
"qsec":   16.9,
"vs":      1,
"am":      1,
"gear":      5,
"carb":      2 
},
{
 "mpg":   15.8,
"cyl":      8,
"disp":    351,
"hp":    264,
"drat":   4.22,
"wt":   3.17,
"qsec":   14.5,
"vs":      0,
"am":      1,
"gear":      5,
"carb":      4 
},
{
 "mpg":   19.7,
"cyl":      6,
"disp":    145,
"hp":    175,
"drat":   3.62,
"wt":   2.77,
"qsec":   15.5,
"vs":      0,
"am":      1,
"gear":      5,
"carb":      6 
},
{
 "mpg":     15,
"cyl":      8,
"disp":    301,
"hp":    335,
"drat":   3.54,
"wt":   3.57,
"qsec":   14.6,
"vs":      0,
"am":      1,
"gear":      5,
"carb":      8 
},
{
 "mpg":   21.4,
"cyl":      4,
"disp":    121,
"hp":    109,
"drat":   4.11,
"wt":   2.78,
"qsec":   18.6,
"vs":      1,
"am":      1,
"gear":      4,
"carb":      2 
} 
],
"labels": [
 "mpg" 
] 
},"type": "Line","facet": null,"height":    400,"width":    600 }</script>
<script type="application/htmlwidget-sizing" data-for="htmlwidget-8910">{ "viewer": {
 "width":    600,
"height":    400,
"padding":     15,
"fill": false 
},"browser": {
 "width":    600,
"height":    400,
"padding":     40,
"fill": false 
} }</script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5px;
  stroke-opacity: .5;
}

.land {
  fill: #222;
}

.county-boundary {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}

.state-boundary {
  fill: none;
  stroke: #fff;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.albers()
    .rotate([96, 0])
    .center([-.6, 38.7])
    .parallels([29.5, 45.5])
    .scale(1070)
    .translate([width / 2, height / 2])
    .precision(.1);

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule()
    .extent([[-98 - 45, 38 - 45], [-98 + 45, 38 + 45]])
    .step([5, 5]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

d3.json("/d/4090846/us.json", function(error, us) {
  svg.insert("path", ".graticule")
      .datum(topojson.feature(us, us.objects.land))
      .attr("class", "land")
      .attr("d", path);

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a !== b && !(a.id / 1000 ^ b.id / 1000); }))
      .attr("class", "county-boundary")
      .attr("d", path);

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "state-boundary")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<style type="text/css">
		.stats {
			padding: 10px;			
		}
	</style>
</head>
<body>
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script type="text/javascript" src="labeling.js"></script>

	<script type="text/javascript">

		var width = 900, height = 350, time_mean = 0, count = 0;

		var svg = d3.select("body").append("svg")
			.attr("width", width)
			.attr("height", height);

	 	var div = d3.select("body").append("div");

	 	var alignBtn = div.append("span")
	 		.append("button")
			.text("Align")
			.on("click", align);

		var shuffleBtn = div.append("button")
			.text("Shuffle")
			.on("click", shuffle);	

		var stats = d3.select("body").append("div")
			.attr("class", "stats");	

		var data = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum rutrum elit eget turpis pretium vestibulum. Vestibulum turpis ligula, lobortis quis tempus sit amet, placerat nec sem. Pellentesque luctus lectus mi, volutpat placerat velit scelerisque sed. Pellentesque accumsan fermentum libero vitae fermentum. Nunc cursus urna lacus, id pharetra urna egestas nec. Sed laoreet sem sit amet nunc interdum interdum. Duis massa sapien, suscipit aliquet dolor nec, elementum euismod sapien. Nulla fermentum, odio et mollis suscipit, neque elit vulputate tellus, nec tempus risus felis quis purus. Morbi nunc mauris, elementum a gravida sit amet, consectetur nec ligula. Praesent non felis non orci consequat placerat. Curabitur tincidunt elit vel dolor pulvinar, ut sagittis tortor gravida. Proin id mattis dolor, non posuere lectus. Praesent erat magna, faucibus sed nisi non, mattis congue urna. Mauris ipsum metus, elementum in metus ac, iaculis consequat risus."			
			.replace(/\./g, "")
			.replace(/\,/g, "")
			.split(" ");

		function shuffle() {	
			
			svg.selectAll(".label")
				.remove();

			stats.html("");	
				
			svg.selectAll(".label")
				.data(data)
				.enter()	
				.append("text")
					.attr("class", "label")
					.attr("x", function(d) { return Math.round(Math.random() * width); })
					.attr("y", function(d) { return Math.round(Math.random() * height); })
					.text(function(d) { return d; });

			shuffleBtn.attr("disabled", true);
			alignBtn.attr("disabled", null);		
		}

		function align() {

			var time = new Date(), scaleds = 0,
				total = svg.selectAll(".label")[0].length,
				totalTime,
				format = d3.format(".4r");

			var labeling = d3.labeling()
				.select(".label")
				.scale()
				.remove()
				.align();

			var lbstats = labeling.getStats();

			var txt = "";

			txt += lbstats.scaleds + " words scaled, ";
			txt += lbstats.removeds + " words removed ";
			txt += "of " + total + " words.<br/>";
				
			var ft = new Date();

			totalTime = ft - time;

			// add to mean
			time_mean = time_mean + (totalTime - time_mean)/((count++) + 1);

			txt += "Time: " + totalTime + "ms &nbsp;&nbsp;&nbsp; Mean time: " + format(time_mean) + "ms";

			stats.html(txt);
			
			shuffleBtn.attr("disabled", null);
			alignBtn.attr("disabled", true);		
		}

		shuffle();

	</script>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>WaterHex</title>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<link href='https://www.mapbox.com/base/latest/base.css' rel='stylesheet' />
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />
<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:40px; width:100%; }
  #steps { position:absolute; bottom:0px; width:100%; height: 40px; background:#000; }
  #steps a {
      color:#fff;
      display:inline-block;
      text-align:center;
      box-sizing:border-box;
      max-width:10000px !important;
  }
  .pad1 {
    color: #fff;
  }
  path {
    transition: fill .4s ease;
    -webkit-transition: fill .4s ease;
 }
</style>
</head>
<body>
<script src='https://api.tiles.mapbox.com/mapbox.js/plugins/turf/v1.3.0/turf.min.js'></script>
<div id='map'></div>
<div id='steps' class='col12'>
    <a href='#' class='col4 unround button fill-navy' id='raw'>raw data</a>
    <a href='#' class='col4 unround button fill-navy' id='hex'>turf-hex</a>
    <a href='#' class='col4 unround button fill-navy' id='count'>turf-count</a>
</div>
<div class='pin-top pad1 fill-blue'>
    Buildings in Washington, DC, hexbinned on the fly
</div>
<script src='data16k.js'></script>
<script>
  var bbox = [-77.14702606201172,
   38.81005601494022,
   -76.91994639892578, 39.05];

  var token = 'pk.eyJ1IjoibGFuZHBsYW5uZXIiLCJhIjoicUtlZGgwYyJ9.UFYz8MD4lI4kIzk9bjGFvg';

  var map = L.mapbox.map('map', 'landplanner.ggflie7k', {zoomControl: false})
      .setView([38.8961302513129,-77.04025268554688,], 13);
  map.scrollWheelZoom.disable();

  var layerGroup = L.layerGroup().addTo(map);


  var grid = turf.hex(bbox, 0.002);
  var grid = turf.count(grid, pts, 'pt_count');

  grid.features.forEach(function(cell) {

    var pt_count = cell.properties.pt_count;

    var _nohex = cell._nohex = {};
    _nohex.weight = 0;
    _nohex.color = '#00ffff';
    _nohex.fillOpacity = 0;

    var _nocount = cell._nocount = {};
    _nocount.weight = 0.5;
    _nocount.color = '#E9D362';
    _nocount.fillOpacity = 0;

    var _withCount = cell._withCount = {};
    _withCount.color = '#E9D362';
    _withCount.weight = 0;
    _withCount.fill = '#E9D362';
    _withCount.fillOpacity = 0;
    if(pt_count >= 5) {
      _withCount.fillOpacity = 0.1;
    } if(pt_count >= 15) {
      _withCount.fillOpacity = 0.2;
      _withCount.weight = 1;
    } if(pt_count >= 25) {
      _withCount.weight = 2;
      _withCount.fillOpacity = 0.35;
    } if(pt_count >= 75) {
      _withCount.weight = 3;
      _withCount.fillOpacity = 0.55;
    }

    cell.properties = cell._nohex;
  });

  var hex = L.geoJson(grid)
      .eachLayer(function(l) {
          l.setStyle(l.feature.properties);
      })
      .addTo(layerGroup);

  L.geoJson(pts, {
    pointToLayer: function(feature, latlng) {
      return L.circleMarker(latlng, {
        radius: 0.5,
        fillColor:'#ffffff',
        fillOpacity:1,
        stroke: false
      });
    }
  }).addTo(layerGroup);

  function setStage(stage) {
      var fns = [];
      hex.eachLayer(function(l) {
          // fns.push(function() {
              l.setStyle(l.feature[stage]);
          // });
      });
      // stage === 'raw' ? fastChain(fns) : slowChain(fns);
  }

  function slowChain(fns) {
      function run() {
          var fn = fns.pop();
          if (!fn) return;
          fn();
          setTimeout(function() {
              run();
          }, 0);
      }
      run();
  }

  function fastChain(fns) {
      for (var i = 0; i < fns.length; i++) fns[i]();
  }

  function setButton(t) {
      var stages = document.getElementById('steps').getElementsByTagName('a');
      for (var i = 0; i < stages.length; i++) {
          stages[i].className = stages[i].className.replace('fill-green', '');
      }
      t.className = t.className + ' fill-green';
  }

  document.getElementById('raw').onclick = function() { setButton(this); setStage('_nohex'); };
  document.getElementById('hex').onclick = function() { setButton(this); setStage('_nocount'); };
  document.getElementById('count').onclick = function() { setButton(this); setStage('_withCount'); };

  setStage('_withCount');
  setButton(document.getElementById('count'));
</script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Mozfest example</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <style>
      body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
      .existing {color: blue;}
      .new {color: green;}
    </style>
  </head>
  <body>
    <h1>Mozfest: D3 intro - example01</h1>
    <!--<p> previous paragraph</p>-->
    <script type="text/javascript">
            d3.select("body").append("p").text("New Paragraph!");
        </script>
  </body>
</html>
<!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://nvd3.org/assets/css/nv.d3.css'>
    
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js' type='text/javascript'></script>
    <script src='http://nvd3.org/assets/lib/fisheye.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart18e87f6e3d72' class = 'rChart nvd3'></div>    
    
      <script type='text/javascript'>
        $(document).ready(function(){
          drawchart18e87f6e3d72(  );
        });
      function drawchart18e87f6e3d72(  ){  
        var opts = {
 "dom": "chart18e87f6e3d72",
"width":    800,
"height":    400,
"x": "date",
"y": "value",
"group": "variable",
"type": "lineWithFocusChart",
"id": "chart18e87f6e3d72" 
};
        var data = [
 {
 "date":           -916,
"variable": "uempmed",
"value":            4.5 
},
{
 "date":           -885,
"variable": "uempmed",
"value":            4.7 
},
{
 "date":           -854,
"variable": "uempmed",
"value":            4.6 
},
{
 "date":           -824,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":           -793,
"variable": "uempmed",
"value":            4.7 
},
{
 "date":           -763,
"variable": "uempmed",
"value":            4.8 
},
{
 "date":           -732,
"variable": "uempmed",
"value":            5.1 
},
{
 "date":           -701,
"variable": "uempmed",
"value":            4.5 
},
{
 "date":           -672,
"variable": "uempmed",
"value":            4.1 
},
{
 "date":           -641,
"variable": "uempmed",
"value":            4.6 
},
{
 "date":           -611,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -580,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -550,
"variable": "uempmed",
"value":            4.5 
},
{
 "date":           -519,
"variable": "uempmed",
"value":            4.2 
},
{
 "date":           -488,
"variable": "uempmed",
"value":            4.6 
},
{
 "date":           -458,
"variable": "uempmed",
"value":            4.8 
},
{
 "date":           -427,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -397,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -366,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -335,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":           -307,
"variable": "uempmed",
"value":              4 
},
{
 "date":           -276,
"variable": "uempmed",
"value":              4 
},
{
 "date":           -246,
"variable": "uempmed",
"value":            4.2 
},
{
 "date":           -215,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -185,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -154,
"variable": "uempmed",
"value":            4.4 
},
{
 "date":           -123,
"variable": "uempmed",
"value":            4.7 
},
{
 "date":            -93,
"variable": "uempmed",
"value":            4.5 
},
{
 "date":            -62,
"variable": "uempmed",
"value":            4.8 
},
{
 "date":            -32,
"variable": "uempmed",
"value":            4.6 
},
{
 "date":             -1,
"variable": "uempmed",
"value":            4.6 
},
{
 "date":             30,
"variable": "uempmed",
"value":            4.5 
},
{
 "date":             58,
"variable": "uempmed",
"value":            4.6 
},
{
 "date":             89,
"variable": "uempmed",
"value":            4.1 
},
{
 "date":            119,
"variable": "uempmed",
"value":            4.7 
},
{
 "date":            150,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":            180,
"variable": "uempmed",
"value":            5.1 
},
{
 "date":            211,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":            242,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":            272,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":            303,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":            333,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":            364,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":            395,
"variable": "uempmed",
"value":            6.3 
},
{
 "date":            423,
"variable": "uempmed",
"value":            6.4 
},
{
 "date":            454,
"variable": "uempmed",
"value":            6.5 
},
{
 "date":            484,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":            515,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":            545,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":            576,
"variable": "uempmed",
"value":            6.4 
},
{
 "date":            607,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":            637,
"variable": "uempmed",
"value":            6.5 
},
{
 "date":            668,
"variable": "uempmed",
"value":            6.4 
},
{
 "date":            698,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":            729,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":            760,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":            789,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":            820,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":            850,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":            881,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":            911,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":            942,
"variable": "uempmed",
"value":              6 
},
{
 "date":            973,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           1003,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           1034,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           1064,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":           1095,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           1126,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":           1154,
"variable": "uempmed",
"value":            5.5 
},
{
 "date":           1185,
"variable": "uempmed",
"value":              5 
},
{
 "date":           1215,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":           1246,
"variable": "uempmed",
"value":              5 
},
{
 "date":           1276,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":           1307,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":           1338,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           1368,
"variable": "uempmed",
"value":            5.5 
},
{
 "date":           1399,
"variable": "uempmed",
"value":            5.1 
},
{
 "date":           1429,
"variable": "uempmed",
"value":            4.7 
},
{
 "date":           1460,
"variable": "uempmed",
"value":              5 
},
{
 "date":           1491,
"variable": "uempmed",
"value":            5.1 
},
{
 "date":           1519,
"variable": "uempmed",
"value":            4.8 
},
{
 "date":           1550,
"variable": "uempmed",
"value":              5 
},
{
 "date":           1580,
"variable": "uempmed",
"value":            4.6 
},
{
 "date":           1611,
"variable": "uempmed",
"value":            5.3 
},
{
 "date":           1641,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           1672,
"variable": "uempmed",
"value":              5 
},
{
 "date":           1703,
"variable": "uempmed",
"value":            5.3 
},
{
 "date":           1733,
"variable": "uempmed",
"value":            5.5 
},
{
 "date":           1764,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":           1794,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           1825,
"variable": "uempmed",
"value":            6.3 
},
{
 "date":           1856,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           1884,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":           1915,
"variable": "uempmed",
"value":            8.7 
},
{
 "date":           1945,
"variable": "uempmed",
"value":            9.4 
},
{
 "date":           1976,
"variable": "uempmed",
"value":            8.8 
},
{
 "date":           2006,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           2037,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":           2068,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":           2098,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           2129,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":           2159,
"variable": "uempmed",
"value":              9 
},
{
 "date":           2190,
"variable": "uempmed",
"value":              9 
},
{
 "date":           2221,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":           2250,
"variable": "uempmed",
"value":            8.7 
},
{
 "date":           2281,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":           2311,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           2342,
"variable": "uempmed",
"value":            7.8 
},
{
 "date":           2372,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":           2403,
"variable": "uempmed",
"value":            7.9 
},
{
 "date":           2434,
"variable": "uempmed",
"value":            7.8 
},
{
 "date":           2464,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":           2495,
"variable": "uempmed",
"value":            8.4 
},
{
 "date":           2525,
"variable": "uempmed",
"value":              8 
},
{
 "date":           2556,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           2587,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":           2615,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":           2646,
"variable": "uempmed",
"value":            7.3 
},
{
 "date":           2676,
"variable": "uempmed",
"value":            7.9 
},
{
 "date":           2707,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":           2737,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           2768,
"variable": "uempmed",
"value":              7 
},
{
 "date":           2799,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":           2829,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           2860,
"variable": "uempmed",
"value":              7 
},
{
 "date":           2890,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           2921,
"variable": "uempmed",
"value":            6.5 
},
{
 "date":           2952,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":           2980,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":           3011,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":           3041,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           3072,
"variable": "uempmed",
"value":              6 
},
{
 "date":           3102,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":           3133,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":           3164,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           3194,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           3225,
"variable": "uempmed",
"value":            5.5 
},
{
 "date":           3255,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           3286,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           3317,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           3345,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           3376,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           3406,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           3437,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           3467,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           3498,
"variable": "uempmed",
"value":            4.8 
},
{
 "date":           3529,
"variable": "uempmed",
"value":            5.5 
},
{
 "date":           3559,
"variable": "uempmed",
"value":            5.5 
},
{
 "date":           3590,
"variable": "uempmed",
"value":            5.3 
},
{
 "date":           3620,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           3651,
"variable": "uempmed",
"value":            5.3 
},
{
 "date":           3682,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":           3711,
"variable": "uempmed",
"value":              6 
},
{
 "date":           3742,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":           3772,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           3803,
"variable": "uempmed",
"value":            6.4 
},
{
 "date":           3833,
"variable": "uempmed",
"value":              7 
},
{
 "date":           3864,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           3895,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":           3925,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           3956,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":           3986,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           4017,
"variable": "uempmed",
"value":            7.4 
},
{
 "date":           4048,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           4076,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           4107,
"variable": "uempmed",
"value":            7.4 
},
{
 "date":           4137,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           4168,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":           4198,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           4229,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":           4260,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           4290,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           4321,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           4351,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           4382,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           4413,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           4441,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":           4472,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":           4502,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":           4533,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":           4563,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":           4594,
"variable": "uempmed",
"value":            8.7 
},
{
 "date":           4625,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":           4655,
"variable": "uempmed",
"value":            9.7 
},
{
 "date":           4686,
"variable": "uempmed",
"value":             10 
},
{
 "date":           4716,
"variable": "uempmed",
"value":           10.2 
},
{
 "date":           4747,
"variable": "uempmed",
"value":           11.1 
},
{
 "date":           4778,
"variable": "uempmed",
"value":            9.8 
},
{
 "date":           4806,
"variable": "uempmed",
"value":           10.4 
},
{
 "date":           4837,
"variable": "uempmed",
"value":           10.9 
},
{
 "date":           4867,
"variable": "uempmed",
"value":           12.3 
},
{
 "date":           4898,
"variable": "uempmed",
"value":           11.3 
},
{
 "date":           4928,
"variable": "uempmed",
"value":           10.1 
},
{
 "date":           4959,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":           4990,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":           5020,
"variable": "uempmed",
"value":            9.4 
},
{
 "date":           5051,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":           5081,
"variable": "uempmed",
"value":            8.7 
},
{
 "date":           5112,
"variable": "uempmed",
"value":            9.1 
},
{
 "date":           5143,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           5172,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           5203,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":           5233,
"variable": "uempmed",
"value":            9.1 
},
{
 "date":           5264,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           5294,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           5325,
"variable": "uempmed",
"value":            7.3 
},
{
 "date":           5356,
"variable": "uempmed",
"value":            7.6 
},
{
 "date":           5386,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":           5417,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":           5447,
"variable": "uempmed",
"value":            7.3 
},
{
 "date":           5478,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           5509,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           5537,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           5568,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           5598,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           5629,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":           5659,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           5690,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           5721,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           5751,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           5782,
"variable": "uempmed",
"value":              7 
},
{
 "date":           5812,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           5843,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":           5874,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           5902,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           5933,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":           5963,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           5994,
"variable": "uempmed",
"value":              7 
},
{
 "date":           6024,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           6055,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           6086,
"variable": "uempmed",
"value":            7.4 
},
{
 "date":           6116,
"variable": "uempmed",
"value":              7 
},
{
 "date":           6147,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           6177,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           6208,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           6239,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":           6267,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":           6298,
"variable": "uempmed",
"value":            7.1 
},
{
 "date":           6328,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":           6359,
"variable": "uempmed",
"value":            6.5 
},
{
 "date":           6389,
"variable": "uempmed",
"value":            6.5 
},
{
 "date":           6420,
"variable": "uempmed",
"value":            6.4 
},
{
 "date":           6451,
"variable": "uempmed",
"value":              6 
},
{
 "date":           6481,
"variable": "uempmed",
"value":            6.3 
},
{
 "date":           6512,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":           6542,
"variable": "uempmed",
"value":              6 
},
{
 "date":           6573,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":           6604,
"variable": "uempmed",
"value":            6.3 
},
{
 "date":           6633,
"variable": "uempmed",
"value":            6.4 
},
{
 "date":           6664,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           6694,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           6725,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":           6755,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":           6786,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           6817,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           6847,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           6878,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           6908,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           6939,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           6970,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           6998,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           7029,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           7059,
"variable": "uempmed",
"value":            5.3 
},
{
 "date":           7090,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           7120,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           7151,
"variable": "uempmed",
"value":              5 
},
{
 "date":           7182,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":           7212,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":           7243,
"variable": "uempmed",
"value":            4.8 
},
{
 "date":           7273,
"variable": "uempmed",
"value":            4.9 
},
{
 "date":           7304,
"variable": "uempmed",
"value":            5.1 
},
{
 "date":           7335,
"variable": "uempmed",
"value":            5.3 
},
{
 "date":           7363,
"variable": "uempmed",
"value":            5.1 
},
{
 "date":           7394,
"variable": "uempmed",
"value":            4.8 
},
{
 "date":           7424,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":           7455,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":           7485,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           7516,
"variable": "uempmed",
"value":            5.4 
},
{
 "date":           7547,
"variable": "uempmed",
"value":            5.6 
},
{
 "date":           7577,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":           7608,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":           7638,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":           7669,
"variable": "uempmed",
"value":              6 
},
{
 "date":           7700,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":           7728,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":           7759,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":           7789,
"variable": "uempmed",
"value":            6.4 
},
{
 "date":           7820,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":           7850,
"variable": "uempmed",
"value":              7 
},
{
 "date":           7881,
"variable": "uempmed",
"value":            7.3 
},
{
 "date":           7912,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":           7942,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":           7973,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":           8003,
"variable": "uempmed",
"value":            7.8 
},
{
 "date":           8034,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":           8065,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":           8094,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           8125,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":           8155,
"variable": "uempmed",
"value":            8.8 
},
{
 "date":           8186,
"variable": "uempmed",
"value":            8.7 
},
{
 "date":           8216,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           8247,
"variable": "uempmed",
"value":            8.8 
},
{
 "date":           8278,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           8308,
"variable": "uempmed",
"value":              9 
},
{
 "date":           8339,
"variable": "uempmed",
"value":              9 
},
{
 "date":           8369,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":           8400,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           8431,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":           8459,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":           8490,
"variable": "uempmed",
"value":            8.4 
},
{
 "date":           8520,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":           8551,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           8581,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":           8612,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":           8643,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           8673,
"variable": "uempmed",
"value":              8 
},
{
 "date":           8704,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           8734,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           8765,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           8796,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":           8824,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":           8855,
"variable": "uempmed",
"value":            9.1 
},
{
 "date":           8885,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":           8916,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":           8946,
"variable": "uempmed",
"value":              9 
},
{
 "date":           8977,
"variable": "uempmed",
"value":            8.9 
},
{
 "date":           9008,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":           9038,
"variable": "uempmed",
"value":             10 
},
{
 "date":           9069,
"variable": "uempmed",
"value":              9 
},
{
 "date":           9099,
"variable": "uempmed",
"value":            8.7 
},
{
 "date":           9130,
"variable": "uempmed",
"value":              8 
},
{
 "date":           9161,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":           9189,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9220,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9250,
"variable": "uempmed",
"value":            9.1 
},
{
 "date":           9281,
"variable": "uempmed",
"value":            7.9 
},
{
 "date":           9311,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":           9342,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9373,
"variable": "uempmed",
"value":            7.9 
},
{
 "date":           9403,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":           9434,
"variable": "uempmed",
"value":              8 
},
{
 "date":           9464,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9495,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9526,
"variable": "uempmed",
"value":            7.8 
},
{
 "date":           9555,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9586,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           9616,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":           9647,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9677,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9708,
"variable": "uempmed",
"value":            8.4 
},
{
 "date":           9739,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":           9769,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9800,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":           9830,
"variable": "uempmed",
"value":            7.8 
},
{
 "date":           9861,
"variable": "uempmed",
"value":            7.8 
},
{
 "date":           9892,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":           9920,
"variable": "uempmed",
"value":            7.9 
},
{
 "date":           9951,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":           9981,
"variable": "uempmed",
"value":              8 
},
{
 "date":          10012,
"variable": "uempmed",
"value":              8 
},
{
 "date":          10042,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":          10073,
"variable": "uempmed",
"value":            7.8 
},
{
 "date":          10104,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":          10134,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":          10165,
"variable": "uempmed",
"value":            7.6 
},
{
 "date":          10195,
"variable": "uempmed",
"value":            7.5 
},
{
 "date":          10226,
"variable": "uempmed",
"value":            7.4 
},
{
 "date":          10257,
"variable": "uempmed",
"value":              7 
},
{
 "date":          10285,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":          10316,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":          10346,
"variable": "uempmed",
"value":              6 
},
{
 "date":          10377,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":          10407,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":          10438,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":          10469,
"variable": "uempmed",
"value":            6.7 
},
{
 "date":          10499,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":          10530,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":          10560,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":          10591,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":          10622,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":          10650,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":          10681,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":          10711,
"variable": "uempmed",
"value":            6.5 
},
{
 "date":          10742,
"variable": "uempmed",
"value":            6.3 
},
{
 "date":          10772,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":          10803,
"variable": "uempmed",
"value":            6.5 
},
{
 "date":          10834,
"variable": "uempmed",
"value":              6 
},
{
 "date":          10864,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":          10895,
"variable": "uempmed",
"value":            6.2 
},
{
 "date":          10925,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":          10956,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":          10987,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":          11016,
"variable": "uempmed",
"value":              6 
},
{
 "date":          11047,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":          11077,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":          11108,
"variable": "uempmed",
"value":            5.7 
},
{
 "date":          11138,
"variable": "uempmed",
"value":              6 
},
{
 "date":          11169,
"variable": "uempmed",
"value":            6.3 
},
{
 "date":          11200,
"variable": "uempmed",
"value":            5.2 
},
{
 "date":          11230,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":          11261,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":          11291,
"variable": "uempmed",
"value":              6 
},
{
 "date":          11322,
"variable": "uempmed",
"value":            5.8 
},
{
 "date":          11353,
"variable": "uempmed",
"value":            6.1 
},
{
 "date":          11381,
"variable": "uempmed",
"value":            6.6 
},
{
 "date":          11412,
"variable": "uempmed",
"value":            5.9 
},
{
 "date":          11442,
"variable": "uempmed",
"value":            6.3 
},
{
 "date":          11473,
"variable": "uempmed",
"value":              6 
},
{
 "date":          11503,
"variable": "uempmed",
"value":            6.8 
},
{
 "date":          11534,
"variable": "uempmed",
"value":            6.9 
},
{
 "date":          11565,
"variable": "uempmed",
"value":            7.2 
},
{
 "date":          11595,
"variable": "uempmed",
"value":            7.3 
},
{
 "date":          11626,
"variable": "uempmed",
"value":            7.7 
},
{
 "date":          11656,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":          11687,
"variable": "uempmed",
"value":            8.4 
},
{
 "date":          11718,
"variable": "uempmed",
"value":            8.3 
},
{
 "date":          11746,
"variable": "uempmed",
"value":            8.4 
},
{
 "date":          11777,
"variable": "uempmed",
"value":            8.9 
},
{
 "date":          11807,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":          11838,
"variable": "uempmed",
"value":             11 
},
{
 "date":          11868,
"variable": "uempmed",
"value":            8.9 
},
{
 "date":          11899,
"variable": "uempmed",
"value":              9 
},
{
 "date":          11930,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":          11960,
"variable": "uempmed",
"value":            9.6 
},
{
 "date":          11991,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":          12021,
"variable": "uempmed",
"value":            9.6 
},
{
 "date":          12052,
"variable": "uempmed",
"value":            9.6 
},
{
 "date":          12083,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":          12111,
"variable": "uempmed",
"value":            9.7 
},
{
 "date":          12142,
"variable": "uempmed",
"value":           10.2 
},
{
 "date":          12172,
"variable": "uempmed",
"value":            9.9 
},
{
 "date":          12203,
"variable": "uempmed",
"value":           11.5 
},
{
 "date":          12233,
"variable": "uempmed",
"value":           10.3 
},
{
 "date":          12264,
"variable": "uempmed",
"value":           10.1 
},
{
 "date":          12295,
"variable": "uempmed",
"value":           10.2 
},
{
 "date":          12325,
"variable": "uempmed",
"value":           10.4 
},
{
 "date":          12356,
"variable": "uempmed",
"value":           10.3 
},
{
 "date":          12386,
"variable": "uempmed",
"value":           10.4 
},
{
 "date":          12417,
"variable": "uempmed",
"value":           10.6 
},
{
 "date":          12448,
"variable": "uempmed",
"value":           10.2 
},
{
 "date":          12477,
"variable": "uempmed",
"value":           10.2 
},
{
 "date":          12508,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":          12538,
"variable": "uempmed",
"value":            9.9 
},
{
 "date":          12569,
"variable": "uempmed",
"value":           10.9 
},
{
 "date":          12599,
"variable": "uempmed",
"value":            8.9 
},
{
 "date":          12630,
"variable": "uempmed",
"value":            9.3 
},
{
 "date":          12661,
"variable": "uempmed",
"value":            9.6 
},
{
 "date":          12691,
"variable": "uempmed",
"value":            9.5 
},
{
 "date":          12722,
"variable": "uempmed",
"value":            9.7 
},
{
 "date":          12752,
"variable": "uempmed",
"value":            9.4 
},
{
 "date":          12783,
"variable": "uempmed",
"value":            9.4 
},
{
 "date":          12814,
"variable": "uempmed",
"value":            9.1 
},
{
 "date":          12842,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":          12873,
"variable": "uempmed",
"value":              9 
},
{
 "date":          12903,
"variable": "uempmed",
"value":            9.1 
},
{
 "date":          12934,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":          12964,
"variable": "uempmed",
"value":              9 
},
{
 "date":          12995,
"variable": "uempmed",
"value":            9.2 
},
{
 "date":          13026,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":          13056,
"variable": "uempmed",
"value":            8.6 
},
{
 "date":          13087,
"variable": "uempmed",
"value":            8.4 
},
{
 "date":          13117,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":          13148,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":          13179,
"variable": "uempmed",
"value":            8.9 
},
{
 "date":          13207,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":          13238,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":          13268,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":          13299,
"variable": "uempmed",
"value":            7.6 
},
{
 "date":          13329,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":          13360,
"variable": "uempmed",
"value":            8.4 
},
{
 "date":          13391,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":          13421,
"variable": "uempmed",
"value":              8 
},
{
 "date":          13452,
"variable": "uempmed",
"value":            8.2 
},
{
 "date":          13482,
"variable": "uempmed",
"value":            7.3 
},
{
 "date":          13513,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":          13544,
"variable": "uempmed",
"value":            8.1 
},
{
 "date":          13572,
"variable": "uempmed",
"value":            8.5 
},
{
 "date":          13603,
"variable": "uempmed",
"value":            8.7 
},
{
 "date":           -916,
"variable": "psavert",
"value":            9.8 
},
{
 "date":           -885,
"variable": "psavert",
"value":            9.8 
},
{
 "date":           -854,
"variable": "psavert",
"value":              9 
},
{
 "date":           -824,
"variable": "psavert",
"value":            9.8 
},
{
 "date":           -793,
"variable": "psavert",
"value":            9.7 
},
{
 "date":           -763,
"variable": "psavert",
"value":            9.4 
},
{
 "date":           -732,
"variable": "psavert",
"value":              9 
},
{
 "date":           -701,
"variable": "psavert",
"value":            9.5 
},
{
 "date":           -672,
"variable": "psavert",
"value":            8.9 
},
{
 "date":           -641,
"variable": "psavert",
