      })
  },
  {
    key: "ACCIDENT_DT",
    description: "Accident Date",
    type: types["Date"]
  },
  {
    key: "RETURN_TO_WORK_DT",
    description: "Return to Work",
    type: types["Date"]
  }
];

var x = d3.scale.ordinal()
    .domain(dimensions.map(function(dim) { return dim.key; }))
    .rangePoints([0, width]);

var line = d3.svg.line()
    .defined(function(d) { return !isNaN(d[1]); });

var yAxis = d3.svg.axis()
    .orient("left");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var output = d3.select("body").append("pre");

var foreground = svg.append("g")
  .attr("class", "foreground");

var axes = svg.selectAll(".axis")
    .data(dimensions)
  .enter().append("g")
    .attr("class", "axis")
    .attr("transform", function(d) { return "translate(" + x(d.key) + ")"; });

d3.dsv("|", "text/plain")("accidents.txt", function(error, data) {
  if (error) throw error;

  data.forEach(function(d) {
    for (var k in d) {
      // truncate values
      d[k] = d[k].slice(0,20);
    };
    dimensions.forEach(function(p) {
      d[p.key] = p.type.coerce(d[p.key]);
    });
  });

  // type/dimension default setting happens here
  dimensions.forEach(function(dim) {
    if (!("domain" in dim)) {
      // detect domain using dimension type's extent function
      dim.domain = d3.functor(dim.type.extent)(data.map(function(d) { return d[dim.key]; }));

      // TODO - this line only works because the data encodes data with integers
      // Sorting/comparing should be defined at the type/dimension level
      dim.domain.sort(function(a,b) {
        return a - b;
      });
    }
    if (!("scale" in dim)) {
      // use type's default scale for dimension
      dim.scale = dim.type.defaultScale.copy();
    }
    dim.scale.domain(dim.domain);
  });

  foreground.selectAll("path")
      .data(data)
    .enter().append("path")
      .attr("d", draw)
      .style("stroke", function(d) { return "#6ac"; });

  axes.append("g")
      .attr("class", "axis")
      .each(function(d) {
        var renderAxis = "axis" in d
          ? d.axis.scale(d.scale)  // custom axis
          : yAxis.scale(d.scale);  // default axis
        d3.select(this).call(renderAxis);
      })
    .append("text")
      .attr("class", "title")
      .attr("text-anchor", "start")
      .text(function(d) { return "description" in d ? d.description : d.key; });

  // Add and store a brush for each axis.
  axes.append("g")
      .attr("class", "brush")
      .each(function(d) {
        d3.select(this).call(d.brush = d3.svg.brush()
          .y(d.scale)
          .on("brushstart", brushstart)
          .on("brush", brush));
      })
    .selectAll("rect")
      .attr("x", -8)
      .attr("width", 16);

  output.text(d3.tsv.format(data));

  function draw(d) {
    return line(dimensions.map(function(dim) {
      return [x(dim.key), dim.scale(d[dim.key])];
    }));
  }

  function brushstart() {
    d3.event.sourceEvent.stopPropagation();
  }

  // Handles a brush event, toggling the display of foreground lines.
  function brush() {
    var actives = dimensions.filter(function(p) { return !p.brush.empty(); }),
        extents = actives.map(function(p) { return p.brush.extent(); });

    var selected = [];

    d3.selectAll(".foreground path").style("display", function(d) {
      if (actives.every(function(dim, i) {
          // test if point is within extents for each active brush
          return dim.type.within(d[dim.key], extents[i], dim);
        })) {
        selected.push(d);
        return null;
      }
      return "none";
    });

    output.text(d3.tsv.format(selected));
  }
});

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>US Imports of Chocolate</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
            background-color: #FFFFFD;
            font-family: helvetica, sans-serif;
            max-width: 800px;
            
        	}
        	
        	svg {
        	position: absolute;
        	left: 0px;
        	top: 120px;
            margin: 12px 0 6px 12px;
        	}
        	
        	.graphBlock {
            border-radius: 15px;
       	 	}
        
        
     		#textBlock {
          	padding: 1px 10px 8px; 10px;  
			margin: 1px 6px 0px 6px;  
			position: absolute;
			left: 118px;
			top: 150px;
			width: 270px;
			border: 1px solid burlywood; 
			background-color: oldlace;
			z-index: 30;
			/*visibility: hidden;*/
		    }
		      
			#innerTextBlock{
			margin-left: 0px;
			margin-top: 24px;
			width: 592px;
			padding: 0px 15px 9px 15px;
			border: 1px dotted darkkhaki; 
			background-color: oldlace;
			}	
			
			
			.title {
            position: absolute;
			left: 5px;
			top: 65px;
			height: 20px;
			line-height: 125%;
            font-size:17px;
            font-weight: bold;
            color: sienna;
            margin: 34px 0 10px 98px;
            width: 855px;
        	}	
        	
        	.subtitle {
        	font-size: 14px;
        	width: 855px;
        	}

			h1 {
        	margin: 24px 6px 4px 6px;
        	font-weight: bold;
        	padding-left: 8px;
        	padding-bottom: 2px;
        	font-size: 20px;
        	border-bottom: 3px solid darkgoldenrod;
        	color: sienna;
        	width: 855px;
        	}
        
        	h2 {
        	margin: 24px 0 0 0;
        	font-weight: bold;
        	font-size: 20px;
        	color: sienna;
        	width: 855px;
        }

			h3 {
            color:sienna;
            font-size: 13px;
            line-height: 120%;
            margin: 8px 0 0px 0;
            padding-top:3px;
        }
        
        .intro {
            font-size: 15px;
            font-weight: bold;
            color: black;
            width: 855px;
            margin-top: 2px;
            margin-left: 6px;
            padding-left: 8px;
        }
        
        .sidenote {
            line-height: 125%;
            font-size:12px;
            margin: 3px 0 0px 0px;
        }
        
         .source {
            position: absolute;
            top: 935px;
            left: 616px;
            padding: 0 40px 0 0;
            font-size: 11px;
            color: black;
            font-style: italic;
            text-align: right;
            margin-top: -5px;
            line-height: 130%;
            
        }
    
        a {
            text-decoration: none;
            color: sienna;
        }

        .axis path,
			.axis line {
				fill: none;
				stroke: darkkhaki;
				stroke-dasharray:1, 2;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 10px;
			}

		.label {
			fill: sienna;
			font-size: 13px;
		}
		
		.noBold {
			font-weight: normal;
		}
			
			
			
		
			
			/*
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}
			
			*/
			
			g path {
				opacity: 0.6;
			}
			
			g.canada path {
			    stroke: sienna;
			    stroke-width: 2;
			    opacity: 1;
			}
			
			g.mexico path {
			    stroke: darkolivegreen;
			    stroke-width: 2;
			    opacity: 1;
			}
			
			g.netherlands path {
			    stroke: darkslateblue;
			    stroke-width: 2;
			    opacity: 1;
			}
			
			g.brazil path {
			    stroke: crimson;
			    stroke-width: 2;
			    opacity: 1;
			}
			
			g.malaysia path {
			    stroke: goldenrod;
			    stroke-width: 2;
			    opacity: 1;
			}
			
			g.indonesia path {
			    stroke: steelblue;
			    stroke-width: 2;
			    opacity: 1;
			}
			
			g path:hover {
				stroke: black;
				stroke-width: 3;
			}
			
			

		</style>
	</head>
	<body>
	
		<header>
        <h1>Canada continues to be the major exporter of chocolate to the United States.</h1>
        <p class="intro">Mexico is a distant second; once-mighty Brazil, Netherlands, and other countries are no longer big players.<p>
    </header>
    <p class="title">Import values of chocolate entering US ports from selected countries, 1989&ndash;2014<br /><span class="noBold subtitle">Hover over the greyed-out lines to see what some of the other chocolate-exporting countries are.</span></p>
    <div id="textBlock">
    	
        
        
        
        <h3>This chart represents mostly wholesale chocolate for the  food-service and food-manufacturing industries.</h3>
        <p class="sidenote">Here &ldquo;chocolate&rdquo; comprises chocolate bars and slabs weighing more than two kilograms each, cocoa paste, cocoa butter, and cocoa powder. Popular sweets such as Mars Bars, Kit Kats, and Hershey's Kisses are <em>not</em> included in the data.  </p>
        <h3>The power of NAFTA</h3>
        <p class="sidenote">The USDA says that &ldquo;North American Free Trade Agreement partners Canada and Mexico are not only the main destinations for US exports but also the main suppliers of chocolate candy to the US market.&rdquo;  </p>
		<p class="sidenote">But does that doesn't necessarily mean that Canada's and Mexico's stronger presence is <em>because</em> of NAFTA&mdash;does it? (NAFTA was passed in December 1993.) </p>
		
		
		
		
    </div>
    <svg class="graphBlock">	
    <p class="source">Values adjusted for inflation. <br />
    Source: USDA, <a href ="http://www.fas.usda.gov/gats"">www.fas.usda.gov/gats</a>
	

		<script type="text/javascript">	
		

			//Dimensions and padding
			var w = 870;
			var h = 800;
			var padding = [ 20, 80, 50, 90 ];  //Top, right, bottom, left



			//Set up date formatting and years
			var dateFormat = d3.time.format("%Y");



			//Set up scales
			var xScale = d3.time.scale()
						.range([ 0, w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);

            /*var sideScale = d3.scale.ordinal()
					.rangeRoundBands([ padding[0], h - padding[2] ], 0.15); */

			//Configure axis generators
			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.tickSize(-(h-padding[0]-padding[2]))
							.outerTickSize(0)
							.tickPadding(6)
							.ticks(16)
							.tickFormat(function(d) {
								return dateFormat(d);
							});

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
							.tickSize(-(w-padding[3]-padding[1]))
							.outerTickSize(0)
							.tickPadding(6);

			
			var svg = d3.select("svg")
					.attr("width", w)
					.attr("height", h);
			
			
			
			
			
			
			
			var naftaLine = svg.append("line")
                        .attr("x1", 134.98466761581426 + padding[3])
                        .attr("y1", 700 + padding[2])
                        .attr("x2", 134.98466761581426 + padding[3])
                        .attr("y2", padding[0])
                        .attr("stroke-width", 1)
                        .attr("stroke", "peru")
                        .style("opacity", "0.8");	
                        
                        
			var recessionArea = svg.append("rect")
 						.attr("x", 527 + padding[3])
						.attr("y", padding[0])
						.attr("width", 44)
						.attr("height", 730)
						.attr("fill", "wheat")
						.style("opacity", "0.4");
						
						
			/*var referenceLabelNafta = svg.append("text")
					.attr("x", 236)
					.attr("y", 375)
					.text("<-- NAFTA")
					.attr("font-family", "Helvetica, sans-serif")
					.attr("font-size", "14px")
					.attr("fill", "dimgray"); */
					
					
					
					
			

			//Configure line generator
			var line = d3.svg.line()
				.x(function(d) {
					return xScale(dateFormat.parse(d.year)) + padding[3];
				})
				.y(function(d) {
					return yScale(+d.amount);
				})
				.interpolate("monotone");


			//Load data
			d3.csv("chocolate_imports_1989-2014-2.csv", function(data) {

				//Data is loaded in, but we need to restructure it.
				//Remember, each line requires an array of x/y pairs;
				//that is, an array of arrays, like so:
				//
				//	[ [x: 1, y: 1], [x: 2, y: 2], [x: 3, y: 3] ]
				//
				//We, however, are using 'year' as x and 'amount' as y.
				//We also need to know which country belongs to each
				//line, so we will build an array of objects that is
				//structured like this:
				/*

					[
						{
							country: "Australia",
							emissions: [
										{ year: 1961, amount: 90589.568 },
										{ year: 1962, amount: 94912.961 },
										{ year: 1963, amount: 101029.517 },
										…
									   ]
						},
						{
							country: "Bermuda",
							emissions: [
										{ year: 1961, amount: 176.016 },
										{ year: 1962, amount: 157.681 },
										{ year: 1963, amount: 150.347 },
										…
									   ]
						},
						…
					 ]

				*/
				//Note that this is an array of objects. Each object
				//contains two values, 'country' and 'emissions'.
				//The 'emissions' value is itself an array, containing
				//more objects, each one holding 'year' and 'amount' values.

				//New array with all the years, for referencing later
				var years = ["1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014"];

				//Create a new, empty array to hold our restructured dataset
				var dataset = [];

				//Loop once for each row in data
				//I only want to use the first ten rows
				for (var i = 0; i < 11; i++) {

					//Create new object with this country's name and empty array
					dataset[i] = {
						sourceName: data[i].Source,
						exports: []
					};

					//Loop through all the years
					for (var j = 0; j < years.length; j++) {

						// If value is not empty
						if (data[i][years[j]]) {
							//Add a new object to the emissions data array
							//for this country
							var origValue = data[i][years[j]];
							//console.log(origValue);
							var adjustRate = 1;
							var adjustedValue = origValue * adjustRate;
							//console.log(adjustedValue);
							
							if (years[j] == "1989") {
							    adjustRate = 1.909;
							}
							
							if (years[j] == "1990") {
							    adjustRate = 1.811;
							}
							
							if (years[j] == "1991") {
							    adjustRate = 1.738;
							}
							
							if (years[j] == "1992") {
							    adjustRate = 1.687;
							}
							
							if (years[j] == "1993") {
							    adjustRate = 1.638;
							}
							
							if (years[j] == "1994") {
							    adjustRate = 1.553;
							}
							if (years[j] == "1995") {
							    adjustRate = 1.509;
							}
							
							if (years[j] == "1996") {
							    adjustRate = 1.509;
							}
							
							if (years[j] == "1997") {
							    adjustRate = 1.475;
							}
							
							if (years[j] == "1998") {
							    adjustRate = 1.452;
							}
							
							if (years[j] == "1999") {
							    adjustRate = 1.421;
							}
							
							if (years[j] == "2000") {
							    adjustRate = 1.375;
							}
							
							if (years[j] == "2001") {
							    adjustRate = 1.337;
							}
							
							if (years[j] == "2002") {
							    adjustRate = 1.316;
							}
							
							if (years[j] == "2003") {
							    adjustRate = 1.287;
							}
							
							if (years[j] == "2004") {
							    adjustRate = 1.253;
							}
							
							if (years[j] == "2005") {
							    adjustRate = 1.212;
							}
							
							if (years[j] == "2006") {
							    adjustRate = 1.174;
							}
							
							if (years[j] == "2007") {
							    adjustRate = 1.142;
							}
							
							if (years[j] == "2008") {
							    adjustRate = 1.100;
							}
							
							if (years[j] == "2009") {
							    adjustRate = 1.103;
							}
							
							if (years[j] == "2010") {
							    adjustRate = 1.086;
							}
							
							if (years[j] == "2011") {
							    adjustRate = 1.052;
							}
							
							if (years[j] == "2012") {
							    adjustRate = 1.031;
							}
							
							if (years[j] == "2013") {
							    adjustRate = 1.016;
							}
							
							adjustedValue = origValue * adjustRate;
							
							dataset[i].exports.push({
								year: years[j],
								amount: adjustedValue
							});
						}

					}

				}
				
				//Uncomment to log the original data to the console
				// console.log(data);

				//Uncomment to log the newly restructured dataset to the console
				// console.log(dataset);



				//Set scale domains
				xScale.domain([ 
					d3.min(years, function(d) {
						return dateFormat.parse(d);
					}),
					d3.max(years, function(d) {
						return dateFormat.parse(d);
					})
				]);

				yScale.domain([ 
					d3.max(dataset, function(d) {
						return d3.max(d.exports, function(d) {
							return +d.amount * 1.01;
						});
					}),
					0
				]);
                
                
                //sideScale.domain(data.map(function(d) { return d.Source; } ));


				//Make a group for each country
				var groups = svg.selectAll("g")
					.data(dataset)
					.enter()
					.append("g")
					.attr("class", function(d){
					    if (d.sourceName == "Canada") {
					        return "canada";
					        }
					        
					    if (d.sourceName == "Mexico") {
					        return "mexico";
					        }
					        
					    if (d.sourceName == "Netherlands") {
					        return "netherlands";
					        }
					        
					    if (d.sourceName == "Brazil") {
					        return "brazil";
					        }
					        
					    if (d.sourceName == "Malaysia") {
					        return "malaysia";
					        }
					        
					    if (d.sourceName == "Indonesia") {
					        return "indonesia";
					        }
					    })
					    ;

				//Append a title with the country name (so we get easy tooltips)
				groups.append("title")
					.text(function(d) {
						return d.sourceName;
					});

					
					
				//Within each group, create a new line/path,
				//binding just the emissions data to each one
				groups.selectAll("path")
					.data(function(d) {
						return [ d.exports ];
					})
					.enter()
					.append("path")
					.attr("class", "line")
					.attr("d", line)
					.attr("fill", "none")
					.attr("stroke", "lightgray")
					.attr("stroke-width", 2);
			
		
				//Axes
				
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate("+ padding[3]  + "," +(h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);
	    				
			svg.append("text")
				 	.attr("class", "label")
        			.attr("y", (h - padding[2]/2))
        			.attr("x", w/2)
        			.attr("dy", "1em")
        			.style("text-anchor", "middle")
        			.text("Year");
	
			 svg.append("text")
				 	.attr("class", "label")
        			.attr("transform", "rotate(-90)")
        			.attr("y", padding[3]-60)
        			.attr("x",0 - (h/2))
        			.attr("dy", "1em")
        			.style("text-anchor", "middle")
        			.text("Value of imported chocolate, in millions of US dollars");
        			
        			
        	var referenceLabelNafta = svg.append("foreignObject")
				.attr("x", 220)
				.attr("y", 375)	
    			.attr("width", 120)
    			.attr("height", 50)
  				.append("xhtml:body")
    			.style("font", "12px Helvetica, sans-serif")
    			.style("color", "darkred")
    			.html("<p>&larr; NAFTA passed</p>");		
				
			var referenceLabelRecession = svg.append("foreignObject")
				.attr("x", 460)
				.attr("y", 375)	
    			.attr("width", 160)
    			.attr("height", 100)
  				.append("xhtml:body")
    			.style("font", "12px Helvetica, sans-serif")
    			.style("color", "darkred")
    			.style("text-align", "right")
    			.html("<p>The Great Recession &rarr; </p>");
        			
        	
        	// Borrowing Ruben V's code for data labels. Thanks, Ruben!!!
        	
        		var datalabel = svg.selectAll(".lineLabel")
					.data(dataset.filter(function(d) {
						console.log(d.sourceName);
						return (d.sourceName == "Canada" ||
								d.sourceName == "Mexico" ||
								d.sourceName == "Netherlands" ||
								d.sourceName == "Brazil" ||
								d.sourceName == "Malaysia" ||
								d.sourceName == "Indonesia");
					}))
					.enter()
					.append("text")
					.attr("class", "lineLabel");
					
					datalabel.attr("x", [w - padding[1] - padding[3] + 95])
							.attr("y",(function(d) {
								return yScale( d.exports[25].amount ) + 2; // year [25] -> 2014
							}))
							.attr("fill", "black")
							.attr("font-size", "11px")
							.attr("font-family", "Helvetica, sans-serif")
							.text(function(d) {
								return d.sourceName;
							});
        	
        			

			});
			//End USA data load function


		</script>

	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Soda Taxes Bubble Up</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3-tip/0.6.3/d3-tip.min.js"></script>
    <link href='http://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
    <style>

      body {
        background: black;
      }

      circle {
        fill: rgba(255, 255, 255, 0.5);
      }

      circle:hover { 
        stroke: white;
        stroke-width: 0.5px;
      }

      .d3-tip {
        font-family: 'Raleway', sans-serif;
        font-size: 1.5em;
        line-height: 1;
        padding: 7px;
        background: black;
        color: lightgray;
        border-radius: 20px;
      }
    </style>
  </head>
  <body>
    <script>

      var outerWidth = 960;
      var outerHeight = 500;
      var margin = { left: -100, top: 0, right: -100, bottom: 0 };

      var xColumn = "longitude";
      var yColumn = "latitude";
      var rColumn = "population";
      var peoplePerPixel = 10000;

      var innerWidth  = outerWidth  - margin.left - margin.right;
      var innerHeight = outerHeight - margin.top  - margin.bottom;

      var svg = d3.select("body").append("svg")
        .attr("width",  outerWidth)
        .attr("height", outerHeight);

      var zoom = d3.behavior.zoom()
        .scaleExtent([1, 20])
        .on("zoom", zoomed);

      var g = svg.append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
        .call(zoom);

      var rect = g.append("rect")
        .attr("width", outerWidth)
        .attr("height", outerHeight)
        .style("fill", "none")
        .style("pointer-events", "all");

      var container = g.append("g");

      function zoomed(){
        container.attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");
      }

      var populationFormat = d3.format(",");

      var tip = d3.tip()
        .attr("class", "d3-tip")
        .offset([-10, 0])
        .html(function(d) {
          return d.name + ": " + populationFormat(d.population);
        });

      g.call(tip);

      var xScale = d3.scale.linear().range([0, innerWidth]);
      var yScale = d3.scale.linear().range([innerHeight, 0]);
      var rScale = d3.scale.sqrt();

      function render(data){

        xScale.domain( d3.extent(data, function (d){ return d[xColumn]; }));
        yScale.domain( d3.extent(data, function (d){ return d[yColumn]; }));
        rScale.domain([0, d3.max(data, function (d){ return d[rColumn]; })]);

        // Compute the size of the biggest circle as a function of peoplePerPixel.
        var peopleMax = rScale.domain()[1];
        var rMin = 0;
        var rMax = Math.sqrt(peopleMax / (peoplePerPixel * Math.PI));
        rScale.range([rMin, rMax]);

        var circles = container.selectAll("circle").data(data);
        circles.enter().append("circle");
        circles
          .attr("cx", function (d){ return xScale(d[xColumn]); })
          .attr("cy", function (d){ return yScale(d[yColumn]); })
          .attr("r",  function (d){ return rScale(d[rColumn]); })
          .on("mouseover", tip.show)
          .on("mouseout", tip.hide);
        circles.exit().remove();
      }

      function type(d){
        d.latitude = +d.latitude;
        d.longitude = +d.longitude;
        d.population = +d.population;
        return d;
      }

      d3.csv("Soda Taxes Around the World - Soda Taxes Around the World.csv", type, render);

    </script>
  </body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>Storytelling with a Chord Diagram - Switching between Phone Brands</title>
    	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
	<link href='http://fonts.googleapis.com/css?family=Oswald:400,300,700' rel='stylesheet' type='text/css'>
	<link href='http://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
	
	<link rel="stylesheet" href="style.css">
  </head>
  <body>
    <div id="body">
		<div id="chart"></div>
		<div id="clickerWrapper">
			<div id="progress"></div>
			<div id="clicker">Let's Start</div>
		</div>
		<div id="buttonWrapper">
			<div id="buttonWrapperInner">
				<div id="skip" class="sideButton">SKIP INTRO</div>
				<div id="reset" class="sideButton">RESET</div>
				<div id="link" class="sideButton"><a href="http://bl.ocks.org/nbremer/raw/94db779237655907b907/" target="_blank">GO TO SOURCE</a></div>
			</div>
		</div>
    </div>
    
    <script src="chords.js"></script>
   </body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
		<script src="http://www.cc.puv.fi/~e1301183/circularHeatChart.js"></script>
		<script src="http://yandex.st/highlightjs/7.3/highlight.min.js"></script>
  <style>
   
    /* SVG styling */
svg {
	width: 960px;
	height: 300px;
}
#energychart svg, #chart3 svg {
	height: 360px;
}
#chart4 svg {
	height: 500px;
}
path {
	stroke: #777;
	stroke-width: 0.1px;
}

.labels {
	fill: #aaa;
	font-weight: 200;
	letter-spacing: -1px;
}
.labels.segment {
	font-size: 10px;
}

#chart3 .labels {
	fill: #555;
}

/* Document styling */
body {
	width: 960px;
	margin: 0 auto;
	font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
	font-size: 15px;
	line-height: 20px;
}
section {
	margin-bottom: 40px;
}
h1 {
	font-size: 40px;
	font-weight: 300;
	letter-spacing: -2px;
	margin: 1em 0 0.5em 0;
}
h2 {
	font-weight: 300;
}
a {
	color: #0088cc;
	text-decoration: none;
}
a:hover {
	color: #005580;
	text-decoration: underline;
}
#info {
	height: 20px;
}

footer {
	margin: 50px 0 30px 0;
}
footer p {
	font-size: 12px;
}

    
  </style>
</head>

<body>
  	<div id="chart4"></div>
			<div id="info"></div>
  <script>
       var chart = circularHeatChart()


    chart.innerRadius(40)
    .segmentHeight(19)
    .range(["purple", "cyan"])

    data = []; for(var i=0; i<216; i++) {
    data[i] = {title: "Segment "+i, value: Math.round(Math.random()*100)}; }
console.log(data);
    
    chart.accessor(function(d) {return d.value;}) .radialLabels(null) .segmentLabels(null) ;

    d3.select('#chart4')
    .selectAll('svg')
    .data([data])
    .enter()
    .append('svg')
    .call(chart)
    .selectAll('path')
    ;


    d3.selectAll("#chart4 path").on('mouseover', function(d, i) {
    d3.select("#info").text(d.title + ' has value ' + d.value);
        //should find a way to connect this witht the highlight one
        d3.selectAll("#chart4 path")
          .style("stroke-width", 3)
          .style("stroke", function(e, j) {
            return (Math.floor(i / 24) == Math.floor(j / 24)) ? "white" : "none";
        });
    });


    d3.selectAll("#chart4 svg").on('mouseout', function() {
    d3.select("#info").text(''); });

  </script>
</body>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Population By Country</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
			}

			svg {
				background-color: white;
			}
			rect {
				fill: blue;
			}

		</style>
	</head>
	<body>
		<h1> Population Data </h1>




		<script type="text/javascript">		



			var svg = d3.select("body")
						.append("svg")
						.attr("width", 1200)
						.attr("height", 1150);



			d3.csv("HDI_Corruption_Population.csv", function(data) {




				data.sort(function(a, b) {
					return d3.descending(+a.Population, +b.Population);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});



				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");


// set height for the bars
				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 12;
					})


// Resize Population Bars to fit the screen
					.attr("width", function(d) {
						return d.Population / 400000;
					})


// Label Bars

					.attr("height", 8)
					.append("title")
					.text(function(d) {
						return d.Country + "'s Population is " + d.Population;
					})

			});


		</script>

		

	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>D3 Example</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3-legend/1.1.0/d3-legend.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <style>
        
      .axis text {
        font-family: 'Open Sans', sans-serif;
        font-size: 32pt;
      }

      .axis path, .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
      }

      .color-legend text {
        font-family: 'Open Sans', sans-serif;
        font-size: 29pt;
      }

    </style>
  </head>
  <body>
    <script>

      var outerWidth = 960;
      var outerHeight = 500;
      var margin = { left: 11, top: 75, right: 377, bottom: 88 };
      var radiusMax = 231;

      var xColumn = "name";

      var colorColumn = "religion";
      var radiusColumn = "population";

      var innerWidth  = outerWidth  - margin.left - margin.right;
      var innerHeight = outerHeight - margin.top  - margin.bottom;

      var svg = d3.select("body").append("svg")
        .attr("width",  outerWidth)
        .attr("height", outerHeight);
      var g = svg.append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      var xAxisG = g.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + innerHeight + ")");
      var pieG = g.append("g");

      var colorLegendG = g.append("g")
        .attr("class", "color-legend")
        .attr("transform", "translate(595, -36)");

      var xScale = d3.scale.ordinal().rangePoints([0, innerWidth]);
      var radiusScale = d3.scale.sqrt().range([0, radiusMax]);
      var colorScale = d3.scale.category10();

      var xAxis = d3.svg.axis().scale(xScale).orient("bottom")
        .outerTickSize(0);

      var pie = d3.layout.pie();
      var arc = d3.svg.arc();

      var colorLegend = d3.legend.color()
        .scale(colorScale)
        .shapePadding(3)
        .shapeWidth(40)
        .shapeHeight(40)
        .labelOffset(4);

      function render(data){

        xScale.domain(data.map( function (d){ return d[xColumn]; }));
        radiusScale.domain([0, d3.max(data, function (d){ return d[radiusColumn]; })]);
        colorScale.domain(data.map(function (d){ return d[colorColumn]; }));

        pie.value(function (){ return 1; });
        arc.outerRadius(function(d) { 
          return radiusScale(d.data[radiusColumn]);
        });

        var pieData = pie(data);

        pieG.attr("transform", "translate(" + innerWidth / 2 + "," + innerHeight / 2 + ")");

        var slices = pieG.selectAll("path").data(pieData);
        slices.enter().append("path");
        slices
          .attr("d", arc)
          .attr("fill", function (d){ return colorScale(d.data[colorColumn]); });
        slices.exit().remove();

        xAxisG.call(xAxis);
        colorLegendG.call(colorLegend);
      }

      function type(d){
        d.name = "World";
        d.population = +d.population;
        return d;
      }

      d3.csv("religionWorldTotals.csv", type, render);

    </script>
  </body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <title>Slovensko - voľby starostov a primátorov 2014</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootswatch/3.2.0/journal/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script src="d3.tip.js"></script>
    
    <style type="text/css">
      .leaflet-tile-pane {
		opacity: .4
      }
      .leaflet-container {
        background-color: #fff;
      }
      html, body{
		  width: 100%;
		  height: 100%;
		  /*margin: 0;
		  padding: 0;*/
		}
      #map {
		  width: 100%;
		  height: 90%;
	  }
	  circle {
        /*fill: #040;
        stroke: #040;*/
        cursor: pointer;
        fill-opacity: 0.8;
        stroke-opacity: 0.01;
    }
    circle:hover {
      stroke-opacity: 1;
    }
    
    .towns {
      width: 100000px;
      height: 100000px;
    }
	  /* this is because of Bootstrap - very important! */
		svg:not(:root) {
			overflow: visible;
		}
		
    /* D3 tips */  
    .d3-tip {
      line-height: 1;
      /*font-weight: bold;*/
      padding: 12px;
      background: rgba(0, 0, 0, 0.8);
      color: #fff;
      border-radius: 2px;
    }
    .d3-tip small {
        font-size: 0.5em;
    }
    /* Style northward tooltips differently */
    .d3-tip.n:after {
      margin: -1px 0 0 0;
      top: 100%;
      left: 0;
    }
    .stronger {
      color: yellow;
      font-weight: bold;
    }
    /*overwrite bootstrap*/
        .navbar {
          margin-bottom: 0;
        }
    </style>
  </head>
  <body>
    <div class="navbar navbar-default" role=navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand">Slovensko - voľby starostov a primátorov 2014</a>
        </div>
      </div>
    </div>
   
    <div style="position:fixed;top:125px;z-index:1000;">
		<div class="alert alert-info" style="float:left;">
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#888"></svg> Nezávislí kandidáti<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#A70004"></svg> SMER-SD<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#0099bF"></svg> KDH<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#004e00"></svg> SMK-MKP<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#ff7f0e"></svg> Most-Híd<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#9744c7"></svg> SMER+KDH<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#224766"></svg> Sieť<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#301C00"></svg> SMER+SNS<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#aaf"></svg> Iné<br/>

		</div>
    </div>
    <div id="map"></div>
<script type="text/javascript">
// Create the map
  var map = L.map('map', {'zoomControl':false}).setView([48.55,19.467773], 8);
  // add an OpenStreetMap tile layer
  // also see http://wiki.openstreetmap.org/wiki/Tiles
  L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
    attribution: 'CC-BY Michal Škop | &copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors | dáta Štatistický úrad SR'
  }).addTo(map);
  L.control.zoom({"position":"topright"}).addTo(map);
  
  //svg
  var svg = d3.select(map.getPanes().overlayPane).append("svg").attr("class", "towns");
  
  //scale
  var radiusScale = d3.scale.sqrt().domain([0, 400000]).range([0, 60]);
  
  /* Initialize tooltip */
  var tip = changetooltip();

  /* Invoke the tip in the context of your visualization */
  svg.call(tip);
	
  // Add tooltip div
  var div = d3.select("body").append("div")
    .attr("class", "tooltip")
    .style("opacity", 1e-6);
  d3.csv('sk.csv', function(data) {
   d3.json('sk_mayor_votes.json',function(mayors) {
    //mapping
    nodes = data
      .map(function(d) {
        mpoint = projectPoint(d.lat,d.long);

        return {
          x: mpoint.x,
          y: mpoint.y,
          r: radiusScale(d.size),
          name: d.name,
          value: d,  //including whole d
          mayor: mayors[d.id]
        };
     });
    //adding circles
    var circle = svg.selectAll("svg")
      .data(nodes)
      .enter().append("svg:svg")
        .append("svg:circle")
        .attr("class","town")
        .attr("cx", function (d) {return d.x})
        .attr("cy", function (d) {return d.y})
	    .attr("r", function (d) {return d.r})
	    .attr("fill", function (d) {
	      if (typeof(d.mayor) != 'undefined') {
	        if (typeof(d.mayor[0].color) == 'undefined') return '#ccf'; else return d.mayor[0].color;
	      } else {
	        return '#ccf';
	      }
	    })
        .on("mouseover", tip.show)
	    .on("mouseout", tip.hide);
	   
	//on zoom or map movement, http://leafletjs.com/reference.html#events
    map.on("viewreset", changeit);
    map.on("moveend", changeit);
    //map.on("move", hidepoints);   //not needed
    map.on("zoomstart", hidepoints);
    $(".towns").show(100);
   });
  });
  
  //helper function matrix to values
  function matrixVal(s) {
      return s.split('(')[1].split(')')[0].split(',');
  }
  
  function hidepoints() {
    $(".towns").hide();
  }
  
  // adjust points after map change (zoom, move)
  function changeit() {
     //Chromium/Chrome does not support well changes, so:
     var s = $(".leaflet-map-pane").css("-webkit-transform");  //chromium, opera
     if (typeof(s) == 'undefined')
       var s = $(".leaflet-map-pane").css("transform");  //ff
     var sar = matrixVal(s);	 
  	 
  	 //if towns in svg: (not used if it is div)
  	 $(".towns").css('left',-1*parseFloat(sar[4]));
     $(".towns").css('top',-1*parseFloat(sar[5]));
  	 
     d3.selectAll(".town").each(function(d,i) { 
       //set correct x,y
       mpoint = projectPoint(d.value.lat,d.value.long,d.value.id);
       $(this)
         .attr("r",
           radiusScale(d.value.size) * Math.pow(map.getZoom(),3) / 512	//power of 3 to show the results better in small scale
          )
          /*.attr("stroke-width",
            Math.abs(radiusScale(d.value.population.p9)-radiusScale(d.value.population.p6)) * Math.pow(map.getZoom(),3) / 729	//power of 3 to show the results better in small scale
          )*/
          .attr("cx", mpoint.x)
          .attr("cy", mpoint.y);          
          
          //Reposition the SVG to cover the features.
          //note: if towns is div, next lines are needed; if it is svg, it is different:
          $(this).attr('transform',"translate(" + sar[4] + "," + sar[5] + ")");
          /*$(this).parent().css('left',-1*parseFloat(sar[4]));
          $(this).parent().css('top',-1*parseFloat(sar[5]));*/
          

        });
    $(".towns").show(300);
      
  }
    
  // Use Leaflet to implement a D3 geometric transformation.
  function projectPoint(x, y, id) {
	  var point = map.latLngToLayerPoint(new L.LatLng(x, y));
	  if (!isNumeric(point.x)) alert(id);
	  return point;
  }
  
  function changetooltip() {
    tip = d3.tip().attr('class', 'd3-tip').html(function(d) { 
      html = '<span class="stronger">' + d.name + "</span><br>";
      if (typeof(d.mayor) != 'undefined') {
        $.each(d.mayor, function(i,v) {
          if (i == 0) {
            html += '<strong>'+v.name+' <small>(' + v.party + ')</small>: ' + parseInt(v.n).toLocaleString() + '</strong><br>';
          } else {
            html += v.name+' <small>(' + v.party + ')</small>: ' + parseInt(v.n).toLocaleString() + '<br>';
          } 
        });
      }
      /*if (typeof(d.value.description) != 'undefined') {
        html += d.value.description;
      }*/
      /*else
        html += 'Ešte nie je rozhodnuté';*/
        
      return html;
    });
    return tip;
  }

function isNumeric(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
}
</script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-8592359-13', 'ocks.org');
      ga('send', 'pageview');

    </script>      
 
  </body>
</html>     
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.4.18/p5.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width: 100%; height: 100%; }
  </style>
</head>

<body>
  <script>    
    function setup(){
    
    	createCanvas(960, 500);
    }
    
    function update() {

    }
    
    function draw() {
      var y = Math.sin(frameCount/12) * 200;
      var x = Math.cos(frameCount/12) * 200;
      var size = Math.sin(frameCount / 6) * 100;
      ellipse(480 + x, 250 + y, size, size);
    	
    }
  </script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.link {
  stroke: #ccc;
}

.node text {
  pointer-events: none;
  font: 10px sans-serif;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var force = d3.layout.force()
    .gravity(.05)
    .distance(100)
    .charge(-100)
    .size([width, height]);

d3.json("graph.json", function(error, json) {
  if (error) throw error;

  force
      .nodes(json.nodes)
      .links(json.links)
      .start();

  var link = svg.selectAll(".link")
      .data(json.links)
    .enter().append("line")
      .attr("class", "link");

  var node = svg.selectAll(".node")
      .data(json.nodes)
    .enter().append("g")
      .attr("class", "node")
      .call(force.drag);

  node.append("image")
      .attr("xlink:href", "https://github.com/favicon.ico")
      .attr("x", -8)
      .attr("y", -8)
      .attr("width", 16)
      .attr("height", 16);

  node.append("text")
      .attr("dx", 12)
      .attr("dy", ".35em")
      .text(function(d) { return d.name });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
  });
});

</script>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>D3 Legend Example</title>
    
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3-legend/1.1.0/d3-legend.js"></script>
    <script src="colorbrewer.min.js"></script>
  </head>
  <body>
    <svg width="960" height="500"></svg>
    <script>
      var svg = d3.select("svg");

      // Color legend.
      var colorScale = d3.scale.quantize()
        .domain([ 0, 0.15 ])
        .range(colorbrewer.YlGn[9]);

      var colorLegend = d3.legend.color()
        .labelFormat(d3.format(".2f"))
        .scale(colorScale)
        .shapePadding(10)
        .shapeWidth(30)
        .shapeHeight(30)
        .labelOffset(10);

      svg.append("g")
        .attr("transform", "translate(200, 60)")
        .call(colorLegend);


      // Size legend.
      var sizeScale = d3.scale.linear()
        .domain([0, 10])
        .range([2, 30]);

      var sizeLegend = d3.legend.size()
        .scale(sizeScale)
        .shape("circle")
        .shapePadding(3)
        .cells(9)
        .labelOffset(10);

      svg.append("g")
        .attr("transform", "translate(650, 60)")
        .call(sizeLegend);

    </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8">
<meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0"/>

<title>Leaflet vector tile map of rivers</title>

<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.css" />
<!--[if lte IE 8]>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.ie.css" />
<![endif]-->
<script src="http://cdn.leafletjs.com/leaflet-0.5/leaflet.js"></script>
<script src="http://www.somebits.com/rivers/lib/leaflet-hash.js"></script>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script src="TileLayer.d3_topoJSON.js"></script>

<style type="text/css">
html, body { height: 100% }
#map { min-height: 100%; }
body {
    margin: 0;
    font-family: Helvetica, Arial, sans-serif; font-size: 12px;
    overflow: hidden;
    background-color: #f00;
}
.leaflet-popup-content-wrapper {
    -webkit-border-radius: 5px;
    border-radius: 5px;
}

path { stroke-linejoin; round; stroke-linecap: round; fill: none}
path.river { stroke : #24b; }
path.road { stroke: #b42; }
path.water { stroke: #bcf; fill: #abf; }
path.landuse { stroke: #bb2; stroke-width: 0; fill: #cc2; opacity: 0.4 }
path.building { stroke: #f00; stroke-width: 0; fill: #f00; }
img { -webkit-filter: grayscale(100%) brightness(40%) contrast(150%);}

</style>

</head><body>

<div id="map"></div>

<script type="text/javascript">

// Construct map, center if no location provided
var map = L.map('map', { minZoom: 7, maxZoom: 15 } );

var hash = new L.Hash(map);
if (!window.location.hash) {
    map.setView([39.28, -121.18], 10);
}

// Make the base map; a raster tile relief map from ESRI
var esriRelief = 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}'
var basemap = L.tileLayer(esriRelief, {
        attribution: '<a href="http://www.arcgis.com/home/item.html?id=9c5370d0b54f4de1b48a3792d7377ff2">ESRI shaded relief</a>, <a href="http://www.horizon-systems.com/NHDPlus/NHDPlusV2_home.php">NHDPlus v2</a>, OpenStreetMap',
        maxZoom: 13
});
basemap.addTo(map);

// Add a fake GeoJSON line to coerce Leaflet into creating the <svg> tag that d3_geoJson needs
new L.geoJson({"type": "LineString","coordinates":[[0,0],[0,0]]}).addTo(map);

// Land use areas from OpenStreetMap
var landColors = {
  "farm": 1,
  "meadow": 1,
  "scrub": 1,
  "forest": 1,
  "farmyard": 1,
  "farmland": 1,
  "wood": 1,
  "park": 1,
  "cemetery": 1,
  "golf_course": 1,
  "grass": 1,
  "nature_reserve": 1,
  "pitch": 1,
  "common": 1,
  "residential": "#ddd",
  "industrial": "#b3c",
  "commercial": "#b3c",
  "retail": "#b3c",
  "parking": "#b3c",
  "quarry": "#b3c",
  "school": "#b3c",
  "hospital": "#b3c",
  "college": "#b3c",
  "university": "#b3c",
}
function rando(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}
new L.TileLayer.d3_topoJSON("http://tile.openstreetmap.us/vectiles-land-usages/{z}/{x}/{y}.topojson", {
  class: "landuse",
  layerName: "vectile",
  style: function(d) {
    var c = landColors[d.properties.kind];
    if (!c) { c = "#fff"; }
    if (c == 1) {    // random greens
      c = "hsl(" + rando(100, 130) + ", " + rando(50,70) + "%, " + rando(30, 50) + "%)";
    }
    return "fill: " + c;
  }
}).addTo(map);

// Water Areas from OpenStreetMap
new L.TileLayer.d3_topoJSON("http://tile.openstreetmap.us/vectiles-water-areas/{z}/{x}/{y}.topojson", {
  class: "water",
  layerName: "vectile",
  style: ""
}).addTo(map);

// Highways from OpenStreetMap
var roadSizes = {
  "highway": "5px",
  "major_road": "3px",
  "minor_road": "1px",
  "rail": "0px",
  "path": "0.5px"
};
new L.TileLayer.d3_topoJSON("http://tile.openstreetmap.us/vectiles-highroad/{z}/{x}/{y}.topojson", {
  class: "road",
  layerName: "vectile",
  style: function(d) { return "stroke-width: " + roadSizes[d.properties.kind]; }
}).addTo(map);


</script>
</body></html>
<!doctype html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<title>日本地図を描画する</title>
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script src="http://d3js.org/topojson.v0.min.js"></script>
</head>
<body>

<script>
var width = 960;
var height = 500;

var svg = d3.select("body").append("svg")
	.attr("width", width)
	.attr("height", height);

d3.json("japan.geojson", function (error, jpn) {

    var projection = d3.geo.mercator()
	    .center([137, 34])
	    .scale(900)
	    .translate([width / 2, height / 2]);

    var path = d3.geo.path()
	    .projection(projection);

    svg.selectAll("path")
	.data(jpn.features)
	.enter()
	.append("path")
	.attr("stroke", "white")
	.attr("stroke-width", "0.5")
	.attr("d", path);
});
</script>
</body>
</html><!doctype html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<title>日本地図を描画する</title>
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script src="http://d3js.org/topojson.v0.min.js"></script>
</head>
<body>

	<script>
var width = 960;
var height = 500;

var svg = d3.select("body").append("svg")
	.attr("width", width)
	.attr("height", height);

d3.json("japan.topojson", function (error, jpn) {

	var projection = d3.geo.mercator()
		.center([137, 34])
		.scale(900)
		.translate([width / 2, height / 2]);

	var path = d3.geo.path()
		.projection(projection);

	var features = topojson.object(jpn, jpn.objects.japan);

	svg.selectAll("path")
	.data(features.geometries)
	.enter()
	.append("path")
	.attr("stroke", "white")
	.attr("stroke-width", "0.5")
	.attr("d", path);
});
</script>
</body>
</html><!DOCTYPE html>
<html style="height: 100%; width: 100%;">
    <head>
        <title>&#181Katastr </title> 
         <meta name="description" content="micro Katastr s využitím Mapy API v4 - sampl">
         <meta http-equiv="content-type" content="text/html; charset=UTF-8">    
         <meta name="author" content="Stanislav Sumbera - jmeno@prijmeni.com"> 
         <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
         <meta name="apple-mobile-web-app-capable" content="yes" />
         <meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" />
         <script type="text/javascript" src="http://api4.mapy.cz/loader.js"></script>
         <script type="text/javascript">Loader.load();</script>
    </head>

    <body style="width: 100%; height: 100%; margin: 0px; padding: 0px">
        <div id="map" style="width:100%; height:100%"></div>
        <script type="text/javascript">
            var m = new SMap(JAK.gel("map"), SMap.Coords.fromWGS84(14.41790, 50.12655), 15);
            m.addDefaultLayer(SMap.DEF_SMART_OPHOTO).enable();

            // -- katastr layer
            m.addLayer(new SMap.Layer.WMS(null, "http://services.cuzk.cz/wms/wms.asp", {
                                                format: "image/png",
                                                "LAYERS": "DKM_I,RST_KN_I,RST_KMD_I",
                                                "TRANSPARENT": true,
                                                "SRS": "EPSG:32633"
                                            }, { alpha: true })).enable();

            // -- marker layer
            var markerLayer = new SMap.Layer.Marker();
            m.addLayer(markerLayer).enable();
            var marker = new SMap.Marker(SMap.Coords.fromWGS84(0, 0), "positionMarker", {});
            markerLayer.addMarker(marker);

            // -- controls
            m.addDefaultControls();
            m.addControl(new SMap.Control.Orientation({ mode: "ccw" }), { left: "5px", top: "5px" });
            m.addControl(new SMap.Control.Orientation({ mode: "cw" }), { left: "35px", top: "5px" });

            // -- handle click
            m.getSignals().addListener(window, "map-click", function (signal) {
                // -- do not click on birds view images
                if (m.getZoom() >= 16 && m.getZoom() < 19) {
                    var coords = SMap.Coords.fromEvent(signal.data.event, m);
                    marker.setCoords(coords);
                    var jtskCoords = coords.toJTSK();
                    window.open("http://nahlizenidokn.cuzk.cz/MapaIdentifikace.aspx?l=KN&x=" + Math.round(-jtskCoords[1]) + "&y=" + Math.round(-jtskCoords[0]),
                                "Katastr", "width=750,height=700,status=yes,scrollbars=yes,resizable=yes");
                }
            });
        </script>
    </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>
 
.node circle {
  fill: rgb(168, 200, 248);
  stroke: grey;
  stroke-width: 1px;
}
 
.link {
  stroke: black;
  stroke-width: 1px;
  opacity: .2;
}
 
.label {
  font-family: Arial;
  font-size: 12px;
}
 
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
 
  var width = 800,
  height = 500;
 
  var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);
    
  d3.json("graph.json", function(error, json){
    
    var nodes = json.nodes.map(function(d){
      return {
        'index' : d.id,
        'x' : d.x,
        'y' : d.y,
        'fixed': true,
        'label' : d.label
      }
      
    })
 
    var links = json.edges.map(function(d){
      return {
        'source': parseInt(d.source),
        'target': parseInt(d.target)
      }
    })
 
    var foci = [],
    labelNodes = [];
 
    for(var i=0; i < nodes.length; i++){
     
      var center = {x: nodes[i].x, y: nodes[i].y}
      foci.push(center);
     
      center["label"] = nodes[i].label;
      center["index"] = nodes[i].index;
    
      labelNodes.push(center)
    };
    
    var force = d3.layout.force()
      .nodes(nodes)
      .links(links)
      
    force.start();
    
    var force2 = d3.layout.force()
      .nodes(labelNodes)
      .links([])
      .gravity(0)
      .charge(-3)
      .on("tick", tick)
      
    force2.start();
    
    svg.append("g")
      .attr("class", "network")
      .attr("transform", "translate(430, 270)");
      
    var network = svg.selectAll("g.network")
    
    network.append("g")
      .selectAll("line.link")
      .data(links).enter()
      .append("line")
      .attr("class", "link")
      
    var link = svg.selectAll(".link")
 
    network.append("g")
      .attr("class", "nodes")
      .selectAll("g.node")
      .data(force.nodes())
      .enter()
      .append("svg:g")
      .attr("class", "node")
      
    var node = svg.selectAll("g.node")
    
    node.append("svg:circle")
      .attr("r", function(d) { return 5; })
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });
      
    network.append("g").attr("class", "labels")
      .selectAll("g.label")
      .data(labelNodes)
      .enter()
      .append("svg:text")
      .attr("class", "label")
      .text(function(d) {return d.label;})
      
    var label = svg.selectAll(".labels text")
    
      function tick(test) {
        var k = .1* test.alpha;
        
        labelNodes.forEach(function(d){
          d.y += (labelNodes[d.index].y - d.y) * k;
          d.x += (labelNodes[d.index].x - d.x) * k;
        });
        
        label.attr("x", function(d) { return d.x; })
          .attr("y", function(d) { return d.y; });
 
        link.attr("x1", function(d) { return d.source.x; })
            .attr("y1", function(d) { return d.source.y; })
            .attr("x2", function(d) { return d.target.x; })
            .attr("y2", function(d) { return d.target.y; });
      }
      
 
  });
  
</script>
</body><html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Orbit Layout Modes</title>
  <meta charset="utf-8" />
</head>
<style>

  #viz, svg {
    width: 1000px;
    height: 1000px;
  }

  text {
    pointer-events: none;
  }

  #buttons {
    position: absolute;
    top:0;
    left:0;
  }

  circle.ring {
    fill: none;
    stroke: black;
    stroke-width: 1px;
    stroke-opacity: .15;

  }
  
</style>
<script>


function makeViz() {

  d3.json("solarsystem.json", function(data) {drawOrbit(data)});

}

function drawOrbit(_data) {

  orbitScale = d3.scale.linear().domain([1, 3]).range([3.8, 1.5]).clamp(true);
  radiusScale = d3.scale.linear().domain([210.64,2500,10000,71492.68]).range([2,4,8,16]);

  planetColors = {Mercury: "gray", Venus: "#d6bb87", Earth: "#677188", Mars: "#7c5541", Jupiter: "#a36a3e", Saturn: "#e9ba85", Uranus: "#73cbf0", Neptune: "#6383d1"}


  orbit = d3.layout.orbit().size([500,500])
  .children(function(d) {return d.values})
  .revolution(function(d) {return 1 / d.orbital_period})
  .orbitSize(function(d) {return orbitScale(d.depth)})
  .speed(1)
  .mode("atomic")
  .nodes(_data);

  d3.select("svg")
.append("g")
.attr("class", "viz")
.attr("transform", "translate(50,50)")
  .selectAll("g.node").data(orbit.nodes())
  .enter()
  .append("g")
  .attr("class", "node")
  .attr("transform", function(d) {return "translate(" +d.x +"," + d.y+")"})
  .on("mouseover", nodeOver)
  .on("mouseout", nodeOut)

  d3.selectAll("g.node")
  .append("circle")
  .attr("r", function(d) {return d.radius ? radiusScale(d.radius) : 20})
  .style("fill", function(d) {return d.depth == 0 ? "#FFCC00" : d.depth == 1 ? planetColors[d.key] : "lightgray"});

  d3.selectAll("g.node").filter(function(d) {return d.depth == 1})
  .append("text")
  .text(function(d) {return d.depth == 0 ? "Sun" : d.key})
  .attr("y", 20)
  .style("text-anchor", "middle")

  d3.select("g.viz")
  .selectAll("circle.ring")
  .data(orbit.orbitalRings())
  .enter()
  .insert("circle", "g")
  .attr("class", "ring")
  .attr("r", function(d) {return d.r})
  .attr("cx", function(d) {return d.x})
  .attr("cy", function(d) {return d.y})

  d3.select("#buttons").append("button").html("solar").on("click", function() {newMode("solar")})
  d3.select("#buttons").append("button").html("flat").on("click", function() {newMode("flat")})
  d3.select("#buttons").append("button").html("atomic").on("click", function() {newMode("atomic")})
  d3.select("#buttons").append("button").html("custom").on("click", function() {newMode([4,4])})

  orbit.on("tick", function() {
    d3.selectAll("g.node")
      .attr("transform", function(d) {return "translate(" +d.x +"," + d.y+")"});

    d3.selectAll("circle.ring")
    .attr("cx", function(d) {return d.x})
    .attr("cy", function(d) {return d.y});
  });

  orbit.start();

  function newMode(_mode) {
    orbit.mode(_mode)
    .nodes(_data);

  d3.select("g.viz")
  .selectAll("circle.ring")
  .data(orbit.orbitalRings())
    .exit()
    .transition()
    .duration(500)
    .style("stroke-opacity", 0)
    .style("stroke-width", 3)
    .remove();

    d3.select("g.viz")
    .selectAll("circle.ring")
    .data(orbit.orbitalRings())
    .enter()
    .insert("circle", "g")
    .attr("class", "ring");
    
    d3.selectAll("circle.ring")
    .attr("r", function(d) {return d.r})
    .attr("cx", function(d) {return d.x})
    .attr("cy", function(d) {return d.y});

  }

  function nodeOver(d) {
    orbit.stop();

    if (d.depth == 2) {
      d3.select(this).append("text").text(d.label || d.key).style("text-anchor", "middle")
      .attr("y", 15)
      .attr("class", "moon");
    }
    d3.select(this).select("circle").style("stroke", "black").style("stroke-width", 3);
  }

  function nodeOut() {
    orbit.start();
      d3.selectAll("text.moon").remove();
    d3.selectAll("g.node > circle").style("stroke", "none").style("stroke-width", 0);    
  }


}

</script>
<body onload="makeViz()">
<div id="viz"><svg></svg><div id="buttons"></div></div>
<footer>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="d3.layout.orbit.js" charset="utf-8" type="text/javascript"></script>
</footer>
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>[]</title>
<style type="text/css">
    .clearfix{*zoom:1;}.clearfix:before,.clearfix:after{display:table;content:"";line-height:0;}
.clearfix:after{clear:both;}
.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0;}
.input-block-level{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}
article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block;}
audio,canvas,video{display:inline-block;*display:inline;*zoom:1;}
audio:not([controls]){display:none;}
html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;}
a:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}
a:hover,a:active{outline:0;}
sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline;}
sup{top:-0.5em;}
sub{bottom:-0.25em;}
img{max-width:100%;width:auto\9;height:auto;vertical-align:middle;border:0;-ms-interpolation-mode:bicubic;}
#map_canvas img,.google-maps img{max-width:none;}
button,input,select,textarea{margin:0;font-size:100%;vertical-align:middle;}
button,input{*overflow:visible;line-height:normal;}
button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0;}
button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}
label,select,button,input[type="button"],input[type="reset"],input[type="submit"],input[type="radio"],input[type="checkbox"]{cursor:pointer;}
input[type="search"]{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield;}
input[type="search"]::-webkit-search-decoration,input[type="search"]::-webkit-search-cancel-button{-webkit-appearance:none;}
textarea{overflow:auto;vertical-align:top;}
@media print{*{text-shadow:none !important;color:#000 !important;background:transparent !important;box-shadow:none !important;} a,a:visited{text-decoration:underline;} a[href]:after{content:" (" attr(href) ")";} abbr[title]:after{content:" (" attr(title) ")";} .ir a:after,a[href^="javascript:"]:after,a[href^="#"]:after{content:"";} pre,blockquote{border:1px solid #999;page-break-inside:avoid;} thead{display:table-header-group;} tr,img{page-break-inside:avoid;} img{max-width:100% !important;} @page {margin:0.5cm;}p,h2,h3{orphans:3;widows:3;} h2,h3{page-break-after:avoid;}}body{margin:0;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:13px;line-height:20px;color:#000000;background-color:#ffffff;}
a{color:#0088cc;text-decoration:none;}
a:hover,a:focus{color:#005580;text-decoration:underline;}
.img-rounded{-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;}
.img-polaroid{padding:4px;background-color:#fff;border:1px solid #ccc;border:1px solid rgba(0, 0, 0, 0.2);-webkit-box-shadow:0 1px 3px rgba(0, 0, 0, 0.1);-moz-box-shadow:0 1px 3px rgba(0, 0, 0, 0.1);box-shadow:0 1px 3px rgba(0, 0, 0, 0.1);}
.img-circle{-webkit-border-radius:500px;-moz-border-radius:500px;border-radius:500px;}
.row{margin-left:-20px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;}
.row:after{clear:both;}
.row:before,.row:after{display:table;content:"";line-height:0;}
.row:after{clear:both;}
[class*="span"]{float:left;min-height:1px;margin-left:20px;}
.container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:940px;}
.span12{width:940px;}
.span11{width:860px;}
.span10{width:780px;}
.span9{width:700px;}
.span8{width:620px;}
.span7{width:540px;}
.span6{width:460px;}
.span5{width:380px;}
.span4{width:300px;}
.span3{width:220px;}
.span2{width:140px;}
.span1{width:60px;}
.offset12{margin-left:980px;}
.offset11{margin-left:900px;}
.offset10{margin-left:820px;}
.offset9{margin-left:740px;}
.offset8{margin-left:660px;}
.offset7{margin-left:580px;}
.offset6{margin-left:500px;}
.offset5{margin-left:420px;}
.offset4{margin-left:340px;}
.offset3{margin-left:260px;}
.offset2{margin-left:180px;}
.offset1{margin-left:100px;}
.row{margin-left:-20px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;}
.row:after{clear:both;}
.row:before,.row:after{display:table;content:"";line-height:0;}
.row:after{clear:both;}
[class*="span"]{float:left;min-height:1px;margin-left:20px;}
.container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:940px;}
.span12{width:940px;}
.span11{width:860px;}
.span10{width:780px;}
.span9{width:700px;}
.span8{width:620px;}
.span7{width:540px;}
.span6{width:460px;}
.span5{width:380px;}
.span4{width:300px;}
.span3{width:220px;}
.span2{width:140px;}
.span1{width:60px;}
.offset12{margin-left:980px;}
.offset11{margin-left:900px;}
.offset10{margin-left:820px;}
.offset9{margin-left:740px;}
.offset8{margin-left:660px;}
.offset7{margin-left:580px;}
.offset6{margin-left:500px;}
.offset5{margin-left:420px;}
.offset4{margin-left:340px;}
.offset3{margin-left:260px;}
.offset2{margin-left:180px;}
.offset1{margin-left:100px;}
.row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;}
.row-fluid:after{clear:both;}
.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;}
.row-fluid:after{clear:both;}
.row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.127659574468085%;*margin-left:2.074468085106383%;}
.row-fluid [class*="span"]:first-child{margin-left:0;}
.row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.127659574468085%;}
.row-fluid .span12{width:100%;*width:99.94680851063829%;}
.row-fluid .span11{width:91.48936170212765%;*width:91.43617021276594%;}
.row-fluid .span10{width:82.97872340425532%;*width:82.92553191489361%;}
.row-fluid .span9{width:74.46808510638297%;*width:74.41489361702126%;}
.row-fluid .span8{width:65.95744680851064%;*width:65.90425531914893%;}
.row-fluid .span7{width:57.44680851063829%;*width:57.39361702127659%;}
.row-fluid .span6{width:48.93617021276595%;*width:48.88297872340425%;}
.row-fluid .span5{width:40.42553191489362%;*width:40.37234042553192%;}
.row-fluid .span4{width:31.914893617021278%;*width:31.861702127659576%;}
.row-fluid .span3{width:23.404255319148934%;*width:23.351063829787233%;}
.row-fluid .span2{width:14.893617021276595%;*width:14.840425531914894%;}
.row-fluid .span1{width:6.382978723404255%;*width:6.329787234042553%;}
.row-fluid .offset12{margin-left:104.25531914893617%;*margin-left:104.14893617021275%;}
.row-fluid .offset12:first-child{margin-left:102.12765957446808%;*margin-left:102.02127659574467%;}
.row-fluid .offset11{margin-left:95.74468085106382%;*margin-left:95.6382978723404%;}
.row-fluid .offset11:first-child{margin-left:93.61702127659574%;*margin-left:93.51063829787232%;}
.row-fluid .offset10{margin-left:87.23404255319149%;*margin-left:87.12765957446807%;}
.row-fluid .offset10:first-child{margin-left:85.1063829787234%;*margin-left:84.99999999999999%;}
.row-fluid .offset9{margin-left:78.72340425531914%;*margin-left:78.61702127659572%;}
.row-fluid .offset9:first-child{margin-left:76.59574468085106%;*margin-left:76.48936170212764%;}
.row-fluid .offset8{margin-left:70.2127659574468%;*margin-left:70.10638297872339%;}
.row-fluid .offset8:first-child{margin-left:68.08510638297872%;*margin-left:67.9787234042553%;}
.row-fluid .offset7{margin-left:61.70212765957446%;*margin-left:61.59574468085106%;}
.row-fluid .offset7:first-child{margin-left:59.574468085106375%;*margin-left:59.46808510638297%;}
.row-fluid .offset6{margin-left:53.191489361702125%;*margin-left:53.085106382978715%;}
.row-fluid .offset6:first-child{margin-left:51.063829787234035%;*margin-left:50.95744680851063%;}
.row-fluid .offset5{margin-left:44.68085106382979%;*margin-left:44.57446808510638%;}
.row-fluid .offset5:first-child{margin-left:42.5531914893617%;*margin-left:42.4468085106383%;}
.row-fluid .offset4{margin-left:36.170212765957444%;*margin-left:36.06382978723405%;}
.row-fluid .offset4:first-child{margin-left:34.04255319148936%;*margin-left:33.93617021276596%;}
.row-fluid .offset3{margin-left:27.659574468085104%;*margin-left:27.5531914893617%;}
.row-fluid .offset3:first-child{margin-left:25.53191489361702%;*margin-left:25.425531914893618%;}
.row-fluid .offset2{margin-left:19.148936170212764%;*margin-left:19.04255319148936%;}
.row-fluid .offset2:first-child{margin-left:17.02127659574468%;*margin-left:16.914893617021278%;}
.row-fluid .offset1{margin-left:10.638297872340425%;*margin-left:10.53191489361702%;}
.row-fluid .offset1:first-child{margin-left:8.51063829787234%;*margin-left:8.404255319148938%;}
.row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;}
.row-fluid:after{clear:both;}
.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;}
.row-fluid:after{clear:both;}
.row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.127659574468085%;*margin-left:2.074468085106383%;}
.row-fluid [class*="span"]:first-child{margin-left:0;}
.row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.127659574468085%;}
.row-fluid .span12{width:100%;*width:99.94680851063829%;}
.row-fluid .span11{width:91.48936170212765%;*width:91.43617021276594%;}
.row-fluid .span10{width:82.97872340425532%;*width:82.92553191489361%;}
.row-fluid .span9{width:74.46808510638297%;*width:74.41489361702126%;}
.row-fluid .span8{width:65.95744680851064%;*width:65.90425531914893%;}
.row-fluid .span7{width:57.44680851063829%;*width:57.39361702127659%;}
.row-fluid .span6{width:48.93617021276595%;*width:48.88297872340425%;}
.row-fluid .span5{width:40.42553191489362%;*width:40.37234042553192%;}
.row-fluid .span4{width:31.914893617021278%;*width:31.861702127659576%;}
.row-fluid .span3{width:23.404255319148934%;*width:23.351063829787233%;}
.row-fluid .span2{width:14.893617021276595%;*width:14.840425531914894%;}
.row-fluid .span1{width:6.382978723404255%;*width:6.329787234042553%;}
.row-fluid .offset12{margin-left:104.25531914893617%;*margin-left:104.14893617021275%;}
.row-fluid .offset12:first-child{margin-left:102.12765957446808%;*margin-left:102.02127659574467%;}
.row-fluid .offset11{margin-left:95.74468085106382%;*margin-left:95.6382978723404%;}
.row-fluid .offset11:first-child{margin-left:93.61702127659574%;*margin-left:93.51063829787232%;}
.row-fluid .offset10{margin-left:87.23404255319149%;*margin-left:87.12765957446807%;}
.row-fluid .offset10:first-child{margin-left:85.1063829787234%;*margin-left:84.99999999999999%;}
.row-fluid .offset9{margin-left:78.72340425531914%;*margin-left:78.61702127659572%;}
.row-fluid .offset9:first-child{margin-left:76.59574468085106%;*margin-left:76.48936170212764%;}
.row-fluid .offset8{margin-left:70.2127659574468%;*margin-left:70.10638297872339%;}
.row-fluid .offset8:first-child{margin-left:68.08510638297872%;*margin-left:67.9787234042553%;}
.row-fluid .offset7{margin-left:61.70212765957446%;*margin-left:61.59574468085106%;}
.row-fluid .offset7:first-child{margin-left:59.574468085106375%;*margin-left:59.46808510638297%;}
.row-fluid .offset6{margin-left:53.191489361702125%;*margin-left:53.085106382978715%;}
.row-fluid .offset6:first-child{margin-left:51.063829787234035%;*margin-left:50.95744680851063%;}
.row-fluid .offset5{margin-left:44.68085106382979%;*margin-left:44.57446808510638%;}
.row-fluid .offset5:first-child{margin-left:42.5531914893617%;*margin-left:42.4468085106383%;}
.row-fluid .offset4{margin-left:36.170212765957444%;*margin-left:36.06382978723405%;}
.row-fluid .offset4:first-child{margin-left:34.04255319148936%;*margin-left:33.93617021276596%;}
.row-fluid .offset3{margin-left:27.659574468085104%;*margin-left:27.5531914893617%;}
.row-fluid .offset3:first-child{margin-left:25.53191489361702%;*margin-left:25.425531914893618%;}
.row-fluid .offset2{margin-left:19.148936170212764%;*margin-left:19.04255319148936%;}
.row-fluid .offset2:first-child{margin-left:17.02127659574468%;*margin-left:16.914893617021278%;}
.row-fluid .offset1{margin-left:10.638297872340425%;*margin-left:10.53191489361702%;}
.row-fluid .offset1:first-child{margin-left:8.51063829787234%;*margin-left:8.404255319148938%;}
[class*="span"].hide,.row-fluid [class*="span"].hide{display:none;}
[class*="span"].pull-right,.row-fluid [class*="span"].pull-right{float:right;}
.container{margin-right:auto;margin-left:auto;*zoom:1;}.container:before,.container:after{display:table;content:"";line-height:0;}
.container:after{clear:both;}
.container:before,.container:after{display:table;content:"";line-height:0;}
.container:after{clear:both;}
.container:before,.container:after{display:table;content:"";line-height:0;}
.container:after{clear:both;}
.container:before,.container:after{display:table;content:"";line-height:0;}
.container:after{clear:both;}
.container-fluid{padding-right:20px;padding-left:20px;*zoom:1;}.container-fluid:before,.container-fluid:after{display:table;content:"";line-height:0;}
.container-fluid:after{clear:both;}
.container-fluid:before,.container-fluid:after{display:table;content:"";line-height:0;}
.container-fluid:after{clear:both;}
p{margin:0 0 10px;}
.lead{margin-bottom:20px;font-size:19.5px;font-weight:200;line-height:30px;}
small{font-size:85%;}
strong{font-weight:bold;}
em{font-style:italic;}
cite{font-style:normal;}
.muted{color:#999999;}
a.muted:hover,a.muted:focus{color:#808080;}
.text-warning{color:#c09853;}
a.text-warning:hover,a.text-warning:focus{color:#a47e3c;}
.text-error{color:#b94a48;}
a.text-error:hover,a.text-error:focus{color:#953b39;}
.text-info{color:#3a87ad;}
a.text-info:hover,a.text-info:focus{color:#2d6987;}
.text-success{color:#468847;}
a.text-success:hover,a.text-success:focus{color:#356635;}
.text-left{text-align:left;}
.text-right{text-align:right;}
.text-center{text-align:center;}
h1,h2,h3,h4,h5,h6{margin:10px 0;font-family:inherit;font-weight:bold;line-height:20px;color:inherit;text-rendering:optimizelegibility;}h1 small,h2 small,h3 small,h4 small,h5 small,h6 small{font-weight:normal;line-height:1;color:#999999;}
h1,h2,h3{line-height:40px;}
h1{font-size:35.75px;}
h2{font-size:29.25px;}
h3{font-size:22.75px;}
h4{font-size:16.25px;}
h5{font-size:13px;}
h6{font-size:11.049999999999999px;}
h1 small{font-size:22.75px;}
h2 small{font-size:16.25px;}
h3 small{font-size:13px;}
h4 small{font-size:13px;}
.page-header{padding-bottom:9px;margin:20px 0 30px;border-bottom:1px solid #eeeeee;}
ul,ol{padding:0;margin:0 0 10px 25px;}
ul ul,ul ol,ol ol,ol ul{margin-bottom:0;}
li{line-height:20px;}
ul.unstyled,ol.unstyled{margin-left:0;list-style:none;}
ul.inline,ol.inline{margin-left:0;list-style:none;}ul.inline>li,ol.inline>li{display:inline-block;*display:inline;*zoom:1;padding-left:5px;padding-right:5px;}
dl{margin-bottom:20px;}
dt,dd{line-height:20px;}
dt{font-weight:bold;}
dd{margin-left:10px;}
.dl-horizontal{*zoom:1;}.dl-horizontal:before,.dl-horizontal:after{display:table;content:"";line-height:0;}
.dl-horizontal:after{clear:both;}
.dl-horizontal:before,.dl-horizontal:after{display:table;content:"";line-height:0;}
.dl-horizontal:after{clear:both;}
.dl-horizontal dt{float:left;width:160px;clear:left;text-align:right;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}
.dl-horizontal dd{margin-left:180px;}
hr{margin:20px 0;border:0;border-top:1px solid #eeeeee;border-bottom:1px solid #ffffff;}
abbr[title],abbr[data-original-title]{cursor:help;border-bottom:1px dotted #999999;}
abbr.initialism{font-size:90%;text-transform:uppercase;}
blockquote{padding:0 0 0 15px;margin:0 0 20px;border-left:5px solid #eeeeee;}blockquote p{margin-bottom:0;font-size:16.25px;font-weight:300;line-height:1.25;}
blockquote small{display:block;line-height:20px;color:#999999;}blockquote small:before{content:'\2014 \00A0';}
blockquote.pull-right{float:right;padding-right:15px;padding-left:0;border-right:5px solid #eeeeee;border-left:0;}blockquote.pull-right p,blockquote.pull-right small{text-align:right;}
blockquote.pull-right small:before{content:'';}
blockquote.pull-right small:after{content:'\00A0 \2014';}
q:before,q:after,blockquote:before,blockquote:after{content:"";}
address{display:block;margin-bottom:20px;font-style:normal;line-height:20px;}
code,pre{padding:0 3px 2px;font-family:monospace;font-size:11px;color:#333333;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;}
code{padding:2px 4px;color:#d14;background-color:#f7f7f9;border:1px solid #e1e1e8;white-space:nowrap;}
pre{display:block;padding:9.5px;margin:0 0 10px;font-size:12px;line-height:20px;word-break:break-all;word-wrap:break-word;white-space:pre;white-space:pre-wrap;background-color:#f5f5f5;border:1px solid #ccc;border:1px solid rgba(0, 0, 0, 0.15);-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}pre.prettyprint{margin-bottom:20px;}
pre code{padding:0;color:inherit;white-space:pre;white-space:pre-wrap;background-color:transparent;border:0;}
.pre-scrollable{max-height:340px;overflow-y:scroll;}
form{margin:0 0 20px;}
fieldset{padding:0;margin:0;border:0;}
legend{display:block;width:100%;padding:0;margin-bottom:20px;font-size:19.5px;line-height:40px;color:#333333;border:0;border-bottom:1px solid #e5e5e5;}legend small{font-size:15px;color:#999999;}
label,input,button,select,textarea{font-size:13px;font-weight:normal;line-height:20px;}
input,button,select,textarea{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;}
label{display:block;margin-bottom:5px;}
select,textarea,input[type="text"],input[type="password"],input[type="datetime"],input[type="datetime-local"],input[type="date"],input[type="month"],input[type="time"],input[type="week"],input[type="number"],input[type="email"],input[type="url"],input[type="search"],input[type="tel"],input[type="color"],.uneditable-input{display:inline-block;height:20px;padding:4px 6px;margin-bottom:10px;font-size:13px;line-height:20px;color:#555555;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;vertical-align:middle;}
input,textarea,.uneditable-input{width:206px;}
textarea{height:auto;}
textarea,input[type="text"],input[type="password"],input[type="datetime"],input[type="datetime-local"],input[type="date"],input[type="month"],input[type="time"],input[type="week"],input[type="number"],input[type="email"],input[type="url"],input[type="search"],input[type="tel"],input[type="color"],.uneditable-input{background-color:#ffffff;border:1px solid #cccccc;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-webkit-transition:border linear .2s, box-shadow linear .2s;-moz-transition:border linear .2s, box-shadow linear .2s;-o-transition:border linear .2s, box-shadow linear .2s;transition:border linear .2s, box-shadow linear .2s;}textarea:focus,input[type="text"]:focus,input[type="password"]:focus,input[type="datetime"]:focus,input[type="datetime-local"]:focus,input[type="date"]:focus,input[type="month"]:focus,input[type="time"]:focus,input[type="week"]:focus,input[type="number"]:focus,input[type="email"]:focus,input[type="url"]:focus,input[type="search"]:focus,input[type="tel"]:focus,input[type="color"]:focus,.uneditable-input:focus{border-color:rgba(82, 168, 236, 0.8);outline:0;outline:thin dotted \9;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6);box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6);}
input[type="radio"],input[type="checkbox"]{margin:4px 0 0;*margin-top:0;margin-top:1px \9;line-height:normal;}
input[type="file"],input[type="image"],input[type="submit"],input[type="reset"],input[type="button"],input[type="radio"],input[type="checkbox"]{width:auto;}
select,input[type="file"]{height:30px;*margin-top:4px;line-height:30px;}
select{width:220px;border:1px solid #cccccc;background-color:#ffffff;}
select[multiple],select[size]{height:auto;}
select:focus,input[type="file"]:focus,input[type="radio"]:focus,input[type="checkbox"]:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}
.uneditable-input,.uneditable-textarea{color:#999999;background-color:#fcfcfc;border-color:#cccccc;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.025);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.025);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.025);cursor:not-allowed;}
.uneditable-input{overflow:hidden;white-space:nowrap;}
.uneditable-textarea{width:auto;height:auto;}
input:-moz-placeholder,textarea:-moz-placeholder{color:#999999;}
input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#999999;}
input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{color:#999999;}
input:-moz-placeholder,textarea:-moz-placeholder{color:#999999;}
input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#999999;}
input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{color:#999999;}
.radio,.checkbox{min-height:20px;padding-left:20px;}
.radio input[type="radio"],.checkbox input[type="checkbox"]{float:left;margin-left:-20px;}
.controls>.radio:first-child,.controls>.checkbox:first-child{padding-top:5px;}
.radio.inline,.checkbox.inline{display:inline-block;padding-top:5px;margin-bottom:0;vertical-align:middle;}
.radio.inline+.radio.inline,.checkbox.inline+.checkbox.inline{margin-left:10px;}
.input-mini{width:60px;}
.input-small{width:90px;}
.input-medium{width:150px;}
.input-large{width:210px;}
.input-xlarge{width:270px;}
.input-xxlarge{width:530px;}
input[class*="span"],select[class*="span"],textarea[class*="span"],.uneditable-input[class*="span"],.row-fluid input[class*="span"],.row-fluid select[class*="span"],.row-fluid textarea[class*="span"],.row-fluid .uneditable-input[class*="span"]{float:none;margin-left:0;}
.input-append input[class*="span"],.input-append .uneditable-input[class*="span"],.input-prepend input[class*="span"],.input-prepend .uneditable-input[class*="span"],.row-fluid input[class*="span"],.row-fluid select[class*="span"],.row-fluid textarea[class*="span"],.row-fluid .uneditable-input[class*="span"],.row-fluid .input-prepend [class*="span"],.row-fluid .input-append [class*="span"]{display:inline-block;}
input,textarea,.uneditable-input{margin-left:0;}
.controls-row [class*="span"]+[class*="span"]{margin-left:20px;}
input.span12,textarea.span12,.uneditable-input.span12{width:926px;}
input.span11,textarea.span11,.uneditable-input.span11{width:846px;}
input.span10,textarea.span10,.uneditable-input.span10{width:766px;}
input.span9,textarea.span9,.uneditable-input.span9{width:686px;}
input.span8,textarea.span8,.uneditable-input.span8{width:606px;}
input.span7,textarea.span7,.uneditable-input.span7{width:526px;}
input.span6,textarea.span6,.uneditable-input.span6{width:446px;}
input.span5,textarea.span5,.uneditable-input.span5{width:366px;}
input.span4,textarea.span4,.uneditable-input.span4{width:286px;}
input.span3,textarea.span3,.uneditable-input.span3{width:206px;}
input.span2,textarea.span2,.uneditable-input.span2{width:126px;}
input.span1,textarea.span1,.uneditable-input.span1{width:46px;}
input,textarea,.uneditable-input{margin-left:0;}
.controls-row [class*="span"]+[class*="span"]{margin-left:20px;}
input.span12,textarea.span12,.uneditable-input.span12{width:926px;}
input.span11,textarea.span11,.uneditable-input.span11{width:846px;}
input.span10,textarea.span10,.uneditable-input.span10{width:766px;}
input.span9,textarea.span9,.uneditable-input.span9{width:686px;}
input.span8,textarea.span8,.uneditable-input.span8{width:606px;}
input.span7,textarea.span7,.uneditable-input.span7{width:526px;}
input.span6,textarea.span6,.uneditable-input.span6{width:446px;}
input.span5,textarea.span5,.uneditable-input.span5{width:366px;}
input.span4,textarea.span4,.uneditable-input.span4{width:286px;}
input.span3,textarea.span3,.uneditable-input.span3{width:206px;}
input.span2,textarea.span2,.uneditable-input.span2{width:126px;}
input.span1,textarea.span1,.uneditable-input.span1{width:46px;}
.controls-row{*zoom:1;}.controls-row:before,.controls-row:after{display:table;content:"";line-height:0;}
.controls-row:after{clear:both;}
.controls-row:before,.controls-row:after{display:table;content:"";line-height:0;}
.controls-row:after{clear:both;}
.controls-row [class*="span"],.row-fluid .controls-row [class*="span"]{float:left;}
.controls-row .checkbox[class*="span"],.controls-row .radio[class*="span"]{padding-top:5px;}
input[disabled],select[disabled],textarea[disabled],input[readonly],select[readonly],textarea[readonly]{cursor:not-allowed;background-color:#eeeeee;}
input[type="radio"][disabled],input[type="checkbox"][disabled],input[type="radio"][readonly],input[type="checkbox"][readonly]{background-color:transparent;}
.control-group.warning .control-label,.control-group.warning .help-block,.control-group.warning .help-inline{color:#c09853;}
.control-group.warning .checkbox,.control-group.warning .radio,.control-group.warning input,.control-group.warning select,.control-group.warning textarea{color:#c09853;}
.control-group.warning input,.control-group.warning select,.control-group.warning textarea{border-color:#c09853;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.warning input:focus,.control-group.warning select:focus,.control-group.warning textarea:focus{border-color:#a47e3c;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #dbc59e;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #dbc59e;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #dbc59e;}
.control-group.warning .input-prepend .add-on,.control-group.warning .input-append .add-on{color:#c09853;background-color:#fcf8e3;border-color:#c09853;}
.control-group.warning .control-label,.control-group.warning .help-block,.control-group.warning .help-inline{color:#c09853;}
.control-group.warning .checkbox,.control-group.warning .radio,.control-group.warning input,.control-group.warning select,.control-group.warning textarea{color:#c09853;}
.control-group.warning input,.control-group.warning select,.control-group.warning textarea{border-color:#c09853;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.warning input:focus,.control-group.warning select:focus,.control-group.warning textarea:focus{border-color:#a47e3c;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #dbc59e;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #dbc59e;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #dbc59e;}
.control-group.warning .input-prepend .add-on,.control-group.warning .input-append .add-on{color:#c09853;background-color:#fcf8e3;border-color:#c09853;}
.control-group.error .control-label,.control-group.error .help-block,.control-group.error .help-inline{color:#b94a48;}
.control-group.error .checkbox,.control-group.error .radio,.control-group.error input,.control-group.error select,.control-group.error textarea{color:#b94a48;}
.control-group.error input,.control-group.error select,.control-group.error textarea{border-color:#b94a48;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.error input:focus,.control-group.error select:focus,.control-group.error textarea:focus{border-color:#953b39;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #d59392;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #d59392;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #d59392;}
.control-group.error .input-prepend .add-on,.control-group.error .input-append .add-on{color:#b94a48;background-color:#f2dede;border-color:#b94a48;}
.control-group.error .control-label,.control-group.error .help-block,.control-group.error .help-inline{color:#b94a48;}
.control-group.error .checkbox,.control-group.error .radio,.control-group.error input,.control-group.error select,.control-group.error textarea{color:#b94a48;}
.control-group.error input,.control-group.error select,.control-group.error textarea{border-color:#b94a48;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.error input:focus,.control-group.error select:focus,.control-group.error textarea:focus{border-color:#953b39;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #d59392;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #d59392;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #d59392;}
.control-group.error .input-prepend .add-on,.control-group.error .input-append .add-on{color:#b94a48;background-color:#f2dede;border-color:#b94a48;}
.control-group.success .control-label,.control-group.success .help-block,.control-group.success .help-inline{color:#468847;}
.control-group.success .checkbox,.control-group.success .radio,.control-group.success input,.control-group.success select,.control-group.success textarea{color:#468847;}
.control-group.success input,.control-group.success select,.control-group.success textarea{border-color:#468847;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.success input:focus,.control-group.success select:focus,.control-group.success textarea:focus{border-color:#356635;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7aba7b;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7aba7b;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7aba7b;}
.control-group.success .input-prepend .add-on,.control-group.success .input-append .add-on{color:#468847;background-color:#dff0d8;border-color:#468847;}
.control-group.success .control-label,.control-group.success .help-block,.control-group.success .help-inline{color:#468847;}
.control-group.success .checkbox,.control-group.success .radio,.control-group.success input,.control-group.success select,.control-group.success textarea{color:#468847;}
.control-group.success input,.control-group.success select,.control-group.success textarea{border-color:#468847;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.success input:focus,.control-group.success select:focus,.control-group.success textarea:focus{border-color:#356635;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7aba7b;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7aba7b;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7aba7b;}
.control-group.success .input-prepend .add-on,.control-group.success .input-append .add-on{color:#468847;background-color:#dff0d8;border-color:#468847;}
.control-group.info .control-label,.control-group.info .help-block,.control-group.info .help-inline{color:#3a87ad;}
.control-group.info .checkbox,.control-group.info .radio,.control-group.info input,.control-group.info select,.control-group.info textarea{color:#3a87ad;}
.control-group.info input,.control-group.info select,.control-group.info textarea{border-color:#3a87ad;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.info input:focus,.control-group.info select:focus,.control-group.info textarea:focus{border-color:#2d6987;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7ab5d3;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7ab5d3;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7ab5d3;}
.control-group.info .input-prepend .add-on,.control-group.info .input-append .add-on{color:#3a87ad;background-color:#d9edf7;border-color:#3a87ad;}
.control-group.info .control-label,.control-group.info .help-block,.control-group.info .help-inline{color:#3a87ad;}
.control-group.info .checkbox,.control-group.info .radio,.control-group.info input,.control-group.info select,.control-group.info textarea{color:#3a87ad;}
.control-group.info input,.control-group.info select,.control-group.info textarea{border-color:#3a87ad;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075);}.control-group.info input:focus,.control-group.info select:focus,.control-group.info textarea:focus{border-color:#2d6987;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7ab5d3;-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7ab5d3;box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.075),0 0 6px #7ab5d3;}
.control-group.info .input-prepend .add-on,.control-group.info .input-append .add-on{color:#3a87ad;background-color:#d9edf7;border-color:#3a87ad;}
input:focus:invalid,textarea:focus:invalid,select:focus:invalid{color:#b94a48;border-color:#ee5f5b;}input:focus:invalid:focus,textarea:focus:invalid:focus,select:focus:invalid:focus{border-color:#e9322d;-webkit-box-shadow:0 0 6px #f8b9b7;-moz-box-shadow:0 0 6px #f8b9b7;box-shadow:0 0 6px #f8b9b7;}
.form-actions{padding:19px 20px 20px;margin-top:20px;margin-bottom:20px;background-color:#f5f5f5;border-top:1px solid #e5e5e5;*zoom:1;}.form-actions:before,.form-actions:after{display:table;content:"";line-height:0;}
.form-actions:after{clear:both;}
.form-actions:before,.form-actions:after{display:table;content:"";line-height:0;}
.form-actions:after{clear:both;}
.help-block,.help-inline{color:#262626;}
.help-block{display:block;margin-bottom:10px;}
.help-inline{display:inline-block;*display:inline;*zoom:1;vertical-align:middle;padding-left:5px;}
.input-append,.input-prepend{display:inline-block;margin-bottom:10px;vertical-align:middle;font-size:0;white-space:nowrap;}.input-append input,.input-prepend input,.input-append select,.input-prepend select,.input-append .uneditable-input,.input-prepend .uneditable-input,.input-append .dropdown-menu,.input-prepend .dropdown-menu,.input-append .popover,.input-prepend .popover{font-size:13px;}
.input-append input,.input-prepend input,.input-append select,.input-prepend select,.input-append .uneditable-input,.input-prepend .uneditable-input{position:relative;margin-bottom:0;*margin-left:0;vertical-align:top;-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;}.input-append input:focus,.input-prepend input:focus,.input-append select:focus,.input-prepend select:focus,.input-append .uneditable-input:focus,.input-prepend .uneditable-input:focus{z-index:2;}
.input-append .add-on,.input-prepend .add-on{display:inline-block;width:auto;height:20px;min-width:16px;padding:4px 5px;font-size:13px;font-weight:normal;line-height:20px;text-align:center;text-shadow:0 1px 0 #ffffff;background-color:#eeeeee;border:1px solid #ccc;}
.input-append .add-on,.input-prepend .add-on,.input-append .btn,.input-prepend .btn,.input-append .btn-group>.dropdown-toggle,.input-prepend .btn-group>.dropdown-toggle{vertical-align:top;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.input-append .active,.input-prepend .active{background-color:#a9dba9;border-color:#46a546;}
.input-prepend .add-on,.input-prepend .btn{margin-right:-1px;}
.input-prepend .add-on:first-child,.input-prepend .btn:first-child{-webkit-border-radius:4px 0 0 4px;-moz-border-radius:4px 0 0 4px;border-radius:4px 0 0 4px;}
.input-append input,.input-append select,.input-append .uneditable-input{-webkit-border-radius:4px 0 0 4px;-moz-border-radius:4px 0 0 4px;border-radius:4px 0 0 4px;}.input-append input+.btn-group .btn:last-child,.input-append select+.btn-group .btn:last-child,.input-append .uneditable-input+.btn-group .btn:last-child{-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;}
.input-append .add-on,.input-append .btn,.input-append .btn-group{margin-left:-1px;}
.input-append .add-on:last-child,.input-append .btn:last-child,.input-append .btn-group:last-child>.dropdown-toggle{-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;}
.input-prepend.input-append input,.input-prepend.input-append select,.input-prepend.input-append .uneditable-input{-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}.input-prepend.input-append input+.btn-group .btn,.input-prepend.input-append select+.btn-group .btn,.input-prepend.input-append .uneditable-input+.btn-group .btn{-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;}
.input-prepend.input-append .add-on:first-child,.input-prepend.input-append .btn:first-child{margin-right:-1px;-webkit-border-radius:4px 0 0 4px;-moz-border-radius:4px 0 0 4px;border-radius:4px 0 0 4px;}
.input-prepend.input-append .add-on:last-child,.input-prepend.input-append .btn:last-child{margin-left:-1px;-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;}
.input-prepend.input-append .btn-group:first-child{margin-left:0;}
input.search-query{padding-right:14px;padding-right:4px \9;padding-left:14px;padding-left:4px \9;margin-bottom:0;-webkit-border-radius:15px;-moz-border-radius:15px;border-radius:15px;}
.form-search .input-append .search-query,.form-search .input-prepend .search-query{-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.form-search .input-append .search-query{-webkit-border-radius:14px 0 0 14px;-moz-border-radius:14px 0 0 14px;border-radius:14px 0 0 14px;}
.form-search .input-append .btn{-webkit-border-radius:0 14px 14px 0;-moz-border-radius:0 14px 14px 0;border-radius:0 14px 14px 0;}
.form-search .input-prepend .search-query{-webkit-border-radius:0 14px 14px 0;-moz-border-radius:0 14px 14px 0;border-radius:0 14px 14px 0;}
.form-search .input-prepend .btn{-webkit-border-radius:14px 0 0 14px;-moz-border-radius:14px 0 0 14px;border-radius:14px 0 0 14px;}
.form-search input,.form-inline input,.form-horizontal input,.form-search textarea,.form-inline textarea,.form-horizontal textarea,.form-search select,.form-inline select,.form-horizontal select,.form-search .help-inline,.form-inline .help-inline,.form-horizontal .help-inline,.form-search .uneditable-input,.form-inline .uneditable-input,.form-horizontal .uneditable-input,.form-search .input-prepend,.form-inline .input-prepend,.form-horizontal .input-prepend,.form-search .input-append,.form-inline .input-append,.form-horizontal .input-append{display:inline-block;*display:inline;*zoom:1;margin-bottom:0;vertical-align:middle;}
.form-search .hide,.form-inline .hide,.form-horizontal .hide{display:none;}
.form-search label,.form-inline label,.form-search .btn-group,.form-inline .btn-group{display:inline-block;}
.form-search .input-append,.form-inline .input-append,.form-search .input-prepend,.form-inline .input-prepend{margin-bottom:0;}
.form-search .radio,.form-search .checkbox,.form-inline .radio,.form-inline .checkbox{padding-left:0;margin-bottom:0;vertical-align:middle;}
.form-search .radio input[type="radio"],.form-search .checkbox input[type="checkbox"],.form-inline .radio input[type="radio"],.form-inline .checkbox input[type="checkbox"]{float:left;margin-right:3px;margin-left:0;}
.control-group{margin-bottom:10px;}
legend+.control-group{margin-top:20px;-webkit-margin-top-collapse:separate;}
.form-horizontal .control-group{margin-bottom:20px;*zoom:1;}.form-horizontal .control-group:before,.form-horizontal .control-group:after{display:table;content:"";line-height:0;}
.form-horizontal .control-group:after{clear:both;}
.form-horizontal .control-group:before,.form-horizontal .control-group:after{display:table;content:"";line-height:0;}
.form-horizontal .control-group:after{clear:both;}
.form-horizontal .control-label{float:left;width:160px;padding-top:5px;text-align:right;}
.form-horizontal .controls{*display:inline-block;*padding-left:20px;margin-left:180px;*margin-left:0;}.form-horizontal .controls:first-child{*padding-left:180px;}
.form-horizontal .help-block{margin-bottom:0;}
.form-horizontal input+.help-block,.form-horizontal select+.help-block,.form-horizontal textarea+.help-block,.form-horizontal .uneditable-input+.help-block,.form-horizontal .input-prepend+.help-block,.form-horizontal .input-append+.help-block{margin-top:10px;}
.form-horizontal .form-actions{padding-left:180px;}
table{max-width:100%;background-color:transparent;border-collapse:collapse;border-spacing:0;}
.table{width:100%;margin-bottom:20px;}.table th,.table td{padding:8px;line-height:20px;text-align:left;vertical-align:top;border-top:1px solid #dddddd;}
.table th{font-weight:bold;}
.table thead th{vertical-align:bottom;}
.table caption+thead tr:first-child th,.table caption+thead tr:first-child td,.table colgroup+thead tr:first-child th,.table colgroup+thead tr:first-child td,.table thead:first-child tr:first-child th,.table thead:first-child tr:first-child td{border-top:0;}
.table tbody+tbody{border-top:2px solid #dddddd;}
.table .table{background-color:#ffffff;}
.table-condensed th,.table-condensed td{padding:4px 5px;}
.table-bordered{border:1px solid #dddddd;border-collapse:separate;*border-collapse:collapse;border-left:0;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}.table-bordered th,.table-bordered td{border-left:1px solid #dddddd;}
.table-bordered caption+thead tr:first-child th,.table-bordered caption+tbody tr:first-child th,.table-bordered caption+tbody tr:first-child td,.table-bordered colgroup+thead tr:first-child th,.table-bordered colgroup+tbody tr:first-child th,.table-bordered colgroup+tbody tr:first-child td,.table-bordered thead:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child th,.table-bordered tbody:first-child tr:first-child td{border-top:0;}
.table-bordered thead:first-child tr:first-child>th:first-child,.table-bordered tbody:first-child tr:first-child>td:first-child,.table-bordered tbody:first-child tr:first-child>th:first-child{-webkit-border-top-left-radius:4px;-moz-border-radius-topleft:4px;border-top-left-radius:4px;}
.table-bordered thead:first-child tr:first-child>th:last-child,.table-bordered tbody:first-child tr:first-child>td:last-child,.table-bordered tbody:first-child tr:first-child>th:last-child{-webkit-border-top-right-radius:4px;-moz-border-radius-topright:4px;border-top-right-radius:4px;}
.table-bordered thead:last-child tr:last-child>th:first-child,.table-bordered tbody:last-child tr:last-child>td:first-child,.table-bordered tbody:last-child tr:last-child>th:first-child,.table-bordered tfoot:last-child tr:last-child>td:first-child,.table-bordered tfoot:last-child tr:last-child>th:first-child{-webkit-border-bottom-left-radius:4px;-moz-border-radius-bottomleft:4px;border-bottom-left-radius:4px;}
.table-bordered thead:last-child tr:last-child>th:last-child,.table-bordered tbody:last-child tr:last-child>td:last-child,.table-bordered tbody:last-child tr:last-child>th:last-child,.table-bordered tfoot:last-child tr:last-child>td:last-child,.table-bordered tfoot:last-child tr:last-child>th:last-child{-webkit-border-bottom-right-radius:4px;-moz-border-radius-bottomright:4px;border-bottom-right-radius:4px;}
.table-bordered tfoot+tbody:last-child tr:last-child td:first-child{-webkit-border-bottom-left-radius:0;-moz-border-radius-bottomleft:0;border-bottom-left-radius:0;}
.table-bordered tfoot+tbody:last-child tr:last-child td:last-child{-webkit-border-bottom-right-radius:0;-moz-border-radius-bottomright:0;border-bottom-right-radius:0;}
.table-bordered caption+thead tr:first-child th:first-child,.table-bordered caption+tbody tr:first-child td:first-child,.table-bordered colgroup+thead tr:first-child th:first-child,.table-bordered colgroup+tbody tr:first-child td:first-child{-webkit-border-top-left-radius:4px;-moz-border-radius-topleft:4px;border-top-left-radius:4px;}
.table-bordered caption+thead tr:first-child th:last-child,.table-bordered caption+tbody tr:first-child td:last-child,.table-bordered colgroup+thead tr:first-child th:last-child,.table-bordered colgroup+tbody tr:first-child td:last-child{-webkit-border-top-right-radius:4px;-moz-border-radius-topright:4px;border-top-right-radius:4px;}
.table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th{background-color:#f9f9f9;}
.table-hover tbody tr:hover>td,.table-hover tbody tr:hover>th{background-color:#f5f5f5;}
table td[class*="span"],table th[class*="span"],.row-fluid table td[class*="span"],.row-fluid table th[class*="span"]{display:table-cell;float:none;margin-left:0;}
.table td.span1,.table th.span1{float:none;width:44px;margin-left:0;}
.table td.span2,.table th.span2{float:none;width:124px;margin-left:0;}
.table td.span3,.table th.span3{float:none;width:204px;margin-left:0;}
.table td.span4,.table th.span4{float:none;width:284px;margin-left:0;}
.table td.span5,.table th.span5{float:none;width:364px;margin-left:0;}
.table td.span6,.table th.span6{float:none;width:444px;margin-left:0;}
.table td.span7,.table th.span7{float:none;width:524px;margin-left:0;}
.table td.span8,.table th.span8{float:none;width:604px;margin-left:0;}
.table td.span9,.table th.span9{float:none;width:684px;margin-left:0;}
.table td.span10,.table th.span10{float:none;width:764px;margin-left:0;}
.table td.span11,.table th.span11{float:none;width:844px;margin-left:0;}
.table td.span12,.table th.span12{float:none;width:924px;margin-left:0;}
.table tbody tr.success>td{background-color:#dff0d8;}
.table tbody tr.error>td{background-color:#f2dede;}
.table tbody tr.warning>td{background-color:#fcf8e3;}
.table tbody tr.info>td{background-color:#d9edf7;}
.table-hover tbody tr.success:hover>td{background-color:#d0e9c6;}
.table-hover tbody tr.error:hover>td{background-color:#ebcccc;}
.table-hover tbody tr.warning:hover>td{background-color:#faf2cc;}
.table-hover tbody tr.info:hover>td{background-color:#c4e3f3;}
[class^="icon-"],[class*=" icon-"]{display:inline-block;width:14px;height:14px;*margin-right:.3em;line-height:14px;vertical-align:text-top;background-image:url("../img/glyphicons-halflings.png");background-position:14px 14px;background-repeat:no-repeat;margin-top:1px;}
.icon-white,.nav-pills>.active>a>[class^="icon-"],.nav-pills>.active>a>[class*=" icon-"],.nav-list>.active>a>[class^="icon-"],.nav-list>.active>a>[class*=" icon-"],.navbar-inverse .nav>.active>a>[class^="icon-"],.navbar-inverse .nav>.active>a>[class*=" icon-"],.dropdown-menu>li>a:hover>[class^="icon-"],.dropdown-menu>li>a:focus>[class^="icon-"],.dropdown-menu>li>a:hover>[class*=" icon-"],.dropdown-menu>li>a:focus>[class*=" icon-"],.dropdown-menu>.active>a>[class^="icon-"],.dropdown-menu>.active>a>[class*=" icon-"],.dropdown-submenu:hover>a>[class^="icon-"],.dropdown-submenu:focus>a>[class^="icon-"],.dropdown-submenu:hover>a>[class*=" icon-"],.dropdown-submenu:focus>a>[class*=" icon-"]{background-image:url("../img/glyphicons-halflings-white.png");}
.icon-glass{background-position:0 0;}
.icon-music{background-position:-24px 0;}
.icon-search{background-position:-48px 0;}
.icon-envelope{background-position:-72px 0;}
.icon-heart{background-position:-96px 0;}
.icon-star{background-position:-120px 0;}
.icon-star-empty{background-position:-144px 0;}
.icon-user{background-position:-168px 0;}
.icon-film{background-position:-192px 0;}
.icon-th-large{background-position:-216px 0;}
.icon-th{background-position:-240px 0;}
.icon-th-list{background-position:-264px 0;}
.icon-ok{background-position:-288px 0;}
.icon-remove{background-position:-312px 0;}
.icon-zoom-in{background-position:-336px 0;}
.icon-zoom-out{background-position:-360px 0;}
.icon-off{background-position:-384px 0;}
.icon-signal{background-position:-408px 0;}
.icon-cog{background-position:-432px 0;}
.icon-trash{background-position:-456px 0;}
.icon-home{background-position:0 -24px;}
.icon-file{background-position:-24px -24px;}
.icon-time{background-position:-48px -24px;}
.icon-road{background-position:-72px -24px;}
.icon-download-alt{background-position:-96px -24px;}
.icon-download{background-position:-120px -24px;}
.icon-upload{background-position:-144px -24px;}
.icon-inbox{background-position:-168px -24px;}
.icon-play-circle{background-position:-192px -24px;}
.icon-repeat{background-position:-216px -24px;}
.icon-refresh{background-position:-240px -24px;}
.icon-list-alt{background-position:-264px -24px;}
.icon-lock{background-position:-287px -24px;}
.icon-flag{background-position:-312px -24px;}
.icon-headphones{background-position:-336px -24px;}
.icon-volume-off{background-position:-360px -24px;}
.icon-volume-down{background-position:-384px -24px;}
.icon-volume-up{background-position:-408px -24px;}
.icon-qrcode{background-position:-432px -24px;}
.icon-barcode{background-position:-456px -24px;}
.icon-tag{background-position:0 -48px;}
.icon-tags{background-position:-25px -48px;}
.icon-book{background-position:-48px -48px;}
.icon-bookmark{background-position:-72px -48px;}
.icon-print{background-position:-96px -48px;}
.icon-camera{background-position:-120px -48px;}
.icon-font{background-position:-144px -48px;}
.icon-bold{background-position:-167px -48px;}
.icon-italic{background-position:-192px -48px;}
.icon-text-height{background-position:-216px -48px;}
.icon-text-width{background-position:-240px -48px;}
.icon-align-left{background-position:-264px -48px;}
.icon-align-center{background-position:-288px -48px;}
.icon-align-right{background-position:-312px -48px;}
.icon-align-justify{background-position:-336px -48px;}
.icon-list{background-position:-360px -48px;}
.icon-indent-left{background-position:-384px -48px;}
.icon-indent-right{background-position:-408px -48px;}
.icon-facetime-video{background-position:-432px -48px;}
.icon-picture{background-position:-456px -48px;}
.icon-pencil{background-position:0 -72px;}
.icon-map-marker{background-position:-24px -72px;}
.icon-adjust{background-position:-48px -72px;}
.icon-tint{background-position:-72px -72px;}
.icon-edit{background-position:-96px -72px;}
.icon-share{background-position:-120px -72px;}
.icon-check{background-position:-144px -72px;}
.icon-move{background-position:-168px -72px;}
.icon-step-backward{background-position:-192px -72px;}
.icon-fast-backward{background-position:-216px -72px;}
.icon-backward{background-position:-240px -72px;}
.icon-play{background-position:-264px -72px;}
.icon-pause{background-position:-288px -72px;}
.icon-stop{background-position:-312px -72px;}
.icon-forward{background-position:-336px -72px;}
.icon-fast-forward{background-position:-360px -72px;}
.icon-step-forward{background-position:-384px -72px;}
.icon-eject{background-position:-408px -72px;}
.icon-chevron-left{background-position:-432px -72px;}
.icon-chevron-right{background-position:-456px -72px;}
.icon-plus-sign{background-position:0 -96px;}
.icon-minus-sign{background-position:-24px -96px;}
.icon-remove-sign{background-position:-48px -96px;}
.icon-ok-sign{background-position:-72px -96px;}
.icon-question-sign{background-position:-96px -96px;}
.icon-info-sign{background-position:-120px -96px;}
.icon-screenshot{background-position:-144px -96px;}
.icon-remove-circle{background-position:-168px -96px;}
.icon-ok-circle{background-position:-192px -96px;}
.icon-ban-circle{background-position:-216px -96px;}
.icon-arrow-left{background-position:-240px -96px;}
.icon-arrow-right{background-position:-264px -96px;}
.icon-arrow-up{background-position:-289px -96px;}
.icon-arrow-down{background-position:-312px -96px;}
.icon-share-alt{background-position:-336px -96px;}
.icon-resize-full{background-position:-360px -96px;}
.icon-resize-small{background-position:-384px -96px;}
.icon-plus{background-position:-408px -96px;}
.icon-minus{background-position:-433px -96px;}
.icon-asterisk{background-position:-456px -96px;}
.icon-exclamation-sign{background-position:0 -120px;}
.icon-gift{background-position:-24px -120px;}
.icon-leaf{background-position:-48px -120px;}
.icon-fire{background-position:-72px -120px;}
.icon-eye-open{background-position:-96px -120px;}
.icon-eye-close{background-position:-120px -120px;}
.icon-warning-sign{background-position:-144px -120px;}
.icon-plane{background-position:-168px -120px;}
.icon-calendar{background-position:-192px -120px;}
.icon-random{background-position:-216px -120px;width:16px;}
.icon-comment{background-position:-240px -120px;}
.icon-magnet{background-position:-264px -120px;}
.icon-chevron-up{background-position:-288px -120px;}
.icon-chevron-down{background-position:-313px -119px;}
.icon-retweet{background-position:-336px -120px;}
.icon-shopping-cart{background-position:-360px -120px;}
.icon-folder-close{background-position:-384px -120px;width:16px;}
.icon-folder-open{background-position:-408px -120px;width:16px;}
.icon-resize-vertical{background-position:-432px -119px;}
.icon-resize-horizontal{background-position:-456px -118px;}
.icon-hdd{background-position:0 -144px;}
.icon-bullhorn{background-position:-24px -144px;}
.icon-bell{background-position:-48px -144px;}
.icon-certificate{background-position:-72px -144px;}
.icon-thumbs-up{background-position:-96px -144px;}
.icon-thumbs-down{background-position:-120px -144px;}
.icon-hand-right{background-position:-144px -144px;}
.icon-hand-left{background-position:-168px -144px;}
.icon-hand-up{background-position:-192px -144px;}
.icon-hand-down{background-position:-216px -144px;}
.icon-circle-arrow-right{background-position:-240px -144px;}
.icon-circle-arrow-left{background-position:-264px -144px;}
.icon-circle-arrow-up{background-position:-288px -144px;}
.icon-circle-arrow-down{background-position:-312px -144px;}
.icon-globe{background-position:-336px -144px;}
.icon-wrench{background-position:-360px -144px;}
.icon-tasks{background-position:-384px -144px;}
.icon-filter{background-position:-408px -144px;}
.icon-briefcase{background-position:-432px -144px;}
.icon-fullscreen{background-position:-456px -144px;}
.dropup,.dropdown{position:relative;}
.dropdown-toggle{*margin-bottom:-3px;}
.dropdown-toggle:active,.open .dropdown-toggle{outline:0;}
.caret{display:inline-block;width:0;height:0;vertical-align:top;border-top:4px solid #000000;border-right:4px solid transparent;border-left:4px solid transparent;content:"";}
.dropdown .caret{margin-top:8px;margin-left:2px;}
.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;list-style:none;background-color:#ffffff;border:1px solid #ccc;border:1px solid rgba(0, 0, 0, 0.2);*border-right-width:2px;*border-bottom-width:2px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);-moz-box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box;}.dropdown-menu.pull-right{right:0;left:auto;}
.dropdown-menu .divider{*width:100%;height:1px;margin:9px 1px;*margin:-5px 0 5px;overflow:hidden;background-color:#e5e5e5;border-bottom:1px solid #ffffff;}
.dropdown-menu>li>a{display:block;padding:3px 20px;clear:both;font-weight:normal;line-height:20px;color:#333333;white-space:nowrap;}
.dropdown-menu>li>a:hover,.dropdown-menu>li>a:focus,.dropdown-submenu:hover>a,.dropdown-submenu:focus>a{text-decoration:none;color:#ffffff;background-color:#0081c2;background-image:-moz-linear-gradient(top, #0088cc, #0077b3);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0077b3));background-image:-webkit-linear-gradient(top, #0088cc, #0077b3);background-image:-o-linear-gradient(top, #0088cc, #0077b3);background-image:linear-gradient(to bottom, #0088cc, #0077b3);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0077b3', GradientType=0);}
.dropdown-menu>.active>a,.dropdown-menu>.active>a:hover,.dropdown-menu>.active>a:focus{color:#ffffff;text-decoration:none;outline:0;background-color:#0081c2;background-image:-moz-linear-gradient(top, #0088cc, #0077b3);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0077b3));background-image:-webkit-linear-gradient(top, #0088cc, #0077b3);background-image:-o-linear-gradient(top, #0088cc, #0077b3);background-image:linear-gradient(to bottom, #0088cc, #0077b3);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0077b3', GradientType=0);}
.dropdown-menu>.disabled>a,.dropdown-menu>.disabled>a:hover,.dropdown-menu>.disabled>a:focus{color:#999999;}
.dropdown-menu>.disabled>a:hover,.dropdown-menu>.disabled>a:focus{text-decoration:none;background-color:transparent;background-image:none;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);cursor:default;}
.open{*z-index:1000;}.open>.dropdown-menu{display:block;}
.dropdown-backdrop{position:fixed;left:0;right:0;bottom:0;top:0;z-index:990;}
.pull-right>.dropdown-menu{right:0;left:auto;}
.dropup .caret,.navbar-fixed-bottom .dropdown .caret{border-top:0;border-bottom:4px solid #000000;content:"";}
.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:1px;}
.dropdown-submenu{position:relative;}
.dropdown-submenu>.dropdown-menu{top:0;left:100%;margin-top:-6px;margin-left:-1px;-webkit-border-radius:0 6px 6px 6px;-moz-border-radius:0 6px 6px 6px;border-radius:0 6px 6px 6px;}
.dropdown-submenu:hover>.dropdown-menu{display:block;}
.dropup .dropdown-submenu>.dropdown-menu{top:auto;bottom:0;margin-top:0;margin-bottom:-2px;-webkit-border-radius:5px 5px 5px 0;-moz-border-radius:5px 5px 5px 0;border-radius:5px 5px 5px 0;}
.dropdown-submenu>a:after{display:block;content:" ";float:right;width:0;height:0;border-color:transparent;border-style:solid;border-width:5px 0 5px 5px;border-left-color:#cccccc;margin-top:5px;margin-right:-10px;}
.dropdown-submenu:hover>a:after{border-left-color:#ffffff;}
.dropdown-submenu.pull-left{float:none;}.dropdown-submenu.pull-left>.dropdown-menu{left:-100%;margin-left:10px;-webkit-border-radius:6px 0 6px 6px;-moz-border-radius:6px 0 6px 6px;border-radius:6px 0 6px 6px;}
.dropdown .dropdown-menu .nav-header{padding-left:20px;padding-right:20px;}
.typeahead{z-index:1051;margin-top:2px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.05);-moz-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.05);box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.05);}.well blockquote{border-color:#ddd;border-color:rgba(0, 0, 0, 0.15);}
.well-large{padding:24px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;}
.well-small{padding:9px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;}
.fade{opacity:0;-webkit-transition:opacity 0.15s linear;-moz-transition:opacity 0.15s linear;-o-transition:opacity 0.15s linear;transition:opacity 0.15s linear;}.fade.in{opacity:1;}
.collapse{position:relative;height:0;overflow:hidden;-webkit-transition:height 0.35s ease;-moz-transition:height 0.35s ease;-o-transition:height 0.35s ease;transition:height 0.35s ease;}.collapse.in{height:auto;}
.close{float:right;font-size:20px;font-weight:bold;line-height:20px;color:#000000;text-shadow:0 1px 0 #ffffff;opacity:0.2;filter:alpha(opacity=20);}.close:hover,.close:focus{color:#000000;text-decoration:none;cursor:pointer;opacity:0.4;filter:alpha(opacity=40);}
button.close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none;}
.btn{display:inline-block;*display:inline;*zoom:1;padding:4px 12px;margin-bottom:0;font-size:13px;line-height:20px;text-align:center;vertical-align:middle;cursor:pointer;color:#333333;text-shadow:0 1px 1px rgba(255, 255, 255, 0.75);background-color:#f5f5f5;background-image:-moz-linear-gradient(top, #ffffff, #e6e6e6);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#e6e6e6));background-image:-webkit-linear-gradient(top, #ffffff, #e6e6e6);background-image:-o-linear-gradient(top, #ffffff, #e6e6e6);background-image:linear-gradient(to bottom, #ffffff, #e6e6e6);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe6e6e6', GradientType=0);border-color:#e6e6e6 #e6e6e6 #bfbfbf;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#e6e6e6;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);border:1px solid #cccccc;*border:0;border-bottom-color:#b3b3b3;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;*margin-left:.3em;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);box-shadow:inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);}.btn:hover,.btn:focus,.btn:active,.btn.active,.btn.disabled,.btn[disabled]{color:#333333;background-color:#e6e6e6;*background-color:#d9d9d9;}
.btn:active,.btn.active{background-color:#cccccc \9;}
.btn:hover,.btn:focus,.btn:active,.btn.active,.btn.disabled,.btn[disabled]{color:#333333;background-color:#e6e6e6;*background-color:#d9d9d9;}
.btn:active,.btn.active{background-color:#cccccc \9;}
.btn:first-child{*margin-left:0;}
.btn:first-child{*margin-left:0;}
.btn:hover,.btn:focus{color:#333333;text-decoration:none;background-position:0 -15px;-webkit-transition:background-position 0.1s linear;-moz-transition:background-position 0.1s linear;-o-transition:background-position 0.1s linear;transition:background-position 0.1s linear;}
.btn:focus{outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}
.btn.active,.btn:active{background-image:none;outline:0;-webkit-box-shadow:inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);-moz-box-shadow:inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);box-shadow:inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);}
.btn.disabled,.btn[disabled]{cursor:default;background-image:none;opacity:0.65;filter:alpha(opacity=65);-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;}
.btn-large{padding:11px 19px;font-size:16.25px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;}
.btn-large [class^="icon-"],.btn-large [class*=" icon-"]{margin-top:4px;}
.btn-small{padding:2px 10px;font-size:11.049999999999999px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;}
.btn-small [class^="icon-"],.btn-small [class*=" icon-"]{margin-top:0;}
.btn-mini [class^="icon-"],.btn-mini [class*=" icon-"]{margin-top:-1px;}
.btn-mini{padding:0 6px;font-size:9.75px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;}
.btn-block{display:block;width:100%;padding-left:0;padding-right:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}
.btn-block+.btn-block{margin-top:5px;}
input[type="submit"].btn-block,input[type="reset"].btn-block,input[type="button"].btn-block{width:100%;}
.btn-primary.active,.btn-warning.active,.btn-danger.active,.btn-success.active,.btn-info.active,.btn-inverse.active{color:rgba(255, 255, 255, 0.75);}
.btn-primary{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#006dcc;background-image:-moz-linear-gradient(top, #0088cc, #0044cc);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0044cc));background-image:-webkit-linear-gradient(top, #0088cc, #0044cc);background-image:-o-linear-gradient(top, #0088cc, #0044cc);background-image:linear-gradient(to bottom, #0088cc, #0044cc);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0044cc', GradientType=0);border-color:#0044cc #0044cc #002a80;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#0044cc;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);}.btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{color:#ffffff;background-color:#0044cc;*background-color:#003bb3;}
.btn-primary:active,.btn-primary.active{background-color:#003399 \9;}
.btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{color:#ffffff;background-color:#0044cc;*background-color:#003bb3;}
.btn-primary:active,.btn-primary.active{background-color:#003399 \9;}
.btn-warning{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#faa732;background-image:-moz-linear-gradient(top, #fbb450, #f89406);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#fbb450), to(#f89406));background-image:-webkit-linear-gradient(top, #fbb450, #f89406);background-image:-o-linear-gradient(top, #fbb450, #f89406);background-image:linear-gradient(to bottom, #fbb450, #f89406);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffbb450', endColorstr='#fff89406', GradientType=0);border-color:#f89406 #f89406 #ad6704;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#f89406;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);}.btn-warning:hover,.btn-warning:focus,.btn-warning:active,.btn-warning.active,.btn-warning.disabled,.btn-warning[disabled]{color:#ffffff;background-color:#f89406;*background-color:#df8505;}
.btn-warning:active,.btn-warning.active{background-color:#c67605 \9;}
.btn-warning:hover,.btn-warning:focus,.btn-warning:active,.btn-warning.active,.btn-warning.disabled,.btn-warning[disabled]{color:#ffffff;background-color:#f89406;*background-color:#df8505;}
.btn-warning:active,.btn-warning.active{background-color:#c67605 \9;}
.btn-danger{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#da4f49;background-image:-moz-linear-gradient(top, #ee5f5b, #bd362f);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#ee5f5b), to(#bd362f));background-image:-webkit-linear-gradient(top, #ee5f5b, #bd362f);background-image:-o-linear-gradient(top, #ee5f5b, #bd362f);background-image:linear-gradient(to bottom, #ee5f5b, #bd362f);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffee5f5b', endColorstr='#ffbd362f', GradientType=0);border-color:#bd362f #bd362f #802420;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#bd362f;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);}.btn-danger:hover,.btn-danger:focus,.btn-danger:active,.btn-danger.active,.btn-danger.disabled,.btn-danger[disabled]{color:#ffffff;background-color:#bd362f;*background-color:#a9302a;}
.btn-danger:active,.btn-danger.active{background-color:#942a25 \9;}
.btn-danger:hover,.btn-danger:focus,.btn-danger:active,.btn-danger.active,.btn-danger.disabled,.btn-danger[disabled]{color:#ffffff;background-color:#bd362f;*background-color:#a9302a;}
.btn-danger:active,.btn-danger.active{background-color:#942a25 \9;}
.btn-success{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#5bb75b;background-image:-moz-linear-gradient(top, #62c462, #51a351);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#62c462), to(#51a351));background-image:-webkit-linear-gradient(top, #62c462, #51a351);background-image:-o-linear-gradient(top, #62c462, #51a351);background-image:linear-gradient(to bottom, #62c462, #51a351);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff62c462', endColorstr='#ff51a351', GradientType=0);border-color:#51a351 #51a351 #387038;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#51a351;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);}.btn-success:hover,.btn-success:focus,.btn-success:active,.btn-success.active,.btn-success.disabled,.btn-success[disabled]{color:#ffffff;background-color:#51a351;*background-color:#499249;}
.btn-success:active,.btn-success.active{background-color:#408140 \9;}
.btn-success:hover,.btn-success:focus,.btn-success:active,.btn-success.active,.btn-success.disabled,.btn-success[disabled]{color:#ffffff;background-color:#51a351;*background-color:#499249;}
.btn-success:active,.btn-success.active{background-color:#408140 \9;}
.btn-info{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#49afcd;background-image:-moz-linear-gradient(top, #5bc0de, #2f96b4);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#5bc0de), to(#2f96b4));background-image:-webkit-linear-gradient(top, #5bc0de, #2f96b4);background-image:-o-linear-gradient(top, #5bc0de, #2f96b4);background-image:linear-gradient(to bottom, #5bc0de, #2f96b4);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff2f96b4', GradientType=0);border-color:#2f96b4 #2f96b4 #1f6377;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#2f96b4;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);}.btn-info:hover,.btn-info:focus,.btn-info:active,.btn-info.active,.btn-info.disabled,.btn-info[disabled]{color:#ffffff;background-color:#2f96b4;*background-color:#2a85a0;}
.btn-info:active,.btn-info.active{background-color:#24748c \9;}
.btn-info:hover,.btn-info:focus,.btn-info:active,.btn-info.active,.btn-info.disabled,.btn-info[disabled]{color:#ffffff;background-color:#2f96b4;*background-color:#2a85a0;}
.btn-info:active,.btn-info.active{background-color:#24748c \9;}
.btn-inverse{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#363636;background-image:-moz-linear-gradient(top, #444444, #222222);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#444444), to(#222222));background-image:-webkit-linear-gradient(top, #444444, #222222);background-image:-o-linear-gradient(top, #444444, #222222);background-image:linear-gradient(to bottom, #444444, #222222);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff444444', endColorstr='#ff222222', GradientType=0);border-color:#222222 #222222 #000000;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#222222;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);}.btn-inverse:hover,.btn-inverse:focus,.btn-inverse:active,.btn-inverse.active,.btn-inverse.disabled,.btn-inverse[disabled]{color:#ffffff;background-color:#222222;*background-color:#151515;}
.btn-inverse:active,.btn-inverse.active{background-color:#080808 \9;}
.btn-inverse:hover,.btn-inverse:focus,.btn-inverse:active,.btn-inverse.active,.btn-inverse.disabled,.btn-inverse[disabled]{color:#ffffff;background-color:#222222;*background-color:#151515;}
.btn-inverse:active,.btn-inverse.active{background-color:#080808 \9;}
button.btn,input[type="submit"].btn{*padding-top:3px;*padding-bottom:3px;}button.btn::-moz-focus-inner,input[type="submit"].btn::-moz-focus-inner{padding:0;border:0;}
button.btn.btn-large,input[type="submit"].btn.btn-large{*padding-top:7px;*padding-bottom:7px;}
button.btn.btn-small,input[type="submit"].btn.btn-small{*padding-top:3px;*padding-bottom:3px;}
button.btn.btn-mini,input[type="submit"].btn.btn-mini{*padding-top:1px;*padding-bottom:1px;}
.btn-link,.btn-link:active,.btn-link[disabled]{background-color:transparent;background-image:none;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;}
.btn-link{border-color:transparent;cursor:pointer;color:#0088cc;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.btn-link:hover,.btn-link:focus{color:#005580;text-decoration:underline;background-color:transparent;}
.btn-link[disabled]:hover,.btn-link[disabled]:focus{color:#333333;text-decoration:none;}
.btn-group{position:relative;display:inline-block;*display:inline;*zoom:1;font-size:0;vertical-align:middle;white-space:nowrap;*margin-left:.3em;}.btn-group:first-child{*margin-left:0;}
.btn-group:first-child{*margin-left:0;}
.btn-group+.btn-group{margin-left:5px;}
.btn-toolbar{font-size:0;margin-top:10px;margin-bottom:10px;}.btn-toolbar>.btn+.btn,.btn-toolbar>.btn-group+.btn,.btn-toolbar>.btn+.btn-group{margin-left:5px;}
.btn-group>.btn{position:relative;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.btn-group>.btn+.btn{margin-left:-1px;}
.btn-group>.btn,.btn-group>.dropdown-menu,.btn-group>.popover{font-size:13px;}
.btn-group>.btn-mini{font-size:9.75px;}
.btn-group>.btn-small{font-size:11.049999999999999px;}
.btn-group>.btn-large{font-size:16.25px;}
.btn-group>.btn:first-child{margin-left:0;-webkit-border-top-left-radius:4px;-moz-border-radius-topleft:4px;border-top-left-radius:4px;-webkit-border-bottom-left-radius:4px;-moz-border-radius-bottomleft:4px;border-bottom-left-radius:4px;}
.btn-group>.btn:last-child,.btn-group>.dropdown-toggle{-webkit-border-top-right-radius:4px;-moz-border-radius-topright:4px;border-top-right-radius:4px;-webkit-border-bottom-right-radius:4px;-moz-border-radius-bottomright:4px;border-bottom-right-radius:4px;}
.btn-group>.btn.large:first-child{margin-left:0;-webkit-border-top-left-radius:6px;-moz-border-radius-topleft:6px;border-top-left-radius:6px;-webkit-border-bottom-left-radius:6px;-moz-border-radius-bottomleft:6px;border-bottom-left-radius:6px;}
.btn-group>.btn.large:last-child,.btn-group>.large.dropdown-toggle{-webkit-border-top-right-radius:6px;-moz-border-radius-topright:6px;border-top-right-radius:6px;-webkit-border-bottom-right-radius:6px;-moz-border-radius-bottomright:6px;border-bottom-right-radius:6px;}
.btn-group>.btn:hover,.btn-group>.btn:focus,.btn-group>.btn:active,.btn-group>.btn.active{z-index:2;}
.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0;}
.btn-group>.btn+.dropdown-toggle{padding-left:8px;padding-right:8px;-webkit-box-shadow:inset 1px 0 0 rgba(255,255,255,.125), inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);-moz-box-shadow:inset 1px 0 0 rgba(255,255,255,.125), inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);box-shadow:inset 1px 0 0 rgba(255,255,255,.125), inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);*padding-top:5px;*padding-bottom:5px;}
.btn-group>.btn-mini+.dropdown-toggle{padding-left:5px;padding-right:5px;*padding-top:2px;*padding-bottom:2px;}
.btn-group>.btn-small+.dropdown-toggle{*padding-top:5px;*padding-bottom:4px;}
.btn-group>.btn-large+.dropdown-toggle{padding-left:12px;padding-right:12px;*padding-top:7px;*padding-bottom:7px;}
.btn-group.open .dropdown-toggle{background-image:none;-webkit-box-shadow:inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);-moz-box-shadow:inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);box-shadow:inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);}
.btn-group.open .btn.dropdown-toggle{background-color:#e6e6e6;}
.btn-group.open .btn-primary.dropdown-toggle{background-color:#0044cc;}
.btn-group.open .btn-warning.dropdown-toggle{background-color:#f89406;}
.btn-group.open .btn-danger.dropdown-toggle{background-color:#bd362f;}
.btn-group.open .btn-success.dropdown-toggle{background-color:#51a351;}
.btn-group.open .btn-info.dropdown-toggle{background-color:#2f96b4;}
.btn-group.open .btn-inverse.dropdown-toggle{background-color:#222222;}
.btn .caret{margin-top:8px;margin-left:0;}
.btn-large .caret{margin-top:6px;}
.btn-large .caret{border-left-width:5px;border-right-width:5px;border-top-width:5px;}
.btn-mini .caret,.btn-small .caret{margin-top:8px;}
.dropup .btn-large .caret{border-bottom-width:5px;}
.btn-primary .caret,.btn-warning .caret,.btn-danger .caret,.btn-info .caret,.btn-success .caret,.btn-inverse .caret{border-top-color:#ffffff;border-bottom-color:#ffffff;}
.btn-group-vertical{display:inline-block;*display:inline;*zoom:1;}
.btn-group-vertical>.btn{display:block;float:none;max-width:100%;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.btn-group-vertical>.btn+.btn{margin-left:0;margin-top:-1px;}
.btn-group-vertical>.btn:first-child{-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0;}
.btn-group-vertical>.btn:last-child{-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px;}
.btn-group-vertical>.btn-large:first-child{-webkit-border-radius:6px 6px 0 0;-moz-border-radius:6px 6px 0 0;border-radius:6px 6px 0 0;}
.btn-group-vertical>.btn-large:last-child{-webkit-border-radius:0 0 6px 6px;-moz-border-radius:0 0 6px 6px;border-radius:0 0 6px 6px;}
.alert{padding:8px 35px 8px 14px;margin-bottom:20px;text-shadow:0 1px 0 rgba(255, 255, 255, 0.5);background-color:#fcf8e3;border:1px solid #fbeed5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
.alert,.alert h4{color:#c09853;}
.alert h4{margin:0;}
.alert .close{position:relative;top:-2px;right:-21px;line-height:20px;}
.alert-success{background-color:#dff0d8;border-color:#d6e9c6;color:#468847;}
.alert-success h4{color:#468847;}
.alert-danger,.alert-error{background-color:#f2dede;border-color:#eed3d7;color:#b94a48;}
.alert-danger h4,.alert-error h4{color:#b94a48;}
.alert-info{background-color:#d9edf7;border-color:#bce8f1;color:#3a87ad;}
.alert-info h4{color:#3a87ad;}
.alert-block{padding-top:14px;padding-bottom:14px;}
.alert-block>p,.alert-block>ul{margin-bottom:0;}
.alert-block p+p{margin-top:5px;}
.nav{margin-left:0;margin-bottom:20px;list-style:none;}
.nav>li>a{display:block;}
.nav>li>a:hover,.nav>li>a:focus{text-decoration:none;background-color:#eeeeee;}
.nav>li>a>img{max-width:none;}
.nav>.pull-right{float:right;}
.nav-header{display:block;padding:3px 15px;font-size:11px;font-weight:bold;line-height:20px;color:#999999;text-shadow:0 1px 0 rgba(255, 255, 255, 0.5);text-transform:uppercase;}
.nav li+.nav-header{margin-top:9px;}
.nav-list{padding-left:15px;padding-right:15px;margin-bottom:0;}
.nav-list>li>a,.nav-list .nav-header{margin-left:-15px;margin-right:-15px;text-shadow:0 1px 0 rgba(255, 255, 255, 0.5);}
.nav-list>li>a{padding:3px 15px;}
.nav-list>.active>a,.nav-list>.active>a:hover,.nav-list>.active>a:focus{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.2);background-color:#0088cc;}
.nav-list [class^="icon-"],.nav-list [class*=" icon-"]{margin-right:2px;}
.nav-list .divider{*width:100%;height:1px;margin:9px 1px;*margin:-5px 0 5px;overflow:hidden;background-color:#e5e5e5;border-bottom:1px solid #ffffff;}
.nav-tabs,.nav-pills{*zoom:1;}.nav-tabs:before,.nav-pills:before,.nav-tabs:after,.nav-pills:after{display:table;content:"";line-height:0;}
.nav-tabs:after,.nav-pills:after{clear:both;}
.nav-tabs:before,.nav-pills:before,.nav-tabs:after,.nav-pills:after{display:table;content:"";line-height:0;}
.nav-tabs:after,.nav-pills:after{clear:both;}
.nav-tabs>li,.nav-pills>li{float:left;}
.nav-tabs>li>a,.nav-pills>li>a{padding-right:12px;padding-left:12px;margin-right:2px;line-height:14px;}
.nav-tabs{border-bottom:1px solid #ddd;}
.nav-tabs>li{margin-bottom:-1px;}
.nav-tabs>li>a{padding-top:8px;padding-bottom:8px;line-height:20px;border:1px solid transparent;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0;}.nav-tabs>li>a:hover,.nav-tabs>li>a:focus{border-color:#eeeeee #eeeeee #dddddd;}
.nav-tabs>.active>a,.nav-tabs>.active>a:hover,.nav-tabs>.active>a:focus{color:#555555;background-color:#ffffff;border:1px solid #ddd;border-bottom-color:transparent;cursor:default;}
.nav-pills>li>a{padding-top:8px;padding-bottom:8px;margin-top:2px;margin-bottom:2px;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;}
.nav-pills>.active>a,.nav-pills>.active>a:hover,.nav-pills>.active>a:focus{color:#ffffff;background-color:#0088cc;}
.nav-stacked>li{float:none;}
.nav-stacked>li>a{margin-right:0;}
.nav-tabs.nav-stacked{border-bottom:0;}
.nav-tabs.nav-stacked>li>a{border:1px solid #ddd;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.nav-tabs.nav-stacked>li:first-child>a{-webkit-border-top-right-radius:4px;-moz-border-radius-topright:4px;border-top-right-radius:4px;-webkit-border-top-left-radius:4px;-moz-border-radius-topleft:4px;border-top-left-radius:4px;}
.nav-tabs.nav-stacked>li:last-child>a{-webkit-border-bottom-right-radius:4px;-moz-border-radius-bottomright:4px;border-bottom-right-radius:4px;-webkit-border-bottom-left-radius:4px;-moz-border-radius-bottomleft:4px;border-bottom-left-radius:4px;}
.nav-tabs.nav-stacked>li>a:hover,.nav-tabs.nav-stacked>li>a:focus{border-color:#ddd;z-index:2;}
.nav-pills.nav-stacked>li>a{margin-bottom:3px;}
.nav-pills.nav-stacked>li:last-child>a{margin-bottom:1px;}
.nav-tabs .dropdown-menu{-webkit-border-radius:0 0 6px 6px;-moz-border-radius:0 0 6px 6px;border-radius:0 0 6px 6px;}
.nav-pills .dropdown-menu{-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;}
.nav .dropdown-toggle .caret{border-top-color:#0088cc;border-bottom-color:#0088cc;margin-top:6px;}
.nav .dropdown-toggle:hover .caret,.nav .dropdown-toggle:focus .caret{border-top-color:#005580;border-bottom-color:#005580;}
.nav-tabs .dropdown-toggle .caret{margin-top:8px;}
.nav .active .dropdown-toggle .caret{border-top-color:#fff;border-bottom-color:#fff;}
.nav-tabs .active .dropdown-toggle .caret{border-top-color:#555555;border-bottom-color:#555555;}
.nav>.dropdown.active>a:hover,.nav>.dropdown.active>a:focus{cursor:pointer;}
.nav-tabs .open .dropdown-toggle,.nav-pills .open .dropdown-toggle,.nav>li.dropdown.open.active>a:hover,.nav>li.dropdown.open.active>a:focus{color:#ffffff;background-color:#999999;border-color:#999999;}
.nav li.dropdown.open .caret,.nav li.dropdown.open.active .caret,.nav li.dropdown.open a:hover .caret,.nav li.dropdown.open a:focus .caret{border-top-color:#ffffff;border-bottom-color:#ffffff;opacity:1;filter:alpha(opacity=100);}
.tabs-stacked .open>a:hover,.tabs-stacked .open>a:focus{border-color:#999999;}
.tabbable{*zoom:1;}.tabbable:before,.tabbable:after{display:table;content:"";line-height:0;}
.tabbable:after{clear:both;}
.tabbable:before,.tabbable:after{display:table;content:"";line-height:0;}
.tabbable:after{clear:both;}
.tab-content{overflow:auto;}
.tabs-below>.nav-tabs,.tabs-right>.nav-tabs,.tabs-left>.nav-tabs{border-bottom:0;}
.tab-content>.tab-pane,.pill-content>.pill-pane{display:none;}
.tab-content>.active,.pill-content>.active{display:block;}
.tabs-below>.nav-tabs{border-top:1px solid #ddd;}
.tabs-below>.nav-tabs>li{margin-top:-1px;margin-bottom:0;}
.tabs-below>.nav-tabs>li>a{-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px;}.tabs-below>.nav-tabs>li>a:hover,.tabs-below>.nav-tabs>li>a:focus{border-bottom-color:transparent;border-top-color:#ddd;}
.tabs-below>.nav-tabs>.active>a,.tabs-below>.nav-tabs>.active>a:hover,.tabs-below>.nav-tabs>.active>a:focus{border-color:transparent #ddd #ddd #ddd;}
.tabs-left>.nav-tabs>li,.tabs-right>.nav-tabs>li{float:none;}
.tabs-left>.nav-tabs>li>a,.tabs-right>.nav-tabs>li>a{min-width:74px;margin-right:0;margin-bottom:3px;}
.tabs-left>.nav-tabs{float:left;margin-right:19px;border-right:1px solid #ddd;}
.tabs-left>.nav-tabs>li>a{margin-right:-1px;-webkit-border-radius:4px 0 0 4px;-moz-border-radius:4px 0 0 4px;border-radius:4px 0 0 4px;}
.tabs-left>.nav-tabs>li>a:hover,.tabs-left>.nav-tabs>li>a:focus{border-color:#eeeeee #dddddd #eeeeee #eeeeee;}
.tabs-left>.nav-tabs .active>a,.tabs-left>.nav-tabs .active>a:hover,.tabs-left>.nav-tabs .active>a:focus{border-color:#ddd transparent #ddd #ddd;*border-right-color:#ffffff;}
.tabs-right>.nav-tabs{float:right;margin-left:19px;border-left:1px solid #ddd;}
.tabs-right>.nav-tabs>li>a{margin-left:-1px;-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;}
.tabs-right>.nav-tabs>li>a:hover,.tabs-right>.nav-tabs>li>a:focus{border-color:#eeeeee #eeeeee #eeeeee #dddddd;}
.tabs-right>.nav-tabs .active>a,.tabs-right>.nav-tabs .active>a:hover,.tabs-right>.nav-tabs .active>a:focus{border-color:#ddd #ddd #ddd transparent;*border-left-color:#ffffff;}
.nav>.disabled>a{color:#999999;}
.nav>.disabled>a:hover,.nav>.disabled>a:focus{text-decoration:none;background-color:transparent;cursor:default;}
.navbar{overflow:visible;margin-bottom:20px;*position:relative;*z-index:2;}
.navbar-inner{min-height:36px;padding-left:20px;padding-right:20px;background-color:#fafafa;background-image:-moz-linear-gradient(top, #ffffff, #f2f2f2);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#f2f2f2));background-image:-webkit-linear-gradient(top, #ffffff, #f2f2f2);background-image:-o-linear-gradient(top, #ffffff, #f2f2f2);background-image:linear-gradient(to bottom, #ffffff, #f2f2f2);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#fff2f2f2', GradientType=0);border:1px solid #d4d4d4;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 1px 4px rgba(0, 0, 0, 0.065);-moz-box-shadow:0 1px 4px rgba(0, 0, 0, 0.065);box-shadow:0 1px 4px rgba(0, 0, 0, 0.065);*zoom:1;}.navbar-inner:before,.navbar-inner:after{display:table;content:"";line-height:0;}
.navbar-inner:after{clear:both;}
.navbar-inner:before,.navbar-inner:after{display:table;content:"";line-height:0;}
.navbar-inner:after{clear:both;}
.navbar .container{width:auto;}
.nav-collapse.collapse{height:auto;overflow:visible;}
.navbar .brand{float:left;display:block;padding:8px 20px 8px;margin-left:-20px;font-size:20px;font-weight:200;color:#777777;text-shadow:0 1px 0 #ffffff;}.navbar .brand:hover,.navbar .brand:focus{text-decoration:none;}
.navbar-text{margin-bottom:0;line-height:36px;color:#777777;}
.navbar-link{color:#777777;}.navbar-link:hover,.navbar-link:focus{color:#333333;}
.navbar .divider-vertical{height:36px;margin:0 9px;border-left:1px solid #f2f2f2;border-right:1px solid #ffffff;}
.navbar .btn,.navbar .btn-group{margin-top:3px;}
.navbar .btn-group .btn,.navbar .input-prepend .btn,.navbar .input-append .btn,.navbar .input-prepend .btn-group,.navbar .input-append .btn-group{margin-top:0;}
.navbar-form{margin-bottom:0;*zoom:1;}.navbar-form:before,.navbar-form:after{display:table;content:"";line-height:0;}
.navbar-form:after{clear:both;}
.navbar-form:before,.navbar-form:after{display:table;content:"";line-height:0;}
.navbar-form:after{clear:both;}
.navbar-form input,.navbar-form select,.navbar-form .radio,.navbar-form .checkbox{margin-top:3px;}
.navbar-form input,.navbar-form select,.navbar-form .btn{display:inline-block;margin-bottom:0;}
.navbar-form input[type="image"],.navbar-form input[type="checkbox"],.navbar-form input[type="radio"]{margin-top:3px;}
.navbar-form .input-append,.navbar-form .input-prepend{margin-top:5px;white-space:nowrap;}.navbar-form .input-append input,.navbar-form .input-prepend input{margin-top:0;}
.navbar-search{position:relative;float:left;margin-top:3px;margin-bottom:0;}.navbar-search .search-query{margin-bottom:0;padding:4px 14px;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:13px;font-weight:normal;line-height:1;-webkit-border-radius:15px;-moz-border-radius:15px;border-radius:15px;}
.navbar-static-top{position:static;margin-bottom:0;}.navbar-static-top .navbar-inner{-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.navbar-fixed-top,.navbar-fixed-bottom{position:fixed;right:0;left:0;z-index:1030;margin-bottom:0;}
.navbar-fixed-top .navbar-inner,.navbar-static-top .navbar-inner{border-width:0 0 1px;}
.navbar-fixed-bottom .navbar-inner{border-width:1px 0 0;}
.navbar-fixed-top .navbar-inner,.navbar-fixed-bottom .navbar-inner{padding-left:0;padding-right:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:940px;}
.navbar-fixed-top{top:0;}
.navbar-fixed-top .navbar-inner,.navbar-static-top .navbar-inner{-webkit-box-shadow:0 1px 10px rgba(0,0,0,.1);-moz-box-shadow:0 1px 10px rgba(0,0,0,.1);box-shadow:0 1px 10px rgba(0,0,0,.1);}
.navbar-fixed-bottom{bottom:0;}.navbar-fixed-bottom .navbar-inner{-webkit-box-shadow:0 -1px 10px rgba(0,0,0,.1);-moz-box-shadow:0 -1px 10px rgba(0,0,0,.1);box-shadow:0 -1px 10px rgba(0,0,0,.1);}
.navbar .nav{position:relative;left:0;display:block;float:left;margin:0 10px 0 0;}
.navbar .nav.pull-right{float:right;margin-right:0;}
.navbar .nav>li{float:left;}
.navbar .nav>li>a{float:none;padding:8px 15px 8px;color:#777777;text-decoration:none;text-shadow:0 1px 0 #ffffff;}
.navbar .nav .dropdown-toggle .caret{margin-top:8px;}
.navbar .nav>li>a:focus,.navbar .nav>li>a:hover{background-color:transparent;color:#333333;text-decoration:none;}
.navbar .nav>.active>a,.navbar .nav>.active>a:hover,.navbar .nav>.active>a:focus{color:#555555;text-decoration:none;background-color:#e5e5e5;-webkit-box-shadow:inset 0 3px 8px rgba(0, 0, 0, 0.125);-moz-box-shadow:inset 0 3px 8px rgba(0, 0, 0, 0.125);box-shadow:inset 0 3px 8px rgba(0, 0, 0, 0.125);}
.navbar .btn-navbar{display:none;float:right;padding:7px 10px;margin-left:5px;margin-right:5px;color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#ededed;background-image:-moz-linear-gradient(top, #f2f2f2, #e5e5e5);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#f2f2f2), to(#e5e5e5));background-image:-webkit-linear-gradient(top, #f2f2f2, #e5e5e5);background-image:-o-linear-gradient(top, #f2f2f2, #e5e5e5);background-image:linear-gradient(to bottom, #f2f2f2, #e5e5e5);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2f2f2', endColorstr='#ffe5e5e5', GradientType=0);border-color:#e5e5e5 #e5e5e5 #bfbfbf;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#e5e5e5;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.075);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.075);box-shadow:inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.075);}.navbar .btn-navbar:hover,.navbar .btn-navbar:focus,.navbar .btn-navbar:active,.navbar .btn-navbar.active,.navbar .btn-navbar.disabled,.navbar .btn-navbar[disabled]{color:#ffffff;background-color:#e5e5e5;*background-color:#d9d9d9;}
.navbar .btn-navbar:active,.navbar .btn-navbar.active{background-color:#cccccc \9;}
.navbar .btn-navbar:hover,.navbar .btn-navbar:focus,.navbar .btn-navbar:active,.navbar .btn-navbar.active,.navbar .btn-navbar.disabled,.navbar .btn-navbar[disabled]{color:#ffffff;background-color:#e5e5e5;*background-color:#d9d9d9;}
.navbar .btn-navbar:active,.navbar .btn-navbar.active{background-color:#cccccc \9;}
.navbar .btn-navbar .icon-bar{display:block;width:18px;height:2px;background-color:#f5f5f5;-webkit-border-radius:1px;-moz-border-radius:1px;border-radius:1px;-webkit-box-shadow:0 1px 0 rgba(0, 0, 0, 0.25);-moz-box-shadow:0 1px 0 rgba(0, 0, 0, 0.25);box-shadow:0 1px 0 rgba(0, 0, 0, 0.25);}
.btn-navbar .icon-bar+.icon-bar{margin-top:3px;}
.navbar .nav>li>.dropdown-menu:before{content:'';display:inline-block;border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #ccc;border-bottom-color:rgba(0, 0, 0, 0.2);position:absolute;top:-7px;left:9px;}
.navbar .nav>li>.dropdown-menu:after{content:'';display:inline-block;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid #ffffff;position:absolute;top:-6px;left:10px;}
.navbar-fixed-bottom .nav>li>.dropdown-menu:before{border-top:7px solid #ccc;border-top-color:rgba(0, 0, 0, 0.2);border-bottom:0;bottom:-7px;top:auto;}
.navbar-fixed-bottom .nav>li>.dropdown-menu:after{border-top:6px solid #ffffff;border-bottom:0;bottom:-6px;top:auto;}
.navbar .nav li.dropdown>a:hover .caret,.navbar .nav li.dropdown>a:focus .caret{border-top-color:#333333;border-bottom-color:#333333;}
.navbar .nav li.dropdown.open>.dropdown-toggle,.navbar .nav li.dropdown.active>.dropdown-toggle,.navbar .nav li.dropdown.open.active>.dropdown-toggle{background-color:#e5e5e5;color:#555555;}
.navbar .nav li.dropdown>.dropdown-toggle .caret{border-top-color:#777777;border-bottom-color:#777777;}
.navbar .nav li.dropdown.open>.dropdown-toggle .caret,.navbar .nav li.dropdown.active>.dropdown-toggle .caret,.navbar .nav li.dropdown.open.active>.dropdown-toggle .caret{border-top-color:#555555;border-bottom-color:#555555;}
.navbar .pull-right>li>.dropdown-menu,.navbar .nav>li>.dropdown-menu.pull-right{left:auto;right:0;}.navbar .pull-right>li>.dropdown-menu:before,.navbar .nav>li>.dropdown-menu.pull-right:before{left:auto;right:12px;}
.navbar .pull-right>li>.dropdown-menu:after,.navbar .nav>li>.dropdown-menu.pull-right:after{left:auto;right:13px;}
.navbar .pull-right>li>.dropdown-menu .dropdown-menu,.navbar .nav>li>.dropdown-menu.pull-right .dropdown-menu{left:auto;right:100%;margin-left:0;margin-right:-1px;-webkit-border-radius:6px 0 6px 6px;-moz-border-radius:6px 0 6px 6px;border-radius:6px 0 6px 6px;}
.navbar-inverse .navbar-inner{background-color:#1b1b1b;background-image:-moz-linear-gradient(top, #222222, #111111);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#222222), to(#111111));background-image:-webkit-linear-gradient(top, #222222, #111111);background-image:-o-linear-gradient(top, #222222, #111111);background-image:linear-gradient(to bottom, #222222, #111111);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff222222', endColorstr='#ff111111', GradientType=0);border-color:#252525;}
.navbar-inverse .brand,.navbar-inverse .nav>li>a{color:#999999;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);}.navbar-inverse .brand:hover,.navbar-inverse .nav>li>a:hover,.navbar-inverse .brand:focus,.navbar-inverse .nav>li>a:focus{color:#ffffff;}
.navbar-inverse .brand{color:#999999;}
.navbar-inverse .navbar-text{color:#999999;}
.navbar-inverse .nav>li>a:focus,.navbar-inverse .nav>li>a:hover{background-color:transparent;color:#ffffff;}
.navbar-inverse .nav .active>a,.navbar-inverse .nav .active>a:hover,.navbar-inverse .nav .active>a:focus{color:#ffffff;background-color:#111111;}
.navbar-inverse .navbar-link{color:#999999;}.navbar-inverse .navbar-link:hover,.navbar-inverse .navbar-link:focus{color:#ffffff;}
.navbar-inverse .divider-vertical{border-left-color:#111111;border-right-color:#222222;}
.navbar-inverse .nav li.dropdown.open>.dropdown-toggle,.navbar-inverse .nav li.dropdown.active>.dropdown-toggle,.navbar-inverse .nav li.dropdown.open.active>.dropdown-toggle{background-color:#111111;color:#ffffff;}
.navbar-inverse .nav li.dropdown>a:hover .caret,.navbar-inverse .nav li.dropdown>a:focus .caret{border-top-color:#ffffff;border-bottom-color:#ffffff;}
.navbar-inverse .nav li.dropdown>.dropdown-toggle .caret{border-top-color:#999999;border-bottom-color:#999999;}
.navbar-inverse .nav li.dropdown.open>.dropdown-toggle .caret,.navbar-inverse .nav li.dropdown.active>.dropdown-toggle .caret,.navbar-inverse .nav li.dropdown.open.active>.dropdown-toggle .caret{border-top-color:#ffffff;border-bottom-color:#ffffff;}
.navbar-inverse .navbar-search .search-query{color:#ffffff;background-color:#515151;border-color:#111111;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1), 0 1px 0 rgba(255,255,255,.15);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,.1), 0 1px 0 rgba(255,255,255,.15);box-shadow:inset 0 1px 2px rgba(0,0,0,.1), 0 1px 0 rgba(255,255,255,.15);-webkit-transition:none;-moz-transition:none;-o-transition:none;transition:none;}.navbar-inverse .navbar-search .search-query:-moz-placeholder{color:#cccccc;}
.navbar-inverse .navbar-search .search-query:-ms-input-placeholder{color:#cccccc;}
.navbar-inverse .navbar-search .search-query::-webkit-input-placeholder{color:#cccccc;}
.navbar-inverse .navbar-search .search-query:-moz-placeholder{color:#cccccc;}
.navbar-inverse .navbar-search .search-query:-ms-input-placeholder{color:#cccccc;}
.navbar-inverse .navbar-search .search-query::-webkit-input-placeholder{color:#cccccc;}
.navbar-inverse .navbar-search .search-query:focus,.navbar-inverse .navbar-search .search-query.focused{padding:5px 15px;color:#333333;text-shadow:0 1px 0 #ffffff;background-color:#ffffff;border:0;-webkit-box-shadow:0 0 3px rgba(0, 0, 0, 0.15);-moz-box-shadow:0 0 3px rgba(0, 0, 0, 0.15);box-shadow:0 0 3px rgba(0, 0, 0, 0.15);outline:0;}
.navbar-inverse .btn-navbar{color:#ffffff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#0e0e0e;background-image:-moz-linear-gradient(top, #151515, #040404);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#151515), to(#040404));background-image:-webkit-linear-gradient(top, #151515, #040404);background-image:-o-linear-gradient(top, #151515, #040404);background-image:linear-gradient(to bottom, #151515, #040404);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff151515', endColorstr='#ff040404', GradientType=0);border-color:#040404 #040404 #000000;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);*background-color:#040404;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);}.navbar-inverse .btn-navbar:hover,.navbar-inverse .btn-navbar:focus,.navbar-inverse .btn-navbar:active,.navbar-inverse .btn-navbar.active,.navbar-inverse .btn-navbar.disabled,.navbar-inverse .btn-navbar[disabled]{color:#ffffff;background-color:#040404;*background-color:#000000;}
.navbar-inverse .btn-navbar:active,.navbar-inverse .btn-navbar.active{background-color:#000000 \9;}
.navbar-inverse .btn-navbar:hover,.navbar-inverse .btn-navbar:focus,.navbar-inverse .btn-navbar:active,.navbar-inverse .btn-navbar.active,.navbar-inverse .btn-navbar.disabled,.navbar-inverse .btn-navbar[disabled]{color:#ffffff;background-color:#040404;*background-color:#000000;}
.navbar-inverse .btn-navbar:active,.navbar-inverse .btn-navbar.active{background-color:#000000 \9;}
.breadcrumb{padding:8px 15px;margin:0 0 20px;list-style:none;background-color:#f5f5f5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}.breadcrumb>li{display:inline-block;*display:inline;*zoom:1;text-shadow:0 1px 0 #ffffff;}.breadcrumb>li>.divider{padding:0 5px;color:#ccc;}
.breadcrumb>.active{color:#999999;}
.pagination{margin:20px 0;}
.pagination ul{display:inline-block;*display:inline;*zoom:1;margin-left:0;margin-bottom:0;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 1px 2px rgba(0, 0, 0, 0.05);-moz-box-shadow:0 1px 2px rgba(0, 0, 0, 0.05);box-shadow:0 1px 2px rgba(0, 0, 0, 0.05);}
.pagination ul>li{display:inline;}
.pagination ul>li>a,.pagination ul>li>span{float:left;padding:4px 12px;line-height:20px;text-decoration:none;background-color:#ffffff;border:1px solid #dddddd;border-left-width:0;}
.pagination ul>li>a:hover,.pagination ul>li>a:focus,.pagination ul>.active>a,.pagination ul>.active>span{background-color:#f5f5f5;}
.pagination ul>.active>a,.pagination ul>.active>span{color:#999999;cursor:default;}
.pagination ul>.disabled>span,.pagination ul>.disabled>a,.pagination ul>.disabled>a:hover,.pagination ul>.disabled>a:focus{color:#999999;background-color:transparent;cursor:default;}
.pagination ul>li:first-child>a,.pagination ul>li:first-child>span{border-left-width:1px;-webkit-border-top-left-radius:4px;-moz-border-radius-topleft:4px;border-top-left-radius:4px;-webkit-border-bottom-left-radius:4px;-moz-border-radius-bottomleft:4px;border-bottom-left-radius:4px;}
.pagination ul>li:last-child>a,.pagination ul>li:last-child>span{-webkit-border-top-right-radius:4px;-moz-border-radius-topright:4px;border-top-right-radius:4px;-webkit-border-bottom-right-radius:4px;-moz-border-radius-bottomright:4px;border-bottom-right-radius:4px;}
.pagination-centered{text-align:center;}
.pagination-right{text-align:right;}
.pagination-large ul>li>a,.pagination-large ul>li>span{padding:11px 19px;font-size:16.25px;}
.pagination-large ul>li:first-child>a,.pagination-large ul>li:first-child>span{-webkit-border-top-left-radius:6px;-moz-border-radius-topleft:6px;border-top-left-radius:6px;-webkit-border-bottom-left-radius:6px;-moz-border-radius-bottomleft:6px;border-bottom-left-radius:6px;}
.pagination-large ul>li:last-child>a,.pagination-large ul>li:last-child>span{-webkit-border-top-right-radius:6px;-moz-border-radius-topright:6px;border-top-right-radius:6px;-webkit-border-bottom-right-radius:6px;-moz-border-radius-bottomright:6px;border-bottom-right-radius:6px;}
.pagination-mini ul>li:first-child>a,.pagination-small ul>li:first-child>a,.pagination-mini ul>li:first-child>span,.pagination-small ul>li:first-child>span{-webkit-border-top-left-radius:3px;-moz-border-radius-topleft:3px;border-top-left-radius:3px;-webkit-border-bottom-left-radius:3px;-moz-border-radius-bottomleft:3px;border-bottom-left-radius:3px;}
.pagination-mini ul>li:last-child>a,.pagination-small ul>li:last-child>a,.pagination-mini ul>li:last-child>span,.pagination-small ul>li:last-child>span{-webkit-border-top-right-radius:3px;-moz-border-radius-topright:3px;border-top-right-radius:3px;-webkit-border-bottom-right-radius:3px;-moz-border-radius-bottomright:3px;border-bottom-right-radius:3px;}
.pagination-small ul>li>a,.pagination-small ul>li>span{padding:2px 10px;font-size:11.049999999999999px;}
.pagination-mini ul>li>a,.pagination-mini ul>li>span{padding:0 6px;font-size:9.75px;}
.pager{margin:20px 0;list-style:none;text-align:center;*zoom:1;}.pager:before,.pager:after{display:table;content:"";line-height:0;}
.pager:after{clear:both;}
.pager:before,.pager:after{display:table;content:"";line-height:0;}
.pager:after{clear:both;}
.pager li{display:inline;}
.pager li>a,.pager li>span{display:inline-block;padding:5px 14px;background-color:#fff;border:1px solid #ddd;-webkit-border-radius:15px;-moz-border-radius:15px;border-radius:15px;}
.pager li>a:hover,.pager li>a:focus{text-decoration:none;background-color:#f5f5f5;}
.pager .next>a,.pager .next>span{float:right;}
.pager .previous>a,.pager .previous>span{float:left;}
.pager .disabled>a,.pager .disabled>a:hover,.pager .disabled>a:focus,.pager .disabled>span{color:#999999;background-color:#fff;cursor:default;}
.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000000;}.modal-backdrop.fade{opacity:0;}
.modal-backdrop,.modal-backdrop.fade.in{opacity:0.8;filter:alpha(opacity=80);}
.modal{position:fixed;top:10%;left:50%;z-index:1050;width:560px;margin-left:-280px;background-color:#ffffff;border:1px solid #999;border:1px solid rgba(0, 0, 0, 0.3);*border:1px solid #999;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 3px 7px rgba(0, 0, 0, 0.3);-moz-box-shadow:0 3px 7px rgba(0, 0, 0, 0.3);box-shadow:0 3px 7px rgba(0, 0, 0, 0.3);-webkit-background-clip:padding-box;-moz-background-clip:padding-box;background-clip:padding-box;outline:none;}.modal.fade{-webkit-transition:opacity .3s linear, top .3s ease-out;-moz-transition:opacity .3s linear, top .3s ease-out;-o-transition:opacity .3s linear, top .3s ease-out;transition:opacity .3s linear, top .3s ease-out;top:-25%;}
.modal.fade.in{top:10%;}
.modal-header{padding:9px 15px;border-bottom:1px solid #eee;}.modal-header .close{margin-top:2px;}
.modal-header h3{margin:0;line-height:30px;}
.modal-body{position:relative;overflow-y:auto;max-height:400px;padding:15px;}
.modal-form{margin-bottom:0;}
.modal-footer{padding:14px 15px 15px;margin-bottom:0;text-align:right;background-color:#f5f5f5;border-top:1px solid #ddd;-webkit-border-radius:0 0 6px 6px;-moz-border-radius:0 0 6px 6px;border-radius:0 0 6px 6px;-webkit-box-shadow:inset 0 1px 0 #ffffff;-moz-box-shadow:inset 0 1px 0 #ffffff;box-shadow:inset 0 1px 0 #ffffff;*zoom:1;}.modal-footer:before,.modal-footer:after{display:table;content:"";line-height:0;}
.modal-footer:after{clear:both;}
.modal-footer:before,.modal-footer:after{display:table;content:"";line-height:0;}
.modal-footer:after{clear:both;}
.modal-footer .btn+.btn{margin-left:5px;margin-bottom:0;}
.modal-footer .btn-group .btn+.btn{margin-left:-1px;}
.modal-footer .btn-block+.btn-block{margin-left:0;}
.tooltip{position:absolute;z-index:1030;display:block;visibility:visible;font-size:11px;line-height:1.4;opacity:0;filter:alpha(opacity=0);}.tooltip.in{opacity:0.8;filter:alpha(opacity=80);}
.tooltip.top{margin-top:-3px;padding:5px 0;}
.tooltip.right{margin-left:3px;padding:0 5px;}
.tooltip.bottom{margin-top:3px;padding:5px 0;}
.tooltip.left{margin-left:-3px;padding:0 5px;}
.tooltip-inner{max-width:200px;padding:8px;color:#ffffff;text-align:center;text-decoration:none;background-color:#000000;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid;}
.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000000;}
.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000000;}
.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000000;}
.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000000;}
.popover{position:absolute;top:0;left:0;z-index:1010;display:none;max-width:276px;padding:1px;text-align:left;background-color:#ffffff;-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0, 0, 0, 0.2);-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);-moz-box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);box-shadow:0 5px 10px rgba(0, 0, 0, 0.2);white-space:normal;}.popover.top{margin-top:-10px;}
.popover.right{margin-left:10px;}
.popover.bottom{margin-top:10px;}
.popover.left{margin-left:-10px;}
.popover-title{margin:0;padding:8px 14px;font-size:14px;font-weight:normal;line-height:18px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0;}.popover-title:empty{display:none;}
.popover-content{padding:9px 14px;}
.popover .arrow,.popover .arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid;}
.popover .arrow{border-width:11px;}
.popover .arrow:after{border-width:10px;content:"";}
.popover.top .arrow{left:50%;margin-left:-11px;border-bottom-width:0;border-top-color:#999;border-top-color:rgba(0, 0, 0, 0.25);bottom:-11px;}.popover.top .arrow:after{bottom:1px;margin-left:-10px;border-bottom-width:0;border-top-color:#ffffff;}
.popover.right .arrow{top:50%;left:-11px;margin-top:-11px;border-left-width:0;border-right-color:#999;border-right-color:rgba(0, 0, 0, 0.25);}.popover.right .arrow:after{left:1px;bottom:-10px;border-left-width:0;border-right-color:#ffffff;}
.popover.bottom .arrow{left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:#999;border-bottom-color:rgba(0, 0, 0, 0.25);top:-11px;}.popover.bottom .arrow:after{top:1px;margin-left:-10px;border-top-width:0;border-bottom-color:#ffffff;}
.popover.left .arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:#999;border-left-color:rgba(0, 0, 0, 0.25);}.popover.left .arrow:after{right:1px;border-right-width:0;border-left-color:#ffffff;bottom:-10px;}
.thumbnails{margin-left:-20px;list-style:none;*zoom:1;}.thumbnails:before,.thumbnails:after{display:table;content:"";line-height:0;}
.thumbnails:after{clear:both;}
.thumbnails:before,.thumbnails:after{display:table;content:"";line-height:0;}
.thumbnails:after{clear:both;}
.row-fluid .thumbnails{margin-left:0;}
.thumbnails>li{float:left;margin-bottom:20px;margin-left:20px;}
.thumbnail{display:block;padding:4px;line-height:20px;border:1px solid #ddd;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 1px 3px rgba(0, 0, 0, 0.055);-moz-box-shadow:0 1px 3px rgba(0, 0, 0, 0.055);box-shadow:0 1px 3px rgba(0, 0, 0, 0.055);-webkit-transition:all 0.2s ease-in-out;-moz-transition:all 0.2s ease-in-out;-o-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;}
a.thumbnail:hover,a.thumbnail:focus{border-color:#0088cc;-webkit-box-shadow:0 1px 4px rgba(0, 105, 214, 0.25);-moz-box-shadow:0 1px 4px rgba(0, 105, 214, 0.25);box-shadow:0 1px 4px rgba(0, 105, 214, 0.25);}
.thumbnail>img{display:block;max-width:100%;margin-left:auto;margin-right:auto;}
.thumbnail .caption{padding:9px;color:#555555;}
.media,.media-body{overflow:hidden;*overflow:visible;zoom:1;}
.media,.media .media{margin-top:15px;}
.media:first-child{margin-top:0;}
.media-object{display:block;}
.media-heading{margin:0 0 5px;}
.media>.pull-left{margin-right:10px;}
.media>.pull-right{margin-left:10px;}
.media-list{margin-left:0;list-style:none;}
.label,.badge{display:inline-block;padding:2px 4px;font-size:10.998px;font-weight:bold;line-height:14px;color:#ffffff;vertical-align:baseline;white-space:nowrap;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#999999;}
.label{-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;}
.badge{padding-left:9px;padding-right:9px;-webkit-border-radius:9px;-moz-border-radius:9px;border-radius:9px;}
.label:empty,.badge:empty{display:none;}
a.label:hover,a.label:focus,a.badge:hover,a.badge:focus{color:#ffffff;text-decoration:none;cursor:pointer;}
.label-important,.badge-important{background-color:#b94a48;}
.label-important[href],.badge-important[href]{background-color:#953b39;}
.label-warning,.badge-warning{background-color:#f89406;}
.label-warning[href],.badge-warning[href]{background-color:#c67605;}
.label-success,.badge-success{background-color:#468847;}
.label-success[href],.badge-success[href]{background-color:#356635;}
.label-info,.badge-info{background-color:#3a87ad;}
.label-info[href],.badge-info[href]{background-color:#2d6987;}
.label-inverse,.badge-inverse{background-color:#333333;}
.label-inverse[href],.badge-inverse[href]{background-color:#1a1a1a;}
.btn .label,.btn .badge{position:relative;top:-1px;}
.btn-mini .label,.btn-mini .badge{top:0;}
@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0;} to{background-position:0 0;}}@-moz-keyframes progress-bar-stripes{from{background-position:40px 0;} to{background-position:0 0;}}@-ms-keyframes progress-bar-stripes{from{background-position:40px 0;} to{background-position:0 0;}}@-o-keyframes progress-bar-stripes{from{background-position:0 0;} to{background-position:40px 0;}}@keyframes progress-bar-stripes{from{background-position:40px 0;} to{background-position:0 0;}}.progress{overflow:hidden;height:20px;margin-bottom:20px;background-color:#f7f7f7;background-image:-moz-linear-gradient(top, #f5f5f5, #f9f9f9);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#f5f5f5), to(#f9f9f9));background-image:-webkit-linear-gradient(top, #f5f5f5, #f9f9f9);background-image:-o-linear-gradient(top, #f5f5f5, #f9f9f9);background-image:linear-gradient(to bottom, #f5f5f5, #f9f9f9);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#fff9f9f9', GradientType=0);-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.1);-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
.progress .bar{width:0%;height:100%;color:#ffffff;float:left;font-size:12px;text-align:center;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);background-color:#0e90d2;background-image:-moz-linear-gradient(top, #149bdf, #0480be);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#149bdf), to(#0480be));background-image:-webkit-linear-gradient(top, #149bdf, #0480be);background-image:-o-linear-gradient(top, #149bdf, #0480be);background-image:linear-gradient(to bottom, #149bdf, #0480be);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff149bdf', endColorstr='#ff0480be', GradientType=0);-webkit-box-shadow:inset 0 -1px 0 rgba(0, 0, 0, 0.15);-moz-box-shadow:inset 0 -1px 0 rgba(0, 0, 0, 0.15);box-shadow:inset 0 -1px 0 rgba(0, 0, 0, 0.15);-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;-webkit-transition:width 0.6s ease;-moz-transition:width 0.6s ease;-o-transition:width 0.6s ease;transition:width 0.6s ease;}
.progress .bar+.bar{-webkit-box-shadow:inset 1px 0 0 rgba(0,0,0,.15), inset 0 -1px 0 rgba(0,0,0,.15);-moz-box-shadow:inset 1px 0 0 rgba(0,0,0,.15), inset 0 -1px 0 rgba(0,0,0,.15);box-shadow:inset 1px 0 0 rgba(0,0,0,.15), inset 0 -1px 0 rgba(0,0,0,.15);}
.progress-striped .bar{background-color:#149bdf;background-image:-webkit-gradient(linear, 0 100%, 100% 0, color-stop(0.25, rgba(255, 255, 255, 0.15)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.15)), color-stop(0.75, rgba(255, 255, 255, 0.15)), color-stop(0.75, transparent), to(transparent));background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-moz-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);-webkit-background-size:40px 40px;-moz-background-size:40px 40px;-o-background-size:40px 40px;background-size:40px 40px;}
.progress.active .bar{-webkit-animation:progress-bar-stripes 2s linear infinite;-moz-animation:progress-bar-stripes 2s linear infinite;-ms-animation:progress-bar-stripes 2s linear infinite;-o-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite;}
.progress-danger .bar,.progress .bar-danger{background-color:#dd514c;background-image:-moz-linear-gradient(top, #ee5f5b, #c43c35);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#ee5f5b), to(#c43c35));background-image:-webkit-linear-gradient(top, #ee5f5b, #c43c35);background-image:-o-linear-gradient(top, #ee5f5b, #c43c35);background-image:linear-gradient(to bottom, #ee5f5b, #c43c35);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffee5f5b', endColorstr='#ffc43c35', GradientType=0);}
.progress-danger.progress-striped .bar,.progress-striped .bar-danger{background-color:#ee5f5b;background-image:-webkit-gradient(linear, 0 100%, 100% 0, color-stop(0.25, rgba(255, 255, 255, 0.15)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.15)), color-stop(0.75, rgba(255, 255, 255, 0.15)), color-stop(0.75, transparent), to(transparent));background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-moz-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}
.progress-success .bar,.progress .bar-success{background-color:#5eb95e;background-image:-moz-linear-gradient(top, #62c462, #57a957);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#62c462), to(#57a957));background-image:-webkit-linear-gradient(top, #62c462, #57a957);background-image:-o-linear-gradient(top, #62c462, #57a957);background-image:linear-gradient(to bottom, #62c462, #57a957);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff62c462', endColorstr='#ff57a957', GradientType=0);}
.progress-success.progress-striped .bar,.progress-striped .bar-success{background-color:#62c462;background-image:-webkit-gradient(linear, 0 100%, 100% 0, color-stop(0.25, rgba(255, 255, 255, 0.15)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.15)), color-stop(0.75, rgba(255, 255, 255, 0.15)), color-stop(0.75, transparent), to(transparent));background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-moz-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}
.progress-info .bar,.progress .bar-info{background-color:#4bb1cf;background-image:-moz-linear-gradient(top, #5bc0de, #339bb9);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#5bc0de), to(#339bb9));background-image:-webkit-linear-gradient(top, #5bc0de, #339bb9);background-image:-o-linear-gradient(top, #5bc0de, #339bb9);background-image:linear-gradient(to bottom, #5bc0de, #339bb9);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff339bb9', GradientType=0);}
.progress-info.progress-striped .bar,.progress-striped .bar-info{background-color:#5bc0de;background-image:-webkit-gradient(linear, 0 100%, 100% 0, color-stop(0.25, rgba(255, 255, 255, 0.15)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.15)), color-stop(0.75, rgba(255, 255, 255, 0.15)), color-stop(0.75, transparent), to(transparent));background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-moz-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}
.progress-warning .bar,.progress .bar-warning{background-color:#faa732;background-image:-moz-linear-gradient(top, #fbb450, #f89406);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#fbb450), to(#f89406));background-image:-webkit-linear-gradient(top, #fbb450, #f89406);background-image:-o-linear-gradient(top, #fbb450, #f89406);background-image:linear-gradient(to bottom, #fbb450, #f89406);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffbb450', endColorstr='#fff89406', GradientType=0);}
.progress-warning.progress-striped .bar,.progress-striped .bar-warning{background-color:#fbb450;background-image:-webkit-gradient(linear, 0 100%, 100% 0, color-stop(0.25, rgba(255, 255, 255, 0.15)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.15)), color-stop(0.75, rgba(255, 255, 255, 0.15)), color-stop(0.75, transparent), to(transparent));background-image:-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-moz-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:-o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);background-image:linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);}
.accordion{margin-bottom:20px;}
.accordion-group{margin-bottom:2px;border:1px solid #e5e5e5;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
.accordion-heading{border-bottom:0;}
.accordion-heading .accordion-toggle{display:block;padding:8px 15px;}
.accordion-toggle{cursor:pointer;}
.accordion-inner{padding:9px 15px;border-top:1px solid #e5e5e5;}
.carousel{position:relative;margin-bottom:20px;line-height:1;}
.carousel-inner{overflow:hidden;width:100%;position:relative;}
.carousel-inner>.item{display:none;position:relative;-webkit-transition:0.6s ease-in-out left;-moz-transition:0.6s ease-in-out left;-o-transition:0.6s ease-in-out left;transition:0.6s ease-in-out left;}.carousel-inner>.item>img,.carousel-inner>.item>a>img{display:block;line-height:1;}
.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block;}
.carousel-inner>.active{left:0;}
.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%;}
.carousel-inner>.next{left:100%;}
.carousel-inner>.prev{left:-100%;}
.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0;}
.carousel-inner>.active.left{left:-100%;}
.carousel-inner>.active.right{left:100%;}
.carousel-control{position:absolute;top:40%;left:15px;width:40px;height:40px;margin-top:-20px;font-size:60px;font-weight:100;line-height:30px;color:#ffffff;text-align:center;background:#222222;border:3px solid #ffffff;-webkit-border-radius:23px;-moz-border-radius:23px;border-radius:23px;opacity:0.5;filter:alpha(opacity=50);}.carousel-control.right{left:auto;right:15px;}
.carousel-control:hover,.carousel-control:focus{color:#ffffff;text-decoration:none;opacity:0.9;filter:alpha(opacity=90);}
.carousel-indicators{position:absolute;top:15px;right:15px;z-index:5;margin:0;list-style:none;}.carousel-indicators li{display:block;float:left;width:10px;height:10px;margin-left:5px;text-indent:-999px;background-color:#ccc;background-color:rgba(255, 255, 255, 0.25);border-radius:5px;}
.carousel-indicators .active{background-color:#fff;}
.carousel-caption{position:absolute;left:0;right:0;bottom:0;padding:15px;background:#333333;background:rgba(0, 0, 0, 0.75);}
.carousel-caption h4,.carousel-caption p{color:#ffffff;line-height:20px;}
.carousel-caption h4{margin:0 0 5px;}
.carousel-caption p{margin-bottom:0;}
.hero-unit{padding:60px;margin-bottom:30px;font-size:18px;font-weight:200;line-height:30px;color:inherit;background-color:#eeeeee;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;}.hero-unit h1{margin-bottom:0;font-size:60px;line-height:1;color:inherit;letter-spacing:-1px;}
.hero-unit li{line-height:30px;}
.pull-right{float:right;}
.pull-left{float:left;}
.hide{display:none;}
.show{display:block;}
.invisible{visibility:hidden;}
.affix{position:fixed;}
.clearfix{*zoom:1;}.clearfix:before,.clearfix:after{display:table;content:"";line-height:0;}
.clearfix:after{clear:both;}
.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0;}
.input-block-level{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}
@-ms-viewport{width:device-width;}.hidden{display:none;visibility:hidden;}
.visible-phone{display:none !important;}
.visible-tablet{display:none !important;}
.hidden-desktop{display:none !important;}
.visible-desktop{display:inherit !important;}
@media (min-width:768px) and (max-width:979px){.hidden-desktop{display:inherit !important;} .visible-desktop{display:none !important ;} .visible-tablet{display:inherit !important;} .hidden-tablet{display:none !important;}}@media (max-width:767px){.hidden-desktop{display:inherit !important;} .visible-desktop{display:none !important;} .visible-phone{display:inherit !important;} .hidden-phone{display:none !important;}}.visible-print{display:none !important;}
@media print{.visible-print{display:inherit !important;} .hidden-print{display:none !important;}}@media (min-width:1200px){.row{margin-left:-30px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} .row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:30px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1170px;} .span12{width:1170px;} .span11{width:1070px;} .span10{width:970px;} .span9{width:870px;} .span8{width:770px;} .span7{width:670px;} .span6{width:570px;} .span5{width:470px;} .span4{width:370px;} .span3{width:270px;} .span2{width:170px;} .span1{width:70px;} .offset12{margin-left:1230px;} .offset11{margin-left:1130px;} .offset10{margin-left:1030px;} .offset9{margin-left:930px;} .offset8{margin-left:830px;} .offset7{margin-left:730px;} .offset6{margin-left:630px;} .offset5{margin-left:530px;} .offset4{margin-left:430px;} .offset3{margin-left:330px;} .offset2{margin-left:230px;} .offset1{margin-left:130px;} .row{margin-left:-30px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} .row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:30px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1170px;} .span12{width:1170px;} .span11{width:1070px;} .span10{width:970px;} .span9{width:870px;} .span8{width:770px;} .span7{width:670px;} .span6{width:570px;} .span5{width:470px;} .span4{width:370px;} .span3{width:270px;} .span2{width:170px;} .span1{width:70px;} .offset12{margin-left:1230px;} .offset11{margin-left:1130px;} .offset10{margin-left:1030px;} .offset9{margin-left:930px;} .offset8{margin-left:830px;} .offset7{margin-left:730px;} .offset6{margin-left:630px;} .offset5{margin-left:530px;} .offset4{margin-left:430px;} .offset3{margin-left:330px;} .offset2{margin-left:230px;} .offset1{margin-left:130px;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.564102564102564%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%;} .row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%;} .row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%;} .row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%;} .row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%;} .row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%;} .row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%;} .row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%;} .row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%;} .row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%;} .row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%;} .row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%;} .row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%;} .row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%;} .row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%;} .row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%;} .row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%;} .row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%;} .row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%;} .row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%;} .row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%;} .row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%;} .row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%;} .row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%;} .row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%;} .row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%;} .row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%;} .row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%;} .row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%;} .row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%;} .row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%;} .row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%;} .row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%;} .row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%;} .row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.564102564102564%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%;} .row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%;} .row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%;} .row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%;} .row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%;} .row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%;} .row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%;} .row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%;} .row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%;} .row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%;} .row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%;} .row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%;} .row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%;} .row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%;} .row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%;} .row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%;} .row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%;} .row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%;} .row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%;} .row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%;} .row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%;} .row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%;} .row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%;} .row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%;} .row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%;} .row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%;} .row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%;} .row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%;} .row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%;} .row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%;} .row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%;} .row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%;} .row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%;} .row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%;} .row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:30px;} input.span12,textarea.span12,.uneditable-input.span12{width:1156px;} input.span11,textarea.span11,.uneditable-input.span11{width:1056px;} input.span10,textarea.span10,.uneditable-input.span10{width:956px;} input.span9,textarea.span9,.uneditable-input.span9{width:856px;} input.span8,textarea.span8,.uneditable-input.span8{width:756px;} input.span7,textarea.span7,.uneditable-input.span7{width:656px;} input.span6,textarea.span6,.uneditable-input.span6{width:556px;} input.span5,textarea.span5,.uneditable-input.span5{width:456px;} input.span4,textarea.span4,.uneditable-input.span4{width:356px;} input.span3,textarea.span3,.uneditable-input.span3{width:256px;} input.span2,textarea.span2,.uneditable-input.span2{width:156px;} input.span1,textarea.span1,.uneditable-input.span1{width:56px;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:30px;} input.span12,textarea.span12,.uneditable-input.span12{width:1156px;} input.span11,textarea.span11,.uneditable-input.span11{width:1056px;} input.span10,textarea.span10,.uneditable-input.span10{width:956px;} input.span9,textarea.span9,.uneditable-input.span9{width:856px;} input.span8,textarea.span8,.uneditable-input.span8{width:756px;} input.span7,textarea.span7,.uneditable-input.span7{width:656px;} input.span6,textarea.span6,.uneditable-input.span6{width:556px;} input.span5,textarea.span5,.uneditable-input.span5{width:456px;} input.span4,textarea.span4,.uneditable-input.span4{width:356px;} input.span3,textarea.span3,.uneditable-input.span3{width:256px;} input.span2,textarea.span2,.uneditable-input.span2{width:156px;} input.span1,textarea.span1,.uneditable-input.span1{width:56px;} .thumbnails{margin-left:-30px;} .thumbnails>li{margin-left:30px;} .row-fluid .thumbnails{margin-left:0;}}@media (min-width:768px) and (max-width:979px){.row{margin-left:-20px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} .row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:20px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:724px;} .span12{width:724px;} .span11{width:662px;} .span10{width:600px;} .span9{width:538px;} .span8{width:476px;} .span7{width:414px;} .span6{width:352px;} .span5{width:290px;} .span4{width:228px;} .span3{width:166px;} .span2{width:104px;} .span1{width:42px;} .offset12{margin-left:764px;} .offset11{margin-left:702px;} .offset10{margin-left:640px;} .offset9{margin-left:578px;} .offset8{margin-left:516px;} .offset7{margin-left:454px;} .offset6{margin-left:392px;} .offset5{margin-left:330px;} .offset4{margin-left:268px;} .offset3{margin-left:206px;} .offset2{margin-left:144px;} .offset1{margin-left:82px;} .row{margin-left:-20px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} .row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:20px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:724px;} .span12{width:724px;} .span11{width:662px;} .span10{width:600px;} .span9{width:538px;} .span8{width:476px;} .span7{width:414px;} .span6{width:352px;} .span5{width:290px;} .span4{width:228px;} .span3{width:166px;} .span2{width:104px;} .span1{width:42px;} .offset12{margin-left:764px;} .offset11{margin-left:702px;} .offset10{margin-left:640px;} .offset9{margin-left:578px;} .offset8{margin-left:516px;} .offset7{margin-left:454px;} .offset6{margin-left:392px;} .offset5{margin-left:330px;} .offset4{margin-left:268px;} .offset3{margin-left:206px;} .offset2{margin-left:144px;} .offset1{margin-left:82px;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.7624309392265194%;*margin-left:2.709239449864817%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.7624309392265194%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.43646408839778%;*width:91.38327259903608%;} .row-fluid .span10{width:82.87292817679558%;*width:82.81973668743387%;} .row-fluid .span9{width:74.30939226519337%;*width:74.25620077583166%;} .row-fluid .span8{width:65.74585635359117%;*width:65.69266486422946%;} .row-fluid .span7{width:57.18232044198895%;*width:57.12912895262725%;} .row-fluid .span6{width:48.61878453038674%;*width:48.56559304102504%;} .row-fluid .span5{width:40.05524861878453%;*width:40.00205712942283%;} .row-fluid .span4{width:31.491712707182323%;*width:31.43852121782062%;} .row-fluid .span3{width:22.92817679558011%;*width:22.87498530621841%;} .row-fluid .span2{width:14.3646408839779%;*width:14.311449394616199%;} .row-fluid .span1{width:5.801104972375691%;*width:5.747913483013988%;} .row-fluid .offset12{margin-left:105.52486187845304%;*margin-left:105.41847889972962%;} .row-fluid .offset12:first-child{margin-left:102.76243093922652%;*margin-left:102.6560479605031%;} .row-fluid .offset11{margin-left:96.96132596685082%;*margin-left:96.8549429881274%;} .row-fluid .offset11:first-child{margin-left:94.1988950276243%;*margin-left:94.09251204890089%;} .row-fluid .offset10{margin-left:88.39779005524862%;*margin-left:88.2914070765252%;} .row-fluid .offset10:first-child{margin-left:85.6353591160221%;*margin-left:85.52897613729868%;} .row-fluid .offset9{margin-left:79.8342541436464%;*margin-left:79.72787116492299%;} .row-fluid .offset9:first-child{margin-left:77.07182320441989%;*margin-left:76.96544022569647%;} .row-fluid .offset8{margin-left:71.2707182320442%;*margin-left:71.16433525332079%;} .row-fluid .offset8:first-child{margin-left:68.50828729281768%;*margin-left:68.40190431409427%;} .row-fluid .offset7{margin-left:62.70718232044199%;*margin-left:62.600799341718584%;} .row-fluid .offset7:first-child{margin-left:59.94475138121547%;*margin-left:59.838368402492065%;} .row-fluid .offset6{margin-left:54.14364640883978%;*margin-left:54.037263430116376%;} .row-fluid .offset6:first-child{margin-left:51.38121546961326%;*margin-left:51.27483249088986%;} .row-fluid .offset5{margin-left:45.58011049723757%;*margin-left:45.47372751851417%;} .row-fluid .offset5:first-child{margin-left:42.81767955801105%;*margin-left:42.71129657928765%;} .row-fluid .offset4{margin-left:37.01657458563536%;*margin-left:36.91019160691196%;} .row-fluid .offset4:first-child{margin-left:34.25414364640884%;*margin-left:34.14776066768544%;} .row-fluid .offset3{margin-left:28.45303867403315%;*margin-left:28.346655695309746%;} .row-fluid .offset3:first-child{margin-left:25.69060773480663%;*margin-left:25.584224756083227%;} .row-fluid .offset2{margin-left:19.88950276243094%;*margin-left:19.783119783707537%;} .row-fluid .offset2:first-child{margin-left:17.12707182320442%;*margin-left:17.02068884448102%;} .row-fluid .offset1{margin-left:11.32596685082873%;*margin-left:11.219583872105325%;} .row-fluid .offset1:first-child{margin-left:8.56353591160221%;*margin-left:8.457152932878806%;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.7624309392265194%;*margin-left:2.709239449864817%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.7624309392265194%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.43646408839778%;*width:91.38327259903608%;} .row-fluid .span10{width:82.87292817679558%;*width:82.81973668743387%;} .row-fluid .span9{width:74.30939226519337%;*width:74.25620077583166%;} .row-fluid .span8{width:65.74585635359117%;*width:65.69266486422946%;} .row-fluid .span7{width:57.18232044198895%;*width:57.12912895262725%;} .row-fluid .span6{width:48.61878453038674%;*width:48.56559304102504%;} .row-fluid .span5{width:40.05524861878453%;*width:40.00205712942283%;} .row-fluid .span4{width:31.491712707182323%;*width:31.43852121782062%;} .row-fluid .span3{width:22.92817679558011%;*width:22.87498530621841%;} .row-fluid .span2{width:14.3646408839779%;*width:14.311449394616199%;} .row-fluid .span1{width:5.801104972375691%;*width:5.747913483013988%;} .row-fluid .offset12{margin-left:105.52486187845304%;*margin-left:105.41847889972962%;} .row-fluid .offset12:first-child{margin-left:102.76243093922652%;*margin-left:102.6560479605031%;} .row-fluid .offset11{margin-left:96.96132596685082%;*margin-left:96.8549429881274%;} .row-fluid .offset11:first-child{margin-left:94.1988950276243%;*margin-left:94.09251204890089%;} .row-fluid .offset10{margin-left:88.39779005524862%;*margin-left:88.2914070765252%;} .row-fluid .offset10:first-child{margin-left:85.6353591160221%;*margin-left:85.52897613729868%;} .row-fluid .offset9{margin-left:79.8342541436464%;*margin-left:79.72787116492299%;} .row-fluid .offset9:first-child{margin-left:77.07182320441989%;*margin-left:76.96544022569647%;} .row-fluid .offset8{margin-left:71.2707182320442%;*margin-left:71.16433525332079%;} .row-fluid .offset8:first-child{margin-left:68.50828729281768%;*margin-left:68.40190431409427%;} .row-fluid .offset7{margin-left:62.70718232044199%;*margin-left:62.600799341718584%;} .row-fluid .offset7:first-child{margin-left:59.94475138121547%;*margin-left:59.838368402492065%;} .row-fluid .offset6{margin-left:54.14364640883978%;*margin-left:54.037263430116376%;} .row-fluid .offset6:first-child{margin-left:51.38121546961326%;*margin-left:51.27483249088986%;} .row-fluid .offset5{margin-left:45.58011049723757%;*margin-left:45.47372751851417%;} .row-fluid .offset5:first-child{margin-left:42.81767955801105%;*margin-left:42.71129657928765%;} .row-fluid .offset4{margin-left:37.01657458563536%;*margin-left:36.91019160691196%;} .row-fluid .offset4:first-child{margin-left:34.25414364640884%;*margin-left:34.14776066768544%;} .row-fluid .offset3{margin-left:28.45303867403315%;*margin-left:28.346655695309746%;} .row-fluid .offset3:first-child{margin-left:25.69060773480663%;*margin-left:25.584224756083227%;} .row-fluid .offset2{margin-left:19.88950276243094%;*margin-left:19.783119783707537%;} .row-fluid .offset2:first-child{margin-left:17.12707182320442%;*margin-left:17.02068884448102%;} .row-fluid .offset1{margin-left:11.32596685082873%;*margin-left:11.219583872105325%;} .row-fluid .offset1:first-child{margin-left:8.56353591160221%;*margin-left:8.457152932878806%;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:20px;} input.span12,textarea.span12,.uneditable-input.span12{width:710px;} input.span11,textarea.span11,.uneditable-input.span11{width:648px;} input.span10,textarea.span10,.uneditable-input.span10{width:586px;} input.span9,textarea.span9,.uneditable-input.span9{width:524px;} input.span8,textarea.span8,.uneditable-input.span8{width:462px;} input.span7,textarea.span7,.uneditable-input.span7{width:400px;} input.span6,textarea.span6,.uneditable-input.span6{width:338px;} input.span5,textarea.span5,.uneditable-input.span5{width:276px;} input.span4,textarea.span4,.uneditable-input.span4{width:214px;} input.span3,textarea.span3,.uneditable-input.span3{width:152px;} input.span2,textarea.span2,.uneditable-input.span2{width:90px;} input.span1,textarea.span1,.uneditable-input.span1{width:28px;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:20px;} input.span12,textarea.span12,.uneditable-input.span12{width:710px;} input.span11,textarea.span11,.uneditable-input.span11{width:648px;} input.span10,textarea.span10,.uneditable-input.span10{width:586px;} input.span9,textarea.span9,.uneditable-input.span9{width:524px;} input.span8,textarea.span8,.uneditable-input.span8{width:462px;} input.span7,textarea.span7,.uneditable-input.span7{width:400px;} input.span6,textarea.span6,.uneditable-input.span6{width:338px;} input.span5,textarea.span5,.uneditable-input.span5{width:276px;} input.span4,textarea.span4,.uneditable-input.span4{width:214px;} input.span3,textarea.span3,.uneditable-input.span3{width:152px;} input.span2,textarea.span2,.uneditable-input.span2{width:90px;} input.span1,textarea.span1,.uneditable-input.span1{width:28px;}}@media (max-width:767px){body{padding-left:20px;padding-right:20px;} .navbar-fixed-top,.navbar-fixed-bottom,.navbar-static-top{margin-left:-20px;margin-right:-20px;} .container-fluid{padding:0;} .dl-horizontal dt{float:none;clear:none;width:auto;text-align:left;} .dl-horizontal dd{margin-left:0;} .container{width:auto;} .row-fluid{width:100%;} .row,.thumbnails{margin-left:0;} .thumbnails>li{float:none;margin-left:0;} [class*="span"],.uneditable-input[class*="span"],.row-fluid [class*="span"]{float:none;display:block;width:100%;margin-left:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;} .span12,.row-fluid .span12{width:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;} .row-fluid [class*="offset"]:first-child{margin-left:0;} .input-large,.input-xlarge,.input-xxlarge,input[class*="span"],select[class*="span"],textarea[class*="span"],.uneditable-input{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;} .input-prepend input,.input-append input,.input-prepend input[class*="span"],.input-append input[class*="span"]{display:inline-block;width:auto;} .controls-row [class*="span"]+[class*="span"]{margin-left:0;} .modal{position:fixed;top:20px;left:20px;right:20px;width:auto;margin:0;}.modal.fade{top:-100px;} .modal.fade.in{top:20px;}}@media (max-width:480px){.nav-collapse{-webkit-transform:translate3d(0, 0, 0);} .page-header h1 small{display:block;line-height:20px;} input[type="checkbox"],input[type="radio"]{border:1px solid #ccc;} .form-horizontal .control-label{float:none;width:auto;padding-top:0;text-align:left;} .form-horizontal .controls{margin-left:0;} .form-horizontal .control-list{padding-top:0;} .form-horizontal .form-actions{padding-left:10px;padding-right:10px;} .media .pull-left,.media .pull-right{float:none;display:block;margin-bottom:10px;} .media-object{margin-right:0;margin-left:0;} .modal{top:10px;left:10px;right:10px;} .modal-header .close{padding:10px;margin:-10px;} .carousel-caption{position:static;}}@media (max-width:979px){body{padding-top:0;} .navbar-fixed-top,.navbar-fixed-bottom{position:static;} .navbar-fixed-top{margin-bottom:20px;} .navbar-fixed-bottom{margin-top:20px;} .navbar-fixed-top .navbar-inner,.navbar-fixed-bottom .navbar-inner{padding:5px;} .navbar .container{width:auto;padding:0;} .navbar .brand{padding-left:10px;padding-right:10px;margin:0 0 0 -5px;} .nav-collapse{clear:both;} .nav-collapse .nav{float:none;margin:0 0 10px;} .nav-collapse .nav>li{float:none;} .nav-collapse .nav>li>a{margin-bottom:2px;} .nav-collapse .nav>.divider-vertical{display:none;} .nav-collapse .nav .nav-header{color:#777777;text-shadow:none;} .nav-collapse .nav>li>a,.nav-collapse .dropdown-menu a{padding:9px 15px;font-weight:bold;color:#777777;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;} .nav-collapse .btn{padding:4px 10px 4px;font-weight:normal;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;} .nav-collapse .dropdown-menu li+li a{margin-bottom:2px;} .nav-collapse .nav>li>a:hover,.nav-collapse .nav>li>a:focus,.nav-collapse .dropdown-menu a:hover,.nav-collapse .dropdown-menu a:focus{background-color:#f2f2f2;} .navbar-inverse .nav-collapse .nav>li>a,.navbar-inverse .nav-collapse .dropdown-menu a{color:#999999;} .navbar-inverse .nav-collapse .nav>li>a:hover,.navbar-inverse .nav-collapse .nav>li>a:focus,.navbar-inverse .nav-collapse .dropdown-menu a:hover,.navbar-inverse .nav-collapse .dropdown-menu a:focus{background-color:#111111;} .nav-collapse.in .btn-group{margin-top:5px;padding:0;} .nav-collapse .dropdown-menu{position:static;top:auto;left:auto;float:none;display:none;max-width:none;margin:0 15px;padding:0;background-color:transparent;border:none;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;} .nav-collapse .open>.dropdown-menu{display:block;} .nav-collapse .dropdown-menu:before,.nav-collapse .dropdown-menu:after{display:none;} .nav-collapse .dropdown-menu .divider{display:none;} .nav-collapse .nav>li>.dropdown-menu:before,.nav-collapse .nav>li>.dropdown-menu:after{display:none;} .nav-collapse .navbar-form,.nav-collapse .navbar-search{float:none;padding:10px 15px;margin:10px 0;border-top:1px solid #f2f2f2;border-bottom:1px solid #f2f2f2;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.1);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.1);} .navbar-inverse .nav-collapse .navbar-form,.navbar-inverse .nav-collapse .navbar-search{border-top-color:#111111;border-bottom-color:#111111;} .navbar .nav-collapse .nav.pull-right{float:none;margin-left:0;} .nav-collapse,.nav-collapse.collapse{overflow:hidden;height:0;} .navbar .btn-navbar{display:block;} .navbar-static .navbar-inner{padding-left:10px;padding-right:10px;}}@media (min-width:980px){.nav-collapse.collapse{height:auto !important;overflow:visible !important;}}@font-face{font-family:'FontAwesome';src:url('../components/font-awesome/build/assets/font-awesome/font/fontawesome-webfont.eot?v=3.1.0');src:url('../components/font-awesome/build/assets/font-awesome/font/fontawesome-webfont.eot?#iefix&v=3.1.0') format('embedded-opentype'),url('../components/font-awesome/build/assets/font-awesome/font/fontawesome-webfont.woff?v=3.1.0') format('woff'),url('../components/font-awesome/build/assets/font-awesome/font/fontawesome-webfont.ttf?v=3.1.0') format('truetype'),url('../components/font-awesome/build/assets/font-awesome/font/fontawesome-webfont.svg#fontawesomeregular?v=3.1.0') format('svg');font-weight:normal;font-style:normal;}[class^="icon-"],[class*=" icon-"]{font-family:FontAwesome;font-weight:normal;font-style:normal;text-decoration:inherit;-webkit-font-smoothing:antialiased;*margin-right:.3em;}
[class^="icon-"]:before,[class*=" icon-"]:before{text-decoration:inherit;display:inline-block;speak:none;}
.icon-large:before{vertical-align:-10%;font-size:1.3333333333333333em;}
a [class^="icon-"],a [class*=" icon-"],a [class^="icon-"]:before,a [class*=" icon-"]:before{display:inline;}
[class^="icon-"].icon-fixed-width,[class*=" icon-"].icon-fixed-width{display:inline-block;width:1.2857142857142858em;text-align:center;}[class^="icon-"].icon-fixed-width.icon-large,[class*=" icon-"].icon-fixed-width.icon-large{width:1.5714285714285714em;}
ul.icons-ul{list-style-type:none;text-indent:-0.7142857142857143em;margin-left:2.142857142857143em;}ul.icons-ul>li .icon-li{width:0.7142857142857143em;display:inline-block;text-align:center;}
[class^="icon-"].hide,[class*=" icon-"].hide{display:none;}
.icon-muted{color:#eeeeee;}
.icon-light{color:#ffffff;}
.icon-dark{color:#333333;}
.icon-border{border:solid 1px #eeeeee;padding:.2em .25em .15em;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;}
.icon-2x{font-size:2em;}.icon-2x.icon-border{border-width:2px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
.icon-3x{font-size:3em;}.icon-3x.icon-border{border-width:3px;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;}
.icon-4x{font-size:4em;}.icon-4x.icon-border{border-width:4px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;}
.icon-5x{font-size:5em;}.icon-5x.icon-border{border-width:5px;-webkit-border-radius:7px;-moz-border-radius:7px;border-radius:7px;}
.pull-right{float:right;}
.pull-left{float:left;}
[class^="icon-"].pull-left,[class*=" icon-"].pull-left{margin-right:.3em;}
[class^="icon-"].pull-right,[class*=" icon-"].pull-right{margin-left:.3em;}
[class^="icon-"],[class*=" icon-"]{display:inline;width:auto;height:auto;line-height:normal;vertical-align:baseline;background-image:none;background-position:0% 0%;background-repeat:repeat;margin-top:0;}
.icon-white,.nav-pills>.active>a>[class^="icon-"],.nav-pills>.active>a>[class*=" icon-"],.nav-list>.active>a>[class^="icon-"],.nav-list>.active>a>[class*=" icon-"],.navbar-inverse .nav>.active>a>[class^="icon-"],.navbar-inverse .nav>.active>a>[class*=" icon-"],.dropdown-menu>li>a:hover>[class^="icon-"],.dropdown-menu>li>a:hover>[class*=" icon-"],.dropdown-menu>.active>a>[class^="icon-"],.dropdown-menu>.active>a>[class*=" icon-"],.dropdown-submenu:hover>a>[class^="icon-"],.dropdown-submenu:hover>a>[class*=" icon-"]{background-image:none;}
.btn [class^="icon-"].icon-large,.nav [class^="icon-"].icon-large,.btn [class*=" icon-"].icon-large,.nav [class*=" icon-"].icon-large{line-height:.9em;}
.btn [class^="icon-"].icon-spin,.nav [class^="icon-"].icon-spin,.btn [class*=" icon-"].icon-spin,.nav [class*=" icon-"].icon-spin{display:inline-block;}
.nav-tabs [class^="icon-"],.nav-pills [class^="icon-"],.nav-tabs [class*=" icon-"],.nav-pills [class*=" icon-"],.nav-tabs [class^="icon-"].icon-large,.nav-pills [class^="icon-"].icon-large,.nav-tabs [class*=" icon-"].icon-large,.nav-pills [class*=" icon-"].icon-large{line-height:.9em;}
.btn [class^="icon-"].pull-left.icon-2x,.btn [class*=" icon-"].pull-left.icon-2x,.btn [class^="icon-"].pull-right.icon-2x,.btn [class*=" icon-"].pull-right.icon-2x{margin-top:.18em;}
.btn [class^="icon-"].icon-spin.icon-large,.btn [class*=" icon-"].icon-spin.icon-large{line-height:.8em;}
.btn.btn-small [class^="icon-"].pull-left.icon-2x,.btn.btn-small [class*=" icon-"].pull-left.icon-2x,.btn.btn-small [class^="icon-"].pull-right.icon-2x,.btn.btn-small [class*=" icon-"].pull-right.icon-2x{margin-top:.25em;}
.btn.btn-large [class^="icon-"],.btn.btn-large [class*=" icon-"]{margin-top:0;}.btn.btn-large [class^="icon-"].pull-left.icon-2x,.btn.btn-large [class*=" icon-"].pull-left.icon-2x,.btn.btn-large [class^="icon-"].pull-right.icon-2x,.btn.btn-large [class*=" icon-"].pull-right.icon-2x{margin-top:.05em;}
.btn.btn-large [class^="icon-"].pull-left.icon-2x,.btn.btn-large [class*=" icon-"].pull-left.icon-2x{margin-right:.2em;}
.btn.btn-large [class^="icon-"].pull-right.icon-2x,.btn.btn-large [class*=" icon-"].pull-right.icon-2x{margin-left:.2em;}
.icon-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:-35%;}.icon-stack [class^="icon-"],.icon-stack [class*=" icon-"]{display:block;text-align:center;position:absolute;width:100%;height:100%;font-size:1em;line-height:inherit;*line-height:2em;}
.icon-stack .icon-stack-base{font-size:2em;*line-height:1em;}
.icon-spin{display:inline-block;-moz-animation:spin 2s infinite linear;-o-animation:spin 2s infinite linear;-webkit-animation:spin 2s infinite linear;animation:spin 2s infinite linear;}
@-moz-keyframes spin{0%{-moz-transform:rotate(0deg);} 100%{-moz-transform:rotate(359deg);}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);} 100%{-webkit-transform:rotate(359deg);}}@-o-keyframes spin{0%{-o-transform:rotate(0deg);} 100%{-o-transform:rotate(359deg);}}@-ms-keyframes spin{0%{-ms-transform:rotate(0deg);} 100%{-ms-transform:rotate(359deg);}}@keyframes spin{0%{transform:rotate(0deg);} 100%{transform:rotate(359deg);}}.icon-rotate-90:before{-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-ms-transform:rotate(90deg);-o-transform:rotate(90deg);transform:rotate(90deg);filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);}
.icon-rotate-180:before{-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg);filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);}
.icon-rotate-270:before{-webkit-transform:rotate(270deg);-moz-transform:rotate(270deg);-ms-transform:rotate(270deg);-o-transform:rotate(270deg);transform:rotate(270deg);filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);}
.icon-flip-horizontal:before{-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1);-o-transform:scale(-1, 1);transform:scale(-1, 1);}
.icon-flip-vertical:before{-webkit-transform:scale(1, -1);-moz-transform:scale(1, -1);-ms-transform:scale(1, -1);-o-transform:scale(1, -1);transform:scale(1, -1);}
.icon-glass:before{content:"\f000";}
.icon-music:before{content:"\f001";}
.icon-search:before{content:"\f002";}
.icon-envelope:before{content:"\f003";}
.icon-heart:before{content:"\f004";}
.icon-star:before{content:"\f005";}
.icon-star-empty:before{content:"\f006";}
.icon-user:before{content:"\f007";}
.icon-film:before{content:"\f008";}
.icon-th-large:before{content:"\f009";}
.icon-th:before{content:"\f00a";}
.icon-th-list:before{content:"\f00b";}
.icon-ok:before{content:"\f00c";}
.icon-remove:before{content:"\f00d";}
.icon-zoom-in:before{content:"\f00e";}
.icon-zoom-out:before{content:"\f010";}
.icon-off:before{content:"\f011";}
.icon-signal:before{content:"\f012";}
.icon-cog:before{content:"\f013";}
.icon-trash:before{content:"\f014";}
.icon-home:before{content:"\f015";}
.icon-file:before{content:"\f016";}
.icon-time:before{content:"\f017";}
.icon-road:before{content:"\f018";}
.icon-download-alt:before{content:"\f019";}
.icon-download:before{content:"\f01a";}
.icon-upload:before{content:"\f01b";}
.icon-inbox:before{content:"\f01c";}
.icon-play-circle:before{content:"\f01d";}
.icon-repeat:before,.icon-rotate-right:before{content:"\f01e";}
.icon-refresh:before{content:"\f021";}
.icon-list-alt:before{content:"\f022";}
.icon-lock:before{content:"\f023";}
.icon-flag:before{content:"\f024";}
.icon-headphones:before{content:"\f025";}
.icon-volume-off:before{content:"\f026";}
.icon-volume-down:before{content:"\f027";}
.icon-volume-up:before{content:"\f028";}
.icon-qrcode:before{content:"\f029";}
.icon-barcode:before{content:"\f02a";}
.icon-tag:before{content:"\f02b";}
.icon-tags:before{content:"\f02c";}
.icon-book:before{content:"\f02d";}
.icon-bookmark:before{content:"\f02e";}
.icon-print:before{content:"\f02f";}
.icon-camera:before{content:"\f030";}
.icon-font:before{content:"\f031";}
.icon-bold:before{content:"\f032";}
.icon-italic:before{content:"\f033";}
.icon-text-height:before{content:"\f034";}
.icon-text-width:before{content:"\f035";}
.icon-align-left:before{content:"\f036";}
.icon-align-center:before{content:"\f037";}
.icon-align-right:before{content:"\f038";}
.icon-align-justify:before{content:"\f039";}
.icon-list:before{content:"\f03a";}
.icon-indent-left:before{content:"\f03b";}
.icon-indent-right:before{content:"\f03c";}
.icon-facetime-video:before{content:"\f03d";}
.icon-picture:before{content:"\f03e";}
.icon-pencil:before{content:"\f040";}
.icon-map-marker:before{content:"\f041";}
.icon-adjust:before{content:"\f042";}
.icon-tint:before{content:"\f043";}
.icon-edit:before{content:"\f044";}
.icon-share:before{content:"\f045";}
.icon-check:before{content:"\f046";}
.icon-move:before{content:"\f047";}
.icon-step-backward:before{content:"\f048";}
.icon-fast-backward:before{content:"\f049";}
.icon-backward:before{content:"\f04a";}
.icon-play:before{content:"\f04b";}
.icon-pause:before{content:"\f04c";}
.icon-stop:before{content:"\f04d";}
.icon-forward:before{content:"\f04e";}
.icon-fast-forward:before{content:"\f050";}
.icon-step-forward:before{content:"\f051";}
.icon-eject:before{content:"\f052";}
.icon-chevron-left:before{content:"\f053";}
.icon-chevron-right:before{content:"\f054";}
.icon-plus-sign:before{content:"\f055";}
.icon-minus-sign:before{content:"\f056";}
.icon-remove-sign:before{content:"\f057";}
.icon-ok-sign:before{content:"\f058";}
.icon-question-sign:before{content:"\f059";}
.icon-info-sign:before{content:"\f05a";}
.icon-screenshot:before{content:"\f05b";}
.icon-remove-circle:before{content:"\f05c";}
.icon-ok-circle:before{content:"\f05d";}
.icon-ban-circle:before{content:"\f05e";}
.icon-arrow-left:before{content:"\f060";}
.icon-arrow-right:before{content:"\f061";}
.icon-arrow-up:before{content:"\f062";}
.icon-arrow-down:before{content:"\f063";}
.icon-share-alt:before,.icon-mail-forward:before{content:"\f064";}
.icon-resize-full:before{content:"\f065";}
.icon-resize-small:before{content:"\f066";}
.icon-plus:before{content:"\f067";}
.icon-minus:before{content:"\f068";}
.icon-asterisk:before{content:"\f069";}
.icon-exclamation-sign:before{content:"\f06a";}
.icon-gift:before{content:"\f06b";}
.icon-leaf:before{content:"\f06c";}
.icon-fire:before{content:"\f06d";}
.icon-eye-open:before{content:"\f06e";}
.icon-eye-close:before{content:"\f070";}
.icon-warning-sign:before{content:"\f071";}
.icon-plane:before{content:"\f072";}
.icon-calendar:before{content:"\f073";}
.icon-random:before{content:"\f074";}
.icon-comment:before{content:"\f075";}
.icon-magnet:before{content:"\f076";}
.icon-chevron-up:before{content:"\f077";}
.icon-chevron-down:before{content:"\f078";}
.icon-retweet:before{content:"\f079";}
.icon-shopping-cart:before{content:"\f07a";}
.icon-folder-close:before{content:"\f07b";}
.icon-folder-open:before{content:"\f07c";}
.icon-resize-vertical:before{content:"\f07d";}
.icon-resize-horizontal:before{content:"\f07e";}
.icon-bar-chart:before{content:"\f080";}
.icon-twitter-sign:before{content:"\f081";}
.icon-facebook-sign:before{content:"\f082";}
.icon-camera-retro:before{content:"\f083";}
.icon-key:before{content:"\f084";}
.icon-cogs:before{content:"\f085";}
.icon-comments:before{content:"\f086";}
.icon-thumbs-up:before{content:"\f087";}
.icon-thumbs-down:before{content:"\f088";}
.icon-star-half:before{content:"\f089";}
.icon-heart-empty:before{content:"\f08a";}
.icon-signout:before{content:"\f08b";}
.icon-linkedin-sign:before{content:"\f08c";}
.icon-pushpin:before{content:"\f08d";}
.icon-external-link:before{content:"\f08e";}
.icon-signin:before{content:"\f090";}
.icon-trophy:before{content:"\f091";}
.icon-github-sign:before{content:"\f092";}
.icon-upload-alt:before{content:"\f093";}
.icon-lemon:before{content:"\f094";}
.icon-phone:before{content:"\f095";}
.icon-check-empty:before{content:"\f096";}
.icon-bookmark-empty:before{content:"\f097";}
.icon-phone-sign:before{content:"\f098";}
.icon-twitter:before{content:"\f099";}
.icon-facebook:before{content:"\f09a";}
.icon-github:before{content:"\f09b";}
.icon-unlock:before{content:"\f09c";}
.icon-credit-card:before{content:"\f09d";}
.icon-rss:before{content:"\f09e";}
.icon-hdd:before{content:"\f0a0";}
.icon-bullhorn:before{content:"\f0a1";}
.icon-bell:before{content:"\f0a2";}
.icon-certificate:before{content:"\f0a3";}
.icon-hand-right:before{content:"\f0a4";}
.icon-hand-left:before{content:"\f0a5";}
.icon-hand-up:before{content:"\f0a6";}
.icon-hand-down:before{content:"\f0a7";}
.icon-circle-arrow-left:before{content:"\f0a8";}
.icon-circle-arrow-right:before{content:"\f0a9";}
.icon-circle-arrow-up:before{content:"\f0aa";}
.icon-circle-arrow-down:before{content:"\f0ab";}
.icon-globe:before{content:"\f0ac";}
.icon-wrench:before{content:"\f0ad";}
.icon-tasks:before{content:"\f0ae";}
.icon-filter:before{content:"\f0b0";}
.icon-briefcase:before{content:"\f0b1";}
.icon-fullscreen:before{content:"\f0b2";}
.icon-group:before{content:"\f0c0";}
.icon-link:before{content:"\f0c1";}
.icon-cloud:before{content:"\f0c2";}
.icon-beaker:before{content:"\f0c3";}
.icon-cut:before{content:"\f0c4";}
.icon-copy:before{content:"\f0c5";}
.icon-paper-clip:before{content:"\f0c6";}
.icon-save:before{content:"\f0c7";}
.icon-sign-blank:before{content:"\f0c8";}
.icon-reorder:before{content:"\f0c9";}
.icon-list-ul:before{content:"\f0ca";}
.icon-list-ol:before{content:"\f0cb";}
.icon-strikethrough:before{content:"\f0cc";}
.icon-underline:before{content:"\f0cd";}
.icon-table:before{content:"\f0ce";}
.icon-magic:before{content:"\f0d0";}
.icon-truck:before{content:"\f0d1";}
.icon-pinterest:before{content:"\f0d2";}
.icon-pinterest-sign:before{content:"\f0d3";}
.icon-google-plus-sign:before{content:"\f0d4";}
.icon-google-plus:before{content:"\f0d5";}
.icon-money:before{content:"\f0d6";}
.icon-caret-down:before{content:"\f0d7";}
.icon-caret-up:before{content:"\f0d8";}
.icon-caret-left:before{content:"\f0d9";}
.icon-caret-right:before{content:"\f0da";}
.icon-columns:before{content:"\f0db";}
.icon-sort:before{content:"\f0dc";}
.icon-sort-down:before{content:"\f0dd";}
.icon-sort-up:before{content:"\f0de";}
.icon-envelope-alt:before{content:"\f0e0";}
.icon-linkedin:before{content:"\f0e1";}
.icon-undo:before,.icon-rotate-left:before{content:"\f0e2";}
.icon-legal:before{content:"\f0e3";}
.icon-dashboard:before{content:"\f0e4";}
.icon-comment-alt:before{content:"\f0e5";}
.icon-comments-alt:before{content:"\f0e6";}
.icon-bolt:before{content:"\f0e7";}
.icon-sitemap:before{content:"\f0e8";}
.icon-umbrella:before{content:"\f0e9";}
.icon-paste:before{content:"\f0ea";}
.icon-lightbulb:before{content:"\f0eb";}
.icon-exchange:before{content:"\f0ec";}
.icon-cloud-download:before{content:"\f0ed";}
.icon-cloud-upload:before{content:"\f0ee";}
.icon-user-md:before{content:"\f0f0";}
.icon-stethoscope:before{content:"\f0f1";}
.icon-suitcase:before{content:"\f0f2";}
.icon-bell-alt:before{content:"\f0f3";}
.icon-coffee:before{content:"\f0f4";}
.icon-food:before{content:"\f0f5";}
.icon-file-alt:before{content:"\f0f6";}
.icon-building:before{content:"\f0f7";}
.icon-hospital:before{content:"\f0f8";}
.icon-ambulance:before{content:"\f0f9";}
.icon-medkit:before{content:"\f0fa";}
.icon-fighter-jet:before{content:"\f0fb";}
.icon-beer:before{content:"\f0fc";}
.icon-h-sign:before{content:"\f0fd";}
.icon-plus-sign-alt:before{content:"\f0fe";}
.icon-double-angle-left:before{content:"\f100";}
.icon-double-angle-right:before{content:"\f101";}
.icon-double-angle-up:before{content:"\f102";}
.icon-double-angle-down:before{content:"\f103";}
.icon-angle-left:before{content:"\f104";}
.icon-angle-right:before{content:"\f105";}
.icon-angle-up:before{content:"\f106";}
.icon-angle-down:before{content:"\f107";}
.icon-desktop:before{content:"\f108";}
.icon-laptop:before{content:"\f109";}
.icon-tablet:before{content:"\f10a";}
.icon-mobile-phone:before{content:"\f10b";}
.icon-circle-blank:before{content:"\f10c";}
.icon-quote-left:before{content:"\f10d";}
.icon-quote-right:before{content:"\f10e";}
.icon-spinner:before{content:"\f110";}
.icon-circle:before{content:"\f111";}
.icon-reply:before,.icon-mail-reply:before{content:"\f112";}
.icon-folder-close-alt:before{content:"\f114";}
.icon-folder-open-alt:before{content:"\f115";}
.icon-expand-alt:before{content:"\f116";}
.icon-collapse-alt:before{content:"\f117";}
.icon-smile:before{content:"\f118";}
.icon-frown:before{content:"\f119";}
.icon-meh:before{content:"\f11a";}
.icon-gamepad:before{content:"\f11b";}
.icon-keyboard:before{content:"\f11c";}
.icon-flag-alt:before{content:"\f11d";}
.icon-flag-checkered:before{content:"\f11e";}
.icon-terminal:before{content:"\f120";}
.icon-code:before{content:"\f121";}
.icon-reply-all:before{content:"\f122";}
.icon-mail-reply-all:before{content:"\f122";}
.icon-star-half-full:before,.icon-star-half-empty:before{content:"\f123";}
.icon-location-arrow:before{content:"\f124";}
.icon-crop:before{content:"\f125";}
.icon-code-fork:before{content:"\f126";}
.icon-unlink:before{content:"\f127";}
.icon-question:before{content:"\f128";}
.icon-info:before{content:"\f129";}
.icon-exclamation:before{content:"\f12a";}
.icon-superscript:before{content:"\f12b";}
.icon-subscript:before{content:"\f12c";}
.icon-eraser:before{content:"\f12d";}
.icon-puzzle-piece:before{content:"\f12e";}
.icon-microphone:before{content:"\f130";}
.icon-microphone-off:before{content:"\f131";}
.icon-shield:before{content:"\f132";}
.icon-calendar-empty:before{content:"\f133";}
.icon-fire-extinguisher:before{content:"\f134";}
.icon-rocket:before{content:"\f135";}
.icon-maxcdn:before{content:"\f136";}
.icon-chevron-sign-left:before{content:"\f137";}
.icon-chevron-sign-right:before{content:"\f138";}
.icon-chevron-sign-up:before{content:"\f139";}
.icon-chevron-sign-down:before{content:"\f13a";}
.icon-html5:before{content:"\f13b";}
.icon-css3:before{content:"\f13c";}
.icon-anchor:before{content:"\f13d";}
.icon-unlock-alt:before{content:"\f13e";}
.icon-bullseye:before{content:"\f140";}
.icon-ellipsis-horizontal:before{content:"\f141";}
.icon-ellipsis-vertical:before{content:"\f142";}
.icon-rss-sign:before{content:"\f143";}
.icon-play-sign:before{content:"\f144";}
.icon-ticket:before{content:"\f145";}
.icon-minus-sign-alt:before{content:"\f146";}
.icon-check-minus:before{content:"\f147";}
.icon-level-up:before{content:"\f148";}
.icon-level-down:before{content:"\f149";}
.icon-check-sign:before{content:"\f14a";}
.icon-edit-sign:before{content:"\f14b";}
.icon-external-link-sign:before{content:"\f14c";}
.icon-share-sign:before{content:"\f14d";}
.border-box-sizing{box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;}
.corner-all{border-radius:4px;}
.hbox{display:-webkit-box;-webkit-box-orient:horizontal;-webkit-box-align:stretch;display:-moz-box;-moz-box-orient:horizontal;-moz-box-align:stretch;display:box;box-orient:horizontal;box-align:stretch;}
.hbox>*{-webkit-box-flex:0;-moz-box-flex:0;box-flex:0;}
.vbox{display:-webkit-box;-webkit-box-orient:vertical;-webkit-box-align:stretch;display:-moz-box;-moz-box-orient:vertical;-moz-box-align:stretch;display:box;box-orient:vertical;box-align:stretch;width:100%;}
.vbox>*{-webkit-box-flex:0;-moz-box-flex:0;box-flex:0;}
.reverse{-webkit-box-direction:reverse;-moz-box-direction:reverse;box-direction:reverse;}
.box-flex0{-webkit-box-flex:0;-moz-box-flex:0;box-flex:0;}
.box-flex1{-webkit-box-flex:1;-moz-box-flex:1;box-flex:1;}
.box-flex{-webkit-box-flex:1;-moz-box-flex:1;box-flex:1;}
.box-flex2{-webkit-box-flex:2;-moz-box-flex:2;box-flex:2;}
.box-group1{-webkit-box-flex-group:1;-moz-box-flex-group:1;box-flex-group:1;}
.box-group2{-webkit-box-flex-group:2;-moz-box-flex-group:2;box-flex-group:2;}
.start{-webkit-box-pack:start;-moz-box-pack:start;box-pack:start;}
.end{-webkit-box-pack:end;-moz-box-pack:end;box-pack:end;}
.center{-webkit-box-pack:center;-moz-box-pack:center;box-pack:center;}
body{background-color:white;position:absolute;left:0px;right:0px;top:0px;bottom:0px;overflow:visible;}
div#header{display:none;}
#ipython_notebook{padding-left:16px;}
#noscript{width:auto;padding-top:16px;padding-bottom:16px;text-align:center;font-size:22px;color:red;font-weight:bold;}
#ipython_notebook img{font-family:Verdana,"Helvetica Neue",Arial,Helvetica,Geneva,sans-serif;height:24px;text-decoration:none;color:black;}
#site{width:100%;display:none;}
.ui-button .ui-button-text{padding:0.2em 0.8em;font-size:77%;}
input.ui-button{padding:0.3em 0.9em;}
.navbar span{margin-top:3px;}
span#login_widget{float:right;}
.nav-header{text-transform:none;}
.navbar-nobg{background-color:transparent;background-image:none;}
#header>span{margin-top:10px;}
.modal-body{max-height:500px;}
.center-nav{display:inline-block;margin-bottom:-4px;}
.alternate_upload{background-color:none;display:inline;}
.alternate_upload.form{padding:0;margin:0;}
.alternate_upload input.fileinput{background-color:red;position:relative;opacity:0;z-index:2;width:295px;margin-left:163px;cursor:pointer;}
.list_toolbar{padding:5px;height:25px;line-height:25px;}
.toolbar_info{float:left;}
.toolbar_buttons{float:right;}
.list_header{font-weight:bold;}
.list_container{margin-top:16px;margin-bottom:16px;border:1px solid #ababab;border-radius:4px;}
.list_container>div{border-bottom:1px solid #ababab;}.list_container>div:hover .list-item{background-color:red;}
.list_container>div:last-child{border:none;}
.list_item:hover .list_item{background-color:#ddd;}
.list_container>div>span,.list_container>div>div{padding:8px;}
.list_item a{text-decoration:none;}
input.nbname_input{height:15px;}
.highlight_text{color:blue;}
#project_name>.breadcrumb{padding:0px;margin-bottom:0px;background-color:transparent;font-weight:bold;}
input.engine_num_input{height:20px;margin-bottom:2px;padding-top:0;padding-bottom:0;width:60px;}
.ansibold{font-weight:bold;}
.ansiblack{color:black;}
.ansired{color:darkred;}
.ansigreen{color:darkgreen;}
.ansiyellow{color:brown;}
.ansiblue{color:darkblue;}
.ansipurple{color:darkviolet;}
.ansicyan{color:steelblue;}
.ansigray{color:gray;}
.ansibgblack{background-color:black;}
.ansibgred{background-color:red;}
.ansibggreen{background-color:green;}
.ansibgyellow{background-color:yellow;}
.ansibgblue{background-color:blue;}
.ansibgpurple{background-color:magenta;}
.ansibgcyan{background-color:cyan;}
.ansibggray{background-color:gray;}
div.cell{border:1px solid transparent;display:-webkit-box;-webkit-box-orient:vertical;-webkit-box-align:stretch;display:-moz-box;-moz-box-orient:vertical;-moz-box-align:stretch;display:box;box-orient:vertical;box-align:stretch;width:100%;padding:5px 5px 5px 0px;margin:2px 0px 2px 7px;outline:none;}div.cell.selected{border-radius:4px;border:thin #ababab solid;}
div.prompt{width:11ex;padding:0.4em;margin:0px;font-family:monospace;text-align:right;line-height:1.231em;}
.celltoolbar{border:thin solid #CFCFCF;border-bottom:none;background:#EEE;border-top-right-radius:3px;border-top-left-radius:3px;width:100%;-webkit-box-pack:end;height:22px;}
.no_input_radius{border-top-right-radius:0px;border-top-left-radius:0px;}
.text_cell .ctb_prompt{display:none;}
.code_cell .ctb_prompt{display:block;}
.ctb_hideshow{display:none;vertical-align:bottom;padding-right:2px;}
.celltoolbar>div{padding-top:0px;}
.ctb_area{margin:0;padding:0;width:100%;}
.ctb_show.ctb_hideshow,.ctb_show .ctb_hideshow{display:block;}
.ctb_show .input_area,.ctb_show .ctb_hideshow+div.text_cell_input{border-top-right-radius:0px;border-top-left-radius:0px;}
.ctb_show>.celltoolbar{border-bottom-right-radius:0px;border-bottom-left-radius:0px;}
.button_container{margin-top:0;margin-bottom:0;}
.ui-button{min-width:30px;}
.celltoolbar .button_container select{margin:10px;margin-top:1px;margin-bottom:0px;padding:0;font-size:87%;width:auto;display:inline-block;height:18px;line-height:18px;vertical-align:top;}
.celltoolbar label{display:inline-block;height:15px;line-height:15px;vertical-align:top;}
.celltoolbar label span{font-size:85%;}
.celltoolbar input[type=checkbox]{margin:0px;margin-left:4px;margin-right:4px;}
.celltoolbar .ui-button{border:none;vertical-align:top;height:20px;}
div.input{page-break-inside:avoid;display:-webkit-box;-webkit-box-orient:horizontal;-webkit-box-align:stretch;display:-moz-box;-moz-box-orient:horizontal;-moz-box-align:stretch;display:box;box-orient:horizontal;box-align:stretch;}
div.input_area{border:1px solid #cfcfcf;border-radius:4px;background:#f7f7f7;}
div.input_prompt{color:navy;border-top:1px solid transparent;}
div.output_wrapper{margin-top:5px;position:relative;display:-webkit-box;-webkit-box-orient:vertical;-webkit-box-align:stretch;display:-moz-box;-moz-box-orient:vertical;-moz-box-align:stretch;display:box;box-orient:vertical;box-align:stretch;width:100%;}
div.output_scroll{height:24em;width:100%;overflow:auto;border-radius:4px;-webkit-box-shadow:inset 0 2px 8px rgba(0, 0, 0, 0.8);-moz-box-shadow:inset 0 2px 8px rgba(0, 0, 0, 0.8);box-shadow:inset 0 2px 8px rgba(0, 0, 0, 0.8);}
div.output_collapsed{margin:0px;padding:0px;display:-webkit-box;-webkit-box-orient:vertical;-webkit-box-align:stretch;display:-moz-box;-moz-box-orient:vertical;-moz-box-align:stretch;display:box;box-orient:vertical;box-align:stretch;width:100%;}
div.out_prompt_overlay{height:100%;padding:0px 0.4em;position:absolute;border-radius:4px;}
div.out_prompt_overlay:hover{-webkit-box-shadow:inset 0 0 1px #000000;-moz-box-shadow:inset 0 0 1px #000000;box-shadow:inset 0 0 1px #000000;background:rgba(240, 240, 240, 0.5);}
div.output_prompt{color:darkred;}
.CodeMirror{line-height:1.231em;height:auto;background:none;}
.CodeMirror-scroll{overflow-y:hidden;overflow-x:auto;}
@-moz-document {.CodeMirror-scroll{overflow-x:hidden;}}.CodeMirror-lines{padding:0.4em;}
.CodeMirror-linenumber{padding:0 8px 0 4px;}
.CodeMirror-gutters{border-bottom-left-radius:4px;border-top-left-radius:4px;}
.CodeMirror pre{padding:0;border:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;}
.completions{position:absolute;z-index:10;overflow:hidden;border:1px solid #ababab;border-radius:4px;-webkit-box-shadow:0px 6px 10px -1px #adadad;-moz-box-shadow:0px 6px 10px -1px #adadad;box-shadow:0px 6px 10px -1px #adadad;}
.completions select{background:white;outline:none;border:none;padding:0px;margin:0px;overflow:auto;font-family:monospace;font-size:110%;color:#000000;}
.completions select option.context{color:#0064cd;}
pre code{display:block;padding:0.5em;}
.highlight-base,pre code,pre .subst,pre .tag .title,pre .lisp .title,pre .clojure .built_in,pre .nginx .title{color:black;}
.highlight-string,pre .string,pre .constant,pre .parent,pre .tag .value,pre .rules .value,pre .rules .value .number,pre .preprocessor,pre .ruby .symbol,pre .ruby .symbol .string,pre .aggregate,pre .template_tag,pre .django .variable,pre .smalltalk .class,pre .addition,pre .flow,pre .stream,pre .bash .variable,pre .apache .tag,pre .apache .cbracket,pre .tex .command,pre .tex .special,pre .erlang_repl .function_or_atom,pre .markdown .header{color:#BA2121;}
.highlight-comment,pre .comment,pre .annotation,pre .template_comment,pre .diff .header,pre .chunk,pre .markdown .blockquote{color:#408080;font-style:italic;}
.highlight-number,pre .number,pre .date,pre .regexp,pre .literal,pre .smalltalk .symbol,pre .smalltalk .char,pre .go .constant,pre .change,pre .markdown .bullet,pre .markdown .link_url{color:#080;}
pre .label,pre .javadoc,pre .ruby .string,pre .decorator,pre .filter .argument,pre .localvars,pre .array,pre .attr_selector,pre .important,pre .pseudo,pre .pi,pre .doctype,pre .deletion,pre .envvar,pre .shebang,pre .apache .sqbracket,pre .nginx .built_in,pre .tex .formula,pre .erlang_repl .reserved,pre .prompt,pre .markdown .link_label,pre .vhdl .attribute,pre .clojure .attribute,pre .coffeescript .property{color:#8888ff;}
.highlight-keyword,pre .keyword,pre .id,pre .phpdoc,pre .aggregate,pre .css .tag,pre .javadoctag,pre .phpdoc,pre .yardoctag,pre .smalltalk .class,pre .winutils,pre .bash .variable,pre .apache .tag,pre .go .typename,pre .tex .command,pre .markdown .strong,pre .request,pre .status{color:#008000;font-weight:bold;}
.highlight-builtin,pre .built_in{color:#008000;}
pre .markdown .emphasis{font-style:italic;}
pre .nginx .built_in{font-weight:normal;}
pre .coffeescript .javascript,pre .javascript .xml,pre .tex .formula,pre .xml .javascript,pre .xml .vbscript,pre .xml .css,pre .xml .cdata{opacity:0.5;}
.cm-s-ipython span.cm-variable{color:black;}
.cm-s-ipython span.cm-keyword{color:#008000;font-weight:bold;}
.cm-s-ipython span.cm-number{color:#080;}
.cm-s-ipython span.cm-comment{color:#408080;font-style:italic;}
.cm-s-ipython span.cm-string{color:#BA2121;}
.cm-s-ipython span.cm-builtin{color:#008000;}
.cm-s-ipython span.cm-error{color:#f00;}
.cm-s-ipython span.cm-operator{color:#AA22FF;font-weight:bold;}
.cm-s-ipython span.cm-meta{color:#AA22FF;}
#menubar .navbar-inner{min-height:28px;border-top:1px;border-radius:0px 0px 4px 4px;}
#menubar .navbar{margin-bottom:8px;}
.nav-wrapper{border-bottom:1px solid #d4d4d4;}
#menubar li.dropdown{line-height:12px;}
body{background-color:#ffffff;}
body.notebook_app{overflow:hidden;}
span#notebook_name{height:1em;line-height:1em;padding:3px;border:none;font-size:146.5%;}
div#notebook_panel{margin:0px 0px 0px 0px;padding:0px;-webkit-box-shadow:0 -1px 10px rgba(0, 0, 0, 0.1);-moz-box-shadow:0 -1px 10px rgba(0, 0, 0, 0.1);box-shadow:0 -1px 10px rgba(0, 0, 0, 0.1);}
div#notebook{overflow-y:scroll;overflow-x:auto;width:100%;padding:5px 5px 15px 5px;margin:0px;border-top:1px solid #ababab;}
div.ui-widget-content{border:1px solid #ababab;outline:none;}
pre.dialog{background-color:#f7f7f7;border:1px solid #ddd;border-radius:4px;padding:0.4em;padding-left:2em;}
p.dialog{padding:0.2em;}
pre,code,kbd,samp{white-space:pre-wrap;}
#fonttest{font-family:monospace;}
p{margin-bottom:0;}
.end_space{height:200px;}
#notification_area{z-index:10;}
.notification_widget{color:#777777;padding:1px 12px;margin:2px 4px;z-index:10;border:1px solid #ccc;border-radius:4px;background:rgba(240, 240, 240, 0.5);}
div.output_area{padding:0px;page-break-inside:avoid;display:-webkit-box;-webkit-box-orient:horizontal;-webkit-box-align:stretch;display:-moz-box;-moz-box-orient:horizontal;-moz-box-align:stretch;display:box;box-orient:horizontal;box-align:stretch;}
div.output_area pre{font-family:monospace;margin:0;padding:0;border:0;font-size:100%;vertical-align:baseline;color:black;background-color:transparent;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;line-height:inherit;}
div.output_subarea{padding:0.44em 0.4em 0.4em 1px;margin-left:6px;-webkit-box-flex:1;-moz-box-flex:1;box-flex:1;}
div.output_text{text-align:left;color:#000000;font-family:monospace;line-height:1.231em;}
div.output_stream{padding-top:0.0em;padding-bottom:0.0em;}
div.output_stderr{background:#fdd;}
div.output_latex{text-align:left;}
.js-error{color:darkred;}
div.raw_input{padding-top:0px;padding-bottom:0px;height:1em;line-height:1em;font-family:monospace;}
span.input_prompt{font-family:inherit;}
input.raw_input{font-family:inherit;font-size:inherit;color:inherit;width:auto;margin:-2px 0px 0px 1px;padding-left:1px;padding-top:2px;height:1em;}
p.p-space{margin-bottom:10px;}
div#pager_splitter{height:8px;}
#pager-container{position:relative;padding:15px 0px;}
div#pager{overflow:auto;display:none;}div#pager pre{font-size:13px;line-height:1.231em;color:#000000;background-color:#f7f7f7;padding:0.4em;}
.shortcut_key{display:inline-block;width:15ex;text-align:right;font-family:monospace;}
.shortcut_descr{display:inline-block;}
div.quickhelp{float:left;width:50%;}
.rendered_html{color:black;}.rendered_html em{font-style:italic;}
.rendered_html strong{font-weight:bold;}
.rendered_html u{text-decoration:underline;}
.rendered_html :link{text-decoration:underline;}
.rendered_html :visited{text-decoration:underline;}
.rendered_html h1{font-size:197%;margin:.65em 0;font-weight:bold;}
.rendered_html h2{font-size:153.9%;margin:.75em 0;font-weight:bold;}
.rendered_html h3{font-size:123.1%;margin:.85em 0;font-weight:bold;}
.rendered_html h4{font-size:100%;margin:0.95em 0;font-weight:bold;}
.rendered_html h5{font-size:85%;margin:1.5em 0;font-weight:bold;}
.rendered_html h6{font-size:77%;margin:1.65em 0;font-weight:bold;}
.rendered_html ul{list-style:disc;margin:1em 2em;}
.rendered_html ul ul{list-style:square;margin:0em 2em;}
.rendered_html ul ul ul{list-style:circle;margin:0em 2em;}
.rendered_html ol{list-style:decimal;margin:1em 2em;}
.rendered_html ol ol{list-style:upper-alpha;margin:0em 2em;}
.rendered_html ol ol ol{list-style:lower-alpha;margin:0em 2em;}
.rendered_html ol ol ol ol{list-style:lower-roman;margin:0em 2em;}
.rendered_html ol ol ol ol ol{list-style:decimal;margin:0em 2em;}
.rendered_html hr{color:black;background-color:black;}
.rendered_html pre{margin:1em 2em;}
.rendered_html pre,.rendered_html code{border:0;background-color:#ffffff;color:#000000;font-size:100%;padding:0px;}
.rendered_html blockquote{margin:1em 2em;}
.rendered_html table,.rendered_html tr,.rendered_html th,.rendered_html td{border:1px solid black;border-collapse:collapse;margin:1em 2em;}
.rendered_html td,.rendered_html th{text-align:left;vertical-align:middle;padding:4px;}
.rendered_html th{font-weight:bold;}
.rendered_html p{text-align:justify;}
.rendered_html p+p{margin-top:1em;}
span#save_widget{padding:0px 5px;margin-top:12px;}
span#checkpoint_status,span#autosave_status{font-size:small;}
@media (max-width:767px){span#save_widget{font-size:small;} span#checkpoint_status,span#autosave_status{font-size:x-small;}}@media (max-width:767px){span#checkpoint_status,span#autosave_status{display:none;}}@media (min-width:768px) and (max-width:979px){span#checkpoint_status{display:none;} span#autosave_status{font-size:x-small;}}div.text_cell{padding:5px 5px 5px 5px;}
div.text_cell_input{color:#000000;border:1px solid #cfcfcf;border-radius:4px;background:#f7f7f7;}
div.text_cell_render{outline:none;resize:none;width:inherit;border-style:none;padding:5px;color:#000000;}
a.anchor-link:link{text-decoration:none;padding:0px 20px;visibility:hidden;}
h1:hover .anchor-link,h2:hover .anchor-link,h3:hover .anchor-link,h4:hover .anchor-link,h5:hover .anchor-link,h6:hover .anchor-link{visibility:visible;}
.toolbar{padding:0px 10px;margin-top:-5px;}.toolbar select,.toolbar label{width:auto;height:26px;vertical-align:middle;margin-right:2px;margin-bottom:0px;display:inline;font-size:92%;margin-left:0.3em;margin-right:0.3em;padding:0px;padding-top:3px;}
.toolbar .btn{padding:2px 8px;}
.toolbar .btn-group{margin-top:0px;}
.toolbar-inner{border:none !important;-webkit-box-shadow:none !important;-moz-box-shadow:none !important;box-shadow:none !important;}
#maintoolbar{margin-bottom:0px;}
@-moz-keyframes fadeOut{from{opacity:1;} to{opacity:0;}}@-webkit-keyframes fadeOut{from{opacity:1;} to{opacity:0;}}@-moz-keyframes fadeIn{from{opacity:0;} to{opacity:1;}}@-webkit-keyframes fadeIn{from{opacity:0;} to{opacity:1;}}.bigtooltip{overflow:auto;height:200px;-webkit-transition-property:height;-webkit-transition-duration:500ms;-moz-transition-property:height;-moz-transition-duration:500ms;transition-property:height;transition-duration:500ms;}
.smalltooltip{-webkit-transition-property:height;-webkit-transition-duration:500ms;-moz-transition-property:height;-moz-transition-duration:500ms;transition-property:height;transition-duration:500ms;text-overflow:ellipsis;overflow:hidden;height:80px;}
.tooltipbuttons{position:absolute;padding-right:15px;top:0px;right:0px;}
.tooltiptext{padding-right:30px;}
.ipython_tooltip{max-width:700px;-webkit-animation:fadeOut 400ms;-moz-animation:fadeOut 400ms;animation:fadeOut 400ms;-webkit-animation:fadeIn 400ms;-moz-animation:fadeIn 400ms;animation:fadeIn 400ms;vertical-align:middle;background-color:#f7f7f7;overflow:visible;border:#ababab 1px solid;outline:none;padding:3px;margin:0px;padding-left:7px;font-family:monospace;min-height:50px;-moz-box-shadow:0px 6px 10px -1px #adadad;-webkit-box-shadow:0px 6px 10px -1px #adadad;box-shadow:0px 6px 10px -1px #adadad;border-radius:4px;position:absolute;z-index:2;}.ipython_tooltip a{float:right;}
.ipython_tooltip .tooltiptext pre{border:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;font-size:100%;background-color:#f7f7f7;}
.pretooltiparrow{left:0px;margin:0px;top:-16px;width:40px;height:16px;overflow:hidden;position:absolute;}
.pretooltiparrow:before{background-color:#f7f7f7;border:1px #ababab solid;z-index:11;content:"";position:absolute;left:15px;top:10px;width:25px;height:25px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);}

    </style>
<style type="text/css">
    .highlight .hll { background-color: #ffffcc }
.highlight  { background: #f8f8f8; }
.highlight .c { color: #408080; font-style: italic } /* Comment */
.highlight .err { border: 1px solid #FF0000 } /* Error */
.highlight .k { color: #008000; font-weight: bold } /* Keyword */
.highlight .o { color: #666666 } /* Operator */
.highlight .cm { color: #408080; font-style: italic } /* Comment.Multiline */
.highlight .cp { color: #BC7A00 } /* Comment.Preproc */
.highlight .c1 { color: #408080; font-style: italic } /* Comment.Single */
.highlight .cs { color: #408080; font-style: italic } /* Comment.Special */
.highlight .gd { color: #A00000 } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: #FF0000 } /* Generic.Error */
.highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.highlight .gi { color: #00A000 } /* Generic.Inserted */
.highlight .go { color: #888888 } /* Generic.Output */
.highlight .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.highlight .gt { color: #0044DD } /* Generic.Traceback */
.highlight .kc { color: #008000; font-weight: bold } /* Keyword.Constant */
.highlight .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
.highlight .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
.highlight .kp { color: #008000 } /* Keyword.Pseudo */
.highlight .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #B00040 } /* Keyword.Type */
.highlight .m { color: #666666 } /* Literal.Number */
.highlight .s { color: #BA2121 } /* Literal.String */
.highlight .na { color: #7D9029 } /* Name.Attribute */
.highlight .nb { color: #008000 } /* Name.Builtin */
.highlight .nc { color: #0000FF; font-weight: bold } /* Name.Class */
.highlight .no { color: #880000 } /* Name.Constant */
.highlight .nd { color: #AA22FF } /* Name.Decorator */
.highlight .ni { color: #999999; font-weight: bold } /* Name.Entity */
.highlight .ne { color: #D2413A; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #0000FF } /* Name.Function */
.highlight .nl { color: #A0A000 } /* Name.Label */
.highlight .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
.highlight .nt { color: #008000; font-weight: bold } /* Name.Tag */
.highlight .nv { color: #19177C } /* Name.Variable */
.highlight .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */
.highlight .w { color: #bbbbbb } /* Text.Whitespace */
.highlight .mf { color: #666666 } /* Literal.Number.Float */
.highlight .mh { color: #666666 } /* Literal.Number.Hex */
.highlight .mi { color: #666666 } /* Literal.Number.Integer */
.highlight .mo { color: #666666 } /* Literal.Number.Oct */
.highlight .sb { color: #BA2121 } /* Literal.String.Backtick */
.highlight .sc { color: #BA2121 } /* Literal.String.Char */
.highlight .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
.highlight .s2 { color: #BA2121 } /* Literal.String.Double */
.highlight .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */
.highlight .sh { color: #BA2121 } /* Literal.String.Heredoc */
.highlight .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */
.highlight .sx { color: #008000 } /* Literal.String.Other */
.highlight .sr { color: #BB6688 } /* Literal.String.Regex */
.highlight .s1 { color: #BA2121 } /* Literal.String.Single */
.highlight .ss { color: #19177C } /* Literal.String.Symbol */
.highlight .bp { color: #008000 } /* Name.Builtin.Pseudo */
.highlight .vc { color: #19177C } /* Name.Variable.Class */
.highlight .vg { color: #19177C } /* Name.Variable.Global */
.highlight .vi { color: #19177C } /* Name.Variable.Instance */
.highlight .il { color: #666666 } /* Literal.Number.Integer.Long */
    </style>


<style type="text/css">
/* Overrides of notebook CSS for static HTML export */
body {
  overflow: visible;
  padding: 8px;
}
.input_area {
  padding: 0.2em;
}

pre {
    padding: 0.2em;
    border: none;
    margin: 0px;
    font-size: 13px;
}
</style>

<!-- Custom stylesheet, it must be in the same directory as the html file -->
<link rel="stylesheet" href="custom.css">

<script src="https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS_HTML" type="text/javascript"></script>
<script type="text/javascript">
init_mathjax = function() {
    if (window.MathJax) {
        // MathJax loaded
        MathJax.Hub.Config({
            tex2jax: {
                inlineMath: [ ['$','$'], ["\\(","\\)"] ],
                displayMath: [ ['$$','$$'], ["\\[","\\]"] ]
            },
            displayAlign: 'left', // Change this to 'center' to center equations.
            "HTML-CSS": {
                styles: {'.MathJax_Display': {"margin": 0}}
            }
        });
        MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
    }
}
init_mathjax();
</script>
</head>
<body>

<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[13]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre><span class="kn">import</span> <span class="nn">glob</span><span class="o">,</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">operator</span>
<span class="kn">import</span> <span class="nn">glob</span>

<span class="kn">from</span> <span class="nn">skimage</span> <span class="kn">import</span> <span class="n">color</span> <span class="k">as</span> <span class="n">col</span>

<span class="c">#from colormath.color_objects import RGBColor</span>
<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
<span class="kn">from</span> <span class="nn">StringIO</span> <span class="kn">import</span> <span class="n">StringIO</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">pylab</span> <span class="kn">as</span> <span class="nn">pl</span>
<span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">svm</span><span class="p">,</span> <span class="n">metrics</span><span class="p">,</span> <span class="n">datasets</span>
</pre></div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[90]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre><span class="k">def</span> <span class="nf">histeq</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="n">nbr_bins</span><span class="o">=</span><span class="mi">256</span><span class="p">):</span>
    <span class="c">#get image histogram</span>
    <span class="n">imhist</span><span class="p">,</span><span class="n">bins</span> <span class="o">=</span> <span class="n">histogram</span><span class="p">(</span><span class="n">im</span><span class="o">.</span><span class="n">flatten</span><span class="p">(),</span><span class="n">nbr_bins</span><span class="p">,</span><span class="n">density</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">cdf</span> <span class="o">=</span> <span class="n">imhist</span><span class="o">.</span><span class="n">cumsum</span><span class="p">()</span> <span class="c">#cumulative distribution function</span>
    <span class="n">cdf</span> <span class="o">=</span> <span class="mi">255</span> <span class="o">*</span> <span class="n">cdf</span> <span class="o">/</span> <span class="n">cdf</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="c">#normalize</span>

    <span class="c">#print bins.shape</span>
    <span class="c">#use linear interpolation of cdf to find new pixel values</span>
    <span class="n">im2</span> <span class="o">=</span> <span class="n">interp</span><span class="p">(</span><span class="n">im</span><span class="o">.</span><span class="n">flatten</span><span class="p">(),</span><span class="n">bins</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="n">cdf</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">im2</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">im</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
</pre></div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[72]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre><span class="k">def</span> <span class="nf">get_ms</span><span class="p">(</span><span class="n">rgb</span><span class="p">):</span>
    <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="mf">1.0</span><span class="o">/</span><span class="mf">3.0</span><span class="p">)</span> <span class="o">*</span> <span class="nb">float</span><span class="p">((</span><span class="nb">sum</span><span class="p">(</span><span class="n">rgb</span><span class="p">)))</span>
    <span class="n">b_r</span> <span class="o">=</span> <span class="n">rgb</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">rgb</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>

    <span class="k">if</span><span class="p">(</span><span class="n">b_r</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">rgb</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>
        <span class="n">s</span> <span class="o">=</span> <span class="p">(</span><span class="mf">3.0</span> <span class="o">/</span> <span class="mf">2.0</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">rgb</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">m</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">s</span> <span class="o">=</span> <span class="p">(</span><span class="mf">3.0</span> <span class="o">/</span> <span class="mf">2.0</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">m</span> <span class="o">-</span> <span class="n">rgb</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
    <span class="k">return</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">m</span><span class="p">),</span><span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)]</span>
</pre></div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[92]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre><span class="k">def</span> <span class="nf">transform_ms</span><span class="p">(</span><span class="n">img</span><span class="p">):</span>
    <span class="n">PIXEL_SAMPLING_INTERVAL</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">r</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">shape</span>
    <span class="n">transformed</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span> <span class="p">(</span><span class="n">w</span><span class="p">,</span><span class="n">h</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">uint8</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">PIXEL_SAMPLING_INTERVAL</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">PIXEL_SAMPLING_INTERVAL</span><span class="p">):</span>
            <span class="n">transformed</span><span class="p">[</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="n">get_ms</span><span class="p">(</span><span class="n">img</span><span class="p">[</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">])</span>

    <span class="n">transformed</span><span class="p">[:,:,</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">histeq</span><span class="p">(</span><span class="n">transformed</span><span class="p">[:,:,</span><span class="mi">1</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">transformed</span>
</pre></div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[99]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre><span class="k">def</span> <span class="nf">get_img_data</span><span class="p">(</span><span class="n">img</span><span class="p">):</span>
    <span class="n">subset_len</span> <span class="o">=</span> <span class="mi">5</span>
    <span class="c">#img_subset = transform_ms(img[:subset_len,:subset_len])</span>
    <span class="n">img_subset</span> <span class="o">=</span> <span class="n">col</span><span class="o">.</span><span class="n">rgb2lab</span><span class="p">(</span><span class="n">img</span><span class="p">[:</span><span class="n">subset_len</span><span class="p">,:</span><span class="n">subset_len</span><span class="p">])</span>
    <span class="c">#img_subset = img[:subset_len,:subset_len]</span>
    <span class="c">#print img_subset.shape</span>
    <span class="n">img_subset</span> <span class="o">=</span> <span class="n">img_subset</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="c">#print img_subset.shape</span>
    <span class="k">return</span> <span class="n">img_subset</span>
</pre></div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[100]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre><span class="n">metals_dir</span> <span class="o">=</span> <span class="s">&quot;metal_shoes_swatch&quot;</span>
<span class="n">non_metals_dir</span> <span class="o">=</span> <span class="s">&quot;non_metal_shoes_swatch&quot;</span>

<span class="n">metal_imgs</span> <span class="o">=</span> <span class="p">[</span><span class="n">get_img_data</span><span class="p">(</span><span class="n">pl</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">img</span><span class="p">))</span> <span class="k">for</span> <span class="n">img</span> <span class="ow">in</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">metals_dir</span> <span class="o">+</span> <span class="s">&quot;/*.jpg&quot;</span><span class="p">)]</span>
<span class="n">metal_targets</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;metal&quot;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">metal_imgs</span><span class="p">))]</span>
<span class="c">#print(metal_targets[0])</span>
<span class="c">#print len(metal_imgs)</span>
<span class="n">non_metal_imgs</span> <span class="o">=</span> <span class="p">[</span><span class="n">get_img_data</span><span class="p">(</span><span class="n">pl</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">img</span><span class="p">))</span> <span class="k">for</span> <span class="n">img</span> <span class="ow">in</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">non_metals_dir</span> <span class="o">+</span> <span class="s">&quot;/*.jpg&quot;</span><span class="p">)]</span>
<span class="n">non_metal_targets</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;non&quot;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">non_metal_imgs</span><span class="p">))]</span>
<span class="c">#print len(non_metal_imgs)</span>
<span class="c">#print metal_imgs[0].shape</span>

<span class="c">#metal_data = [get_data(img) for img in metal_imgs]</span>

<span class="n">train_num</span> <span class="o">=</span> <span class="mi">50</span>

<span class="n">train_data</span> <span class="o">=</span> <span class="n">metal_imgs</span><span class="p">[:</span><span class="n">train_num</span><span class="p">]</span>
<span class="n">test_data</span> <span class="o">=</span> <span class="n">metal_imgs</span><span class="p">[</span><span class="n">train_num</span><span class="p">:]</span>
<span class="n">train_data</span> <span class="o">=</span> <span class="n">train_data</span> <span class="o">+</span> <span class="n">non_metal_imgs</span><span class="p">[:</span><span class="n">train_num</span><span class="p">]</span>
<span class="n">test_data</span> <span class="o">=</span> <span class="n">test_data</span> <span class="o">+</span> <span class="n">non_metal_imgs</span><span class="p">[</span><span class="n">train_num</span><span class="p">:]</span>

<span class="n">train_targets</span> <span class="o">=</span> <span class="n">metal_targets</span><span class="p">[:</span><span class="n">train_num</span><span class="p">]</span>
<span class="n">test_targets</span> <span class="o">=</span> <span class="n">metal_targets</span><span class="p">[</span><span class="n">train_num</span><span class="p">:]</span>

<span class="n">train_targets</span> <span class="o">=</span> <span class="n">train_targets</span> <span class="o">+</span> <span class="n">non_metal_targets</span><span class="p">[:</span><span class="n">train_num</span><span class="p">]</span>
<span class="n">test_targets</span> <span class="o">=</span> <span class="n">test_targets</span> <span class="o">+</span> <span class="n">non_metal_targets</span><span class="p">[</span><span class="n">train_num</span><span class="p">:]</span>

<span class="k">print</span> <span class="n">train_targets</span>


<span class="n">digits</span> <span class="o">=</span> <span class="n">datasets</span><span class="o">.</span><span class="n">load_digits</span><span class="p">()</span>

<span class="c"># To apply an classifier on this data, we need to flatten the image, to</span>
<span class="c"># turn the data in a (samples, feature) matrix:</span>
<span class="c">#n_samples = len(digits.images)</span>
<span class="c">#print digits.images.shape</span>
<span class="c">#data = digits.images.reshape((n_samples, -1))</span>
<span class="c">#print(n_samples)</span>
<span class="c">#print data[0].shape</span>
</pre></div>

</div>
</div>

<div class="vbox output_wrapper">
<div class="output vbox">


<div class="hbox output_area"><div class="prompt"></div>
<div class="box-flex1 output_subarea output_stream output_stdout">
<pre>
[&apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;metal&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;, &apos;non&apos;]

</pre>
</div>
</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[101]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre><span class="n">classifier</span> <span class="o">=</span> <span class="n">svm</span><span class="o">.</span><span class="n">SVC</span><span class="p">(</span><span class="n">gamma</span><span class="o">=</span><span class="mf">0.001</span><span class="p">)</span>
<span class="c"># We learn the digits on the first half of the digits</span>
<span class="c">#classifier.fit(data[:n_samples / 2], digits.target[:n_samples / 2])</span>
<span class="n">classifier</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">train_data</span><span class="p">,</span> <span class="n">train_targets</span><span class="p">)</span>

<span class="c"># Now predict the value of the digit on the second half:</span>
<span class="n">expected</span> <span class="o">=</span> <span class="n">test_targets</span>
<span class="n">predicted</span> <span class="o">=</span> <span class="n">classifier</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">test_data</span><span class="p">)</span>
<span class="k">print</span> <span class="n">predicted</span>

<span class="k">print</span><span class="p">(</span><span class="s">&quot;Classification report for classifier </span><span class="si">%s</span><span class="s">:</span><span class="se">\n</span><span class="si">%s</span><span class="se">\n</span><span class="s">&quot;</span>
      <span class="o">%</span> <span class="p">(</span><span class="n">classifier</span><span class="p">,</span> <span class="n">metrics</span><span class="o">.</span><span class="n">classification_report</span><span class="p">(</span><span class="n">expected</span><span class="p">,</span> <span class="n">predicted</span><span class="p">)))</span>
<span class="k">print</span><span class="p">(</span><span class="s">&quot;Confusion matrix:</span><span class="se">\n</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">metrics</span><span class="o">.</span><span class="n">confusion_matrix</span><span class="p">(</span><span class="n">expected</span><span class="p">,</span> <span class="n">predicted</span><span class="p">))</span>
</pre></div>

</div>
</div>

<div class="vbox output_wrapper">
<div class="output vbox">


<div class="hbox output_area"><div class="prompt"></div>
<div class="box-flex1 output_subarea output_stream output_stdout">
<pre>
[&apos;metal&apos; &apos;metal&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;metal&apos; &apos;metal&apos;
 &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;metal&apos; &apos;metal&apos; &apos;metal&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos;
 &apos;metal&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;metal&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos;
 &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos; &apos;non&apos;]
Classification report for classifier SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0, degree=3,
  gamma=0.001, kernel=rbf, max_iter=-1, probability=False,
  random_state=None, shrinking=True, tol=0.001, verbose=False):
             precision    recall  f1-score   support

      metal       0.78      0.35      0.48        20
        non       0.58      0.90      0.71        20

avg / total       0.68      0.62      0.59        40


Confusion matrix:
[[ 7 13]
 [ 2 18]]

</pre>
</div>
</div>

</div>
</div>

</div>
<div class="cell border-box-sizing code_cell vbox">
<div class="input hbox">
<div class="prompt input_prompt">
In&nbsp;[]:
</div>
<div class="input_area box-flex1">
<div class="highlight"><pre>
</pre></div>

</div>
</div>

</div>
</body>
</html>

<!DOCTYPE html>
<meta charset="utf-8">
<!-- affinity group data, circle rotation, auto-resize svg image, chord function, configuration -->
<title>Open Chord Example</title>
<style>

#visual {
  font: 14px sans-serif;
}

.chord path {
  fill-opacity: .67;
  stroke: #000;
  stroke-width: .5px;
}

@media only screen and (min-device-width: 320px) and (max-device-width: 568px) {
  #visual {
    -webkit-user-select: none;
    font-size: 1.2em;
  }
}

@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
  #visual { 
	-webkit-user-select: none; 
  }
}
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
var visual = document.getElementById("visual");

// persons moving between Marin, Sonoma, Napa, SF, EB, SV and other regions
var matrix = [ 
  [ 198, 11, 3, 330, 32, 35, 59 ],
  [ 11, 89, 8, 33, 15, 0, 28 ],
  [ 0, 1, 51, 29, 17, 0, 26 ],
  [ 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0 ]
];

var array = [ "Marin", "Sonoma", "Napa", "San Francisco", "East Bay", "Silicon Valley", "Remote Locations" ];

var rotation = -0.7;

var chord_options = {
    "gnames": array,
    "rotation": rotation,
    "colors": ["#034e7b","#feb24c","#b10026","#238443","#fdbb84","#ffffb2","#fed976"]
};

    function Chord(container, options, matrix) {

        // initialize the chord configuration variables
        var config = {
            width: 640,
            height: 560,
            rotation: 0,
            textgap: 26,
            colors: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17", "#666666"]
        };
        
        // add options to the chord configuration object
        if (options) {
            extend(config, options);
        }
        
        // set chord visualization variables from the configuration object
        var offset = Math.PI * config.rotation,
            width = config.width,
            height = config.height,
            textgap = config.textgap
            colors = config.colors;
        
        // set viewBox and aspect ratio to enable a resize of the visual dimensions 
        var viewBoxDimensions = "0 0 " + width + " " + height,
            aspect = width / height;
        
        if (config.gnames) {
            gnames = config.gnames;
        } else {
            // make a list of names
            gnames = [];
            for (var i=97; i<matrix.length; i++) {
                gnames.push(String.fromCharCode(i));
            }
        }

        // start the d3 magic
        var chord = d3.layout.chord()
            .padding(.05)
            .sortSubgroups(d3.descending)
            .matrix(matrix);

        var innerRadius = Math.min(width, height) * .31,
            outerRadius = innerRadius * 1.1;

        var fill = d3.scale.ordinal()
            .domain(d3.range(matrix.length-1))
            .range(colors);
    
        var svg = d3.select("body").append("svg")
            .attr("id", "visual")
            .attr("viewBox", viewBoxDimensions)
            .attr("preserveAspectRatio", "xMinYMid")    // add viewBox and preserveAspectRatio
            .attr("width", width)
            .attr("height", height)
          .append("g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

        var g = svg.selectAll("g.group")
            .data(chord.groups)
          .enter().append("svg:g")
            .attr("class", "group");

        g.append("svg:path")
            .style("fill", function(d) { return fill(d.index); })
            .style("stroke", function(d) { return fill(d.index); })
            .attr("id", function(d, i) { return "group" + d.index; })
            .attr("d", d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(startAngle).endAngle(endAngle))
            .on("mouseover", fade(.1))
            .on("mouseout", fade(1));

        g.append("svg:text")
            .each(function(d) {d.angle = ((d.startAngle + d.endAngle) / 2) + offset; })
            .attr("dy", ".35em")
            .attr("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
            .attr("transform", function(d) {
                return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
                    + "translate(" + (outerRadius + textgap) + ")"
                    + (d.angle > Math.PI ? "rotate(180)" : "");
              })
            .text(function(d) { return gnames[d.index]; });

        svg.append("g")
            .attr("class", "chord")
          .selectAll("path")
            .data(chord.chords)
          .enter().append("path")
            .attr("d", d3.svg.chord().radius(innerRadius).startAngle(startAngle).endAngle(endAngle))
            .style("fill", function(d) { return fill(d.source.index); })
            .style("opacity", 1)
          .append("svg:title")
            .text(function(d) { 
                return  d.source.value + " people from " + gnames[d.source.index] + " commute to " + gnames[d.target.index]; 
            });
    
        // helper functions start here
        
        function startAngle(d) {
            return d.startAngle + offset;
        }

        function endAngle(d) {
            return d.endAngle + offset;
        }
        
        function extend(a, b) {
            for( var i in b ) {
                a[ i ] = b[ i ];
            }
        }

        // Returns an event handler for fading a given chord group.
        function fade(opacity) {
            return function(g, i) {
                svg.selectAll(".chord path")
                    .filter(function(d) { return d.source.index != i && d.target.index != i; })
                    .transition()
                    .style("opacity", opacity);
            };
        }
        
        
        window.onresize = function() {
            var targetWidth = (window.innerWidth < width)? window.innerWidth : width;
            
            var svg = d3.select("#visual")
                .attr("width", targetWidth)
                .attr("height", targetWidth / aspect);
        }

        
    }

window.onload = function() {
    Chord(visual, chord_options, matrix);
}

d3.select(self.frameElement).style("height", "600px");

</script>
</body>
</html><!DOCTYPE html>
<html lang="en"></html>
<head>
  <meta charset="utf-5">
  <title>Nina Stawski</title>
  <meta name="description">
  <meta name="author" content="Nina Stawski">
  <link rel="shortcut icon" href="favicon.ico">
  <link rel="stylesheet" href="ns.css">
  <script src="ns.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.1/jquery.min.js"></script>
  <style>
    #content-right {
        width: 500px;
    }
    
    
  </style>
  <script>
    $(document).ready(function () {
        createProjectPreviews('content-left');
        $('#portfolio').addClass('current').attr('href', '');
        $(document).on('click', function() {
            $('.project-icon').children().css({'opacity' : 1}).children().css({'border-color' : '#ccc'});svg.selectAll('path, text').style({'opacity' : 1, 'font-weight' : 'normal'});
            $('.project-icon').hover(function() {
                var id = $(this).attr('id');
                $(".btn path").eq(findProjectID(id)).d3Click();
                //dimAll();
                $('#' + id + ' img').css({'border' : '1px solid grey'});
                $('#' + id + ' a').css({'opacity' : '1'});
        }, function() {
            $('.project-icon').children().css({'opacity' : 1}).children().css({'border-color' : '#ccc'});svg.selectAll('path, text').style({'opacity' : 1, 'font-weight' : 'normal'}, 1000);
        });
        
        });
        $(".project-icon, svg").click(function(e) {
                e.stopPropagation();
        });
        $('.project-icon').hover(function() {
                var id = $(this).attr('id');
                $(".btn path").eq(findProjectID(id)).d3Click();
                //dimAll();
                $('#' + id + ' img').css({'border' : '1px solid grey'});
                $('#' + id + ' a').css({'opacity' : '1'});
        }, function() {
            $('.project-icon').children().css({'opacity' : 1}).children().css({'border-color' : '#ccc'});svg.selectAll('path, text').style({'opacity' : 1, 'font-weight' : 'normal'}, 1000);
        });
        });
        
    jQuery.fn.d3Click = function () {
          this.each(function (i, e) {
            var evt = document.createEvent("MouseEvents");
            evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
            e.dispatchEvent(evt);
          });
    };
    
  </script>
</head>
<body>
  <div id="main-content">
    <div id="content-left" style="max-width: 600px; padding-top: 10px; float: left;"></div>
    <div id="content-circle-right">
      <script>
        var matrix = returnMatrix();
        
      </script>
      <script>
        var chord = d3.layout.chord()
            .padding(0.1)
            .matrix(matrix);
        var width = 326,
            height = 360,
            innerRadius = Math.min(width, height) * .21,
            outerRadius = innerRadius * 1.4;
        var fill = d3.scale.ordinal()
            .domain(d3.range(4))
            .range(["#5958A1", "#5958A1", "#996699", "#996699", "#996699", "#813742", "#813742", "#813742", "#813742", "#813742", "#813742", "#813742", "#813742", "#813742", "#813742", "#813742", "#5958A1", "#996699", "#813742"]);
        var svg = d3.select("#content-circle-right").append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(" + width / 2.18 + "," + height / 2.01 + ")");
        svg.append("g")
                .attr("class", "btn")
                .selectAll("path")
        .data(chord.groups)
            .enter().append("path")
            .style("fill", function(d) { return fill(d.index); })
            .style("stroke", function(d) { return fill(d.index); })
            .attr("d", d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius))
                .on("click", selectElement())
        var ticks = svg.append("g").selectAll("g")
            .data(chord.groups)
            .enter().append("g").selectAll("g")
            .data(groupTicks)
            .enter().append("g")
            .attr("transform", function(d) {
              return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
                  + "translate(" + outerRadius + ",0)";
            });
        // ticks.append("line")
        //     .attr("x1", 1)
        //     .attr("y1", 0)
        //     .attr("x2", 5)
        //     .attr("y2", 0)
        //     .style("stroke", "#999");
        ticks.append("text")
            .attr("x", 8)
            .attr("dy", ".3em")
            .attr("transform", function(d) { return d.angle > Math.PI ? "rotate(180)translate(-16)" : null; })
            .style("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
            .text(function(d) { return d.label; });
        svg.append("g")
            .attr("class", "chord")
        .selectAll("path")
            .data(chord.chords)
        .enter().append("path")
            .attr("d", d3.svg.chord().radius(innerRadius))
            .style("fill", function(d) { return fill(d.target.index); })
            .style("opacity", 1);
        // Returns an array of tick angles and labels, given a group.
        function groupTicks(d) {
          var k = (d.endAngle - d.startAngle) / d.value;
          var labels = ['Illustrator', 'Photoshop', 'Wireframing', 'Prototyping', 'OmniGraffle', 'Python', 'Javascript', 'jQuery', 'jQueryUI', 'jQueryMobile', 'HTML5', 'CSS3', 'Bootstrap', 'GIT', 'jsPlumb', 'PHP', 'Design', 'UX/UI', 'Programming'
        ];
          return d3.range(0, d.value, 1000).map(function(v, i) {
            return {
              angle: k*0.5 + d.startAngle,
              label: labels[d.index]
            };
          });
        }
        // Returns an event handler for fading a given chord group.
        function fade(opacity) {
          return function(g, i) {
            svg.selectAll(".chord path")
              .filter(function(d) { return d.source.index != i && d.target.index != i; })
              .transition()
                .duration(100)
              .style("opacity", opacity);
          };
        }
        function selectElement() {
            return function(g, i) {
            var indexes = [];
            makeSelection(svg.selectAll(".chord path"), indexes);
            selectOther($("g text"), indexes);
            selectOther($(".btn path"), indexes);
            
            return false
            
            function makeSelection(selection, indexes) {
                if ($('.project-icon:hover').length == 0) { highlightElements(i); $('.project-icon').unbind('mouseenter mouseleave'); };
                
                indexes.push(i);
        selection
            .filter(function(d) { return d.source.index != i && d.target.index != i; })
            .transition()
            .duration(100)
            .style("opacity", 0.1);
                selection
                .filter(function(d) {
                    if (d.target.index == i) {
                        indexes.push(d.source.index)
                } else if (d.source.index == i && indexes.indexOf(d.target.index) == -1) {
                    indexes.push(d.target.index)
                }; return d.source.index == i || d.target.index == i; })
            .transition()
            .duration(100)
            .style("opacity", 1);
            }
            function selectOther(selection, indexes) {
                selection
                .each(function(d){
                    if (indexes.indexOf(d) == -1) {
                        $(this)
                    .css({"opacity" : 0.4, "font-weight" : "normal"});
                    }
                    else {
                        $(this)
                    .css({"opacity" : 1, "font-weight" : "bold"});
                    }
                })
            }
        }
        }
      </script>
    </div>
    <div id="content-bottom"></div>
  </div>
  <div id="footer"><img src="http://ninastawski.com/ns.png"></div>
</body><!DOCTYPE html>
<meta charset="utf-8">
<link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
<style>

body {
  font: 10px 'Open Sans';
  margin: 0;
}

.line {
  fill: none;
  stroke: #00aeef;
  stroke-width: 1.5px;
}

.area {
  fill: #e1f4fd;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 8, right: 10, bottom: 2, left: 10},
    width = 960 - margin.left - margin.right,
    height = 69 - margin.top - margin.bottom;

var parseDate = d3.time.format("%b %Y").parse;
//var parseDate = d3.time.format("%Y-%d").parse;

var x = d3.time.scale()
    .range([0, width]);

d3.csv("post2015.csv", type, function(error, data) {
  var groups = d3.nest()
      .key(function(d) { return d.group; })
      .entries(data);

  x.domain([
    d3.min(groups, function(group) { return group.values[0].date; }),
    d3.max(groups, function(group) { return group.values[group.values.length - 1].date; })
  ]);

  var svg = d3.select("body").selectAll("svg")
      .data(groups)
    .enter().append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
      .each(function(group) {
        group.y = d3.scale.linear()
            .domain([0, d3.max(group.values, function(d) { return d.tweets; })])
            .range([height, 0]);
      });

  svg.append("path")
      .attr("class", "area")
      .attr("d", function(group) {
        return d3.svg.area()
            .x(function(d) { return x(d.date); })
            .y1(function(d) { return group.y(d.tweets); })
            .y0(height)
            (group.values);
      });

  svg.append("path")
      .attr("class", "line")
      .attr("d", function(group) {
        return d3.svg.line()
            .x(function(d) { return x(d.date); })
            .y(function(d) { return group.y(d.tweets); })
            (group.values);
      });

  svg.append("text")
      .attr("x", width - 6)
      .attr("y", height - 6)
      .style("text-anchor", "end")
      .text(function(group) { return group.key; });
});

function type(d) {
  d.tweets = +d.tweets;
  d.date = parseDate(d.date);
  return d;
}

</script><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  margin: 0;
}

path {
  fill: none;
  stroke: red;
  stroke-linejoin: round;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script src="d3.geo.tile.min.js"></script>
<script>

var width = Math.max(960, window.innerWidth),
    height = Math.max(500, window.innerHeight);

var tile = d3.geo.tile()
    .size([width, height]);

var projection = d3.geo.mercator()
    .scale((1 << 12) / 2 / Math.PI)
    .translate([width / 2, height / 2]);

var center = projection([-100, 40]);

var path = d3.geo.path()
    .projection(projection);

var zoom = d3.behavior.zoom()
    .scale(projection.scale() * 2 * Math.PI)
    .scaleExtent([1 << 11, 1 << 14])
    .translate([width - center[0], height - center[1]])
    .on("zoom", zoomed);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var raster = svg.append("g");

var vector = svg.append("path");

d3.csv("us-state-capitals.csv", type, function(error, capitals) {
  if (error) throw error;

  svg.call(zoom);
  vector.datum({type: "FeatureCollection", features: capitals});
  zoomed();
});

function type(d) {
  return {
    type: "Feature",
    properties: {
      name: d.description,
      state: d.name
    },
    geometry: {
      type: "Point",
      coordinates: [+d.longitude, +d.latitude]
    }
  };
}

function zoomed() {
  var tiles = tile
      .scale(zoom.scale())
      .translate(zoom.translate())
      ();

  projection
      .scale(zoom.scale() / 2 / Math.PI)
      .translate(zoom.translate());

  vector
      .attr("d", path);

  var image = raster
      .attr("transform", "scale(" + tiles.scale + ")translate(" + tiles.translate + ")")
    .selectAll("image")
      .data(tiles, function(d) { return d; });

  image.exit()
      .remove();

  image.enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c"][Math.random() * 3 | 0] + ".tile.openstreetmap.org/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", 1)
      .attr("height", 1)
      .attr("x", function(d) { return d[0]; })
      .attr("y", function(d) { return d[1]; });
}

</script>
<!DOCTYPE html>
<html>
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body ng-app="myApp">
  <remote-data-donut-chart></remote-data-donut-chart>
  <script>
var myApp = angular.module('myApp', []);
myApp.directive('remoteDataDonutChart', function(){
  function link(scope, el, attr){
    var color = d3.scale.category10();
    var width = 200;
    var height = 200;
    var data = [];
    var min = Math.min(width, height);
    var svg = d3.select(el[0]).append('svg');
    var pie = d3.layout.pie().sort(null);
    var arc = d3.svg.arc()
      .outerRadius(min / 2 * 0.9)
      .innerRadius(min / 2 * 0.5);

    svg.attr({width: width, height: height});

    // center the donut chart
    var g = svg.append('g')
      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');
    
    // add the <path>s for each arc slice
    var arcs = g.selectAll('path').data(pie(data))
      .enter().append('path');

    d3.json('donut-data.json', function(err, data){
      if(err){ throw err; }
      arcs = arcs.data(pie(data));
      arcs.exit().remove();
      arcs.enter().append('path')
        .style('stroke', 'white')
        .attr('fill', function(d, i){ return color(i) });
      // update all the arcs (not just the ones that might have been added)
      arcs.attr('d', arc);
    });
  }
  return {
    link: link,
    restrict: 'E',
    scope: {}
  };
});
  </script>
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<title>Examples</title>
<meta name="description" content="">
<meta name="keywords" content="">
<link href="" rel="stylesheet">
<style type="text/css">

</style>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

</head>
<body>
	<div id="chart"></div>
</body>
<script type="text/javascript">
	var w = 500,
    h = 500,
    fill = d3.scale.category20();

var vis = d3.select("#chart")
  .append("svg")
    .attr("width", w)
    .attr("height", h)
  .append('svg:g')
    .call(d3.behavior.zoom().on("zoom", redraw))
  .append('g');

vis.append('svg:rect')
    .attr('width', w)
    .attr('height', h)
    .attr('fill', 'white')
    .attr("pointer-events", "all");

var drag = d3.behavior.drag()
    .origin(function(d) { return d; })
    .on("dragstart", dragstarted)
    .on("drag", dragged)
    .on("dragend", dragended);

var force = d3.layout.force()
    .charge(-120)
    .linkDistance(30)
    .size([w, h]);

function redraw() {
  vis.attr("transform",
      "translate(" + d3.event.translate + ")"
      + " scale(" + d3.event.scale + ")");
}

var draw = function(json) {

  force.nodes(json.nodes)
    .links(json.links)
    .start();

  var link = vis.selectAll("line.link")
      .data(json.links)
    .enter().append("svg:line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.value); })
      .attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });

  var node = vis.selectAll("circle.node")
      .data(json.nodes)
    .enter().append("svg:circle")
      .attr("class", "node")
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; })
      .attr("r", 5)
      .style("fill", function(d) { return fill(d.group); })
      .call(drag);

  node.append("svg:title")
      .text(function(d) { return d.name; });

  vis.style("opacity", 1e-6)
    .transition()
      .duration(1000)
      .style("opacity", 1);

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("cx", function(d) { return d.x; })
        .attr("cy", function(d) { return d.y; });
  });
};

function dragstarted(d) {
  d3.event.sourceEvent.stopPropagation();
  //d3.select(this).classed("dragging", true);
}

function dragged(d) {
  d3.select(this).attr("cx", d.x = d3.event.x).attr("cy", d.y = d3.event.y);
}

function dragended(d) {
  force.resume();
  //d3.select(this).classed("dragging", false);
}
        
var data = {"nodes":[{"name":"Myriel","group":1},{"name":"Napoleon","group":1},{"name":"Mlle.Baptistine","group":1},{"name":"Mme.Magloire","group":1},{"name":"CountessdeLo","group":1},{"name":"Geborand","group":1},{"name":"Champtercier","group":1},{"name":"Cravatte","group":1},{"name":"Count","group":1},{"name":"OldMan","group":1},{"name":"Labarre","group":2},{"name":"Valjean","group":2},{"name":"Marguerite","group":3},{"name":"Mme.deR","group":2},{"name":"Isabeau","group":2},{"name":"Gervais","group":2},{"name":"Tholomyes","group":3},{"name":"Listolier","group":3},{"name":"Fameuil","group":3},{"name":"Blacheville","group":3},{"name":"Favourite","group":3},{"name":"Dahlia","group":3},{"name":"Zephine","group":3},{"name":"Fantine","group":3},{"name":"Mme.Thenardier","group":4},{"name":"Thenardier","group":4},{"name":"Cosette","group":5},{"name":"Javert","group":4},{"name":"Fauchelevent","group":0},{"name":"Bamatabois","group":2},{"name":"Perpetue","group":3},{"name":"Simplice","group":2},{"name":"Scaufflaire","group":2},{"name":"Woman1","group":2},{"name":"Judge","group":2},{"name":"Champmathieu","group":2},{"name":"Brevet","group":2},{"name":"Chenildieu","group":2},{"name":"Cochepaille","group":2},{"name":"Pontmercy","group":4},{"name":"Boulatruelle","group":6},{"name":"Eponine","group":4},{"name":"Anzelma","group":4},{"name":"Woman2","group":5},{"name":"MotherInnocent","group":0},{"name":"Gribier","group":0},{"name":"Jondrette","group":7},{"name":"Mme.Burgon","group":7},{"name":"Gavroche","group":8},{"name":"Gillenormand","group":5},{"name":"Magnon","group":5},{"name":"Mlle.Gillenormand","group":5},{"name":"Mme.Pontmercy","group":5},{"name":"Mlle.Vaubois","group":5},{"name":"Lt.Gillenormand","group":5},{"name":"Marius","group":8},{"name":"BaronessT","group":5},{"name":"Mabeuf","group":8},{"name":"Enjolras","group":8},{"name":"Combeferre","group":8},{"name":"Prouvaire","group":8},{"name":"Feuilly","group":8},{"name":"Courfeyrac","group":8},{"name":"Bahorel","group":8},{"name":"Bossuet","group":8},{"name":"Joly","group":8},{"name":"Grantaire","group":8},{"name":"MotherPlutarch","group":9},{"name":"Gueulemer","group":4},{"name":"Babet","group":4},{"name":"Claquesous","group":4},{"name":"Montparnasse","group":4},{"name":"Toussaint","group":5},{"name":"Child1","group":10},{"name":"Child2","group":10},{"name":"Brujon","group":4},{"name":"Mme.Hucheloup","group":8}],"links":[{"source":1,"target":0,"value":1},{"source":2,"target":0,"value":8},{"source":3,"target":0,"value":10},{"source":3,"target":2,"value":6},{"source":4,"target":0,"value":1},{"source":5,"target":0,"value":1},{"source":6,"target":0,"value":1},{"source":7,"target":0,"value":1},{"source":8,"target":0,"value":2},{"source":9,"target":0,"value":1},{"source":11,"target":10,"value":1},{"source":11,"target":3,"value":3},{"source":11,"target":2,"value":3},{"source":11,"target":0,"value":5},{"source":12,"target":11,"value":1},{"source":13,"target":11,"value":1},{"source":14,"target":11,"value":1},{"source":15,"target":11,"value":1},{"source":17,"target":16,"value":4},{"source":18,"target":16,"value":4},{"source":18,"target":17,"value":4},{"source":19,"target":16,"value":4},{"source":19,"target":17,"value":4},{"source":19,"target":18,"value":4},{"source":20,"target":16,"value":3},{"source":20,"target":17,"value":3},{"source":20,"target":18,"value":3},{"source":20,"target":19,"value":4},{"source":21,"target":16,"value":3},{"source":21,"target":17,"value":3},{"source":21,"target":18,"value":3},{"source":21,"target":19,"value":3},{"source":21,"target":20,"value":5},{"source":22,"target":16,"value":3},{"source":22,"target":17,"value":3},{"source":22,"target":18,"value":3},{"source":22,"target":19,"value":3},{"source":22,"target":20,"value":4},{"source":22,"target":21,"value":4},{"source":23,"target":16,"value":3},{"source":23,"target":17,"value":3},{"source":23,"target":18,"value":3},{"source":23,"target":19,"value":3},{"source":23,"target":20,"value":4},{"source":23,"target":21,"value":4},{"source":23,"target":22,"value":4},{"source":23,"target":12,"value":2},{"source":23,"target":11,"value":9},{"source":24,"target":23,"value":2},{"source":24,"target":11,"value":7},{"source":25,"target":24,"value":13},{"source":25,"target":23,"value":1},{"source":25,"target":11,"value":12},{"source":26,"target":24,"value":4},{"source":26,"target":11,"value":31},{"source":26,"target":16,"value":1},{"source":26,"target":25,"value":1},{"source":27,"target":11,"value":17},{"source":27,"target":23,"value":5},{"source":27,"target":25,"value":5},{"source":27,"target":24,"value":1},{"source":27,"target":26,"value":1},{"source":28,"target":11,"value":8},{"source":28,"target":27,"value":1},{"source":29,"target":23,"value":1},{"source":29,"target":27,"value":1},{"source":29,"target":11,"value":2},{"source":30,"target":23,"value":1},{"source":31,"target":30,"value":2},{"source":31,"target":11,"value":3},{"source":31,"target":23,"value":2},{"source":31,"target":27,"value":1},{"source":32,"target":11,"value":1},{"source":33,"target":11,"value":2},{"source":33,"target":27,"value":1},{"source":34,"target":11,"value":3},{"source":34,"target":29,"value":2},{"source":35,"target":11,"value":3},{"source":35,"target":34,"value":3},{"source":35,"target":29,"value":2},{"source":36,"target":34,"value":2},{"source":36,"target":35,"value":2},{"source":36,"target":11,"value":2},{"source":36,"target":29,"value":1},{"source":37,"target":34,"value":2},{"source":37,"target":35,"value":2},{"source":37,"target":36,"value":2},{"source":37,"target":11,"value":2},{"source":37,"target":29,"value":1},{"source":38,"target":34,"value":2},{"source":38,"target":35,"value":2},{"source":38,"target":36,"value":2},{"source":38,"target":37,"value":2},{"source":38,"target":11,"value":2},{"source":38,"target":29,"value":1},{"source":39,"target":25,"value":1},{"source":40,"target":25,"value":1},{"source":41,"target":24,"value":2},{"source":41,"target":25,"value":3},{"source":42,"target":41,"value":2},{"source":42,"target":25,"value":2},{"source":42,"target":24,"value":1},{"source":43,"target":11,"value":3},{"source":43,"target":26,"value":1},{"source":43,"target":27,"value":1},{"source":44,"target":28,"value":3},{"source":44,"target":11,"value":1},{"source":45,"target":28,"value":2},{"source":47,"target":46,"value":1},{"source":48,"target":47,"value":2},{"source":48,"target":25,"value":1},{"source":48,"target":27,"value":1},{"source":48,"target":11,"value":1},{"source":49,"target":26,"value":3},{"source":49,"target":11,"value":2},{"source":50,"target":49,"value":1},{"source":50,"target":24,"value":1},{"source":51,"target":49,"value":9},{"source":51,"target":26,"value":2},{"source":51,"target":11,"value":2},{"source":52,"target":51,"value":1},{"source":52,"target":39,"value":1},{"source":53,"target":51,"value":1},{"source":54,"target":51,"value":2},{"source":54,"target":49,"value":1},{"source":54,"target":26,"value":1},{"source":55,"target":51,"value":6},{"source":55,"target":49,"value":12},{"source":55,"target":39,"value":1},{"source":55,"target":54,"value":1},{"source":55,"target":26,"value":21},{"source":55,"target":11,"value":19},{"source":55,"target":16,"value":1},{"source":55,"target":25,"value":2},{"source":55,"target":41,"value":5},{"source":55,"target":48,"value":4},{"source":56,"target":49,"value":1},{"source":56,"target":55,"value":1},{"source":57,"target":55,"value":1},{"source":57,"target":41,"value":1},{"source":57,"target":48,"value":1},{"source":58,"target":55,"value":7},{"source":58,"target":48,"value":7},{"source":58,"target":27,"value":6},{"source":58,"target":57,"value":1},{"source":58,"target":11,"value":4},{"source":59,"target":58,"value":15},{"source":59,"target":55,"value":5},{"source":59,"target":48,"value":6},{"source":59,"target":57,"value":2},{"source":60,"target":48,"value":1},{"source":60,"target":58,"value":4},{"source":60,"target":59,"value":2},{"source":61,"target":48,"value":2},{"source":61,"target":58,"value":6},{"source":61,"target":60,"value":2},{"source":61,"target":59,"value":5},{"source":61,"target":57,"value":1},{"source":61,"target":55,"value":1},{"source":62,"target":55,"value":9},{"source":62,"target":58,"value":17},{"source":62,"target":59,"value":13},{"source":62,"target":48,"value":7},{"source":62,"target":57,"value":2},{"source":62,"target":41,"value":1},{"source":62,"target":61,"value":6},{"source":62,"target":60,"value":3},{"source":63,"target":59,"value":5},{"source":63,"target":48,"value":5},{"source":63,"target":62,"value":6},{"source":63,"target":57,"value":2},{"source":63,"target":58,"value":4},{"source":63,"target":61,"value":3},{"source":63,"target":60,"value":2},{"source":63,"target":55,"value":1},{"source":64,"target":55,"value":5},{"source":64,"target":62,"value":12},{"source":64,"target":48,"value":5},{"source":64,"target":63,"value":4},{"source":64,"target":58,"value":10},{"source":64,"target":61,"value":6},{"source":64,"target":60,"value":2},{"source":64,"target":59,"value":9},{"source":64,"target":57,"value":1},{"source":64,"target":11,"value":1},{"source":65,"target":63,"value":5},{"source":65,"target":64,"value":7},{"source":65,"target":48,"value":3},{"source":65,"target":62,"value":5},{"source":65,"target":58,"value":5},{"source":65,"target":61,"value":5},{"source":65,"target":60,"value":2},{"source":65,"target":59,"value":5},{"source":65,"target":57,"value":1},{"source":65,"target":55,"value":2},{"source":66,"target":64,"value":3},{"source":66,"target":58,"value":3},{"source":66,"target":59,"value":1},{"source":66,"target":62,"value":2},{"source":66,"target":65,"value":2},{"source":66,"target":48,"value":1},{"source":66,"target":63,"value":1},{"source":66,"target":61,"value":1},{"source":66,"target":60,"value":1},{"source":67,"target":57,"value":3},{"source":68,"target":25,"value":5},{"source":68,"target":11,"value":1},{"source":68,"target":24,"value":1},{"source":68,"target":27,"value":1},{"source":68,"target":48,"value":1},{"source":68,"target":41,"value":1},{"source":69,"target":25,"value":6},{"source":69,"target":68,"value":6},{"source":69,"target":11,"value":1},{"source":69,"target":24,"value":1},{"source":69,"target":27,"value":2},{"source":69,"target":48,"value":1},{"source":69,"target":41,"value":1},{"source":70,"target":25,"value":4},{"source":70,"target":69,"value":4},{"source":70,"target":68,"value":4},{"source":70,"target":11,"value":1},{"source":70,"target":24,"value":1},{"source":70,"target":27,"value":1},{"source":70,"target":41,"value":1},{"source":70,"target":58,"value":1},{"source":71,"target":27,"value":1},{"source":71,"target":69,"value":2},{"source":71,"target":68,"value":2},{"source":71,"target":70,"value":2},{"source":71,"target":11,"value":1},{"source":71,"target":48,"value":1},{"source":71,"target":41,"value":1},{"source":71,"target":25,"value":1},{"source":72,"target":26,"value":2},{"source":72,"target":27,"value":1},{"source":72,"target":11,"value":1},{"source":73,"target":48,"value":2},{"source":74,"target":48,"value":2},{"source":74,"target":73,"value":3},{"source":75,"target":69,"value":3},{"source":75,"target":68,"value":3},{"source":75,"target":25,"value":3},{"source":75,"target":48,"value":1},{"source":75,"target":41,"value":1},{"source":75,"target":70,"value":1},{"source":75,"target":71,"value":1},{"source":76,"target":64,"value":1},{"source":76,"target":65,"value":1},{"source":76,"target":66,"value":1},{"source":76,"target":63,"value":1},{"source":76,"target":62,"value":1},{"source":76,"target":48,"value":1},{"source":76,"target":58,"value":1}]}
        
draw(data);
</script>
</html><!DOCTYPE html>
<html>
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body ng-app="myApp" ng-controller="MainCtrl">
  <donut-chart data="data"></donut-chart>
  <script>
var myApp = angular.module('myApp', []);

myApp.controller('MainCtrl', function($scope){
  d3.json('donut-data.json', function(err, data){
    if(err){ throw err; }
    $scope.data = data;
    $scope.$apply();
  });
});

myApp.directive('donutChart', function(){
  function link(scope, el, attr){
    var color = d3.scale.category10();
    var width = 200;
    var height = 200;
    var min = Math.min(width, height);
    var svg = d3.select(el[0]).append('svg');
    var pie = d3.layout.pie().sort(null);
    var arc = d3.svg.arc()
      .outerRadius(min / 2 * 0.9)
      .innerRadius(min / 2 * 0.5);

    svg.attr({width: width, height: height});

    // center the donut chart
    var g = svg.append('g')
      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');
    
    // add the <path>s for each arc slice
    var arcs = g.selectAll('path');

    scope.$watch('data', function(data){
      if(!data){ return; }
      arcs = arcs.data(pie(data));
      arcs.exit().remove();
      arcs.enter().append('path')
        .style('stroke', 'white')
        .attr('fill', function(d, i){ return color(i) });
      // update all the arcs (not just the ones that might have been added)
      arcs.attr('d', arc);
    }, true);
  }
  return {
    link: link,
    restrict: 'E',
    scope: { data: '=' }
  };
});
  </script>
</body>
</html><!DOCTYPE html>
  <head>
    <meta charset="utf-8">
    <link rel="stylesheet" type="text/css" href="http://littlesparkvt.com/flatstrap/assets/css/bootstrap.css"/>
    <link type="text/css" rel="stylesheet" href="style.css"/>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.6/angular.min.js"></script>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="src.js"></script>
  </head>
  <body>
    <div ng-app="main">
      <div ng-controller="MainController">
        <div class="row">
          <div class="span2">
            <button class="btn btn-success" ng-click="update()">update</button>
          </div>
          <div class="span2" id="sum">
            TOTAL: {{sum}} 
          </div>
        </div>
        <chart-bar data="data" summed="summed(args)"></chart-bar>
      </div>
    </div>
    <script type="text/javascript">
var main = angular.module('main', [])
                    .config(['$routeProvider', function($routeProvider) {
                      $routeProvider.when('/', { controller: MainController });
                    }]);

// Controllers
var MainController = ['$scope', function($scope) {
  $scope.randomize = function(n, y) {
    if (arguments.length < 2) y = 400;
    if (!arguments.length) n = 20;
    var i = 0;
    return d3.range(~~(Math.random()*n) + 1).map(function(d, i) { return {
              x: ++i,
              y: ~~(Math.random()*y)
            }});
  };
  $scope.update = function() { 
    $scope.data = $scope.randomize(); 
    $scope.sum = 0;
  };          
  $scope.summed = function() {
    // there has to be a better way to pass variables,
    // still learning angular
    var extent = arguments[0][0], 
        x = arguments[0][1],
        l = $scope.data.length;
    $scope.sum = 0;
    for (var i = 0; i < l; i++) {
      var d = $scope.data[i];
      if (extent[0] <= x(d.x) && x(d.x) + x.rangeBand() <= extent[1]) {
        $scope.sum += d.y;
      }
    }
    $scope.$apply();
  };
  // Models
  $scope.sum = 0;
  $scope.data = $scope.randomize(); 
}];

// Views
main.directive('chartBar', function() {
  var bar = charts.bar();    
  return {
    restrict: 'E',
    replace: true,
    template: '<div class="chart"></div>',
    scope: {
      data: '=',
      // barebone for now
      summed: '&'
    },
    link: function($scope, $element, $attr) {
      var div = d3.select($element[0]);
      bar.on('brush', function() {
        var extent = d3.event.target.extent(),
            x = bar.x();
        $scope.summed({args:[extent, x]});
      });
      bar.on('brushend', function() {
        var extent = d3.event.target.extent(),
            x = bar.x();
        $scope.summed({args:[extent, x]});
      });
      $scope.$watch('data', function(newVal, oldVal) {
        if(newVal) div.datum(newVal).call(bar);
      });
    }
  }
});
    </script>
  </body>
</html><html>
<head>
  <title>GeoCharts with Keen IO</title>
  <script src="https://dc8na2hxrj29i.cloudfront.net/code/keen-2.1.2-min.js"></script>
  <script>
    
    Keen.configure({
      projectId: "your_project_id",
      readKey: "your_read_key"
    });
    
    Keen.onChartsReady(function() {
      
      var data = [["Country", "Count"]], options = {}, datatable, chart;
      
      var countries = new Keen.Metric("pageview", {
        analysisType: "count",
        groupBy: "keen_ip_geo_info.country",
        timeframe: "this_week"
      });
      
      countries.getResponse(function(response){
        for (var i = 0; i < response.result.length; i++) {
          data.push([response.result[i]["keen_ip_geo_info.country"], response.result[i]["result"]]);
        }
        options = {};
        datatable = google.visualization.arrayToDataTable(data);
        chart = new google.visualization.GeoChart(document.getElementById("map"));
        
        chart.draw(datatable, options);
      });
      
    });
    
  </script>
</head>
<body>
  <div id="map"></div>
</body>
</html><html>
<head>
  <title>D3 in Action Chapter 8 - Example 1</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
</head>
<style>
tr {
  border: 1px gray solid;
}

td {
  border: 2px black solid;
}

div.table {
  position:relative;
}
div.data {
  position: absolute;
  width: 90px;
  padding: 0 5px;
}

div.head {
  position: absolute;
}

div.datarow {
  position: absolute;
  width: 100%;
  border-top: 2px black solid;
  background: white;
  height: 35px;
  overflow: hidden;
}

div.gallery {
  position: relative;
}

img.infinite {
  position: absolute;
  background: rgba(255,255,255,0);
  border-width: 1px;
  border-style: solid;
  border-color: rgba(0,0,0,0);
}

</style>
<body>
<div id="traditional"> 
</div>
</body>
  <footer>
    
<script>
d3.json("tweets.json",function(error,data) { createSpreadsheet(data.tweets)});
      
      function createSpreadsheet(incData) {
        
        var keyValues = d3.keys(incData[0])
        
        d3.select("#traditional")
        .append("table")

        d3.select("table")
        .append("tr")
        .attr("class", "head")
        .selectAll("th")
        .data(keyValues)
        .enter()
        .append("th")
        .html(function (d) {return d})
        
        d3.select("table")
        .selectAll("tr.data")
        .data(incData).enter()
        .append("tr")
        .attr("class", "data")
        
        d3.selectAll("tr")
        .selectAll("td")
        .data(function(d) {return d3.entries(d)})
        .enter()
        .append("td")
        .html(function (d) {return d.value})
      }

</script>
  </footer>

</html>

<!DOCTYPE html>

<html lang="en">
<head>
<meta charset="utf-8" />
<title>Correlation Matrix</title>
<style>
.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.link {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
  opacity: 0.4;
  marker-end: url(#end-arrow);
}

</style>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script>

//These attributes could be derived from the data
attributes = ["carat","depth","table","price","x","y","z"];
attributeMatrix = [];

attributes.forEach(function (a, x) {
  attributes.forEach(function (b, y) {
    //create an n-by-n matrix based on pairs of attributes
    attributeMatrix.push({a: a, b: b, x: x, y: y})
  })
})

colors = d3.scale.ordinal().range(["#827abf", "#f62150", "#6f89b6", "#f5e0b7", "#5b1e37", "#b9e3c5"]);

  d3.select("body").append("svg").attr("height", 1140).attr("width", 1140)

d3.csv("diamonds.csv", small_scatterplots);

function small_scatterplots(data) {

  //d3.csv pulls in data as strings so they need to be formatted as numbers
  data.forEach(function (d) {
    attributes.forEach(function (att) {
      d[att] = parseFloat(d[att])
    })
  })

  //create scales dynamically for each attribute's extent

  scale = {};
  attributes.forEach(function (att) {
    scale[att] = d3.scale.linear();
    attExtent = d3.extent(data, function (d) {return d[att]});
    scale[att].domain(attExtent).range([5,95]);
  })

  //bind the matrix array to a grid of g elements
  d3.select("svg")
  .selectAll("g")
  .data(attributeMatrix)
  .enter()
  .append("g")
  .attr("transform", function (d) {return "translate(" + ((d.x * 120) + 20) + "," + ((d.y * 120) + 20) + ")" });

  d3.selectAll("g")
  .each(function (matrix, i) {
    //index i is only used for coloring

    //background/border
    d3.select(this).append("rect").style("fill", "white").style("stroke", "black").style("stroke-width", 1)
    .attr("height", 100)
    .attr("width", 100);

    //label
    d3.select(this).append("text")
    .attr("x", 50)
    .style("text-anchor", "middle")
    .attr("y", -5)
    .text(matrix.a + " - " + matrix.b);

    //scatterplot points
    d3.select(this).selectAll("circle")
    .data(data)
    .enter()
    .append("circle")
    .attr("r", 2)
    .style("fill", colors(i))
    .attr("cx", function (d) {return scale[matrix.a](d[matrix.a])})
    .attr("cy", function (d) {return 95 - scale[matrix.b](d[matrix.b])})
  })


}

</script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <title></title>
    <style>
      body, html{
        width: 960px;
        height: 500px;
        margin: 0;
      }
      .axis{
        fill: none;
        stroke: black;
      }
      .axis text{
        fill: white;
        stroke: none;
      }
      .axis circle{
        fill: gray;
        stroke: none;
      }

    </style>
  </head>
  <body>
    <script src="http://d3js.org/d3.v3.js" charset="utf-8"></script>
    <script>
var w = window.innerWidth, h = window.innerHeight
var m = 100
var svg = d3.select('body').append('svg')
  .attr({width: w, height: h})
var x = d3.scale.linear().domain([0, w]).range([m, w - m])
var axis = d3.svg.axis().scale(x)
svg.append('g').attr('class', 'axis').call(axis)
  .attr('transform', 'translate(' + [0, m] + ')')

svg.select('.axis').selectAll('g.tick')
  .insert('circle', ':first-child').attr('r', 25).attr('cy', 15)

    </script>
  </body>
</html><!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <script src="//d3js.org/d3.v3.min.js"></script>
    <link rel="stylesheet" href="style.css">
</head>
<body>
</body>
<script src="script.js"></script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node {
  font: 9px sans-serif;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500,
    xScale = 1,
    yScale = 1;

var cluster = d3.layout.cluster()
    .size([width, height - 40]);

var diagonal = d3.svg.diagonal()
    .projection(function(d) { return [(d.x/xScale), (d.y/yScale)]; });

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(0,20)");

d3.json("data.json", function(error, root) {
  var nodes = cluster.nodes(root),
      links = cluster.links(nodes);

  var link = svg.selectAll(".link")
      .data(links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", diagonal);

  var node = svg.selectAll(".node")
      .data(nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + (d.x/xScale) + "," + (d.y/yScale) + ")"; })

  node.append("rect")
      .attr("rx", 6)
      .attr("ry", 6)
      .attr('x', -45)
      .attr('y', -15)
      .attr("width", 90)
      .attr("height", 25)
      .style('fill', 'white')
      .style('stroke', 'black');

  node.append("text")
      // .attr("dx", function(d) { return d.children ? -8 : 8; })
      // .attr("dy", 3)
      .style("text-anchor", 'middle')
      // .style("text-anchor", function(d) { return d.children ? "end" : "start"; })
      .text(function(d) { return d.name; });
});

d3.select(self.frameElement).style("height", height + "px");

</script><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  margin: 0;
  background: #111;
  min-width: 960px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = Math.max(960, innerWidth),
    height = Math.max(500, innerHeight);

var x1 = width / 2,
    y1 = height / 2,
    x0 = x1,
    y0 = y1,
    i = 0,
    r = 200,
    τ = 2 * Math.PI;

var canvas = d3.select("body").append("canvas")
    .attr("width", width)
    .attr("height", height)
    .on("ontouchstart" in document ? "touchmove" : "mousemove", move);

var context = canvas.node().getContext("2d");
context.globalCompositeOperation = "lighter";
context.lineWidth = 2;

d3.timer(function() {
  context.clearRect(0, 0, width, height);

  var z = d3.hsl(++i % 360, 1, .5).rgb(),
      c = "rgba(" + z.r + "," + z.g + "," + z.b + ",",
      x = x0 += (x1 - x0) * .1,
      y = y0 += (y1 - y0) * .1;

  d3.select({}).transition()
      .duration(2000)
      .ease(Math.sqrt)
      .tween("circle", function() {
        return function(t) {
          context.strokeStyle = c + (1 - t) + ")";
          context.beginPath();
          context.arc(x, y, r * t, 0, τ);
          context.stroke();
        };
      });
});

function move() {
  var mouse = d3.mouse(this);
  x1 = mouse[0];
  y1 = mouse[1];
  d3.event.preventDefault();
}

</script>
<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>bhvaleri D3</title>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <style>
      html, body { width: 100%; height: 100%; margin: 0; padding: 0; }
      .bar {
        display: inline-block;
        width: 20px;
        height: 75px;
        background-color: teal;
        margin-right: 2px;
      }
    </style>
    <script type="text/javascript">
      window.onload = function() {
        dataset = [
          { id: 'cow', value: 5, color: 'teal' },
          { id: 'pig', value: 10, color: 'black' },
          { id: 'cat', value: 15, color: 'orange' },
          { id: 'dog', value: 20, color: 'blue' },
          { id: 'rat', value: 25, color: 'red' },
        ];

        colors = ['teal', 'black', 'orange', 'blue', 'red'];

        var w = window.innerWidth;
        var h = window.innerHeight;


        var svg = d3.select('body').append('svg');
        svg.attr('width', w)
           .attr('height', h);

        d3.select(window).on('resize', function() { 
          w = window.innerWidth;
          h = window.innerHeight;
          svg.attr('width', w)
             .attr('height', h);
          refresh();
        });

        refresh = function() {
          var circles = svg.selectAll('circle')
            .data(dataset, function(d) { return d.id; });

          // no circles yet
          var newCircles = circles.enter().append('circle').attr('r', 100);
          // circles for everything in dataset

          newCircles.on('click', function(d) {
            dataset.splice(dataset.indexOf(d), 1)
            refresh();
          });

          // first time, this will do nothing
          circles.exit().transition().duration(1000).attr('r',0).style('fill-opacity', 0).remove();

          // this updates everything that remains in the DOM
          circles.transition()
            .style('fill', function(d) { return colors[Math.floor(Math.random() * colors.length)]})
            .style('fill-opacity', function (d) { return d.value / 100; })
            .attr('cx', function (d, i) {
              return ((i * 50) + 25) % w;
            })
            .attr('cy', function(d, i) {
              return 25 * (1 + Math.floor((i * 50) + 25) / w)
            })
          .transition()
            .attr('r', function (d) {
              return Math.floor(Math.random() * 50);
            });
        };

        refresh();

        setInterval(function() {
          dataset.push({ id: Math.random().toString(36).slice(2), value: 60 });
          dataset[1].value = 30;
          refresh();
        }, 500);
      }
    </script>
  </head>
  <body>
  </body>
</html>
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>círculo cromático</title>
  <script src="http://cloud.github.com/downloads/processing-js/processing-js/processing-1.4.1.min.js"></script>
</head>
<body>
  <h1>círculo cromático</h1>
  <canvas data-processing-sources="color.pde"></canvas>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body ng-app="myApp" ng-controller="MainCtrl">
  <donut-chart data="donutData1"></donut-chart>
  <donut-chart data="donutData2"></donut-chart>
  <script>
var myApp = angular.module('myApp', []);
 
myApp.controller('MainCtrl', function($scope){
  d3.json('donut-data.json', function(err, data){
    if(err){ throw err; }
    $scope.donutData1 = data;
    $scope.$apply();
  });
  $scope.donutData2 = [74, 56, 29, 11, 62];
});
 
myApp.directive('donutChart', function(){
  function link(scope, el, attr){
    var color = d3.scale.category10();
    var width = 200;
    var height = 200;
    var min = Math.min(width, height);
    var svg = d3.select(el[0]).append('svg');
    var pie = d3.layout.pie().sort(null);
    var arc = d3.svg.arc()
      .outerRadius(min / 2 * 0.9)
      .innerRadius(min / 2 * 0.5);
 
    svg.attr({width: width, height: height});
 
    // center the donut chart
    var g = svg.append('g')
      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');
    
    // add the <path>s for each arc slice
    var arcs = g.selectAll('path');
 
    scope.$watch('data', function(data){
      if(!data){ return; }
      arcs = arcs.data(pie(data));
      arcs.exit().remove();
      arcs.enter().append('path')
        .style('stroke', 'white')
        .attr('fill', function(d, i){ return color(i) });
      // update all the arcs (not just the ones that might have been added)
      arcs.attr('d', arc);
    }, true);
  }
  return {
    link: link,
    restrict: 'E',
    scope: { data: '=' }
  };
});
  </script>
</body>
</html><!DOCTYPE html>
<html>
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body ng-app="myApp" ng-controller="MainCtrl">
  <donut-chart data="donutData1"></donut-chart>
  <donut-chart data="donutData2"></donut-chart>
  <donut-chart data="donutData3"></donut-chart>
  <script>
var myApp = angular.module('myApp', []);

myApp.controller('MainCtrl', function($scope, $http){
  // using success/error callback style
  $http.get('donut-data.json').success(function(data){
    $scope.donutData1 = data;
  }).error(function(err){
    throw err;
  });
  // using `then()` callback style
  $http.get('donut-data-2.json').then(function(response){
    $scope.donutData2 = response.data;
  }, function(err){
    throw err;
  });
});

myApp.directive('donutChart', function(){
  function link(scope, el, attr){
    var color = d3.scale.category10();
    var width = 200;
    var height = 200;
    var min = Math.min(width, height);
    var svg = d3.select(el[0]).append('svg');
    var pie = d3.layout.pie().sort(null);
    var arc = d3.svg.arc()
      .outerRadius(min / 2 * 0.9)
      .innerRadius(min / 2 * 0.5);

    svg.attr({width: width, height: height});

    // center the donut chart
    var g = svg.append('g')
      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');
    
    // add the <path>s for each arc slice
    var arcs = g.selectAll('path');

    scope.$watch('data', function(data){
      if(!data){ return; }
      arcs = arcs.data(pie(data));
      arcs.exit().remove();
      arcs.enter().append('path')
        .style('stroke', 'white')
        .attr('fill', function(d, i){ return color(i) });
      // update all the arcs (not just the ones that might have been added)
      arcs.attr('d', arc);
    }, true);
  }
  return {
    link: link,
    restrict: 'E',
    scope: { data: '=' }
  };
});
  </script>
</body>
</html><!DOCTYPE html>
<html>
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body ng-app="myApp" ng-controller="MainCtrl">
  <donut-chart data="donutData"></donut-chart>
  <script>
var myApp = angular.module('myApp', []);


myApp.controller('MainCtrl', function($scope, $http, $interval){
  $interval(function(){
    $http.get('donut-data-api.json').then(function(response){
      // your API would presumably be sending new data, not the same
      // data each time!
      var data = response.data
        .map(function(d){ return d * ( 1 - Math.random() / 10) });
      $scope.donutData = data;
    }, function(err){
      throw err;
    });
  }, 1000);
});

myApp.directive('donutChart', function(){
  function link(scope, el, attr){
    var color = d3.scale.category10();
    var width = 200;
    var height = 200;
    var min = Math.min(width, height);
    var svg = d3.select(el[0]).append('svg');
    var pie = d3.layout.pie().sort(null);
    var arc = d3.svg.arc()
      .outerRadius(min / 2 * 0.9)
      .innerRadius(min / 2 * 0.5);

    svg.attr({width: width, height: height});

    // center the donut chart
    var g = svg.append('g')
      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');
    
    // add the <path>s for each arc slice
    var arcs = g.selectAll('path');

    scope.$watch('data', function(data){
      if(!data){ return; }
      arcs = arcs.data(pie(data));
      arcs.exit().remove();
      arcs.enter().append('path')
        .style('stroke', 'white')
        .attr('fill', function(d, i){ return color(i) });
      // update all the arcs (not just the ones that might have been added)
      arcs.attr('d', arc);
    }, true);
  }
  return {
    link: link,
    restrict: 'E',
    scope: { data: '=' }
  };
});
  </script>
</body>
</html><Html>
<Head>
	<!-- want to ask about this, is this their default styling for tiles or rules for cartoCSS and can I can change it up?  -->
<link href='//api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.css' rel='stylesheet' />
<script src='//api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.js'></script>
<script src="olymStates.geojson" type="text/javascript"></script>
  <Style>

  #map {
    width:900px;
    height:600px;
    margin-right:auto;
    margin-left:auto;
    
  }
  
  .header{
      margin-right:auto;
      margin-left:auto;
      text-align:center;
  }
  
  
  </Style>
  <title>Olympic 2014 Region Map</title>
</Head>
<Body>

<!-- this is the div I'm putting the map in  Sochi is at 43.5854823, 39.723109-->
  <Div id='map' class='dark'></Div>
  

  
  <Script type='text/javascript'>
      
      
      
      //insert your maptile code as the second argument to map()
  var map = L.mapbox.map('map', 'mpmckenna8.map-5hpnzi5m')
      .setView([43.5854823, 39.723109], 5);
     
 
 // The function making the content of the popups called onEachFeature     
      function onEachFeature(feature, layer) {
          var popupContent = "<p>State name so a Westerner can read it is: <em>" +
          feature.properties.name + "<em>.</p>";
          
          if (feature.properties) {
             layer.bindPopup(popupContent);
          }}
  
  
  



      var markerLayer = L.geoJson(states, {
                                  style:
                                  function(feature){
                                  switch(feature.properties.name){
                                  case "North Ossetia": return{
                                  color:"red"};
                                  case "Chechnya": return{
                                  color:"red"};
                                  }}
                                  
                                  
                                  ,
                                  onEachFeature: onEachFeature
                                  }
                                  
                                  ).addTo(map);



  </Script>
</Body>
</Html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
  shape-rendering: crispEdges
   ;
}

.grid-background {
  fill: #7D9EC0;
}

.grid line {
  stroke: #000;
}

.grid text {
  display: none;
}

.axis line {
  stroke: #000;
}

.axis path,
.grid path {
  display: none;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 200, right: 10, bottom: 200, left: 10},
    width = 960 - margin.right - margin.left,
    height = 452 - margin.top - margin.bottom
;

var x = d3.scale.linear()
    .domain([.05, 0.95])
    .range([0, width]);

var y = d3.scale.linear()
    .range([0, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.right + margin.left)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
			;

var border=1
var bordercolor='black';
  
svg.append("rect")
    .attr("class", "grid-background")
    .attr("width", width)
    .attr("height", height)
		.style("stroke", bordercolor)
		.style("stroke-width",border);

svg.append("g")
    .attr("class", "grid")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.svg.axis().scale(x).ticks(20).tickSize(-height))
  .selectAll(".tick")
   .data(x.ticks(10), function(d) { return d; })
		.exit()
    .classed("minor", true);

svg.append("g")
    .attr("class", "axis")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.svg.axis().scale(x).ticks(0));

</script>
<!DOCTYPE html>
<meta charset="utf-8">

<style>

</style>

<script src="d3.v3.js"></script>
<script src="speech.js"></script>

<body></body><!DOCTYPE html>
<html>

  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Language" content="en" />
    <title>Solar in Texas</title>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <style>

body { font: 12px Helvetica Neue;}

path { 
    stroke: #;
    stroke-width: ;
    fill: none;
}

.axis path,
.axis line {
    fill: none;
    stroke: #e7eff1;
    stroke-width: 1;
    shape-rendering: crispEdges;
}



.graph-svg-component {
    background-color:#e7eff1;
    opacity:0.9;

}


.overlay {
  fill: none;
  pointer-events: all;
}

.focus circle {
  fill: #990000;
}

.focus text{
    text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;
}

.line {
  fill: none;
  stroke: #7ea7ba;
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-width: 2.5px;
}

.voronoi path {
  fill: none;
  pointer-events: all;
}

.grid .tick{
    stroke:white;
    stroke-width:1.5px;
    stroke-opacity:0.6;
    shape-rendering: crispEdges;
}

.grid path{
    stroke-width:0;
}




    </style>
  </head>

<body>


<script>

var margin = {top: 60, right: 60, bottom: 50, left: 60},
    width = 700 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

var parseDate = d3.time.format("%b %y").parse,
    bisectDate = d3.bisector(function(d) { return d.date; }).left,
    formatValue = d3.format(",.2f");

var x = d3.time.scale().range([0, width]);
var y = d3.scale.linear().range([height, 0]);

var xAxis = d3.svg.axis().scale(x)
    .orient("bottom").ticks(5);

var yAxis = d3.svg.axis().scale(y)
    .orient("left").ticks(10);


var voronoi = d3.geom.voronoi()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); })
    .clipExtent([[-margin.left, -margin.top], [width + margin.right, height + margin.bottom]]);

var valueline = d3.svg.line()
    // .interpolate("basis") 
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value); });


var svg = d3.select("body")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .attr("class", "graph-svg-component")
    .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

function make_x_axis() { return d3.svg.axis()
        .scale(x)
        .orient("bottom")
        .ticks(5)
}
function make_y_axis() { return d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(10)
}

// Get the data
d3.csv("texas_solar.csv", function(error, data) {
    
    var flatData = [];
    data.forEach(function(d) {
        d.date = parseDate(d.date);
        d.value = +d.value;
        flatData.push({date: d.date, value: d.value, key: "value"});
    });
    
// Scale the range of the data
    x.domain(d3.extent(data, function(d) { return d.date; }));
    y.domain([0, d3.max(data, function(d) { return Math.max( d.value); })]) 

// Add the valueline path
    svg.append("g")
        .attr("class", "grid")
        .attr("transform", "translate(0," + height + ")")
        .call(make_x_axis()
            .tickSize(-height, 0, 0)
            .tickFormat("")
        )
    svg.append("g")
        .attr("class", "grid")
        .call(make_y_axis()
            .tickSize(-width, 0, 0)
            .tickFormat("")
        )

    svg.append("path")      
        .attr("class", "line") 
        .attr("d", valueline(data));    

    svg.append("g")         // Add the X Axis
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")         // Add the Y Axis
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
      	.attr("transform", "rotate(-90)")
      	.attr("y", 6)
      	.attr("dy", ".71em")
      	.style("text-anchor", "end")
      	.style("font-size",10)
      	.text("Thousand megawatthours");;



    var focus = svg.append("g")
      .attr("class", "focus")
      .attr("transform", "translate(-100,-100)");

    focus.append("circle")
      .attr("r", 4);

    focus.append("text")
      .attr("x", -9)
      .attr("y",-15)
      .attr("dy", ".35em");

    var voronoiGroup = svg.append("g")
      .attr("class", "voronoi");
      
    voronoiGroup.selectAll("path")
      .data(voronoi(flatData))
      .enter().append("path")
      .attr("d", function(d) { return "M" + d.join("L") + "Z"; })
      .datum(function(d) { return d.point; })
      .on("mouseover", mouseover)
      .on("mouseout", mouseout);

    function mouseover(d) {
      console.log(d);
      d3.select("."+d.key).classed("line-hover", true);
      focus.attr("transform", "translate(" + x(d.date) + "," + y(d.value) + ")");
      focus.select("text")
            // .text( d.value + " Thousand megawatt/Hours")
            .text( d.value)
            .style("font-size", "14")
            .style("opacity", "0.75")
            .style("font-weight",500);

    }
  
    function mouseout(d) {
      d3.select("."+d.key).classed("line-hover", false);
      focus.attr("transform", "translate(-100,-100)");
    }



});

    d3.select("svg")
        .append("text")
        .attr("x", (width)-(width/4))
        .attr("y", (height)+(height/2.3))
        .text("Data source: U.S. Energy Information Administration")        
        .style({"font-size":"10px", 
            "font-family":"Helvetica",
            "font-weight":"300",
            "opacity":"0.8",
            });

    d3.select("svg")
    .append("text")
    .attr("x", (width/9))
    .attr("y", (height/7))
    .text("Solar Energy Production in Texas")        
    .style({"font-size":"25px", 
        "font-family":"Helvetica Neue",
        "font-weight":"500",
        "opacity":"0.8"
        });

        





      </script>
  </body>

</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.axis text {
  font: 10px sans-serif;
}

.axis line,
.axis path {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis--x path {
  display: none;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var causes = ["wounds", "other", "disease"];

var parseDate = d3.time.format("%m/%Y").parse;

var margin = {top: 20, right: 50, bottom: 30, left: 20},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width]);

var y = d3.scale.linear()
    .rangeRound([height, 0]);

var z = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .tickFormat(d3.time.format("%b"));

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("right");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("crimea.tsv", type, function(error, crimea) {
  if (error) throw error;

  var layers = d3.layout.stack()(causes.map(function(c) {
    return crimea.map(function(d) {
      return {x: d.date, y: d[c]};
    });
  }));

  x.domain(layers[0].map(function(d) { return d.x; }));
  y.domain([0, d3.max(layers[layers.length - 1], function(d) { return d.y0 + d.y; })]).nice();

  var layer = svg.selectAll(".layer")
      .data(layers)
    .enter().append("g")
      .attr("class", "layer")
      .style("fill", function(d, i) { return z(i); });

  layer.selectAll("rect")
      .data(function(d) { return d; })
    .enter().append("rect")
      .attr("x", function(d) { return x(d.x); })
      .attr("y", function(d) { return y(d.y + d.y0); })
      .attr("height", function(d) { return y(d.y0) - y(d.y + d.y0); })
      .attr("width", x.rangeBand() - 1);

  svg.append("g")
      .attr("class", "axis axis--x")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "axis axis--y")
      .attr("transform", "translate(" + width + ",0)")
      .call(yAxis);
});

function type(d) {
  d.date = parseDate(d.date);
  causes.forEach(function(c) { d[c] = +d[c]; });
  return d;
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  width: 960px;
  height: 500px;
  position: relative;
}
svg{
	width: 100%;
	height: 100%;
}
path.slice{
	stroke-width:2px;
}

polyline{
	opacity: .3;
	stroke: black;
	stroke-width: 2px;
	fill: none;
}

</style>
<body>
Duration: 0<input type="range" id="duration" min="0" max="5000">5000 
<br>
<button class="randomize">randomize</button> 

<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var svg = d3.select("body")
	.append("svg")
	.append("g")

svg.append("g")
	.attr("class", "slices");
svg.append("g")
	.attr("class", "labels");
svg.append("g")
	.attr("class", "lines");

var width = 960,
    height = 450,
	radius = Math.min(width, height) / 2;

var pie = d3.layout.pie()
	.sort(null)
	.value(function(d) {
		return d.value;
	});

var arc = d3.svg.arc()
	.outerRadius(radius * 0.8)
	.innerRadius(radius * 0.4);

var outerArc = d3.svg.arc()
	.innerRadius(radius * 0.9)
	.outerRadius(radius * 0.9);

svg.attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var key = function(d){ return d.data.label; };

var color = d3.scale.category20()
	.domain(["Lorem ipsum", "dolor sit", "amet", "consectetur", "adipisicing", "elit", "sed", "do", "eiusmod", "tempor", "incididunt"])
	//.range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

function randomData (){
	var labels = color.domain();
	return labels.map(function(label){
		return { label: label, value: Math.random() }
	}).filter(function() {
		return Math.random() > .5;
	}).sort(function(a,b) {
		return d3.ascending(a.label, b.label);
	});
}

change(randomData());

d3.select(".randomize")
	.on("click", function(){
		change(randomData());
	});

function mergeWithFirstEqualZero(first, second){
	var secondSet = d3.set(); second.forEach(function(d) { secondSet.add(d.label); });

	var onlyFirst = first
		.filter(function(d){ return !secondSet.has(d.label) })
		.map(function(d) { return {label: d.label, value: 0}; });
	return d3.merge([ second, onlyFirst ])
		.sort(function(a,b) {
			return d3.ascending(a.label, b.label);
		});
}

function change(data) {
	var duration = +document.getElementById("duration").value;
	var data0 = svg.select(".slices").selectAll("path.slice")
		.data().map(function(d) { return d.data });
	if (data0.length == 0) data0 = data;
	var was = mergeWithFirstEqualZero(data, data0);
	var is = mergeWithFirstEqualZero(data0, data);

	/* ------- SLICE ARCS -------*/

	var slice = svg.select(".slices").selectAll("path.slice")
		.data(pie(was), key);

	slice.enter()
		.insert("path")
		.attr("class", "slice")
		.style("fill", function(d) { return color(d.data.label); })
		.each(function(d) {
			this._current = d;
		});

	slice = svg.select(".slices").selectAll("path.slice")
		.data(pie(is), key);

	slice		
		.transition().duration(duration)
		.attrTween("d", function(d) {
			var interpolate = d3.interpolate(this._current, d);
			var _this = this;
			return function(t) {
				_this._current = interpolate(t);
				return arc(_this._current);
			};
		});

	slice = svg.select(".slices").selectAll("path.slice")
		.data(pie(data), key);

	slice
		.exit().transition().delay(duration).duration(0)
		.remove();

	/* ------- TEXT LABELS -------*/

	var text = svg.select(".labels").selectAll("text")
		.data(pie(was), key);

	text.enter()
		.append("text")
		.attr("dy", ".35em")
		.style("opacity", 0)
		.text(function(d) {
			return d.data.label;
		})
		.each(function(d) {
			this._current = d;
		});
	
	function midAngle(d){
		return d.startAngle + (d.endAngle - d.startAngle)/2;
	}

	text = svg.select(".labels").selectAll("text")
		.data(pie(is), key);

	text.transition().duration(duration)
		.style("opacity", function(d) {
			return d.data.value == 0 ? 0 : 1;
		})
		.attrTween("transform", function(d) {
			var interpolate = d3.interpolate(this._current, d);
			var _this = this;
			return function(t) {
				var d2 = interpolate(t);
				_this._current = d2;
				var pos = outerArc.centroid(d2);
				pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);
				return "translate("+ pos +")";
			};
		})
		.styleTween("text-anchor", function(d){
			var interpolate = d3.interpolate(this._current, d);
			return function(t) {
				var d2 = interpolate(t);
				return midAngle(d2) < Math.PI ? "start":"end";
			};
		});
	
	text = svg.select(".labels").selectAll("text")
		.data(pie(data), key);

	text
		.exit().transition().delay(duration)
		.remove();

	/* ------- SLICE TO TEXT POLYLINES -------*/

	var polyline = svg.select(".lines").selectAll("polyline")
		.data(pie(was), key);
	
	polyline.enter()
		.append("polyline")
		.style("opacity", 0)
		.each(function(d) {
			this._current = d;
		});

	polyline = svg.select(".lines").selectAll("polyline")
		.data(pie(is), key);
	
	polyline.transition().duration(duration)
		.style("opacity", function(d) {
			return d.data.value == 0 ? 0 : .5;
		})
		.attrTween("points", function(d){
			this._current = this._current;
			var interpolate = d3.interpolate(this._current, d);
			var _this = this;
			return function(t) {
				var d2 = interpolate(t);
				_this._current = d2;
				var pos = outerArc.centroid(d2);
				pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);
				return [arc.centroid(d2), outerArc.centroid(d2), pos];
			};			
		});
	
	polyline = svg.select(".lines").selectAll("polyline")
		.data(pie(data), key);
	
	polyline
		.exit().transition().delay(duration)
		.remove();
};

</script>
</body><!DOCTYPE html>
<meta charset="utf-8">
<style> /* set the CSS */

body { font: 12px Arial;}

path { 
    stroke: steelblue;
    stroke-width: 2;
    fill: none;
}

text.shadow {
    stroke: white;
    stroke-width: 2.5px;
    opacity: 0.9;
}

.axis path,
.axis line {
    fill: none;
    stroke: grey;
    stroke-width: 1;
    shape-rendering: crispEdges;
}

</style>
<body>

<!-- set inputs for the query -->    
<div id="new_input">
    &nbsp &nbsp
    Stock: <input type="text" name="stock" id="stock" value="YHOO" 
    style="width: 70px;">
    &nbsp &nbsp
    Start: <input type="text" name="start" id="start" value="2013-08-10"
    style="width: 80px;">
    &nbsp &nbsp
    End: <input type="text" name="end" id="end" value="2014-03-10" 
    style="width: 80px;">
    &nbsp &nbsp
    <input name="updateButton" 
    type="button" 
    value="Update" 
    onclick="updateData()" />
</div>

<!-- load the d3.js library -->    
<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

// Set the dimensions of the graph
var margin = {top: 30, right: 40, bottom: 30, left: 50},
    width = 600 - margin.left - margin.right,
    height = 270 - margin.top - margin.bottom;

// Parse the date / time
var parseDate = d3.time.format("%Y-%m-%d").parse;

// Set the ranges
var x = d3.time.scale().range([0, width]);
var y = d3.scale.linear().range([height, 0]);

var xAxis = d3.svg.axis().scale(x)
    .orient("bottom").ticks(5);

var    yAxis = d3.svg.axis().scale(y)
    .orient("left").ticks(5);

var valueline = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.high); });
    
  
var svg = d3.select("body")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" 
            + margin.left 
            + "," + margin.top + ")");

var stock = document.getElementById('stock').value;
var start = document.getElementById('start').value;
var end = document.getElementById('end').value;

var inputURL = "http://query.yahooapis.com/v1/public/yql"+
    "?q=select%20*%20from%20yahoo.finance.historicaldata%20"+
    "where%20symbol%20%3D%20%22"
    +stock+"%22%20and%20startDate%20%3D%20%22"
    +start+"%22%20and%20endDate%20%3D%20%22"
    +end+"%22&format=json&env=store%3A%2F%2F"
    +"datatables.org%2Falltableswithkeys";

    // Get the data 
    d3.json(inputURL, function(error, data){

    data.query.results.quote.forEach(function(d) {
        d.date = parseDate(d.Date);
        d.high = +d.High;
        d.low = +d.Low;
    });

    // Scale the range of the data
    x.domain(d3.extent(data.query.results.quote, function(d) {
        return d.date; }));
    y.domain([
        d3.min(data.query.results.quote, function(d) { return d.low; }), 
        d3.max(data.query.results.quote, function(d) { return d.high; })
    ]);

    svg.append("path")        // Add the valueline path.
        .attr("class", "line")
        .attr("d", valueline(data.query.results.quote));

    svg.append("g")            // Add the X Axis
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")            // Add the Y Axis
        .attr("class", "y axis")
        .call(yAxis);

    svg.append("text")          // Add the label
        .attr("class", "label")
        .attr("transform", "translate(" + (width+3) + "," 
            + y(data.query.results.quote[0].high) + ")")
        .attr("dy", ".35em")
        .attr("text-anchor", "start")
        .style("fill", "steelblue")
        .text("high");

    svg.append("text")          // Add the title shadow
        .attr("x", (width / 2))
        .attr("y", margin.top / 2)
        .attr("text-anchor", "middle")
        .attr("class", "shadow")
        .style("font-size", "16px")
        .text(stock);
        
    svg.append("text")          // Add the title
        .attr("class", "stock")
        .attr("x", (width / 2))
        .attr("y", margin.top / 2)
        .attr("text-anchor", "middle")
        .style("font-size", "16px")
        .text(stock);
});

// ** Update data section (Called from the onclick)
function updateData() {

var stock = document.getElementById('stock').value;
var start = document.getElementById('start').value;
var end = document.getElementById('end').value;

var inputURL = "http://query.yahooapis.com/v1/public/yql"+
    "?q=select%20*%20from%20yahoo.finance.historicaldata%20"+
    "where%20symbol%20%3D%20%22"
    +stock+"%22%20and%20startDate%20%3D%20%22"
    +start+"%22%20and%20endDate%20%3D%20%22"
    +end+"%22&format=json&env=store%3A%2F%2F"
    +"datatables.org%2Falltableswithkeys";

    // Get the data again
    d3.json(inputURL, function(error, data){

        data.query.results.quote.forEach(function(d) {
            d.date = parseDate(d.Date);
            d.high = +d.High;
            d.low = +d.Low;
        });

        // Scale the range of the data
        x.domain(d3.extent(data.query.results.quote, function(d) {
            return d.date; }));
        y.domain([
            d3.min(data.query.results.quote, function(d) { 
                return d.low; }), 
            d3.max(data.query.results.quote, function(d) { 
                return d.high; })
        ]);

        // Select the section we want to apply our changes to
        var svg = d3.select("body").transition();

        // Make the changes
        svg.select(".line")    // change the line
            .duration(750) 
            .attr("d", valueline(data.query.results.quote));

        svg.select(".label")   // change the label text
            .duration(750)
            .attr("transform", "translate(" + (width+3) + "," 
            + y(data.query.results.quote[0].high) + ")");
 
        svg.select(".shadow") // change the title shadow
            .duration(750)
            .text(stock);  
             
        svg.select(".stock")   // change the title
            .duration(750)
            .text(stock);
     
        svg.select(".x.axis") // change the x axis
            .duration(750)
            .call(xAxis);
        svg.select(".y.axis") // change the y axis
            .duration(750)
            .call(yAxis);

    });
}

</script>
</body>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="http://coffeescript.org/extras/coffee-script.js"></script>
  <style>
  </style>
</head>

<body>
  <script type="text/coffeescript">
  

svg = d3.select("body").append("svg")

circle = svg.selectAll("circle")
    .data([32, 57, 293], (d) -> d )

circle.enter().append("circle")
    .attr("cy", 60)
    .attr("cx", (d, i) -> (i * 100 + 30) )
    .attr("r", (d) -> Math.sqrt(d) )

circle.exit().remove()
    

  </script>
</body>
<html>
	<head>
		<title>D3 Simple Nest and CSV Example</title>
		<script src="http://d3js.org/d3.v2.js"></script>
    </head>
    
    <body>
    
    <script>
    
        var csv_data="group, date, time\none, 2012-01-01, 4\none, 2012-01-01,6\ntwo, 2012-01-06,3\nthree, 2012-01-01, 4\nthree, 20120-01-05, 3\n";
        
        var array_data = d3.csv.parse(csv_data);
        
        var nested_data = d3.nest()
            .key(function(d) { return d.group; })
            .entries(array_data);
            
        console.debug(nested_data);
        alert(JSON.stringify(nested_data));
        
        /* expect 
        [{"key":"one",
          "values":[{"group":"one"," date":" 2012-01-01"," time":" 4"},
                    {"group":"one"," date":" 2012-01-01"," time":"6"}]},
         {"key":"two",
          "values":[{"group":"two"," date":" 2012-01-06"," time":"3"}]},
         {"key":"three",
          "values":[{"group":"three"," date":" 2012-01-01"," time":" 4"},
                    {"group":"three"," date":" 20120-01-05"," time":" 3"}]}]
        */
            
    </script>
    
    </body>
</html>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Legendary Key</title>
<script src="http://d3js.org/d3.v3.min.js"></script>
<style>

body {
  font: 10px sans-serif;
}

.key path {
  display: none;
}

.key line {
  stroke: #000;
  shape-rendering: crispEdges;
}

.legend-title {
    font-weight: bold;
}

.legend-box {
    fill: none;
    stroke: #888;
    font-size: 10px;
}

</style>
</head>
<body>
<script type="text/javascript">

var width = 960,
    height = 500,
    boxmargin = 4,
    lineheight = 14,
    keyheight = 10,
    keywidth = 40,
    boxwidth = 2 * keywidth,
    formatPercent = d3.format(".0%");
    
var margin = { "left": 160, "top": 80 };

var sevenshadesofgold = [ "#ffffb2", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04" ];

var title = ['Household owner','occupancy rate'],
    titleheight = title.length*lineheight + boxmargin;
    
var x = d3.scale.linear()
    .domain([0, 1]);
    
var quantize = d3.scale.quantize()
    .domain([0, 1])
    .range(sevenshadesofgold);
    
var ranges = quantize.range().length;

// return quantize thresholds for the key    
var qrange = function(max, num) {
    var a = [];
    for (var i=0; i<num; i++) {
        a.push(i*max/num);
    }
    return a;
}
   
var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);
    
// make legend 
var legend = svg.append("g")
    .attr("transform", "translate ("+margin.left+","+margin.top+")")
    .attr("class", "legend");
    
legend.selectAll("text")
    .data(title)
    .enter().append("text")
    .attr("class", "legend-title")
    .attr("y", function(d, i) { return (i+1)*lineheight-2; })
    .text(function(d) { return d; })

// make legend box 
var lb = legend.append("rect")
    .attr("transform", "translate (0,"+titleheight+")")
    .attr("class", "legend-box")
    .attr("width", boxwidth)
    .attr("height", ranges*lineheight+2*boxmargin+lineheight-keyheight);

// make quantized key legend items
var li = legend.append("g")
    .attr("transform", "translate (8,"+(titleheight+boxmargin)+")")
    .attr("class", "legend-items");

li.selectAll("rect")
    .data(quantize.range().map(function(color) {
      var d = quantize.invertExtent(color);
      if (d[0] == null) d[0] = x.domain()[0];
      if (d[1] == null) d[1] = x.domain()[1];
      return d;
    }))
    .enter().append("rect")
    .attr("y", function(d, i) { return i*lineheight+lineheight-keyheight; })
    .attr("width", keywidth)
    .attr("height", keyheight)
    .style("fill", function(d) { return quantize(d[0]); });
    
li.selectAll("text")
    .data(qrange(quantize.domain()[1], ranges))
    .enter().append("text")
    .attr("x", 48)
    .attr("y", function(d, i) { return (i+1)*lineheight-2; })
    .text(function(d) { return formatPercent(d); });
   
</script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <title>Walking Dead Viewership</title>
  </head>
  <style>
    body, html{
      margin: 0;
      width: 900px;
      color: white;
      background-color: black;
      font-family: helvetica;
      margin: auto;
    }
    .scatter-container{
      width: 50%;
      float: left;
      height: 400px;
    }
    .detail{
      width: 50%;
      float: left;
      height: 400px;
    }
    scatter{
      width: 100%;
      height: 100%;
      display: block;
      z-index: 0;
      overflow: hidden;
      font-size: 10px;
    }
    scatter circle{
      opacity: 0.4;
      cursor: pointer;
      stroke-width: 2;
    }
    scatter circle:hover{
      stroke: white;
    }
    scatter text{
      fill: white;
      stroke: none;
    }
    scatter .x-axis path, scatter .y-axis path{
      stroke: none;
      fill: none;
    }
    scatter .x-axis line, scatter .y-axis line{
      stroke: rgba(255, 255, 255, 0.2);
    }
  </style>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <body ng-app="myApp" ng-controller="MainCtrl">
    <h1>Walking Dead Viewership</h1>
    <div class="scatter-container">
      <scatter
        data="episodes"
        accessor-x="d.air_date"
        accessor-y="d.us_viewers"
        selected-point="selectedEpisode"
        color="color(d.season)">
      </scatter>
    </div>
    <div class="detail">
      <h2>Episode: {{selectedEpisode.title}}</h2>
      <h3>season: {{selectedEpisode.season}}</h3>
      <h3>us viewers: {{selectedEpisode.us_viewers | number}}</h3>
    </div>
  </body>
  <script>

var app = angular.module('myApp', []);

app.controller('MainCtrl', function($scope, $window){
  $scope.color = d3.scale.category10();
  angular.element($window).on('resize', function(){ $scope.$apply(); });
  d3.csv('./episodes.csv', function(row){
    row.season = +row.season; // number
    row.air_date = new Date(row.air_date);
    row.us_viewers = +row.us_viewers * 1e6; // us viwers in millions
    return row;
  }, function(err, episodes){
    if(err){ throw err; }
    $scope.$apply(function(){
      // remove the few episodes that haven't air yet at time of writing.
      episodes = episodes.slice(0, -3);
      $scope.episodes = episodes;
      $scope.selectedEpisode = episodes[0];
    });
  });
});

app.directive('scatter', function(){
  function link(scope, el, attr){
    el = el[0];
    var w, h;
    var svg = d3.select(el).append('svg');
    var xAxisG = svg.append('g').attr('class', 'x-axis');
    var yAxisG = svg.append('g').attr('class', 'y-axis');
    var points = svg.append('g').attr('class', 'points').selectAll('g.point');
    var x = d3.scale.linear();
    var y = d3.scale.linear();
    var yFormat = d3.format('.2s');
    var timeFormat = d3.time.format('%m-%y');
    var xFormat = function(d){ return timeFormat(new Date(d)) };
    var xAxis = d3.svg.axis().scale(x).orient('bottom').tickFormat(xFormat);
    var yAxis = d3.svg.axis().scale(y).orient('left').tickFormat(yFormat);
    var m = 50;

    scope.$watch(function(){
      w = el.clientWidth;
      h = el.clientHeight;
      return w + h;
    }, resize);

    function resize(){
      svg.attr({width: w, height: h});
      x.range([m, w - m]);
      y.range([h - m, m]);
      xAxis.tickSize(-h + 2 * m);
      yAxis.tickSize(-w + 2 * m);
      xAxisG.attr('transform', 'translate(' + [0, y.range()[0] + 0.5] + ')');
      yAxisG.attr('transform', 'translate(' + [x.range()[0], 0] + ')');
      update();
    }

    scope.$watch('data', update);

    function update(){
      if(!scope.data){ return };
      var data = scope.data;
      var x_extent = d3.extent(data, function(d){ return scope.accessorX({d:d}) });
      x.domain(x_extent);
      var y_max = d3.max(data, function(d){ return scope.accessorY({d:d}) });
      y.domain([0, y_max]);
      points = points.data(data);
      points.exit().remove();
      var point = points.enter().append('g').attr('class', 'point');
      point.append('circle').attr('r', 5)
        .style('fill', function(d){ return scope.color({d:d}); })
        .on('mouseover', function(d){
          scope.$apply(function(){
            scope.selectedPoint = d;
          });
        })

      // update the position of all the points
      points.attr('transform', function(d){
        return 'translate(' + [x(scope.accessorX({d:d})), y(scope.accessorY({d:d}))] + ')';
      });

      xAxisG.call(xAxis);
      yAxisG.call(yAxis);

    };
  }
  return {
    link: link,
    restrict: 'E',
    scope: { data: '=', accessorX: '&', accessorY: '&', color: '&', selectedPoint: '=' }
  };
});
  </script>
</html><!DOCTYPE html>
<html>
  <head>
    <title></title>
  </head>
  <style>
    body, html{
      margin: 0;
      width: 900px;
      color: white;
      background-color: black;
      font-family: helvetica;
      margin: auto;
    }
    .scatter-container{
      width: 50%;
      float: left;
      height: 400px;
    }
    .detail{
      width: 50%;
      float: left;
      height: 400px;
    }
    scatter{
      width: 100%;
      height: 100%;
      display: block;
      z-index: 0;
      overflow: hidden;
      font-size: 10px;
    }
    scatter circle{
      fill: yellow;
      opacity: 1;
      cursor: pointer;
      stroke-width: 2;
    }
    scatter circle:hover{
      stroke: white;
    }
    scatter text{
      fill: white;
      stroke: none;
    }
    scatter .x-axis path, scatter .y-axis path{
      stroke: none;
      fill: none;
    }
    scatter .x-axis line, scatter .y-axis line{
      stroke: rgba(255, 255, 255, 0.2);
    }
  </style>

  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

  <body ng-app="myApp" ng-controller="MainCtrl">
    <div class="scatter-container">
      <scatter data="employers" selected-point="selectEmployer"> </scatter>
    </div>
    <div class="detail">
      <div ng-show="selectEmployer">
        <h2>{{selectEmployer.name }}</h2>
        <h3>Employees: {{selectEmployer.value }}M</h3>
      </div>
      <div ng-show="!selectEmployer">
        <h2> [hover over a company] </h2>
      </div>
    </div>
  </body>
  <script>

var app = angular.module('myApp', []);

app.controller('MainCtrl', function($scope, $window){
  // world's largest employers
  // source: https://en.wikipedia.org/wiki/List_of_largest_employers
  $scope.employers = [
      { value: 3.2, name: 'United States Department of Defense' }
    , { value: 2.3, name: 'People\'s Liberation Army' }
    , { value: 2.1, name: 'Walmart' }
    , { value: 1.9, name: 'McDonald\'s' }
    , { value: 1.7, name: 'National Health Service' }
    , { value: 1.6, name: 'China National Petroleum Corporation' }
    , { value: 1.5, name: 'State Grid Corporation of China' }
    , { value: 1.4, name: 'Indian Railways' }
    , { value: 1.3, name: 'Indian Armed Forces' }
    , { value: 1.2, name: 'Hon Hai Precision Industry (Foxconn)' }
  ]
});

app.directive('scatter', function(){
  function link(scope, el, attr){
    el = el[0];
    var w, h;
    var svg = d3.select(el).append('svg');
    var xAxisG = svg.append('g').attr('class', 'x-axis');
    var yAxisG = svg.append('g').attr('class', 'y-axis');
    var points = svg.append('g').attr('class', 'points').selectAll('g.point');
    var x = d3.scale.linear();
    var y = d3.scale.linear();
    var xAxis = d3.svg.axis().scale(x).orient('bottom')
      .tickFormat(function(d, i){ return i + 1; }); // 1 index the company ranks
    var yAxis = d3.svg.axis().scale(y).orient('left');
    var m = 50;

    scope.$watch(function(){
      w = el.clientWidth;
      h = el.clientHeight;
      return w + h;
    }, resize);

    function resize(){
      svg.attr({width: w, height: h});
      x.range([m, w - m]);
      y.range([h - m, m]);
      xAxis.tickSize(-h + 2 * m);
      yAxis.tickSize(-w + 2 * m);
      xAxisG.attr('transform', 'translate(' + [0, y.range()[0] + 0.5] + ')');
      yAxisG.attr('transform', 'translate(' + [x.range()[0], 0] + ')');
      update();
    }

    scope.$watch('data', update);

    function update(){
      if(!scope.data){ return };
      var data = scope.data;
      var x_extent = d3.extent(data, function(d, i){ return i });
      x.domain(x_extent);
      var y_max = d3.max(data, function(d){ return d.value });
      y.domain([0, y_max]);
      points = points.data(data);
      points.exit().remove();
      var point = points.enter().append('g').attr('class', 'point');
      point.append('circle').attr('r', 5)
        .on('mouseover', function(d){
          scope.$apply(function(){
            scope.selectedPoint = d;
          });
        });

      // update the position of all the points
      points.attr('transform', function(d, i){
        return 'translate(' + [x(i), y(d.value)] + ')';
      });

      xAxisG.call(xAxis);
      yAxisG.call(yAxis);

    };
  }
  return {
    link: link,
    restrict: 'E',
    scope: { data: '=', selectedPoint: '=' }
  };
});
  </script>
</html><!DOCTYPE html>
<html>
  <head>
    <title>Slovak presidential election 2014 - 1st round</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
	<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	
	
	<script>
	  // see http://leafletjs.com/reference.html
	  L_PREFER_CANVAS = true;
	</script>

	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
		 <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>

    <style type="text/css">

		html, body, #map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}
		.leaflet-tile-pane {
		  opacity: .3
		}
		.leaflet-container {
          background-color: #fff;
        }

    </style>
  </head>
  <body>
  
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Slovak presidential election 2014 - 1st round</a>
        </div>
      </div>
    </div>
    
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >The <strong>size</strong> of bubbles represents number of voters, the <strong>color</strong> represents the winner.</div>
    </div>
    <div style="position:fixed;top:125px;z-index:1000;">
		<div class="alert alert-info" style="float:left;">
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#ff0000"></svg> Fico<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#F39C2D">></svg> Kiska<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#162485"></svg> Procházka<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#6A6A6A"></svg> Kňažko<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#0c0"></svg> Bárdos<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#008"></svg> Hrušovský<br/>
		    <svg height="20" width="20"><circle cx="10" cy="10" r="10" fill="#bed62f"></svg> Mezenská
		</div>
    </div>
    <div id="map" style="margin-top:40px;"></div>
    <script type="text/javascript">


		// Create the map
		var map = L.map('map',{zoomControl: false}).setView([48.695493,19.467773], 8);
		map.addControl( L.control.zoom({position: 'topright'}) );
		
		// add an OpenStreetMap tile layer
		// also see http://wiki.openstreetmap.org/wiki/Tiles
		//L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);
		
		//add circles
		$.getJSON( "sk_president_2014_1.json", function (data) {
		    $.each(data.votes, function (index, value) {
		        
		        description = "<strong>" + value.town + "</strong> (" + value.population + ")<br>";
		        
		        tuples = [];
		        for (var key in value.votes) {
		          tuples.push([key,parseInt(value.votes[key])]);
		        }
		        
		        tuples.sort(function(a, b) {
                    a = a[1];
                    b = b[1];
                    return a < b ? 1 : (a > b ? -1 : 0);
                });
                for (i = 0; i < 5; i++) {
                  tmp = Math.round(parseInt(tuples[i][1]) / parseInt(value.population) * 100);
                  description += data.people[tuples[i][0]] + ": " +  tmp  +"%<br>";
                }
				/*sum = 0;
				$.each(value.description, function (i, v) {
				  tmp = Math.round(parseInt(v.value) / parseInt(value.population) * 1000) / 10;
				  description += v.name + ': ' +  tmp + '% (' + v.value + ' hlasů)<br>';
				  sum += parseInt(v.value)
				});
				tmp = Math.round((parseInt(value.population) - sum) / parseInt(value.population) * 1000) / 10;
				tmp2 = value.population - sum;
				description += "Ostatní: " + tmp + '% (' + tmp2 + ' hlasů)';*/
		    
		    
				circle = L.circle([value.lat, value.lng], Math.sqrt(parseInt(value.population)*1000), {
					color: data.colors[value.winner_class],
					fillColor: data.colors[value.winner_class],
					fillOpacity: 0.85,
					weight: 0.1,
				}).addTo(map);
				

				circle.bindPopup(description);
		  });
		});

	</script>
	
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-8592359-13', 'ocks.org');
      ga('send', 'pageview');

    </script> 
  </body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <title>Slovak presidential election 2014 - 1st round</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
	<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	
	
	<script>
	  // see http://leafletjs.com/reference.html
	  L_PREFER_CANVAS = true;
	</script>

	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
		 <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>

    <style type="text/css">

		html, body, #map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}
		.leaflet-tile-pane {
		  opacity: .3
		}
		.leaflet-container {
          background-color: #fff;
        }

    </style>
  </head>
  <body>
  
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Slovak presidential election 2014 - 1st round</a>
        </div>
      </div>
    </div>
    
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >The <strong>size</strong> of bubbles represents number of voters, the <strong>color</strong> represents the winner and <strong>opacity</strong> margin of victory. <strong><span style="color:#f00">Fico</span></strong> vs. <strong><span style="color:#B700FF">Kiska</span></strong></div>
    </div>

    <div id="map" style="margin-top:40px;"></div>
    <script type="text/javascript">


		// Create the map
		var map = L.map('map',{zoomControl: false}).setView([48.695493,19.467773], 8);
		map.addControl( L.control.zoom({position: 'topright'}) );
		
		// add an OpenStreetMap tile layer
		// also see http://wiki.openstreetmap.org/wiki/Tiles
		//L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);
		
		//add circles
		$.getJSON( "sk_president_2014_1_fico_kiska.json", function (data) {
		    $.each(data.votes, function (index, value) {
		        
		        description = "<strong>" + value.town + "</strong><br>";
		        
		        tuples = [];
		        for (var key in value.votes) {
		          tuples.push([key,parseInt(value.votes[key])]);
		        }
		        
		        tuples.sort(function(a, b) {
                    a = a[1];
                    b = b[1];
                    return a < b ? 1 : (a > b ? -1 : 0);
                });
                for (i = 0; i <= 1; i++) {
                  //tmp = Math.round(parseInt(tuples[i][1]) / parseInt(value.population) * 100);
                  description += data.people[tuples[i][0]] + ": " +  tuples[i][1]  +"<br>";
                }
		    
		    
				circle = L.circle([value.lat, value.lng], Math.sqrt(parseInt(value.population)*2000), {
					color: data.colors[value.winner_class],
					fillColor: data.colors[value.winner_class],
					fillOpacity: 
					  4*(Math.max(parseInt(value.votes[0]),parseInt(value.votes[1])) / value.population - 0.5),
					weight: 0.1,
				}).addTo(map);
				

				circle.bindPopup(description);
		  });
		});

	</script>
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-8592359-13', 'ocks.org');
      ga('send', 'pageview');

    </script> 
  </body>
</html>
<!DOCTYPE html>
<html>
<head>
	<title>O Êxodo Português (1994-2014) </title>
	<meta charset="UTF-8">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
	<style type="text/css">

		body {
			text-align: left;
			font-family: Helvetica, Arial, Sans-serif;
			margin-left: 30px;
		}

		h1 {
			font-size: 2em;
			margin-bottom:4px;
		}

		h2 {
			font-style: italic;
			font-weight: normal;
			font-size: 1,5em;
			margin-top: 0px;
		}

		rect:hover {
			fill:rgb(201,84,74)!important;
		}

		.axis path,
		.axis line {
			fill:none;
			stroke:black;
			shape-rendering:crispEdges;
		}

		.axis text {
			font-family: sans-serif;
			font-size: 14px;
		}

		.y.axis path,
		.y.axis line {
			opacity: 0;
		}

		.y.axis text {
			font-size: 18px;
		}

	</style>

</head>
<body>

	<h1>O Êxodo Português (1994-2014)</h1>
	<h2>Retrato de uma crise demográfica</h2>

<script type="text/javascript">

	var w = 900;
	var h = 600;
	var padding = [20,10,20,50];


	var widthScale = d3.scale.linear()
						.range([0,w- padding[1] - padding[3] ]);

	var heightScale = d3.scale.ordinal()
						.rangeRoundBands([ padding[0], h - padding[2]],0.1);

	var svg = d3.select("body")
				.append("svg")
				.attr("width",w)
				.attr("height",h);


	var xAxis = d3.svg.axis()
					.scale(widthScale)
					.orient("bottom");

	var yAxis = d3.svg.axis()
					.scale(heightScale)
					.orient("left");

	d3.csv("emigrantes.csv",function(data) {

		console.log(data);

		data.sort(function(a,b){
			return d3.descending(+a.ano , +b.ano);
		});

		widthScale.domain([0,d3.max(data, function(d){
				return +d.n_emigrantes;
		})]);


		heightScale.domain(data.map(function(d){
			return d.ano;
		}));






		//var points = [50,100,150,200,250,300,350,400,450,500,550]
		var i;

		for (i = 0; i < 11; i++) {

			svg.append("line")
				.attr("x1", padding[3] + widthScale(i * 5000))
				.attr("y1", padding[0]+8)
				.attr("x2", padding[3] + widthScale(i * 5000))
				.attr("y2", h - padding[2])
				.attr("style", "stroke:rgb(187,196,196);stroke-width:1");
			
		};







		var rect = svg.selectAll("rect")
						.data(data)
						.enter()
						.append("rect");

		rect .attr("x",padding[3])
			.attr("y",function(d){
				return heightScale(d.ano);
			})
			.attr("width",function(d){
				return widthScale(d.n_emigrantes);
			})
			.attr("height",heightScale.rangeBand())
			.attr("style","stroke: gray; fill:rgb(4,91,114);")


		svg.append("g")
			.attr("class","x axis")
			.attr("transform", "translate(" +padding[3] + "," +(h-padding[2]+")"))
			.call(xAxis)

		svg.append("g")
			.attr("class","y axis")
			.attr("transform", "translate(" + (padding[3] ) + ",0)")
			.call(yAxis);





	});
	
</script>

<p>Source: <a href="http://www.pordata.pt">Pordata</a><br>
Autoria: <a href="http://www.ruimgbarros.com"><em>Rui Barros</em></p>



</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Mozfest example</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <style>
      body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
      p.update:hover {
        cursor: pointer;
      }
      .axis path,
      .axis line {
        fill: none;
        stroke: black;
        shape-rendering: crispEdges;
      }
      
      .axis text {
        font-family: sans-serif;
        font-size: 10px;
      }
    </style>
  </head>
  <body>
    <h1>Mozfest: D3 intro - example16</h1>
    <p class="update">click this text to update the data.</p>
    <!--<p> previous paragraph</p>-->
    <script type="text/javascript">
    	//generate random 2D points
      function get_data(numValues, xMax, yMax) {
          var xRange = Math.random() * xMax; //Max range of new x values
          var yRange = Math.random() * yMax; //Max range of new y values        
          dataset = []; //Initialize empty array
          for (var i = 0; i < numValues; i++) {    //Loop numValues times
            var newNumber1 = Math.floor(Math.random() * xRange);
            var newNumber2 = Math.floor(Math.random() * yRange); 
            dataset.push([newNumber1, newNumber2]);
          }
          return dataset;
      }

      //Width and height
      var w = 500;
      var h = 300;
      var padding = 30;
      
      //Dynamic, random dataset
      var dataset = get_data(50,1000,500);

      //Create scale functions
      var xScale = d3.scale.linear()
                 .domain([0, d3.max(dataset, function(d) { return d[0]; })])
                 .range([padding, w - padding * 2]);

      var yScale = d3.scale.linear()
                 .domain([0, d3.max(dataset, function(d) { return d[1]; })])
                 .range([h - padding, padding]);

      //Define X axis
      var xAxis = d3.svg.axis()
                .scale(xScale)
                .orient("bottom")
                .ticks(5);

      //Define Y axis
      var yAxis = d3.svg.axis()
                .scale(yScale)
                .orient("left")
                .ticks(5);

      //Create SVG element
      var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);

      //Create circles
      svg.selectAll("circle")
         .data(dataset)
         .enter()
         .append("circle")
         .attr("cx", function(d) {
             return xScale(d[0]);
         })
         .attr("cy", function(d) {
             return yScale(d[1]);
         })
         .attr("r", 2);
      
      //Create X axis
      svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + (h - padding) + ")")
        .call(xAxis);
      
      //Create Y axis
      svg.append("g")
        .attr("class", "y axis")
        .attr("transform", "translate(" + padding + ",0)")
        .call(yAxis);

      //On click, update with new data      
      d3.select("p.update")
        .on("click", function() {

          var dataset = get_data(50,1000,500);
          
          //Update scale domains
          xScale.domain([0, d3.max(dataset, function(d) { return d[0]; })]);
          yScale.domain([0, d3.max(dataset, function(d) { return d[1]; })]);

          //Update all circles
          svg.selectAll("circle")
             .data(dataset)
             .transition()
             .duration(1000)
             .each("start", function() {
               d3.select(this)
                 .attr("fill", "magenta")
                 .attr("r", 7);
             })
             .attr("cx", function(d) {
                 return xScale(d[0]);
             })
             .attr("cy", function(d) {
                 return yScale(d[1]);
             })
             .each("end", function() {
               d3.select(this)
                 .transition()
                 .duration(500)
                 .attr("fill", "black")
                 .attr("r", 2);
             });

          //Update X axis
          svg.select(".x.axis")
              .transition()
              .duration(1000)
            .call(xAxis);
          
          //Update Y axis
          svg.select(".y.axis")
              .transition()
              .duration(1000)
            .call(yAxis);

        });
      </script>
  </body>
</html>
<!doctype html>
<html>
<head>
	<meta charset='utf-8' />
	<title>Lines in Log Charts</title>
	<style>
        .axis path,
        .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }
        .line {
            fill: none;
        }
        #linear.line{
            stroke: blue;
        }
        #log.line{
            stroke: red;
        }
        circle {
            stroke: black;
            fill: none;
        }
        #config{
            text-align:center;
        }
        #config-form{
            display:block;
        }
	</style>
</head>
<body>
    <div id="config">
        <form id="config-form">
            <label for="resolution">Sampling: </label>
            <input id="resolution" type="range" min="0" max="21" step="1" value="3"/>
            <label>Y Scale: </label>
            <input id="logRadio" type="radio" name="type" value="log" checked><label for="logRadio">Log</label>
            <input id="linearRadio" type="radio" name="type" value="linear"><label for="linearRadio">Linear</label>
        </form>
    </div>
	<svg></svg>
<script src='https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js' charset='utf-8'></script>
<script>
var margin = {top: 20, right: 30, bottom: 30, left: 160};
var svgWidth = 960,
    svgHeight = 450,
    width = svgWidth - margin.left - margin.right,
    height = svgHeight - margin.top - margin.bottom;
var logY = d3.scale.log()
    .domain([2000000,350000000])
   // .domain([150000000,180000000])
    .range([height,0]);
var linearY = d3.scale.linear()
    .domain([2000000,350000000])
   // .domain([150000000,180000000])
    .range([height,0]);
var y;
var x = d3.scale.linear()
    .domain([1790,2010])
   // .domain([1950,1960])
    .range([0,width]);
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(11,"d");
var yAxis = d3.svg.axis()
    .orient("left")
    .ticks(5,",d");
var transitionDuration = 2500;
var odata;
var data;
var line = d3.svg.line()
    .x(function(d){return x(d.year);})
    .y(function(d){return y(d.population);});
var svg = d3.select("svg").attr("width",svgWidth).attr("height",svgHeight).append("g").attr("transform", "translate("+margin.left+","+margin.top+")");
var xAxisSvg;
var yAxisSvg;
var pointsSvg;
var resamplePoints = function(){
    y=document.getElementById('logRadio').checked ? logY : linearY;
    data = [];
    var samplePoints = +document.getElementById('resolution').value+1;
    var skipPoints = odata.length/samplePoints;
    var linearPoints = [];
    var logPoints = [];
    var i, j;
    var interpPoints = 30;
    for(i=0;i<odata.length-1.001;i+=skipPoints){
        data.push(odata[Math.floor(i)]);
    }
    data.push(odata[odata.length-1]);
    for(i=0;i<data.length-1;i++){
        var logPop1 = Math.log(data[i].population);
        var logPop2 = Math.log(data[i+1].population);
        for(j=0;j<interpPoints;j++){
            linearPoints.push({
                year: data[i].year+j*(data[i+1].year-data[i].year)/interpPoints,
                population: data[i].population+j*(data[i+1].population-data[i].population)/interpPoints
            })
            logPoints.push({
                year: data[i].year+j*(data[i+1].year-data[i].year)/interpPoints,
                population: Math.exp(logPop1+j*(logPop2-logPop1)/interpPoints)
            })
        }
    }
    linearPoints.push(data[data.length-1]);
    logPoints.push(data[data.length-1]);
    var points = pointsSvg.selectAll("circle").data(data,function(d){return d.year});
    points.exit().style("opacity",0).remove();
    var newCircles = points.enter().append("circle").attr("r",5);
    points = pointsSvg.selectAll("circle").interrupt().attr("cx",function(d){return x(d.year)}).attr("cy",function(d){return y(d.population);});
    linearSvg.interrupt().datum(linearPoints,function(d){return d.year;}).attr("d",line);
    logSvg.interrupt().datum(logPoints).attr("d",line);
}
var updateScale = function(duration){
    y=document.getElementById('logRadio').checked ? logY : linearY;
    duration = duration !== undefined ? duration : transitionDuration;
    yAxis.scale(y);
    xAxisSvg.call(xAxis);
    yAxisSvg.transition().duration(duration).call(yAxis);
    var points = pointsSvg.selectAll("circle");    
    points.transition().duration(duration).attr("cx",function(d){return x(d.year)}).attr("cy",function(d){return y(d.population);});
    linearSvg.transition().duration(duration).attr("d",line);
    logSvg.transition().duration(duration).attr("d",line);
}
d3.csv('data.csv',function(d){
    return {year:+d.Year,population:+d.Population};
},function(od){
    odata = od;
    xAxisSvg = svg.append("g").attr("class", "x axis").attr("transform","translate(0,"+height+")");
    yAxisSvg = svg.append("g").attr("class", "y axis");
    pointsSvg = svg.append("g");
    linearSvg = svg.append("path").attr("class","line").attr("id","linear");
    logSvg = svg.append("path").attr("class","line").attr("id","log");
    document.getElementById('logRadio').addEventListener('click',function(){updateScale();});
    document.getElementById('linearRadio').addEventListener('click',function(){updateScale();});
    document.getElementById('resolution').addEventListener('change',resamplePoints);
    resamplePoints();
    updateScale(0);
});

</script>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>InfoVis vs DataVis</title>
</head>
<body>

<script type="text/javascript" src="//www.google.com/trends/embed.js?hl=en-US&q=data+visualization,+information+visualization&cmpt=q&tz&tz&content=1&cid=TIMESERIES_GRAPH_AVERAGES_CHART&export=5&w=960&h=500"></script>

</body>
</html><!DOCTYPE html>
<html>
<head>
  <meta charset='utf-8' />
  <title></title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.12.1/mapbox-gl.js'></script>
  <script src='http://api.tiles.mapbox.com/mapbox.js/plugins/turf/v2.0.2/turf.min.js'></script>  
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.12.1/mapbox-gl.css' rel='stylesheet' />
  <style>
    body { margin:0; padding:0; }
    #map { position:absolute; top:0; bottom:0; width:100%; }
  </style>
</head>
<body>

<div id='map'></div>
<script>

var Tour = function() {
  mapboxgl.accessToken = 'pk.eyJ1IjoidHdlbGNoIiwiYSI6Il9pX3dtb3cifQ.YcYnsO0X2p3x0HpHPFfleg';
  this.videos = {};
};

Tour.prototype.start = function() {
  this.map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/twelch/cihxvsxy000oeaikoz39jjthw',
    center: [-122.580067, 45.548602],
    zoom: 12,
    minzoom: 19
  });

  this.map.on('style.load', function () {
    this.startTour();
  }.bind(this));
};

Tour.prototype.startTour = function() {
  var time = 0;
  var timePerStep = 100;
  var interval = setInterval(function() {
    time += timePerStep;
    if (time === 4000) {this.easeIn();}
    if (time === 10500) {this.startPerson();}
    else if (time === 11000) {this.startVideo('front');}
    else if (time === 11500) {this.startVideo('back');}    
    //else if (time === 25000) {this.stopPerson();}
    else if (time === 20100) {this.pauseVideo('front');}
    else if (time === 20200) {this.pauseVideo('back');}    
    else if (time === 21300) {this.easeOut();}
    else if (time === 28300) {this.flyTo();}
  }.bind(this), timePerStep);
};

Tour.prototype.easeIn = function(text) {
  this.map.easeTo({
    zoom: 20,
    duration: 6000
  });
}

Tour.prototype.easeOut = function(text) {
  this.map.easeTo({
    zoom: 19,
    bearing: 180,
    pitch: 40,
    duration: 6000
  });
}

Tour.prototype.flyTo = function(text) {
  this.map.flyTo({
    center: [-122.589177, 45.548185], 
    zoom: 17,
    bearing: 270,
    speed: 0.3,
    curve: 0.5
  });
}

Tour.prototype.startPerson = function() {
  var iPath = turf.linestring([
    [ -122.579915799999981, 45.5485545, 0.0 ], [ -122.57994530000002, 45.5485536, 0.0 ], [ -122.579944, 45.5485996, 0.0 ], [ -122.580011, 45.54860810000001, 0.0 ], [ -122.5799507, 45.5486043, 0.0 ], [ -122.579954700000016, 45.5485489, 0.0 ], [ -122.579903799999983, 45.5485489, 0.0 ]
  ]);

  var iPathLength = turf.lineDistance(iPath, 'miles');
  var iPoint = turf.along(iPath, 0, 'miles');
  var iPathSoFar = turf.linestring([]);

  this.map.addSource("pDot", {
    "type": "geojson",
    "data": iPoint,
    "maxzoom": 20
  });

  this.map.addLayer({
    "id": "pDot",
    "type": "symbol",
    "source": "pDot",
    "layout": {
      "icon-image": "person-gray",
      "icon-size": {
        "base": 0.5,
        "stops": [
          [0,0.01],
          [15,0.01],
          [20,0.5]]
      },
    },
    "paint": {},
    "interactive": true
  });

  var step = 0;
  var numSteps = 400; //Change this to set animation resolution
  var timePerStep = 25; //Change this to alter animation speed
  var pDotSource = this.map.getSource('pDot');
  this.personinterval = setInterval(function() {
    step += 1;
    if (step > numSteps) {
      clearInterval(this.personInterval);
    } else {
      var curDistance = step / numSteps * iPathLength;      
      
      var iPoint = turf.along(iPath, curDistance, 'miles');
      pDotSource.setData(iPoint);
      
      iPathSoFar.geometry.coordinates.push(iPoint.geometry.coordinates);
      if (iPathSoFar.geometry.coordinates.length === 2) {
        this.pLineSource = new mapboxgl.GeoJSONSource({
          "type": "geojson",
          "data": iPathSoFar,
          "maxzoom": 20
        });
        this.map.addSource("pLine", this.pLineSource);

        this.map.addLayer({
          "id": "pLine",
          "type": "line",
          "source": "pLine",          
          "layout": {
            "line-join": "round",
            "line-cap": "round"
          },
          "paint": {
            "line-color": "#4999D2",
            "line-opacity": "0.6",
            "line-width": 6,
            "line-dasharray": [0.25,2],
            "line-blur": 1
          }
        }, "pDot");
      }
      if (iPathSoFar.geometry.coordinates.length >= 2) {
        this.pLineSource.setData(iPathSoFar);
      }    
    }
  }.bind(this), timePerStep);
};

Tour.prototype.stopPerson = function() {
  this.map.removeLayer('pLine');
  this.map.removeLayer('pDot');
  this.map.removeSource('pLine');
  this.map.removeSource('pDot');
  clearInterval(this.personInterval);
};

Tour.prototype.startVideo = function(name) {
  var videos = {
    'front': {
      "urls": ["https://cldup.com/KpVLU35SZv.webm", "https://cldup.com/B-IRzEIuWZ.mp4"],
      "coordinates": [
        [-122.580085, 45.548739],
        [-122.579842, 45.548739],
        [-122.579842, 45.548654],
        [-122.580085, 45.548654]
      ]
    },
    'back': {
      "urls": ["https://cldup.com/3JLxT-6DlL.webm"],
      "coordinates": [
        [-122.580393, 45.548566],
        [-122.580200, 45.548566],
        [-122.580200, 45.548498],
        [-122.580393, 45.548498]
      ]
    }    
  };

  var videoParams = videos[name];
  var videoSrc = new mapboxgl.VideoSource(videoParams);

  videoSrc.on('change', function (e) {
    this.videos[name] = videoSrc.getVideo();
  }.bind(this));

  this.map.addSource(name, videoSrc);
  this.map.addLayer({
    "id": name,
    "type": "raster",
    "source": name
  });
};

Tour.prototype.stopVideo = function(name) {
  this.videos.pause();
  this.map.removeLayer(name);
  this.map.removeSource(name);
};

Tour.prototype.pauseVideo = function(name) {
  this.videos[name].pause();
};

var tour = new Tour();
tour.start();

</script>

</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<title>SANKEY Experiment</title>
<style>
.node rect {
  cursor: move;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}
.node text {
  font: "Arial";
  pointer-events: none;
  text-shadow: 0 1px 0 #fff;
}

.link {
  fill: none;
  stroke-opacity: .2;
}
.link:hover {
  stroke-opacity: .5;
  
}

</style>

<body>

<div id="chart"></div>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="hybridsankey.js"></script>
<script>

var units = "Widgets"; 

var margin = {top: 10, right: 10, bottom: 10, left: 10};
var width = 950 - margin.left - margin.right;
var height = 500 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),    
    format = function(d) { return formatNumber(d) + " " + units; },
    color = d3.scale.category20();

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    //~ .attr("style", "outline: thin solid red;") 
  .append("g")
    .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");

// Set the sankey diagram properties

var sankey = d3.sankey()
    .nodeWidth(36)
    .nodePadding(40)
    .size([width, height]);

var path = sankey.link();

var anylink=function() {

	var curvature = .5;
		
	   function link(d) { 
		   d=JSON.parse(d);
		   console.log('d',d);
		var  x0=0,
		  x1 = x0+100,
		  xi = d3.interpolateNumber(x0, x1),
		  x2 = xi(curvature),
		  x3 = xi(1 - curvature),
		  y0=0,
		  y1 = y0+100;

	  return "M" + x0 + "," + y0
		   + "C" + x2 + "," + y0
		   + " " + x3 + "," + y1
		   + " " + x1 + "," + y1;
	}
	
	link.curvature = function(_) {
	  if (!arguments.length) return curvature;
	  curvature = +_;
	  return link;
	};

	return link;
};

var anypath = anylink();

var bouncecolor="#FF0000"

var linkcoldomain=["#0033cc","#ff6600","#0099cc"];

var nodecoldomain=["#CC9900","#99CCFF","#CCFFCC","#9900cc","#cc9900","#00cc99","#993300","#009933","#66ccff","#ff9900","#00ff99","#9900ff","#0066ff"];


// load the data
d3.json("hybridsankey.json", function(error, graph) {
	
	var lta=graph.attributeinfo.attributearray;
	var nta=graph.nodeinfo.nodetypearray;

  sankey	
      .nodes(graph.nodes)
      .links(graph.links)
      .layout(32);

// add in the links
  var link = svg.append("g").selectAll(".link")
      .data(graph.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", path)
      .style("stroke", function (d) { return linkcoldomain[lta.indexOf(d.attrib)]})
      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      .sort(function(a, b) { return b.dy - a.dy; });

// add the link titles
  link.append("title")
        .text(function(d) {
            return d.source.name + " → " + 
                d.target.name + "\n" + format(d.value); });

// add in the nodes
  var node = svg.append("g").selectAll(".node")
      .data(graph.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { 
          return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { 
          this.parentNode.appendChild(this); })
      .on("drag", dragmove));

// add the rectangles for the nodes
  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankey.nodeWidth())
      .style("fill", function(d) { 
		  var nodecol="";
		  if (d.nodetype=="Hard Bounce") {
			   nodecol=bouncecolor;
		  } else {nodecol=nodecoldomain[nta.indexOf(d.nodetype)]; }
          return nodecol;
          
          })
      .style("stroke", function(d) { 
          return d3.rgb(d.color).darker(2); })
    .append("title")
      .text(function(d) { 
          return d.name + "\n" + format(d.value); });

// add in the title for the nodes
  node.append("text")
      .attr("x", -6)
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "end")
      .attr("transform", null)
      .text(function(d) { return d.name; });
    //~ .filter(function(d) { return d.x < width / 2; })
      //~ .attr("x", 6 + sankey.nodeWidth())
      //~ .attr("text-anchor", "start");

// the function for moving the nodes
  function dragmove(d) {
    d3.select(this).attr("transform", 
        "translate(" + (
            d.x = Math.max(0, Math.min(width - d.dx, d3.event.x))
        )
        + "," + (
            d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))
        ) + ")");
    sankey.relayout();
    link.attr("d", path);
  }
  

    
});
 
</script>
 
</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>K-means</title>
    <style media="screen">
      body{
        margin: 0;
      }
      .point circle{
        fill:rgba(255, 255, 255, 1);
        stroke:#aaa;
        stroke-width:1px;
      }
      .lines line{
        stroke:#aaa;
        stroke-width:1px;
        stroke-opacity:.25;
      }
      .mean{
        opacity: 0;
        fill:rgba(255, 255, 255, .7);
        stroke-width:3px;
      }
    </style>
  </head>
  <body>
    <svg></svg>
  </body>
  <script src="lodash.min.js"></script>
  <script src="/blacki/raw/b83b3d4139257a353b8a/d3.min.js"></script>
  <script src="/blacki/raw/b83b3d4139257a353b8a/dat.gui.min.js"></script>
  <script src="/blacki/raw/b83b3d4139257a353b8a/d3-jetpack.js"></script>
  <script src="/blacki/raw/b83b3d4139257a353b8a/d3-starterkit.js"></script>
  <script src="d3-randompoints.js"></script>
  <script>
    var c24 =d3.shuffle(['#33cc33','#ff0000','#3366ff','#00e7b4','#a6cee3','#fb9a99','#b15928','#b4002f','#bcbc34','#393d77','#ff8200','#7800a8','#ff00d7','#ffc100','#b2df8a','#fdb56d','#cab2d6','#c39c95','#29bece','#cc70bc','#669c95','#ff7a9a','#e3026f','#006d33'])
    distributions = ['uniform','bates', 'irwinHall', 'normal', 'logNormal']
    o = {}
    o.actualClusters = 2
    o.guessClusters = 2
    o.ptsPerCluster = 1500/o.actualClusters
    o.objFuncThreshold = .5
    o.loop = true
    colors = c24.slice(-o.guessClusters)

    w = window.innerWidth
    h = window.innerHeight
    r = .005*d3.min([w,h])
    xRange = [r,w-r]
    yRange = [r,h-r]

    var lines,test,means,interval
    var distances = diff = d3.range(1,o.guessClusters+1).map(function (d) {return d*d3.max([w,h])})
    var data = clusterPoints(o.actualClusters,o.ptsPerCluster,'normal',xRange,yRange)
    var testPts = data.map(ƒ('points')).reduce(function (prev,curr) {return prev.concat(curr)})
    var meanPts = d3.shuffle(testPts).slice(-o.guessClusters)
    draw(data)
    interval  = setInterval(stepK,400)

    function distance(p1,p2){
      return Math.sqrt(Math.pow((p1.x - p2.x),2) + Math.pow((p1.y - p2.y),2));
    }
    function stop () {

    }
    function stepK(){
      if(!d3.sum(diff)||d3.sum(diff)<o.objFuncThreshold) return (o.loop)?o.restart():stop()
      means.data(meanPts)
        .transition().duration(400).delay(function(d,i) {return i*50})
        .attr('cx',ƒ('x')).attr('cy',ƒ('y'))
        .style('opacity',1)
      test.each(function (p,i) {
        curDistances = meanPts.map(function(m) { return distance(m,p) })
        p.curMean = curDistances.indexOf(d3.min(curDistances))
        d3.select(this)
          .style('stroke', function () {return colors[p.curMean]})

        d3.select('#line-'+i)
          .transition().duration(400).delay(function(d,i) {return i*100})
          .attr('x2',meanPts[p.curMean].x)
          .attr('y2',meanPts[p.curMean].y)
          .style('stroke', function () {return colors[p.curMean]})
      })
      var newMeans = []
      meanPts.forEach(function (m,i) {
        _p = test.filter(function (p) { return p.curMean == i }).data()
        _x = d3.mean(_p.map(ƒ('x')))
        _y = d3.mean(_p.map(ƒ('y')))
        newMeans.push({x:_x,y:_y})
      })
      meanPts = newMeans
      diff = distances.map(function (d,i) { return Math.abs(d-curDistances[i]) })
      distances = curDistances
    }

    function draw(data) {
      svg = d3.select('svg').attr({
        width:w,
        height:h,
      }).html('')

      lines = svg.append('g.lines').dataAppend(testPts,'line')
        .attr('id',function (l,i) {return 'line-'+i})
        .attr('x1',ƒ('x'))
        .attr('y1',ƒ('y'))
        .attr('x2',ƒ('x'))
        .attr('y2',ƒ('y'))

      test = svg.append('g.test').dataAppend(testPts,'g.point')

      test.append('circle').attr('r',r)
        .attr('cx',ƒ('x'))
        .attr('cy',ƒ('y'))

      means = svg.append('g.means').dataAppend(meanPts,'circle.mean')
        .attr('r',r+2)
        .attr('cx',ƒ('x'))
        .attr('cy',ƒ('y'))
        .style('stroke', function (d,i) {return colors[i]})
        .style('fill', function (d,i) {return '#fff'})


      var clusters = svg.append('g.actual').dataAppend(data,'g.cluster')
      clusters.dataAppend(ƒ('points'),'circle.point.ans')
        .attr('r',r)
        .attr('cx',ƒ('x'))
        .attr('cy',ƒ('y'))

      clusters.each(function (c,i) {
        d3.select(this)
          .selectAll('.point')
          .style('fill', function () {return colors[i]})
          .style('opacity',0)
          // .style('stroke', function (p) {return colors[i]})
      })
    }

    o.restart = function () {
      o.objFuncThreshold = Math.random() * 3
      o.guessClusters = d3.shuffle(d3.range(2,5))[0]
      o.ptsPerCluster = d3.shuffle(d3.range(500,1500))[0]/o.actualClusters
      colors = d3.shuffle(c24).slice(-o.guessClusters)
      distances = diff = d3.range(1,o.guessClusters+1).map(function (d) {return d*d3.max([w,h])})
      data = clusterPoints(o.actualClusters,o.ptsPerCluster,'normal',xRange,yRange)
      testPts = data.map(ƒ('points')).reduce(function (prev,curr) {return prev.concat(curr)})
      meanPts = d3.shuffle(testPts).slice(-o.guessClusters)
      draw(data)
      clearInterval(interval)
      interval  = setInterval(stepK,200)
    }

    var gui = new dat.GUI({width:300})
    gui.add(o, 'ptsPerCluster', 0, 1500).listen()
      .onChange(function (num) {
        data = []
        d3.selectAll('.cluster').each(function (d,i) {
          if(num>d.points.length-1){
            curData = _.extend({},d)
            rnd = randomPoints((num-d.points.length),'normal',d.xRange,d.yRange)
            curData.points = curData.points.concat(rnd)
            data.push(curData)
          }else{
            curData = _.extend({},d)
            curData.points = curData.points.slice(0,num)
            data.push(curData)
          }
        })
        o.restart()
      })
    gui.add(o, 'actualClusters').min(1).max(o.guessClusters+3).step(1).listen()
      .onChange(function() {
        o.ptsPerCluster = 1500/o.actualClusters
        o.restart()
      })
    gui.add(o, 'guessClusters').min(1).max(o.guessClusters+3).step(1).listen()
      .onChange(function() {o.restart()})
    gui.add(o, 'objFuncThreshold').min(0).max(o.guessClusters+3).step(.1).listen()
    gui.add(o, 'loop')
    gui.add(o, 'restart')
    gui.close()

  </script>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>

<div id="canvas-image-orthographic" style="left:200px"></div>

<script>
    (function() {
        var width = 600,
            height = 300,
            rotate = [10, 0],
            velocity = [0.004, 0],
            time = Date.now();

        var div = d3.select('#canvas-image-orthographic'),
            canvas = div.append('canvas')
                .attr('width', width)
                .attr('height', height);

        var context = canvas.node().getContext('2d');

        // Create and configure the Equirectangular projection
        var equirectangular = d3.geo.equirectangular()
            .scale(width / (2 * Math.PI))
            .translate([width / 2, height / 2]);

        // Store the rotation and scale of the projection
        var state = {x: 0, y: 0};


        // Create and configure the Orthographic projection
        var projection = d3.geo.orthographic()
            .scale(Math.sqrt(2) * height / Math.PI)
            .translate([width / 4, height / 2])
            .clipAngle(90)
            .rotate([state.x, state.y]);

        // Create the image element
        var image = new Image(width, height);
        image.onload = onLoad;
        image.src = 'world.png';

        // Copy the image to the canvas context
        function onLoad() {

            // Copy the image to the canvas area
            context.drawImage(image, 0, 0, image.width, image.height);

            // Reads the source image data from the canvas context
            var sourceData = context.getImageData(0, 0, image.width, image.height).data;

            // Creates an empty target image and gets its data
            var target = context.createImageData(image.width, image.height),
                targetData = target.data;

            // Iterate in the target image
            for (var x = 0, w = image.width; x < w; x += 1) {
                for (var y = 0, h = image.height; y < h; y += 1) {

                    // Compute the geographic coordinates of the current pixel
                    var coords = projection.invert([x, y]);

                    // Source and target image indices
                    var targetIndex,
                        sourceIndex,
                        pixels;

                    // Check if the inverse projection is defined for the current pixel
                    if ((!isNaN(coords[0])) && (!isNaN(coords[1]))) {

                        // Compute the pixel coordinates in the source projection
                        pixels = equirectangular(coords);

                        // Compute the index of the red channel of the source and target pixels
                        sourceIndex = 4 * (Math.floor(pixels[0]) + w * Math.floor(pixels[1]));
                        sourceIndex = sourceIndex - (sourceIndex % 4);

                        targetIndex = 4 * (x + w * y);
                        targetIndex = targetIndex - (targetIndex % 4);

                        // Copy the red, green, blue and alpha channels
                        targetData[targetIndex]     = sourceData[sourceIndex];
                        targetData[targetIndex + 1] = sourceData[sourceIndex + 1];
                        targetData[targetIndex + 2] = sourceData[sourceIndex + 2];
                        targetData[targetIndex + 3] = sourceData[sourceIndex + 3];
                    }

                }
            }


            // Clear the canvas element and copy the target image
//            context.clearRect(0, 0, image.width, image.height);
            context.putImageData(target, 0, 0);

        }

/*  d3.timer(function() {
  var dt = Date.now() - time;
  projection.rotate([rotate[0] + velocity[0] * dt, rotate[1] + velocity[1] * dt]);
  onLoad();
}); */

    })();

</script><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Mozfest example</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <style>
      body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
      .existing {color: blue;}
      .new {color: green;}
    </style>
  </head>
  <body>
    <h1>Mozfest: D3 intro - example04</h1>
    <!--<p> previous paragraph</p>-->
    <script type="text/javascript">
    	//loading a csv file
      d3.csv("tfl_passengers.csv", function(data) {
     		//use the nest method to group by year and count the locations.
      	var total = d3.nest()
        			  .key(function(d) { return d.period; })
        			  .sortKeys(d3.ascending)
        			  .rollup(function(d) { 
                          var sum = d.reduce(function(prev,current){
             								    return  parseInt(+(current.bus) + prev);
           									 }, 0);
              			    return sum;})
        							.entries(data);
      	
				
        //Width and height
        var w = 800;
       	var h = 500;
        
        //Create SVG element
        var svg = d3.select("body")
                    .append("svg")
                  	.attr("width", w)
                    .attr("height", h);
            
        //Bind data
        var rect = svg.selectAll("rect")
        							.data(total);
        
     		//For every new created rectangle visualize
        rect.enter()
          	.append("rect")
         		.attr("x", function(d,i) {return i* 21;}) //20 + 1 for padding
          	.attr("y", 0)
          	.attr("width", 20)
        		//.attr("height", function(d,i) {return d.values+"px";})
          	.attr("height", function(d,i) {return d.values / 10+"px";})
          	.style("fill",function(d,i) {
          		if (i > 1) {
            		return "#FF0000";
          		}
          		else {
            		return "#000000";
          		}
        		});
      	}); //end of csv method
    </script>
  </body>
</html>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/tabletop.js/1.4.2/tabletop.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crossfilter/1.3.12/crossfilter.js"></script>
  <style>
    body { margin:10;position:fixed;top:0;right:0;bottom:0;left:0; overflow-y:scroll;}
    #victims {
      float:left;
    }
    #detail {
      margin-top: 20px;
      float:left;
      clear: left;
    }
    .victim {
      width: 15px;
      height: 15px;
      border: 1px solid gray;
      float: left;
      font-size: 13px;
      font-family: Courier new;
      font-weight: bold;
      text-align: center;
      cursor: default;
    }
    .victim:hover {
      background-color: #c10023;
      color: #ffe0e0;
    }
  </style>
</head>

<body>
  <div id="loading">Loading</div>
  <div id="victims"></div>
  <div id="detail"></div>
  <script>
    
    /*
    // if Tabletop or the google spreadsheet stop working, uncomment this
    // to use a snapshot of the processed data captured 11/4/2015
    d3.json("snapshot.json", function(err, data) {
      render(data)
    })
    */
    
    var public_spreadsheet_url = 'https://docs.google.com/spreadsheets/d/1Iz_iuCBZspmR_A3UN4VID5Uj3eSMYzOdgrZtVtQDZNE/pubhtml';

    Tabletop.init( { key: public_spreadsheet_url,
                     callback: process,
                     simpleSheet: false } );
    
    function process(data, tabletop) {
      //console.log("tabletop", tabletop)
      console.log("data", data);
      var months = Object.keys(data);
      console.log("months", months)
      
      function getName(d) {
        var name = d['Name'] || d["Victim's Name"];
        return name;
      }
      function getRace(d) {
        var race = d['Race'];
        if(race === "Unknown" || race === "Unkown race" || !race) {
          return "Unknown"
        }
        if(race === "Hispanic/Latino" || race === "Hispanic") {
          return "Hispanic"
        }
        return race;
      }
      function getUnarmed(d) {
        var unarmed = d['Unarmed?'] || d['Armed?'] || d['Unarmed/Armed']
        if(d['Armed?'] && unarmed === "No") unarmed = "Unarmed"
        return unarmed;
      }
      function getDate(d) {
        var date = d['Date of Incident'] || d['Date']
        if(!date && d['Month']) {
          date = d['Month'] + "/" + d['Day'] + "/" + d['Year']
        }
        if(!date && d['month']) {
          date = d['month'] + "/" + d['day'] + "/" + d['year']
        }
        //console.log(date, new Date(date))
        return new Date(date);
      }
      function getSource(d) {
        var source = d['News source'] || d['Source Article'] || d['Source'] || d['Source Link'] || d['Source 1'] || d['Source 2'] || d['Link to Source Article']
        return source;
      }
      
      var combined = [];
      months.forEach(function(month) {
        var entries = data[month].elements;
        console.log(month, entries.length)
        var e0 = entries[0];
        var keys = Object.keys(e0);
        console.log(month, keys);
        entries.forEach(function(d) {
          var c = {
            name: getName(d),
            race: getRace(d),
            gender: d['Gender'],
            state: d['State'],
            unarmed: getUnarmed(d),
            date: getDate(d),
            source: getSource(d)
          }
          combined.push(c);
        })

        
      })
      console.log("combined", combined.length)
      combined.sort(function(a,b) {
        return b.date - a.date
      })
      //console.log(JSON.stringify(combined, null, 2));
      render(combined); 
    }
    
    function render(combined) {

      // let's do some filtering/grouping of the data
      var xf = crossfilter(combined);
      var race = xf.dimension(function(d) { return d.race })
      var races = race.group().all()
      console.log("races", races);

      var gender = xf.dimension(function(d) { return d.gender })
      var genders = gender.group().all()
      console.log("gender", genders);

      var unarmed = xf.dimension(function(d) { return d.unarmed })
      var unarmeds = unarmed.group().all()
      console.log("unarmeds", unarmeds);


      d3.select("#loading").style("display", "none");

      var dateFormat = d3.time.format("%b %d, %y")	

      var victims = d3.select("#victims").selectAll("div.victim")
        .data(combined)
      var venter = victims.enter().append("div").classed("victim", true)
      .text(function(d) { return d.race[0] })
      .on("mouseover", function(d) {
        var text = d.name + ", a " + d.race + " " + d.gender + " was killed by Police in " + d.state + " on " + dateFormat(new Date(d.date)) + ". ";
        d3.select("#detail").text(text)
        .append("a").attr({
          href: d.source
        }).text(d.source)
      })

    }



  </script>
</body>
<!doctype html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<title>Cube</title>
	<link rel="stylesheet" href="style.css">
</head>
<body>
<div class="cube-container">
	<div class="cube">
		<div class="front">1</div>
		<div class="right">2</div>
		<div class="top">3</div>
		<div class="bottom">4</div>
		<div class="left">5</div>
		<div class="back">6</div>
	</div>
</div>
</body>
</html><!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Sky</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
    </head>
    <body>
        <svg width="960" height="500">
        </svg>
    </body>
    <script src="index.js"></script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<head>
<style>

.bar {
  fill: #9bd2ce;
}

.bar:hover {
  fill: #49ada6;
}

.axis {
  font: 8px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

</style>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 10, right: 10, bottom: 15, left: 20},
    width = 380 - margin.left - margin.right,
    height = 80 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("data.csv", type, function(error, data) {
  x.domain(data.map(function(d) { return d.max; }));
  y.domain([0, d3.max(data, function(d) { return d.freq; })]);

  var fullSet = data.map(function(d) { return d.max; });
 
  xAxis.tickValues([fullSet[1], fullSet[7], fullSet[13], fullSet[19]]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.max); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.freq); })
      .attr("height", function(d) { return height - y(d.freq); });
});

function type(d) {
  d.freq = +d.freq;
  return d;
}

</script>
</body><!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Fade to Front</title>
	<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
	<style type="text/css">

		svg * {
			cursor: pointer;
		}

		circle {
			fill: #E80D4B;
		}

		rect {
			fill: #34AEFF;
		}

		ellipse {
			fill: #00FF66;
		}

	</style>
</head>
<body>
<script>



var width = 960;
var height = 500;
var speed = 1000;

//Create the SVG
var svg = d3.select("body").append("svg")
			.attr("width", width)
			.attr("height", height);

//Make a circle
svg.append("circle")
	.attr("cx", width * 0.3)
	.attr("cy", height * 0.5)
	.attr("r", height * 0.4)
	.style("opacity", 1.0);

//Make a rectangle
svg.append("rect")
	.attr("x", width * 0.3)
	.attr("y", height * 0.2)
	.attr("width", width * 0.3)
	.attr("height", height * 0.6)
	.style("opacity", 1.0);

//Make an ellipse
svg.append("ellipse")
	.attr("cx", width * 0.7)
	.attr("cy", height * 0.5)
	.attr("rx", height * 0.55)
	.attr("ry", height * 0.3)
	.style("opacity", 1.0);

//Bind the same click behavior to all three
d3.selectAll("circle, rect, ellipse")
	.on("click", function() {
		//When clicked, call fadeToFront()
		d3.select(this).each(fadeToFront);
	});



//Moves SVG elements to the end of their container, so they appear "on top".
//Achieves a nice, smooth fade by duplicating the clicked element, moving the
//dupe to the front, then fading it in, while fading out the original element
//at the same time.  Tricky!
var fadeToFront = function() {

	//Select this element, that we want to move to front
	var orig = d3.select(this);
	var origNode = orig.node();
	
	//Clone it, and append the copy on "top" (meaning, at the end of
	//the parent element, which is <svg> in this case)
	var dupe = d3.select(origNode.parentNode.appendChild(origNode.cloneNode(true), origNode.nextSibling));

	//Make the new element transparent immediately, then fade it in over time
	dupe.style("opacity", 0.0)
		.transition()
		.duration(speed)
		.style("opacity", 1.0)
		.each("end", function() {

			//When the fade-in is complete, add the click event…
			d3.select(this).on("click", function() {
				d3.select(this).each(fadeToFront);
			});

			//…and delete the original
			orig.remove();

		});

}



</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Fade to Front</title>
	<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
	<style type="text/css">

		svg * {
			cursor: pointer;
		}

		circle {
			fill: #E80D4B;
		}

		rect {
			fill: #34AEFF;
		}

		ellipse {
			fill: #00FF66;
		}

	</style>
</head>
<body>
<script>



var width = 960;
var height = 500;
var speed = 1000;

//Create the SVG
var svg = d3.select("body").append("svg")
			.attr("width", width)
			.attr("height", height);

//Make a circle
svg.append("circle")
	.attr("cx", width * 0.3)
	.attr("cy", height * 0.5)
	.attr("r", height * 0.4)
	.style("opacity", 1.0);

//Make a rectangle
svg.append("rect")
	.attr("x", width * 0.3)
	.attr("y", height * 0.2)
	.attr("width", width * 0.3)
	.attr("height", height * 0.6)
	.style("opacity", 1.0);

//Make an ellipse
svg.append("ellipse")
	.attr("cx", width * 0.7)
	.attr("cy", height * 0.5)
	.attr("rx", height * 0.55)
	.attr("ry", height * 0.3)
	.style("opacity", 1.0);

//Bind the same click behavior to all three
d3.selectAll("circle, rect, ellipse")
	.on("click", function() {
		//When clicked, call fadeToFront()
		d3.select(this).each(fadeToFront);
	});



//Moves SVG elements to the end of their container, so they appear "on top".
//Achieves a nice, smooth fade by duplicating the clicked element, moving the
//dupe to the front, then fading it in, while fading out the original element
//at the same time.  Tricky!
var fadeToFront = function() {

	//Select this element, that we want to move to front
	var orig = d3.select(this);
	var origNode = orig.node();
	
	//Clone it, and append the copy on "top" (meaning, at the end of
	//the parent element, which is <svg> in this case)
	var dupe = d3.select(origNode.parentNode.appendChild(origNode.cloneNode(true), origNode.nextSibling));

	//Make the new element transparent immediately, then fade it in over time
	dupe.style("opacity", 0.0)
		.transition()
		.duration(speed)
		.style("opacity", 1.0)
		.each("end", function() {
			//When the fade-in is complete, add the click event
			d3.select(this).on("click", function() {
				d3.select(this).each(fadeToFront);
			});
		});

	//Fade the old one out at the same rate that the new one is faded in
	orig.transition()
		.duration(speed)
		//not necessary
		//.style("opacity", 0.0)
		.each("end", function() {
			//When the dupe transistion is complete, delete this element
			d3.select(this).remove();
		});

}



</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Adding Tooltips</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: #637660;
			}

			svg {
				background-color: #c0c0c0;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		
			//width and height
			var w = 700;
			var h = 1500;

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("global-findex.csv", function(data) {

				data.sort(function(a, b) {
					//return d3.descending(a.AccountAtaBank, b.AccountAtaBank);
					return d3.descending(+a.AccountAtaBank, +b.AccountAtaBank);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.AccountAtaBank, +b.AccountAtaBank);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return d.AccountAtaBank * 7;
					})
					.attr("height", 7)
					.attr("fill", "white")
					.append("title")
					.text(function(d) {
						return d.country + "'s percentage of people with a bank account is " + d.AccountAtaBank + "%.";
					});

			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<!-- 
	original html from bostock #3048450, 
	modified to show histogram data from numpy 
-->
<style>

body {
  font: 10px sans-serif;
}

.bar rect {
  fill: #31a354;
  shape-rendering: crispEdges;
  stroke: #a1d99b;
}

.bar text {
  fill: #fff;
  font-weight: bold;
}

.axis path, .axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.histogram-title {
    font-size: 2em;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

// A formatter for counts.
var formatCount = d3.format(",.0f");

var margin = {top: 10, right: 30, bottom: 30, left: 30},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

d3.json("histo.json", function(error, histodata) {

    var d, data = [];
    
    // read in histogram data that was generated previously with python numpy
    for (i=0; i<histodata.division.length; i++) {
        d = [];
        d['x'] = parseFloat(histodata.division[i]);
        d['y'] = parseInt(histodata.count[i]);
        data.push(d);
    }
    
    var w = (histodata.division[histodata.division.length-1]-histodata.division[0])/10;

    var x = d3.scale.linear()
        .domain([0, d3.max(data, function(d) { return d.x; })])
        .range([0, width]);
    
    var y = d3.scale.linear()
        .domain([0, d3.max(data, function(d) { return d.y; })])
        .range([height, 0]);

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom");

    var svg = d3.select("body").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var bar = svg.selectAll(".bar")
        .data(data)
      .enter().append("g")
        .attr("class", "bar")
        .attr("transform", function(d) { return "translate(" + x(d.x) + "," + y(d.y) + ")"; });

    bar.append("rect")
        .attr("x", 1)
        .attr("width", x(w) - 1)
        .attr("height", function(d) { return height - y(d.y); });

    bar.append("text")
        .attr("dy", ".75em")
        .attr("y", 6)
        .attr("x", x(w) / 2)
        .attr("text-anchor", "middle")
        .text(function(d) { return formatCount(d.y); });

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);
    
    svg.append("text")
        .attr("class", "histogram-title")
        .attr("y", height - 80)
        .attr("x", width)
        .attr("text-anchor", "end")
        .text(histodata.title);
    });

</script>
</body>
</html><html>
<head>
    <meta charset="utf-8">
    <style>body { position: fixed; top:0; left:0; bottom:0; right: 0; } svg { width: 100%; height: 100%} </style>
</head>
<body>
    <svg></svg>
    
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>
        //Overview: There are two images, one blurred and one not blurred.
//  To acheive the unblur effect, a clipping mask with a bunch of circles
//  is used on the blurred image. 
var svg = d3.select("svg")

//Config
var circleRadius = 40;
var blurAmount = 5;
var clipDelay = 400;
var clipDuration = 7000;
var clipEase = 'quad'; //quad and circle look good

//CLIP
var clips = svg.append('svg:defs')
    .append('svg:mask')
    .attr({id: 'mask'});

var addMask = function addMask(x,y){
    //To achieve the unblur effect, we add circles to the clip mask
    var clip = clips.append('svg:circle')
        .attr({ 
            cx: x, 
            cy: y, 
            r: circleRadius, 
            fill: '#ffffff',
            'class': 'clipCircle'
        });
  return clip;
};

//Blur filter
var defs = svg.append('svg:defs');
var filterBlur = defs.append('svg:filter')
	.attr({ id: 'blur' });
filterBlur.append('feGaussianBlur')
		.attr({
      		'in': "SourceGraphic",
      		'stdDeviation': blurAmount
		});

//IMAGE
var imageUrl = 'http://i.imgur.com/Lk4L4Pg.jpg';

//Add blurred image
svg.append('svg:image')
    .attr({
      x: 0,
      y: 0,
      filter: 'url(#blur)',
      'xlink:href': imageUrl,
      width: 800,
      height: 500,
      fill: '#336699'
    })

//MASK
//  Add masked image (regular, non blurred image which will be revealed
var mask = svg.append('svg:image')
    .attr({
        x: 0,
        y: 0,
        'xlink:href': imageUrl,
        'mask': 'url(#mask)',
        width: 800,
        height: 500, filter: 'url(#blur2)',
        fill: '#336699'
    });

var mouseMove = function move(e){
    //erase on mouse over
    var x = parseInt(d3.event.pageX - 5 + circleRadius/2,10);
    var y = parseInt(d3.event.pageY - 5 - circleRadius,10);

    //Add mask
    var clip = addMask(x,y);

    clip.transition().ease(clipEase)
        .delay(clipDelay)
        .duration(clipDuration)
        .attr({ 
            fill: '#000000', 
            r: 0
        })
        .each('end', function end(){
            this.remove();
        })

};

//attach event
svg.on('mousemove', mouseMove);

    </script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>
#circle circle {
  fill: none;
  pointer-events: all;
}
.group path { 
  fill-opacity: 1; 
}
.label { 
  font: 8px sans-serif; 
}
.fade { 
  opacity: 0; 
}
.family { 
  fill: tomato; 
}
.attention {
  font-weight: bold;
  fill: red;
  stroke: #000;
  stroke-width: .25px;
}
#circle:hover path.fade { 
  display: none; 
}
</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var width = 620,
	height = 620,
	padding = 650,
	outerRadius = Math.min(width, height) / 2 - 10,
	innerRadius = outerRadius - 24;

/* the 3 pieces needed for Chord Diagram */
// arc generator
var arc = d3.svg.arc()
	.innerRadius(innerRadius)
	.outerRadius(outerRadius);

// chord layout
var layout = d3.layout.chord()
	.padding(.04)
	.sortSubgroups(d3.ascending) 
	.sortChords(d3.ascending) 

// chord generator 
var path = d3.svg.chord()
	.radius(innerRadius);

var svg = d3.select("body").append("svg")
	.attr("width", width + padding)
	.attr("height", height + padding)
  .append("g")
    .attr("id", "circle") // #circle
    .attr("transform", "translate(" + (width + padding) / 2 + "," + (height + padding) / 2 + ")");

svg.append("circle")
	.attr("r", outerRadius);

var key = ["Sharyn Vaught","Caryn Vaught","Miles Penn","Jeffrey J. Penn","Ann Kittenplan","Esteban Reyes",
           "Guglielmo Redondo","\"Sleepy TP\" Peterson","John \"N.R.\" Wayne","Kieran McKenna",
           "Eliot Kornspan","Jennie Bash","Erica Siress","Cisne","Brian van Vleck","Tunnel Club",
           "\"Axhandle\" Axford","Lamont Chu","Amy Wingo","Shoshana Abrams","Lori Clow",
           "Audern Tallat-Kelpsa","Keith B. \"The Viking\" Freer","Philip Traub","Carol Spodek",
           "Frances L. Unwin","Diane Prins","Josh Gopnik","Younger Players","Tina Echt","Gretchen Holt",
           "Bernadette Longley","Carl \"Mobes\" Whale","Jolene Criess","Virgilio","Kyle D. Coyle",
           "Felicity Zweig","Evan Ingersoll","Peter Beak","Zoltan Csikzentmihalyi","Bernard Makulic",
           "Idris \"Id\" Arslanian","Jeff Wax","Stephen Wagenknecht","Chip Sweeny","Graham \"Yard-Guard\" Rader",
           "Petropolis Kahn","Ortho \"The Darkness\" Stice","Todd \"Postal Weight\" Postalthwaite",
           "\"U.S.S.\" Milicent Kent","Kent Blott","Anton \"Booger\" Doucette","Otis P. Lord","Players",
           "Dymphna","Univ. of Arizona","Coach Kirk White","Dean of Admissions","Gerhardt Schtitt",
           "Mario","Dir. of Composition","Lyle","The Moms","Militant Grammarians of Mass.",
           "Dean of Academic Affairs","Dean of Athletic Affairs","Theirry Poutrincourt","Mary Esther Thode",
           "Ruth","Barry Loach","\"Lateral\" Alice Moore","Elizabeth Tavis","Therese Loach","Aubrey deLint",
           "Rik Dunkel","Charles Tavis","Ken N. Johnson","Tony Nwangi","E.T.A","Prorectors","Corbett Thorp",
           "Cantrell","Mrs. Clarke","Dr. E. Zegarelli","Neil Hartigan","Tex Watson","Donnie Stott",
           "Veach","Dolores Rusk","Syrian Satellite Pro","Slodoban","Miriam Prickett","Meniscus Films, Ltd.",
           "Teachers","Flottman","Fentress","Poor Yorick Entertainment Unltd.","Latrodectus Mactans Prod.",
           "Heliotrope Films, Ltd.","Disney R. Leith","Urguhart Oglivie Jr.","Lingley","Pettijohn",
           "Soma Richardson-Levy-O'Bryne Chawaf","Ibn-Said Chawaf","Molly Cantrell Notkin","Melinda",
           "Vogelsong","Notkin's Party","Rutherford Keck","Crosby Baum","Reeves Mainwaring","Iaccarrino",
           "Kenkle","Calvin Thrust","Otto Brandt","Dave \"Fall Down Very\" Harde","ETA Physical Plant & Maintenance",
           "WETA","Fully Functional Phil","Fond du Lac NoCoat Inc","LipoVac Unltd.","Nunhagen Aspirin",
           "Tenuate","Am. Council of Disseminators of Cable","Viney and Veals","Bernard Wayne","James Struck Jr.",
           "Jim Troeltsch","Gloeckner","Stockhausen","P. Tom Veals","Carl E. \"Buster\" Yee","Van Slack",
           "Hugh Pemberton","Tall Paul Shaw","Marueen Hooley","Interlace","Noreen Lace-Forche","Ted Schacht",
           "Seniors (18s)","Michael Pemulis","Albertan Mogul","Glad","Canadian P.M","Mexican President","Johhny Gentle, Famous Crooner",
           "O.N.A.N","Acme Inc.","Neil in Spin","Harv","Clean U.S. Party","Dick Desai","Inner Infant Group","Jim",
           "Bridget C. Boone","Thomas M. Flatto","Input/Output","Rodney Tine Sr.","Rodney Tine Jr.",
           "O.U.S","Kevin Bane","Bain's Sister","Dick Willis","Vienna VA Szech. Steakhouse",
           "Saprogenic Greetings","Marlon K. Bain","Luria Perec","Henri F. Hoyne","at ETA","Hal","Smothergill",
           "Miriam Hoyne","Fortier","Dwight Flechette","Helen/Hugh Steeply","Broullime","Other Members","Balbalis",
           "Steeply's father","Nickerson","B.U.","Orin","Mo Cheery","Muminsky","R. Ossowiecke","Joubet","Desjardins",
           "Tassigny","Beausoleil","Moment Mag.","\"Jethro Bodine\"","Eric Clipperton","Bain Parents","Marathe",
           "Marathe's father","Heart in Purse","Gertraud","Ross Reat","Himself","James I. Sr.","St. Abt. L'Ist, QC",
           "Mario Sr.","engineer","\"Dark Star\" McNair","The Filmography","Miss Diagnosis","The Entertainment",
           "Dr. Wo","60 Minutes +/-","WYYY","MIT","A.Y. Rickey","U.H.I.D","Joelle van Dyne","Joe Lon van Dyne",
           "Medical Attache's Wife","Saudi Minister of Home Entertainment","Medical Attache","\"Uncle\" Lum Riney","\"Madame Psychosis\"",
           "Lady Delphina","Pamela Hoffman-Jeep","Stavros Lobokulas","Sir Osis of Thuliver","Gately","Gately's Mom",
           "former Navy M.P.","Doshka Bulat","Vinnie Nucci","Mrs. Waite","St. Elizabeth's Hospital","\"Fax\" Fackelmann",
           "\"Quo Vadis\" Kite","White Flag","\"Ferocious\" Francis Gehaney","Revere ADA","The wraith","Dr. Pendleton",
           "Dr. Pressburger or Prissburger","Cathy or Kathy","Tooty","Crocodiles","T.S.B.Y.S.C.D","Robert F. \"Bob Death\"",
           "Whitey Sorkin","Gwendine O'Shay","Eighties Bill","Dr. Robert \"Sixties Bob\" Monroe","John L.","Louise B.",
           "Tamara N.","Dickey N.","Jack J.","Sven S.","Bud O.","Glenn K.","Danielle Steenbok","Didi Neaves","Clenette Henderson",
           "Clenette's momma","Dolores Epps","Columbus Epps","Clenette's father/Roy Tony's brother","Reginald","Reginald's momma",
           "Wardine","Antitois","Wade McDade","Alfonso Parias-Carbo","Dwayne R. \"Doony\" Glynn","\"The Madame\"","Roy Tony",
           "William","Shantell","Roy","Wardine's momma","Calgarian Pro-Canada Phalanx","Jeu Du Prochain Train","Le Bloc QC",
           "Les Fils de Montcalm","La Culte de Baiser Sans Fin","Brandeis","Sepratisteurs Quebecois","Les Fils de Papineau",
           "Le Parti Quebecois","Guillaume Duplessis","Quebec Liberation Front","Wheelchair Assassins","Test Subjects",
           "Sheraton Commander","Da","Matty Pemulis","Lucien","Bertraund","Antitoi Entertainment","Susan T. Cheese",
           "Bridget Tenderhole","Lolasister","Equus Reese","Kate Gompert","Ken Erdedy","\"Poor Tony\" Krause","Ruth Van Cleve",
           "Dr. Garton","Ernest Feaster","Burt F. Smith","Emil \"yrstrly\" Minty","Bobby C.","DesMont(e)s","Purpleboy","Randy Lenz",
           "\"Wild Conceits\"","Mrs. Lenz","Tommy Doocey","Kely Vinoy","Yolanda Willis","2 Chinese Ladies","Residents",
           "Geoffrey T. Day","Bruce Green Sr.","Harriet Bonk Green","Mildred Bonk Green","Bruce Green","Ennet House",
           "Guy w/o First Name","Ennet House Staff","Johnette Marie Foltz","Eugenio Martinez","Ennet House Admin.",
           "Ennet House Unit 6","Ennet House Unit 5 \"The Shed\"","Tree Lady","Mrs. Lopate","Mars Montesian",
           "Pat Montesian","Annie Parrot","Janice","Ennet House Counselors","Enfield Marine Public Health Hospital Complex",
           "Maureen N.","Pointgrave","Enfield Marine Public Health Hospital Complex Unit 4","Retired Air Force Nurse Who Asks For Help",
           "Charlotte Treat","Tiny Ewell","\"Franklin W. Dixon\"","Money Stealers Club","Gavin Diehl","Nell Gunther",
           "Glenn K. Kubitz","Hester Thrale","Selwyn","Jennifer Belbin","Morris Hanley","Chandler Foss",
           "David Krane","April Cortelyu","Skull","Amy Johnson","Tingley"];

d3.csv("IJ.csv", form_the_data, function(error, data) {
  var matrix = data;
  
  // compute the chord layout
  layout.matrix(matrix);

  // add a group per character
  // each group is a row in the matrix
    
  var group = svg.selectAll(".group")
	  .data(layout.groups)
    .enter()
      .append("g")
      .attr("class", "group")
      .on("mouseover", mouseover)
      .on("mouseout", mouseout);
	
  // add the group arc
  var groupPath = group.append("path")
    .attr("id", function(d, i) {
      return "group" + i; 
	})
	.attr("d", arc)
	.style("fill", "#2171b5");
		
  // add a text label
  var x; // offset variable
  var labels = svg.selectAll(".label")
    .data(layout.groups);
	
  labels.enter()
    .append("g")
	.attr("class", "label")
	.attr("transform", function(d) {
	  return "rotate(" + (d.startAngle * 180 / Math.PI - 90) + ")"
		+ "translate(" + outerRadius + ",0)";
	})
	.append("text")
	.attr("x", function(d, i){ // stagger the labels on both sides of circle
	  if (d.startAngle > Math.PI) { // left side of circle
		  x = [8, -70, -148, -226];
	  } else if (d.startAngle < Math.PI) { // right side of circle
		  x = [8, 86, 164, 242];
	  }            
	  return x[(i % 4)];
	})
	.attr("dy", function(d, i){ 
		if (d.startAngle > Math.PI) { // left side of circle
		  return (i % 2 == 0) ? "-.35em" : ".35em";
	  } else if (d.startAngle < Math.PI) { // right side of circle
		  return (i % 2 == 0) ? ".35em" : "-.35em";
	  }
	})
	.attr("transform", function(d) { return d.startAngle > Math.PI ? "rotate(180)translate(-16)" : null; })
	.style("text-anchor", function(d) { return d.startAngle > Math.PI ? "end" : null; })
	.text(function(d, i){ return key[i]; })
	.on("mouseover", mouseover)
    .on("mouseout", mouseout);
	

	/* fix specific overlaps */     
    // right side of circle
    x = [8, 86, 164, 242];
    
    labels.selectAll("text").filter(function(p) { return p.index == 62; }) // the moms
      .attr("x", x[0]); // first row
    
    labels.selectAll("text").filter(function(p) { return p.index == 59; }) // mario
      .attr("x", x[1]); // second row
    
    labels.selectAll("text").filter(function(p) { return p.index == 80; }) // corbett thorp
      .attr("x", x[2]); // third row
    
    labels.selectAll("text").filter(function(p) { return p.index == 73; }) // aubrey delint
      .attr("x", x[3]); // fourth row
    
    labels.selectAll("text").filter(function(p) { return p.index == 97; }) // lactrodectus mactans prod.
      .attr("x", x[2]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 117; }) // eta physical plant & maint.
      .attr("x", x[2]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 164; }) // vienna va steakhouse
      .attr("x", x[1]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 173; }) // fortier
      .attr("x", x[0]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 163; }) // dick willis
      .attr("x", x[1])
      .attr("dy", ".1em");
    
    labels.selectAll("text").filter(function(p) { return p.index == 161; }) // kevin bane
      .attr("x", x[2]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 158; }) // rodney tine sr
      .attr("x", x[1]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 103; }) // soma richardson-....
      .attr("x", x[2]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 64; }) // dean of academic affairs
      .attr("dy", "-.1em"); 
  
    labels.selectAll("text").filter(function(p) { return p.index == 128; }) // jim troeltsch
      .attr("dy", "-.1em"); 
   
    labels.selectAll("text").filter(function(p) { return p.index == 146; }) // johnny gentle, f.c.
      .attr("x", x[1]);
    
    // left side of circle
    x = [8, -70, -148, -226];
    
    labels.selectAll("text").filter(function(p) { return p.index == 174; }) // dwight flechtte
      .attr("x", x[3]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 178; }) // balbalis
      .attr("x", x[3])
      .attr("dy", "-.5em");
    
	labels.selectAll("text").filter(function(p) { return p.index == 209; }) // 60 min +/-
      .attr("x", x[2]);
    
	labels.selectAll("text").filter(function(p) { return p.index == 206; }) // miss diagnosis
      .attr("x", x[3]);
    
	labels.selectAll("text").filter(function(p) { return p.index == 203; }) // engineer
      .attr("x", x[0]);
    
	labels.selectAll("text").filter(function(p) { return p.index == 200; }) // james I. sr.
      .attr("x", x[3])
      .attr("dy", ".5em");
    
	labels.selectAll("text").filter(function(p) { return p.index == 197; }) // gertraud
      .attr("dy", "-.5em");
    
	labels.selectAll("text").filter(function(p) { return p.index == 204; }) // dark star mcnair
      .attr("dy", "-.7em");
    
    labels.selectAll("text").filter(function(p) { return p.index == 216; }) // medical attache's wife
      .attr("x", x[3]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 211; }) // MIT
      .attr("dy", "-.3em");
    
    labels.selectAll("text").filter(function(p) { return p.index == 225; }) // gately
      .attr("x", x[2]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 170; }) // hal
      .attr("dy", "-.5em");
    
    labels.selectAll("text").filter(function(p) { return p.index == 181; }) // b.u.
      .attr("dy", ".5em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 226; }) // gately's mom
      .attr("dy", ".1em");
    
	labels.selectAll("text").filter(function(p) { return p.index == 242; }) // crocodiles
      .attr("dy", ".1em");
    
	labels.selectAll("text").filter(function(p) { return p.index == 249; }) // john l.
      .attr("x", x[2]);
    
	labels.selectAll("text").filter(function(p) { return p.index == 263; }) // clenette's father/roy tony's brother
      .attr("x", x[0]);
      
    labels.selectAll("text").filter(function(p) { return p.index == 265; }) // reginald's momma
      .attr("x", x[2]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 264; }) // reginald
	  .attr("dy", "-1em");
    
	labels.selectAll("text").filter(function(p) { return p.index == 278; }) // prochain train
	  .attr("dy", "-1em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 289; }) // test subjects
	  .attr("x", x[2]);
	
	labels.selectAll("text").filter(function(p) { return p.index == 292; }) // matty pemulis
	  .attr("dy", ".3em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 303; }) // ruth van cleve
	  .attr("x", x[2])
	  .attr("dy", ".1em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 301; }) // ken erdedy
	  .attr("dy", "-.1em");
    
    labels.selectAll("text").filter(function(p) { return p.index == 296; }) // susan t. cheese
	  .attr("dy", "-.5em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 306; }) // burt f. smith
	  .attr("dy", "-.5em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 312; }) // wild conceits
	  .attr("dy", ".4em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 325; }) // guy w/o first name
	  .attr("x", x[2]);
	
	labels.selectAll("text").filter(function(p) { return p.index == 313; }) // mrs. lenz
	  .attr("dy", ".7em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 322; }) // mildred bonk green
	  .attr("x", x[1]);
	
	labels.selectAll("text").filter(function(p) { return p.index == 314; }) // tommy doocey
	  .attr("dy", ".1em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 327; }) // johnette marie foltz
	  .attr("x", x[0]);
    
    labels.selectAll("text").filter(function(p) { return p.index == 329; }) // ennet house admin.
	  .attr("x", x[2]);
	  
	labels.selectAll("text").filter(function(p) { return p.index == 328; }) // eugenio martinez
	  .attr("x", x[1])
	  .attr("dy", "-.1em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 339; }) // ennet marine public health...
	  .attr("x", x[2])
    
    labels.selectAll("text").filter(function(p) { return p.index == 338; }) // ennet house counselors
	  .attr("x", x[1])
	  .attr("dy", "-1em");
	
	labels.selectAll("text").filter(function(p) { return p.index == 343; }) // retired air force nurse...
	  .attr("x", x[0])
	
    labels.selectAll("text").filter(function(p) { return p.index == 360; }) // tingley
	  .attr("dy", ".5em")
	
  // add the chords
  var chord = svg.selectAll(".chord")
      .data(layout.chords)
    .enter()
	  .append("path")
	  .attr("class", "chord")
	  .style("fill", function(d, i) { 
	    if ((d.source.value == 2) && (d.target.value == 2)) { // family
		  return "tomato"; 
		} else {
		  return "#1a9850";
		}
	  })
	  .attr("d", path);
		
  function mouseover(d, i) {  
    var active_chords = d3.selectAll(".chord")
      .filter(function(p) {
        return p.source.index == d.index ||
               p.source.subindex == d.index;
      })
	
    // all the indices of labels the active chords touch
    var active_labels = [];
    active_chords.data().forEach(function(s) {
  	  active_labels.push(s.source.index);
  	  active_labels.push(s.target.index);
    })

    // destination labels the active chords touch
    var dest_labels = d3.selectAll(".label")
  	  .filter(function(p) {
  	    return active_labels.indexOf(p.index) != -1; 
  	  })
  
    // family labels 
	var family_labels_indices = [];
    active_chords.data().forEach(function(s) {
	  if ((s.source.value == 2) && (s.target.value == 2)) { // family    
 	    family_labels_indices.push(s.source.index);
 	    family_labels_indices.push(s.target.index);
	  }
	})
	
	var family_labels = d3.selectAll(".label")
  	  .filter(function(p) {
  	    return family_labels_indices.indexOf(p.index) != -1; 
  	  })
   
    // fade everything
    chord.classed("fade", true)
    labels.classed("fade", true)
    
    // show this label, active chords, and destination labels.
    active_chords.classed("fade", false)
    dest_labels.classed("fade", false)  
   
    // specify family labels (hard to see what orange lines point to exactly in diagram)
    family_labels.classed("family", true);

    // make this label red & bold so you can tell which one is showing
    svg.selectAll(".label")
      .filter(function(p) {
        return p.index == d.index;
      })
      .classed("attention", true);        
  }

  function mouseout(d, i) {
    chord.classed("fade", false)
    labels.classed("fade", false)
    
    svg.selectAll(".label")
      .filter(function(p) {
        return p.index == d.index;
      })
      .classed("attention", false);
    
    labels.classed("family", false);
  }
  
});

function form_the_data(d) {
  var i = 0;
  for (i = 0; i <= 360; i++){
	d[i] = +d[i];
  }
  return d;
}
d3.select(self.frameElement).style("height", (height + padding) + "px").style("width", (width + padding) + "px");	
</script><!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="initial-scale=1,maximum-scale=1">
<style>

html,
body {
  height: 100%;
}

body {
  margin: 0;
}

svg {
  display: block;
  overflow: hidden;
  width: 100%;
  height: 100%;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var color = d3.scale.category10();

var svg = d3.select("body").append("svg")
    .attr("width", innerWidth)
    .attr("height", innerHeight);

var circle = svg.selectAll("circle.touch");

d3.select("body")
    .on("touchstart", touch)
    .on("touchmove", touch)
    .on("touchend", touch);

function touch() {
  d3.event.preventDefault();

  circle = circle
      .data(d3.touches(svg.node()), function(d) { return d.identifier; });

  circle.exit()
      .attr("class", null)
    .transition()
      .attr("r", 1e-6)
      .remove();

  circle.enter().append("circle")
      .attr("class", "touch")
      .attr("r", 1e-6)
      .style("fill", function(d) { return color(d.identifier); })
    .transition()
      .duration(500)
      .ease("elastic")
      .attr("r", 48);

  circle
      .attr("cx", function(d) { return d[0]; })
      .attr("cy", function(d) { return d[1]; });
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width">
<style>

html,
body {
  height: 100%;
  margin: 0;
  overflow: hidden;
}

svg {
  position: absolute;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = self.frameElement ? 960 : innerWidth,
    height = self.frameElement ? 500 : innerHeight;

var data = d3.range(20).map(function() { return [Math.random() * width, Math.random() * height]; });

var color = d3.scale.category10();

var drag = d3.behavior.drag()
    .origin(function(d) { return {x: d[0], y: d[1]}; })
    .on("dragstart", dragstarted)
    .on("drag", dragged)
    .on("dragend", dragended);

d3.select("body")
    .on("touchstart", nozoom)
    .on("touchmove", nozoom)
  .append("svg")
    .attr("width", width)
    .attr("height", height)
  .selectAll("circle")
    .data(data)
  .enter().append("circle")
    .attr("transform", function(d) { return "translate(" + d + ")"; })
    .attr("r", 32)
    .style("fill", function(d, i) { return color(i); })
    .call(drag);

function dragstarted() {
  this.parentNode.appendChild(this);

  d3.select(this).transition()
      .ease("elastic")
      .duration(500)
      .attr("r", 48);
}

function dragged(d) {
  d[0] = d3.event.x;
  d[1] = d3.event.y;

  d3.select(this)
      .attr("transform", "translate(" + d + ")");
}

function dragended() {
  d3.select(this).transition()
      .ease("elastic")
      .duration(500)
      .attr("r", 32);
}

function nozoom() {
  d3.event.preventDefault();
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

g {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: #bbb;
  stroke-width: 1px;
  opacity: .5;
}
.line.active {
  stroke-width: 5px;
  stroke: #444
}
.group-2 {
  fill: none;
  stroke: #bb0;
  stroke-width: 1px;
}
.group-2.active {
  stroke-width: 5px;
  stroke: #880;
}

.zeroline {
  fill: none;
  stroke: red;
  stroke-width: 3px;
}

.pie {
  fill: green;
  stroke: #222;
  opacity: .5;
}
.pie.active {
  fill: #222;
  opacity: 1;
}

.bar {
  fill: blue;
  stroke: #222;
  opacity: .5;
}
.bar.active {
  fill: #222;
  opacity: 1;
}

.vertical {
  stroke-width: 3px;
  opacity: 1;
}
.vertical.bar {
  stroke: blue;
}
.vertical.pie {
  stroke: green;
}
.vertical.active {
  stroke-width: 5px;
}
.group {
  font-size: 2em;
}
.g1 {
  border:1px solid #bbb;
}
.g2 {
  border:1px solid #bb0;
}
.e.pie {
  border:3px solid green;
  padding: 2px;
  opacity: 1;
}
.e.bar {
  border:3px solid blue;
  padding: 2px;
  opacity: 1;
}

p {
  font: 1em sans-serif;
}

</style>

<body>
<h1>Pie chart vs. Bar chart figth</h1>

<div id="chart"></div>
<p>
Experiment conducted on 22 university students divided into 2 groups (11 each). Each group was shown 1 pie chart and 1 bar chart showing election results. The students were asked to estimate the percentage won by each party (later rescaled to sum 100%).
</p>
<p>
The chart above summarizes the experiment's results:
<ul>
  <li>Every point is one error of estimate (by one student)</li>
  <li>Green circles are error of estimates based on a pie chart</li>
  <li>Blue squares are error of estimates based on a bar chart</li>
  <li>Horizontal lines connect estimates by one person, colored by the election</li>
  <li>Vertical lines show variance, the 2 extreme error of estimates in each groups are taken away</li>
  <li>Green lines are for error of estimates from pie chart, blue lines are for bar chart</li>
  <li>The values on x-axis are slightly randomly moved, so the overlapped points may be visible.</li>
</ul>
</p>
<p>
There is no clear evidence that any of the charts performs better, the results are slightly better for pie charts. But the sample is not big enough for better conclusions.
</p>
<p>The actual file used for the experiment is <a href="https://docs.google.com/document/d/1YqkQzXvi79k_Uoe_MFKD5uWy2oLxvnQkKU7TWc5y4qo/pub">here</a>. The table below shows the experimental design:</p>

<table>
  <tr><th></th><th><span class="group g1">Election 1</span></th><th><span class="group g2">Election 2</span></th></th>
  <tr><td><span class="group">Group 1:</span></td><td class="e pie"><image src="volby1998_2.png" title="Election 1, pie" /></td><td  class="e bar"><image src="volby2002.png" title="Election 2, bar" /></td></tr>
  <tr><td><span class="group">Group 2:</span></td><td  class="e bar"><image src="volby1998.png" title="Election 1, bar" /></td><td class="e pie"><image src="volby2002_2.png" title="Election 2, pie" /></td></tr>
</table>
<p>The real values were:<br/>
Election 1: 0.2910, 0.2499, 0.1804, 0.1793, 0.0994<br/>
Election 2: 0.3024, 0.2450, 0.1853, 0.1429, 0.1244
</p>
<script src="http://d3js.org/d3.v3.js"></script>
<script>
var realvalues = [
 [0.2910,0.2499,0.1804,0.1793,0.09935],
 [0.3024,0.2450,0.1853,0.1429,0.1244]
];

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .range([0, width])
    .domain([0.05,0.35]);
var y = d3.scale.linear()
    .range([height, 0])
    .domain([-0.15,0.2]);
    
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");
var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    
svg.append("g")
  .attr("class", "x axis")
  .attr("transform", "translate(0," + height + ")")
  .call(xAxis)
 .append("text")
  .attr("x", x(.35))
  .attr("dx", ".71em")
  .style("text-anchor", "end")
  .text("Real values of percentage");
  
svg.append("g")
  .attr("class", "y axis")
  .call(yAxis)
 .append("text")
  .attr("transform", "rotate(-90)")
  .attr("y", 6)
  .attr("dy", ".71em")
  .style("text-anchor", "end")
  .text("Errors of Estimates");

var line = d3.svg.line()
    .x(
    function(d) { 
    return d[0]; })
    .y(function(d) { return d[1]; });
    
zeroline = Array([x(0.05),y(0)],[x(0.35),y(0)]);

var r = 3;

svg.append("path")
      .datum(zeroline)
      .attr("class", "zeroline")
      .attr("d", line);
      
d3.csv("data.csv", function(error, data) {
  points = [[],[]]; // 2 groups
  realvalues.forEach(function(rd,ri) {
    pdata = [[],[]]; // 2 chart types
    for (i in realvalues[ri]) {
      pdata[0][i] = [];
      pdata[1][i] = [];
    }
    data.forEach(function(d) {
      rdata = Array();
      for (i in realvalues[ri]) {
        xx = realvalues[ri][i] + Math.random()/200-0.0025;
        if (ri == 0) letter = "a";
        else letter = "b";
        k = parseInt(i) + 1;
        yy = +d[letter+k]-realvalues[ri][i];
        rdata.push([x(xx),y(yy)]);
        //type of chart:
        if (((d.group == "1") && (ri == 0)) || ((d.group == "2") && (ri == 1)))
          ct = 1;  //bar
        else
          ct = 0;  //pie
        points[ct].push([xx,yy]);
        pdata[ct][parseInt(i)].push(yy);
      }
      svg.append("path")
      .datum(rdata)
      .attr("class", function() {if (ri == 1) return "line group-2"; else return "line"})
      .attr("d", line)
      .attr("title",d.name)
      .on("mouseover", function() {
          d3.select(this)
            .classed("active", true ) // should then accept fill from CSS
        })
      .on("mouseout",  function() {
          d3.select(this)
            .classed("active", false)
          });
    });
    
    //vertical lines
    for (ct in pdata) {
      for (i in pdata[ct]) {
        pdata[ct][i] = pdata[ct][i].sort(compareNumbers);
      }
    }
        //prepare ends (eliminate extremes)
    pends = [[],[]];  //2 charts    
    pmid = [[],[]];
    for (ct in pdata) {
      for (i in pdata[ct]) {
        pends[ct][i] = [];
        pends[ct][i].push([x(realvalues[ri][parseInt(i)])+3*parseInt(ct),y(pdata[ct][i][1])]);
        pends[ct][i].push([x(realvalues[ri][parseInt(i)])+3*parseInt(ct),y(pdata[ct][i][pdata[ct][i].length-2])]);
        pmid[ct][i] = [realvalues[ri], pdata[ct][i][Math.round(pdata[ct][i].length/2-1)]]; //approx, ok for odd numbers
        
        svg.append("path")
          .datum(pends[ct][i])
          .attr("class", function() {if (ct == "1") return "vertical bar"; else return "vertical pie"})
          .attr("d", line)
          //.attr("title",d.name)
          .on("mouseover", function() {
              d3.select(this)
                .classed("active", true ) // should then accept fill from CSS
            })
          .on("mouseout",  function() {
              d3.select(this)
                .classed("active", false)
              });
      }
    }
    
    
    
    
  });
  //points
  svg.selectAll('circle')
    .data(points[0])
    .enter().append('circle')
    .attr("cx", function(d) {return x(d[0]) })
    .attr("cy", function(d) {return y(d[1]) })
    .attr("r", 3)
    .attr("class", "pie")
    .attr("title",function(d) {return "Error of colour estimate: " + Math.round(d[1]*1000)/10 + "% (percentage points)"})
    .on("mouseover", function() {
          d3.select(this)
            .classed("active", true )
        })
    .on("mouseout",  function() {
          d3.select(this)
            .classed("active", false)
     }); 
  svg.selectAll('rect')
    .data(points[1])
    .enter().append('rect')
    .attr("x", function(d) {return x(d[0]) - r })
    .attr("y", function(d) {return y(d[1]) - r})
    .attr("height", 2*r)
    .attr("width", 2*r)
    .attr("class", "bar")
    .attr("title",function(d) {return "Error of colour estimate: " + Math.round(d[1]*1000)/10 + "% (percentage points)"})
    .on("mouseover", function() {
          d3.select(this)
            .classed("active", true )
        })
    .on("mouseout",  function() {
          d3.select(this)
            .classed("active", false)
     }); 
});

function compareNumbers(a, b) {
  return a - b;
}

</script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-8592359-13', 'ocks.org');
      ga('send', 'pageview');

    </script>

</body>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Random radius</title>
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js"></script>
    </head>
    <body>

    <script>

    var dataset = [];                         
	for (var i = 0; i < 108; i++) {            
	    var newNumber = Math.floor((Math.random()*100)+10);;   
	    dataset.push(newNumber);              
	}


	var w = 520, h = 520;

	var duration = 520;


    var svg = d3.select("body")
        .append("svg")
        .attr("width", w)
        .attr("height", h);

    var circle = svg.append("circle")
        .attr("cx", w/2)
        .attr("cy", h/2)
        .attr("fill", "black");


    var label = svg.append("text")
        .attr("x", "10")
        .attr("y", "20")
        .attr("font-family", "monospace")
        .attr("font-size", "18px")
        .attr("fill", "red");
        
    dataset.forEach(function(d, i) {
        circle.transition().duration(duration).delay(i * duration)
            .attr("r", d);
        label.transition().duration(duration).delay(i * duration)
            .text(function (d) { return dataset[i] });
    });


    </script>

    </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<canvas width="960" height="500"></canvas>
<script src="//d3js.org/d3.v4.0.0-alpha.4.min.js"></script>
<script>

var parseTime = d3.utcParse("%H:%M");

var canvas = document.querySelector("canvas"),
    context = canvas.getContext("2d");

var margin = {top: 40, right: 40, bottom: 40, left: 40},
    width = canvas.width - margin.left - margin.right,
    height = canvas.height - margin.top - margin.bottom;

var x = d3.scaleUtc()
    .range([0, width]);

var y = d3.scaleLinear()
    .range([height, 0]);

var symbol = d3.symbol()
    .context(context);

var line = d3.line()
    .x(function(d) { return x(d.time); })
    .y(function(d) { return y(d.count); })
    .curve(kernelSmooth, 50, 100)
    .context(context);

context.translate(margin.left, margin.top);

d3.requestCsv("data.csv", function(d) {
  d.time = parseTime(d.time);
  d.count = +d.count;
  return d;
}, function(error, data) {
  if (error) throw error;

  x.domain(d3.extent(data, function(d) { return d.time; })).nice(d3.utcDay);
  y.domain([0, d3.max(data, function(d) { return d.count; })]);

  context.globalAlpha = 0.5;
  context.lineWidth = 1;
  context.strokeStyle = "steelblue";
  data.forEach(function(d) {
    context.save();
    context.translate(x(d.time), y(d.count));
    context.beginPath();
    symbol(d);
    context.stroke();
    context.restore();
  });

  context.beginPath();
  line(data);
  context.globalAlpha = 1;
  context.lineWidth = 2;
  context.strokeStyle = "black";
  context.stroke();
});

function epanechnikov(u) {
  return (u *= u) <= 1 ? 0.75 * (1 - u) : 0;
}

function kernelSmooth(context, bandwidth, count) {
  var linear = d3.curveLinear(context), x0 = Infinity, x1 = -x0, xv, yv;
  return {
    lineStart: function() {
      xv = [], yv = [];
    },
    lineEnd: function() {
      linear.lineStart();
      for (var x = x0, dx = (x1 - x0) / count; x <= x1; x += dx) {
        for (var j = 0, yi = 0, wi = 0, m = xv.length; j < m; ++j) {
          var wji = epanechnikov((xv[j] - x) / bandwidth);
          wi += wji, yi += yv[j] * wji;
        }
        linear.point(x, yi / wi);
      }
      linear.lineEnd();
    },
    point: function(x, y) {
      xv.push(x = +x), yv.push(+y);
      if (x < x0) x0 = x;
      if (x > x1) x1 = x;
    }
  };
}

</script>

<html>
<body>

<section>  

<h1>Hurricanes</h1>

<h5>Hurricanes 2004</h5>
<p><a href="http://cdb.io/NtSQSf"><img src="hurricanes2004.png" /></a></p>

<h3> Hurricane Sandy </h3>

<h5>Flood foreclosures</h5>
<p><a href=""><img src="floodforeclosures.png?raw=true" /></a></p>

<h5>Long Island Flood Zones</h5>
<p><a href="http://www.newsday.com/long-island/sandy-flooding-on-long-island-1.4298061"><img src="longisland.png" /></a></p>

<h5>NYC Damage reports</h5>
<p><a href="http://techpresident.com/news/23069/what-we-told-each-other-hurricane-left-new-york" ><img src="damagereports.png" /></a></p>

</section>

<section>

<h1> Tornadoes <h1>


<h5>10 Years of Tornadoes</h5>
<p><a href="http://kendavis.cartodb.com/viz/47a5ec8c-5c67-11e3-9daf-0ea30eb8e95a/embed_map?title=true&description=true&search=false&shareable=false&cartodb_logo=true&layer_selector=false&legends=false&scrollwheel=true&sublayer_options=1&sql=&sw_lat=28.613459424004414&sw_lon=-116.27929687499999&ne_lat=45.644768217751924&ne_lon=-74.091796875"><img src="tornadoes.png" /></a></p>

</section>


<section>
<h1>Rain & Drought </h1>


<h5>2013 Drought monitor</h5>
<p><a href="http://tnris.cartodb.com/viz/664188dc-0211-11e3-8a7e-d5c1e1d9739a/embed_map?title=true&description=true&search=false&shareable=true&cartodb_logo=true&layer_selector=true&legends=true&scrollwheel=true&sublayer_options=1&sql=&zoom=3&center_lat=40.38002840251183&center_lon=-101.29394531249999"><img src="drought.png" /></a></p>

<h5>2013 Precipitation outlook</h5>
<p><a href="http://tnris.cartodb.com/viz/2e0fda1e-02ce-11e3-8f36-d12ecb80ecf7/embed_map?title=true&description=true&search=false&shareable=false&cartodb_logo=true&layer_selector=true&legends=true&scrollwheel=true&sublayer_options=1%7C1&sql=&zoom=2&center_lat=35.02999636902566&center_lon=-76.0693359375"><img src="outlook.png" /></a></p>

<h5>Real-time precipitation</h5>
<p><a href="http://andrew.cartodb.com/viz/a7599ec6-4317-11e3-b556-3085a9a9563c/embed_map?title=true&description=true&search=false&shareable=false&cartodb_logo=true&layer_selector=false&legends=true&scrollwheel=true&sublayer_options=1&sql=&zoom=3&center_lat=37.579412513438385&center_lon=-89.07714843749999"><img src="precip.png" /></a></p>


<h5>ATXFlood: Austin flood monitor</h5>
<p><a href="http://www.atxfloods.com/index.php" ><img src="atx.png" /></a></p>


<h5>Calgary flood tool</h5>
<p><a href="http://monitoreo.cartodb.com/tables/calgary_100yr_floodplain/embed_map?title=true&description=true&search=false&shareable=false&cartodb_logo=true&scrollwheel=true&sql=&sw_lat=51.00390188414246&sw_lon=-114.20647501945496&ne_lat=51.08161176306139&ne_lon=-113.92683863639832" ><img src="calgary.png" /></a></p>

</section>

<section>

<h1> General weather</h1>

<h5>Weather</h5>
<p><a href="http://thedailyviz.com/2012/08/28/mapping-humidity-sunshine-across-the-u-s/"><img src="sun.png" /></a></p>


</section>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

svg { 
	background: #C6ECFF;
	border: 2px solid #AAA; }
	
.land { fill: #E0E0E0; }

.coast {
	fill: none;
	stroke: #0978AB; 
	stroke-width: 1.5px; }
.mesh{ /* borders*/
	fill: none;
	stroke: #646464;
	stroke-width: 1.5px;
	stroke-dasharray: 8,4; }
.focus {
  fill: #FEFEE9;
  stroke: #646464;
  stroke-width: 2px; }

</style>
<body>
<script src="./d3.v3.min.js"></script>
<script src="./topojson.v1.min.js"></script>
<script>
	
	
var width = 500, centered, selected=51;
var svg = d3.select("body").append("svg")
		.attr("width", width);
	
var projection = d3.geo.mercator()
      .scale(1)
      .translate([0, 0]);

var path = d3.geo.path()
    .projection(projection);


d3.json("./us.json", function(error, us) {
  var states = topojson.feature(us, us.objects.states),
  	state = states.features.filter(function(d) { return d.id === selected; })[0];
	
	zoomon(state, width);

  //landmass
	svg.selectAll("path")
		.data(states.features)
	.enter().append("path")
		.attr("class", function(d) { 
			if(d.id === selected ){ return "land focus"} 
			else { return "land";}
		})
		.attr("d", path)
		.on("click", function(d,i){ clicked(d,width)});


  //inland borders lines
  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "mesh")
      .attr("d", path);
  //coast lines
  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a == b; }))
      .attr("class", "coast")
      .attr("d", path);
});

	
function zoomon(d, width){
	t = getTransform(d);
	projection
		.scale(t.scale)
		.translate(t.translate);
	svg.attr("height", t.height);
}

function clicked(d, width) {
	t = getTransform(d);
  if (!d || centered === d) { 	// reset center to init
	  projection
	  	.translate([width / 2, t.height / 2])
		.center(projection.invert(path.centroid(d)))
		.scale(400);
	  centered = null;
	  t.height=width;
  } else {  					// center on clicked shape
	  projection.translate(t.translate).scale(t.scale);
	  centered = d;
 }

	// Frame transition
	svg.transition("Frame")
		.duration(1000)
		.attr("height", t.height);
	// Transition to the new projection.
	svg.selectAll("path").transition("Redraw")
		.duration(1000)
		.attr("d", path);
	// Focus
	svg.selectAll("path")
      .classed("focus", centered && function(d) { return d === centered; });
}
	

var getTransform = function(d) {
	/* RESET & PROFILE ************************************* */
	projection
		.scale(1)
      	.translate([0, 0]);
	/* GEOJSON PROFILING *********************************** */
	var b = path.bounds(d); // [left, bottom], [right, top] // W S E N
		// b.w = b[0][0]; b.s = b[0][1]; b.e = b[1][0]; b.n = b[1][1];
		b.dx = Math.abs(b[1][0] - b[0][0]);	// distance x = E-W
		b.dy = Math.abs(b[1][1] - b[0][1]);	// distance y = N-S
		b.cx = (b[1][0] + b[0][0]) / 2; 	// center x
		b.cy = (b[1][1] + b[0][1]) /2; 	// center y
	//compute meaningful ratio, scale, translation
	var t={};
		t.ratio = ( b.dy / b.dx );
		if (typeof height==="undefined"){ t.height=width*t.ratio;  console.log("no height");}
		else { t.height = height; console.log("height");};
		t.scale = .9 * Math.min( width/b.dx, t.height/b.dy); // = .9 * ( width / b.dx)
		t.translate = [(width/2- t.scale * b.cx), (t.height/2 - t.scale * b.cy) ]; //translation
	return t;
}
</script><!DOCTYPE html>
<meta charset="utf-8">
<script>

var callbacks = [];

requestAnimationFrame = function(callback) {
  callbacks.push(callback);
};

flushAnimationFrames = function() {
  var now = Date.now;
  Date.now = function() { return Infinity; };
  callbacks.forEach(function(callback) { try { callback(); } catch (e) { console.error(e); } });
  callbacks = [];
  Date.now = now;
};

</script>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

d3.select("body").transition()
    .duration(5000)
    .style("background", "red");

flushAnimationFrames();

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
body{
    width:1060px;
    margin:50px auto;
}
path {  stroke: #fff; }
path:hover {  opacity:0.9; }
rect:hover {  fill:blue; }
.axis {  font: 10px sans-serif; }
.legend tr{    border-bottom:1px solid grey; }
.legend tr:first-child{    border-top:1px solid grey; }

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {  display: none; }
.legend{
    margin-bottom:76px;
    display:inline-block;
    border-collapse: collapse;
    border-spacing: 0px;
}
.legend td{
    padding:4px 5px;
    vertical-align:bottom;
}
.legendFreq, .legendPerc{
    align:right;
    width:50px;
}

</style>
<body>
<div id='dashboard'>
</div>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
function dashboard(id, fData){
    var barColor = 'steelblue';
    function segColor(c){ return {low:"#807dba", mid:"#e08214",high:"#41ab5d"}[c]; }
    
    // compute total for each state.
    fData.forEach(function(d){d.total=d.freq.low+d.freq.mid+d.freq.high;});
    
    // function to handle histogram.
    function histoGram(fD){
        var hG={},    hGDim = {t: 60, r: 0, b: 30, l: 0};
        hGDim.w = 500 - hGDim.l - hGDim.r, 
        hGDim.h = 300 - hGDim.t - hGDim.b;
            
        //create svg for histogram.
        var hGsvg = d3.select(id).append("svg")
            .attr("width", hGDim.w + hGDim.l + hGDim.r)
            .attr("height", hGDim.h + hGDim.t + hGDim.b).append("g")
            .attr("transform", "translate(" + hGDim.l + "," + hGDim.t + ")");

        // create function for x-axis mapping.
        var x = d3.scale.ordinal().rangeRoundBands([0, hGDim.w], 0.1)
                .domain(fD.map(function(d) { return d[0]; }));

        // Add x-axis to the histogram svg.
        hGsvg.append("g").attr("class", "x axis")
            .attr("transform", "translate(0," + hGDim.h + ")")
            .call(d3.svg.axis().scale(x).orient("bottom"));

        // Create function for y-axis map.
        var y = d3.scale.linear().range([hGDim.h, 0])
                .domain([0, d3.max(fD, function(d) { return d[1]; })]);

        // Create bars for histogram to contain rectangles and freq labels.
        var bars = hGsvg.selectAll(".bar").data(fD).enter()
                .append("g").attr("class", "bar");
        
        //create the rectangles.
        bars.append("rect")
            .attr("x", function(d) { return x(d[0]); })
            .attr("y", function(d) { return y(d[1]); })
            .attr("width", x.rangeBand())
            .attr("height", function(d) { return hGDim.h - y(d[1]); })
            .attr('fill',barColor)
            .on("mouseover",mouseover)// mouseover is defined below.
            .on("mouseout",mouseout);// mouseout is defined below.
            
        //Create the frequency labels above the rectangles.
        bars.append("text").text(function(d){ return d3.format(",")(d[1])})
            .attr("x", function(d) { return x(d[0])+x.rangeBand()/2; })
            .attr("y", function(d) { return y(d[1])-5; })
            .attr("text-anchor", "middle");
        
        function mouseover(d){  // utility function to be called on mouseover.
            // filter for selected state.
            var st = fData.filter(function(s){ return s.State == d[0];})[0],
                nD = d3.keys(st.freq).map(function(s){ return {type:s, freq:st.freq[s]};});
               
            // call update functions of pie-chart and legend.    
            pC.update(nD);
            leg.update(nD);
        }
        
        function mouseout(d){    // utility function to be called on mouseout.
            // reset the pie-chart and legend.    
            pC.update(tF);
            leg.update(tF);
        }
        
        // create function to update the bars. This will be used by pie-chart.
        hG.update = function(nD, color){
            // update the domain of the y-axis map to reflect change in frequencies.
            y.domain([0, d3.max(nD, function(d) { return d[1]; })]);
            
            // Attach the new data to the bars.
            var bars = hGsvg.selectAll(".bar").data(nD);
            
            // transition the height and color of rectangles.
            bars.select("rect").transition().duration(500)
                .attr("y", function(d) {return y(d[1]); })
                .attr("height", function(d) { return hGDim.h - y(d[1]); })
                .attr("fill", color);

            // transition the frequency labels location and change value.
            bars.select("text").transition().duration(500)
                .text(function(d){ return d3.format(",")(d[1])})
                .attr("y", function(d) {return y(d[1])-5; });            
        }        
        return hG;
    }
    
    // function to handle pieChart.
    function pieChart(pD){
        var pC ={},    pieDim ={w:250, h: 250};
        pieDim.r = Math.min(pieDim.w, pieDim.h) / 2;
                
        // create svg for pie chart.
        var piesvg = d3.select(id).append("svg")
            .attr("width", pieDim.w).attr("height", pieDim.h).append("g")
            .attr("transform", "translate("+pieDim.w/2+","+pieDim.h/2+")");
        
        // create function to draw the arcs of the pie slices.
        var arc = d3.svg.arc().outerRadius(pieDim.r - 10).innerRadius(0);

        // create a function to compute the pie slice angles.
        var pie = d3.layout.pie().sort(null).value(function(d) { return d.freq; });

        // Draw the pie slices.
        piesvg.selectAll("path").data(pie(pD)).enter().append("path").attr("d", arc)
            .each(function(d) { this._current = d; })
            .style("fill", function(d) { return segColor(d.data.type); })
            .on("mouseover",mouseover).on("mouseout",mouseout);

        // create function to update pie-chart. This will be used by histogram.
        pC.update = function(nD){
            piesvg.selectAll("path").data(pie(nD)).transition().duration(500)
                .attrTween("d", arcTween);
        }        
        // Utility function to be called on mouseover a pie slice.
        function mouseover(d){
            // call the update function of histogram with new data.
            hG.update(fData.map(function(v){ 
                return [v.State,v.freq[d.data.type]];}),segColor(d.data.type));
        }
        //Utility function to be called on mouseout a pie slice.
        function mouseout(d){
            // call the update function of histogram with all data.
            hG.update(fData.map(function(v){
                return [v.State,v.total];}), barColor);
        }
        // Animating the pie-slice requiring a custom function which specifies
        // how the intermediate paths should be drawn.
        function arcTween(a) {
            var i = d3.interpolate(this._current, a);
            this._current = i(0);
            return function(t) { return arc(i(t));    };
        }    
        return pC;
    }
    
    // function to handle legend.
    function legend(lD){
        var leg = {};
            
        // create table for legend.
        var legend = d3.select(id).append("table").attr('class','legend');
        
        // create one row per segment.
        var tr = legend.append("tbody").selectAll("tr").data(lD).enter().append("tr");
            
        // create the first column for each segment.
        tr.append("td").append("svg").attr("width", '16').attr("height", '16').append("rect")
            .attr("width", '16').attr("height", '16')
			.attr("fill",function(d){ return segColor(d.type); });
            
        // create the second column for each segment.
        tr.append("td").text(function(d){ return d.type;});

        // create the third column for each segment.
        tr.append("td").attr("class",'legendFreq')
            .text(function(d){ return d3.format(",")(d.freq);});

        // create the fourth column for each segment.
        tr.append("td").attr("class",'legendPerc')
            .text(function(d){ return getLegend(d,lD);});

        // Utility function to be used to update the legend.
        leg.update = function(nD){
            // update the data attached to the row elements.
            var l = legend.select("tbody").selectAll("tr").data(nD);

            // update the frequencies.
            l.select(".legendFreq").text(function(d){ return d3.format(",")(d.freq);});

            // update the percentage column.
            l.select(".legendPerc").text(function(d){ return getLegend(d,nD);});        
        }
        
        function getLegend(d,aD){ // Utility function to compute percentage.
            return d3.format("%")(d.freq/d3.sum(aD.map(function(v){ return v.freq; })));
        }

        return leg;
    }
    
    // calculate total frequency by segment for all state.
    var tF = ['low','mid','high'].map(function(d){ 
        return {type:d, freq: d3.sum(fData.map(function(t){ return t.freq[d];}))}; 
    });    
    
    // calculate total frequency by state for all segment.
    var sF = fData.map(function(d){return [d.State,d.total];});

    var hG = histoGram(sF), // create the histogram.
        pC = pieChart(tF), // create the pie-chart.
        leg= legend(tF);  // create the legend.
}
</script>

<script>
var freqData=[
{State:'AL',freq:{low:4786, mid:1319, high:249}}
,{State:'AZ',freq:{low:1101, mid:412, high:674}}
,{State:'CT',freq:{low:932, mid:2149, high:418}}
,{State:'DE',freq:{low:832, mid:1152, high:1862}}
,{State:'FL',freq:{low:4481, mid:3304, high:948}}
,{State:'GA',freq:{low:1619, mid:167, high:1063}}
,{State:'IA',freq:{low:1819, mid:247, high:1203}}
,{State:'IL',freq:{low:4498, mid:3852, high:942}}
,{State:'IN',freq:{low:797, mid:1849, high:1534}}
,{State:'KS',freq:{low:162, mid:379, high:471}}
];

dashboard('#dashboard',freqData);
</script><!doctype html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<title>force-layout</title>
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<style>

.node {
	stroke: #fff;
	stroke-width: 1.5px;
}

.link {
	stroke: #999;
	stroke-opacity: .6;
}

</style>
</head>
<body>
<script>

var dataset = {
	nodes: [
		{id: 0, name: "Taro", sex: "M"},
		{id: 1, name: "Ken", sex: "M"},
		{id: 2, name: "Hana", sex: "F"},
		{id: 3, name: "Mike" ,sex: "M"},
		{id: 4, name: "Bob" ,sex: "M"},
		{id: 5, name: "Anna" ,sex: "F"}
	],
	links: [
		{source: 0, target: 1},
		{source: 0, target: 3},
		{source: 0, target: 4},
		{source: 1, target: 2},
		{source: 1, target: 5},
		{source: 2, target: 5},
		{source: 3, target: 4},
		{source: 4, target: 5}
	]
}

var width = 960;
var height = 500;

var svg = d3.select("body").append("svg")
	.attr("width", width)
	.attr("height", height);


var force = d3.layout.force()
	.nodes(dataset.nodes)
	.links(dataset.links)
	.charge(-200)
	.linkDistance(200)
	.size([width, height])
	.start();


var link = svg.selectAll(".link")
	.data(dataset.links)
	.enter()
	.append("line")
	.attr("class", "link");


var node = svg.selectAll(".node")
	.data(dataset.nodes)
	.enter()
	.append("circle")
	.attr("class", "node")
	.attr("r", 10)
	.style("fill", function(d) {
		if(d.sex == "M"){
			return "blue";
		}else{
			return "red";
		}
	})
	.call(force.drag);


node.append("title")
	.text(function(d) { return d.name; });


force.on("tick", function() {
	link.attr("x1", function(d) { return d.source.x; })
		.attr("y1", function(d) { return d.source.y; })
		.attr("x2", function(d) { return d.target.x; })
		.attr("y2", function(d) { return d.target.y; });

	node.attr("cx", function(d) { return d.x; })
		.attr("cy", function(d) { return d.y; });
});

</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Loading data from server</title>
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js"></script>

        <style>
        body {font-family: monospace; line-height: 160%; font-size: 18px; }
        ul {list-style: none; margin: 0; padding: 0;}
        li {display: inline-block; width: 40px; padding: 10px; background-color: #eee; margin: 0;}
        </style>

    </head>
    <body>

    <script>

    var callbackError;
    var callbackData;

    var list = d3.select("body").append("ul");

    d3.tsv("data.tsv",
        function(error, data) {
            callbackError = error;
            callbackData = data;
        
    
         list.selectAll("ul")
         .data(data)
         .enter()
         .append("li")
         .text(function(d) { return d.petalLength; })

    });



    </script>

    </body>
</html><!DOCTYPE html>
<html>
    
	<head>
		<meta charset="utf-8">
		<title>Annual Mean Temperature Change for Hemispheres</title>
        <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300,700' rel='stylesheet' type='text/css'>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>
    
    <style>
        body {font-family: 'Open Sans', sans-serif; padding: 50px 0 75px 50px;}
        
        .annotation {margin: 25px 0 75px 70px; width: 800px;}
        .footer {margin: 100px 0 50px 70px; width: 800px; font-size: .8em;}
		
        h1 {font-size: 2.5em; font-weight: 300;}
        .textRed {color: red; font-weight: 700;}
        .textSteelBlue {color: steelblue; font-weight: 700;}
        .source {font-size: 0.75em; font-style: italic; color: gray;}
        a, a:visited {color: RoyalBlue;}
        a:hover {color: red;}
        
        .axis path, .axis line {
            fill: none;
            stroke: rgb(200, 200, 200);
            stroke-width: 1;
            shape-rendering: crispEdges;
        }

        .y g:first-child line {stroke: rgb(200, 200, 200);}
        .axis text {
            font-family: sans-serif;
            font-size: 14px;
        }
        
        path {
            fill: none;
            stroke: rgb(0, 0, 0);
            stroke-width: 2;
            shape-rendering: geometricPrecision;
            opacity: 0.5;
        }
        g path:hover {stroke-width: 2.5; opacity: 1;}
        
        g.highlight path {stroke-width: 2; opacity: 0.25;}
        g.red path {stroke: red;}
        g.steelblue path {stroke: steelblue;}
        g.highlight path:hover {stroke-width: 2.5; opacity: 1;}
        
        .tick text {font-size: 11px;}
        
    </style>

    <body>


        <div class="annotation">
            <h1>Annual Mean Temperature Change for&nbsp;Hemispheres</h1>
            <p>This line chart visualizes the GISTEMP data for the <strong>Globe</strong> and the <span class="textSteelBlue">North</span> and <span class="textRed">South</span> Hemispheres,<br>
			1880 to present, with <span style="background-color: WhiteSmoke; padding: 0 5px 0 5px; font-style: italic;">the base period 1951-1980</span>.<br>
			Here you can see an increasing mean Global Temperature over the years.</p>
			<p>You are able to highlight any of this lines hovering over them.</p>
        </div>
		
		<script type="text/javascript">		

            var w = 900,
                h = 400,
                padding = {top:30, right:50, bottom:50, left:100};

            var dateFormat = d3.time.format("%Y");
            
            var xScale = d3.time.scale()
                                .range([padding.left, w - padding.right]),
                yScale = d3.scale.linear()
                                .range([padding.top, h - padding.bottom]);

            var xAxis = d3.svg.axis()
                            .scale(xScale)
                            .orient("bottom")
                            .tickSize(0)
                            .tickPadding(10)
                            .tickFormat(function(d) {
                                return dateFormat(d);
                            }),
                yAxis = d3.svg.axis()
                            .scale(yScale)
                            .orient("left")
                            .tickSize(5)
                            .tickPadding(10);

            var categories = [ "Glob", "NHem", "SHem" ]  

            var line = d3.svg.line()
                            .x(function(d) {
                                return xScale(dateFormat.parse(d.year));
                            })
                            .y(h - padding.bottom)
                            .interpolate("monotone"),
                line2 = d3.svg.line()
                            .x(function(d) {
                                return xScale(dateFormat.parse(d.year));
                            })
                            .y(function(d) {
                                return yScale(+d.amount / 100);
								//return yScale(+d.amount);
                            })
                            .interpolate("monotone");
            
            
            var svg = d3.select("body")
                .append("svg")
                .attr({
                    width: w,
                    height: h
                });
            
			//Load in contents of CSV file
            d3.csv("data-dv.csv", function(data) {

                dataset = []
                
                for (i = 0; i < categories.length; i++) {
                    dataset[i] = {
						catName: categories[i],
						value: []
					};
                    
					for (var j = 0; j < data.length; j++) {
							dataset[i].value.push({
								year: data[j].Year,
								amount: data[j][categories[i]]
                            });
					}
                    
                }
                
                xScale.domain([
                    d3.min(data, function(d) {
                        return dateFormat.parse(d.Year);
                    }),
                    d3.max(data, function(d) {
                        return dateFormat.parse(d.Year);
                    })
                ]);
			
				yScale.domain([1.00, -0.60]);
                

					
				d3.select("svg").append("rect")
					.attr("class", "base-period")
					.attr({
						x: xScale(dateFormat.parse("1951")),
						y: padding.top,
						width: xScale(dateFormat.parse("1980")) - xScale(dateFormat.parse("1951")),
						height: h - padding.top - padding.bottom,
						fill: "WhiteSmoke ",
					});
					
				d3.select("svg").append("text")
					.attr("text-anchor", "middle")
                    .attr({
                        class: "base-period-label",
                        y: 60,
                        x: xScale(dateFormat.parse("1951")) + (xScale(dateFormat.parse("1980")) - xScale(dateFormat.parse("1951"))) / 2,
                    })
                    .text("The base period")
                    .style({
                        "font-size": 12,
                        "font-style": "italic",
						"fill": "#999"
                    });
				
				d3.select("text.base-period-label")
					.append("tspan")
					.attr({
                        y: 80,
                        x: xScale(dateFormat.parse("1951")) + (xScale(dateFormat.parse("1980")) - xScale(dateFormat.parse("1951"))) / 2,
                    })
					.text("1951-1980");
					
				d3.select("svg").append("line")
					.attr("class", "zero")
					.attr({
						x1: padding.left,
						y1: yScale(0),
						x2: w - padding.right,
						y2: yScale(0),
					})
					.style("stroke", "rgb(230, 230, 230)")
					.style("shape-rendering", "crispEdges")
					.style("stroke-width", 1);
					
                // here goes axes
                svg.append("g")
                    .attr("class", "axis x")
                    .attr("transform", "translate(0 ," + (h - padding.bottom) + ")")
                    .call(xAxis)
                    .append("text")
                    .attr("text-anchor", "middle")
                    .attr({
                        class: "xlabel",
                        y: 45,
                        x: padding.left + (w - padding.left - padding.right) / 2,
                    })
                    .text("Observation Period, years")
                    .style({
                        "font-size": 12,
                        "font-style": "italic"
                    });
                
                svg.append("g")
                    .attr("class", "axis y")
                    .attr("transform", "translate(" + (padding.left) + ", 0)")
                    .call(yAxis)
                    .append("text")
                    .attr("text-anchor", "start")
                    .attr({
                        class: "ylabel",
                        y: 10,
                        x: -32,
                    })
                    .text("Temperature Anomaly, degree Celsius")
                    .style({
                        "font-size": 12,
                        "font-style": "italic"
                    }); 


				var groups = svg.selectAll(".line")
					.data(dataset)
					.enter()
					.append("g")
					.attr("class", function(d) {

						if (d.catName == "NHem") {
							return "highlight steelblue";
						} else if (d.catName == "SHem") {
							return "highlight red";
						} else {
							return "";
						}
                        
                    });

				groups.append("title")
					.text(function(d) {
						return d.catName;
					});
                
				var catLine = groups.selectAll("path")
					.data(function(d) {
						return [ d.value ];
					})
					.enter()
					.append("path")
					.attr("class", "line")
					.attr("d", line);
                
                catLine.transition()
                    .delay(500)
                    .duration(2000)
                    .attr("d", line2);
				
				
				var lineLabels = svg.selectAll(".line-label")
					.data(dataset)
					.enter()
					.append("text")
					  .attr("x", w - 45)
					  .attr("y", h - padding.bottom)
					  .text(function(d) {

						if (d.catName == "NHem") {
							return "North";
						} else if (d.catName == "SHem") {
							return "South";
						} else {
							return "Global";
						}
                        
                    })
					.style({
                        "font-size": 12,
                        "font-style": "italic",
						"opacity": 0
                    });
					
					lineLabels.transition()
						.delay(500)
						.duration(2000)
						.attr("y", function(d) {

						if (d.catName == "NHem") {
							return yScale(0.91) + 3;
						} else if (d.catName == "SHem") {
							return yScale(0.58) + 3;
						} else {
							return yScale(0.75) + 3;
						}
                        
						})
						.style("opacity", 1);
				
	
            });
			

            
            
		</script>
		
		<div class="footer">
			<hr noshade size=1 width=75 align="left">
			<p>This chart was made as a practical part for <a href="https://twitter.com/search?q=%23ILLINOISdatavisualization&src=hash">#ILLINOISdatavisualization</a> MOOC.</p>
			<p>Data sources:</p>
			<ul>
				<li>GISTEMP Team, 2015: GISS Surface Temperature Analysis (GISTEMP). NASA Goddard Institute for Space Studies. Dataset accessed 2015-07-30 at <a href="http://data.giss.nasa.gov/gistemp/">http://data.giss.nasa.gov/gistemp/</a></li>
				<li>Hansen, J., R. Ruedy, M. Sato, and K. Lo, 2010: <a href="http://pubs.giss.nasa.gov/abs/ha00510u.html">Global surface temperature change</a>, Rev. Geophys., 48, RG4004, doi:10.1029/2010RG000345.</li>
			</ul>
		</div>
 
    </body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Forest for the Trees</title>
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js"></script>

    <style type="text/css">

  	.axis path,
  	.axis line {
  		fill: none;
  		stroke: rgba(102,140,77,1);
  		shape-rendering: crispEdges;
  	}
  	
  	.axis text {
  		font-family: sans-serif;
  		font-size: 11px;
  	}

  	.tick line {
  	  stroke: rgba(102,140,77,1);
  	}

  	.tick {
  	  font-size: 10px;
  	  color: rgba(102,140,77,1);
  	}

	</style>
  </head>
    <body>
      <script type="text/javascript">

    	//Margin conventions
        var margin = {top: 20, right: 60, bottom: 20, left: 20};
        var padding = {top: 60, right: 60, bottom: 60, left: 60};
        var width = 900 - margin.left - margin.right - padding.left - padding.right; 
        var height = 260 - margin.top - margin.bottom - padding.top - padding.right;

      //Draw the initial SVG
      	var svg = d3.select("body").append("svg")
        	.attr("width", width + margin.left + margin.right)
        	.attr("height", height + margin.top + margin.bottom)
        	.append("g")
        	.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

      //svgs are put into an array so that we can draw them with d3--images from Master Pixel and Grant Taylor from The Noun Project
        var paths = [{
          fill: "rgba(102,140,77,.8)",
          stroke: "rgba(0,0,0,.4)",
          d: "M92.422,47.256c0.042-0.18,0.066-0.366,0.066-0.555c0-1.759-1.923-3.183-4.296-3.183c-0.857,0-1.654,0.187-2.325,0.507  c-1.106-0.307-2.27-0.537-3.477-0.682c-1.048-1.185-2.872-1.969-4.947-1.969c-2.636,0-4.868,1.265-5.617,3.009  c-4.149,1.408-7.342,3.932-8.726,6.997h13.774c-0.003,0.002-0.005,0.003-0.007,0.006c-0.992,0.803-3.626,2.15-10.126,2.15  c-4,0-7.329,1.349-9.897,4.011c-1.134,1.176-2.026,2.524-2.73,3.934c-0.927-4.731-1.291-11.464,1.908-12.767  c9.229-3.76,15.616-11.02,16.367-18.406H100c-2.484-5.501-8.046-10.083-15.315-12.812c0.268-0.471,0.416-0.976,0.416-1.501  c0-2.548-3.419-4.613-7.637-4.613c-0.788,0-1.548,0.072-2.263,0.206C73.846,9.29,70.513,7.92,66.84,8.386  c-4.533,0.575-7.867,3.726-7.447,7.039c0.016,0.121,0.037,0.24,0.063,0.358c-5.299,1.131-10.01,3.169-13.743,5.845  c-0.014-0.003-0.027-0.006-0.041-0.01c-0.445-0.604-1.255-1.009-2.183-1.009c-0.569,0-1.092,0.154-1.516,0.41  c-1.205-0.127-2.439-0.194-3.696-0.194c-3.123,0-6.105,0.408-8.841,1.147c-0.601-0.261-1.287-0.409-2.015-0.409  c-2.122,0-3.883,1.254-4.231,2.901c-1.788,0.988-3.362,2.147-4.671,3.442c-1.222-0.589-2.697-0.934-4.287-0.934  c-4.218,0-7.637,2.421-7.637,5.409c0,0.708,0.194,1.384,0.544,2.004c-2.893,1.861-5.088,4.22-6.287,6.877h15.355  c0.148,0.893,0.677,2.524,2.538,4.032c2.672,2.162,7.133,3.26,13.261,3.26c2.625,0,4.687,0.81,6.302,2.478  c4.16,4.297,3.938,12.68,3.936,12.76l0.013,0.001l-1.895,28.043h0.004c0,0.002-0.001,0.003-0.001,0.005  c0,1.006,3.964,1.822,8.854,1.822c4.889,0,8.853-0.816,8.853-1.822c0-0.002-0.001-0.003-0.001-0.005h0.001l-1.346-21.651  c0.362-2.825,1.3-6.695,3.715-9.189c1.615-1.668,3.677-2.479,6.303-2.479c6.127,0,10.588-1.096,13.259-3.26  c1.76-1.424,2.33-2.959,2.511-3.877h13.243C95.062,49.846,93.914,48.448,92.422,47.256z M40.499,35.335  c-1.527-1.16-3.301-2.167-5.266-2.98h4.82C40.14,33.398,40.289,34.392,40.499,35.335z M46.671,48.437  c-0.568,1.612-0.906,3.462-1.012,5.522c-0.792-2.259-1.979-4.53-3.758-6.374c-2.568-2.662-5.897-4.012-9.896-4.012  c-5.521,0-8.261-0.964-9.588-1.773c-0.309-0.188-0.543-0.37-0.723-0.536H43.09c0.425,0.583,0.891,1.127,1.401,1.634  c1.161,1.152,2.422,1.981,3.65,2.579C47.549,46.36,47.055,47.348,46.671,48.437z M51.071,42.516  c-1.246-0.431-2.644-1.15-3.859-2.356c-1.852-1.84-2.951-4.458-3.282-7.804h17.267c-0.317-0.704-0.705-1.387-1.154-2.046h4.414  c-0.352,1.653-1.274,3.41-2.688,5.078c-2.127,2.512-5.138,4.608-8.707,6.062C52.352,41.738,51.688,42.097,51.071,42.516z",},
        {
          fill: "rgba(204,217,26,.9)",
          stroke: "rgba(0,0,0,.4)",
          d: "M32.41,28.414c-4.193,0.706-6.717,3.079-6.719,3.08c0.77-3.909,1.76-6.55,2.206-7.626   c3.055-0.57,10.352-2.229,10.271-12.682c-10.406,0.188-11.143,8.994-11.102,11.904c-1.237,1.697-2.196,3.707-2.94,5.83   c-1.283-3.52-1.49-7-1.508-8.667c1.955-1.983,6.456-6.933,1.053-14.563c-6.805,4.924-4.248,11.207-2.566,13.9   C20.464,28.407,23.324,32,23.324,32h0.002c-0.266,1-0.492,1.779-0.686,2.774c-0.004-0.005-2.012-3.212-5.094-5.116   c-1.158-2.195-4.041-6.902-11.471-4.588c2.193,6.79,7.732,6.328,10.385,5.678c0.002,0.002,4.678,2.908,5.686,6.851   c-0.699,5.218-0.551,9.435-0.551,9.435c0,1.934,3.195,2.151,3.195-0.449c-0.318-4.706-0.063-8.839,0.424-12.265   c2.44-3.273,7.975-4.317,7.975-4.317l0,0c6.025,4.43,11.188-1.902,11.188-1.902C42.986,27.165,38.205,23.144,32.41,28.414z",}
					];

      //your datasets
      	var dataset = [1, 7, 26, 11, 8, 18.5, 19.8, 30, 16, 4.5];
      	var dataset2 =[2, 3, 22, 3.2, 18, 16, 6, 4.2, 9.3, 11, 22, 28, 13.5, 14.5, 17, 24, 27, 29];

     	//create a scale, which we'll use to draw our axes
      	var xScale = d3.scale.linear()
          .domain([0, d3.max(dataset, function(d) { return d; })])
          .range([0, width]);

		// piece of code that joins our complex svg data to the first dataset--d3 is amazing!!
      	var svgPaths = svg.selectAll(".bigtrees")
      		.data(dataset)
      		.enter()
      		.append('path')
      		.attr("class", ".bigtrees")
      		.attr("d", paths[0].d)
      		.style("stroke", paths[0].stroke)
      		.style("fill", paths[0].fill)
      		//moving the svgs depending on the data--you might have to play around with this depending on the pixel width of your svg
      		.attr("transform", function(d){return 'translate('+ (xScale(d)-48) + ')'});

      	// and more joining for the second dataset--hooray!!
      	var svgPathsTwo = svg.selectAll(".littletrees")
      		.data(dataset2)
      		.enter()
      		.append('path')
      		.attr("class", ".littletrees")
      		.attr("d", paths[1].d)
      		.style("stroke", paths[1].stroke)
      		.style("fill", paths[1].fill)
      		//moving the svgs depending on the data--you might have to play around with this depending on the pixel width of your svg
      		.attr("transform", function(d){return 'translate('+ (xScale(d)-30) + ', 50)'});


      	//add the xAxis
      	var xAxis = d3.svg.axis()
          .scale(xScale)
          .orient("bottom")
          .ticks(10);

        svg.append("g")
        	.attr("class", "axis")
        	.attr("transform", "translate(0," + height + ")")
  		    .call(xAxis);

        </script>
    </body>
</html><!DOCTYPE html>
<html>
    <head>
        <title>Multiple concurrent popups w/ leaflet</title>
        <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
        <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
        <!--[if lte IE 8]><link rel="stylesheet" href="http://leaflet.cloudmade.com/dist/leaflet.ie.css" /><![endif]-->
        
        <script type="text/javascript" src="http://maps.stamen.com/js/tile.stamen.js?v1.2.3"></script>
        <link type="text/css" rel="stylesheet" href="mtLeaf.css"/>

    </head>
    <body onload="initialize()">

        <div id="map" ></div>
            <p>
            Here is a map of some Maptimes. Go to one of em and learn how to make this map better or make your own!

            See: <a href="https://github.com/maptime/maptime.github.io">Maptime on Github</a>
            </p>
        <script type="text/javascript">
  function initialize() {
                //var layers = ["terrain", "watercolor","toner"];


        var watercolor = new  L.StamenTileLayer("watercolor");
        var terrain = new L.StamenTileLayer("terrain");
        var toner= new  L.StamenTileLayer("toner");

        var bases = {
            "Watercolor":watercolor,
            "Terrain":terrain,
            "Toner":toner


        }

        L.Map = L.Map.extend({
                             openPopup: function(popup) {
                             //        this.closePopup();  // just comment this
                             this._popup = popup;

                             return this.addLayer(popup).fire('popupopen', {
                                                              popup: this._popup
                                                              });
                             }
                             }); /***  end of hack ***/


        var map = new L.Map('map', {
                            center: [39,-98],
                            zoom:4,
                            layers:watercolor
                            })

        var popmaps = function(feature,layer){
            var popUp = feature.properties.name
            layer.bindPopup(String(popUp));
        }

         L.control.layers(bases).addTo(map);

        var mapIco = L.icon({
          iconUrl:'mTico.svg',
          iconSize: [32,37],
          iconAnchor: [15,18.5],
          popupAnchor: [0, -9]
        })

          L.geoJson(maptimes, {
                pointToLayer:function (feature, latlng) {
                return L.marker(latlng, {
          icon:mapIco

               });
            },
           onEachFeature:popmaps
            }).addTo(map);


            }

        </script>

    </body>
</html>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>d3.js | SVG paths</title>
        <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

    </head>

    <body>

    <script>

    var w = 960, h = 500;

    // dataset = [
    // { "x":05, "y":30}, { "x":75, "y":30},
    // { "x":75, "y":90}, { "x":150, "y":90},
    // { "x":150, "y":150}, { "x":190, "y":150}
    // ];

        var dataset = [];                         
		for (var i = 0; i < 108; i++) {            
	    		var x = Math.floor((Math.random()*900)+1); 
	    		var y = Math.floor((Math.random()*500)+1);  
	    		dataset.push({"x":x, "y":y});            
		};

        var lineFunction = d3.svg.line()
				.x(function(d) { return d.x; })
				.y(function(d) { return d.y; })
				.interpolate("linear");

	svgViewport = d3.select("body").append("svg")
				.attr("width", w)
				.attr("height", h);

	svgViewport.append("path")
				.datum(dataset)
				.attr("d", lineFunction)
				.attr("stroke", "black")
				.attr("stroke-width", 3)
				.attr("fill", "none");


    </script>

    </body>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://dimplejs.org/dist/dimple.v1.1.5.min.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    .tooltip {
      opacity:1;
    }
    </style>
    
  </head>
  <body >
    
    <div id = 'chart35607324f46' class = 'rChart dimple'></div>    
    <script type="text/javascript">
  var opts = {
 "dom": "chart35607324f46",
"width":    800,
"height":    400,
"xAxis": {
 "type": "addTimeAxis",
"showPercent": false,
"inputFormat": "%Y-%m-%d",
"outputFormat": "%Y" 
},
"yAxis": {
 "type": "addMeasureAxis",
"showPercent": false,
"overrideMin":      0,
"overrideMax":      8 
},
"zAxis": [],
"colorAxis": [],
"defaultColors": [],
"layers": [
 {
 "x": "date",
"y": "bfast",
"data": {
 "date": [ "1951-01-01", "1951-02-01", "1951-03-01", "1951-04-01", "1951-05-01", "1951-06-01", "1951-07-01", "1951-08-01", "1951-09-01", "1951-10-01", "1951-11-01", "1951-12-01", "1952-01-01", "1952-02-01", "1952-03-01", "1952-04-01", "1952-05-01", "1952-06-01", "1952-07-01", "1952-08-01", "1952-09-01", "1952-10-01", "1952-11-01", "1952-12-01", "1953-01-01", "1953-02-01", "1953-03-01", "1953-04-01", "1953-05-01", "1953-06-01", "1953-07-01", "1953-08-01", "1953-09-01", "1953-10-01", "1953-11-01", "1953-12-01", "1954-01-01", "1954-02-01", "1954-03-01", "1954-04-01", "1954-05-01", "1954-06-01", "1954-07-01", "1954-08-01", "1954-09-01", "1954-10-01", "1954-11-01", "1954-12-01", "1955-01-01", "1955-02-01", "1955-03-01", "1955-04-01", "1955-05-01", "1955-06-01", "1955-07-01", "1955-08-01", "1955-09-01", "1955-10-01", "1955-11-01", "1955-12-01", "1956-01-01", "1956-02-01", "1956-03-01", "1956-04-01", "1956-05-01", "1956-06-01", "1956-07-01", "1956-08-01", "1956-09-01", "1956-10-01", "1956-11-01", "1956-12-01", "1957-01-01", "1957-02-01", "1957-03-01", "1957-04-01", "1957-05-01", "1957-06-01", "1957-07-01", "1957-08-01", "1957-09-01", "1957-10-01", "1957-11-01", "1957-12-01", "1958-01-01", "1958-02-01", "1958-03-01", "1958-04-01", "1958-05-01", "1958-06-01", "1958-07-01", "1958-08-01", "1958-09-01", "1958-10-01", "1958-11-01", "1958-12-01", "1959-01-01", "1959-02-01", "1959-03-01", "1959-04-01", "1959-05-01", "1959-06-01", "1959-07-01", "1959-08-01", "1959-09-01", "1959-10-01", "1959-11-01", "1959-12-01", "1960-01-01", "1960-02-01", "1960-03-01", "1960-04-01", "1960-05-01", "1960-06-01", "1960-07-01", "1960-08-01", "1960-09-01", "1960-10-01", "1960-11-01", "1960-12-01", "1961-01-01", "1961-02-01", "1961-03-01", "1961-04-01", "1961-05-01", "1961-06-01", "1961-07-01", "1961-08-01", "1961-09-01", "1961-10-01", "1961-11-01", "1961-12-01", "1962-01-01", "1962-02-01", "1962-03-01", "1962-04-01", "1962-05-01", "1962-06-01", "1962-07-01", "1962-08-01", "1962-09-01", "1962-10-01", "1962-11-01", "1962-12-01", "1963-01-01", "1963-02-01", "1963-03-01", "1963-04-01", "1963-05-01", "1963-06-01", "1963-07-01", "1963-08-01", "1963-09-01", "1963-10-01", "1963-11-01", "1963-12-01", "1964-01-01", "1964-02-01", "1964-03-01", "1964-04-01", "1964-05-01", "1964-06-01", "1964-07-01", "1964-08-01", "1964-09-01", "1964-10-01", "1964-11-01", "1964-12-01", "1965-01-01", "1965-02-01", "1965-03-01", "1965-04-01", "1965-05-01", "1965-06-01", "1965-07-01", "1965-08-01", "1965-09-01", "1965-10-01", "1965-11-01", "1965-12-01", "1966-01-01", "1966-02-01", "1966-03-01", "1966-04-01", "1966-05-01", "1966-06-01", "1966-07-01", "1966-08-01", "1966-09-01", "1966-10-01", "1966-11-01", "1966-12-01", "1967-01-01", "1967-02-01", "1967-03-01", "1967-04-01", "1967-05-01", "1967-06-01", "1967-07-01", "1967-08-01", "1967-09-01", "1967-10-01", "1967-11-01", "1967-12-01", "1968-01-01", "1968-02-01", "1968-03-01", "1968-04-01", "1968-05-01", "1968-06-01", "1968-07-01", "1968-08-01", "1968-09-01", "1968-10-01", "1968-11-01", "1968-12-01", "1969-01-01", "1969-02-01", "1969-03-01", "1969-04-01", "1969-05-01", "1969-06-01", "1969-07-01", "1969-08-01", "1969-09-01", "1969-10-01", "1969-11-01", "1969-12-01", "1970-01-01", "1970-02-01", "1970-03-01", "1970-04-01", "1970-05-01", "1970-06-01", "1970-07-01", "1970-08-01", "1970-09-01", "1970-10-01", "1970-11-01", "1970-12-01", "1971-01-01", "1971-02-01", "1971-03-01", "1971-04-01", "1971-05-01", "1971-06-01", "1971-07-01", "1971-08-01", "1971-09-01", "1971-10-01", "1971-11-01", "1971-12-01", "1972-01-01", "1972-02-01", "1972-03-01", "1972-04-01", "1972-05-01", "1972-06-01", "1972-07-01", "1972-08-01", "1972-09-01", "1972-10-01", "1972-11-01", "1972-12-01", "1973-01-01", "1973-02-01", "1973-03-01", "1973-04-01", "1973-05-01", "1973-06-01", "1973-07-01", "1973-08-01", "1973-09-01", "1973-10-01", "1973-11-01", "1973-12-01", "1974-01-01", "1974-02-01", "1974-03-01", "1974-04-01", "1974-05-01", "1974-06-01", "1974-07-01", "1974-08-01", "1974-09-01", "1974-10-01", "1974-11-01", "1974-12-01", "1975-01-01", "1975-02-01", "1975-03-01", "1975-04-01", "1975-05-01", "1975-06-01", "1975-07-01", "1975-08-01", "1975-09-01", "1975-10-01", "1975-11-01", "1975-12-01", "1976-01-01", "1976-02-01", "1976-03-01", "1976-04-01", "1976-05-01", "1976-06-01", "1976-07-01", "1976-08-01", "1976-09-01", "1976-10-01", "1976-11-01", "1976-12-01", "1977-01-01", "1977-02-01", "1977-03-01", "1977-04-01", "1977-05-01", "1977-06-01", "1977-07-01", "1977-08-01", "1977-09-01", "1977-10-01", "1977-11-01", "1977-12-01", "1978-01-01", "1978-02-01", "1978-03-01", "1978-04-01", "1978-05-01", "1978-06-01", "1978-07-01", "1978-08-01", "1978-09-01", "1978-10-01", "1978-11-01", "1978-12-01", "1979-01-01", "1979-02-01", "1979-03-01", "1979-04-01", "1979-05-01", "1979-06-01", "1979-07-01", "1979-08-01", "1979-09-01", "1979-10-01", "1979-11-01", "1979-12-01", "1980-01-01", "1980-02-01", "1980-03-01", "1980-04-01", "1980-05-01", "1980-06-01", "1980-07-01", "1980-08-01", "1980-09-01", "1980-10-01", "1980-11-01", "1980-12-01", "1981-01-01", "1981-02-01", "1981-03-01", "1981-04-01", "1981-05-01", "1981-06-01", "1981-07-01", "1981-08-01", "1981-09-01", "1981-10-01", "1981-11-01", "1981-12-01", "1982-01-01", "1982-02-01", "1982-03-01", "1982-04-01", "1982-05-01", "1982-06-01", "1982-07-01", "1982-08-01", "1982-09-01", "1982-10-01", "1982-11-01", "1982-12-01", "1983-01-01", "1983-02-01", "1983-03-01", "1983-04-01", "1983-05-01", "1983-06-01", "1983-07-01", "1983-08-01", "1983-09-01", "1983-10-01", "1983-11-01", "1983-12-01", "1984-01-01", "1984-02-01", "1984-03-01", "1984-04-01", "1984-05-01", "1984-06-01", "1984-07-01", "1984-08-01", "1984-09-01", "1984-10-01", "1984-11-01", "1984-12-01", "1985-01-01", "1985-02-01", "1985-03-01", "1985-04-01", "1985-05-01", "1985-06-01", "1985-07-01", "1985-08-01", "1985-09-01", "1985-10-01", "1985-11-01", "1985-12-01", "1986-01-01", "1986-02-01", "1986-03-01", "1986-04-01", "1986-05-01", "1986-06-01", "1986-07-01", "1986-08-01", "1986-09-01", "1986-10-01", "1986-11-01", "1986-12-01", "1987-01-01", "1987-02-01", "1987-03-01", "1987-04-01", "1987-05-01", "1987-06-01", "1987-07-01", "1987-08-01", "1987-09-01", "1987-10-01", "1987-11-01", "1987-12-01", "1988-01-01", "1988-02-01", "1988-03-01", "1988-04-01", "1988-05-01", "1988-06-01", "1988-07-01", "1988-08-01", "1988-09-01", "1988-10-01", "1988-11-01", "1988-12-01", "1989-01-01", "1989-02-01", "1989-03-01", "1989-04-01", "1989-05-01", "1989-06-01", "1989-07-01", "1989-08-01", "1989-09-01", "1989-10-01", "1989-11-01", "1989-12-01", "1990-01-01", "1990-02-01", "1990-03-01", "1990-04-01", "1990-05-01", "1990-06-01", "1990-07-01", "1990-08-01", "1990-09-01", "1990-10-01", "1990-11-01", "1990-12-01", "1991-01-01", "1991-02-01", "1991-03-01", "1991-04-01", "1991-05-01", "1991-06-01", "1991-07-01", "1991-08-01", "1991-09-01", "1991-10-01", "1991-11-01", "1991-12-01", "1992-01-01", "1992-02-01", "1992-03-01", "1992-04-01", "1992-05-01", "1992-06-01", "1992-07-01", "1992-08-01", "1992-09-01", "1992-10-01", "1992-11-01", "1992-12-01", "1993-01-01", "1993-02-01", "1993-03-01", "1993-04-01", "1993-05-01", "1993-06-01", "1993-07-01", "1993-08-01", "1993-09-01", "1993-10-01", "1993-11-01", "1993-12-01", "1994-01-01", "1994-02-01", "1994-03-01", "1994-04-01", "1994-05-01", "1994-06-01", "1994-07-01", "1994-08-01", "1994-09-01", "1994-10-01", "1994-11-01", "1994-12-01", "1995-01-01", "1995-02-01", "1995-03-01", "1995-04-01", "1995-05-01", "1995-06-01", "1995-07-01", "1995-08-01", "1995-09-01", "1995-10-01", "1995-11-01", "1995-12-01", "1996-01-01", "1996-02-01", "1996-03-01", "1996-04-01", "1996-05-01", "1996-06-01", "1996-07-01", "1996-08-01", "1996-09-01", "1996-10-01", "1996-11-01", "1996-12-01", "1997-01-01", "1997-02-01", "1997-03-01", "1997-04-01", "1997-05-01", "1997-06-01", "1997-07-01", "1997-08-01", "1997-09-01", "1997-10-01", "1997-11-01", "1997-12-01", "1998-01-01", "1998-02-01", "1998-03-01", "1998-04-01", "1998-05-01", "1998-06-01", "1998-07-01", "1998-08-01", "1998-09-01", "1998-10-01", "1998-11-01", "1998-12-01", "1999-01-01", "1999-02-01", "1999-03-01", "1999-04-01", "1999-05-01", "1999-06-01", "1999-07-01", "1999-08-01", "1999-09-01", "1999-10-01", "1999-11-01", "1999-12-01", "2000-01-01", "2000-02-01", "2000-03-01", "2000-04-01", "2000-05-01", "2000-06-01", "2000-07-01", "2000-08-01", "2000-09-01", "2000-10-01", "2000-11-01", "2000-12-01", "2001-01-01", "2001-02-01", "2001-03-01", "2001-04-01", "2001-05-01", "2001-06-01", "2001-07-01", "2001-08-01", "2001-09-01", "2001-10-01", "2001-11-01", "2001-12-01", "2002-01-01", "2002-02-01", "2002-03-01", "2002-04-01", "2002-05-01", "2002-06-01", "2002-07-01", "2002-08-01", "2002-09-01", "2002-10-01", "2002-11-01", "2002-12-01", "2003-01-01", "2003-02-01", "2003-03-01", "2003-04-01", "2003-05-01", "2003-06-01", "2003-07-01", "2003-08-01", "2003-09-01", "2003-10-01", "2003-11-01", "2003-12-01", "2004-01-01", "2004-02-01", "2004-03-01", "2004-04-01", "2004-05-01", "2004-06-01", "2004-07-01", "2004-08-01", "2004-09-01", "2004-10-01", "2004-11-01", "2004-12-01", "2005-01-01", "2005-02-01", "2005-03-01", "2005-04-01", "2005-05-01", "2005-06-01", "2005-07-01", "2005-08-01", "2005-09-01", "2005-10-01", "2005-11-01", "2005-12-01", "2006-01-01", "2006-02-01", "2006-03-01", "2006-04-01", "2006-05-01", "2006-06-01", "2006-07-01", "2006-08-01", "2006-09-01", "2006-10-01", "2006-11-01", "2006-12-01", "2007-01-01", "2007-02-01", "2007-03-01", "2007-04-01", "2007-05-01", "2007-06-01", "2007-07-01", "2007-08-01", "2007-09-01", "2007-10-01", "2007-11-01", "2007-12-01", "2008-01-01", "2008-02-01", "2008-03-01", "2008-04-01", "2008-05-01", "2008-06-01", "2008-07-01", "2008-08-01", "2008-09-01", "2008-10-01", "2008-11-01", "2008-12-01", "2009-01-01", "2009-02-01", "2009-03-01", "2009-04-01", "2009-05-01", "2009-06-01", "2009-07-01", "2009-08-01", "2009-09-01", "2009-10-01", "2009-11-01", "2009-12-01", "2010-01-01", "2010-02-01", "2010-03-01", "2010-04-01", "2010-05-01", "2010-06-01", "2010-07-01", "2010-08-01", "2010-09-01", "2010-10-01", "2010-11-01", "2010-12-01", "2011-01-01", "2011-02-01", "2011-03-01", "2011-04-01", "2011-05-01", "2011-06-01", "2011-07-01", "2011-08-01", "2011-09-01", "2011-10-01", "2011-11-01", "2011-12-01", "2012-01-01", "2012-02-01", "2012-03-01", "2012-04-01", "2012-05-01", "2012-06-01", "2012-07-01", "2012-08-01", "2012-09-01", "2012-10-01", "2012-11-01", "2012-12-01", "2013-01-01", "2013-02-01", "2013-03-01", "2013-04-01", "2013-05-01", "2013-06-01", "2013-07-01", "2013-08-01", "2013-09-01", "2013-10-01", "2013-11-01", "2013-12-01", "2014-01-01", "2014-02-01", "2014-03-01" ],
"bfast": [ 3.1168, 3.1249, 3.1331, 3.1412, 3.1493, 3.1574, 3.1656, 3.1737, 3.1818, 3.1899,  3.198, 3.2062, 3.2143, 3.2224, 3.2305, 3.2386, 3.2468, 3.2549,  3.263, 3.2711, 3.2792, 3.2874, 3.2955, 3.3036, 3.3117, 3.3198,  3.328, 3.3361, 3.3442, 3.3523, 3.3604, 3.3686, 3.3767, 3.3848, 3.3929,  3.401, 3.4092, 3.4173, 3.4254, 3.4335, 3.4416, 3.4498, 3.4579,  3.466, 3.4741, 3.4823, 3.4904, 3.4985, 3.5066, 3.5147, 3.5229,  3.531, 3.5391, 3.5472, 3.5553, 3.5635, 3.5716, 3.5797, 3.5878, 3.5959, 3.6041, 3.6122, 3.6203, 3.6284, 3.6365, 3.6447, 3.6528, 3.6609,  3.669, 3.6771, 3.6853, 3.6934, 3.7015, 3.7096, 3.7177, 3.7259,  3.734, 3.7421, 3.7502, 3.7584, 3.7665, 3.7746, 3.7827, 3.7908,  3.799, 3.8071, 3.8152, 3.8233, 3.8314, 3.8396, 3.8477, 3.8558, 3.8639,  3.872, 3.8802, 3.8883, 3.8964, 3.9045, 3.9126, 3.9208, 3.9289,  3.937, 3.9451, 3.9532, 3.9614, 3.9695, 3.9776, 3.9857, 3.9938,  4.002, 4.0101, 4.0182, 4.0263, 4.0344, 4.0426, 4.0507, 4.0588, 4.0669, 4.0751, 4.0832, 4.0913, 4.0994, 4.1075, 4.1157, 4.1238, 4.1319,   4.14, 4.1481, 4.1563, 4.1644, 4.1725, 4.1806, 4.1887, 4.1969,  4.205, 4.2131, 4.2212, 4.2293, 4.2375, 4.2456, 4.2537, 4.2618, 4.2699, 4.2781, 4.2862, 4.2943, 4.3024, 4.3105, 4.3187, 4.3268, 4.3349,  4.343, 4.3511, 4.3593, 4.3674, 4.3755, 4.3836, 4.3918, 4.3999,  4.408, 4.4161, 4.4242, 4.4324, 4.4405, 4.4486, 4.4567, 4.4648,  4.473, 4.4811, 4.4892, 4.4973, 4.5054, 4.5086, 4.5091, 4.5095,   4.51, 4.5105, 4.5109, 4.5114, 4.5118, 4.5123, 4.5127, 4.5132, 4.5136, 4.5141, 4.5146,  4.515, 4.5155, 4.5159, 4.5164, 4.5168, 4.5173, 4.5177, 4.5182, 4.5187, 4.5191, 4.5196,   4.52, 4.5205, 4.5209, 4.5214, 4.5218, 4.5223, 4.5228, 4.5232, 4.5237, 4.5241, 4.5246,  4.525, 4.5255, 4.5259, 4.5264, 4.5268, 4.5273, 4.5278, 4.5282, 4.5287, 4.5291, 4.5296,   4.53, 4.5305, 4.5309, 4.5314, 4.5319, 4.5323, 4.5328, 4.5332, 4.5337, 4.5341, 4.5346,  4.535, 4.5355,  4.536, 4.5364, 4.5369, 4.5373, 4.5378, 4.5382, 4.5387, 4.5391, 4.5396, 4.5401, 4.5405,  4.541, 4.5414, 4.5419, 4.5423, 4.5428, 4.5432, 4.5437, 4.5441, 4.5446, 4.5451, 4.5455,  4.546, 4.5464, 4.5469, 4.5473, 4.5478, 4.5482, 4.5487, 4.5492, 4.5496, 4.5501, 4.5505,  4.551, 4.5514, 4.5519, 4.5523, 4.5528, 4.5533, 4.5537, 4.5542, 4.5546, 4.5551, 4.5555,  4.556, 4.5564, 4.5569, 4.5574, 4.5578, 4.5583, 4.5587, 4.5592, 4.5596, 4.5601, 4.5605,  4.561, 4.5615, 4.5619, 4.5624, 4.5628, 4.5633, 4.5637, 4.5642, 4.5646, 4.5651, 4.5655,  4.566, 4.5665, 4.5669, 4.5674, 4.5678, 4.5683, 4.5687, 4.5692, 4.5696, 4.5701, 4.5706,  4.571, 4.5715, 4.5719, 4.5724, 4.5728, 4.5733, 4.5737, 4.5742, 4.5747, 4.5751, 4.5756,  4.576, 4.5765, 4.5769, 4.5774, 4.5778, 4.5783, 4.5788, 4.5792, 4.5797, 4.5801, 4.5806,  4.581, 4.5815,  4.546, 4.5551, 4.5641, 4.5732, 4.5823, 4.5913, 4.6004, 4.6094, 4.6185, 4.6276, 4.6366, 4.6457, 4.6547, 4.6638, 4.6728, 4.6819,  4.691,    4.7, 4.7091, 4.7181, 4.7272, 4.7363, 4.7453, 4.7544, 4.7634, 4.7725, 4.7816, 4.7906, 4.7997, 4.8087, 4.8178, 4.8269, 4.8359,  4.845,  4.854, 4.8631, 4.8721, 4.8812, 4.8903, 4.8993, 4.9084, 4.9174, 4.9265, 4.9356, 4.9446, 4.9537, 4.9627, 4.9718, 4.9809, 4.9899,  4.999,  5.008, 5.0171, 5.0262, 5.0352, 5.0443, 5.0533, 5.0624, 5.0714, 5.0805, 5.0896, 5.0986, 5.1077, 5.1167, 5.1258, 5.1349, 5.1439,  5.153,  5.162, 5.1711, 5.1802, 5.1892, 5.1983, 5.2073, 5.2164, 5.2255, 5.2345, 5.2436, 5.2526, 5.2617, 5.2707, 5.2798, 5.2889, 5.2979,  5.307,  5.316, 5.3251, 5.3342, 5.3432, 5.3523, 5.3613, 5.3704, 5.3795, 5.3885, 5.3976, 5.4066, 5.4157, 5.4248, 5.4338, 5.4429, 5.4519,  5.461,   5.47, 5.4791, 5.4882, 5.4972, 5.5063, 5.5153, 5.5244, 5.5335, 5.5425, 5.5516, 5.5606, 5.5697, 5.5788, 5.5878, 5.5969, 5.6059,  5.615, 5.6241, 5.6331, 5.6422, 5.6512, 5.6603, 5.6693, 5.6784, 5.6875, 5.6965, 5.7056, 5.7146, 5.7237, 5.7328, 5.7418, 5.7509, 5.7599,  5.769, 5.7781, 5.7871, 5.7962, 5.8052, 5.8143, 5.8234, 5.8324, 5.8415, 5.8505, 5.8596, 5.8687, 5.8777, 5.8868, 5.8958, 5.9049, 5.9139,  5.923, 5.9321, 5.9411, 5.9502, 5.9592, 5.9683, 5.9774, 5.9864, 5.9955, 6.0045, 6.0136, 6.0227, 6.0317, 6.0408, 6.0498, 6.0589,  6.068,  6.077, 6.0861, 6.0951, 6.1042, 6.1132, 6.1223, 6.1314, 6.1404, 6.1495, 6.1585, 6.1676, 6.1767, 6.1857, 6.1948, 6.2038, 6.2129,  6.222,  6.231, 6.2401, 6.2491, 6.2582, 6.2673, 6.2763, 6.2854, 6.2944, 6.3035, 6.3125, 6.3216, 6.3307, 6.3397, 6.3488, 6.3578, 6.3669,  6.376,  6.385, 6.3941, 6.4031, 6.4122, 6.4213, 6.4303, 6.4394, 6.4484, 6.4575, 6.4666, 6.4756, 6.4847, 6.4937, 6.5028, 6.5118, 6.5209,   6.53,  6.539, 6.5481, 6.5571, 6.5662, 6.9818,  6.983, 6.9842, 6.9854, 6.9865, 6.9877, 6.9889, 6.9901, 6.9912, 6.9924, 6.9936, 6.9948,  6.996, 6.9971, 6.9983, 6.9995, 7.0007, 7.0018,  7.003, 7.0042, 7.0054, 7.0065, 7.0077, 7.0089, 7.0101, 7.0113, 7.0124, 7.0136, 7.0148,  7.016, 7.0171, 7.0183, 7.0195, 7.0207, 7.0218,  7.023, 7.0242, 7.0254, 7.0266, 7.0277, 7.0289, 7.0301, 7.0313, 7.0324, 7.0336, 7.0348,  7.036, 7.0371, 7.0383, 7.0395, 7.0407, 7.0419,  7.043, 7.0442, 7.0454, 7.0466, 7.0477, 7.0489, 7.0501, 7.0513, 7.0525, 7.0536, 7.0548,  7.056, 7.0572, 7.0583, 7.0595, 7.0607, 7.0619,  7.063, 7.0642, 7.0654, 7.0666, 7.0678, 7.0689, 7.0701, 7.0713, 7.0725, 7.0736, 7.0748,  7.076, 7.0772, 7.0783, 7.0795, 7.0807, 7.0819, 7.0831, 7.0842, 7.0854, 7.0866, 7.0878, 7.0889, 7.0901, 7.0913, 7.0925, 7.0937, 7.0948,  7.096, 7.0972, 7.0984, 7.0995, 7.1007, 7.1019, 7.1031, 7.1042, 7.1054, 7.1066, 7.1078,  7.109, 7.1101, 7.1113, 7.1125, 7.1137, 7.1148,  7.116, 7.1172, 7.1184, 7.1195, 7.1207, 7.1219, 7.1231, 7.1243, 7.1254, 7.1266, 7.1278,  7.129, 7.1301, 7.1313, 7.1325, 7.1337, 7.1348,  7.136, 7.1372, 7.1384, 7.1396, 7.1407, 7.1419, 7.1431, 7.1443, 7.1454, 7.1466, 7.1478,  7.149, 7.1502, 7.1513, 7.1525, 7.1537, 7.1549,  7.156, 7.1572, 7.1584, 7.1596, 7.1607, 7.1619, 7.1631, 7.1643, 7.1655, 7.1666, 7.1678,  7.169, 7.1702, 7.1713, 7.1725, 7.1737, 7.1749,  7.176, 7.1772, 7.1784, 7.1796, 7.1808, 7.1819, 7.1831, 7.1843, 7.1855, 7.1866, 7.1878,  7.189, 7.1902, 7.1914, 7.1925, 7.1937, 7.1949, 7.1961, 7.1972, 7.1984, 7.1996, 7.2008, 7.2019, 7.2031, 7.2043, 7.2055, 7.2067, 7.2078,  7.209, 7.2102, 7.2114, 7.2125, 7.2137, 7.2149, 7.2161, 7.2172, 7.2184 ] 
},
"facet": null,
"type": "line" 
},
{
 "x": "date",
"y": "bfast",
"data": {
 "date": [ "1951-01-01", "1951-02-01", "1951-03-01", "1951-04-01", "1951-05-01", "1951-06-01", "1951-07-01", "1951-08-01", "1951-09-01", "1951-10-01", "1951-11-01", "1951-12-01", "1952-01-01", "1952-02-01", "1952-03-01", "1952-04-01", "1952-05-01", "1952-06-01", "1952-07-01", "1952-08-01", "1952-09-01", "1952-10-01", "1952-11-01", "1952-12-01", "1953-01-01", "1953-02-01", "1953-03-01", "1953-04-01", "1953-05-01", "1953-06-01", "1953-07-01", "1953-08-01", "1953-09-01", "1953-10-01", "1953-11-01", "1953-12-01", "1954-01-01", "1954-02-01", "1954-03-01", "1954-04-01", "1954-05-01", "1954-06-01", "1954-07-01", "1954-08-01", "1954-09-01", "1954-10-01", "1954-11-01", "1954-12-01", "1955-01-01", "1955-02-01", "1955-03-01", "1955-04-01", "1955-05-01", "1955-06-01", "1955-07-01", "1955-08-01", "1955-09-01", "1955-10-01", "1955-11-01", "1955-12-01", "1956-01-01", "1956-02-01", "1956-03-01", "1956-04-01", "1956-05-01", "1956-06-01", "1956-07-01", "1956-08-01", "1956-09-01", "1956-10-01", "1956-11-01", "1956-12-01", "1957-01-01", "1957-02-01", "1957-03-01", "1957-04-01", "1957-05-01", "1957-06-01", "1957-07-01", "1957-08-01", "1957-09-01", "1957-10-01", "1957-11-01", "1957-12-01", "1958-01-01", "1958-02-01", "1958-03-01", "1958-04-01", "1958-05-01", "1958-06-01", "1958-07-01", "1958-08-01", "1958-09-01", "1958-10-01", "1958-11-01", "1958-12-01", "1959-01-01", "1959-02-01", "1959-03-01", "1959-04-01", "1959-05-01", "1959-06-01", "1959-07-01", "1959-08-01", "1959-09-01", "1959-10-01", "1959-11-01", "1959-12-01", "1960-01-01", "1960-02-01", "1960-03-01", "1960-04-01", "1960-05-01", "1960-06-01", "1960-07-01", "1960-08-01", "1960-09-01", "1960-10-01", "1960-11-01", "1960-12-01", "1961-01-01", "1961-02-01", "1961-03-01", "1961-04-01", "1961-05-01", "1961-06-01", "1961-07-01", "1961-08-01", "1961-09-01", "1961-10-01", "1961-11-01", "1961-12-01", "1962-01-01", "1962-02-01", "1962-03-01", "1962-04-01", "1962-05-01", "1962-06-01", "1962-07-01", "1962-08-01", "1962-09-01", "1962-10-01", "1962-11-01", "1962-12-01", "1963-01-01", "1963-02-01", "1963-03-01", "1963-04-01", "1963-05-01", "1963-06-01", "1963-07-01", "1963-08-01", "1963-09-01", "1963-10-01", "1963-11-01", "1963-12-01", "1964-01-01", "1964-02-01", "1964-03-01", "1964-04-01", "1964-05-01", "1964-06-01", "1964-07-01", "1964-08-01", "1964-09-01", "1964-10-01", "1964-11-01", "1964-12-01", "1965-01-01", "1965-02-01", "1965-03-01", "1965-04-01", "1965-05-01", "1965-06-01", "1965-07-01", "1965-08-01", "1965-09-01", "1965-10-01", "1965-11-01", "1965-12-01", "1966-01-01", "1966-02-01", "1966-03-01", "1966-04-01", "1966-05-01", "1966-06-01", "1966-07-01", "1966-08-01", "1966-09-01", "1966-10-01", "1966-11-01", "1966-12-01", "1967-01-01", "1967-02-01", "1967-03-01", "1967-04-01", "1967-05-01", "1967-06-01", "1967-07-01", "1967-08-01", "1967-09-01", "1967-10-01", "1967-11-01", "1967-12-01", "1968-01-01", "1968-02-01", "1968-03-01", "1968-04-01", "1968-05-01", "1968-06-01", "1968-07-01", "1968-08-01", "1968-09-01", "1968-10-01", "1968-11-01", "1968-12-01", "1969-01-01", "1969-02-01", "1969-03-01", "1969-04-01", "1969-05-01", "1969-06-01", "1969-07-01", "1969-08-01", "1969-09-01", "1969-10-01", "1969-11-01", "1969-12-01", "1970-01-01", "1970-02-01", "1970-03-01", "1970-04-01", "1970-05-01", "1970-06-01", "1970-07-01", "1970-08-01", "1970-09-01", "1970-10-01", "1970-11-01", "1970-12-01", "1971-01-01", "1971-02-01", "1971-03-01", "1971-04-01", "1971-05-01", "1971-06-01", "1971-07-01", "1971-08-01", "1971-09-01", "1971-10-01", "1971-11-01", "1971-12-01", "1972-01-01", "1972-02-01", "1972-03-01", "1972-04-01", "1972-05-01", "1972-06-01", "1972-07-01", "1972-08-01", "1972-09-01", "1972-10-01", "1972-11-01", "1972-12-01", "1973-01-01", "1973-02-01", "1973-03-01", "1973-04-01", "1973-05-01", "1973-06-01", "1973-07-01", "1973-08-01", "1973-09-01", "1973-10-01", "1973-11-01", "1973-12-01", "1974-01-01", "1974-02-01", "1974-03-01", "1974-04-01", "1974-05-01", "1974-06-01", "1974-07-01", "1974-08-01", "1974-09-01", "1974-10-01", "1974-11-01", "1974-12-01", "1975-01-01", "1975-02-01", "1975-03-01", "1975-04-01", "1975-05-01", "1975-06-01", "1975-07-01", "1975-08-01", "1975-09-01", "1975-10-01", "1975-11-01", "1975-12-01", "1976-01-01", "1976-02-01", "1976-03-01", "1976-04-01", "1976-05-01", "1976-06-01", "1976-07-01", "1976-08-01", "1976-09-01", "1976-10-01", "1976-11-01", "1976-12-01", "1977-01-01", "1977-02-01", "1977-03-01", "1977-04-01", "1977-05-01", "1977-06-01", "1977-07-01", "1977-08-01", "1977-09-01", "1977-10-01", "1977-11-01", "1977-12-01", "1978-01-01", "1978-02-01", "1978-03-01", "1978-04-01", "1978-05-01", "1978-06-01", "1978-07-01", "1978-08-01", "1978-09-01", "1978-10-01", "1978-11-01", "1978-12-01", "1979-01-01", "1979-02-01", "1979-03-01", "1979-04-01", "1979-05-01", "1979-06-01", "1979-07-01", "1979-08-01", "1979-09-01", "1979-10-01", "1979-11-01", "1979-12-01", "1980-01-01", "1980-02-01", "1980-03-01", "1980-04-01", "1980-05-01", "1980-06-01", "1980-07-01", "1980-08-01", "1980-09-01", "1980-10-01", "1980-11-01", "1980-12-01", "1981-01-01", "1981-02-01", "1981-03-01", "1981-04-01", "1981-05-01", "1981-06-01", "1981-07-01", "1981-08-01", "1981-09-01", "1981-10-01", "1981-11-01", "1981-12-01", "1982-01-01", "1982-02-01", "1982-03-01", "1982-04-01", "1982-05-01", "1982-06-01", "1982-07-01", "1982-08-01", "1982-09-01", "1982-10-01", "1982-11-01", "1982-12-01", "1983-01-01", "1983-02-01", "1983-03-01", "1983-04-01", "1983-05-01", "1983-06-01", "1983-07-01", "1983-08-01", "1983-09-01", "1983-10-01", "1983-11-01", "1983-12-01", "1984-01-01", "1984-02-01", "1984-03-01", "1984-04-01", "1984-05-01", "1984-06-01", "1984-07-01", "1984-08-01", "1984-09-01", "1984-10-01", "1984-11-01", "1984-12-01", "1985-01-01", "1985-02-01", "1985-03-01", "1985-04-01", "1985-05-01", "1985-06-01", "1985-07-01", "1985-08-01", "1985-09-01", "1985-10-01", "1985-11-01", "1985-12-01", "1986-01-01", "1986-02-01", "1986-03-01", "1986-04-01", "1986-05-01", "1986-06-01", "1986-07-01", "1986-08-01", "1986-09-01", "1986-10-01", "1986-11-01", "1986-12-01", "1987-01-01", "1987-02-01", "1987-03-01", "1987-04-01", "1987-05-01", "1987-06-01", "1987-07-01", "1987-08-01", "1987-09-01", "1987-10-01", "1987-11-01", "1987-12-01", "1988-01-01", "1988-02-01", "1988-03-01", "1988-04-01", "1988-05-01", "1988-06-01", "1988-07-01", "1988-08-01", "1988-09-01", "1988-10-01", "1988-11-01", "1988-12-01", "1989-01-01", "1989-02-01", "1989-03-01", "1989-04-01", "1989-05-01", "1989-06-01", "1989-07-01", "1989-08-01", "1989-09-01", "1989-10-01", "1989-11-01", "1989-12-01", "1990-01-01", "1990-02-01", "1990-03-01", "1990-04-01", "1990-05-01", "1990-06-01", "1990-07-01", "1990-08-01", "1990-09-01", "1990-10-01", "1990-11-01", "1990-12-01", "1991-01-01", "1991-02-01", "1991-03-01", "1991-04-01", "1991-05-01", "1991-06-01", "1991-07-01", "1991-08-01", "1991-09-01", "1991-10-01", "1991-11-01", "1991-12-01", "1992-01-01", "1992-02-01", "1992-03-01", "1992-04-01", "1992-05-01", "1992-06-01", "1992-07-01", "1992-08-01", "1992-09-01", "1992-10-01", "1992-11-01", "1992-12-01", "1993-01-01", "1993-02-01", "1993-03-01", "1993-04-01", "1993-05-01", "1993-06-01", "1993-07-01", "1993-08-01", "1993-09-01", "1993-10-01", "1993-11-01", "1993-12-01", "1994-01-01", "1994-02-01", "1994-03-01", "1994-04-01", "1994-05-01", "1994-06-01", "1994-07-01", "1994-08-01", "1994-09-01", "1994-10-01", "1994-11-01", "1994-12-01", "1995-01-01", "1995-02-01", "1995-03-01", "1995-04-01", "1995-05-01", "1995-06-01", "1995-07-01", "1995-08-01", "1995-09-01", "1995-10-01", "1995-11-01", "1995-12-01", "1996-01-01", "1996-02-01", "1996-03-01", "1996-04-01", "1996-05-01", "1996-06-01", "1996-07-01", "1996-08-01", "1996-09-01", "1996-10-01", "1996-11-01", "1996-12-01", "1997-01-01", "1997-02-01", "1997-03-01", "1997-04-01", "1997-05-01", "1997-06-01", "1997-07-01", "1997-08-01", "1997-09-01", "1997-10-01", "1997-11-01", "1997-12-01", "1998-01-01", "1998-02-01", "1998-03-01", "1998-04-01", "1998-05-01", "1998-06-01", "1998-07-01", "1998-08-01", "1998-09-01", "1998-10-01", "1998-11-01", "1998-12-01", "1999-01-01", "1999-02-01", "1999-03-01", "1999-04-01", "1999-05-01", "1999-06-01", "1999-07-01", "1999-08-01", "1999-09-01", "1999-10-01", "1999-11-01", "1999-12-01", "2000-01-01", "2000-02-01", "2000-03-01", "2000-04-01", "2000-05-01", "2000-06-01", "2000-07-01", "2000-08-01", "2000-09-01", "2000-10-01", "2000-11-01", "2000-12-01", "2001-01-01", "2001-02-01", "2001-03-01", "2001-04-01", "2001-05-01", "2001-06-01", "2001-07-01", "2001-08-01", "2001-09-01", "2001-10-01", "2001-11-01", "2001-12-01", "2002-01-01", "2002-02-01", "2002-03-01", "2002-04-01", "2002-05-01", "2002-06-01", "2002-07-01", "2002-08-01", "2002-09-01", "2002-10-01", "2002-11-01", "2002-12-01", "2003-01-01", "2003-02-01", "2003-03-01", "2003-04-01", "2003-05-01", "2003-06-01", "2003-07-01", "2003-08-01", "2003-09-01", "2003-10-01", "2003-11-01", "2003-12-01", "2004-01-01", "2004-02-01", "2004-03-01", "2004-04-01", "2004-05-01", "2004-06-01", "2004-07-01", "2004-08-01", "2004-09-01", "2004-10-01", "2004-11-01", "2004-12-01", "2005-01-01", "2005-02-01", "2005-03-01", "2005-04-01", "2005-05-01", "2005-06-01", "2005-07-01", "2005-08-01", "2005-09-01", "2005-10-01", "2005-11-01", "2005-12-01", "2006-01-01", "2006-02-01", "2006-03-01", "2006-04-01", "2006-05-01", "2006-06-01", "2006-07-01", "2006-08-01", "2006-09-01", "2006-10-01", "2006-11-01", "2006-12-01", "2007-01-01", "2007-02-01", "2007-03-01", "2007-04-01", "2007-05-01", "2007-06-01", "2007-07-01", "2007-08-01", "2007-09-01", "2007-10-01", "2007-11-01", "2007-12-01", "2008-01-01", "2008-02-01", "2008-03-01", "2008-04-01", "2008-05-01", "2008-06-01", "2008-07-01", "2008-08-01", "2008-09-01", "2008-10-01", "2008-11-01", "2008-12-01", "2009-01-01", "2009-02-01", "2009-03-01", "2009-04-01", "2009-05-01", "2009-06-01", "2009-07-01", "2009-08-01", "2009-09-01", "2009-10-01", "2009-11-01", "2009-12-01", "2010-01-01", "2010-02-01", "2010-03-01", "2010-04-01", "2010-05-01", "2010-06-01", "2010-07-01", "2010-08-01", "2010-09-01", "2010-10-01", "2010-11-01", "2010-12-01", "2011-01-01", "2011-02-01", "2011-03-01", "2011-04-01", "2011-05-01", "2011-06-01", "2011-07-01", "2011-08-01", "2011-09-01", "2011-10-01", "2011-11-01", "2011-12-01", "2012-01-01", "2012-02-01", "2012-03-01", "2012-04-01", "2012-05-01", "2012-06-01", "2012-07-01", "2012-08-01", "2012-09-01", "2012-10-01", "2012-11-01", "2012-12-01", "2013-01-01", "2013-02-01", "2013-03-01", "2013-04-01", "2013-05-01", "2013-06-01", "2013-07-01", "2013-08-01", "2013-09-01", "2013-10-01", "2013-11-01", "2013-12-01", "2014-01-01", "2014-02-01", "2014-03-01" ],
"bfast": [ 3.1168, 3.1249, 3.1331, 3.1412, 3.1493, 3.1574, 3.1656, 3.1737, 3.1818, 3.1899,  3.198, 3.2062, 3.2143, 3.2224, 3.2305, 3.2386, 3.2468, 3.2549,  3.263, 3.2711, 3.2792, 3.2874, 3.2955, 3.3036, 3.3117, 3.3198,  3.328, 3.3361, 3.3442, 3.3523, 3.3604, 3.3686, 3.3767, 3.3848, 3.3929,  3.401, 3.4092, 3.4173, 3.4254, 3.4335, 3.4416, 3.4498, 3.4579,  3.466, 3.4741, 3.4823, 3.4904, 3.4985, 3.5066, 3.5147, 3.5229,  3.531, 3.5391, 3.5472, 3.5553, 3.5635, 3.5716, 3.5797, 3.5878, 3.5959, 3.6041, 3.6122, 3.6203, 3.6284, 3.6365, 3.6447, 3.6528, 3.6609,  3.669, 3.6771, 3.6853, 3.6934, 3.7015, 3.7096, 3.7177, 3.7259,  3.734, 3.7421, 3.7502, 3.7584, 3.7665, 3.7746, 3.7827, 3.7908,  3.799, 3.8071, 3.8152, 3.8233, 3.8314, 3.8396, 3.8477, 3.8558, 3.8639,  3.872, 3.8802, 3.8883, 3.8964, 3.9045, 3.9126, 3.9208, 3.9289,  3.937, 3.9451, 3.9532, 3.9614, 3.9695, 3.9776, 3.9857, 3.9938,  4.002, 4.0101, 4.0182, 4.0263, 4.0344, 4.0426, 4.0507, 4.0588, 4.0669, 4.0751, 4.0832, 4.0913, 4.0994, 4.1075, 4.1157, 4.1238, 4.1319,   4.14, 4.1481, 4.1563, 4.1644, 4.1725, 4.1806, 4.1887, 4.1969,  4.205, 4.2131, 4.2212, 4.2293, 4.2375, 4.2456, 4.2537, 4.2618, 4.2699, 4.2781, 4.2862, 4.2943, 4.3024, 4.3105, 4.3187, 4.3268, 4.3349,  4.343, 4.3511, 4.3593, 4.3674, 4.3755, 4.3836, 4.3918, 4.3999,  4.408, 4.4161, 4.4242, 4.4324, 4.4405, 4.4486, 4.4567, 4.4648,  4.473, 4.4811, 4.4892, 4.4973, 4.5054, 4.5086, 4.5091, 4.5095,   4.51, 4.5105, 4.5109, 4.5114, 4.5118, 4.5123, 4.5127, 4.5132, 4.5136, 4.5141, 4.5146,  4.515, 4.5155, 4.5159, 4.5164, 4.5168, 4.5173, 4.5177, 4.5182, 4.5187, 4.5191, 4.5196,   4.52, 4.5205, 4.5209, 4.5214, 4.5218, 4.5223, 4.5228, 4.5232, 4.5237, 4.5241, 4.5246,  4.525, 4.5255, 4.5259, 4.5264, 4.5268, 4.5273, 4.5278, 4.5282, 4.5287, 4.5291, 4.5296,   4.53, 4.5305, 4.5309, 4.5314, 4.5319, 4.5323, 4.5328, 4.5332, 4.5337, 4.5341, 4.5346,  4.535, 4.5355,  4.536, 4.5364, 4.5369, 4.5373, 4.5378, 4.5382, 4.5387, 4.5391, 4.5396, 4.5401, 4.5405,  4.541, 4.5414, 4.5419, 4.5423, 4.5428, 4.5432, 4.5437, 4.5441, 4.5446, 4.5451, 4.5455,  4.546, 4.5464, 4.5469, 4.5473, 4.5478, 4.5482, 4.5487, 4.5492, 4.5496, 4.5501, 4.5505,  4.551, 4.5514, 4.5519, 4.5523, 4.5528, 4.5533, 4.5537, 4.5542, 4.5546, 4.5551, 4.5555,  4.556, 4.5564, 4.5569, 4.5574, 4.5578, 4.5583, 4.5587, 4.5592, 4.5596, 4.5601, 4.5605,  4.561, 4.5615, 4.5619, 4.5624, 4.5628, 4.5633, 4.5637, 4.5642, 4.5646, 4.5651, 4.5655,  4.566, 4.5665, 4.5669, 4.5674, 4.5678, 4.5683, 4.5687, 4.5692, 4.5696, 4.5701, 4.5706,  4.571, 4.5715, 4.5719, 4.5724, 4.5728, 4.5733, 4.5737, 4.5742, 4.5747, 4.5751, 4.5756,  4.576, 4.5765, 4.5769, 4.5774, 4.5778, 4.5783, 4.5788, 4.5792, 4.5797, 4.5801, 4.5806,  4.581, 4.5815,  4.546, 4.5551, 4.5641, 4.5732, 4.5823, 4.5913, 4.6004, 4.6094, 4.6185, 4.6276, 4.6366, 4.6457, 4.6547, 4.6638, 4.6728, 4.6819,  4.691,    4.7, 4.7091, 4.7181, 4.7272, 4.7363, 4.7453, 4.7544, 4.7634, 4.7725, 4.7816, 4.7906, 4.7997, 4.8087, 4.8178, 4.8269, 4.8359,  4.845,  4.854, 4.8631, 4.8721, 4.8812, 4.8903, 4.8993, 4.9084, 4.9174, 4.9265, 4.9356, 4.9446, 4.9537, 4.9627, 4.9718, 4.9809, 4.9899,  4.999,  5.008, 5.0171, 5.0262, 5.0352, 5.0443, 5.0533, 5.0624, 5.0714, 5.0805, 5.0896, 5.0986, 5.1077, 5.1167, 5.1258, 5.1349, 5.1439,  5.153,  5.162, 5.1711, 5.1802, 5.1892, 5.1983, 5.2073, 5.2164, 5.2255, 5.2345, 5.2436, 5.2526, 5.2617, 5.2707, 5.2798, 5.2889, 5.2979,  5.307,  5.316, 5.3251, 5.3342, 5.3432, 5.3523, 5.3613, 5.3704, 5.3795, 5.3885, 5.3976, 5.4066, 5.4157, 5.4248, 5.4338, 5.4429, 5.4519,  5.461,   5.47, 5.4791, 5.4882, 5.4972, 5.5063, 5.5153, 5.5244, 5.5335, 5.5425, 5.5516, 5.5606, 5.5697, 5.5788, 5.5878, 5.5969, 5.6059,  5.615, 5.6241, 5.6331, 5.6422, 5.6512, 5.6603, 5.6693, 5.6784, 5.6875, 5.6965, 5.7056, 5.7146, 5.7237, 5.7328, 5.7418, 5.7509, 5.7599,  5.769, 5.7781, 5.7871, 5.7962, 5.8052, 5.8143, 5.8234, 5.8324, 5.8415, 5.8505, 5.8596, 5.8687, 5.8777, 5.8868, 5.8958, 5.9049, 5.9139,  5.923, 5.9321, 5.9411, 5.9502, 5.9592, 5.9683, 5.9774, 5.9864, 5.9955, 6.0045, 6.0136, 6.0227, 6.0317, 6.0408, 6.0498, 6.0589,  6.068,  6.077, 6.0861, 6.0951, 6.1042, 6.1132, 6.1223, 6.1314, 6.1404, 6.1495, 6.1585, 6.1676, 6.1767, 6.1857, 6.1948, 6.2038, 6.2129,  6.222,  6.231, 6.2401, 6.2491, 6.2582, 6.2673, 6.2763, 6.2854, 6.2944, 6.3035, 6.3125, 6.3216, 6.3307, 6.3397, 6.3488, 6.3578, 6.3669,  6.376,  6.385, 6.3941, 6.4031, 6.4122, 6.4213, 6.4303, 6.4394, 6.4484, 6.4575, 6.4666, 6.4756, 6.4847, 6.4937, 6.5028, 6.5118, 6.5209,   6.53,  6.539, 6.5481, 6.5571, 6.5662, 6.9818,  6.983, 6.9842, 6.9854, 6.9865, 6.9877, 6.9889, 6.9901, 6.9912, 6.9924, 6.9936, 6.9948,  6.996, 6.9971, 6.9983, 6.9995, 7.0007, 7.0018,  7.003, 7.0042, 7.0054, 7.0065, 7.0077, 7.0089, 7.0101, 7.0113, 7.0124, 7.0136, 7.0148,  7.016, 7.0171, 7.0183, 7.0195, 7.0207, 7.0218,  7.023, 7.0242, 7.0254, 7.0266, 7.0277, 7.0289, 7.0301, 7.0313, 7.0324, 7.0336, 7.0348,  7.036, 7.0371, 7.0383, 7.0395, 7.0407, 7.0419,  7.043, 7.0442, 7.0454, 7.0466, 7.0477, 7.0489, 7.0501, 7.0513, 7.0525, 7.0536, 7.0548,  7.056, 7.0572, 7.0583, 7.0595, 7.0607, 7.0619,  7.063, 7.0642, 7.0654, 7.0666, 7.0678, 7.0689, 7.0701, 7.0713, 7.0725, 7.0736, 7.0748,  7.076, 7.0772, 7.0783, 7.0795, 7.0807, 7.0819, 7.0831, 7.0842, 7.0854, 7.0866, 7.0878, 7.0889, 7.0901, 7.0913, 7.0925, 7.0937, 7.0948,  7.096, 7.0972, 7.0984, 7.0995, 7.1007, 7.1019, 7.1031, 7.1042, 7.1054, 7.1066, 7.1078,  7.109, 7.1101, 7.1113, 7.1125, 7.1137, 7.1148,  7.116, 7.1172, 7.1184, 7.1195, 7.1207, 7.1219, 7.1231, 7.1243, 7.1254, 7.1266, 7.1278,  7.129, 7.1301, 7.1313, 7.1325, 7.1337, 7.1348,  7.136, 7.1372, 7.1384, 7.1396, 7.1407, 7.1419, 7.1431, 7.1443, 7.1454, 7.1466, 7.1478,  7.149, 7.1502, 7.1513, 7.1525, 7.1537, 7.1549,  7.156, 7.1572, 7.1584, 7.1596, 7.1607, 7.1619, 7.1631, 7.1643, 7.1655, 7.1666, 7.1678,  7.169, 7.1702, 7.1713, 7.1725, 7.1737, 7.1749,  7.176, 7.1772, 7.1784, 7.1796, 7.1808, 7.1819, 7.1831, 7.1843, 7.1855, 7.1866, 7.1878,  7.189, 7.1902, 7.1914, 7.1925, 7.1937, 7.1949, 7.1961, 7.1972, 7.1984, 7.1996, 7.2008, 7.2019, 7.2031, 7.2043, 7.2055, 7.2067, 7.2078,  7.209, 7.2102, 7.2114, 7.2125, 7.2137, 7.2149, 7.2161, 7.2172, 7.2184 ] 
},
"facet": null,
"type": "line",
"c": {
 "type": "addColorAxis" 
} 
} 
],
"legend": [],
"x": "date",
"y": "price",
"type": "line",
"id": "chart35607324f46" 
},
    data = [{"date":"1950-01-01","price":2.83615020372953},{"date":"1950-02-01","price":2.84607149899958},{"date":"1950-03-01","price":2.8501282996952},{"date":"1950-04-01","price":2.88814706287405},{"date":"1950-05-01","price":2.93279247378012},{"date":"1950-06-01","price":2.87299950817169},{"date":"1950-07-01","price":2.88144312715186},{"date":"1950-08-01","price":2.91343703082716},{"date":"1950-09-01","price":2.96784707006446},{"date":"1950-10-01","price":2.97195174488859},{"date":"1950-11-01","price":2.97092715463502},{"date":"1950-12-01","price":3.01700440882953},{"date":"1951-01-01","price":3.07546724157284},{"date":"1951-02-01","price":3.08190996979504},{"date":"1951-03-01","price":3.06712226964066},{"date":"1951-04-01","price":3.11039934853212},{"date":"1951-05-01","price":3.06898273529358},{"date":"1951-06-01","price":3.04261585945284},{"date":"1951-07-01","price":3.10906095886099},{"date":"1951-08-01","price":3.14759462286324},{"date":"1951-09-01","price":3.14673514709052},{"date":"1951-10-01","price":3.13288211170122},{"date":"1951-11-01","price":3.1302631665116},{"date":"1951-12-01","price":3.1684242813721},{"date":"1952-01-01","price":3.18387021566939},{"date":"1952-02-01","price":3.14673514709052},{"date":"1952-03-01","price":3.19335286763712},{"date":"1952-04-01","price":3.14931136148229},{"date":"1952-05-01","price":3.17220341666977},{"date":"1952-06-01","price":3.21727454350123},{"date":"1952-07-01","price":3.23474917402449},{"date":"1952-08-01","price":3.22007510544368},{"date":"1952-09-01","price":3.20030443928277},{"date":"1952-10-01","price":3.19948911106801},{"date":"1952-11-01","price":3.24493335918749},{"date":"1952-12-01","price":3.27978275977172},{"date":"1953-01-01","price":3.27260614728917},{"date":"1953-02-01","price":3.25424296870549},{"date":"1953-03-01","price":3.23040906068187},{"date":"1953-04-01","price":3.20355912075631},{"date":"1953-05-01","price":3.20030443928277},{"date":"1953-06-01","price":3.18387021566939},{"date":"1953-07-01","price":3.2088254890147},{"date":"1953-08-01","price":3.14931136148229},{"date":"1953-09-01","price":3.15059698411491},{"date":"1953-10-01","price":3.20030443928277},{"date":"1953-11-01","price":3.2092294478164},{"date":"1953-12-01","price":3.21124679770371},{"date":"1954-01-01","price":3.26116873705845},{"date":"1954-02-01","price":3.26384919051093},{"date":"1954-03-01","price":3.29361217098222},{"date":"1954-04-01","price":3.34144737725638},{"date":"1954-05-01","price":3.37382618486602},{"date":"1954-06-01","price":3.37451111639965},{"date":"1954-07-01","price":3.43010872515658},{"date":"1954-08-01","price":3.39551459852666},{"date":"1954-09-01","price":3.47537677983641},{"date":"1954-10-01","price":3.45568556694623},{"date":"1954-11-01","price":3.53339455127354},{"date":"1954-12-01","price":3.58296322852239},{"date":"1955-01-01","price":3.60086757679072},{"date":"1955-02-01","price":3.60441029748749},{"date":"1955-03-01","price":3.59950164296272},{"date":"1955-04-01","price":3.63653297374173},{"date":"1955-05-01","price":3.63521492952824},{"date":"1955-06-01","price":3.71430350645409},{"date":"1955-07-01","price":3.77322060254769},{"date":"1955-08-01","price":3.76537742508666},{"date":"1955-09-01","price":3.77666136749747},{"date":"1955-10-01","price":3.74573226570672},{"date":"1955-11-01","price":3.81793208202855},{"date":"1955-12-01","price":3.81727266888234},{"date":"1956-01-01","price":3.78009033416732},{"date":"1956-02-01","price":3.81418964507938},{"date":"1956-03-01","price":3.88115134176106},{"date":"1956-04-01","price":3.87908650518188},{"date":"1956-05-01","price":3.81109708683819},{"date":"1956-06-01","price":3.8495091000389},{"date":"1956-07-01","price":3.89974797455253},{"date":"1956-08-01","price":3.86094021519883},{"date":"1956-09-01","price":3.81441017656115},{"date":"1956-10-01","price":3.81946902381754},{"date":"1956-11-01","price":3.80843868917158},{"date":"1956-12-01","price":3.84310155996172},{"date":"1957-01-01","price":3.80042082884684},{"date":"1957-02-01","price":3.76722842052491},{"date":"1957-03-01","price":3.78668651411685},{"date":"1957-04-01","price":3.82297318859464},{"date":"1957-05-01","price":3.85925493988949},{"date":"1957-06-01","price":3.85798911693566},{"date":"1957-07-01","price":3.86932425089503},{"date":"1957-08-01","price":3.81153946684982},{"date":"1957-09-01","price":3.74761994913654},{"date":"1957-10-01","price":3.71503441159079},{"date":"1957-11-01","price":3.73098063013257},{"date":"1957-12-01","price":3.68862942285873},{"date":"1958-01-01","price":3.73050112880476},{"date":"1958-02-01","price":3.70966199329646},{"date":"1958-03-01","price":3.74004774068834},{"date":"1958-04-01","price":3.77138067562568},{"date":"1958-05-01","price":3.78623299936985},{"date":"1958-06-01","price":3.81198165124792},{"date":"1958-07-01","price":3.8541820057383},{"date":"1958-08-01","price":3.86597906692674},{"date":"1958-09-01","price":3.91322228600363},{"date":"1958-10-01","price":3.93827537657221},{"date":"1958-11-01","price":3.96043214463583},{"date":"1958-12-01","price":4.01114409629595},{"date":"1959-01-01","price":4.01548171379638},{"date":"1959-02-01","price":4.01476008287926},{"date":"1959-03-01","price":4.01530135488165},{"date":"1959-04-01","price":4.05334894151858},{"date":"1959-05-01","price":4.07209895327478},{"date":"1959-06-01","price":4.06851380218758},{"date":"1959-07-01","price":4.10280864063423},{"date":"1959-08-01","price":4.0876555740713},{"date":"1959-09-01","price":4.04094378549499},{"date":"1959-10-01","price":4.05213271341279},{"date":"1959-11-01","price":4.065258981327},{"date":"1959-12-01","price":4.09250954627637},{"date":"1960-01-01","price":4.01836304119947},{"date":"1960-02-01","price":4.02749225523426},{"date":"1960-03-01","price":4.01349597435878},{"date":"1960-04-01","price":3.99581253115783},{"date":"1960-05-01","price":4.02231135932227},{"date":"1960-06-01","price":4.04164677322165},{"date":"1960-07-01","price":4.01656318470207},{"date":"1960-08-01","price":4.04234926710372},{"date":"1960-09-01","price":3.98005541581997},{"date":"1960-10-01","price":3.97762346251209},{"date":"1960-11-01","price":4.01710348187865},{"date":"1960-12-01","price":4.06233776608701},{"date":"1961-01-01","price":4.12357968749044},{"date":"1961-02-01","price":4.15009457732659},{"date":"1961-03-01","price":4.17530992104521},{"date":"1961-04-01","price":4.17914516391457},{"date":"1961-05-01","price":4.19810379651295},{"date":"1961-06-01","price":4.16883341421284},{"date":"1961-07-01","price":4.20110409879363},{"date":"1961-08-01","price":4.22053658745986},{"date":"1961-09-01","price":4.20065462691552},{"date":"1961-10-01","price":4.2285840374303},{"date":"1961-11-01","price":4.26717679299494},{"date":"1961-12-01","price":4.27039650600246},{"date":"1962-01-01","price":4.23178497134334},{"date":"1962-02-01","price":4.2479236501504},{"date":"1962-03-01","price":4.24204591836945},{"date":"1962-04-01","price":4.17807277775281},{"date":"1962-05-01","price":4.08815880313501},{"date":"1962-06-01","price":4.00277736869661},{"date":"1962-07-01","price":4.06440068584903},{"date":"1962-08-01","price":4.07956927663995},{"date":"1962-09-01","price":4.03016153344519},{"date":"1962-10-01","price":4.03459455781633},{"date":"1962-11-01","price":4.13131916501346},{"date":"1962-12-01","price":4.14472076954717},{"date":"1963-01-01","price":4.19268046294296},{"date":"1963-02-01","price":4.1634040981536},{"date":"1963-03-01","price":4.19825402561261},{"date":"1963-04-01","price":4.24563400976833},{"date":"1963-05-01","price":4.25985900069967},{"date":"1963-06-01","price":4.23945449739721},{"date":"1963-07-01","price":4.23598878995717},{"date":"1963-08-01","price":4.28358656186063},{"date":"1963-09-01","price":4.27249074760558},{"date":"1963-10-01","price":4.30420021920937},{"date":"1963-11-01","price":4.29360517307298},{"date":"1963-12-01","price":4.31775474465374},{"date":"1964-01-01","price":4.34432476748987},{"date":"1964-02-01","price":4.35414143118435},{"date":"1964-03-01","price":4.3691946558585},{"date":"1964-04-01","price":4.37525375038645},{"date":"1964-05-01","price":4.38664097222463},{"date":"1964-06-01","price":4.40293159535378},{"date":"1964-07-01","price":4.42100693431477},{"date":"1964-08-01","price":4.40464392453929},{"date":"1964-09-01","price":4.43295736334242},{"date":"1964-10-01","price":4.44100283977418},{"date":"1964-11-01","price":4.43580434035435},{"date":"1964-12-01","price":4.43970574626056},{"date":"1965-01-01","price":4.47232427265466},{"date":"1965-02-01","price":4.4708384731928},{"date":"1965-03-01","price":4.45620603284813},{"date":"1965-04-01","price":4.48987156162463},{"date":"1965-05-01","price":4.4820981883981},{"date":"1965-06-01","price":4.4322443508345},{"date":"1965-07-01","price":4.44558811616363},{"date":"1965-08-01","price":4.46786023502349},{"date":"1965-09-01","price":4.49936512709111},{"date":"1965-10-01","price":4.52634340544212},{"date":"1965-11-01","price":4.51754043602712},{"date":"1965-12-01","price":4.52645160127669},{"date":"1966-01-01","price":4.53130833738964},{"date":"1966-02-01","price":4.51327417128355},{"date":"1966-03-01","price":4.49121730591206},{"date":"1966-04-01","price":4.51151862990664},{"date":"1966-05-01","price":4.45585778280108},{"date":"1966-06-01","price":4.43958774519841},{"date":"1966-07-01","price":4.42604352009066},{"date":"1966-08-01","price":4.34510328056928},{"date":"1966-09-01","price":4.3380747471447},{"date":"1966-10-01","price":4.38452351487247},{"date":"1966-11-01","price":4.38763587343839},{"date":"1966-12-01","price":4.38614315018572},{"date":"1967-01-01","price":4.46141528234295},{"date":"1967-02-01","price":4.4633761803702},{"date":"1967-03-01","price":4.50202942706858},{"date":"1967-04-01","price":4.54340115959046},{"date":"1967-05-01","price":4.48953484238917},{"date":"1967-06-01","price":4.50689561671975},{"date":"1967-07-01","price":4.55124184396254},{"date":"1967-08-01","price":4.53945764262271},{"date":"1967-09-01","price":4.57171680972887},{"date":"1967-10-01","price":4.5358201078533},{"date":"1967-11-01","price":4.54329478227},{"date":"1967-12-01","price":4.56923207918246},{"date":"1968-01-01","price":4.5243938759608},{"date":"1968-02-01","price":4.49267315476095},{"date":"1968-03-01","price":4.50202942706858},{"date":"1968-04-01","price":4.57944203741536},{"date":"1968-05-01","price":4.59188229166116},{"date":"1968-06-01","price":4.60096134121404},{"date":"1968-07-01","price":4.58231089184201},{"date":"1968-08-01","price":4.59370470787881},{"date":"1968-09-01","price":4.63151996131087},{"date":"1968-10-01","price":4.63870166919688},{"date":"1968-11-01","price":4.6855512979349},{"date":"1968-12-01","price":4.64304383841617},{"date":"1969-01-01","price":4.6348260708956},{"date":"1969-02-01","price":4.5862931302184},{"date":"1969-03-01","price":4.62015731579634},{"date":"1969-04-01","price":4.64140567857019},{"date":"1969-05-01","price":4.63918506457537},{"date":"1969-06-01","price":4.58200390795625},{"date":"1969-07-01","price":4.51993904162543},{"date":"1969-08-01","price":4.55923095404665},{"date":"1969-09-01","price":4.53388898398313},{"date":"1969-10-01","price":4.57594732731119},{"date":"1969-11-01","price":4.54127146013786},{"date":"1969-12-01","price":4.5224405383891},{"date":"1970-01-01","price":4.44288652293064},{"date":"1970-02-01","price":4.49423862528081},{"date":"1970-03-01","price":4.49569008536927},{"date":"1970-04-01","price":4.40084838891447},{"date":"1970-05-01","price":4.33794412210369},{"date":"1970-06-01","price":4.28661644986922},{"date":"1970-07-01","price":4.35734964696144},{"date":"1970-08-01","price":4.40084838891447},{"date":"1970-09-01","price":4.43438186500781},{"date":"1970-10-01","price":4.42184812886055},{"date":"1970-11-01","price":4.46820433091493},{"date":"1970-12-01","price":4.52341768411583},{"date":"1971-01-01","price":4.56309740956618},{"date":"1971-02-01","price":4.57213033190989},{"date":"1971-03-01","price":4.60826539089539},{"date":"1971-04-01","price":4.64391001430402},{"date":"1971-05-01","price":4.60146332405677},{"date":"1971-06-01","price":4.59208494643944},{"date":"1971-07-01","price":4.55996359315001},{"date":"1971-08-01","price":4.59542283453321},{"date":"1971-09-01","price":4.58843086198379},{"date":"1971-10-01","price":4.54573860221867},{"date":"1971-11-01","price":4.54318839363221},{"date":"1971-12-01","price":4.62585477718092},{"date":"1972-01-01","price":4.6438138095803},{"date":"1972-02-01","price":4.66880204623287},{"date":"1972-03-01","price":4.6746962486367},{"date":"1972-04-01","price":4.67907099382763},{"date":"1972-05-01","price":4.69619848433566},{"date":"1972-06-01","price":4.67413639045281},{"date":"1972-07-01","price":4.67646706787013},{"date":"1972-08-01","price":4.71034068359363},{"date":"1972-09-01","price":4.70546790730346},{"date":"1972-10-01","price":4.71474182241738},{"date":"1972-11-01","price":4.75934943683577},{"date":"1972-12-01","price":4.77110826353152},{"date":"1973-01-01","price":4.75384877835945},{"date":"1973-02-01","price":4.71563763901406},{"date":"1973-03-01","price":4.71420394701221},{"date":"1973-04-01","price":4.67254842131804},{"date":"1973-05-01","price":4.65348404626664},{"date":"1973-06-01","price":4.64688777933996},{"date":"1973-07-01","price":4.68416619221459},{"date":"1973-08-01","price":4.64679186067891},{"date":"1973-09-01","price":4.68610480348409},{"date":"1973-10-01","price":4.68481281364029},{"date":"1973-11-01","price":4.56393143797149},{"date":"1973-12-01","price":4.58036506706912},{"date":"1974-01-01","price":4.57026813397883},{"date":"1974-02-01","price":4.56663723627131},{"date":"1974-03-01","price":4.54308199367467},{"date":"1974-04-01","price":4.50324819626271},{"date":"1974-05-01","price":4.46912134152482},{"date":"1974-06-01","price":4.45434729625351},{"date":"1974-07-01","price":4.37336422409523},{"date":"1974-08-01","price":4.27874728521988},{"date":"1974-09-01","price":4.15166962884137},{"date":"1974-10-01","price":4.30271282795416},{"date":"1974-11-01","price":4.2480665787578},{"date":"1974-12-01","price":4.22770927428952},{"date":"1975-01-01","price":4.3435456478556},{"date":"1975-02-01","price":4.40170670544071},{"date":"1975-03-01","price":4.42316857800506},{"date":"1975-04-01","price":4.46935046284556},{"date":"1975-05-01","price":4.51250650112467},{"date":"1975-06-01","price":4.55587489426321},{"date":"1975-07-01","price":4.48582342835553},{"date":"1975-08-01","price":4.46452785618563},{"date":"1975-09-01","price":4.42926798099632},{"date":"1975-10-01","price":4.48908570696729},{"date":"1975-11-01","price":4.51349339741619},{"date":"1975-12-01","price":4.50191855617762},{"date":"1976-01-01","price":4.61373341664858},{"date":"1976-02-01","price":4.6022659728407},{"date":"1976-03-01","price":4.63249348163698},{"date":"1976-04-01","price":4.62143715845196},{"date":"1976-05-01","price":4.60696856792947},{"date":"1976-06-01","price":4.6470795890653},{"date":"1976-07-01","price":4.6389917344636},{"date":"1976-08-01","price":4.633854819848},{"date":"1976-09-01","price":4.65624345617209},{"date":"1976-10-01","price":4.63375764284},{"date":"1976-11-01","price":4.62595272517062},{"date":"1976-12-01","price":4.67711868530068},{"date":"1977-01-01","price":4.62526688768721},{"date":"1977-02-01","price":4.60336856404146},{"date":"1977-03-01","price":4.58924403543783},{"date":"1977-04-01","price":4.58944722552286},{"date":"1977-05-01","price":4.56559741086827},{"date":"1977-06-01","price":4.60995870271989},{"date":"1977-07-01","price":4.59360354961663},{"date":"1977-08-01","price":4.57233702889285},{"date":"1977-09-01","price":4.56985384086052},{"date":"1977-10-01","price":4.52547741707884},{"date":"1977-11-01","price":4.55208581489564},{"date":"1977-12-01","price":4.55492896955134},{"date":"1978-01-01","price":4.49144142065975},{"date":"1978-02-01","price":4.46636778310763},{"date":"1978-03-01","price":4.49099314092569},{"date":"1978-04-01","price":4.57295686362344},{"date":"1978-05-01","price":4.57718214944792},{"date":"1978-06-01","price":4.55944033428192},{"date":"1978-07-01","price":4.61194717026711},{"date":"1978-08-01","price":4.63754056601854},{"date":"1978-09-01","price":4.63025296635555},{"date":"1978-10-01","price":4.5342110970476},{"date":"1978-11-01","price":4.55071400019203},{"date":"1978-12-01","price":4.56549336883519},{"date":"1979-01-01","price":4.6044699408737},{"date":"1979-02-01","price":4.56726061291487},{"date":"1979-03-01","price":4.62094510510345},{"date":"1979-04-01","price":4.62261709959181},{"date":"1979-05-01","price":4.59592760462116},{"date":"1979-06-01","price":4.633854819848},{"date":"1979-07-01","price":4.64256230520515},{"date":"1979-08-01","price":4.69427936105987},{"date":"1979-09-01","price":4.69427936105987},{"date":"1979-10-01","price":4.62320654847419},{"date":"1979-11-01","price":4.66494739002395},{"date":"1979-12-01","price":4.6815755171905},{"date":"1980-01-01","price":4.73760097316858},{"date":"1980-02-01","price":4.73321153586898},{"date":"1980-03-01","price":4.62585477718092},{"date":"1980-04-01","price":4.66617120754549},{"date":"1980-05-01","price":4.71169002936576},{"date":"1980-06-01","price":4.73830149859127},{"date":"1980-07-01","price":4.80131246179936},{"date":"1980-08-01","price":4.80713095803439},{"date":"1980-09-01","price":4.8319869826686},{"date":"1980-10-01","price":4.84788104279483},{"date":"1980-11-01","price":4.94534982739763},{"date":"1980-12-01","price":4.91088862092597},{"date":"1981-01-01","price":4.86406690700812},{"date":"1981-02-01","price":4.87725627081532},{"date":"1981-03-01","price":4.91265488573605},{"date":"1981-04-01","price":4.88891953541216},{"date":"1981-05-01","price":4.88726166012663},{"date":"1981-06-01","price":4.87679909311762},{"date":"1981-07-01","price":4.87458644963298},{"date":"1981-08-01","price":4.81047557917242},{"date":"1981-09-01","price":4.75514071256439},{"date":"1981-10-01","price":4.80311899866775},{"date":"1981-11-01","price":4.8390558338342},{"date":"1981-12-01","price":4.80851910997412},{"date":"1982-01-01","price":4.79081953287472},{"date":"1982-02-01","price":4.72836079654329},{"date":"1982-03-01","price":4.71814166464725},{"date":"1982-04-01","price":4.75737611887742},{"date":"1982-05-01","price":4.71742686833376},{"date":"1982-06-01","price":4.69692861122763},{"date":"1982-07-01","price":4.67366960241278},{"date":"1982-08-01","price":4.78340004987879},{"date":"1982-09-01","price":4.7909856320363},{"date":"1982-10-01","price":4.8957480615519},{"date":"1982-11-01","price":4.93108690866979},{"date":"1982-12-01","price":4.94620343393687},{"date":"1983-01-01","price":4.97880057057624},{"date":"1983-02-01","price":4.99761759701495},{"date":"1983-03-01","price":5.03017644930309},{"date":"1983-04-01","price":5.10248494772613},{"date":"1983-05-01","price":5.090000849477},{"date":"1983-06-01","price":5.12181882305687},{"date":"1983-07-01","price":5.09104716439012},{"date":"1983-08-01","price":5.10230248262208},{"date":"1983-09-01","price":5.11240938621866},{"date":"1983-10-01","price":5.09711875398439},{"date":"1983-11-01","price":5.11439452838711},{"date":"1983-12-01","price":5.10552114146006},{"date":"1984-01-01","price":5.09626238006369},{"date":"1984-02-01","price":5.05662789794673},{"date":"1984-03-01","price":5.0700356373777},{"date":"1984-04-01","price":5.07548626641587},{"date":"1984-05-01","price":5.01429525492774},{"date":"1984-06-01","price":5.03161370048145},{"date":"1984-07-01","price":5.01502564239755},{"date":"1984-08-01","price":5.11607580655425},{"date":"1984-09-01","price":5.11259001661925},{"date":"1984-10-01","price":5.11252981011091},{"date":"1984-11-01","price":5.09730216730683},{"date":"1984-12-01","price":5.11942990648836},{"date":"1985-01-01","price":5.19089917978074},{"date":"1985-02-01","price":5.19949101224114},{"date":"1985-03-01","price":5.1966168117217},{"date":"1985-04-01","price":5.19201196017711},{"date":"1985-05-01","price":5.24465284196234},{"date":"1985-06-01","price":5.25671381669296},{"date":"1985-07-01","price":5.2518544921377},{"date":"1985-08-01","price":5.23978742435763},{"date":"1985-09-01","price":5.20444615093797},{"date":"1985-10-01","price":5.24607625470235},{"date":"1985-11-01","price":5.30910892762624},{"date":"1985-12-01","price":5.35318426798888},{"date":"1986-01-01","price":5.35554800000231},{"date":"1986-02-01","price":5.42459753245837},{"date":"1986-03-01","price":5.47604505433176},{"date":"1986-04-01","price":5.46179583554051},{"date":"1986-05-01","price":5.51080433767372},{"date":"1986-06-01","price":5.52481528567482},{"date":"1986-07-01","price":5.46434015037249},{"date":"1986-08-01","price":5.53311277060269},{"date":"1986-09-01","price":5.44380203329002},{"date":"1986-10-01","price":5.49708625472059},{"date":"1986-11-01","price":5.51833604051472},{"date":"1986-12-01","price":5.48963995887241},{"date":"1987-01-01","price":5.61342003457581},{"date":"1987-02-01","price":5.649678215663},{"date":"1987-03-01","price":5.67572587687368},{"date":"1987-04-01","price":5.66420969953638},{"date":"1987-05-01","price":5.67022569112736},{"date":"1987-06-01","price":5.71702770140622},{"date":"1987-07-01","price":5.76412470366236},{"date":"1987-08-01","price":5.7984864101255},{"date":"1987-09-01","price":5.77402345581901},{"date":"1987-10-01","price":5.52859540676285},{"date":"1987-11-01","price":5.43938280682664},{"date":"1987-12-01","price":5.5097121708277},{"date":"1988-01-01","price":5.54934842134914},{"date":"1988-02-01","price":5.59031511306742},{"date":"1988-03-01","price":5.55640326105981},{"date":"1988-04-01","price":5.56578397649891},{"date":"1988-05-01","price":5.56895500439056},{"date":"1988-06-01","price":5.61130162186204},{"date":"1988-07-01","price":5.60587559300461},{"date":"1988-08-01","price":5.56651076241596},{"date":"1988-09-01","price":5.60547112918941},{"date":"1988-10-01","price":5.63110424915822},{"date":"1988-11-01","price":5.61203261604663},{"date":"1988-12-01","price":5.62661341188507},{"date":"1989-01-01","price":5.69531337956482},{"date":"1989-02-01","price":5.66594214167302},{"date":"1989-03-01","price":5.68653458124665},{"date":"1989-04-01","price":5.73541033233651},{"date":"1989-05-01","price":5.76994467690987},{"date":"1989-06-01","price":5.76198848772056},{"date":"1989-07-01","price":5.84666996220475},{"date":"1989-08-01","price":5.86206745362191},{"date":"1989-09-01","price":5.85550162929204},{"date":"1989-10-01","price":5.83000388098136},{"date":"1989-11-01","price":5.84640987290596},{"date":"1989-12-01","price":5.8676005598856},{"date":"1990-01-01","price":5.79630088230073},{"date":"1990-02-01","price":5.80480358871493},{"date":"1990-03-01","price":5.82876913144921},{"date":"1990-04-01","price":5.80151396314954},{"date":"1990-05-01","price":5.88951487457224},{"date":"1990-06-01","price":5.88058885076205},{"date":"1990-07-01","price":5.87535199042436},{"date":"1990-08-01","price":5.77628916544295},{"date":"1990-09-01","price":5.72374848729708},{"date":"1990-10-01","price":5.71702770140622},{"date":"1990-11-01","price":5.77523454206284},{"date":"1990-12-01","price":5.79975909900369},{"date":"1991-01-01","price":5.84043814829474},{"date":"1991-02-01","price":5.90555256556165},{"date":"1991-03-01","price":5.92751252061546},{"date":"1991-04-01","price":5.92783228186313},{"date":"1991-05-01","price":5.96571074665689},{"date":"1991-06-01","price":5.91663323648498},{"date":"1991-07-01","price":5.96051552896397},{"date":"1991-08-01","price":5.97997378039248},{"date":"1991-09-01","price":5.9606444497681},{"date":"1991-10-01","price":5.97240914057282},{"date":"1991-11-01","price":5.92751252061546},{"date":"1991-12-01","price":6.03330202584956},{"date":"1992-01-01","price":6.01317711401363},{"date":"1992-02-01","price":6.02272093675854},{"date":"1992-03-01","price":6.00064725668264},{"date":"1992-04-01","price":6.02815803104446},{"date":"1992-05-01","price":6.02912153828508},{"date":"1992-06-01","price":6.01161025280094},{"date":"1992-07-01","price":6.05022861563867},{"date":"1992-08-01","price":6.02593843496806},{"date":"1992-09-01","price":6.03500284912247},{"date":"1992-10-01","price":6.03710690498668},{"date":"1992-11-01","price":6.06691982552259},{"date":"1992-12-01","price":6.0769768844322},{"date":"1993-01-01","price":6.08399814851091},{"date":"1993-02-01","price":6.09442719016581},{"date":"1993-03-01","price":6.11295182469226},{"date":"1993-04-01","price":6.08720645188748},{"date":"1993-05-01","price":6.10966971587587},{"date":"1993-06-01","price":6.110424667506},{"date":"1993-07-01","price":6.10508336889276},{"date":"1993-08-01","price":6.13893582646619},{"date":"1993-09-01","price":6.12889769298378},{"date":"1993-10-01","price":6.14810498206391},{"date":"1993-11-01","price":6.13511024229009},{"date":"1993-12-01","price":6.14515083340697},{"date":"1994-01-01","price":6.17713465789864},{"date":"1994-02-01","price":6.14662899860933},{"date":"1994-03-01","price":6.09980312393637},{"date":"1994-04-01","price":6.1112677630476},{"date":"1994-05-01","price":6.12358870003502},{"date":"1994-06-01","price":6.09643248571752},{"date":"1994-07-01","price":6.1274367086312},{"date":"1994-08-01","price":6.16434585127008},{"date":"1994-09-01","price":6.13710050795518},{"date":"1994-10-01","price":6.15772023621514},{"date":"1994-11-01","price":6.11741414543076},{"date":"1994-12-01","price":6.1296382724121},{"date":"1995-01-01","price":6.1536259126874},{"date":"1995-02-01","price":6.18906462395149},{"date":"1995-03-01","price":6.21602709117561},{"date":"1995-04-01","price":6.24360363526344},{"date":"1995-05-01","price":6.27927161174791},{"date":"1995-06-01","price":6.30032697382473},{"date":"1995-07-01","price":6.33160860576092},{"date":"1995-08-01","price":6.33128830396271},{"date":"1995-09-01","price":6.37060279129756},{"date":"1995-10-01","price":6.36561097195872},{"date":"1995-11-01","price":6.4058398413459},{"date":"1995-12-01","price":6.42313332071278},{"date":"1996-01-01","price":6.45523000938657},{"date":"1996-02-01","price":6.46213982574676},{"date":"1996-03-01","price":6.4700252102867},{"date":"1996-04-01","price":6.48336725651687},{"date":"1996-05-01","price":6.50596341624027},{"date":"1996-06-01","price":6.50821756908876},{"date":"1996-07-01","price":6.4613900483018},{"date":"1996-08-01","price":6.48002922438572},{"date":"1996-09-01","price":6.53281452623651},{"date":"1996-10-01","price":6.55858070821804},{"date":"1996-11-01","price":6.6293896731677},{"date":"1996-12-01","price":6.6076496865313},{"date":"1997-01-01","price":6.66716033405417},{"date":"1997-02-01","price":6.67307038182137},{"date":"1997-03-01","price":6.62952176134997},{"date":"1997-04-01","price":6.68628532641994},{"date":"1997-05-01","price":6.74321076997086},{"date":"1997-06-01","price":6.78574582458728},{"date":"1997-07-01","price":6.86098856625335},{"date":"1997-08-01","price":6.80180570097226},{"date":"1997-09-01","price":6.8535947200227},{"date":"1997-10-01","price":6.81850867846792},{"date":"1997-11-01","price":6.86213010095586},{"date":"1997-12-01","price":6.87773927223854},{"date":"1998-01-01","price":6.88783824514178},{"date":"1998-02-01","price":6.95591667408915},{"date":"1998-03-01","price":7.0046551037221},{"date":"1998-04-01","price":7.01369062939081},{"date":"1998-05-01","price":6.9946849859702},{"date":"1998-06-01","price":7.03336538085865},{"date":"1998-07-01","price":7.02168199971602},{"date":"1998-08-01","price":6.86409592964172},{"date":"1998-09-01","price":6.92462222884191},{"date":"1998-10-01","price":7.00185563633723},{"date":"1998-11-01","price":7.05929970834438},{"date":"1998-12-01","price":7.11414323607631},{"date":"1999-01-01","price":7.15433406735546},{"date":"1999-02-01","price":7.12151897669009},{"date":"1999-03-01","price":7.15957957725724},{"date":"1999-04-01","price":7.19682139320608},{"date":"1999-05-01","price":7.17153392735236},{"date":"1999-06-01","price":7.22454216714402},{"date":"1999-07-01","price":7.19197135179074},{"date":"1999-08-01","price":7.18569757341295},{"date":"1999-09-01","price":7.15673030633061},{"date":"1999-10-01","price":7.21739207307763},{"date":"1999-11-01","price":7.23627454583865},{"date":"1999-12-01","price":7.29250734549276},{"date":"2000-01-01","price":7.24026252253998},{"date":"2000-02-01","price":7.21994945992953},{"date":"2000-03-01","price":7.31227327205175},{"date":"2000-04-01","price":7.28099329479367},{"date":"2000-05-01","price":7.25883459656371},{"date":"2000-06-01","price":7.28248622772044},{"date":"2000-07-01","price":7.26600997445608},{"date":"2000-08-01","price":7.32493813204429},{"date":"2000-09-01","price":7.26997183975954},{"date":"2000-10-01","price":7.26501005478588},{"date":"2000-11-01","price":7.18155392107529},{"date":"2000-12-01","price":7.18559911429801},{"date":"2001-01-01","price":7.21964936074816},{"date":"2001-02-01","price":7.12281827033162},{"date":"2001-03-01","price":7.05645972640148},{"date":"2001-04-01","price":7.13046673695746},{"date":"2001-05-01","price":7.13554402465607},{"date":"2001-06-01","price":7.11018987240665},{"date":"2001-07-01","price":7.09939165120075},{"date":"2001-08-01","price":7.03313604531328},{"date":"2001-09-01","price":6.94787943006629},{"date":"2001-10-01","price":6.96581661839541},{"date":"2001-11-01","price":7.03830096882878},{"date":"2001-12-01","price":7.04584626086268},{"date":"2002-01-01","price":7.03014988719574},{"date":"2002-02-01","price":7.00916500052058},{"date":"2002-03-01","price":7.04524507677333},{"date":"2002-04-01","price":6.98186039398892},{"date":"2002-05-01","price":6.97273745169179},{"date":"2002-06-01","price":6.89752310841589},{"date":"2002-07-01","price":6.81522323657799},{"date":"2002-08-01","price":6.82009278096831},{"date":"2002-09-01","price":6.70353161252044},{"date":"2002-10-01","price":6.7864460335492},{"date":"2002-11-01","price":6.84194661822531},{"date":"2002-12-01","price":6.77971734109543},{"date":"2003-01-01","price":6.75191984742401},{"date":"2003-02-01","price":6.73477000316517},{"date":"2003-03-01","price":6.743092877418},{"date":"2003-04-01","price":6.82102022744748},{"date":"2003-05-01","price":6.87066589293676},{"date":"2003-06-01","price":6.88192451894762},{"date":"2003-07-01","price":6.89801802542639},{"date":"2003-08-01","price":6.91573336921703},{"date":"2003-09-01","price":6.90371713664904},{"date":"2003-10-01","price":6.95722140511399},{"date":"2003-11-01","price":6.96432463047003},{"date":"2003-12-01","price":7.0138435297765},{"date":"2004-01-01","price":7.03097241203947},{"date":"2004-02-01","price":7.0431075128686},{"date":"2004-03-01","price":7.02661329219861},{"date":"2004-04-01","price":7.00967989870406},{"date":"2004-05-01","price":7.02169092290963},{"date":"2004-06-01","price":7.03952011215894},{"date":"2004-07-01","price":7.00462787394361},{"date":"2004-08-01","price":7.00691259451532},{"date":"2004-09-01","price":7.01623293131753},{"date":"2004-10-01","price":7.03014988719574},{"date":"2004-11-01","price":7.06801866665688},{"date":"2004-12-01","price":7.09996115785007},{"date":"2005-01-01","price":7.07434540988155},{"date":"2005-02-01","price":7.09307234475589},{"date":"2005-03-01","price":7.07376959250136},{"date":"2005-04-01","price":7.05345607315369},{"date":"2005-05-01","price":7.0829682965388},{"date":"2005-06-01","price":7.0828256090619},{"date":"2005-07-01","price":7.11816206092663},{"date":"2005-08-01","price":7.10687659295427},{"date":"2005-09-01","price":7.11380150038113},{"date":"2005-10-01","price":7.09590150606735},{"date":"2005-11-01","price":7.13048274374434},{"date":"2005-12-01","price":7.1295298937301},{"date":"2006-01-01","price":7.15467785496062},{"date":"2006-02-01","price":7.15513084902477},{"date":"2006-03-01","price":7.16616558299423},{"date":"2006-04-01","price":7.17824795666937},{"date":"2006-05-01","price":7.14684304308348},{"date":"2006-06-01","price":7.14692964736887},{"date":"2006-07-01","price":7.15200257156083},{"date":"2006-08-01","price":7.17305369614883},{"date":"2006-09-01","price":7.19732307234413},{"date":"2006-10-01","price":7.22834490926136},{"date":"2006-11-01","price":7.24467741438372},{"date":"2006-12-01","price":7.25721425030056},{"date":"2007-01-01","price":7.27117542282509},{"date":"2007-02-01","price":7.2490871171607},{"date":"2007-03-01","price":7.25901760107599},{"date":"2007-04-01","price":7.30139743731359},{"date":"2007-05-01","price":7.33342816106165},{"date":"2007-06-01","price":7.31545123024166},{"date":"2007-07-01","price":7.28294672940047},{"date":"2007-08-01","price":7.29572828846575},{"date":"2007-09-01","price":7.33089657210324},{"date":"2007-10-01","price":7.34561012989195},{"date":"2007-11-01","price":7.30056734052254},{"date":"2007-12-01","price":7.29190141071773},{"date":"2008-01-01","price":7.22878750111546},{"date":"2008-02-01","price":7.19340779327338},{"date":"2008-03-01","price":7.187430381032},{"date":"2008-04-01","price":7.23388132069206},{"date":"2008-05-01","price":7.24449890734471},{"date":"2008-06-01","price":7.15461535691366},{"date":"2008-07-01","price":7.14470705642721},{"date":"2008-08-01","price":7.15682385388792},{"date":"2008-09-01","price":7.06164306711354},{"date":"2008-10-01","price":6.87600658066756},{"date":"2008-11-01","price":6.79820823425047},{"date":"2008-12-01","price":6.80599937002775},{"date":"2009-01-01","price":6.71644948451668},{"date":"2009-02-01","price":6.59999294069616},{"date":"2009-03-01","price":6.68194567691081},{"date":"2009-04-01","price":6.77171789183178},{"date":"2009-05-01","price":6.82343845025266},{"date":"2009-06-01","price":6.82363426631673},{"date":"2009-07-01","price":6.89515624340562},{"date":"2009-08-01","price":6.92816556475376},{"date":"2009-09-01","price":6.9632656689097},{"date":"2009-10-01","price":6.94330580368753},{"date":"2009-11-01","price":6.99908481927033},{"date":"2009-12-01","price":7.01669936597132},{"date":"2010-01-01","price":6.979024224912},{"date":"2010-02-01","price":7.00713896894866},{"date":"2010-03-01","price":7.06427172959414},{"date":"2010-04-01","price":7.078923197906},{"date":"2010-05-01","price":6.99339154427223},{"date":"2010-06-01","price":6.93800316413986},{"date":"2010-07-01","price":7.00451894741444},{"date":"2010-08-01","price":6.95590714424406},{"date":"2010-09-01","price":7.03983561933935},{"date":"2010-10-01","price":7.07602862005003},{"date":"2010-11-01","price":7.07373571056297},{"date":"2010-12-01","price":7.1369922277849},{"date":"2011-01-01","price":7.15938521304142},{"date":"2011-02-01","price":7.19084180808156},{"date":"2011-03-01","price":7.18979395739862},{"date":"2011-04-01","price":7.21789087376575},{"date":"2011-05-01","price":7.20429797986611},{"date":"2011-06-01","price":7.18587174656422},{"date":"2011-07-01","price":7.16416337912879},{"date":"2011-08-01","price":7.10569588750967},{"date":"2011-09-01","price":7.03122875996689},{"date":"2011-10-01","price":7.13353535161748},{"date":"2011-11-01","price":7.1284638681808},{"date":"2011-12-01","price":7.13696042167494},{"date":"2012-01-01","price":7.17962042068608},{"date":"2012-02-01","price":7.2194077520725},{"date":"2012-03-01","price":7.25025928783507},{"date":"2012-04-01","price":7.24273354303902},{"date":"2012-05-01","price":7.17803429286855},{"date":"2012-06-01","price":7.21682695411239},{"date":"2012-07-01","price":7.2293459030851},{"date":"2012-08-01","price":7.24891650508948},{"date":"2012-09-01","price":7.27286356213968},{"date":"2012-10-01","price":7.25287572608118},{"date":"2012-11-01","price":7.25571838481884},{"date":"2012-12-01","price":7.2627618319303},{"date":"2013-01-01","price":7.31195959262288},{"date":"2013-02-01","price":7.32295947451103},{"date":"2013-03-01","price":7.35831484164112},{"date":"2013-04-01","price":7.37623900375804},{"date":"2013-05-01","price":7.39678917850962},{"date":"2013-06-01","price":7.38167622551192},{"date":"2013-07-01","price":7.42995398338889},{"date":"2013-08-01","price":7.39815572170557},{"date":"2013-09-01","price":7.42747126609357},{"date":"2013-10-01","price":7.47110124400566},{"date":"2013-11-01","price":7.49876452356986},{"date":"2013-12-01","price":7.52205403842437},{"date":"2014-01-01","price":7.48582264189742},{"date":"2014-02-01","price":7.52803602405497},{"date":"2014-03-01","price":7.53489619512948}];
  var svg = dimple.newSvg("#" + opts.id, opts.width, opts.height);

  //data = dimple.filterData(data, "Owner", ["Aperture", "Black Mesa"])
  var myChart = new dimple.chart(svg, data);
  if (opts.bounds) {
    myChart.setBounds(opts.bounds.x, opts.bounds.y, opts.bounds.width, opts.bounds.height);//myChart.setBounds(80, 30, 480, 330);
  }
  //dimple allows use of custom CSS with noFormats
  if(opts.noFormats) { myChart.noFormats = opts.noFormats; };
  //for markimekko and addAxis also have third parameter measure
  //so need to evaluate if measure provided
  
  //function to build axes
  function buildAxis(position,layer){
    var axis;
    var axisopts = opts[position+"Axis"];
    
    if(axisopts.measure) {
      axis = myChart[axisopts.type](position,layer[position],axisopts.measure);
    } else {
      axis = myChart[axisopts.type](position, layer[position]);
    };
    if(!(axisopts.type === "addPctAxis")) axis.showPercent = axisopts.showPercent;
    if (axisopts.orderRule) axis.addOrderRule(axisopts.orderRule);
    if (axisopts.grouporderRule) axis.addGroupOrderRule(axisopts.grouporderRule);  
    if (axisopts.overrideMin) axis.overrideMin = axisopts.overrideMin;
    if (axisopts.overrideMax) axis.overrideMax = axisopts.overrideMax;
    if (axisopts.overrideMax) axis.overrideMax = axisopts.overrideMax;
    if (axisopts.inputFormat) axis.dateParseFormat = axisopts.inputFormat;
    if (axisopts.outputFormat) axis.tickFormat = axisopts.outputFormat;    
    return axis;
  };
  
  var c = null;
  if(d3.keys(opts.colorAxis).length > 0) {
    c = myChart[opts.colorAxis.type](opts.colorAxis.colorSeries,opts.colorAxis.palette) ;
  }
  
  //allow manipulation of default colors to use with dimple
  if(opts.defaultColors.length) {
    opts.defaultColors = opts.defaultColors[0];
    if (typeof(opts.defaultColors) == "function") {
      //assume this is a d3 scale
      //for now loop through first 20 but need a better way to handle
      defaultColorsArray = [];
      for (var n=0;n<20;n++) {
        defaultColorsArray.push(opts.defaultColors(n));
      };
      opts.defaultColors = defaultColorsArray;
    }
    opts.defaultColors.forEach(function(d,i) {
      opts.defaultColors[i] = new dimple.color(d);
    })
    myChart.defaultColors = opts.defaultColors;
  }  
  
  //do series
  //set up a function since same for each
  //as of now we have x,y,groups,data,type in opts for primary layer
  //and other layers reside in opts.layers
  function buildSeries(layer, hidden){
    //inherit from primary layer if not intentionally changed or xAxis, yAxis, zAxis null
    if (!layer.xAxis) layer.xAxis = opts.xAxis;    
    if (!layer.yAxis) layer.yAxis = opts.yAxis;
    if (!layer.zAxis) layer.zAxis = opts.zAxis;
    
    var x = buildAxis("x", layer);
    x.hidden = hidden;
    
    var y = buildAxis("y", layer);
    y.hidden = hidden;
    
    //z for bubbles
    var z = null;
    if (!(typeof(layer.zAxis) === 'undefined') && layer.zAxis.type){
      z = buildAxis("z", layer);
    };
    
    //here think I need to evaluate group and if missing do null
    //as the group argument
    //if provided need to use groups from layer
    var s = new dimple.series(myChart, null, x, y, z, c, dimple.plot[layer.type], dimple.aggregateMethod.avg, dimple.plot[layer.type].stacked);
    
    //as of v1.1.4 dimple can use different dataset for each series
    if(layer.data){
      //convert to an array of objects
      var tempdata;
      //avoid lodash for now
      datakeys = d3.keys(layer.data)
      tempdata = layer.data[datakeys[1]].map(function(d,i){
        var tempobj = {}
        datakeys.forEach(function(key){
          tempobj[key] = layer.data[key][i]
        })
        return tempobj
      })
      s.data = tempdata;
    }
    
    if(layer.hasOwnProperty("groups")) {
      s.categoryFields = (typeof layer.groups === "object") ? layer.groups : [layer.groups];
      //series offers an aggregate method that we will also need to check if available
      //options available are avg, count, max, min, sum
      if (!(typeof(layer.aggregate) === 'undefined')) {
        s.aggregate = eval(layer.aggregate);
      }
      if (!(typeof(layer.lineWeight) === 'undefined')) {
        s.lineWeight = eval(layer.lineWeight);
      }
      if (!(typeof(layer.barGap) === 'undefined')) {
        s.barGap = eval(layer.barGap);
      }    
    };    
   /* if (!(typeof(layer.eventHandler) === 'undefined')) {
      layer.eventHandler = (layer.eventHandler.length === "undefined") ? layer.eventHandler : [layer.eventHandler];
      layer.eventHandler.forEach(function(evt){
        s.addEventHandler(evt.event, eval(evt.handler))
      })
    }*/
      
    myChart.series.push(s);
    
    /*placeholder fix domain of primary scale for new series data
    //not working right now but something like this
    //for now just use overrideMin and overrideMax from rCharts
    for( var i = 0; i<2; i++) {
      if (!myChart.axes[i].overrideMin) {
        myChart.series[0]._axisBounds(i==0?"x":"y").min = myChart.series[0]._axisBounds(i==0?"x":"y").min < s._axisBounds(i==0?"x":"y").min ? myChart.series[0]._axisBounds(i==0?"x":"y").min : s._axisBounds(i==0?"x":"y").min;
      }
      if (!myChart.axes[i].overrideMax) {  
        myChart.series[0]._axisBounds(i==0?"x":"y")._max = myChart.series[0]._axisBounds(i==0?"x":"y").max > s._axisBounds(i==0?"x":"y").max ? myChart.series[0]._axisBounds(i==0?"x":"y").max : s._axisBounds(i==0?"x":"y").max;
      }
      myChart.axes[i]._update();
    }
    */
    
    return s;
  };
  
  buildSeries(opts, false);
  if (opts.layers.length > 0) {
    opts.layers.forEach(function(layer){
      buildSeries(layer, true);
    })
  }
  //unsure if this is best but if legend is provided (not empty) then evaluate
  if(d3.keys(opts.legend).length > 0) {
    var l =myChart.addLegend();
    d3.keys(opts.legend).forEach(function(d){
      l[d] = opts.legend[d];
    });
  }
  //quick way to get this going but need to make this cleaner
  if(opts.storyboard) {
    myChart.setStoryboard(opts.storyboard);
  };
  myChart.draw();

</script>
    
    
        <script>
          myChart.series[2].shapes
            .transition().duration(10).delay(1000)
              .style("stroke","#AD5277")
              .style("stroke-dasharray",[10,5])
          //delete some of the ticks
          myChart.svg.select(".axis").selectAll(".tick")[0].forEach(function(d,i){
              if (!(+d3.time.format("%Y")(new Date(+d3.select(d).datum())) % 10 == 0)) {
                d.remove()
              }
            })
          myChart.svg.select(".axis").selectAll(".tick text")
            .attr("transform","none")
            .style("text-anchor","middle");
        </script>
          
  </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>scatter</title>
		<script src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 12px;
			}

		</style>
	</head>
	<body>
		<script type="text/javascript">

			//Width and height
			var w = 610;
			var h = 475;
			var padding = 30;
			
			
			//Static dataset
			var dataset = [
  [9,12],
  [6,11],
  [14,11],
  [6,10],
  [8,10],
  [10,9],
  [2,9],
  [10,9],
  [0,9],
  [0,9],
  [12,9],
  [0,9],
  [9,9],
  [0,8],
  [3,8],
  [0,8],
  [14,8],
  [1,8],
  [12,8],
  [0,8],
  [0,7],
  [0,7],
  [4,7],
  [4,7],
  [0,7],
  [6,7],
  [1,6],
  [1,6],
  [4,6],
  [6,6],
  [1,6],
  [8,6],
  [0,6],
  [3,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [1,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [8,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [0,5],
  [6,5],
  [11,5],
  [0,4],
  [0,4],
  [0,4],
  [0,4],
  [3,4],
  [1,4],
  [6,4],
  [0,4],
  [0,4],
  [0,4],
  [0,4],
  [0,4],
  [0,4],
  [4,4],
  [6,3],
  [0,3],
  [0,3],
  [2,3],
  [0,3],
  [0,3],
  [1,3],
  [0,3],
  [0,3],
  [0,3],
  [2,3],
  [0,3],
  [0,3],
  [0,3],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [2,2],
  [0,2],
  [0,2],
  [1,2],
  [0,2],
  [2,2],
  [4,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [0,2],
  [3,2],
  [4,1],
  [0,1],
  [0,1],
  [1,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [1,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [3,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [0,1],
  [5,1],
  [0,1],
  [0,1],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [1,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [1,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [1,0],
  [1,0],
  [2,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0],
  [1,0],
  [0,0],
  [0,0],
  [0,0],
  [0,0]
];
			
			
		

			//Create scale functions
			var xScale = d3.scale.linear()
								 .domain([0, d3.max(dataset, function(d) { return d[0]; })])
								 .range([padding, w - padding * 2]);

			var yScale = d3.scale.linear()
								 .domain([0, d3.max(dataset, function(d) { return d[1]; })])
								 .range([h - padding, padding]);


			//Define X axis
			var xAxis = d3.svg.axis()
							  .scale(xScale)
							  .orient("bottom")
							  .ticks(5);

			//Define Y axis
			var yAxis = d3.svg.axis()
							  .scale(yScale)
							  .orient("left")
							  .ticks(5);

			//Create SVG element
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			//Create circles
			svg.selectAll("circle")
			   .data(dataset)
			   .enter()
			   .append("circle")
			   .attr('fill','red')
			   .attr("cx", function(d) {
			   		return xScale(d[0]);
			   })
			   .attr("cy", function(d) {
			   		return yScale(d[1]);
			   })
			   .attr("r", 5)
			   .style('opacity','.25');

			
			//Create X axis
			svg.append("g")
				.attr("class", "axis")
				.attr("transform", "translate(0," + (h - padding) + ")")
				.call(xAxis);
			
			//Create Y axis
			svg.append("g")
				.attr("class", "axis")
				.attr("transform", "translate(" + padding + ",0)")
				.call(yAxis);

		</script>
	</body>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href="http://netdna.bootstrapcdn.com/bootswatch/2.3.1/cosmo/bootstrap.min.css">
     <link rel="stylesheet" href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-responsive.min.css" >
    <link rel='stylesheet' href="http://getbootstrap.com/2.3.2/assets/js/google-code-prettify/prettify.css">
    <link rel='stylesheet' href="http://aozora.github.io/bootplus/assets/css/docs.css">
    <link rel='stylesheet' href='http://cdnjs.cloudflare.com/ajax/libs/nvd3/1.1.14-beta/nv.d3.css'>
    
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js' type='text/javascript'></script>

    <style>
    .rChart {
      display: block
      margin: auto auto;
      width: 100%;
      height: 400px;
    }
    /*
    body {
      margin-top: 60px;
    }
    */
    </style>
    
  </head>
  <body>
    <div class='container'>
      <div class='row'>
        <div class='span8'>
          <div class="bs-docs-example">
            <div id='chart4cdd4d4b20ef' class='rChart nvd3'>
            </div> 
          <br/>
<pre><code class='r'>hair_eye_male = subset(as.data.frame(HairEyeColor), Sex == &quot;Male&quot;)
n1 &lt;- nPlot(Freq ~ Hair, 
  group = 'Eye', 
  data = hair_eye_male, 
  type = 'multiBarChart'
)
n1
</code></pre>
</div>
        </div>
      </div>
    </div>
      
    <script type='text/javascript'>
 $(document).ready(function(){
      drawchart4cdd4d4b20ef()
      
          ///this is the critical piece
    d3.select("svg").attr("xmlns","http://www.w3.org/2000/svg");
    var svgString = new XMLSerializer().serializeToString(document.querySelector("svg"));
    d3.select("body").append("div").attr("id","png-container")
    d3.select("body").append("canvas")
      .attr("id","canvas")
      .attr("height",400)
      .attr("width",800);
    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");
    var DOMURL = self.URL || self.webkitURL || self;
    var img = new Image();
    var svg = new Blob([svgString], {type: "image/svg+xml;charset=utf-8"});
    var url = DOMURL.createObjectURL(svg);
    img.onload = function() {
      ctx.drawImage(img, 0, 0);
      var png = canvas.toDataURL("image/png");
      document.querySelector("#png-container").innerHTML = '<img src="'+png+'"/>';
      DOMURL.revokeObjectURL(png);
    };
    img.src = url;
    });
    function drawchart4cdd4d4b20ef(){  
      var opts = {
 "dom": "chart4cdd4d4b20ef",
"width":    700,
"height":    400,
"process_data": true,
"x": "Hair",
"y": "Freq",
"group": "Eye",
"type": "multiBarChart",
"id": "chart4cdd4d4b20ef" 
},
        data = [
 {
 "Hair": "Black",
"Eye": "Brown",
"Sex": "Male",
"Freq":             32 
},
{
 "Hair": "Brown",
"Eye": "Brown",
"Sex": "Male",
"Freq":             53 
},
{
 "Hair": "Red",
"Eye": "Brown",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Brown",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Black",
"Eye": "Blue",
"Sex": "Male",
"Freq":             11 
},
{
 "Hair": "Brown",
"Eye": "Blue",
"Sex": "Male",
"Freq":             50 
},
{
 "Hair": "Red",
"Eye": "Blue",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Blue",
"Sex": "Male",
"Freq":             30 
},
{
 "Hair": "Black",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Brown",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             25 
},
{
 "Hair": "Red",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              5 
},
{
 "Hair": "Black",
"Eye": "Green",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Brown",
"Eye": "Green",
"Sex": "Male",
"Freq":             15 
},
{
 "Hair": "Red",
"Eye": "Green",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Green",
"Sex": "Male",
"Freq":              8 
} 
]
  
      if(!(opts.type==="pieChart" || opts.type==="sparklinePlus" || opts.type==="bulletChart")) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? 'main' : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .width(opts.width)
          .height(opts.height)
          
        if (opts.type != "bulletChart"){
          chart
            .x(function(d) { return d[opts.x] })
            .y(function(d) { return d[opts.y] })
        }
          
         
        
          
        

        
        
        
      
       d3.select("#" + opts.id)
        .append('svg')
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
      
    
    };
</script>
    
  </body>
  <!-- Google Prettify -->
  <script src="http://cdnjs.cloudflare.com/ajax/libs/prettify/188.0.0/prettify.js"></script>
  <script 
    src='https://google-code-prettify.googlecode.com/svn-history/r232/trunk/src/lang-r.js'>
  </script>
  <script>
    var pres = document.getElementsByTagName("pre");
    for (var i=0; i < pres.length; ++i) {
      pres[i].className = "prettyprint linenums";
    }
    prettyPrint();
  </script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.background {
  fill: none;
  pointer-events: all;
}

.feature {
  fill: #ccc;
  cursor: pointer;
}

.feature.active {
  fill: orange;
}

.mesh {
  fill: none;
  stroke: #fff;
  stroke-linecap: round;
  stroke-linejoin: round;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500,
    active = d3.select(null);

var projection = d3.geo.albersUsa()
    .scale(1000)
    .translate([width / 2, height / 2]);

var zoom = d3.behavior.zoom()
    .translate([0, 0])
    .scale(1)
    .scaleExtent([1, 8])
    .on("zoom", zoomed);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
    .on("click", stopped, true);

svg.append("rect")
    .attr("class", "background")
    .attr("width", width)
    .attr("height", height)
    .on("click", reset);

var g = svg.append("g");

svg
    .call(zoom) // delete this line to disable free zooming
    .call(zoom.event);

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  g.selectAll("path")
      .data(topojson.feature(us, us.objects.states).features)
    .enter().append("path")
      .attr("d", path)
      .attr("class", "feature")
      .on("click", clicked);

  g.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "mesh")
      .attr("d", path);
});

function clicked(d) {
  if (active.node() === this) return reset();
  active.classed("active", false);
  active = d3.select(this).classed("active", true);

  var bounds = path.bounds(d),
      dx = bounds[1][0] - bounds[0][0],
      dy = bounds[1][1] - bounds[0][1],
      x = (bounds[0][0] + bounds[1][0]) / 2,
      y = (bounds[0][1] + bounds[1][1]) / 2,
      scale = .9 / Math.max(dx / width, dy / height),
      translate = [width / 2 - scale * x, height / 2 - scale * y];

  svg.transition()
      .duration(750)
      .call(zoom.translate(translate).scale(scale).event);
}

function reset() {
  active.classed("active", false);
  active = d3.select(null);

  svg.transition()
      .duration(750)
      .call(zoom.translate([0, 0]).scale(1).event);
}

function zoomed() {
  g.style("stroke-width", 1.5 / d3.event.scale + "px");
  g.attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");
}

// If the drag behavior prevents the default click,
// also stop propagation so we don’t click-to-zoom.
function stopped() {
  if (d3.event.defaultPrevented) d3.event.stopPropagation();
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #fcfcfa;
}

.stroke {
  fill: none;
  stroke: #000;
  stroke-width: 3px;
}

.fill {
  fill: #fff;
}

.graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5px;
  stroke-opacity: .5;
}

.land {
  fill: #222;
}

.boundary {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}

.night {
  stroke: steelblue;
  fill: steelblue;
  fill-opacity: .3;
}

text {
  font-family: Menlo, monospace;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/d3.geo.projection.v0.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 570;

var π = Math.PI,
    radians = π / 180,
    degrees = 180 / π;

var formatDate = d3.time.format.utc("%b. %d, %Y"),
    formatTime = d3.time.format.utc("%X UTC");

var circle = d3.geo.circle()
    .angle(90);

var projection = d3.geo.kavrayskiy7()
    .scale(170)
    .translate([width / 2, height / 2])
    .precision(.1);

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("defs").append("path")
    .datum({type: "Sphere"})
    .attr("id", "sphere")
    .attr("d", path);

svg.append("use")
    .attr("class", "stroke")
    .attr("xlink:href", "#sphere");

svg.append("use")
    .attr("class", "fill")
    .attr("xlink:href", "#sphere");

var g = svg.append("g");

g.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

d3.json("/mbostock/raw/4090846/world-50m.json", function(error, world) {
  if (error) throw error;

  var dayOffset = 0;

  var date = svg.append("text")
      .attr("dy", "-1.35em");

  var time = svg.append("text");

  svg.selectAll("text")
      .attr("x", 16)
      .attr("y", height - 16);

  g.insert("path", ".graticule")
      .datum(topojson.feature(world, world.objects.land))
      .attr("class", "land")
      .attr("d", path);

  g.insert("path", ".graticule")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
      .attr("class", "boundary")
      .attr("d", path);

  var night = svg.append("path")
      .attr("class", "night");

  d3.timer(function() {
    var now = new Date(Date.now() + dayOffset);
    date.text(formatDate(now));
    time.text(formatTime(now));
    night.datum(circle.origin(antipode(solarPosition(now)))).attr("d", path);
    dayOffset += 864e5;
  });
});

d3.select(self.frameElement).style("height", height + "px");

function antipode(position) {
  return [position[0] + 180, -position[1]];
}

function solarPosition(time) {
  var centuries = (time - Date.UTC(2000, 0, 1, 12)) / 864e5 / 36525, // since J2000
      longitude = (d3.time.day.utc.floor(time) - time) / 864e5 * 360 - 180;
  return [
    longitude - equationOfTime(centuries) * degrees,
    solarDeclination(centuries) * degrees
  ];
}

// Equations based on NOAA’s Solar Calculator; all angles in radians.
// http://www.esrl.noaa.gov/gmd/grad/solcalc/

function equationOfTime(centuries) {
  var e = eccentricityEarthOrbit(centuries),
      m = solarGeometricMeanAnomaly(centuries),
      l = solarGeometricMeanLongitude(centuries),
      y = Math.tan(obliquityCorrection(centuries) / 2);
  y *= y;
  return y * Math.sin(2 * l)
      - 2 * e * Math.sin(m)
      + 4 * e * y * Math.sin(m) * Math.cos(2 * l)
      - 0.5 * y * y * Math.sin(4 * l)
      - 1.25 * e * e * Math.sin(2 * m);
}

function solarDeclination(centuries) {
  return Math.asin(Math.sin(obliquityCorrection(centuries)) * Math.sin(solarApparentLongitude(centuries)));
}

function solarApparentLongitude(centuries) {
  return solarTrueLongitude(centuries) - (0.00569 + 0.00478 * Math.sin((125.04 - 1934.136 * centuries) * radians)) * radians;
}

function solarTrueLongitude(centuries) {
  return solarGeometricMeanLongitude(centuries) + solarEquationOfCenter(centuries);
}

function solarGeometricMeanAnomaly(centuries) {
  return (357.52911 + centuries * (35999.05029 - 0.0001537 * centuries)) * radians;
}

function solarGeometricMeanLongitude(centuries) {
  var l = (280.46646 + centuries * (36000.76983 + centuries * 0.0003032)) % 360;
  return (l < 0 ? l + 360 : l) / 180 * π;
}

function solarEquationOfCenter(centuries) {
  var m = solarGeometricMeanAnomaly(centuries);
  return (Math.sin(m) * (1.914602 - centuries * (0.004817 + 0.000014 * centuries))
      + Math.sin(m + m) * (0.019993 - 0.000101 * centuries)
      + Math.sin(m + m + m) * 0.000289) * radians;
}

function obliquityCorrection(centuries) {
  return meanObliquityOfEcliptic(centuries) + 0.00256 * Math.cos((125.04 - 1934.136 * centuries) * radians) * radians;
}

function meanObliquityOfEcliptic(centuries) {
  return (23 + (26 + (21.448 - centuries * (46.8150 + centuries * (0.00059 - centuries * 0.001813))) / 60) / 60) * radians;
}

function eccentricityEarthOrbit(centuries) {
  return 0.016708634 - centuries * (0.000042037 + 0.0000001267 * centuries);
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
    .bar {
        fill: steelblue;
    }
    
    .bar:hover {
        fill: rgb(150,165,180);
    }
    
    .axis {
        font: 10px sans-serif;
        fill: white;
    }
    
    .axis path,
    .axis line {
        fill: none;
        stroke: white;
        shape-rendering: crispEdges;
    }
    
    .x.axis path {
        display: none;
    }
    
    body {
        background-color: rgb(50, 60, 70);
        color: white;
    }
    
    .x.axis {
        color: white;
    }
  .tooltip {
    background-color: rgba(160, 170, 187, 0.5);
    margin: 10px;
    height: 70px;
    width: 200px;
    padding-left: 10px;
    padding-top: 10px;
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    border-radius: 10px;
  }
</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script type="text/javascript" src="tooltips.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10, "%");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", type, function(error, data) {
  if (error) throw error;

  x.domain(data.map(function(d) { return d.letter; }));
  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Frequency");

  svg.selectAll(".bar")
      .data(data)
    	.enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.letter); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.frequency); })
      .attr("height", function(d) { return height - y(d.frequency); })
      .call(d3.helper.tooltip(function (d) {return "letter: <b>" + d.letter + "</b><br/>frequency: " + d.frequency;}));
});

function type(d) {
  d.frequency = +d.frequency;
  return d;
}

</script>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">

    <title>Collapsible Tree Example</title>

    <style>
	
	.node circle {
	  fill: #fff;
	  stroke: steelblue;
	  stroke-width: 3px;
	}

	.node text { font: 12px sans-serif; }

	.link {
	  fill: none;
	  stroke: #ccc;
	  stroke-width: 2px;
	}
	
    </style>

  </head>

  <body>

<!-- load the d3.js library -->	
<script src="http://d3js.org/d3.v3.min.js"></script>
	
<script>

var treeData = [
  {
    "name": "Top Level",
    "parent": "null",
    "value": 10,
    "type": "black",
    "level": "red",
    "icon": "earth.png",
    "children": [
      {
        "name": "Level 2: A",
        "parent": "Top Level",
        "value": 5,
        "type": "grey",
        "level": "red",
       "icon": "cart.png",
        "children": [
          {
            "name": "Son of A",
            "parent": "Level 2: A",
            "value": 5,
            "type": "steelblue",
            "icon": "lettern.png",
            "level": "orange"
          },
          {
            "name": "Daughter of A",
            "parent": "Level 2: A",
            "value": 18,
            "type": "steelblue",
            "icon": "vlc.png",
            "level": "red"
          }
        ]
      },
      {
        "name": "Level 2: B",
        "parent": "Top Level",
        "value": 10,
        "type": "grey",
        "icon": "random.png",
        "level": "green"
      }
    ]
  }
];

// ************** Generate the tree diagram	 *****************
var margin = {top: 20, right: 120, bottom: 20, left: 120},
	width = 960 - margin.right - margin.left,
	height = 500 - margin.top - margin.bottom;
	
var i = 0;

var tree = d3.layout.tree()
	.size([height, width]);

var diagonal = d3.svg.diagonal()
	.projection(function(d) { return [d.y, d.x]; });

var svg = d3.select("body").append("svg")
	.attr("width", width + margin.right + margin.left)
	.attr("height", height + margin.top + margin.bottom)
  .append("g")
	.attr("transform", 
	      "translate(" + margin.left + "," + margin.top + ")");

root = treeData[0];
  
update(root);

function update(source) {

  // Compute the new tree layout.
  var nodes = tree.nodes(root).reverse(),
	  links = tree.links(nodes);

  // Normalize for fixed-depth.
  nodes.forEach(function(d) { d.y = d.depth * 180; });

  // Declare the nodes…
  var node = svg.selectAll("g.node")
	  .data(nodes, function(d) { return d.id || (d.id = ++i); });

  // Enter the nodes.
  var nodeEnter = node.enter().append("g")
	  .attr("class", "node")
	  .attr("transform", function(d) { 
		  return "translate(" + d.y + "," + d.x + ")"; });

  nodeEnter.append("image")
      .attr("xlink:href", function(d) { return d.icon; })
      .attr("x", "-12px")
      .attr("y", "-12px")
      .attr("width", "24px")
      .attr("height", "24px");

  nodeEnter.append("text")
	  .attr("x", function(d) { 
		  return d.children || d._children ? 
		  (15) * -1 : + 15 })
	  .attr("dy", ".35em")
	  .attr("text-anchor", function(d) { 
		  return d.children || d._children ? "end" : "start"; })
	  .text(function(d) { return d.name; })
	  .style("fill-opacity", 1);

  // Declare the links…
  var link = svg.selectAll("path.link")
	  .data(links, function(d) { return d.target.id; });

  // Enter the links.
  link.enter().insert("path", "g")
	  .attr("class", "link")
	  .style("stroke", function(d) { return d.target.level; })
	  .attr("d", diagonal);

}

</script>
	
  </body>
</html>
<!doctype html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<title>force-layout</title>
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<style>

.node {
	font-size: 25px;	
}

.link {
	stroke: #999;
	stroke-opacity: .6;
}

</style>
</head>
<body>
<script>

var dataset = {
	nodes: [
		{id: 0, name: "Taro", sex: "M"},
		{id: 1, name: "Ken", sex: "M"},
		{id: 2, name: "Hana", sex: "F"},
		{id: 3, name: "Mike" ,sex: "M"},
		{id: 4, name: "Bob" ,sex: "M"},
		{id: 5, name: "Anna" ,sex: "F"}
	],
	links: [
		{source: 0, target: 1},
		{source: 0, target: 3},
		{source: 0, target: 4},
		{source: 1, target: 2},
		{source: 1, target: 5},
		{source: 2, target: 5},
		{source: 3, target: 4},
		{source: 4, target: 5}
	]
}

var width = 960;
var height = 500;

var svg = d3.select("body").append("svg")
	.attr("width", width)
	.attr("height", height);


var force = d3.layout.force()
	.nodes(dataset.nodes)
	.links(dataset.links)
	.charge(-200)
	.linkDistance(200)
	.size([width, height])
	.start();


var link = svg.selectAll(".link")
	.data(dataset.links)
	.enter()
	.append("line")
	.attr("class", "link");


var node = svg.selectAll(".node")
	.data(dataset.nodes)
	.enter()
	.append("text")
	.attr("class", "node")
	.attr("dx", "-20")
	.style("fill", function(d) {
		if(d.sex == "M"){
			return "blue";
		}else{
			return "red";
		}
	})
	.text(function(d){ return d.name; })
	.call(force.drag);


node.append("title")
	.text(function(d) { return d.name; });


force.on("tick", function() {
	link.attr("x1", function(d) { return d.source.x; })
		.attr("y1", function(d) { return d.source.y; })
		.attr("x2", function(d) { return d.target.x; })
		.attr("y2", function(d) { return d.target.y; });

	node.attr("x", function(d) { return d.x; })
		.attr("y", function(d) { return d.y; });
});

</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>US State projection</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">

			body {
				background-color: white;
			}

			h1 {
				font-family: sans-serif;
				font-size: 20px;
				padding-left: 30px;
				padding-top: 0px;
			}

			h2 {
				font-family: sans-serif;
				font-size: 12px;
				padding-left: 30px;
				font-weight: normal;
				padding-top: 10px;
			}

			svg {
				background-color: white;
			}

			#container {
				width: 800px;
				margin-left: auto;
				margin-right: auto;
				margin-top: 60px;
				padding: 50px;
				background-color: white;
				border: 1px solid #ccc;
				/*box-shadow: 3px 3px 5px 6px #ccc;*/
			}



		</style>
	</head>
	<body>
		<div id="container">

		<h1>Unite States Geo Map</h1>

		</div>

		<script type="text/javascript">
			//Width and height
			var w = 500;
			var h = 300;

			//Define map projection
			var projection = d3.geo.albersUsa()
								   .translate([ w/2, h/2 ])
								   .scale([ 600 ]);

			//Define path generator
			var path = d3.geo.path()
							 .projection(projection);

			//Create SVG
			var svg = d3.select("#container")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			//Load in GeoJSON data
			d3.json("usstate.json", function(json) {
				//Bind data and create one path per GeoJSON feature
				svg.selectAll("path")
				   .data(json.features)
				   .enter()
				   .append("path")
				   .attr("d", path)
				   .style({fill: "steelblue", stroke: "#eee"});
		
			});


		
		</script>
	</body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
   <script src="http://colineberhardt.github.io/d3fc/Layout.js"></script>
   <script src="http://colineberhardt.github.io/d3fc/d3fc.js"></script>
   <link href="http://colineberhardt.github.io/d3fc/d3fc.css" rel="stylesheet"/>
   <link href="style.css" rel="stylesheet"/>
  </head>
<body>
  <svg id='time-series' style='height: 500px; width: 100%;'></svg>
  <script src="script.js"></script>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width">
<style>

html,
body {
  height: 100%;
  margin: 0;
  overflow: hidden;
}

div {
  position: absolute;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = self.frameElement ? 960 : innerWidth,
    height = self.frameElement ? 500 : innerHeight;

var data = d3.range(20).map(function() { return [Math.random() * width, Math.random() * height]; });

var transform = ["", "-webkit-", "-moz-", "-ms-", "-o-"].reduce(function(p, v) { return v + "transform" in document.body.style ? v : p; }) + "transform";

var color = d3.scale.category10();

var radius0 = 32,
    radius1 = 48;

var drag = d3.behavior.drag()
    .origin(function(d) { return {x: d[0], y: d[1]}; })
    .on("dragstart", dragstarted)
    .on("drag", dragged)
    .on("dragend", dragended);

d3.select("body")
    .on("touchstart", nozoom)
    .on("touchmove", nozoom)
  .selectAll("div")
    .data(data)
  .enter().append("div")
    .style(transform, function(d) { return "translate(" + d[0] + "px," + d[1] + "px)"; })
    .style("margin-top", -radius0 + "px")
    .style("margin-left", -radius0 + "px")
    .style("width", radius0 * 2 + "px")
    .style("height", radius0 * 2 + "px")
    .style("border-radius", radius0 + "px")
    .style("background", function(d, i) { return color(i); })
    .call(drag);

function dragstarted() {
  this.parentNode.appendChild(this);

  d3.select(this).transition()
      .ease("elastic")
      .duration(500)
      .style("margin-top", -radius1 + "px")
      .style("margin-left", -radius1 + "px")
      .style("width", radius1 * 2 + "px")
      .style("height", radius1 * 2 + "px")
      .style("border-radius", radius1 + "px")
      .styleTween("box-shadow", function() { return d3.interpolate("0 0px 0px rgba(0,0,0,0)", "0 4px 8px rgba(0,0,0,.3)"); });
}

function dragged(d) {
  d[0] = d3.event.x;
  d[1] = d3.event.y;

  d3.select(this)
      .style(transform, function(d) { return "translate(" + d[0] + "px," + d[1] + "px)"; });
}

function dragended() {
  d3.select(this).transition()
      .ease("elastic")
      .duration(500)
      .style("margin-top", -radius0 + "px")
      .style("margin-left", -radius0 + "px")
      .style("width", radius0 * 2 + "px")
      .style("height", radius0 * 2 + "px")
      .style("border-radius", radius0 + "px")
      .styleTween("box-shadow", function() { return d3.interpolate("0 4px 8px rgba(0,0,0,.3)", "0 0px 0px rgba(0,0,0,0)"); });
}

function nozoom() {
  d3.event.preventDefault();
}

</script>
<!DOCTYPE html>
<html lang='en'>
    <head>
        <meta charset='utf-8'>
        <title>
            All About D3 Time Scales
        </title>
        <script src='http://d3js.org/d3.v3.min.js' charset='utf-8'></script>
        <style type='text/css'>
            svg {
                display: block;
                margin: 0 auto;
            }
            .axis path, .axis line {
                fill: none;
                stroke: #575757;
                shape-rendering: crispEdges;
            }
            .tick text {
                fill: #575757;
                font-size: 10px;
            }
            text, tspan {
                font-family: sans-serif;
                font-size: 14px;
                dominant-baseline: central;
            }
            text.code-text {
                font-family: monospace;
            }
            text.alert-text {
                font-weight: bold;
                fill: #7F0000;
            }
            text.legend {
                font-weight: bold;
            }
            text.legend-label {
                font-size: 12px;
            }
            tspan {
                font-weight: bold;
            }
        </style>
    </head>
    <body>
        <script type='text/javascript' src='timescales.js'></script>
    </body>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body ng-app="myApp" ng-controller="MainCtrl">
    
    
      <form class="well">
      <label><b>Select  series :</b></label>
      <select class="form-control" ng-model="selected" 
      ng-options="key for (key,value) in data">   
      </select><br>
      </form>
      <div id="graphic">
      </div>
          
      <script>
    var svg, chart,  padding, width, height, line, linebreak, x, y;
    var params = {
 "dom": "chart58460a3739d",
"width":    800,
"height":    400,
"x": "date",
"y": "x",
"bodyattrs": "ng-app=\"myApp\" ng-controller=\"MainCtrl\"",
"id": "chart58460a3739d" 
},
        data = { "h0.05" : { "line" : [ { "date" : -6940, "x" : 3.08 }, { "date" : -6909, "x" : 3.08 }, { "date" : -6881, "x" : 3.07 }, { "date" : -6850, "x" : 3.11 }, { "date" : -6820, "x" : 3.07 }, { "date" : -6789, "x" : 3.04 }, { "date" : -6759, "x" : 3.11 }, { "date" : -6728, "x" : 3.15 }, { "date" : -6697, "x" : 3.15 }, { "date" : -6667, "x" : 3.13 }, { "date" : -6636, "x" : 3.13 }, { "date" : -6606, "x" : 3.17 }, { "date" : -6575, "x" : 3.18 }, { "date" : -6544, "x" : 3.15 }, { "date" : -6515, "x" : 3.19 }, { "date" : -6484, "x" : 3.15 }, { "date" : -6454, "x" : 3.17 }, { "date" : -6423, "x" : 3.22 }, { "date" : -6393, "x" : 3.23 }, { "date" : -6362, "x" : 3.22 }, { "date" : -6331, "x" : 3.2 }, { "date" : -6301, "x" : 3.2 }, { "date" : -6270, "x" : 3.24 }, { "date" : -6240, "x" : 3.28 }, { "date" : -6209, "x" : 3.27 }, { "date" : -6178, "x" : 3.25 }, { "date" : -6150, "x" : 3.23 }, { "date" : -6119, "x" : 3.2 }, { "date" : -6089, "x" : 3.2 }, { "date" : -6058, "x" : 3.18 }, { "date" : -6028, "x" : 3.21 }, { "date" : -5997, "x" : 3.15 }, { "date" : -5966, "x" : 3.15 }, { "date" : -5936, "x" : 3.2 }, { "date" : -5905, "x" : 3.21 }, { "date" : -5875, "x" : 3.21 }, { "date" : -5844, "x" : 3.26 }, { "date" : -5813, "x" : 3.26 }, { "date" : -5785, "x" : 3.29 }, { "date" : -5754, "x" : 3.34 }, { "date" : -5724, "x" : 3.37 }, { "date" : -5693, "x" : 3.37 }, { "date" : -5663, "x" : 3.43 }, { "date" : -5632, "x" : 3.4 }, { "date" : -5601, "x" : 3.48 }, { "date" : -5571, "x" : 3.46 }, { "date" : -5540, "x" : 3.53 }, { "date" : -5510, "x" : 3.58 }, { "date" : -5479, "x" : 3.6 }, { "date" : -5448, "x" : 3.6 }, { "date" : -5420, "x" : 3.6 }, { "date" : -5389, "x" : 3.64 }, { "date" : -5359, "x" : 3.64 }, { "date" : -5328, "x" : 3.71 }, { "date" : -5298, "x" : 3.77 }, { "date" : -5267, "x" : 3.77 }, { "date" : -5236, "x" : 3.78 }, { "date" : -5206, "x" : 3.75 }, { "date" : -5175, "x" : 3.82 }, { "date" : -5145, "x" : 3.82 }, { "date" : -5114, "x" : 3.78 }, { "date" : -5083, "x" : 3.81 }, { "date" : -5054, "x" : 3.88 }, { "date" : -5023, "x" : 3.88 }, { "date" : -4993, "x" : 3.81 }, { "date" : -4962, "x" : 3.85 }, { "date" : -4932, "x" : 3.9 }, { "date" : -4901, "x" : 3.86 }, { "date" : -4870, "x" : 3.81 }, { "date" : -4840, "x" : 3.82 }, { "date" : -4809, "x" : 3.81 }, { "date" : -4779, "x" : 3.84 }, { "date" : -4748, "x" : 3.8 }, { "date" : -4717, "x" : 3.77 }, { "date" : -4689, "x" : 3.79 }, { "date" : -4658, "x" : 3.82 }, { "date" : -4628, "x" : 3.86 }, { "date" : -4597, "x" : 3.86 }, { "date" : -4567, "x" : 3.87 }, { "date" : -4536, "x" : 3.81 }, { "date" : -4505, "x" : 3.75 }, { "date" : -4475, "x" : 3.72 }, { "date" : -4444, "x" : 3.73 }, { "date" : -4414, "x" : 3.69 }, { "date" : -4383, "x" : 3.73 }, { "date" : -4352, "x" : 3.71 }, { "date" : -4324, "x" : 3.74 }, { "date" : -4293, "x" : 3.77 }, { "date" : -4263, "x" : 3.79 }, { "date" : -4232, "x" : 3.81 }, { "date" : -4202, "x" : 3.85 }, { "date" : -4171, "x" : 3.87 }, { "date" : -4140, "x" : 3.91 }, { "date" : -4110, "x" : 3.94 }, { "date" : -4079, "x" : 3.96 }, { "date" : -4049, "x" : 4.01 }, { "date" : -4018, "x" : 4.02 }, { "date" : -3987, "x" : 4.01 }, { "date" : -3959, "x" : 4.02 }, { "date" : -3928, "x" : 4.05 }, { "date" : -3898, "x" : 4.07 }, { "date" : -3867, "x" : 4.07 }, { "date" : -3837, "x" : 4.1 }, { "date" : -3806, "x" : 4.09 }, { "date" : -3775, "x" : 4.04 }, { "date" : -3745, "x" : 4.05 }, { "date" : -3714, "x" : 4.07 }, { "date" : -3684, "x" : 4.09 }, { "date" : -3653, "x" : 4.02 }, { "date" : -3622, "x" : 4.03 }, { "date" : -3593, "x" : 4.01 }, { "date" : -3562, "x" : 4 }, { "date" : -3532, "x" : 4.02 }, { "date" : -3501, "x" : 4.04 }, { "date" : -3471, "x" : 4.02 }, { "date" : -3440, "x" : 4.04 }, { "date" : -3409, "x" : 3.98 }, { "date" : -3379, "x" : 3.98 }, { "date" : -3348, "x" : 4.02 }, { "date" : -3318, "x" : 4.06 }, { "date" : -3287, "x" : 4.12 }, { "date" : -3256, "x" : 4.15 }, { "date" : -3228, "x" : 4.18 }, { "date" : -3197, "x" : 4.18 }, { "date" : -3167, "x" : 4.2 }, { "date" : -3136, "x" : 4.17 }, { "date" : -3106, "x" : 4.2 }, { "date" : -3075, "x" : 4.22 }, { "date" : -3044, "x" : 4.2 }, { "date" : -3014, "x" : 4.23 }, { "date" : -2983, "x" : 4.27 }, { "date" : -2953, "x" : 4.27 }, { "date" : -2922, "x" : 4.23 }, { "date" : -2891, "x" : 4.25 }, { "date" : -2863, "x" : 4.24 }, { "date" : -2832, "x" : 4.18 }, { "date" : -2802, "x" : 4.09 }, { "date" : -2771, "x" : 4 }, { "date" : -2741, "x" : 4.06 }, { "date" : -2710, "x" : 4.08 }, { "date" : -2679, "x" : 4.03 }, { "date" : -2649, "x" : 4.03 }, { "date" : -2618, "x" : 4.13 }, { "date" : -2588, "x" : 4.14 }, { "date" : -2557, "x" : 4.19 }, { "date" : -2526, "x" : 4.16 }, { "date" : -2498, "x" : 4.2 }, { "date" : -2467, "x" : 4.25 }, { "date" : -2437, "x" : 4.26 }, { "date" : -2406, "x" : 4.24 }, { "date" : -2376, "x" : 4.24 }, { "date" : -2345, "x" : 4.28 }, { "date" : -2314, "x" : 4.27 }, { "date" : -2284, "x" : 4.3 }, { "date" : -2253, "x" : 4.29 }, { "date" : -2223, "x" : 4.32 }, { "date" : -2192, "x" : 4.34 }, { "date" : -2161, "x" : 4.35 }, { "date" : -2132, "x" : 4.37 }, { "date" : -2101, "x" : 4.38 }, { "date" : -2071, "x" : 4.39 }, { "date" : -2040, "x" : 4.4 }, { "date" : -2010, "x" : 4.42 }, { "date" : -1979, "x" : 4.4 }, { "date" : -1948, "x" : 4.43 }, { "date" : -1918, "x" : 4.44 }, { "date" : -1887, "x" : 4.44 }, { "date" : -1857, "x" : 4.44 }, { "date" : -1826, "x" : 4.47 }, { "date" : -1795, "x" : 4.47 }, { "date" : -1767, "x" : 4.46 }, { "date" : -1736, "x" : 4.49 }, { "date" : -1706, "x" : 4.48 }, { "date" : -1675, "x" : 4.43 }, { "date" : -1645, "x" : 4.45 }, { "date" : -1614, "x" : 4.47 }, { "date" : -1583, "x" : 4.5 }, { "date" : -1553, "x" : 4.53 }, { "date" : -1522, "x" : 4.52 }, { "date" : -1492, "x" : 4.53 }, { "date" : -1461, "x" : 4.53 }, { "date" : -1430, "x" : 4.51 }, { "date" : -1402, "x" : 4.49 }, { "date" : -1371, "x" : 4.51 }, { "date" : -1341, "x" : 4.46 }, { "date" : -1310, "x" : 4.44 }, { "date" : -1280, "x" : 4.43 }, { "date" : -1249, "x" : 4.35 }, { "date" : -1218, "x" : 4.34 }, { "date" : -1188, "x" : 4.38 }, { "date" : -1157, "x" : 4.39 }, { "date" : -1127, "x" : 4.39 }, { "date" : -1096, "x" : 4.46 }, { "date" : -1065, "x" : 4.46 }, { "date" : -1037, "x" : 4.5 }, { "date" : -1006, "x" : 4.54 }, { "date" : -976, "x" : 4.49 }, { "date" : -945, "x" : 4.51 }, { "date" : -915, "x" : 4.55 }, { "date" : -884, "x" : 4.54 }, { "date" : -853, "x" : 4.57 }, { "date" : -823, "x" : 4.54 }, { "date" : -792, "x" : 4.54 }, { "date" : -762, "x" : 4.57 }, { "date" : -731, "x" : 4.52 }, { "date" : -700, "x" : 4.49 }, { "date" : -671, "x" : 4.5 }, { "date" : -640, "x" : 4.58 }, { "date" : -610, "x" : 4.59 }, { "date" : -579, "x" : 4.6 }, { "date" : -549, "x" : 4.58 }, { "date" : -518, "x" : 4.59 }, { "date" : -487, "x" : 4.63 }, { "date" : -457, "x" : 4.64 }, { "date" : -426, "x" : 4.69 }, { "date" : -396, "x" : 4.64 }, { "date" : -365, "x" : 4.63 }, { "date" : -334, "x" : 4.59 }, { "date" : -306, "x" : 4.62 }, { "date" : -275, "x" : 4.64 }, { "date" : -245, "x" : 4.64 }, { "date" : -214, "x" : 4.58 }, { "date" : -184, "x" : 4.52 }, { "date" : -153, "x" : 4.56 }, { "date" : -122, "x" : 4.53 }, { "date" : -92, "x" : 4.58 }, { "date" : -61, "x" : 4.54 }, { "date" : -31, "x" : 4.52 }, { "date" : 0, "x" : 4.44 }, { "date" : 31, "x" : 4.49 }, { "date" : 59, "x" : 4.5 }, { "date" : 90, "x" : 4.4 }, { "date" : 120, "x" : 4.34 }, { "date" : 151, "x" : 4.29 }, { "date" : 181, "x" : 4.36 }, { "date" : 212, "x" : 4.4 }, { "date" : 243, "x" : 4.43 }, { "date" : 273, "x" : 4.42 }, { "date" : 304, "x" : 4.47 }, { "date" : 334, "x" : 4.52 }, { "date" : 365, "x" : 4.56 }, { "date" : 396, "x" : 4.57 }, { "date" : 424, "x" : 4.61 }, { "date" : 455, "x" : 4.64 }, { "date" : 485, "x" : 4.6 }, { "date" : 516, "x" : 4.59 }, { "date" : 546, "x" : 4.56 }, { "date" : 577, "x" : 4.6 }, { "date" : 608, "x" : 4.59 }, { "date" : 638, "x" : 4.55 }, { "date" : 669, "x" : 4.54 }, { "date" : 699, "x" : 4.63 }, { "date" : 730, "x" : 4.64 }, { "date" : 761, "x" : 4.67 }, { "date" : 790, "x" : 4.67 }, { "date" : 821, "x" : 4.68 }, { "date" : 851, "x" : 4.7 }, { "date" : 882, "x" : 4.67 }, { "date" : 912, "x" : 4.68 }, { "date" : 943, "x" : 4.71 }, { "date" : 974, "x" : 4.71 }, { "date" : 1004, "x" : 4.71 }, { "date" : 1035, "x" : 4.76 }, { "date" : 1065, "x" : 4.77 }, { "date" : 1096, "x" : 4.75 }, { "date" : 1127, "x" : 4.72 }, { "date" : 1155, "x" : 4.71 }, { "date" : 1186, "x" : 4.67 }, { "date" : 1216, "x" : 4.65 }, { "date" : 1247, "x" : 4.65 }, { "date" : 1277, "x" : 4.68 }, { "date" : 1308, "x" : 4.65 }, { "date" : 1339, "x" : 4.69 }, { "date" : 1369, "x" : 4.68 }, { "date" : 1400, "x" : 4.56 }, { "date" : 1430, "x" : 4.58 }, { "date" : 1461, "x" : 4.57 }, { "date" : 1492, "x" : 4.57 }, { "date" : 1520, "x" : 4.54 }, { "date" : 1551, "x" : 4.5 }, { "date" : 1581, "x" : 4.47 }, { "date" : 1612, "x" : 4.45 }, { "date" : 1642, "x" : 4.37 }, { "date" : 1673, "x" : 4.28 }, { "date" : 1704, "x" : 4.15 }, { "date" : 1734, "x" : 4.3 }, { "date" : 1765, "x" : 4.25 }, { "date" : 1795, "x" : 4.23 }, { "date" : 1826, "x" : 4.34 }, { "date" : 1857, "x" : 4.4 }, { "date" : 1885, "x" : 4.42 }, { "date" : 1916, "x" : 4.47 }, { "date" : 1946, "x" : 4.51 }, { "date" : 1977, "x" : 4.56 }, { "date" : 2007, "x" : 4.49 }, { "date" : 2038, "x" : 4.46 }, { "date" : 2069, "x" : 4.43 }, { "date" : 2099, "x" : 4.49 }, { "date" : 2130, "x" : 4.51 }, { "date" : 2160, "x" : 4.5 }, { "date" : 2191, "x" : 4.61 }, { "date" : 2222, "x" : 4.6 }, { "date" : 2251, "x" : 4.63 }, { "date" : 2282, "x" : 4.62 }, { "date" : 2312, "x" : 4.61 }, { "date" : 2343, "x" : 4.65 }, { "date" : 2373, "x" : 4.64 }, { "date" : 2404, "x" : 4.63 }, { "date" : 2435, "x" : 4.66 }, { "date" : 2465, "x" : 4.63 }, { "date" : 2496, "x" : 4.63 }, { "date" : 2526, "x" : 4.68 }, { "date" : 2557, "x" : 4.63 }, { "date" : 2588, "x" : 4.6 }, { "date" : 2616, "x" : 4.59 }, { "date" : 2647, "x" : 4.59 }, { "date" : 2677, "x" : 4.57 }, { "date" : 2708, "x" : 4.61 }, { "date" : 2738, "x" : 4.59 }, { "date" : 2769, "x" : 4.57 }, { "date" : 2800, "x" : 4.57 }, { "date" : 2830, "x" : 4.53 }, { "date" : 2861, "x" : 4.55 }, { "date" : 2891, "x" : 4.55 }, { "date" : 2922, "x" : 4.49 }, { "date" : 2953, "x" : 4.47 }, { "date" : 2981, "x" : 4.49 }, { "date" : 3012, "x" : 4.57 }, { "date" : 3042, "x" : 4.58 }, { "date" : 3073, "x" : 4.56 }, { "date" : 3103, "x" : 4.61 }, { "date" : 3134, "x" : 4.64 }, { "date" : 3165, "x" : 4.63 }, { "date" : 3195, "x" : 4.53 }, { "date" : 3226, "x" : 4.55 }, { "date" : 3256, "x" : 4.57 }, { "date" : 3287, "x" : 4.6 }, { "date" : 3318, "x" : 4.57 }, { "date" : 3346, "x" : 4.62 }, { "date" : 3377, "x" : 4.62 }, { "date" : 3407, "x" : 4.6 }, { "date" : 3438, "x" : 4.63 }, { "date" : 3468, "x" : 4.64 }, { "date" : 3499, "x" : 4.69 }, { "date" : 3530, "x" : 4.69 }, { "date" : 3560, "x" : 4.62 }, { "date" : 3591, "x" : 4.66 }, { "date" : 3621, "x" : 4.68 }, { "date" : 3652, "x" : 4.74 }, { "date" : 3683, "x" : 4.73 }, { "date" : 3712, "x" : 4.63 }, { "date" : 3743, "x" : 4.67 }, { "date" : 3773, "x" : 4.71 }, { "date" : 3804, "x" : 4.74 }, { "date" : 3834, "x" : 4.8 }, { "date" : 3865, "x" : 4.81 }, { "date" : 3896, "x" : 4.83 }, { "date" : 3926, "x" : 4.85 }, { "date" : 3957, "x" : 4.95 }, { "date" : 3987, "x" : 4.91 }, { "date" : 4018, "x" : 4.86 }, { "date" : 4049, "x" : 4.88 }, { "date" : 4077, "x" : 4.91 }, { "date" : 4108, "x" : 4.89 }, { "date" : 4138, "x" : 4.89 }, { "date" : 4169, "x" : 4.88 }, { "date" : 4199, "x" : 4.87 }, { "date" : 4230, "x" : 4.81 }, { "date" : 4261, "x" : 4.76 }, { "date" : 4291, "x" : 4.8 }, { "date" : 4322, "x" : 4.84 }, { "date" : 4352, "x" : 4.81 }, { "date" : 4383, "x" : 4.79 }, { "date" : 4414, "x" : 4.73 }, { "date" : 4442, "x" : 4.72 }, { "date" : 4473, "x" : 4.76 }, { "date" : 4503, "x" : 4.72 }, { "date" : 4534, "x" : 4.7 }, { "date" : 4564, "x" : 4.67 }, { "date" : 4595, "x" : 4.78 }, { "date" : 4626, "x" : 4.79 }, { "date" : 4656, "x" : 4.9 }, { "date" : 4687, "x" : 4.93 }, { "date" : 4717, "x" : 4.95 }, { "date" : 4748, "x" : 4.98 }, { "date" : 4779, "x" : 5 }, { "date" : 4807, "x" : 5.03 }, { "date" : 4838, "x" : 5.1 }, { "date" : 4868, "x" : 5.09 }, { "date" : 4899, "x" : 5.12 }, { "date" : 4929, "x" : 5.09 }, { "date" : 4960, "x" : 5.1 }, { "date" : 4991, "x" : 5.11 }, { "date" : 5021, "x" : 5.1 }, { "date" : 5052, "x" : 5.11 }, { "date" : 5082, "x" : 5.11 }, { "date" : 5113, "x" : 5.1 }, { "date" : 5144, "x" : 5.06 }, { "date" : 5173, "x" : 5.07 }, { "date" : 5204, "x" : 5.08 }, { "date" : 5234, "x" : 5.01 }, { "date" : 5265, "x" : 5.03 }, { "date" : 5295, "x" : 5.02 }, { "date" : 5326, "x" : 5.12 }, { "date" : 5357, "x" : 5.11 }, { "date" : 5387, "x" : 5.11 }, { "date" : 5418, "x" : 5.1 }, { "date" : 5448, "x" : 5.12 }, { "date" : 5479, "x" : 5.19 }, { "date" : 5510, "x" : 5.2 }, { "date" : 5538, "x" : 5.2 }, { "date" : 5569, "x" : 5.19 }, { "date" : 5599, "x" : 5.24 }, { "date" : 5630, "x" : 5.26 }, { "date" : 5660, "x" : 5.25 }, { "date" : 5691, "x" : 5.24 }, { "date" : 5722, "x" : 5.2 }, { "date" : 5752, "x" : 5.25 }, { "date" : 5783, "x" : 5.31 }, { "date" : 5813, "x" : 5.35 }, { "date" : 5844, "x" : 5.36 }, { "date" : 5875, "x" : 5.42 }, { "date" : 5903, "x" : 5.48 }, { "date" : 5934, "x" : 5.46 }, { "date" : 5964, "x" : 5.51 }, { "date" : 5995, "x" : 5.52 }, { "date" : 6025, "x" : 5.46 }, { "date" : 6056, "x" : 5.53 }, { "date" : 6087, "x" : 5.44 }, { "date" : 6117, "x" : 5.5 }, { "date" : 6148, "x" : 5.52 }, { "date" : 6178, "x" : 5.49 }, { "date" : 6209, "x" : 5.61 }, { "date" : 6240, "x" : 5.65 }, { "date" : 6268, "x" : 5.68 }, { "date" : 6299, "x" : 5.66 }, { "date" : 6329, "x" : 5.67 }, { "date" : 6360, "x" : 5.72 }, { "date" : 6390, "x" : 5.76 }, { "date" : 6421, "x" : 5.8 }, { "date" : 6452, "x" : 5.77 }, { "date" : 6482, "x" : 5.53 }, { "date" : 6513, "x" : 5.44 }, { "date" : 6543, "x" : 5.51 }, { "date" : 6574, "x" : 5.55 }, { "date" : 6605, "x" : 5.59 }, { "date" : 6634, "x" : 5.56 }, { "date" : 6665, "x" : 5.57 }, { "date" : 6695, "x" : 5.57 }, { "date" : 6726, "x" : 5.61 }, { "date" : 6756, "x" : 5.61 }, { "date" : 6787, "x" : 5.57 }, { "date" : 6818, "x" : 5.61 }, { "date" : 6848, "x" : 5.63 }, { "date" : 6879, "x" : 5.61 }, { "date" : 6909, "x" : 5.63 }, { "date" : 6940, "x" : 5.7 }, { "date" : 6971, "x" : 5.67 }, { "date" : 6999, "x" : 5.69 }, { "date" : 7030, "x" : 5.74 }, { "date" : 7060, "x" : 5.77 }, { "date" : 7091, "x" : 5.76 }, { "date" : 7121, "x" : 5.85 }, { "date" : 7152, "x" : 5.86 }, { "date" : 7183, "x" : 5.86 }, { "date" : 7213, "x" : 5.83 }, { "date" : 7244, "x" : 5.85 }, { "date" : 7274, "x" : 5.87 }, { "date" : 7305, "x" : 5.8 }, { "date" : 7336, "x" : 5.8 }, { "date" : 7364, "x" : 5.83 }, { "date" : 7395, "x" : 5.8 }, { "date" : 7425, "x" : 5.89 }, { "date" : 7456, "x" : 5.88 }, { "date" : 7486, "x" : 5.88 }, { "date" : 7517, "x" : 5.78 }, { "date" : 7548, "x" : 5.72 }, { "date" : 7578, "x" : 5.72 }, { "date" : 7609, "x" : 5.78 }, { "date" : 7639, "x" : 5.8 }, { "date" : 7670, "x" : 5.84 }, { "date" : 7701, "x" : 5.91 }, { "date" : 7729, "x" : 5.93 }, { "date" : 7760, "x" : 5.93 }, { "date" : 7790, "x" : 5.97 }, { "date" : 7821, "x" : 5.92 }, { "date" : 7851, "x" : 5.96 }, { "date" : 7882, "x" : 5.98 }, { "date" : 7913, "x" : 5.96 }, { "date" : 7943, "x" : 5.97 }, { "date" : 7974, "x" : 5.93 }, { "date" : 8004, "x" : 6.03 }, { "date" : 8035, "x" : 6.01 }, { "date" : 8066, "x" : 6.02 }, { "date" : 8095, "x" : 6 }, { "date" : 8126, "x" : 6.03 }, { "date" : 8156, "x" : 6.03 }, { "date" : 8187, "x" : 6.01 }, { "date" : 8217, "x" : 6.05 }, { "date" : 8248, "x" : 6.03 }, { "date" : 8279, "x" : 6.04 }, { "date" : 8309, "x" : 6.04 }, { "date" : 8340, "x" : 6.07 }, { "date" : 8370, "x" : 6.08 }, { "date" : 8401, "x" : 6.08 }, { "date" : 8432, "x" : 6.09 }, { "date" : 8460, "x" : 6.11 }, { "date" : 8491, "x" : 6.09 }, { "date" : 8521, "x" : 6.11 }, { "date" : 8552, "x" : 6.11 }, { "date" : 8582, "x" : 6.11 }, { "date" : 8613, "x" : 6.14 }, { "date" : 8644, "x" : 6.13 }, { "date" : 8674, "x" : 6.15 }, { "date" : 8705, "x" : 6.14 }, { "date" : 8735, "x" : 6.15 }, { "date" : 8766, "x" : 6.18 }, { "date" : 8797, "x" : 6.15 }, { "date" : 8825, "x" : 6.1 }, { "date" : 8856, "x" : 6.11 }, { "date" : 8886, "x" : 6.12 }, { "date" : 8917, "x" : 6.1 }, { "date" : 8947, "x" : 6.13 }, { "date" : 8978, "x" : 6.16 }, { "date" : 9009, "x" : 6.14 }, { "date" : 9039, "x" : 6.16 }, { "date" : 9070, "x" : 6.12 }, { "date" : 9100, "x" : 6.13 }, { "date" : 9131, "x" : 6.15 }, { "date" : 9162, "x" : 6.19 }, { "date" : 9190, "x" : 6.22 }, { "date" : 9221, "x" : 6.24 }, { "date" : 9251, "x" : 6.28 }, { "date" : 9282, "x" : 6.3 }, { "date" : 9312, "x" : 6.33 }, { "date" : 9343, "x" : 6.33 }, { "date" : 9374, "x" : 6.37 }, { "date" : 9404, "x" : 6.37 }, { "date" : 9435, "x" : 6.41 }, { "date" : 9465, "x" : 6.42 }, { "date" : 9496, "x" : 6.46 }, { "date" : 9527, "x" : 6.46 }, { "date" : 9556, "x" : 6.47 }, { "date" : 9587, "x" : 6.48 }, { "date" : 9617, "x" : 6.51 }, { "date" : 9648, "x" : 6.51 }, { "date" : 9678, "x" : 6.46 }, { "date" : 9709, "x" : 6.48 }, { "date" : 9740, "x" : 6.53 }, { "date" : 9770, "x" : 6.56 }, { "date" : 9801, "x" : 6.63 }, { "date" : 9831, "x" : 6.61 }, { "date" : 9862, "x" : 6.67 }, { "date" : 9893, "x" : 6.67 }, { "date" : 9921, "x" : 6.63 }, { "date" : 9952, "x" : 6.69 }, { "date" : 9982, "x" : 6.74 }, { "date" : 10013, "x" : 6.79 }, { "date" : 10043, "x" : 6.86 }, { "date" : 10074, "x" : 6.8 }, { "date" : 10105, "x" : 6.85 }, { "date" : 10135, "x" : 6.82 }, { "date" : 10166, "x" : 6.86 }, { "date" : 10196, "x" : 6.88 }, { "date" : 10227, "x" : 6.89 }, { "date" : 10258, "x" : 6.96 }, { "date" : 10286, "x" : 7 }, { "date" : 10317, "x" : 7.01 }, { "date" : 10347, "x" : 6.99 }, { "date" : 10378, "x" : 7.03 }, { "date" : 10408, "x" : 7.02 }, { "date" : 10439, "x" : 6.86 }, { "date" : 10470, "x" : 6.92 }, { "date" : 10500, "x" : 7 }, { "date" : 10531, "x" : 7.06 }, { "date" : 10561, "x" : 7.11 }, { "date" : 10592, "x" : 7.15 }, { "date" : 10623, "x" : 7.12 }, { "date" : 10651, "x" : 7.16 }, { "date" : 10682, "x" : 7.2 }, { "date" : 10712, "x" : 7.17 }, { "date" : 10743, "x" : 7.22 }, { "date" : 10773, "x" : 7.19 }, { "date" : 10804, "x" : 7.19 }, { "date" : 10835, "x" : 7.16 }, { "date" : 10865, "x" : 7.22 }, { "date" : 10896, "x" : 7.24 }, { "date" : 10926, "x" : 7.29 }, { "date" : 10957, "x" : 7.24 }, { "date" : 10988, "x" : 7.22 }, { "date" : 11017, "x" : 7.31 }, { "date" : 11048, "x" : 7.28 }, { "date" : 11078, "x" : 7.26 }, { "date" : 11109, "x" : 7.28 }, { "date" : 11139, "x" : 7.27 }, { "date" : 11170, "x" : 7.32 }, { "date" : 11201, "x" : 7.27 }, { "date" : 11231, "x" : 7.27 }, { "date" : 11262, "x" : 7.18 }, { "date" : 11292, "x" : 7.19 }, { "date" : 11323, "x" : 7.22 }, { "date" : 11354, "x" : 7.12 }, { "date" : 11382, "x" : 7.06 }, { "date" : 11413, "x" : 7.13 }, { "date" : 11443, "x" : 7.14 }, { "date" : 11474, "x" : 7.11 }, { "date" : 11504, "x" : 7.1 }, { "date" : 11535, "x" : 7.03 }, { "date" : 11566, "x" : 6.95 }, { "date" : 11596, "x" : 6.97 }, { "date" : 11627, "x" : 7.04 }, { "date" : 11657, "x" : 7.05 }, { "date" : 11688, "x" : 7.03 }, { "date" : 11719, "x" : 7.01 }, { "date" : 11747, "x" : 7.05 }, { "date" : 11778, "x" : 6.98 }, { "date" : 11808, "x" : 6.97 }, { "date" : 11839, "x" : 6.9 }, { "date" : 11869, "x" : 6.82 }, { "date" : 11900, "x" : 6.82 }, { "date" : 11931, "x" : 6.7 }, { "date" : 11961, "x" : 6.79 }, { "date" : 11992, "x" : 6.84 }, { "date" : 12022, "x" : 6.78 }, { "date" : 12053, "x" : 6.75 }, { "date" : 12084, "x" : 6.73 }, { "date" : 12112, "x" : 6.74 }, { "date" : 12143, "x" : 6.82 }, { "date" : 12173, "x" : 6.87 }, { "date" : 12204, "x" : 6.88 }, { "date" : 12234, "x" : 6.9 }, { "date" : 12265, "x" : 6.92 }, { "date" : 12296, "x" : 6.9 }, { "date" : 12326, "x" : 6.96 }, { "date" : 12357, "x" : 6.96 }, { "date" : 12387, "x" : 7.01 }, { "date" : 12418, "x" : 7.03 }, { "date" : 12449, "x" : 7.04 }, { "date" : 12478, "x" : 7.03 }, { "date" : 12509, "x" : 7.01 }, { "date" : 12539, "x" : 7.02 }, { "date" : 12570, "x" : 7.04 }, { "date" : 12600, "x" : 7 }, { "date" : 12631, "x" : 7.01 }, { "date" : 12662, "x" : 7.02 }, { "date" : 12692, "x" : 7.03 }, { "date" : 12723, "x" : 7.07 }, { "date" : 12753, "x" : 7.1 }, { "date" : 12784, "x" : 7.07 }, { "date" : 12815, "x" : 7.09 }, { "date" : 12843, "x" : 7.07 }, { "date" : 12874, "x" : 7.05 }, { "date" : 12904, "x" : 7.08 }, { "date" : 12935, "x" : 7.08 }, { "date" : 12965, "x" : 7.12 }, { "date" : 12996, "x" : 7.11 }, { "date" : 13027, "x" : 7.11 }, { "date" : 13057, "x" : 7.1 }, { "date" : 13088, "x" : 7.13 }, { "date" : 13118, "x" : 7.13 }, { "date" : 13149, "x" : 7.15 }, { "date" : 13180, "x" : 7.16 }, { "date" : 13208, "x" : 7.17 }, { "date" : 13239, "x" : 7.18 }, { "date" : 13269, "x" : 7.15 }, { "date" : 13300, "x" : 7.15 }, { "date" : 13330, "x" : 7.15 }, { "date" : 13361, "x" : 7.17 }, { "date" : 13392, "x" : 7.2 }, { "date" : 13422, "x" : 7.23 }, { "date" : 13453, "x" : 7.24 }, { "date" : 13483, "x" : 7.26 }, { "date" : 13514, "x" : 7.27 }, { "date" : 13545, "x" : 7.25 }, { "date" : 13573, "x" : 7.26 }, { "date" : 13604, "x" : 7.3 }, { "date" : 13634, "x" : 7.33 }, { "date" : 13665, "x" : 7.32 }, { "date" : 13695, "x" : 7.28 }, { "date" : 13726, "x" : 7.3 }, { "date" : 13757, "x" : 7.33 }, { "date" : 13787, "x" : 7.35 }, { "date" : 13818, "x" : 7.3 }, { "date" : 13848, "x" : 7.29 }, { "date" : 13879, "x" : 7.23 }, { "date" : 13910, "x" : 7.19 }, { "date" : 13939, "x" : 7.19 }, { "date" : 13970, "x" : 7.23 }, { "date" : 14000, "x" : 7.24 }, { "date" : 14031, "x" : 7.15 }, { "date" : 14061, "x" : 7.14 }, { "date" : 14092, "x" : 7.16 }, { "date" : 14123, "x" : 7.06 }, { "date" : 14153, "x" : 6.88 }, { "date" : 14184, "x" : 6.8 }, { "date" : 14214, "x" : 6.81 }, { "date" : 14245, "x" : 6.72 }, { "date" : 14276, "x" : 6.6 }, { "date" : 14304, "x" : 6.68 }, { "date" : 14335, "x" : 6.77 }, { "date" : 14365, "x" : 6.82 }, { "date" : 14396, "x" : 6.82 }, { "date" : 14426, "x" : 6.9 }, { "date" : 14457, "x" : 6.93 }, { "date" : 14488, "x" : 6.96 }, { "date" : 14518, "x" : 6.94 }, { "date" : 14549, "x" : 7 }, { "date" : 14579, "x" : 7.02 }, { "date" : 14610, "x" : 6.98 }, { "date" : 14641, "x" : 7.01 }, { "date" : 14669, "x" : 7.06 }, { "date" : 14700, "x" : 7.08 }, { "date" : 14730, "x" : 6.99 }, { "date" : 14761, "x" : 6.94 }, { "date" : 14791, "x" : 7 }, { "date" : 14822, "x" : 6.96 }, { "date" : 14853, "x" : 7.04 }, { "date" : 14883, "x" : 7.08 }, { "date" : 14914, "x" : 7.07 }, { "date" : 14944, "x" : 7.14 }, { "date" : 14975, "x" : 7.16 }, { "date" : 15006, "x" : 7.19 }, { "date" : 15034, "x" : 7.19 }, { "date" : 15065, "x" : 7.22 }, { "date" : 15095, "x" : 7.2 }, { "date" : 15126, "x" : 7.19 }, { "date" : 15156, "x" : 7.16 }, { "date" : 15187, "x" : 7.11 }, { "date" : 15218, "x" : 7.03 }, { "date" : 15248, "x" : 7.13 }, { "date" : 15279, "x" : 7.13 }, { "date" : 15309, "x" : 7.14 }, { "date" : 15340, "x" : 7.18 }, { "date" : 15371, "x" : 7.22 }, { "date" : 15400, "x" : 7.25 }, { "date" : 15431, "x" : 7.24 }, { "date" : 15461, "x" : 7.18 }, { "date" : 15492, "x" : 7.22 }, { "date" : 15522, "x" : 7.23 }, { "date" : 15553, "x" : 7.25 }, { "date" : 15584, "x" : 7.27 }, { "date" : 15614, "x" : 7.25 }, { "date" : 15645, "x" : 7.26 }, { "date" : 15675, "x" : 7.26 }, { "date" : 15706, "x" : 7.31 }, { "date" : 15737, "x" : 7.32 }, { "date" : 15765, "x" : 7.36 }, { "date" : 15796, "x" : 7.38 }, { "date" : 15826, "x" : 7.4 }, { "date" : 15857, "x" : 7.38 }, { "date" : 15887, "x" : 7.43 }, { "date" : 15918, "x" : 7.4 }, { "date" : 15949, "x" : 7.43 }, { "date" : 15979, "x" : 7.47 }, { "date" : 16010, "x" : 7.5 }, { "date" : 16040, "x" : 7.52 }, { "date" : 16071, "x" : 7.49 }, { "date" : 16102, "x" : 7.53 }, { "date" : 16130, "x" : 7.53 } ], "breaks" : [ [ { "date" : -6940, "x" : 3.02 }, { "date" : -5359, "x" : 3.51 } ], [ { "date" : -5328, "x" : 3.82 }, { "date" : -4202, "x" : 3.78 } ], [ { "date" : -4171, "x" : 3.94 }, { "date" : -2832, "x" : 4.23 } ], [ { "date" : -2802, "x" : 4.08 }, { "date" : -1430, "x" : 4.58 } ], [ { "date" : -1402, "x" : 4.41 }, { "date" : -214, "x" : 4.65 } ], [ { "date" : -184, "x" : 4.47 }, { "date" : 1520, "x" : 4.71 } ], [ { "date" : 1551, "x" : 4.35 }, { "date" : 2800, "x" : 4.68 } ], [ { "date" : 2830, "x" : 4.48 }, { "date" : 4199, "x" : 4.89 } ], [ { "date" : 4230, "x" : 4.73 }, { "date" : 5326, "x" : 5.15 } ], [ { "date" : 5357, "x" : 5.07 }, { "date" : 6452, "x" : 5.76 } ], [ { "date" : 6482, "x" : 5.55 }, { "date" : 8797, "x" : 6.19 } ], [ { "date" : 8825, "x" : 6.03 }, { "date" : 10988, "x" : 7.32 } ], [ { "date" : 11017, "x" : 7.33 }, { "date" : 12143, "x" : 6.73 } ], [ { "date" : 12173, "x" : 6.95 }, { "date" : 14123, "x" : 7.3 } ], [ { "date" : 14153, "x" : 6.78 }, { "date" : 16130, "x" : 7.5 } ] ] }, "h0.1" : { "line" : [ { "date" : -6940, "x" : 3.08 }, { "date" : -6909, "x" : 3.08 }, { "date" : -6881, "x" : 3.07 }, { "date" : -6850, "x" : 3.11 }, { "date" : -6820, "x" : 3.07 }, { "date" : -6789, "x" : 3.04 }, { "date" : -6759, "x" : 3.11 }, { "date" : -6728, "x" : 3.15 }, { "date" : -6697, "x" : 3.15 }, { "date" : -6667, "x" : 3.13 }, { "date" : -6636, "x" : 3.13 }, { "date" : -6606, "x" : 3.17 }, { "date" : -6575, "x" : 3.18 }, { "date" : -6544, "x" : 3.15 }, { "date" : -6515, "x" : 3.19 }, { "date" : -6484, "x" : 3.15 }, { "date" : -6454, "x" : 3.17 }, { "date" : -6423, "x" : 3.22 }, { "date" : -6393, "x" : 3.23 }, { "date" : -6362, "x" : 3.22 }, { "date" : -6331, "x" : 3.2 }, { "date" : -6301, "x" : 3.2 }, { "date" : -6270, "x" : 3.24 }, { "date" : -6240, "x" : 3.28 }, { "date" : -6209, "x" : 3.27 }, { "date" : -6178, "x" : 3.25 }, { "date" : -6150, "x" : 3.23 }, { "date" : -6119, "x" : 3.2 }, { "date" : -6089, "x" : 3.2 }, { "date" : -6058, "x" : 3.18 }, { "date" : -6028, "x" : 3.21 }, { "date" : -5997, "x" : 3.15 }, { "date" : -5966, "x" : 3.15 }, { "date" : -5936, "x" : 3.2 }, { "date" : -5905, "x" : 3.21 }, { "date" : -5875, "x" : 3.21 }, { "date" : -5844, "x" : 3.26 }, { "date" : -5813, "x" : 3.26 }, { "date" : -5785, "x" : 3.29 }, { "date" : -5754, "x" : 3.34 }, { "date" : -5724, "x" : 3.37 }, { "date" : -5693, "x" : 3.37 }, { "date" : -5663, "x" : 3.43 }, { "date" : -5632, "x" : 3.4 }, { "date" : -5601, "x" : 3.48 }, { "date" : -5571, "x" : 3.46 }, { "date" : -5540, "x" : 3.53 }, { "date" : -5510, "x" : 3.58 }, { "date" : -5479, "x" : 3.6 }, { "date" : -5448, "x" : 3.6 }, { "date" : -5420, "x" : 3.6 }, { "date" : -5389, "x" : 3.64 }, { "date" : -5359, "x" : 3.64 }, { "date" : -5328, "x" : 3.71 }, { "date" : -5298, "x" : 3.77 }, { "date" : -5267, "x" : 3.77 }, { "date" : -5236, "x" : 3.78 }, { "date" : -5206, "x" : 3.75 }, { "date" : -5175, "x" : 3.82 }, { "date" : -5145, "x" : 3.82 }, { "date" : -5114, "x" : 3.78 }, { "date" : -5083, "x" : 3.81 }, { "date" : -5054, "x" : 3.88 }, { "date" : -5023, "x" : 3.88 }, { "date" : -4993, "x" : 3.81 }, { "date" : -4962, "x" : 3.85 }, { "date" : -4932, "x" : 3.9 }, { "date" : -4901, "x" : 3.86 }, { "date" : -4870, "x" : 3.81 }, { "date" : -4840, "x" : 3.82 }, { "date" : -4809, "x" : 3.81 }, { "date" : -4779, "x" : 3.84 }, { "date" : -4748, "x" : 3.8 }, { "date" : -4717, "x" : 3.77 }, { "date" : -4689, "x" : 3.79 }, { "date" : -4658, "x" : 3.82 }, { "date" : -4628, "x" : 3.86 }, { "date" : -4597, "x" : 3.86 }, { "date" : -4567, "x" : 3.87 }, { "date" : -4536, "x" : 3.81 }, { "date" : -4505, "x" : 3.75 }, { "date" : -4475, "x" : 3.72 }, { "date" : -4444, "x" : 3.73 }, { "date" : -4414, "x" : 3.69 }, { "date" : -4383, "x" : 3.73 }, { "date" : -4352, "x" : 3.71 }, { "date" : -4324, "x" : 3.74 }, { "date" : -4293, "x" : 3.77 }, { "date" : -4263, "x" : 3.79 }, { "date" : -4232, "x" : 3.81 }, { "date" : -4202, "x" : 3.85 }, { "date" : -4171, "x" : 3.87 }, { "date" : -4140, "x" : 3.91 }, { "date" : -4110, "x" : 3.94 }, { "date" : -4079, "x" : 3.96 }, { "date" : -4049, "x" : 4.01 }, { "date" : -4018, "x" : 4.02 }, { "date" : -3987, "x" : 4.01 }, { "date" : -3959, "x" : 4.02 }, { "date" : -3928, "x" : 4.05 }, { "date" : -3898, "x" : 4.07 }, { "date" : -3867, "x" : 4.07 }, { "date" : -3837, "x" : 4.1 }, { "date" : -3806, "x" : 4.09 }, { "date" : -3775, "x" : 4.04 }, { "date" : -3745, "x" : 4.05 }, { "date" : -3714, "x" : 4.07 }, { "date" : -3684, "x" : 4.09 }, { "date" : -3653, "x" : 4.02 }, { "date" : -3622, "x" : 4.03 }, { "date" : -3593, "x" : 4.01 }, { "date" : -3562, "x" : 4 }, { "date" : -3532, "x" : 4.02 }, { "date" : -3501, "x" : 4.04 }, { "date" : -3471, "x" : 4.02 }, { "date" : -3440, "x" : 4.04 }, { "date" : -3409, "x" : 3.98 }, { "date" : -3379, "x" : 3.98 }, { "date" : -3348, "x" : 4.02 }, { "date" : -3318, "x" : 4.06 }, { "date" : -3287, "x" : 4.12 }, { "date" : -3256, "x" : 4.15 }, { "date" : -3228, "x" : 4.18 }, { "date" : -3197, "x" : 4.18 }, { "date" : -3167, "x" : 4.2 }, { "date" : -3136, "x" : 4.17 }, { "date" : -3106, "x" : 4.2 }, { "date" : -3075, "x" : 4.22 }, { "date" : -3044, "x" : 4.2 }, { "date" : -3014, "x" : 4.23 }, { "date" : -2983, "x" : 4.27 }, { "date" : -2953, "x" : 4.27 }, { "date" : -2922, "x" : 4.23 }, { "date" : -2891, "x" : 4.25 }, { "date" : -2863, "x" : 4.24 }, { "date" : -2832, "x" : 4.18 }, { "date" : -2802, "x" : 4.09 }, { "date" : -2771, "x" : 4 }, { "date" : -2741, "x" : 4.06 }, { "date" : -2710, "x" : 4.08 }, { "date" : -2679, "x" : 4.03 }, { "date" : -2649, "x" : 4.03 }, { "date" : -2618, "x" : 4.13 }, { "date" : -2588, "x" : 4.14 }, { "date" : -2557, "x" : 4.19 }, { "date" : -2526, "x" : 4.16 }, { "date" : -2498, "x" : 4.2 }, { "date" : -2467, "x" : 4.25 }, { "date" : -2437, "x" : 4.26 }, { "date" : -2406, "x" : 4.24 }, { "date" : -2376, "x" : 4.24 }, { "date" : -2345, "x" : 4.28 }, { "date" : -2314, "x" : 4.27 }, { "date" : -2284, "x" : 4.3 }, { "date" : -2253, "x" : 4.29 }, { "date" : -2223, "x" : 4.32 }, { "date" : -2192, "x" : 4.34 }, { "date" : -2161, "x" : 4.35 }, { "date" : -2132, "x" : 4.37 }, { "date" : -2101, "x" : 4.38 }, { "date" : -2071, "x" : 4.39 }, { "date" : -2040, "x" : 4.4 }, { "date" : -2010, "x" : 4.42 }, { "date" : -1979, "x" : 4.4 }, { "date" : -1948, "x" : 4.43 }, { "date" : -1918, "x" : 4.44 }, { "date" : -1887, "x" : 4.44 }, { "date" : -1857, "x" : 4.44 }, { "date" : -1826, "x" : 4.47 }, { "date" : -1795, "x" : 4.47 }, { "date" : -1767, "x" : 4.46 }, { "date" : -1736, "x" : 4.49 }, { "date" : -1706, "x" : 4.48 }, { "date" : -1675, "x" : 4.43 }, { "date" : -1645, "x" : 4.45 }, { "date" : -1614, "x" : 4.47 }, { "date" : -1583, "x" : 4.5 }, { "date" : -1553, "x" : 4.53 }, { "date" : -1522, "x" : 4.52 }, { "date" : -1492, "x" : 4.53 }, { "date" : -1461, "x" : 4.53 }, { "date" : -1430, "x" : 4.51 }, { "date" : -1402, "x" : 4.49 }, { "date" : -1371, "x" : 4.51 }, { "date" : -1341, "x" : 4.46 }, { "date" : -1310, "x" : 4.44 }, { "date" : -1280, "x" : 4.43 }, { "date" : -1249, "x" : 4.35 }, { "date" : -1218, "x" : 4.34 }, { "date" : -1188, "x" : 4.38 }, { "date" : -1157, "x" : 4.39 }, { "date" : -1127, "x" : 4.39 }, { "date" : -1096, "x" : 4.46 }, { "date" : -1065, "x" : 4.46 }, { "date" : -1037, "x" : 4.5 }, { "date" : -1006, "x" : 4.54 }, { "date" : -976, "x" : 4.49 }, { "date" : -945, "x" : 4.51 }, { "date" : -915, "x" : 4.55 }, { "date" : -884, "x" : 4.54 }, { "date" : -853, "x" : 4.57 }, { "date" : -823, "x" : 4.54 }, { "date" : -792, "x" : 4.54 }, { "date" : -762, "x" : 4.57 }, { "date" : -731, "x" : 4.52 }, { "date" : -700, "x" : 4.49 }, { "date" : -671, "x" : 4.5 }, { "date" : -640, "x" : 4.58 }, { "date" : -610, "x" : 4.59 }, { "date" : -579, "x" : 4.6 }, { "date" : -549, "x" : 4.58 }, { "date" : -518, "x" : 4.59 }, { "date" : -487, "x" : 4.63 }, { "date" : -457, "x" : 4.64 }, { "date" : -426, "x" : 4.69 }, { "date" : -396, "x" : 4.64 }, { "date" : -365, "x" : 4.63 }, { "date" : -334, "x" : 4.59 }, { "date" : -306, "x" : 4.62 }, { "date" : -275, "x" : 4.64 }, { "date" : -245, "x" : 4.64 }, { "date" : -214, "x" : 4.58 }, { "date" : -184, "x" : 4.52 }, { "date" : -153, "x" : 4.56 }, { "date" : -122, "x" : 4.53 }, { "date" : -92, "x" : 4.58 }, { "date" : -61, "x" : 4.54 }, { "date" : -31, "x" : 4.52 }, { "date" : 0, "x" : 4.44 }, { "date" : 31, "x" : 4.49 }, { "date" : 59, "x" : 4.5 }, { "date" : 90, "x" : 4.4 }, { "date" : 120, "x" : 4.34 }, { "date" : 151, "x" : 4.29 }, { "date" : 181, "x" : 4.36 }, { "date" : 212, "x" : 4.4 }, { "date" : 243, "x" : 4.43 }, { "date" : 273, "x" : 4.42 }, { "date" : 304, "x" : 4.47 }, { "date" : 334, "x" : 4.52 }, { "date" : 365, "x" : 4.56 }, { "date" : 396, "x" : 4.57 }, { "date" : 424, "x" : 4.61 }, { "date" : 455, "x" : 4.64 }, { "date" : 485, "x" : 4.6 }, { "date" : 516, "x" : 4.59 }, { "date" : 546, "x" : 4.56 }, { "date" : 577, "x" : 4.6 }, { "date" : 608, "x" : 4.59 }, { "date" : 638, "x" : 4.55 }, { "date" : 669, "x" : 4.54 }, { "date" : 699, "x" : 4.63 }, { "date" : 730, "x" : 4.64 }, { "date" : 761, "x" : 4.67 }, { "date" : 790, "x" : 4.67 }, { "date" : 821, "x" : 4.68 }, { "date" : 851, "x" : 4.7 }, { "date" : 882, "x" : 4.67 }, { "date" : 912, "x" : 4.68 }, { "date" : 943, "x" : 4.71 }, { "date" : 974, "x" : 4.71 }, { "date" : 1004, "x" : 4.71 }, { "date" : 1035, "x" : 4.76 }, { "date" : 1065, "x" : 4.77 }, { "date" : 1096, "x" : 4.75 }, { "date" : 1127, "x" : 4.72 }, { "date" : 1155, "x" : 4.71 }, { "date" : 1186, "x" : 4.67 }, { "date" : 1216, "x" : 4.65 }, { "date" : 1247, "x" : 4.65 }, { "date" : 1277, "x" : 4.68 }, { "date" : 1308, "x" : 4.65 }, { "date" : 1339, "x" : 4.69 }, { "date" : 1369, "x" : 4.68 }, { "date" : 1400, "x" : 4.56 }, { "date" : 1430, "x" : 4.58 }, { "date" : 1461, "x" : 4.57 }, { "date" : 1492, "x" : 4.57 }, { "date" : 1520, "x" : 4.54 }, { "date" : 1551, "x" : 4.5 }, { "date" : 1581, "x" : 4.47 }, { "date" : 1612, "x" : 4.45 }, { "date" : 1642, "x" : 4.37 }, { "date" : 1673, "x" : 4.28 }, { "date" : 1704, "x" : 4.15 }, { "date" : 1734, "x" : 4.3 }, { "date" : 1765, "x" : 4.25 }, { "date" : 1795, "x" : 4.23 }, { "date" : 1826, "x" : 4.34 }, { "date" : 1857, "x" : 4.4 }, { "date" : 1885, "x" : 4.42 }, { "date" : 1916, "x" : 4.47 }, { "date" : 1946, "x" : 4.51 }, { "date" : 1977, "x" : 4.56 }, { "date" : 2007, "x" : 4.49 }, { "date" : 2038, "x" : 4.46 }, { "date" : 2069, "x" : 4.43 }, { "date" : 2099, "x" : 4.49 }, { "date" : 2130, "x" : 4.51 }, { "date" : 2160, "x" : 4.5 }, { "date" : 2191, "x" : 4.61 }, { "date" : 2222, "x" : 4.6 }, { "date" : 2251, "x" : 4.63 }, { "date" : 2282, "x" : 4.62 }, { "date" : 2312, "x" : 4.61 }, { "date" : 2343, "x" : 4.65 }, { "date" : 2373, "x" : 4.64 }, { "date" : 2404, "x" : 4.63 }, { "date" : 2435, "x" : 4.66 }, { "date" : 2465, "x" : 4.63 }, { "date" : 2496, "x" : 4.63 }, { "date" : 2526, "x" : 4.68 }, { "date" : 2557, "x" : 4.63 }, { "date" : 2588, "x" : 4.6 }, { "date" : 2616, "x" : 4.59 }, { "date" : 2647, "x" : 4.59 }, { "date" : 2677, "x" : 4.57 }, { "date" : 2708, "x" : 4.61 }, { "date" : 2738, "x" : 4.59 }, { "date" : 2769, "x" : 4.57 }, { "date" : 2800, "x" : 4.57 }, { "date" : 2830, "x" : 4.53 }, { "date" : 2861, "x" : 4.55 }, { "date" : 2891, "x" : 4.55 }, { "date" : 2922, "x" : 4.49 }, { "date" : 2953, "x" : 4.47 }, { "date" : 2981, "x" : 4.49 }, { "date" : 3012, "x" : 4.57 }, { "date" : 3042, "x" : 4.58 }, { "date" : 3073, "x" : 4.56 }, { "date" : 3103, "x" : 4.61 }, { "date" : 3134, "x" : 4.64 }, { "date" : 3165, "x" : 4.63 }, { "date" : 3195, "x" : 4.53 }, { "date" : 3226, "x" : 4.55 }, { "date" : 3256, "x" : 4.57 }, { "date" : 3287, "x" : 4.6 }, { "date" : 3318, "x" : 4.57 }, { "date" : 3346, "x" : 4.62 }, { "date" : 3377, "x" : 4.62 }, { "date" : 3407, "x" : 4.6 }, { "date" : 3438, "x" : 4.63 }, { "date" : 3468, "x" : 4.64 }, { "date" : 3499, "x" : 4.69 }, { "date" : 3530, "x" : 4.69 }, { "date" : 3560, "x" : 4.62 }, { "date" : 3591, "x" : 4.66 }, { "date" : 3621, "x" : 4.68 }, { "date" : 3652, "x" : 4.74 }, { "date" : 3683, "x" : 4.73 }, { "date" : 3712, "x" : 4.63 }, { "date" : 3743, "x" : 4.67 }, { "date" : 3773, "x" : 4.71 }, { "date" : 3804, "x" : 4.74 }, { "date" : 3834, "x" : 4.8 }, { "date" : 3865, "x" : 4.81 }, { "date" : 3896, "x" : 4.83 }, { "date" : 3926, "x" : 4.85 }, { "date" : 3957, "x" : 4.95 }, { "date" : 3987, "x" : 4.91 }, { "date" : 4018, "x" : 4.86 }, { "date" : 4049, "x" : 4.88 }, { "date" : 4077, "x" : 4.91 }, { "date" : 4108, "x" : 4.89 }, { "date" : 4138, "x" : 4.89 }, { "date" : 4169, "x" : 4.88 }, { "date" : 4199, "x" : 4.87 }, { "date" : 4230, "x" : 4.81 }, { "date" : 4261, "x" : 4.76 }, { "date" : 4291, "x" : 4.8 }, { "date" : 4322, "x" : 4.84 }, { "date" : 4352, "x" : 4.81 }, { "date" : 4383, "x" : 4.79 }, { "date" : 4414, "x" : 4.73 }, { "date" : 4442, "x" : 4.72 }, { "date" : 4473, "x" : 4.76 }, { "date" : 4503, "x" : 4.72 }, { "date" : 4534, "x" : 4.7 }, { "date" : 4564, "x" : 4.67 }, { "date" : 4595, "x" : 4.78 }, { "date" : 4626, "x" : 4.79 }, { "date" : 4656, "x" : 4.9 }, { "date" : 4687, "x" : 4.93 }, { "date" : 4717, "x" : 4.95 }, { "date" : 4748, "x" : 4.98 }, { "date" : 4779, "x" : 5 }, { "date" : 4807, "x" : 5.03 }, { "date" : 4838, "x" : 5.1 }, { "date" : 4868, "x" : 5.09 }, { "date" : 4899, "x" : 5.12 }, { "date" : 4929, "x" : 5.09 }, { "date" : 4960, "x" : 5.1 }, { "date" : 4991, "x" : 5.11 }, { "date" : 5021, "x" : 5.1 }, { "date" : 5052, "x" : 5.11 }, { "date" : 5082, "x" : 5.11 }, { "date" : 5113, "x" : 5.1 }, { "date" : 5144, "x" : 5.06 }, { "date" : 5173, "x" : 5.07 }, { "date" : 5204, "x" : 5.08 }, { "date" : 5234, "x" : 5.01 }, { "date" : 5265, "x" : 5.03 }, { "date" : 5295, "x" : 5.02 }, { "date" : 5326, "x" : 5.12 }, { "date" : 5357, "x" : 5.11 }, { "date" : 5387, "x" : 5.11 }, { "date" : 5418, "x" : 5.1 }, { "date" : 5448, "x" : 5.12 }, { "date" : 5479, "x" : 5.19 }, { "date" : 5510, "x" : 5.2 }, { "date" : 5538, "x" : 5.2 }, { "date" : 5569, "x" : 5.19 }, { "date" : 5599, "x" : 5.24 }, { "date" : 5630, "x" : 5.26 }, { "date" : 5660, "x" : 5.25 }, { "date" : 5691, "x" : 5.24 }, { "date" : 5722, "x" : 5.2 }, { "date" : 5752, "x" : 5.25 }, { "date" : 5783, "x" : 5.31 }, { "date" : 5813, "x" : 5.35 }, { "date" : 5844, "x" : 5.36 }, { "date" : 5875, "x" : 5.42 }, { "date" : 5903, "x" : 5.48 }, { "date" : 5934, "x" : 5.46 }, { "date" : 5964, "x" : 5.51 }, { "date" : 5995, "x" : 5.52 }, { "date" : 6025, "x" : 5.46 }, { "date" : 6056, "x" : 5.53 }, { "date" : 6087, "x" : 5.44 }, { "date" : 6117, "x" : 5.5 }, { "date" : 6148, "x" : 5.52 }, { "date" : 6178, "x" : 5.49 }, { "date" : 6209, "x" : 5.61 }, { "date" : 6240, "x" : 5.65 }, { "date" : 6268, "x" : 5.68 }, { "date" : 6299, "x" : 5.66 }, { "date" : 6329, "x" : 5.67 }, { "date" : 6360, "x" : 5.72 }, { "date" : 6390, "x" : 5.76 }, { "date" : 6421, "x" : 5.8 }, { "date" : 6452, "x" : 5.77 }, { "date" : 6482, "x" : 5.53 }, { "date" : 6513, "x" : 5.44 }, { "date" : 6543, "x" : 5.51 }, { "date" : 6574, "x" : 5.55 }, { "date" : 6605, "x" : 5.59 }, { "date" : 6634, "x" : 5.56 }, { "date" : 6665, "x" : 5.57 }, { "date" : 6695, "x" : 5.57 }, { "date" : 6726, "x" : 5.61 }, { "date" : 6756, "x" : 5.61 }, { "date" : 6787, "x" : 5.57 }, { "date" : 6818, "x" : 5.61 }, { "date" : 6848, "x" : 5.63 }, { "date" : 6879, "x" : 5.61 }, { "date" : 6909, "x" : 5.63 }, { "date" : 6940, "x" : 5.7 }, { "date" : 6971, "x" : 5.67 }, { "date" : 6999, "x" : 5.69 }, { "date" : 7030, "x" : 5.74 }, { "date" : 7060, "x" : 5.77 }, { "date" : 7091, "x" : 5.76 }, { "date" : 7121, "x" : 5.85 }, { "date" : 7152, "x" : 5.86 }, { "date" : 7183, "x" : 5.86 }, { "date" : 7213, "x" : 5.83 }, { "date" : 7244, "x" : 5.85 }, { "date" : 7274, "x" : 5.87 }, { "date" : 7305, "x" : 5.8 }, { "date" : 7336, "x" : 5.8 }, { "date" : 7364, "x" : 5.83 }, { "date" : 7395, "x" : 5.8 }, { "date" : 7425, "x" : 5.89 }, { "date" : 7456, "x" : 5.88 }, { "date" : 7486, "x" : 5.88 }, { "date" : 7517, "x" : 5.78 }, { "date" : 7548, "x" : 5.72 }, { "date" : 7578, "x" : 5.72 }, { "date" : 7609, "x" : 5.78 }, { "date" : 7639, "x" : 5.8 }, { "date" : 7670, "x" : 5.84 }, { "date" : 7701, "x" : 5.91 }, { "date" : 7729, "x" : 5.93 }, { "date" : 7760, "x" : 5.93 }, { "date" : 7790, "x" : 5.97 }, { "date" : 7821, "x" : 5.92 }, { "date" : 7851, "x" : 5.96 }, { "date" : 7882, "x" : 5.98 }, { "date" : 7913, "x" : 5.96 }, { "date" : 7943, "x" : 5.97 }, { "date" : 7974, "x" : 5.93 }, { "date" : 8004, "x" : 6.03 }, { "date" : 8035, "x" : 6.01 }, { "date" : 8066, "x" : 6.02 }, { "date" : 8095, "x" : 6 }, { "date" : 8126, "x" : 6.03 }, { "date" : 8156, "x" : 6.03 }, { "date" : 8187, "x" : 6.01 }, { "date" : 8217, "x" : 6.05 }, { "date" : 8248, "x" : 6.03 }, { "date" : 8279, "x" : 6.04 }, { "date" : 8309, "x" : 6.04 }, { "date" : 8340, "x" : 6.07 }, { "date" : 8370, "x" : 6.08 }, { "date" : 8401, "x" : 6.08 }, { "date" : 8432, "x" : 6.09 }, { "date" : 8460, "x" : 6.11 }, { "date" : 8491, "x" : 6.09 }, { "date" : 8521, "x" : 6.11 }, { "date" : 8552, "x" : 6.11 }, { "date" : 8582, "x" : 6.11 }, { "date" : 8613, "x" : 6.14 }, { "date" : 8644, "x" : 6.13 }, { "date" : 8674, "x" : 6.15 }, { "date" : 8705, "x" : 6.14 }, { "date" : 8735, "x" : 6.15 }, { "date" : 8766, "x" : 6.18 }, { "date" : 8797, "x" : 6.15 }, { "date" : 8825, "x" : 6.1 }, { "date" : 8856, "x" : 6.11 }, { "date" : 8886, "x" : 6.12 }, { "date" : 8917, "x" : 6.1 }, { "date" : 8947, "x" : 6.13 }, { "date" : 8978, "x" : 6.16 }, { "date" : 9009, "x" : 6.14 }, { "date" : 9039, "x" : 6.16 }, { "date" : 9070, "x" : 6.12 }, { "date" : 9100, "x" : 6.13 }, { "date" : 9131, "x" : 6.15 }, { "date" : 9162, "x" : 6.19 }, { "date" : 9190, "x" : 6.22 }, { "date" : 9221, "x" : 6.24 }, { "date" : 9251, "x" : 6.28 }, { "date" : 9282, "x" : 6.3 }, { "date" : 9312, "x" : 6.33 }, { "date" : 9343, "x" : 6.33 }, { "date" : 9374, "x" : 6.37 }, { "date" : 9404, "x" : 6.37 }, { "date" : 9435, "x" : 6.41 }, { "date" : 9465, "x" : 6.42 }, { "date" : 9496, "x" : 6.46 }, { "date" : 9527, "x" : 6.46 }, { "date" : 9556, "x" : 6.47 }, { "date" : 9587, "x" : 6.48 }, { "date" : 9617, "x" : 6.51 }, { "date" : 9648, "x" : 6.51 }, { "date" : 9678, "x" : 6.46 }, { "date" : 9709, "x" : 6.48 }, { "date" : 9740, "x" : 6.53 }, { "date" : 9770, "x" : 6.56 }, { "date" : 9801, "x" : 6.63 }, { "date" : 9831, "x" : 6.61 }, { "date" : 9862, "x" : 6.67 }, { "date" : 9893, "x" : 6.67 }, { "date" : 9921, "x" : 6.63 }, { "date" : 9952, "x" : 6.69 }, { "date" : 9982, "x" : 6.74 }, { "date" : 10013, "x" : 6.79 }, { "date" : 10043, "x" : 6.86 }, { "date" : 10074, "x" : 6.8 }, { "date" : 10105, "x" : 6.85 }, { "date" : 10135, "x" : 6.82 }, { "date" : 10166, "x" : 6.86 }, { "date" : 10196, "x" : 6.88 }, { "date" : 10227, "x" : 6.89 }, { "date" : 10258, "x" : 6.96 }, { "date" : 10286, "x" : 7 }, { "date" : 10317, "x" : 7.01 }, { "date" : 10347, "x" : 6.99 }, { "date" : 10378, "x" : 7.03 }, { "date" : 10408, "x" : 7.02 }, { "date" : 10439, "x" : 6.86 }, { "date" : 10470, "x" : 6.92 }, { "date" : 10500, "x" : 7 }, { "date" : 10531, "x" : 7.06 }, { "date" : 10561, "x" : 7.11 }, { "date" : 10592, "x" : 7.15 }, { "date" : 10623, "x" : 7.12 }, { "date" : 10651, "x" : 7.16 }, { "date" : 10682, "x" : 7.2 }, { "date" : 10712, "x" : 7.17 }, { "date" : 10743, "x" : 7.22 }, { "date" : 10773, "x" : 7.19 }, { "date" : 10804, "x" : 7.19 }, { "date" : 10835, "x" : 7.16 }, { "date" : 10865, "x" : 7.22 }, { "date" : 10896, "x" : 7.24 }, { "date" : 10926, "x" : 7.29 }, { "date" : 10957, "x" : 7.24 }, { "date" : 10988, "x" : 7.22 }, { "date" : 11017, "x" : 7.31 }, { "date" : 11048, "x" : 7.28 }, { "date" : 11078, "x" : 7.26 }, { "date" : 11109, "x" : 7.28 }, { "date" : 11139, "x" : 7.27 }, { "date" : 11170, "x" : 7.32 }, { "date" : 11201, "x" : 7.27 }, { "date" : 11231, "x" : 7.27 }, { "date" : 11262, "x" : 7.18 }, { "date" : 11292, "x" : 7.19 }, { "date" : 11323, "x" : 7.22 }, { "date" : 11354, "x" : 7.12 }, { "date" : 11382, "x" : 7.06 }, { "date" : 11413, "x" : 7.13 }, { "date" : 11443, "x" : 7.14 }, { "date" : 11474, "x" : 7.11 }, { "date" : 11504, "x" : 7.1 }, { "date" : 11535, "x" : 7.03 }, { "date" : 11566, "x" : 6.95 }, { "date" : 11596, "x" : 6.97 }, { "date" : 11627, "x" : 7.04 }, { "date" : 11657, "x" : 7.05 }, { "date" : 11688, "x" : 7.03 }, { "date" : 11719, "x" : 7.01 }, { "date" : 11747, "x" : 7.05 }, { "date" : 11778, "x" : 6.98 }, { "date" : 11808, "x" : 6.97 }, { "date" : 11839, "x" : 6.9 }, { "date" : 11869, "x" : 6.82 }, { "date" : 11900, "x" : 6.82 }, { "date" : 11931, "x" : 6.7 }, { "date" : 11961, "x" : 6.79 }, { "date" : 11992, "x" : 6.84 }, { "date" : 12022, "x" : 6.78 }, { "date" : 12053, "x" : 6.75 }, { "date" : 12084, "x" : 6.73 }, { "date" : 12112, "x" : 6.74 }, { "date" : 12143, "x" : 6.82 }, { "date" : 12173, "x" : 6.87 }, { "date" : 12204, "x" : 6.88 }, { "date" : 12234, "x" : 6.9 }, { "date" : 12265, "x" : 6.92 }, { "date" : 12296, "x" : 6.9 }, { "date" : 12326, "x" : 6.96 }, { "date" : 12357, "x" : 6.96 }, { "date" : 12387, "x" : 7.01 }, { "date" : 12418, "x" : 7.03 }, { "date" : 12449, "x" : 7.04 }, { "date" : 12478, "x" : 7.03 }, { "date" : 12509, "x" : 7.01 }, { "date" : 12539, "x" : 7.02 }, { "date" : 12570, "x" : 7.04 }, { "date" : 12600, "x" : 7 }, { "date" : 12631, "x" : 7.01 }, { "date" : 12662, "x" : 7.02 }, { "date" : 12692, "x" : 7.03 }, { "date" : 12723, "x" : 7.07 }, { "date" : 12753, "x" : 7.1 }, { "date" : 12784, "x" : 7.07 }, { "date" : 12815, "x" : 7.09 }, { "date" : 12843, "x" : 7.07 }, { "date" : 12874, "x" : 7.05 }, { "date" : 12904, "x" : 7.08 }, { "date" : 12935, "x" : 7.08 }, { "date" : 12965, "x" : 7.12 }, { "date" : 12996, "x" : 7.11 }, { "date" : 13027, "x" : 7.11 }, { "date" : 13057, "x" : 7.1 }, { "date" : 13088, "x" : 7.13 }, { "date" : 13118, "x" : 7.13 }, { "date" : 13149, "x" : 7.15 }, { "date" : 13180, "x" : 7.16 }, { "date" : 13208, "x" : 7.17 }, { "date" : 13239, "x" : 7.18 }, { "date" : 13269, "x" : 7.15 }, { "date" : 13300, "x" : 7.15 }, { "date" : 13330, "x" : 7.15 }, { "date" : 13361, "x" : 7.17 }, { "date" : 13392, "x" : 7.2 }, { "date" : 13422, "x" : 7.23 }, { "date" : 13453, "x" : 7.24 }, { "date" : 13483, "x" : 7.26 }, { "date" : 13514, "x" : 7.27 }, { "date" : 13545, "x" : 7.25 }, { "date" : 13573, "x" : 7.26 }, { "date" : 13604, "x" : 7.3 }, { "date" : 13634, "x" : 7.33 }, { "date" : 13665, "x" : 7.32 }, { "date" : 13695, "x" : 7.28 }, { "date" : 13726, "x" : 7.3 }, { "date" : 13757, "x" : 7.33 }, { "date" : 13787, "x" : 7.35 }, { "date" : 13818, "x" : 7.3 }, { "date" : 13848, "x" : 7.29 }, { "date" : 13879, "x" : 7.23 }, { "date" : 13910, "x" : 7.19 }, { "date" : 13939, "x" : 7.19 }, { "date" : 13970, "x" : 7.23 }, { "date" : 14000, "x" : 7.24 }, { "date" : 14031, "x" : 7.15 }, { "date" : 14061, "x" : 7.14 }, { "date" : 14092, "x" : 7.16 }, { "date" : 14123, "x" : 7.06 }, { "date" : 14153, "x" : 6.88 }, { "date" : 14184, "x" : 6.8 }, { "date" : 14214, "x" : 6.81 }, { "date" : 14245, "x" : 6.72 }, { "date" : 14276, "x" : 6.6 }, { "date" : 14304, "x" : 6.68 }, { "date" : 14335, "x" : 6.77 }, { "date" : 14365, "x" : 6.82 }, { "date" : 14396, "x" : 6.82 }, { "date" : 14426, "x" : 6.9 }, { "date" : 14457, "x" : 6.93 }, { "date" : 14488, "x" : 6.96 }, { "date" : 14518, "x" : 6.94 }, { "date" : 14549, "x" : 7 }, { "date" : 14579, "x" : 7.02 }, { "date" : 14610, "x" : 6.98 }, { "date" : 14641, "x" : 7.01 }, { "date" : 14669, "x" : 7.06 }, { "date" : 14700, "x" : 7.08 }, { "date" : 14730, "x" : 6.99 }, { "date" : 14761, "x" : 6.94 }, { "date" : 14791, "x" : 7 }, { "date" : 14822, "x" : 6.96 }, { "date" : 14853, "x" : 7.04 }, { "date" : 14883, "x" : 7.08 }, { "date" : 14914, "x" : 7.07 }, { "date" : 14944, "x" : 7.14 }, { "date" : 14975, "x" : 7.16 }, { "date" : 15006, "x" : 7.19 }, { "date" : 15034, "x" : 7.19 }, { "date" : 15065, "x" : 7.22 }, { "date" : 15095, "x" : 7.2 }, { "date" : 15126, "x" : 7.19 }, { "date" : 15156, "x" : 7.16 }, { "date" : 15187, "x" : 7.11 }, { "date" : 15218, "x" : 7.03 }, { "date" : 15248, "x" : 7.13 }, { "date" : 15279, "x" : 7.13 }, { "date" : 15309, "x" : 7.14 }, { "date" : 15340, "x" : 7.18 }, { "date" : 15371, "x" : 7.22 }, { "date" : 15400, "x" : 7.25 }, { "date" : 15431, "x" : 7.24 }, { "date" : 15461, "x" : 7.18 }, { "date" : 15492, "x" : 7.22 }, { "date" : 15522, "x" : 7.23 }, { "date" : 15553, "x" : 7.25 }, { "date" : 15584, "x" : 7.27 }, { "date" : 15614, "x" : 7.25 }, { "date" : 15645, "x" : 7.26 }, { "date" : 15675, "x" : 7.26 }, { "date" : 15706, "x" : 7.31 }, { "date" : 15737, "x" : 7.32 }, { "date" : 15765, "x" : 7.36 }, { "date" : 15796, "x" : 7.38 }, { "date" : 15826, "x" : 7.4 }, { "date" : 15857, "x" : 7.38 }, { "date" : 15887, "x" : 7.43 }, { "date" : 15918, "x" : 7.4 }, { "date" : 15949, "x" : 7.43 }, { "date" : 15979, "x" : 7.47 }, { "date" : 16010, "x" : 7.5 }, { "date" : 16040, "x" : 7.52 }, { "date" : 16071, "x" : 7.49 }, { "date" : 16102, "x" : 7.53 }, { "date" : 16130, "x" : 7.53 } ], "breaks" : [ [ { "date" : -6940, "x" : 2.97 }, { "date" : -4689, "x" : 3.88 } ], [ { "date" : -4658, "x" : 3.8 }, { "date" : -2071, "x" : 4.34 } ], [ { "date" : -2040, "x" : 4.43 }, { "date" : 1520, "x" : 4.66 } ], [ { "date" : 1551, "x" : 4.38 }, { "date" : 4199, "x" : 4.83 } ], [ { "date" : 4230, "x" : 4.69 }, { "date" : 6482, "x" : 5.68 } ], [ { "date" : 6513, "x" : 5.56 }, { "date" : 8797, "x" : 6.19 } ], [ { "date" : 8825, "x" : 6.07 }, { "date" : 11323, "x" : 7.44 } ], [ { "date" : 11354, "x" : 6.87 }, { "date" : 13848, "x" : 7.25 } ], [ { "date" : 13879, "x" : 6.88 }, { "date" : 16130, "x" : 7.41 } ] ] }, "h0.15" : { "line" : [ { "date" : -6940, "x" : 3.08 }, { "date" : -6909, "x" : 3.08 }, { "date" : -6881, "x" : 3.07 }, { "date" : -6850, "x" : 3.11 }, { "date" : -6820, "x" : 3.07 }, { "date" : -6789, "x" : 3.04 }, { "date" : -6759, "x" : 3.11 }, { "date" : -6728, "x" : 3.15 }, { "date" : -6697, "x" : 3.15 }, { "date" : -6667, "x" : 3.13 }, { "date" : -6636, "x" : 3.13 }, { "date" : -6606, "x" : 3.17 }, { "date" : -6575, "x" : 3.18 }, { "date" : -6544, "x" : 3.15 }, { "date" : -6515, "x" : 3.19 }, { "date" : -6484, "x" : 3.15 }, { "date" : -6454, "x" : 3.17 }, { "date" : -6423, "x" : 3.22 }, { "date" : -6393, "x" : 3.23 }, { "date" : -6362, "x" : 3.22 }, { "date" : -6331, "x" : 3.2 }, { "date" : -6301, "x" : 3.2 }, { "date" : -6270, "x" : 3.24 }, { "date" : -6240, "x" : 3.28 }, { "date" : -6209, "x" : 3.27 }, { "date" : -6178, "x" : 3.25 }, { "date" : -6150, "x" : 3.23 }, { "date" : -6119, "x" : 3.2 }, { "date" : -6089, "x" : 3.2 }, { "date" : -6058, "x" : 3.18 }, { "date" : -6028, "x" : 3.21 }, { "date" : -5997, "x" : 3.15 }, { "date" : -5966, "x" : 3.15 }, { "date" : -5936, "x" : 3.2 }, { "date" : -5905, "x" : 3.21 }, { "date" : -5875, "x" : 3.21 }, { "date" : -5844, "x" : 3.26 }, { "date" : -5813, "x" : 3.26 }, { "date" : -5785, "x" : 3.29 }, { "date" : -5754, "x" : 3.34 }, { "date" : -5724, "x" : 3.37 }, { "date" : -5693, "x" : 3.37 }, { "date" : -5663, "x" : 3.43 }, { "date" : -5632, "x" : 3.4 }, { "date" : -5601, "x" : 3.48 }, { "date" : -5571, "x" : 3.46 }, { "date" : -5540, "x" : 3.53 }, { "date" : -5510, "x" : 3.58 }, { "date" : -5479, "x" : 3.6 }, { "date" : -5448, "x" : 3.6 }, { "date" : -5420, "x" : 3.6 }, { "date" : -5389, "x" : 3.64 }, { "date" : -5359, "x" : 3.64 }, { "date" : -5328, "x" : 3.71 }, { "date" : -5298, "x" : 3.77 }, { "date" : -5267, "x" : 3.77 }, { "date" : -5236, "x" : 3.78 }, { "date" : -5206, "x" : 3.75 }, { "date" : -5175, "x" : 3.82 }, { "date" : -5145, "x" : 3.82 }, { "date" : -5114, "x" : 3.78 }, { "date" : -5083, "x" : 3.81 }, { "date" : -5054, "x" : 3.88 }, { "date" : -5023, "x" : 3.88 }, { "date" : -4993, "x" : 3.81 }, { "date" : -4962, "x" : 3.85 }, { "date" : -4932, "x" : 3.9 }, { "date" : -4901, "x" : 3.86 }, { "date" : -4870, "x" : 3.81 }, { "date" : -4840, "x" : 3.82 }, { "date" : -4809, "x" : 3.81 }, { "date" : -4779, "x" : 3.84 }, { "date" : -4748, "x" : 3.8 }, { "date" : -4717, "x" : 3.77 }, { "date" : -4689, "x" : 3.79 }, { "date" : -4658, "x" : 3.82 }, { "date" : -4628, "x" : 3.86 }, { "date" : -4597, "x" : 3.86 }, { "date" : -4567, "x" : 3.87 }, { "date" : -4536, "x" : 3.81 }, { "date" : -4505, "x" : 3.75 }, { "date" : -4475, "x" : 3.72 }, { "date" : -4444, "x" : 3.73 }, { "date" : -4414, "x" : 3.69 }, { "date" : -4383, "x" : 3.73 }, { "date" : -4352, "x" : 3.71 }, { "date" : -4324, "x" : 3.74 }, { "date" : -4293, "x" : 3.77 }, { "date" : -4263, "x" : 3.79 }, { "date" : -4232, "x" : 3.81 }, { "date" : -4202, "x" : 3.85 }, { "date" : -4171, "x" : 3.87 }, { "date" : -4140, "x" : 3.91 }, { "date" : -4110, "x" : 3.94 }, { "date" : -4079, "x" : 3.96 }, { "date" : -4049, "x" : 4.01 }, { "date" : -4018, "x" : 4.02 }, { "date" : -3987, "x" : 4.01 }, { "date" : -3959, "x" : 4.02 }, { "date" : -3928, "x" : 4.05 }, { "date" : -3898, "x" : 4.07 }, { "date" : -3867, "x" : 4.07 }, { "date" : -3837, "x" : 4.1 }, { "date" : -3806, "x" : 4.09 }, { "date" : -3775, "x" : 4.04 }, { "date" : -3745, "x" : 4.05 }, { "date" : -3714, "x" : 4.07 }, { "date" : -3684, "x" : 4.09 }, { "date" : -3653, "x" : 4.02 }, { "date" : -3622, "x" : 4.03 }, { "date" : -3593, "x" : 4.01 }, { "date" : -3562, "x" : 4 }, { "date" : -3532, "x" : 4.02 }, { "date" : -3501, "x" : 4.04 }, { "date" : -3471, "x" : 4.02 }, { "date" : -3440, "x" : 4.04 }, { "date" : -3409, "x" : 3.98 }, { "date" : -3379, "x" : 3.98 }, { "date" : -3348, "x" : 4.02 }, { "date" : -3318, "x" : 4.06 }, { "date" : -3287, "x" : 4.12 }, { "date" : -3256, "x" : 4.15 }, { "date" : -3228, "x" : 4.18 }, { "date" : -3197, "x" : 4.18 }, { "date" : -3167, "x" : 4.2 }, { "date" : -3136, "x" : 4.17 }, { "date" : -3106, "x" : 4.2 }, { "date" : -3075, "x" : 4.22 }, { "date" : -3044, "x" : 4.2 }, { "date" : -3014, "x" : 4.23 }, { "date" : -2983, "x" : 4.27 }, { "date" : -2953, "x" : 4.27 }, { "date" : -2922, "x" : 4.23 }, { "date" : -2891, "x" : 4.25 }, { "date" : -2863, "x" : 4.24 }, { "date" : -2832, "x" : 4.18 }, { "date" : -2802, "x" : 4.09 }, { "date" : -2771, "x" : 4 }, { "date" : -2741, "x" : 4.06 }, { "date" : -2710, "x" : 4.08 }, { "date" : -2679, "x" : 4.03 }, { "date" : -2649, "x" : 4.03 }, { "date" : -2618, "x" : 4.13 }, { "date" : -2588, "x" : 4.14 }, { "date" : -2557, "x" : 4.19 }, { "date" : -2526, "x" : 4.16 }, { "date" : -2498, "x" : 4.2 }, { "date" : -2467, "x" : 4.25 }, { "date" : -2437, "x" : 4.26 }, { "date" : -2406, "x" : 4.24 }, { "date" : -2376, "x" : 4.24 }, { "date" : -2345, "x" : 4.28 }, { "date" : -2314, "x" : 4.27 }, { "date" : -2284, "x" : 4.3 }, { "date" : -2253, "x" : 4.29 }, { "date" : -2223, "x" : 4.32 }, { "date" : -2192, "x" : 4.34 }, { "date" : -2161, "x" : 4.35 }, { "date" : -2132, "x" : 4.37 }, { "date" : -2101, "x" : 4.38 }, { "date" : -2071, "x" : 4.39 }, { "date" : -2040, "x" : 4.4 }, { "date" : -2010, "x" : 4.42 }, { "date" : -1979, "x" : 4.4 }, { "date" : -1948, "x" : 4.43 }, { "date" : -1918, "x" : 4.44 }, { "date" : -1887, "x" : 4.44 }, { "date" : -1857, "x" : 4.44 }, { "date" : -1826, "x" : 4.47 }, { "date" : -1795, "x" : 4.47 }, { "date" : -1767, "x" : 4.46 }, { "date" : -1736, "x" : 4.49 }, { "date" : -1706, "x" : 4.48 }, { "date" : -1675, "x" : 4.43 }, { "date" : -1645, "x" : 4.45 }, { "date" : -1614, "x" : 4.47 }, { "date" : -1583, "x" : 4.5 }, { "date" : -1553, "x" : 4.53 }, { "date" : -1522, "x" : 4.52 }, { "date" : -1492, "x" : 4.53 }, { "date" : -1461, "x" : 4.53 }, { "date" : -1430, "x" : 4.51 }, { "date" : -1402, "x" : 4.49 }, { "date" : -1371, "x" : 4.51 }, { "date" : -1341, "x" : 4.46 }, { "date" : -1310, "x" : 4.44 }, { "date" : -1280, "x" : 4.43 }, { "date" : -1249, "x" : 4.35 }, { "date" : -1218, "x" : 4.34 }, { "date" : -1188, "x" : 4.38 }, { "date" : -1157, "x" : 4.39 }, { "date" : -1127, "x" : 4.39 }, { "date" : -1096, "x" : 4.46 }, { "date" : -1065, "x" : 4.46 }, { "date" : -1037, "x" : 4.5 }, { "date" : -1006, "x" : 4.54 }, { "date" : -976, "x" : 4.49 }, { "date" : -945, "x" : 4.51 }, { "date" : -915, "x" : 4.55 }, { "date" : -884, "x" : 4.54 }, { "date" : -853, "x" : 4.57 }, { "date" : -823, "x" : 4.54 }, { "date" : -792, "x" : 4.54 }, { "date" : -762, "x" : 4.57 }, { "date" : -731, "x" : 4.52 }, { "date" : -700, "x" : 4.49 }, { "date" : -671, "x" : 4.5 }, { "date" : -640, "x" : 4.58 }, { "date" : -610, "x" : 4.59 }, { "date" : -579, "x" : 4.6 }, { "date" : -549, "x" : 4.58 }, { "date" : -518, "x" : 4.59 }, { "date" : -487, "x" : 4.63 }, { "date" : -457, "x" : 4.64 }, { "date" : -426, "x" : 4.69 }, { "date" : -396, "x" : 4.64 }, { "date" : -365, "x" : 4.63 }, { "date" : -334, "x" : 4.59 }, { "date" : -306, "x" : 4.62 }, { "date" : -275, "x" : 4.64 }, { "date" : -245, "x" : 4.64 }, { "date" : -214, "x" : 4.58 }, { "date" : -184, "x" : 4.52 }, { "date" : -153, "x" : 4.56 }, { "date" : -122, "x" : 4.53 }, { "date" : -92, "x" : 4.58 }, { "date" : -61, "x" : 4.54 }, { "date" : -31, "x" : 4.52 }, { "date" : 0, "x" : 4.44 }, { "date" : 31, "x" : 4.49 }, { "date" : 59, "x" : 4.5 }, { "date" : 90, "x" : 4.4 }, { "date" : 120, "x" : 4.34 }, { "date" : 151, "x" : 4.29 }, { "date" : 181, "x" : 4.36 }, { "date" : 212, "x" : 4.4 }, { "date" : 243, "x" : 4.43 }, { "date" : 273, "x" : 4.42 }, { "date" : 304, "x" : 4.47 }, { "date" : 334, "x" : 4.52 }, { "date" : 365, "x" : 4.56 }, { "date" : 396, "x" : 4.57 }, { "date" : 424, "x" : 4.61 }, { "date" : 455, "x" : 4.64 }, { "date" : 485, "x" : 4.6 }, { "date" : 516, "x" : 4.59 }, { "date" : 546, "x" : 4.56 }, { "date" : 577, "x" : 4.6 }, { "date" : 608, "x" : 4.59 }, { "date" : 638, "x" : 4.55 }, { "date" : 669, "x" : 4.54 }, { "date" : 699, "x" : 4.63 }, { "date" : 730, "x" : 4.64 }, { "date" : 761, "x" : 4.67 }, { "date" : 790, "x" : 4.67 }, { "date" : 821, "x" : 4.68 }, { "date" : 851, "x" : 4.7 }, { "date" : 882, "x" : 4.67 }, { "date" : 912, "x" : 4.68 }, { "date" : 943, "x" : 4.71 }, { "date" : 974, "x" : 4.71 }, { "date" : 1004, "x" : 4.71 }, { "date" : 1035, "x" : 4.76 }, { "date" : 1065, "x" : 4.77 }, { "date" : 1096, "x" : 4.75 }, { "date" : 1127, "x" : 4.72 }, { "date" : 1155, "x" : 4.71 }, { "date" : 1186, "x" : 4.67 }, { "date" : 1216, "x" : 4.65 }, { "date" : 1247, "x" : 4.65 }, { "date" : 1277, "x" : 4.68 }, { "date" : 1308, "x" : 4.65 }, { "date" : 1339, "x" : 4.69 }, { "date" : 1369, "x" : 4.68 }, { "date" : 1400, "x" : 4.56 }, { "date" : 1430, "x" : 4.58 }, { "date" : 1461, "x" : 4.57 }, { "date" : 1492, "x" : 4.57 }, { "date" : 1520, "x" : 4.54 }, { "date" : 1551, "x" : 4.5 }, { "date" : 1581, "x" : 4.47 }, { "date" : 1612, "x" : 4.45 }, { "date" : 1642, "x" : 4.37 }, { "date" : 1673, "x" : 4.28 }, { "date" : 1704, "x" : 4.15 }, { "date" : 1734, "x" : 4.3 }, { "date" : 1765, "x" : 4.25 }, { "date" : 1795, "x" : 4.23 }, { "date" : 1826, "x" : 4.34 }, { "date" : 1857, "x" : 4.4 }, { "date" : 1885, "x" : 4.42 }, { "date" : 1916, "x" : 4.47 }, { "date" : 1946, "x" : 4.51 }, { "date" : 1977, "x" : 4.56 }, { "date" : 2007, "x" : 4.49 }, { "date" : 2038, "x" : 4.46 }, { "date" : 2069, "x" : 4.43 }, { "date" : 2099, "x" : 4.49 }, { "date" : 2130, "x" : 4.51 }, { "date" : 2160, "x" : 4.5 }, { "date" : 2191, "x" : 4.61 }, { "date" : 2222, "x" : 4.6 }, { "date" : 2251, "x" : 4.63 }, { "date" : 2282, "x" : 4.62 }, { "date" : 2312, "x" : 4.61 }, { "date" : 2343, "x" : 4.65 }, { "date" : 2373, "x" : 4.64 }, { "date" : 2404, "x" : 4.63 }, { "date" : 2435, "x" : 4.66 }, { "date" : 2465, "x" : 4.63 }, { "date" : 2496, "x" : 4.63 }, { "date" : 2526, "x" : 4.68 }, { "date" : 2557, "x" : 4.63 }, { "date" : 2588, "x" : 4.6 }, { "date" : 2616, "x" : 4.59 }, { "date" : 2647, "x" : 4.59 }, { "date" : 2677, "x" : 4.57 }, { "date" : 2708, "x" : 4.61 }, { "date" : 2738, "x" : 4.59 }, { "date" : 2769, "x" : 4.57 }, { "date" : 2800, "x" : 4.57 }, { "date" : 2830, "x" : 4.53 }, { "date" : 2861, "x" : 4.55 }, { "date" : 2891, "x" : 4.55 }, { "date" : 2922, "x" : 4.49 }, { "date" : 2953, "x" : 4.47 }, { "date" : 2981, "x" : 4.49 }, { "date" : 3012, "x" : 4.57 }, { "date" : 3042, "x" : 4.58 }, { "date" : 3073, "x" : 4.56 }, { "date" : 3103, "x" : 4.61 }, { "date" : 3134, "x" : 4.64 }, { "date" : 3165, "x" : 4.63 }, { "date" : 3195, "x" : 4.53 }, { "date" : 3226, "x" : 4.55 }, { "date" : 3256, "x" : 4.57 }, { "date" : 3287, "x" : 4.6 }, { "date" : 3318, "x" : 4.57 }, { "date" : 3346, "x" : 4.62 }, { "date" : 3377, "x" : 4.62 }, { "date" : 3407, "x" : 4.6 }, { "date" : 3438, "x" : 4.63 }, { "date" : 3468, "x" : 4.64 }, { "date" : 3499, "x" : 4.69 }, { "date" : 3530, "x" : 4.69 }, { "date" : 3560, "x" : 4.62 }, { "date" : 3591, "x" : 4.66 }, { "date" : 3621, "x" : 4.68 }, { "date" : 3652, "x" : 4.74 }, { "date" : 3683, "x" : 4.73 }, { "date" : 3712, "x" : 4.63 }, { "date" : 3743, "x" : 4.67 }, { "date" : 3773, "x" : 4.71 }, { "date" : 3804, "x" : 4.74 }, { "date" : 3834, "x" : 4.8 }, { "date" : 3865, "x" : 4.81 }, { "date" : 3896, "x" : 4.83 }, { "date" : 3926, "x" : 4.85 }, { "date" : 3957, "x" : 4.95 }, { "date" : 3987, "x" : 4.91 }, { "date" : 4018, "x" : 4.86 }, { "date" : 4049, "x" : 4.88 }, { "date" : 4077, "x" : 4.91 }, { "date" : 4108, "x" : 4.89 }, { "date" : 4138, "x" : 4.89 }, { "date" : 4169, "x" : 4.88 }, { "date" : 4199, "x" : 4.87 }, { "date" : 4230, "x" : 4.81 }, { "date" : 4261, "x" : 4.76 }, { "date" : 4291, "x" : 4.8 }, { "date" : 4322, "x" : 4.84 }, { "date" : 4352, "x" : 4.81 }, { "date" : 4383, "x" : 4.79 }, { "date" : 4414, "x" : 4.73 }, { "date" : 4442, "x" : 4.72 }, { "date" : 4473, "x" : 4.76 }, { "date" : 4503, "x" : 4.72 }, { "date" : 4534, "x" : 4.7 }, { "date" : 4564, "x" : 4.67 }, { "date" : 4595, "x" : 4.78 }, { "date" : 4626, "x" : 4.79 }, { "date" : 4656, "x" : 4.9 }, { "date" : 4687, "x" : 4.93 }, { "date" : 4717, "x" : 4.95 }, { "date" : 4748, "x" : 4.98 }, { "date" : 4779, "x" : 5 }, { "date" : 4807, "x" : 5.03 }, { "date" : 4838, "x" : 5.1 }, { "date" : 4868, "x" : 5.09 }, { "date" : 4899, "x" : 5.12 }, { "date" : 4929, "x" : 5.09 }, { "date" : 4960, "x" : 5.1 }, { "date" : 4991, "x" : 5.11 }, { "date" : 5021, "x" : 5.1 }, { "date" : 5052, "x" : 5.11 }, { "date" : 5082, "x" : 5.11 }, { "date" : 5113, "x" : 5.1 }, { "date" : 5144, "x" : 5.06 }, { "date" : 5173, "x" : 5.07 }, { "date" : 5204, "x" : 5.08 }, { "date" : 5234, "x" : 5.01 }, { "date" : 5265, "x" : 5.03 }, { "date" : 5295, "x" : 5.02 }, { "date" : 5326, "x" : 5.12 }, { "date" : 5357, "x" : 5.11 }, { "date" : 5387, "x" : 5.11 }, { "date" : 5418, "x" : 5.1 }, { "date" : 5448, "x" : 5.12 }, { "date" : 5479, "x" : 5.19 }, { "date" : 5510, "x" : 5.2 }, { "date" : 5538, "x" : 5.2 }, { "date" : 5569, "x" : 5.19 }, { "date" : 5599, "x" : 5.24 }, { "date" : 5630, "x" : 5.26 }, { "date" : 5660, "x" : 5.25 }, { "date" : 5691, "x" : 5.24 }, { "date" : 5722, "x" : 5.2 }, { "date" : 5752, "x" : 5.25 }, { "date" : 5783, "x" : 5.31 }, { "date" : 5813, "x" : 5.35 }, { "date" : 5844, "x" : 5.36 }, { "date" : 5875, "x" : 5.42 }, { "date" : 5903, "x" : 5.48 }, { "date" : 5934, "x" : 5.46 }, { "date" : 5964, "x" : 5.51 }, { "date" : 5995, "x" : 5.52 }, { "date" : 6025, "x" : 5.46 }, { "date" : 6056, "x" : 5.53 }, { "date" : 6087, "x" : 5.44 }, { "date" : 6117, "x" : 5.5 }, { "date" : 6148, "x" : 5.52 }, { "date" : 6178, "x" : 5.49 }, { "date" : 6209, "x" : 5.61 }, { "date" : 6240, "x" : 5.65 }, { "date" : 6268, "x" : 5.68 }, { "date" : 6299, "x" : 5.66 }, { "date" : 6329, "x" : 5.67 }, { "date" : 6360, "x" : 5.72 }, { "date" : 6390, "x" : 5.76 }, { "date" : 6421, "x" : 5.8 }, { "date" : 6452, "x" : 5.77 }, { "date" : 6482, "x" : 5.53 }, { "date" : 6513, "x" : 5.44 }, { "date" : 6543, "x" : 5.51 }, { "date" : 6574, "x" : 5.55 }, { "date" : 6605, "x" : 5.59 }, { "date" : 6634, "x" : 5.56 }, { "date" : 6665, "x" : 5.57 }, { "date" : 6695, "x" : 5.57 }, { "date" : 6726, "x" : 5.61 }, { "date" : 6756, "x" : 5.61 }, { "date" : 6787, "x" : 5.57 }, { "date" : 6818, "x" : 5.61 }, { "date" : 6848, "x" : 5.63 }, { "date" : 6879, "x" : 5.61 }, { "date" : 6909, "x" : 5.63 }, { "date" : 6940, "x" : 5.7 }, { "date" : 6971, "x" : 5.67 }, { "date" : 6999, "x" : 5.69 }, { "date" : 7030, "x" : 5.74 }, { "date" : 7060, "x" : 5.77 }, { "date" : 7091, "x" : 5.76 }, { "date" : 7121, "x" : 5.85 }, { "date" : 7152, "x" : 5.86 }, { "date" : 7183, "x" : 5.86 }, { "date" : 7213, "x" : 5.83 }, { "date" : 7244, "x" : 5.85 }, { "date" : 7274, "x" : 5.87 }, { "date" : 7305, "x" : 5.8 }, { "date" : 7336, "x" : 5.8 }, { "date" : 7364, "x" : 5.83 }, { "date" : 7395, "x" : 5.8 }, { "date" : 7425, "x" : 5.89 }, { "date" : 7456, "x" : 5.88 }, { "date" : 7486, "x" : 5.88 }, { "date" : 7517, "x" : 5.78 }, { "date" : 7548, "x" : 5.72 }, { "date" : 7578, "x" : 5.72 }, { "date" : 7609, "x" : 5.78 }, { "date" : 7639, "x" : 5.8 }, { "date" : 7670, "x" : 5.84 }, { "date" : 7701, "x" : 5.91 }, { "date" : 7729, "x" : 5.93 }, { "date" : 7760, "x" : 5.93 }, { "date" : 7790, "x" : 5.97 }, { "date" : 7821, "x" : 5.92 }, { "date" : 7851, "x" : 5.96 }, { "date" : 7882, "x" : 5.98 }, { "date" : 7913, "x" : 5.96 }, { "date" : 7943, "x" : 5.97 }, { "date" : 7974, "x" : 5.93 }, { "date" : 8004, "x" : 6.03 }, { "date" : 8035, "x" : 6.01 }, { "date" : 8066, "x" : 6.02 }, { "date" : 8095, "x" : 6 }, { "date" : 8126, "x" : 6.03 }, { "date" : 8156, "x" : 6.03 }, { "date" : 8187, "x" : 6.01 }, { "date" : 8217, "x" : 6.05 }, { "date" : 8248, "x" : 6.03 }, { "date" : 8279, "x" : 6.04 }, { "date" : 8309, "x" : 6.04 }, { "date" : 8340, "x" : 6.07 }, { "date" : 8370, "x" : 6.08 }, { "date" : 8401, "x" : 6.08 }, { "date" : 8432, "x" : 6.09 }, { "date" : 8460, "x" : 6.11 }, { "date" : 8491, "x" : 6.09 }, { "date" : 8521, "x" : 6.11 }, { "date" : 8552, "x" : 6.11 }, { "date" : 8582, "x" : 6.11 }, { "date" : 8613, "x" : 6.14 }, { "date" : 8644, "x" : 6.13 }, { "date" : 8674, "x" : 6.15 }, { "date" : 8705, "x" : 6.14 }, { "date" : 8735, "x" : 6.15 }, { "date" : 8766, "x" : 6.18 }, { "date" : 8797, "x" : 6.15 }, { "date" : 8825, "x" : 6.1 }, { "date" : 8856, "x" : 6.11 }, { "date" : 8886, "x" : 6.12 }, { "date" : 8917, "x" : 6.1 }, { "date" : 8947, "x" : 6.13 }, { "date" : 8978, "x" : 6.16 }, { "date" : 9009, "x" : 6.14 }, { "date" : 9039, "x" : 6.16 }, { "date" : 9070, "x" : 6.12 }, { "date" : 9100, "x" : 6.13 }, { "date" : 9131, "x" : 6.15 }, { "date" : 9162, "x" : 6.19 }, { "date" : 9190, "x" : 6.22 }, { "date" : 9221, "x" : 6.24 }, { "date" : 9251, "x" : 6.28 }, { "date" : 9282, "x" : 6.3 }, { "date" : 9312, "x" : 6.33 }, { "date" : 9343, "x" : 6.33 }, { "date" : 9374, "x" : 6.37 }, { "date" : 9404, "x" : 6.37 }, { "date" : 9435, "x" : 6.41 }, { "date" : 9465, "x" : 6.42 }, { "date" : 9496, "x" : 6.46 }, { "date" : 9527, "x" : 6.46 }, { "date" : 9556, "x" : 6.47 }, { "date" : 9587, "x" : 6.48 }, { "date" : 9617, "x" : 6.51 }, { "date" : 9648, "x" : 6.51 }, { "date" : 9678, "x" : 6.46 }, { "date" : 9709, "x" : 6.48 }, { "date" : 9740, "x" : 6.53 }, { "date" : 9770, "x" : 6.56 }, { "date" : 9801, "x" : 6.63 }, { "date" : 9831, "x" : 6.61 }, { "date" : 9862, "x" : 6.67 }, { "date" : 9893, "x" : 6.67 }, { "date" : 9921, "x" : 6.63 }, { "date" : 9952, "x" : 6.69 }, { "date" : 9982, "x" : 6.74 }, { "date" : 10013, "x" : 6.79 }, { "date" : 10043, "x" : 6.86 }, { "date" : 10074, "x" : 6.8 }, { "date" : 10105, "x" : 6.85 }, { "date" : 10135, "x" : 6.82 }, { "date" : 10166, "x" : 6.86 }, { "date" : 10196, "x" : 6.88 }, { "date" : 10227, "x" : 6.89 }, { "date" : 10258, "x" : 6.96 }, { "date" : 10286, "x" : 7 }, { "date" : 10317, "x" : 7.01 }, { "date" : 10347, "x" : 6.99 }, { "date" : 10378, "x" : 7.03 }, { "date" : 10408, "x" : 7.02 }, { "date" : 10439, "x" : 6.86 }, { "date" : 10470, "x" : 6.92 }, { "date" : 10500, "x" : 7 }, { "date" : 10531, "x" : 7.06 }, { "date" : 10561, "x" : 7.11 }, { "date" : 10592, "x" : 7.15 }, { "date" : 10623, "x" : 7.12 }, { "date" : 10651, "x" : 7.16 }, { "date" : 10682, "x" : 7.2 }, { "date" : 10712, "x" : 7.17 }, { "date" : 10743, "x" : 7.22 }, { "date" : 10773, "x" : 7.19 }, { "date" : 10804, "x" : 7.19 }, { "date" : 10835, "x" : 7.16 }, { "date" : 10865, "x" : 7.22 }, { "date" : 10896, "x" : 7.24 }, { "date" : 10926, "x" : 7.29 }, { "date" : 10957, "x" : 7.24 }, { "date" : 10988, "x" : 7.22 }, { "date" : 11017, "x" : 7.31 }, { "date" : 11048, "x" : 7.28 }, { "date" : 11078, "x" : 7.26 }, { "date" : 11109, "x" : 7.28 }, { "date" : 11139, "x" : 7.27 }, { "date" : 11170, "x" : 7.32 }, { "date" : 11201, "x" : 7.27 }, { "date" : 11231, "x" : 7.27 }, { "date" : 11262, "x" : 7.18 }, { "date" : 11292, "x" : 7.19 }, { "date" : 11323, "x" : 7.22 }, { "date" : 11354, "x" : 7.12 }, { "date" : 11382, "x" : 7.06 }, { "date" : 11413, "x" : 7.13 }, { "date" : 11443, "x" : 7.14 }, { "date" : 11474, "x" : 7.11 }, { "date" : 11504, "x" : 7.1 }, { "date" : 11535, "x" : 7.03 }, { "date" : 11566, "x" : 6.95 }, { "date" : 11596, "x" : 6.97 }, { "date" : 11627, "x" : 7.04 }, { "date" : 11657, "x" : 7.05 }, { "date" : 11688, "x" : 7.03 }, { "date" : 11719, "x" : 7.01 }, { "date" : 11747, "x" : 7.05 }, { "date" : 11778, "x" : 6.98 }, { "date" : 11808, "x" : 6.97 }, { "date" : 11839, "x" : 6.9 }, { "date" : 11869, "x" : 6.82 }, { "date" : 11900, "x" : 6.82 }, { "date" : 11931, "x" : 6.7 }, { "date" : 11961, "x" : 6.79 }, { "date" : 11992, "x" : 6.84 }, { "date" : 12022, "x" : 6.78 }, { "date" : 12053, "x" : 6.75 }, { "date" : 12084, "x" : 6.73 }, { "date" : 12112, "x" : 6.74 }, { "date" : 12143, "x" : 6.82 }, { "date" : 12173, "x" : 6.87 }, { "date" : 12204, "x" : 6.88 }, { "date" : 12234, "x" : 6.9 }, { "date" : 12265, "x" : 6.92 }, { "date" : 12296, "x" : 6.9 }, { "date" : 12326, "x" : 6.96 }, { "date" : 12357, "x" : 6.96 }, { "date" : 12387, "x" : 7.01 }, { "date" : 12418, "x" : 7.03 }, { "date" : 12449, "x" : 7.04 }, { "date" : 12478, "x" : 7.03 }, { "date" : 12509, "x" : 7.01 }, { "date" : 12539, "x" : 7.02 }, { "date" : 12570, "x" : 7.04 }, { "date" : 12600, "x" : 7 }, { "date" : 12631, "x" : 7.01 }, { "date" : 12662, "x" : 7.02 }, { "date" : 12692, "x" : 7.03 }, { "date" : 12723, "x" : 7.07 }, { "date" : 12753, "x" : 7.1 }, { "date" : 12784, "x" : 7.07 }, { "date" : 12815, "x" : 7.09 }, { "date" : 12843, "x" : 7.07 }, { "date" : 12874, "x" : 7.05 }, { "date" : 12904, "x" : 7.08 }, { "date" : 12935, "x" : 7.08 }, { "date" : 12965, "x" : 7.12 }, { "date" : 12996, "x" : 7.11 }, { "date" : 13027, "x" : 7.11 }, { "date" : 13057, "x" : 7.1 }, { "date" : 13088, "x" : 7.13 }, { "date" : 13118, "x" : 7.13 }, { "date" : 13149, "x" : 7.15 }, { "date" : 13180, "x" : 7.16 }, { "date" : 13208, "x" : 7.17 }, { "date" : 13239, "x" : 7.18 }, { "date" : 13269, "x" : 7.15 }, { "date" : 13300, "x" : 7.15 }, { "date" : 13330, "x" : 7.15 }, { "date" : 13361, "x" : 7.17 }, { "date" : 13392, "x" : 7.2 }, { "date" : 13422, "x" : 7.23 }, { "date" : 13453, "x" : 7.24 }, { "date" : 13483, "x" : 7.26 }, { "date" : 13514, "x" : 7.27 }, { "date" : 13545, "x" : 7.25 }, { "date" : 13573, "x" : 7.26 }, { "date" : 13604, "x" : 7.3 }, { "date" : 13634, "x" : 7.33 }, { "date" : 13665, "x" : 7.32 }, { "date" : 13695, "x" : 7.28 }, { "date" : 13726, "x" : 7.3 }, { "date" : 13757, "x" : 7.33 }, { "date" : 13787, "x" : 7.35 }, { "date" : 13818, "x" : 7.3 }, { "date" : 13848, "x" : 7.29 }, { "date" : 13879, "x" : 7.23 }, { "date" : 13910, "x" : 7.19 }, { "date" : 13939, "x" : 7.19 }, { "date" : 13970, "x" : 7.23 }, { "date" : 14000, "x" : 7.24 }, { "date" : 14031, "x" : 7.15 }, { "date" : 14061, "x" : 7.14 }, { "date" : 14092, "x" : 7.16 }, { "date" : 14123, "x" : 7.06 }, { "date" : 14153, "x" : 6.88 }, { "date" : 14184, "x" : 6.8 }, { "date" : 14214, "x" : 6.81 }, { "date" : 14245, "x" : 6.72 }, { "date" : 14276, "x" : 6.6 }, { "date" : 14304, "x" : 6.68 }, { "date" : 14335, "x" : 6.77 }, { "date" : 14365, "x" : 6.82 }, { "date" : 14396, "x" : 6.82 }, { "date" : 14426, "x" : 6.9 }, { "date" : 14457, "x" : 6.93 }, { "date" : 14488, "x" : 6.96 }, { "date" : 14518, "x" : 6.94 }, { "date" : 14549, "x" : 7 }, { "date" : 14579, "x" : 7.02 }, { "date" : 14610, "x" : 6.98 }, { "date" : 14641, "x" : 7.01 }, { "date" : 14669, "x" : 7.06 }, { "date" : 14700, "x" : 7.08 }, { "date" : 14730, "x" : 6.99 }, { "date" : 14761, "x" : 6.94 }, { "date" : 14791, "x" : 7 }, { "date" : 14822, "x" : 6.96 }, { "date" : 14853, "x" : 7.04 }, { "date" : 14883, "x" : 7.08 }, { "date" : 14914, "x" : 7.07 }, { "date" : 14944, "x" : 7.14 }, { "date" : 14975, "x" : 7.16 }, { "date" : 15006, "x" : 7.19 }, { "date" : 15034, "x" : 7.19 }, { "date" : 15065, "x" : 7.22 }, { "date" : 15095, "x" : 7.2 }, { "date" : 15126, "x" : 7.19 }, { "date" : 15156, "x" : 7.16 }, { "date" : 15187, "x" : 7.11 }, { "date" : 15218, "x" : 7.03 }, { "date" : 15248, "x" : 7.13 }, { "date" : 15279, "x" : 7.13 }, { "date" : 15309, "x" : 7.14 }, { "date" : 15340, "x" : 7.18 }, { "date" : 15371, "x" : 7.22 }, { "date" : 15400, "x" : 7.25 }, { "date" : 15431, "x" : 7.24 }, { "date" : 15461, "x" : 7.18 }, { "date" : 15492, "x" : 7.22 }, { "date" : 15522, "x" : 7.23 }, { "date" : 15553, "x" : 7.25 }, { "date" : 15584, "x" : 7.27 }, { "date" : 15614, "x" : 7.25 }, { "date" : 15645, "x" : 7.26 }, { "date" : 15675, "x" : 7.26 }, { "date" : 15706, "x" : 7.31 }, { "date" : 15737, "x" : 7.32 }, { "date" : 15765, "x" : 7.36 }, { "date" : 15796, "x" : 7.38 }, { "date" : 15826, "x" : 7.4 }, { "date" : 15857, "x" : 7.38 }, { "date" : 15887, "x" : 7.43 }, { "date" : 15918, "x" : 7.4 }, { "date" : 15949, "x" : 7.43 }, { "date" : 15979, "x" : 7.47 }, { "date" : 16010, "x" : 7.5 }, { "date" : 16040, "x" : 7.52 }, { "date" : 16071, "x" : 7.49 }, { "date" : 16102, "x" : 7.53 }, { "date" : 16130, "x" : 7.53 } ], "breaks" : [ [ { "date" : -6940, "x" : 3.04 }, { "date" : -3532, "x" : 4.14 } ], [ { "date" : -3501, "x" : 4.08 }, { "date" : -92, "x" : 4.67 } ], [ { "date" : -61, "x" : 4.54 }, { "date" : 3346, "x" : 4.57 } ], [ { "date" : 3377, "x" : 4.58 }, { "date" : 7913, "x" : 5.99 } ], [ { "date" : 7943, "x" : 5.81 }, { "date" : 11354, "x" : 7.36 } ], [ { "date" : 11382, "x" : 6.92 }, { "date" : 16130, "x" : 7.28 } ] ] }, "h0.2" : { "line" : [ { "date" : -6940, "x" : 3.08 }, { "date" : -6909, "x" : 3.08 }, { "date" : -6881, "x" : 3.07 }, { "date" : -6850, "x" : 3.11 }, { "date" : -6820, "x" : 3.07 }, { "date" : -6789, "x" : 3.04 }, { "date" : -6759, "x" : 3.11 }, { "date" : -6728, "x" : 3.15 }, { "date" : -6697, "x" : 3.15 }, { "date" : -6667, "x" : 3.13 }, { "date" : -6636, "x" : 3.13 }, { "date" : -6606, "x" : 3.17 }, { "date" : -6575, "x" : 3.18 }, { "date" : -6544, "x" : 3.15 }, { "date" : -6515, "x" : 3.19 }, { "date" : -6484, "x" : 3.15 }, { "date" : -6454, "x" : 3.17 }, { "date" : -6423, "x" : 3.22 }, { "date" : -6393, "x" : 3.23 }, { "date" : -6362, "x" : 3.22 }, { "date" : -6331, "x" : 3.2 }, { "date" : -6301, "x" : 3.2 }, { "date" : -6270, "x" : 3.24 }, { "date" : -6240, "x" : 3.28 }, { "date" : -6209, "x" : 3.27 }, { "date" : -6178, "x" : 3.25 }, { "date" : -6150, "x" : 3.23 }, { "date" : -6119, "x" : 3.2 }, { "date" : -6089, "x" : 3.2 }, { "date" : -6058, "x" : 3.18 }, { "date" : -6028, "x" : 3.21 }, { "date" : -5997, "x" : 3.15 }, { "date" : -5966, "x" : 3.15 }, { "date" : -5936, "x" : 3.2 }, { "date" : -5905, "x" : 3.21 }, { "date" : -5875, "x" : 3.21 }, { "date" : -5844, "x" : 3.26 }, { "date" : -5813, "x" : 3.26 }, { "date" : -5785, "x" : 3.29 }, { "date" : -5754, "x" : 3.34 }, { "date" : -5724, "x" : 3.37 }, { "date" : -5693, "x" : 3.37 }, { "date" : -5663, "x" : 3.43 }, { "date" : -5632, "x" : 3.4 }, { "date" : -5601, "x" : 3.48 }, { "date" : -5571, "x" : 3.46 }, { "date" : -5540, "x" : 3.53 }, { "date" : -5510, "x" : 3.58 }, { "date" : -5479, "x" : 3.6 }, { "date" : -5448, "x" : 3.6 }, { "date" : -5420, "x" : 3.6 }, { "date" : -5389, "x" : 3.64 }, { "date" : -5359, "x" : 3.64 }, { "date" : -5328, "x" : 3.71 }, { "date" : -5298, "x" : 3.77 }, { "date" : -5267, "x" : 3.77 }, { "date" : -5236, "x" : 3.78 }, { "date" : -5206, "x" : 3.75 }, { "date" : -5175, "x" : 3.82 }, { "date" : -5145, "x" : 3.82 }, { "date" : -5114, "x" : 3.78 }, { "date" : -5083, "x" : 3.81 }, { "date" : -5054, "x" : 3.88 }, { "date" : -5023, "x" : 3.88 }, { "date" : -4993, "x" : 3.81 }, { "date" : -4962, "x" : 3.85 }, { "date" : -4932, "x" : 3.9 }, { "date" : -4901, "x" : 3.86 }, { "date" : -4870, "x" : 3.81 }, { "date" : -4840, "x" : 3.82 }, { "date" : -4809, "x" : 3.81 }, { "date" : -4779, "x" : 3.84 }, { "date" : -4748, "x" : 3.8 }, { "date" : -4717, "x" : 3.77 }, { "date" : -4689, "x" : 3.79 }, { "date" : -4658, "x" : 3.82 }, { "date" : -4628, "x" : 3.86 }, { "date" : -4597, "x" : 3.86 }, { "date" : -4567, "x" : 3.87 }, { "date" : -4536, "x" : 3.81 }, { "date" : -4505, "x" : 3.75 }, { "date" : -4475, "x" : 3.72 }, { "date" : -4444, "x" : 3.73 }, { "date" : -4414, "x" : 3.69 }, { "date" : -4383, "x" : 3.73 }, { "date" : -4352, "x" : 3.71 }, { "date" : -4324, "x" : 3.74 }, { "date" : -4293, "x" : 3.77 }, { "date" : -4263, "x" : 3.79 }, { "date" : -4232, "x" : 3.81 }, { "date" : -4202, "x" : 3.85 }, { "date" : -4171, "x" : 3.87 }, { "date" : -4140, "x" : 3.91 }, { "date" : -4110, "x" : 3.94 }, { "date" : -4079, "x" : 3.96 }, { "date" : -4049, "x" : 4.01 }, { "date" : -4018, "x" : 4.02 }, { "date" : -3987, "x" : 4.01 }, { "date" : -3959, "x" : 4.02 }, { "date" : -3928, "x" : 4.05 }, { "date" : -3898, "x" : 4.07 }, { "date" : -3867, "x" : 4.07 }, { "date" : -3837, "x" : 4.1 }, { "date" : -3806, "x" : 4.09 }, { "date" : -3775, "x" : 4.04 }, { "date" : -3745, "x" : 4.05 }, { "date" : -3714, "x" : 4.07 }, { "date" : -3684, "x" : 4.09 }, { "date" : -3653, "x" : 4.02 }, { "date" : -3622, "x" : 4.03 }, { "date" : -3593, "x" : 4.01 }, { "date" : -3562, "x" : 4 }, { "date" : -3532, "x" : 4.02 }, { "date" : -3501, "x" : 4.04 }, { "date" : -3471, "x" : 4.02 }, { "date" : -3440, "x" : 4.04 }, { "date" : -3409, "x" : 3.98 }, { "date" : -3379, "x" : 3.98 }, { "date" : -3348, "x" : 4.02 }, { "date" : -3318, "x" : 4.06 }, { "date" : -3287, "x" : 4.12 }, { "date" : -3256, "x" : 4.15 }, { "date" : -3228, "x" : 4.18 }, { "date" : -3197, "x" : 4.18 }, { "date" : -3167, "x" : 4.2 }, { "date" : -3136, "x" : 4.17 }, { "date" : -3106, "x" : 4.2 }, { "date" : -3075, "x" : 4.22 }, { "date" : -3044, "x" : 4.2 }, { "date" : -3014, "x" : 4.23 }, { "date" : -2983, "x" : 4.27 }, { "date" : -2953, "x" : 4.27 }, { "date" : -2922, "x" : 4.23 }, { "date" : -2891, "x" : 4.25 }, { "date" : -2863, "x" : 4.24 }, { "date" : -2832, "x" : 4.18 }, { "date" : -2802, "x" : 4.09 }, { "date" : -2771, "x" : 4 }, { "date" : -2741, "x" : 4.06 }, { "date" : -2710, "x" : 4.08 }, { "date" : -2679, "x" : 4.03 }, { "date" : -2649, "x" : 4.03 }, { "date" : -2618, "x" : 4.13 }, { "date" : -2588, "x" : 4.14 }, { "date" : -2557, "x" : 4.19 }, { "date" : -2526, "x" : 4.16 }, { "date" : -2498, "x" : 4.2 }, { "date" : -2467, "x" : 4.25 }, { "date" : -2437, "x" : 4.26 }, { "date" : -2406, "x" : 4.24 }, { "date" : -2376, "x" : 4.24 }, { "date" : -2345, "x" : 4.28 }, { "date" : -2314, "x" : 4.27 }, { "date" : -2284, "x" : 4.3 }, { "date" : -2253, "x" : 4.29 }, { "date" : -2223, "x" : 4.32 }, { "date" : -2192, "x" : 4.34 }, { "date" : -2161, "x" : 4.35 }, { "date" : -2132, "x" : 4.37 }, { "date" : -2101, "x" : 4.38 }, { "date" : -2071, "x" : 4.39 }, { "date" : -2040, "x" : 4.4 }, { "date" : -2010, "x" : 4.42 }, { "date" : -1979, "x" : 4.4 }, { "date" : -1948, "x" : 4.43 }, { "date" : -1918, "x" : 4.44 }, { "date" : -1887, "x" : 4.44 }, { "date" : -1857, "x" : 4.44 }, { "date" : -1826, "x" : 4.47 }, { "date" : -1795, "x" : 4.47 }, { "date" : -1767, "x" : 4.46 }, { "date" : -1736, "x" : 4.49 }, { "date" : -1706, "x" : 4.48 }, { "date" : -1675, "x" : 4.43 }, { "date" : -1645, "x" : 4.45 }, { "date" : -1614, "x" : 4.47 }, { "date" : -1583, "x" : 4.5 }, { "date" : -1553, "x" : 4.53 }, { "date" : -1522, "x" : 4.52 }, { "date" : -1492, "x" : 4.53 }, { "date" : -1461, "x" : 4.53 }, { "date" : -1430, "x" : 4.51 }, { "date" : -1402, "x" : 4.49 }, { "date" : -1371, "x" : 4.51 }, { "date" : -1341, "x" : 4.46 }, { "date" : -1310, "x" : 4.44 }, { "date" : -1280, "x" : 4.43 }, { "date" : -1249, "x" : 4.35 }, { "date" : -1218, "x" : 4.34 }, { "date" : -1188, "x" : 4.38 }, { "date" : -1157, "x" : 4.39 }, { "date" : -1127, "x" : 4.39 }, { "date" : -1096, "x" : 4.46 }, { "date" : -1065, "x" : 4.46 }, { "date" : -1037, "x" : 4.5 }, { "date" : -1006, "x" : 4.54 }, { "date" : -976, "x" : 4.49 }, { "date" : -945, "x" : 4.51 }, { "date" : -915, "x" : 4.55 }, { "date" : -884, "x" : 4.54 }, { "date" : -853, "x" : 4.57 }, { "date" : -823, "x" : 4.54 }, { "date" : -792, "x" : 4.54 }, { "date" : -762, "x" : 4.57 }, { "date" : -731, "x" : 4.52 }, { "date" : -700, "x" : 4.49 }, { "date" : -671, "x" : 4.5 }, { "date" : -640, "x" : 4.58 }, { "date" : -610, "x" : 4.59 }, { "date" : -579, "x" : 4.6 }, { "date" : -549, "x" : 4.58 }, { "date" : -518, "x" : 4.59 }, { "date" : -487, "x" : 4.63 }, { "date" : -457, "x" : 4.64 }, { "date" : -426, "x" : 4.69 }, { "date" : -396, "x" : 4.64 }, { "date" : -365, "x" : 4.63 }, { "date" : -334, "x" : 4.59 }, { "date" : -306, "x" : 4.62 }, { "date" : -275, "x" : 4.64 }, { "date" : -245, "x" : 4.64 }, { "date" : -214, "x" : 4.58 }, { "date" : -184, "x" : 4.52 }, { "date" : -153, "x" : 4.56 }, { "date" : -122, "x" : 4.53 }, { "date" : -92, "x" : 4.58 }, { "date" : -61, "x" : 4.54 }, { "date" : -31, "x" : 4.52 }, { "date" : 0, "x" : 4.44 }, { "date" : 31, "x" : 4.49 }, { "date" : 59, "x" : 4.5 }, { "date" : 90, "x" : 4.4 }, { "date" : 120, "x" : 4.34 }, { "date" : 151, "x" : 4.29 }, { "date" : 181, "x" : 4.36 }, { "date" : 212, "x" : 4.4 }, { "date" : 243, "x" : 4.43 }, { "date" : 273, "x" : 4.42 }, { "date" : 304, "x" : 4.47 }, { "date" : 334, "x" : 4.52 }, { "date" : 365, "x" : 4.56 }, { "date" : 396, "x" : 4.57 }, { "date" : 424, "x" : 4.61 }, { "date" : 455, "x" : 4.64 }, { "date" : 485, "x" : 4.6 }, { "date" : 516, "x" : 4.59 }, { "date" : 546, "x" : 4.56 }, { "date" : 577, "x" : 4.6 }, { "date" : 608, "x" : 4.59 }, { "date" : 638, "x" : 4.55 }, { "date" : 669, "x" : 4.54 }, { "date" : 699, "x" : 4.63 }, { "date" : 730, "x" : 4.64 }, { "date" : 761, "x" : 4.67 }, { "date" : 790, "x" : 4.67 }, { "date" : 821, "x" : 4.68 }, { "date" : 851, "x" : 4.7 }, { "date" : 882, "x" : 4.67 }, { "date" : 912, "x" : 4.68 }, { "date" : 943, "x" : 4.71 }, { "date" : 974, "x" : 4.71 }, { "date" : 1004, "x" : 4.71 }, { "date" : 1035, "x" : 4.76 }, { "date" : 1065, "x" : 4.77 }, { "date" : 1096, "x" : 4.75 }, { "date" : 1127, "x" : 4.72 }, { "date" : 1155, "x" : 4.71 }, { "date" : 1186, "x" : 4.67 }, { "date" : 1216, "x" : 4.65 }, { "date" : 1247, "x" : 4.65 }, { "date" : 1277, "x" : 4.68 }, { "date" : 1308, "x" : 4.65 }, { "date" : 1339, "x" : 4.69 }, { "date" : 1369, "x" : 4.68 }, { "date" : 1400, "x" : 4.56 }, { "date" : 1430, "x" : 4.58 }, { "date" : 1461, "x" : 4.57 }, { "date" : 1492, "x" : 4.57 }, { "date" : 1520, "x" : 4.54 }, { "date" : 1551, "x" : 4.5 }, { "date" : 1581, "x" : 4.47 }, { "date" : 1612, "x" : 4.45 }, { "date" : 1642, "x" : 4.37 }, { "date" : 1673, "x" : 4.28 }, { "date" : 1704, "x" : 4.15 }, { "date" : 1734, "x" : 4.3 }, { "date" : 1765, "x" : 4.25 }, { "date" : 1795, "x" : 4.23 }, { "date" : 1826, "x" : 4.34 }, { "date" : 1857, "x" : 4.4 }, { "date" : 1885, "x" : 4.42 }, { "date" : 1916, "x" : 4.47 }, { "date" : 1946, "x" : 4.51 }, { "date" : 1977, "x" : 4.56 }, { "date" : 2007, "x" : 4.49 }, { "date" : 2038, "x" : 4.46 }, { "date" : 2069, "x" : 4.43 }, { "date" : 2099, "x" : 4.49 }, { "date" : 2130, "x" : 4.51 }, { "date" : 2160, "x" : 4.5 }, { "date" : 2191, "x" : 4.61 }, { "date" : 2222, "x" : 4.6 }, { "date" : 2251, "x" : 4.63 }, { "date" : 2282, "x" : 4.62 }, { "date" : 2312, "x" : 4.61 }, { "date" : 2343, "x" : 4.65 }, { "date" : 2373, "x" : 4.64 }, { "date" : 2404, "x" : 4.63 }, { "date" : 2435, "x" : 4.66 }, { "date" : 2465, "x" : 4.63 }, { "date" : 2496, "x" : 4.63 }, { "date" : 2526, "x" : 4.68 }, { "date" : 2557, "x" : 4.63 }, { "date" : 2588, "x" : 4.6 }, { "date" : 2616, "x" : 4.59 }, { "date" : 2647, "x" : 4.59 }, { "date" : 2677, "x" : 4.57 }, { "date" : 2708, "x" : 4.61 }, { "date" : 2738, "x" : 4.59 }, { "date" : 2769, "x" : 4.57 }, { "date" : 2800, "x" : 4.57 }, { "date" : 2830, "x" : 4.53 }, { "date" : 2861, "x" : 4.55 }, { "date" : 2891, "x" : 4.55 }, { "date" : 2922, "x" : 4.49 }, { "date" : 2953, "x" : 4.47 }, { "date" : 2981, "x" : 4.49 }, { "date" : 3012, "x" : 4.57 }, { "date" : 3042, "x" : 4.58 }, { "date" : 3073, "x" : 4.56 }, { "date" : 3103, "x" : 4.61 }, { "date" : 3134, "x" : 4.64 }, { "date" : 3165, "x" : 4.63 }, { "date" : 3195, "x" : 4.53 }, { "date" : 3226, "x" : 4.55 }, { "date" : 3256, "x" : 4.57 }, { "date" : 3287, "x" : 4.6 }, { "date" : 3318, "x" : 4.57 }, { "date" : 3346, "x" : 4.62 }, { "date" : 3377, "x" : 4.62 }, { "date" : 3407, "x" : 4.6 }, { "date" : 3438, "x" : 4.63 }, { "date" : 3468, "x" : 4.64 }, { "date" : 3499, "x" : 4.69 }, { "date" : 3530, "x" : 4.69 }, { "date" : 3560, "x" : 4.62 }, { "date" : 3591, "x" : 4.66 }, { "date" : 3621, "x" : 4.68 }, { "date" : 3652, "x" : 4.74 }, { "date" : 3683, "x" : 4.73 }, { "date" : 3712, "x" : 4.63 }, { "date" : 3743, "x" : 4.67 }, { "date" : 3773, "x" : 4.71 }, { "date" : 3804, "x" : 4.74 }, { "date" : 3834, "x" : 4.8 }, { "date" : 3865, "x" : 4.81 }, { "date" : 3896, "x" : 4.83 }, { "date" : 3926, "x" : 4.85 }, { "date" : 3957, "x" : 4.95 }, { "date" : 3987, "x" : 4.91 }, { "date" : 4018, "x" : 4.86 }, { "date" : 4049, "x" : 4.88 }, { "date" : 4077, "x" : 4.91 }, { "date" : 4108, "x" : 4.89 }, { "date" : 4138, "x" : 4.89 }, { "date" : 4169, "x" : 4.88 }, { "date" : 4199, "x" : 4.87 }, { "date" : 4230, "x" : 4.81 }, { "date" : 4261, "x" : 4.76 }, { "date" : 4291, "x" : 4.8 }, { "date" : 4322, "x" : 4.84 }, { "date" : 4352, "x" : 4.81 }, { "date" : 4383, "x" : 4.79 }, { "date" : 4414, "x" : 4.73 }, { "date" : 4442, "x" : 4.72 }, { "date" : 4473, "x" : 4.76 }, { "date" : 4503, "x" : 4.72 }, { "date" : 4534, "x" : 4.7 }, { "date" : 4564, "x" : 4.67 }, { "date" : 4595, "x" : 4.78 }, { "date" : 4626, "x" : 4.79 }, { "date" : 4656, "x" : 4.9 }, { "date" : 4687, "x" : 4.93 }, { "date" : 4717, "x" : 4.95 }, { "date" : 4748, "x" : 4.98 }, { "date" : 4779, "x" : 5 }, { "date" : 4807, "x" : 5.03 }, { "date" : 4838, "x" : 5.1 }, { "date" : 4868, "x" : 5.09 }, { "date" : 4899, "x" : 5.12 }, { "date" : 4929, "x" : 5.09 }, { "date" : 4960, "x" : 5.1 }, { "date" : 4991, "x" : 5.11 }, { "date" : 5021, "x" : 5.1 }, { "date" : 5052, "x" : 5.11 }, { "date" : 5082, "x" : 5.11 }, { "date" : 5113, "x" : 5.1 }, { "date" : 5144, "x" : 5.06 }, { "date" : 5173, "x" : 5.07 }, { "date" : 5204, "x" : 5.08 }, { "date" : 5234, "x" : 5.01 }, { "date" : 5265, "x" : 5.03 }, { "date" : 5295, "x" : 5.02 }, { "date" : 5326, "x" : 5.12 }, { "date" : 5357, "x" : 5.11 }, { "date" : 5387, "x" : 5.11 }, { "date" : 5418, "x" : 5.1 }, { "date" : 5448, "x" : 5.12 }, { "date" : 5479, "x" : 5.19 }, { "date" : 5510, "x" : 5.2 }, { "date" : 5538, "x" : 5.2 }, { "date" : 5569, "x" : 5.19 }, { "date" : 5599, "x" : 5.24 }, { "date" : 5630, "x" : 5.26 }, { "date" : 5660, "x" : 5.25 }, { "date" : 5691, "x" : 5.24 }, { "date" : 5722, "x" : 5.2 }, { "date" : 5752, "x" : 5.25 }, { "date" : 5783, "x" : 5.31 }, { "date" : 5813, "x" : 5.35 }, { "date" : 5844, "x" : 5.36 }, { "date" : 5875, "x" : 5.42 }, { "date" : 5903, "x" : 5.48 }, { "date" : 5934, "x" : 5.46 }, { "date" : 5964, "x" : 5.51 }, { "date" : 5995, "x" : 5.52 }, { "date" : 6025, "x" : 5.46 }, { "date" : 6056, "x" : 5.53 }, { "date" : 6087, "x" : 5.44 }, { "date" : 6117, "x" : 5.5 }, { "date" : 6148, "x" : 5.52 }, { "date" : 6178, "x" : 5.49 }, { "date" : 6209, "x" : 5.61 }, { "date" : 6240, "x" : 5.65 }, { "date" : 6268, "x" : 5.68 }, { "date" : 6299, "x" : 5.66 }, { "date" : 6329, "x" : 5.67 }, { "date" : 6360, "x" : 5.72 }, { "date" : 6390, "x" : 5.76 }, { "date" : 6421, "x" : 5.8 }, { "date" : 6452, "x" : 5.77 }, { "date" : 6482, "x" : 5.53 }, { "date" : 6513, "x" : 5.44 }, { "date" : 6543, "x" : 5.51 }, { "date" : 6574, "x" : 5.55 }, { "date" : 6605, "x" : 5.59 }, { "date" : 6634, "x" : 5.56 }, { "date" : 6665, "x" : 5.57 }, { "date" : 6695, "x" : 5.57 }, { "date" : 6726, "x" : 5.61 }, { "date" : 6756, "x" : 5.61 }, { "date" : 6787, "x" : 5.57 }, { "date" : 6818, "x" : 5.61 }, { "date" : 6848, "x" : 5.63 }, { "date" : 6879, "x" : 5.61 }, { "date" : 6909, "x" : 5.63 }, { "date" : 6940, "x" : 5.7 }, { "date" : 6971, "x" : 5.67 }, { "date" : 6999, "x" : 5.69 }, { "date" : 7030, "x" : 5.74 }, { "date" : 7060, "x" : 5.77 }, { "date" : 7091, "x" : 5.76 }, { "date" : 7121, "x" : 5.85 }, { "date" : 7152, "x" : 5.86 }, { "date" : 7183, "x" : 5.86 }, { "date" : 7213, "x" : 5.83 }, { "date" : 7244, "x" : 5.85 }, { "date" : 7274, "x" : 5.87 }, { "date" : 7305, "x" : 5.8 }, { "date" : 7336, "x" : 5.8 }, { "date" : 7364, "x" : 5.83 }, { "date" : 7395, "x" : 5.8 }, { "date" : 7425, "x" : 5.89 }, { "date" : 7456, "x" : 5.88 }, { "date" : 7486, "x" : 5.88 }, { "date" : 7517, "x" : 5.78 }, { "date" : 7548, "x" : 5.72 }, { "date" : 7578, "x" : 5.72 }, { "date" : 7609, "x" : 5.78 }, { "date" : 7639, "x" : 5.8 }, { "date" : 7670, "x" : 5.84 }, { "date" : 7701, "x" : 5.91 }, { "date" : 7729, "x" : 5.93 }, { "date" : 7760, "x" : 5.93 }, { "date" : 7790, "x" : 5.97 }, { "date" : 7821, "x" : 5.92 }, { "date" : 7851, "x" : 5.96 }, { "date" : 7882, "x" : 5.98 }, { "date" : 7913, "x" : 5.96 }, { "date" : 7943, "x" : 5.97 }, { "date" : 7974, "x" : 5.93 }, { "date" : 8004, "x" : 6.03 }, { "date" : 8035, "x" : 6.01 }, { "date" : 8066, "x" : 6.02 }, { "date" : 8095, "x" : 6 }, { "date" : 8126, "x" : 6.03 }, { "date" : 8156, "x" : 6.03 }, { "date" : 8187, "x" : 6.01 }, { "date" : 8217, "x" : 6.05 }, { "date" : 8248, "x" : 6.03 }, { "date" : 8279, "x" : 6.04 }, { "date" : 8309, "x" : 6.04 }, { "date" : 8340, "x" : 6.07 }, { "date" : 8370, "x" : 6.08 }, { "date" : 8401, "x" : 6.08 }, { "date" : 8432, "x" : 6.09 }, { "date" : 8460, "x" : 6.11 }, { "date" : 8491, "x" : 6.09 }, { "date" : 8521, "x" : 6.11 }, { "date" : 8552, "x" : 6.11 }, { "date" : 8582, "x" : 6.11 }, { "date" : 8613, "x" : 6.14 }, { "date" : 8644, "x" : 6.13 }, { "date" : 8674, "x" : 6.15 }, { "date" : 8705, "x" : 6.14 }, { "date" : 8735, "x" : 6.15 }, { "date" : 8766, "x" : 6.18 }, { "date" : 8797, "x" : 6.15 }, { "date" : 8825, "x" : 6.1 }, { "date" : 8856, "x" : 6.11 }, { "date" : 8886, "x" : 6.12 }, { "date" : 8917, "x" : 6.1 }, { "date" : 8947, "x" : 6.13 }, { "date" : 8978, "x" : 6.16 }, { "date" : 9009, "x" : 6.14 }, { "date" : 9039, "x" : 6.16 }, { "date" : 9070, "x" : 6.12 }, { "date" : 9100, "x" : 6.13 }, { "date" : 9131, "x" : 6.15 }, { "date" : 9162, "x" : 6.19 }, { "date" : 9190, "x" : 6.22 }, { "date" : 9221, "x" : 6.24 }, { "date" : 9251, "x" : 6.28 }, { "date" : 9282, "x" : 6.3 }, { "date" : 9312, "x" : 6.33 }, { "date" : 9343, "x" : 6.33 }, { "date" : 9374, "x" : 6.37 }, { "date" : 9404, "x" : 6.37 }, { "date" : 9435, "x" : 6.41 }, { "date" : 9465, "x" : 6.42 }, { "date" : 9496, "x" : 6.46 }, { "date" : 9527, "x" : 6.46 }, { "date" : 9556, "x" : 6.47 }, { "date" : 9587, "x" : 6.48 }, { "date" : 9617, "x" : 6.51 }, { "date" : 9648, "x" : 6.51 }, { "date" : 9678, "x" : 6.46 }, { "date" : 9709, "x" : 6.48 }, { "date" : 9740, "x" : 6.53 }, { "date" : 9770, "x" : 6.56 }, { "date" : 9801, "x" : 6.63 }, { "date" : 9831, "x" : 6.61 }, { "date" : 9862, "x" : 6.67 }, { "date" : 9893, "x" : 6.67 }, { "date" : 9921, "x" : 6.63 }, { "date" : 9952, "x" : 6.69 }, { "date" : 9982, "x" : 6.74 }, { "date" : 10013, "x" : 6.79 }, { "date" : 10043, "x" : 6.86 }, { "date" : 10074, "x" : 6.8 }, { "date" : 10105, "x" : 6.85 }, { "date" : 10135, "x" : 6.82 }, { "date" : 10166, "x" : 6.86 }, { "date" : 10196, "x" : 6.88 }, { "date" : 10227, "x" : 6.89 }, { "date" : 10258, "x" : 6.96 }, { "date" : 10286, "x" : 7 }, { "date" : 10317, "x" : 7.01 }, { "date" : 10347, "x" : 6.99 }, { "date" : 10378, "x" : 7.03 }, { "date" : 10408, "x" : 7.02 }, { "date" : 10439, "x" : 6.86 }, { "date" : 10470, "x" : 6.92 }, { "date" : 10500, "x" : 7 }, { "date" : 10531, "x" : 7.06 }, { "date" : 10561, "x" : 7.11 }, { "date" : 10592, "x" : 7.15 }, { "date" : 10623, "x" : 7.12 }, { "date" : 10651, "x" : 7.16 }, { "date" : 10682, "x" : 7.2 }, { "date" : 10712, "x" : 7.17 }, { "date" : 10743, "x" : 7.22 }, { "date" : 10773, "x" : 7.19 }, { "date" : 10804, "x" : 7.19 }, { "date" : 10835, "x" : 7.16 }, { "date" : 10865, "x" : 7.22 }, { "date" : 10896, "x" : 7.24 }, { "date" : 10926, "x" : 7.29 }, { "date" : 10957, "x" : 7.24 }, { "date" : 10988, "x" : 7.22 }, { "date" : 11017, "x" : 7.31 }, { "date" : 11048, "x" : 7.28 }, { "date" : 11078, "x" : 7.26 }, { "date" : 11109, "x" : 7.28 }, { "date" : 11139, "x" : 7.27 }, { "date" : 11170, "x" : 7.32 }, { "date" : 11201, "x" : 7.27 }, { "date" : 11231, "x" : 7.27 }, { "date" : 11262, "x" : 7.18 }, { "date" : 11292, "x" : 7.19 }, { "date" : 11323, "x" : 7.22 }, { "date" : 11354, "x" : 7.12 }, { "date" : 11382, "x" : 7.06 }, { "date" : 11413, "x" : 7.13 }, { "date" : 11443, "x" : 7.14 }, { "date" : 11474, "x" : 7.11 }, { "date" : 11504, "x" : 7.1 }, { "date" : 11535, "x" : 7.03 }, { "date" : 11566, "x" : 6.95 }, { "date" : 11596, "x" : 6.97 }, { "date" : 11627, "x" : 7.04 }, { "date" : 11657, "x" : 7.05 }, { "date" : 11688, "x" : 7.03 }, { "date" : 11719, "x" : 7.01 }, { "date" : 11747, "x" : 7.05 }, { "date" : 11778, "x" : 6.98 }, { "date" : 11808, "x" : 6.97 }, { "date" : 11839, "x" : 6.9 }, { "date" : 11869, "x" : 6.82 }, { "date" : 11900, "x" : 6.82 }, { "date" : 11931, "x" : 6.7 }, { "date" : 11961, "x" : 6.79 }, { "date" : 11992, "x" : 6.84 }, { "date" : 12022, "x" : 6.78 }, { "date" : 12053, "x" : 6.75 }, { "date" : 12084, "x" : 6.73 }, { "date" : 12112, "x" : 6.74 }, { "date" : 12143, "x" : 6.82 }, { "date" : 12173, "x" : 6.87 }, { "date" : 12204, "x" : 6.88 }, { "date" : 12234, "x" : 6.9 }, { "date" : 12265, "x" : 6.92 }, { "date" : 12296, "x" : 6.9 }, { "date" : 12326, "x" : 6.96 }, { "date" : 12357, "x" : 6.96 }, { "date" : 12387, "x" : 7.01 }, { "date" : 12418, "x" : 7.03 }, { "date" : 12449, "x" : 7.04 }, { "date" : 12478, "x" : 7.03 }, { "date" : 12509, "x" : 7.01 }, { "date" : 12539, "x" : 7.02 }, { "date" : 12570, "x" : 7.04 }, { "date" : 12600, "x" : 7 }, { "date" : 12631, "x" : 7.01 }, { "date" : 12662, "x" : 7.02 }, { "date" : 12692, "x" : 7.03 }, { "date" : 12723, "x" : 7.07 }, { "date" : 12753, "x" : 7.1 }, { "date" : 12784, "x" : 7.07 }, { "date" : 12815, "x" : 7.09 }, { "date" : 12843, "x" : 7.07 }, { "date" : 12874, "x" : 7.05 }, { "date" : 12904, "x" : 7.08 }, { "date" : 12935, "x" : 7.08 }, { "date" : 12965, "x" : 7.12 }, { "date" : 12996, "x" : 7.11 }, { "date" : 13027, "x" : 7.11 }, { "date" : 13057, "x" : 7.1 }, { "date" : 13088, "x" : 7.13 }, { "date" : 13118, "x" : 7.13 }, { "date" : 13149, "x" : 7.15 }, { "date" : 13180, "x" : 7.16 }, { "date" : 13208, "x" : 7.17 }, { "date" : 13239, "x" : 7.18 }, { "date" : 13269, "x" : 7.15 }, { "date" : 13300, "x" : 7.15 }, { "date" : 13330, "x" : 7.15 }, { "date" : 13361, "x" : 7.17 }, { "date" : 13392, "x" : 7.2 }, { "date" : 13422, "x" : 7.23 }, { "date" : 13453, "x" : 7.24 }, { "date" : 13483, "x" : 7.26 }, { "date" : 13514, "x" : 7.27 }, { "date" : 13545, "x" : 7.25 }, { "date" : 13573, "x" : 7.26 }, { "date" : 13604, "x" : 7.3 }, { "date" : 13634, "x" : 7.33 }, { "date" : 13665, "x" : 7.32 }, { "date" : 13695, "x" : 7.28 }, { "date" : 13726, "x" : 7.3 }, { "date" : 13757, "x" : 7.33 }, { "date" : 13787, "x" : 7.35 }, { "date" : 13818, "x" : 7.3 }, { "date" : 13848, "x" : 7.29 }, { "date" : 13879, "x" : 7.23 }, { "date" : 13910, "x" : 7.19 }, { "date" : 13939, "x" : 7.19 }, { "date" : 13970, "x" : 7.23 }, { "date" : 14000, "x" : 7.24 }, { "date" : 14031, "x" : 7.15 }, { "date" : 14061, "x" : 7.14 }, { "date" : 14092, "x" : 7.16 }, { "date" : 14123, "x" : 7.06 }, { "date" : 14153, "x" : 6.88 }, { "date" : 14184, "x" : 6.8 }, { "date" : 14214, "x" : 6.81 }, { "date" : 14245, "x" : 6.72 }, { "date" : 14276, "x" : 6.6 }, { "date" : 14304, "x" : 6.68 }, { "date" : 14335, "x" : 6.77 }, { "date" : 14365, "x" : 6.82 }, { "date" : 14396, "x" : 6.82 }, { "date" : 14426, "x" : 6.9 }, { "date" : 14457, "x" : 6.93 }, { "date" : 14488, "x" : 6.96 }, { "date" : 14518, "x" : 6.94 }, { "date" : 14549, "x" : 7 }, { "date" : 14579, "x" : 7.02 }, { "date" : 14610, "x" : 6.98 }, { "date" : 14641, "x" : 7.01 }, { "date" : 14669, "x" : 7.06 }, { "date" : 14700, "x" : 7.08 }, { "date" : 14730, "x" : 6.99 }, { "date" : 14761, "x" : 6.94 }, { "date" : 14791, "x" : 7 }, { "date" : 14822, "x" : 6.96 }, { "date" : 14853, "x" : 7.04 }, { "date" : 14883, "x" : 7.08 }, { "date" : 14914, "x" : 7.07 }, { "date" : 14944, "x" : 7.14 }, { "date" : 14975, "x" : 7.16 }, { "date" : 15006, "x" : 7.19 }, { "date" : 15034, "x" : 7.19 }, { "date" : 15065, "x" : 7.22 }, { "date" : 15095, "x" : 7.2 }, { "date" : 15126, "x" : 7.19 }, { "date" : 15156, "x" : 7.16 }, { "date" : 15187, "x" : 7.11 }, { "date" : 15218, "x" : 7.03 }, { "date" : 15248, "x" : 7.13 }, { "date" : 15279, "x" : 7.13 }, { "date" : 15309, "x" : 7.14 }, { "date" : 15340, "x" : 7.18 }, { "date" : 15371, "x" : 7.22 }, { "date" : 15400, "x" : 7.25 }, { "date" : 15431, "x" : 7.24 }, { "date" : 15461, "x" : 7.18 }, { "date" : 15492, "x" : 7.22 }, { "date" : 15522, "x" : 7.23 }, { "date" : 15553, "x" : 7.25 }, { "date" : 15584, "x" : 7.27 }, { "date" : 15614, "x" : 7.25 }, { "date" : 15645, "x" : 7.26 }, { "date" : 15675, "x" : 7.26 }, { "date" : 15706, "x" : 7.31 }, { "date" : 15737, "x" : 7.32 }, { "date" : 15765, "x" : 7.36 }, { "date" : 15796, "x" : 7.38 }, { "date" : 15826, "x" : 7.4 }, { "date" : 15857, "x" : 7.38 }, { "date" : 15887, "x" : 7.43 }, { "date" : 15918, "x" : 7.4 }, { "date" : 15949, "x" : 7.43 }, { "date" : 15979, "x" : 7.47 }, { "date" : 16010, "x" : 7.5 }, { "date" : 16040, "x" : 7.52 }, { "date" : 16071, "x" : 7.49 }, { "date" : 16102, "x" : 7.53 }, { "date" : 16130, "x" : 7.53 } ], "breaks" : [ [ { "date" : -6940, "x" : 3.12 }, { "date" : -1736, "x" : 4.51 } ], [ { "date" : -1706, "x" : 4.51 }, { "date" : 3165, "x" : 4.58 } ], [ { "date" : 3195, "x" : 4.55 }, { "date" : 9982, "x" : 6.57 } ], [ { "date" : 10013, "x" : 6.98 }, { "date" : 16130, "x" : 7.22 } ] ] } };
    
    function drawChart( data ){
  
      svg = d3.selectAll("#graphic").append("svg")
        .attr("height", params.height)
        .attr("width", params.width);
        
      chart = svg.append("g")
      if (!(params.margin)) {
        params.margin = {
          left : 50,
          right: 50,
          top : 50,
          bottom : 50
        }
      }
      chart.attr("transform", "translate(" + params.margin.left + "," + params.margin.bottom + ")")
      
      width = params.width - params.margin.left - params.margin.right;
      height = params.height - params.margin.top - params.margin.bottom;    
      
      line = d3.svg.line()
               .x(function(d) { 
                  return x(new Date(d[params.x]*60*60*24*1000));
                })
               .y(function(d) {
                 return y(d[params.y]); 
               });
               
      linebreak = d3.svg.line()
               .x(function(d) { 
                  return x(new Date(d[params.x]*60*60*24*1000));
                })
               .y(function(d) {
                  return this.getPointAtLength(y(d[params.y])).y
               });
               
      x = d3.time.scale().range([0, width]);
      y = d3.scale.linear().range([height, 0]);                              

      
      x.domain(d3.extent( data.line, function(d) {return new Date(d[params.x]*60*60*24*1000)} ));
      y.domain(d3.extent( data.line, function(d) {return d[params.y]} ));
      //y.domain([-0.02,1.2]);
      
      
      chart.append("path")
        .datum( data.line )
        .attr('class', 'line')
        .attr('d', line)
        .style('fill','none')
        .style('stroke','black')
        .style('stroke-width',"1.5px");
        
      var breaks = chart.selectAll(".breaks")
        .data( data.breaks )
        .enter()
        .append("path")
        .attr('class','breaks')      
        
      breaks
        .attr('d', line)
        .style('fill','none')
        .style('stroke','red');
      
      
      //Define Y axis
      var xAxis = d3.svg.axis()
                        .scale(x)
                        .orient("bottom")
                        
                        
      svg.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(" + params.margin.left + "," + (height + params.margin.bottom) + ")")
        .call(xAxis);
                  
      //Define Y axis
      var yAxis = d3.svg.axis()
                        .scale(y)
                        .orient("left")
                        .ticks(5);
      
      //Create Y axis
      svg.append("g")
          .attr("class", "axis")
          .attr("transform", "translate(" + params.margin.left + "," + params.margin.bottom + ")")
          .call(yAxis);
          
      //clean up the axes without css stylesheet
      svg.selectAll(".axis text")
        .style("font-size","11px")
      svg.selectAll(".axis path,line")
        .style("stroke", "#000")
        .style("fill", "none")
        .style("shape-rendering" ,"crispEdges")
    }    
  
    
    function updateChart( data ){
      x.domain(d3.extent( data.line, function(d) {return new Date(d[params.x]*60*60*24*1000)} ));
      //y.domain(d3.extent( data.line, function(d) {return d[params.y]} ));      
              
      var breaks = chart.selectAll(".breaks")
      var lasty = breaks.data().map(function(d){return d[0][params.x]})
      
      breaks = breaks
        .data( data.breaks );
            
      breaks.enter()
        .append("path")
        .attr('class','breaks')
        .attr('d', d3.select(breaks[0][breaks[0].filter(function(el){
          return Boolean(d3.select(el).attr("d"))
        }).length-1]).attr('d'))
        .style('fill','none')
        .style('stroke','red');      
        
      breaks.transition().duration(200).delay(800)
        .attr('d', linebreak)
        .transition().duration(500).delay(1000)
          .attr('d', line);
  
            
      /*var lineexit = d3.svg.line()
                      .x(function(d){return x(d[params.x])})
                      .y(function(d){
                        return y(lasty[data.breaks.length-1]);
                      })
      */
      breaks.exit()
        .transition().duration(1000)
        .style("stroke", "gray")        
        .style("stroke-width",breaks.style("stroke-width")*3)
        .transition().delay(1500).duration(1000)
        //.attr("d",lineexit)     
        .style("opacity",0.01)
        .remove();
        
      var path = chart.selectAll('.line')
        .datum( data.line )
        
      path.transition().duration(1200).delay(1000)
        .attr('d', line )
    }    
  </script>
    
    
      <script>
      var app = angular.module("myApp", []);
      app.controller("MainCtrl", function($scope, $window){
      $scope.data = data;
      
      $scope.drawChart = function(){
      drawChart( $scope.selected )
      }
      
      $scope.selected = $scope.data["h0.05"]
      
      if( $scope.selected ){
      $scope.drawChart()
      }
      
      $scope.updateChart = function(){
      updateChart( $scope.selected )
      }
      
      $scope.$watch("selected", function(){
      if( $scope.selected ){
      $scope.updateChart()
      }
      })
      });
      </script>
          
  </body>
</html><!doctype html>
<html lang="en">
  <head>
    <link rel="stylesheet" href="http://ol3js.org/en/master/css/ol.css" type="text/css">
    <style>
      .map {
        height: 600px;
        width: 100%;
      }
    </style>
    <script src="http://ol3js.org/en/master/build/ol.js" type="text/javascript"></script>
    <title>OpenLayers 3</title>
  </head>
  <body>
    <div id="map" class="map"></div>
    <script type="text/javascript">
      var map = new ol.Map({
        target: 'map',
        layers: [
          new ol.layer.Tile({
            source: new ol.source.OSM()
          })
        ],
        view: new ol.View2D({
          center: ol.proj.transform([-58.4280189, -34.6051541], 'EPSG:4326', 'EPSG:3857'),
          zoom: 16
        })
      });
    </script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
Hello, world! HELLOHELLO
<!DOCTYPE html>

<html lang="en">
<head>
<meta charset="utf-8" />
<title>Sankey Particles</title>
<style>
.node rect {
  cursor: move;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}

.node text {
  pointer-events: none;
  text-shadow: 0 1px 0 #fff;
}

.link {
  fill: none;
  stroke: #000;
  stroke-opacity: .05;
}

.link:hover {
  stroke-opacity: .25;
}

svg {
  position: absolute;
}

canvas {
  position: absolute;
}


</style>
</head>
<body>
<canvas width="1000" height="1000" ></canvas>
<svg width="1000" height="1000" ></svg>

<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="d3.sankey.js" charset="utf-8" type="text/javascript"></script>

    <script type="text/javascript">

var margin = {top: 1, right: 1, bottom: 6, left: 1},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),
    format = function(d) { return formatNumber(d) + " TWh"; },
    color = d3.scale.category20();

var svg = d3.select("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var sankey = d3.sankey()
    .nodeWidth(15)
    .nodePadding(10)
    .size([width, height]);

var path = sankey.link();

var freqCounter = 1;


d3.json("energy.json", function(energy) {

  sankey
      .nodes(energy.nodes)
      .links(energy.links)
      .layout(32);

  var link = svg.append("g").selectAll(".link")
      .data(energy.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", path)
      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      .sort(function(a, b) { return b.dy - a.dy; });

  link.append("title")
      .text(function(d) { return d.source.name + " → " + d.target.name + "\n" + format(d.value); });

  var node = svg.append("g").selectAll(".node")
      .data(energy.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { this.parentNode.appendChild(this); })
      .on("drag", dragmove));

  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankey.nodeWidth())
      .style("fill", function(d) { return d.color = color(d.name.replace(/ .*/, "")); })
      .style("stroke", "none")
    .append("title")
      .text(function(d) { return d.name + "\n" + format(d.value); });

  node.append("text")
      .attr("x", -6)
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "end")
      .attr("transform", null)
      .text(function(d) { return d.name; })
    .filter(function(d) { return d.x < width / 2; })
      .attr("x", 6 + sankey.nodeWidth())
      .attr("text-anchor", "start");

  function dragmove(d) {
    d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
    sankey.relayout();
    link.attr("d", path);
  }

  var linkExtent = d3.extent(energy.links, function (d) {return d.value});
  var frequencyScale = d3.scale.linear().domain(linkExtent).range([0.05,1]);
  var particleSize = d3.scale.linear().domain(linkExtent).range([1,5]);


  energy.links.forEach(function (link) {
    link.freq = frequencyScale(link.value);
    link.particleSize = 2.5;
    link.particleColor = d3.scale.linear().domain([0,1])
    .range([link.source.color, link.target.color]);
  })

  var t = d3.timer(tick, 1000);
  var particles = [];

  function tick(elapsed, time) {

    particles = particles.filter(function (d) {return d.current < d.path.getTotalLength()});

    d3.selectAll("path.link")
    .each(
      function (d) {
//        if (d.freq < 1) {
          var offset = (Math.random() - .5) * d.dy;
          if (Math.random() < d.freq) {
            var length = this.getTotalLength();
            particles.push({link: d, time: elapsed, offset: offset, path: this, length: length, animateTime: length})
          }
//        }
/*        else {
          for (var x = 0; x<d.freq; x++) {
            var offset = (Math.random() - .5) * d.dy;
            particles.push({link: d, time: elapsed, offset: offset, path: this})
          }
        } */
      });

    particleEdgeCanvasPath(elapsed);
  }

  function particleEdgeCanvasPath(elapsed) {
    var context = d3.select("canvas").node().getContext("2d")

    context.clearRect(0,0,1000,1000);

      context.fillStyle = "gray";
      context.lineWidth = "1px";
    for (var x in particles) {
        var currentTime = elapsed - particles[x].time;
//        var currentPercent = currentTime / 1000 * particles[x].path.getTotalLength();
        particles[x].current = currentTime * 0.15;
        var currentPos = particles[x].path.getPointAtLength(particles[x].current);
        context.beginPath();
      context.fillStyle = particles[x].link.particleColor(particles[x].current/particles[x].path.getTotalLength());
        context.arc(currentPos.x,currentPos.y + particles[x].offset,particles[x].link.particleSize,0,2*Math.PI);
        context.fill();
    }
  }


});

    </script>
</body>
</html><!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="http://ol3js.org/en/master/css/ol.css" type="text/css">
    <style>
      .map {
        height: 600px;
        width: 100%;
      }
    </style>
  <meta charset="utf-8">
  <title>world colormap</title>
  <script src="http://ol3js.org/en/master/build/ol.js" type="text/javascript"></script>
</head>
<body>
<div id="map" class="map"></div>

<script>
  var rasterLayer = new ol.layer.Tile({
    source: new ol.source.TileJSON({
      url: 'http://api.tiles.mapbox.com/v3/mapbox.geography-class.jsonp'
    })
  });

  var map = new ol.Map({
    layers: [rasterLayer],
    renderer: 'canvas',
    target: document.getElementById('map'),
    view: new ol.View2D({
      center: [0, 0],
      zoom: 2
    })
  });
</script>
  
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<title>Rain drop -Japan-</title>	

<style>
html, body, svg {
	width:100%;
	height:100%;
	margin: 0px;
	padding: 0px;
}
	
</style>

<body>
<svg>
	
</svg>
<br>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.3/d3.min.js"></script>
<script src="d3.geo2circle.js"></script>
<script>

 		
	
var projection = d3.geo
	.mercator()	
	.scale(1500)
	.translate([500 , 350])
	.center([139.0032936, 36.3219088]); 


var path = d3.geo.path().projection(projection);　



d3.json('todofuken.geojson', function(json) {
	var svg = d3.select('svg')

	var calcCoords = function(polygon, properties) {
		var geoCoords = polygon.map(projection);
		var scatterCoords = d3.geo2circle(geoCoords, 6);
		var scatterPathString = 'M' + scatterCoords.join('L') + 'Z';
		var geoPathString = 'M' + geoCoords.join('L') + 'Z';
		return { scatterPath: scatterPathString, geoPath: geoPathString , properties:properties};
	};	

	var pathDataSet  = [];
	for (var i = 0; i < json.features.length; i++) {
		var geometry = json.features[i].geometry;
		var properties =json.features[i].properties;
		properties.geometry = geometry;
		if (geometry.type == 'Polygon') {
			pathDataSet.push(calcCoords(geometry.coordinates[0], properties));			
		} else if (geometry.type == 'MultiPolygon') {
			geometry.coordinates.forEach(function(coordinates){
				pathDataSet.push(calcCoords(coordinates[0], properties));
			});			
		}
	}
	
	var raindrop = svg.selectAll('path')
		.data(pathDataSet )
		.enter()
		.append('path')
		.attr({
			'stroke':'white',
			'fill':'#6666ff',
			'opacity':0.9
		})
		.attr('d', function(d){ return d.scatterPath } )
		.attr('transform', function(d, i){
			var center = path.centroid(d.properties.geometry);
			var y = ~~center[1];
			return 'translate(0,'+(0-y)+')';		    
		});
		
	var update = function(){
		raindrop
			.transition()
			.duration(1000)
			.delay(function(d){ return (Math.random() * 10 ) * 1000 })
			.attr('opacity', 0.6)
			.attr('transform','translate(0,0)')
			.attr('d', function(d){ return d.geoPath } )
			.each("end", function () {
				d3.select(this)
					.transition()
					.duration(1000)
					.delay(function(d){ return  (Math.random() * 10 )  * 1000 })						
					.attr("opacity", 0)
					.each("end", function () {
						d3.select(this).attr('d', function(d){ return d.scatterPath } )
						.attr('transform', function(d, i){
							var center = path.centroid(d.properties.geometry);
							var y = ~~center[1];
								return 'translate(0,'+(0-y)+')';		    
						})
						.attr("opacity", 0.9);
					});
			});
		setTimeout(update, 1000 * 10);
	}	
		
	update();
	
});

</script>




<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <title>Happy D3iwali</title>
  <!-- Js -->
  <script src="http://d3js.org/d3.v3.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <link href="http://fonts.googleapis.com/css?family=Arizonia" rel="stylesheet" type="text/css">
  <!-- CSS -->
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <!-- HTML -->
  <!-- inspired by http://jsfiddle.net/christopheviau/XnG6r/-->
  <!-- inspired by https://gist.github.com/mbostock/1345853-->
  <div id="body">
    <div class="centered">
      <h1 id="greeting">Wishing you a very <br/>
        Happy D<span id="d3text">3</span>iwali
        <br/> and a prosperous New Year!
      </h1>
      <div id="lamp"></div>
    </div>

  <!-- Js -->
  <script type="text/javascript" src="index.js">
  </script>
</body>
</html><!-- code is adapted from:
	https://gist.github.com/mbostock/1098617
-->

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Windows 8 Like Timer</title>
		<script src="http://d3js.org/d3.v3.min.js"></script>
  </head>

  <style type="text/css">
  	#chartArea {
			border: 2px dashed black;
			height: 500px;
			width: 500px;
		}
		path {
		  fill-rule: evenodd;
		  fill: #aaa;
		  fill-opacity: .7;
		  stroke: #666;
		  stroke-width: 5.5px;
		}
		#valueOutput{
			fill:maroon;
		}
  </style>

	<body>
		<div id="chartArea"></div>
	</body>

<script type="text/javascript">
	var divH = parseInt( d3.select("#chartArea").style("height") );
  var divW = parseInt( d3.select("#chartArea").style("width") );
	
	var margin = {top: 10, right: 10, bottom: 10, left: 10};
	var w = divW - margin.left - margin.right;
		h = divH - margin.top - margin.bottom;
	  x = d3.scale.ordinal().domain(d3.range(3)).rangePoints([0, w], 2);

	var fields = [
	  {name: "seconds", value: 0, size: 60, order: 0},
	  {name: "minutes", value: 0, size: 60, order: 1},
	  {name: "hours", value: 0, size: 24, order: 2}
	];

	var outerRadiusInit = w / 2.2;
	var arcWidth = 35;
	var innerRadiusInit = outerRadiusInit - arcWidth;

	var arc = d3.svg.arc()
	    .innerRadius(function(d) { return innerRadiusInit - d.order * arcWidth ; })
	    .outerRadius(function(d) { return outerRadiusInit - d.order * arcWidth ; })
	    .startAngle(0)
	    .endAngle(function(d) { return (d.value / d.size) * 2 * Math.PI; });

	var svg = d3.select("#chartArea").append("svg:svg")
	    .attr("width", w + margin.left + margin.right)
	    .attr("height", h + margin.top + margin.bottom)
	  .append("svg:g")
	    .attr("transform", "translate(" + margin.left + "," +(margin.top + h/2)+ ")");

	var startBool = true;

	svg.append("text")
		.text("start")
		.attr("id", "valueOutput")
		.attr("text-anchor", "middle")
		.attr("transform","translate(" + w / 2 + ",0)")
		.on("click", function(){
			d3.select(this)
				.attr("fill", "teal");
			startBool = !startBool;
			console.log(startBool);
		});

	setInterval(function() {
	  var d = new Date();

	  fields[0].previous = fields[0].value; fields[0].value = d.getSeconds();
	  fields[1].previous = fields[1].value; fields[1].value = d.getMinutes();
	  fields[2].previous = fields[2].value; fields[2].value = d.getHours();

	  var timeString = d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
	  d3.select('#valueOutput').html(timeString);

	  var path = svg.selectAll("path")
	      .data(fields.filter(function(d) { return d.value; }), function(d) { return d.name; });

	  path.enter().append("svg:path")
	      .attr("transform", function(d, i) { return "translate(" + h/2 + ",0)"; })
	    .transition()
	      .ease("linear")
	      .duration(1000)
	      .attrTween("d", arcTween);

	  path.transition()
      .ease("linear")
      .duration(1000)
      .attrTween("d", arcTween);

	  path.exit().transition()
      .ease("ease")
      .duration(750)
      .attrTween("d", arcTween)
      .remove();

	}, 1000);

	function arcTween(b) {
	  var i = d3.interpolate({value: b.previous}, b);
	  return function(t) {
	    return arc(i(t));
	  };
	}
</script>
</html><!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>rocks | krishans homework</title>

    <link href="//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">

    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js" charset="utf-8"></script>

 <style type="text/css">
    @import url(http://fonts.googleapis.com/css?family=Source+Code+Pro:400,600);
		/*$h: 512px;
		$w: 950px;*/
		.font-styles, body {
		  font-family: "Source Code Pro", Consolas, monaco, monospace;
		  font-size: 18px;
		  line-height: 1.5;
		  font-weight: 400;
		}

		body {
		  position: relative;
		  color: #130C0E;
		  background-color: #eee;
		  padding: 40px;
		}

		button {
		  background: #7AC143;
		  border: none;
		  padding: 5px 10px;
		  font-size: 18px;
		}
		button#blue {
		  background: #00B0DD;
		}

		div.h-bar {
		  background: #00B0DD;
		  margin-bottom: 5px;
		  padding: 10px;
		  padding-left: 300px;
		  position: relative;
		  min-height: 180px;
		  margin-right: 20px;
		}


		div.h-bar.selected {
		  background: #7AC143;
		}

		section {
		  padding-top: 20px;
		}

		.imageWrap img {
			width: 250px;
			height: 180px;
			position: absolute;
			left: 10px;
			top: 10px;
		}
</style>

</head>

<body>

<div class='control-group'>

<h2>Types of rock: </h2>
  <button onclick="select('sandstone')">Sandstone</button>
  <button onclick="select('granite')">Granite</button>
  <button onclick="select('chalk')">Chalk</button>
  <button id='blue' onclick='select()'>Clear</button>
</div>

<section></section>


<script src="rocks_dataset.js"></script>
<script src="eesur.js"></script>
    
</body>
</html><!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PopCha! Movie Network</title>
    <link rel="stylesheet" href="movie-network.css"/>
    <link rel="shortcut icon" href="popcha.ico" type="image/x-icon">
    <script>
      // Sniff MSIE version
      // http://james.padolsey.com/javascript/detect-ie-in-js-using-conditional-comments/
      var ie = ( function() {
        var undef,
        v = 3,
        div = document.createElement('div'),
        all = div.getElementsByTagName('i');
        while (
         div.innerHTML='<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',all[0]
        );
        return v > 4 ? v : undef;
      }() );

      function takeAction() {
        if( ie && ie < 9 ) {
	  D3notok();
        } else {
          // Load D3.js, and once loaded do our stuff
          var head = document.getElementsByTagName('head')[0];
          var script = document.createElement('script');
          script.type = 'text/javascript';
	  script.src = "http://d3js.org/d3.v3.min.js";
          script.addEventListener('load', D3ok, false);
          script.onload = "D3ok();";
	  head.appendChild(script);
       }
     }
    </script>
</head>
<body onload="takeAction();">

  <div id="nocontent">
    <h1>Sadly your browser is not compatible with this site</h1>

    <div>You can use <a href="http://www.google.com/chrome/">Google
    Chrome</a>, <a href="http://www.mozilla.org/firefox">Mozilla Firefox</a>
    or <a href="http://windows.microsoft.com/en-us/internet-explorer/download-ie">Microsoft
    Internet Explorer (v9 or above)</a> to access the PopCha Movie
    Network</div>

  </div>

  <div id="movieNetwork"></div>

  <div id="sidepanel">

    <div id="title">
      <img src="popcha-100.png"/><br/>Movie Network<br/>

      <!-- <a href="javascript:void(0);" 
              onClick="zoomCall(0.5);" style="pointer-events: all;">+</a>
      <a href="javascript:void(0);" 
         onClick="zoomCall(-0.5);" style="pointer-events: all;">-</a> -->

      <img id="helpIcon" 
           src="help-question-48.png" title="Click for help" 
           onClick="toggleDiv('help');"/>

    </div>    

    <div id="help" class="panel_off">
      <img src="close.png" style="float: right;" 
           onClick="toggleDiv('help');"/>
      This is a subset of the movie network produced from data in the
      mobile <a href="https://www.popcha.tv">PopCha!</a> app. Movies
      relate to each other <em>as they get picked by PopCha! users</em> 
      (note that movie details are <strong>not</strong> used to build the 
      graph).

      <ul>
        <li>Hover over a node to see the movie title, and to highlight
        the movies related to it.</li>

        <li>Click on a node to show movie details. It will open up a
        side panel.</li>

        <li>On the movie details panel, you can click on the <em>target</em> 
        icon to center the graph on that movie. And clicking on the link to
        a related movie will move to that movie (in the graph and in the
        panel)</li>

        <li>You can use you usual browser controls to zoom and pan
        over the graph. If you zoom in when centred on a movie, the
        graph will expand around it.</li>

        <li>Above a certain zoom level, movie titles are automatically
        displayed for all the nodes.</li>
      </ul>
      For additional information, check the <strong><a href="" onClick="return toggleDiv('faq');">FAQ</a></strong>.
    </div>

    <div id="movieInfo" class="panel_off"></div>
  </div>

  <div id="faq" class="panel_off">
    <div id="close_faq">
      <img src="close.png" onClick="toggleDiv('faq');"/>
    </div>
    <dl>

      <dt>Where does this come from?</dt>

      <dd>The <a href="https://www.popcha.tv">PopCha!</a> mobile app
      lets users search for movies, view their details, rate them, add
      them to bags to build personalized movie lists and receive
      notifications when they are available in theaters, TV or Video
      on Demand platforms. Its recommendation engine allows proposing
      users movies they might be interested in. PopCha! users have so
      far currently rated, added to bags or otherwise showed interest
      for more than 11,000 movies</dd>

      <dt>And how was this concrete "movie network" made?</dt>
      <dd>This is how we did it:
        <ol style="margin: 0px;">
          <li> We selected the movies with the top ratings (the most
          highly valued movies for PopCha! users). Those were our
          initial seed, and are the nodes with a red border in the
          graph. As you can see, they are mostly the "usual suspects",
          but with also a few non-conventional movies added in.</li>

          <li>Then we used our recommendation engine to find the
          movies most similar to them. Not by looking at their genre,
          director or cast, but by checking how users interact with
          them. That is, two movies are considered similar just by
          checking if users rate them equally, or usually appear
          together in their bags. Those movies make up the second
          level in our network, marked with a grey border.</li>

          <li>Finally, we rounded up the graph by adding a third
          level, computed as the movies most similar to the ones in
          the second level</li>
        </ol>
      </dd>

      <dt>Ok, but <em>how</em> was the graph actually computed?</dt>

      <dd>For those of you technically oriented, the links between
      movies were extracted as item-item similarity scores computed in
      our Collaborative Filtering engine, using all events produced by
      users of the PopCha! Android/iOS apps. Those links were then fed
      to a <a
      href="https://github.com/mbostock/d3/wiki/Force-Layout">force-directed
      graph layout</a> in <strong>D3.js</strong>.

        <br>No movie metadata (title, director, cast, whatever) was used or harmed in any way during the production of this graph.</dd>
      <dt>What do the graph elements mean?</dt>

      <dd>Each circle is a movie; it is linked to the set of movies
      most similar to it according to our engine (and therefore to
      PopCha! users). The size of the circle represents how it is
      valued by PopCha! users; the set of 25 most valued movies is
      highlighted with a red border. <br/>

When a movie is selected (hovering or clicking) it is shown as purple
in the network. The set of movies linked to it (the ones more similar
to it) are also highlighted, this time in blue.<br/>

The width of the link between two movies reflect how similar they are
(in terms of user response to them); this similarity translates to the
force attracting the nodes (so that two very similar movies will tend
to stay close, within the constraints imposed by the rest of the
forces from the other nodes).<br/>

The force-directed layout is an iterative algorithm; each time the
page is loaded the rendering starts anew, and converges towards a
final stable state. There is some randomness in it, so that no two
final states are equal (but relative positioning of movies, and the
formed clusters, should be similar).


<dt>What is the resulting structure?</dt>
<dd>The graph is heavily connected: there are connections between many of the movies in the network (note that this is only a partial view of the overall network: in the full graph there are many more connections, and also to the movies that here appear to be at the edges).<br/>


There is a strong central cluster containing some of the most important movies (it is so dense that it cannot be clearly seen unless you zoom in). Some of them are deeply connected, check for instance <em><a href="javascript:void(0);" onclick="clearAndSelect(56);">Seven</a></em> or <em><a href="javascript:void(0);" onclick="clearAndSelect(65);">Forrest Gump</a></em>. Within that central cluster we can also identify thematic subclusters, such as the <a href="javascript:void(0);" onclick="clearAndSelect(52);">Tolkien saga</a>.<br/> 

Outside the graph core we can also find other areas with semantic meaning (e.g. the set of <em><a href="javascript:void(0);" onclick="clearAndSelect(165);">Star Wars</a></em> movies, or a group of classic <a href="javascript:void(0);" onclick="clearAndSelect(61);">Hitchcock thrillers</a>). There is also a small <a href="javascript:void(0);" onclick="clearAndSelect(20);">Western</a> cluster (mostly Clint Eastwood movies) and a <a href="javascript:void(0);" onclick="clearAndSelect(119);">Tarantino</a> group.<br/> As a curiosity, there seems to be an exaggerated importance given to movies that are seemingly minor, but that share title with more significant ones (i.e. there is a second <em>Godfather</em> or a second <em>Gladiator</em> in the graph, try to spot them!). These might stem from user confusion when selecting the movie they actually wanted.</dd>
    </dl>
    <dt>Credits</dt>
    <dd><em>
      Movie statistics by the <a href="https://www.popcha.tv">PopCha! team</a><br/>
      Graph computation & visualization by Paulo Villegas<br/>
      
      Movie details from <a href="http://www.themoviedb.org/">The Movie Database</a>
</em></dd>
  </div>

  <script src="movie-network.js"></script>
</body>
</html>
 <!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #000;
}

.line {
  fill: none;
  stroke: #000;
  stroke-width: 6px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

.line-halo {
  stroke-linecap: butt;
  stroke-width: 10px;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="cubehelix.js"></script>
<script>
//using code from d3 examples by Matt Bostock 
// 
//des encryption routines by Eugene Styer
//http://people.eku.edu/styere/Encrypt/JS-DES.html
//

Array.prototype.extend = function (other_array) {
    other_array.forEach(function(v) {this.push(v)}, this);    
}
  
var n = 64
var array = d3.range(n)
var arrays = [array,array]

var elements = d3.range(n).map(function(i) { return {value: i, indexes: []}; });

array=(RSA_initial_permutation(array))
arrays.push(array)
arrays.push(array)
  
var color = d3.scale.cubehelix()
    .domain([0, n / 2, n - 1])
    .range([d3.hsl(-40, 1, .4), d3.hsl(60, 1, 1), d3.hsl(160, 1, .4)]);

arrays.forEach(function(array, t) {
  array.forEach(function(value, i) {
    elements[value].indexes.push({time: t, index: i});
  });
});

var margin = {top: 20, right: 20, bottom: 20, left: 20},
    strokeWidth = 6,
    width = 960 - margin.left - margin.right,
    height = 700 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .domain(d3.range(n))
    .rangePoints([0, width]);

var y = d3.scale.ordinal()
    .domain(d3.range(arrays.length))
    .rangePoints([0, height]);

var line = d3.svg.line()
    .interpolate("basis")

    .x(function(d) { return x(d.index); })
    .y(function(d) { return y(d.time); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("g")
    .attr("class", "line")
  .selectAll("path")
    .data(elements)
  .enter().append("path")
    .style("stroke", function(d) { return color(d.value); })
    .attr("d", function(d) { return line(d.indexes); })
  .select(function() { return this.parentNode.insertBefore(this.cloneNode(false), this); })
    .attr("class", "line-halo")
    .style("stroke", null);

function interpolateLine(points) {
  var p0 = points[0],
      x0 = p0[0],
      y0 = p0[1],
      path = [p0];
  for (var i = 1, n = points.length, p1, x1, y1; i < n; ++i) {
    p1 = points[i];
    x1 = p1[0];
    y1 = p1[1];
    path.push("V", (y1) / 10, "L", x1, ",", (y1 *9) /10, "V", y1);
    x0 = x1;
    y0 = y1;
  }
  return path.join("");
}

  // initial permutation (split into left/right halves )
// since DES numbers bits starting at 1, we will ignore x[0]
var IP_perm = new Array( -1,
	58, 50, 42, 34, 26, 18, 10, 2,
	60, 52, 44, 36, 28, 20, 12, 4,
	62, 54, 46, 38, 30, 22, 14, 6,
	64, 56, 48, 40, 32, 24, 16, 8,
	57, 49, 41, 33, 25, 17, 9, 1,
	59, 51, 43, 35, 27, 19, 11, 3,
	61, 53, 45, 37, 29, 21, 13, 5,
	63, 55, 47, 39, 31, 23, 15, 7 );

// copy bits in a permutation
//   dest = where to copy the bits to
//   src  = Where to copy the bits from
//   perm = The order to copy/permute the bits
// note: since DES ingores x[0], we do also
  
 function permute( dest, src, perm )
{
  var i;
  var fromloc;

  for( i=1; i<perm.length; i++ )
  {
    fromloc = perm[i];
    dest[i] = src[fromloc];
  }
} 

  
  
function RSA_initial_permutation(array) {
var n = array.length,
      a =[array[0]],
      array1 = new Array(n+1);

a.extend(array)

  // initial permutation (split into left/right halves )
// since DES numbers bits starting at 1, we will ignore x[0]
//array1 = [
//a[58],a[50],a[42],a[34],a[26],a[18],a[10],a[2],
//a[60],a[52],a[44],a[36],a[28],a[20],a[12],a[4],
//a[62],a[54],a[46],a[38],a[30],a[22],a[14],a[6],
//a[0],a[56],a[48],a[40],a[32],a[24],a[16],a[8],
//a[57],a[49],a[41],a[33],a[25],a[17],a[9],a[1],
//a[59],a[51],a[43],a[35],a[27],a[19],a[11],a[3],
//a[61],a[53],a[45],a[37],a[29],a[21],a[13],a[5],
//a[63],a[55],a[47],a[39],a[31],a[23],a[15],a[7]]
var IP_perm = new Array( -1,
	58, 50, 42, 34, 26, 18, 10, 2,
	60, 52, 44, 36, 28, 20, 12, 4,
	62, 54, 46, 38, 30, 22, 14, 6,
	64, 56, 48, 40, 32, 24, 16, 8,
	57, 49, 41, 33, 25, 17, 9, 1,
	59, 51, 43, 35, 27, 19, 11, 3,
	61, 53, 45, 37, 29, 21, 13, 5,
	63, 55, 47, 39, 31, 23, 15, 7 );
    // handle the initial permutation
permute( array1,a, IP_perm );
//var fromloc
//  var i=0
//    for( i=0; //i<array0.length; i++ )
//    {
      //fromloc=IP_perm[i];
//    fromloc = perm[i];
//    dest[i] = src[fromloc];
//array1[i]=array0[i]
//    }
  array1.shift()
  return array1;
}

d3.select(self.frameElement).style("height", height + margin.top + margin.bottom + "px");

</script>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">

    <title>Linux Process Tree</title>

    <style>

  div.tooltip {
    position: absolute;
    text-align: left;
    width: 180px;
    height: 80px;
    padding: 2px;
    font: 12px sans-serif;
    background: lightsteelblue;
    border: 0px;
    border-radius: 8px;
    pointer-events: none;
  }
  
  .node circle {
    fill: #fff;
    stroke: steelblue;
    stroke-width: 3px;
  }

  .node text { font: 12px sans-serif; }

  .link {
    fill: none;
    stroke: #ccc;
    stroke-width: 2px;
  }
  
    </style>

  </head>

  <body>

<!-- load the d3.js library -->  
<script src="http://d3js.org/d3.v3.min.js"></script>
  
<script>

// ************** Generate the tree diagram   *****************
var margin = {top: 20, right: 120, bottom: 20, left: 120},
  width = 1200 - margin.right - margin.left,
  height = 900 - margin.top - margin.bottom;
  
var i = 0;
  duration = 750;

var tree = d3.layout.tree()
  .size([height, width]);

var diagonal = d3.svg.diagonal()
  .projection(function(d) { return [d.y, d.x]; });

var svg = d3.select("body").append("svg")
  .attr("width", width + margin.right + margin.left)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform", "translate(" + margin.left + "," + 
                                    margin.top + ")");

// load the external data
d3.csv("ps.csv", function(error, data) {

  // *********** Convert flat data into a nice tree ***************
  // create a name: node map
  var dataMap = data.reduce(function(map, node) {
    map[node.name] = node;
    return map;
  }, {});

  // create the tree array
  var treeData = [];
  data.forEach(function(node) {
    // add to parent
    var parent = dataMap[node.parent];
    if (parent) {
      // create child array if it doesn't exist
      (parent.children || (parent.children = []))
        // add node to child array
        .push(node);
    } else {
      // parent is null or missing
      treeData.push(node);
    }
  });

  root = treeData[0];
  root.x0 = height / 2;
  root.y0 = 0;
  
  update(root);
});

d3.select(self.frameElement).style("height", "500px");

function update(source) {

  // Compute the new tree layout.
  var nodes = tree.nodes(root).reverse(),
    links = tree.links(nodes);

  // Normalize for fixed-depth.
  nodes.forEach(function(d) { d.y = d.depth * 180; });

  // Update the nodes…
  var node = svg.selectAll("g.node")
    .data(nodes, function(d) { return d.id || (d.id = ++i); });

  // Enter any new nodes at the parent's previous position.
  var nodeEnter = node.enter().append("g")
    .attr("class", "node")
    .attr("transform", function(d) {
      return "translate(" + source.y0 + "," + source.x0 + ")"; })
    .on("click", click)
      // add tool tip for ps -eo pid,ppid,pcpu,size,comm,ruser,s
      .on("mouseover", function(d) {
        div.transition()
          .duration(200)
          .style("opacity", .9);
        div .html(
            "PID: " + d.name + "<br/>" + 
            "Command: " + d.COMMAND + "<br/>" +
            "User: " + d.RUSER + "<br/>" +
            "%CPU: " + d.CPU + "<br/>" +
            "Memory: " + d.SIZE
            )
          .style("left", (d3.event.pageX) + "px")
          .style("top", (d3.event.pageY - 28) + "px");
        })
      .on("mouseout", function(d) {
        div.transition()
          .duration(500)
          .style("opacity", 0);
        });

  nodeEnter.append("circle")
    .attr("r", 1e-6)
    .style("fill", function(d) {
      return d._children ? "lightsteelblue" : "#fff"; });

  nodeEnter.append("text")
    .attr("x", function(d) {
      return d.children || d._children ? -13 : 13; })
    .attr("dy", ".35em")
    .attr("text-anchor", function(d) { 
      return d.children || d._children ? "end" : "start"; })
    .text(function(d) { return d.COMMAND; })
    .style("fill-opacity", 1e-6);

// add the tool tip
  var div = d3.select("body").append("div")
    .attr("class", "tooltip")
    .style("opacity", 0);

  // Transition nodes to their new position.
  var nodeUpdate = node.transition()
    .duration(duration)
    .attr("transform", function(d) { 
        return "translate(" + d.y + "," + d.x + ")";
      });

  nodeUpdate.select("circle")
    .attr("r", 10)
    .style("fill", function(d) { 
	  return d._children ? "lightsteelblue" : "#fff"; });

  nodeUpdate.select("text")
    .style("fill-opacity", 1);

  // Transition exiting nodes to the parent's new position.
  var nodeExit = node.exit().transition()
    .duration(duration)
    .attr("transform", function(d) { return "translate(" + source.y + 
                                             "," + source.x + ")"; })
    .remove();

  nodeExit.select("circle")
    .attr("r", 1e-6);

  nodeExit.select("text")
    .style("fill-opacity", 1e-6);

  // Update the links…
  var link = svg.selectAll("path.link")
    .data(links, function(d) { return d.target.id; });

  // Enter any new links at the parent's previous position.
  link.enter().insert("path", "g")
    .attr("class", "link")
    .attr("d", function(d) {
      var o = {x: source.x0, y: source.y0};
      return diagonal({source: o, target: o});
    });

  // Transition links to their new position.
  link.transition()
    .duration(duration)
    .attr("d", diagonal);

  // Transition exiting nodes to the parent's new position.
  link.exit().transition()
    .duration(duration)
    .attr("d", function(d) {
      var o = {x: source.x, y: source.y};
      return diagonal({source: o, target: o});
    })
    .remove();

  // Stash the old positions for transition.
  nodes.forEach(function(d) {
  d.x0 = d.x;
  d.y0 = d.y;
  });
}

// Toggle children on click.
function click(d) {
  if (d.children) {
    d._children = d.children;
    d.children = null;
  } else {
    d.children = d._children;
    d._children = null;
  }
  update(d);
}

</script>
  
  </body>
</html>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>US Map of Nielsen Media Markets</title>
<style>
.background {
  fill: none;
  pointer-events: all;
}

.graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5;
  stroke-opacity: 1.0;
}

#dma-borders {
  fill: none;
  stroke: none;
  stroke-width: 0.7;
  stroke-linejoin: round;
  stroke-linecap: round;
  pointer-events: none;
}

div.d3-tip {
  position: absolute;     
  text-align: left;     
  width: 200px;          
  height: 55px;         
  padding: 6px;
  padding-left: 10px;       
  font: 10px sans-serif;    
  color: white;
  background: black; 
  border: 0px;    
  /*border-radius: 8px;     */
  pointer-events: none;   
}

span.index{
  font: 17px sans-serif; 
  margin-top: 4px;
  margin-bottom: 8px;
  display: inline-block;
}

h1 {
  font-family: sans-serif;
  font-size: 30px;
  padding-left: 30px;
  padding-top: 10px;
}

h2 {
  font-family: sans-serif;
  font-size: 12px;
  padding-left: 30px;
  font-weight: normal;
  padding-top: 10px;
}


#container {
  width: 800px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 50px;
  padding: 50px;
  background-color: white;
  border: 1px solid #ccc;
  /*box-shadow: 3px 3px 5px 6px #ccc;*/
}



</style>
</head>
<body>
<div id="textbox"></div>

<div id="container">

  <h1>Unite States DMA Targeting Model</h1>
  <h2>This map shows the US DMA breakdown. Color represents the over and under indexing number in this case. </h2>
  </div>
<script src="http://d3js.org/d3.v3.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>
var width = 800,
    height = 500;
// sets the type of view
var projection = d3.geo.albersUsa()
    .scale(1070) // size, bigger is bigger
    .translate([width / 2, height / 2]);

//creates a new geographic path generator
var path = d3.geo.path().projection(projection);
var xScale = d3.scale.linear()
    .domain([0, 7])
    .range([0, 500]);

var xAxis = d3.svg.axis()
    .scale(xScale)
    .orient("bottom")
    .tickSize(13)
    .tickFormat(d3.format("0.0f"));

var overIdx = d3.rgb(53, 135, 121);
var underIdx = d3.rgb(203, 67, 67);
var equalIdx = d3.rgb(222, 222, 222);


//set svg window
var svg = d3.select("#container")
      .append("svg")
      .attr("width", width)
      .attr("height", height)

var graticule = d3.geo.graticule()
    .extent([[-98 - 45, 38 - 45], [-98 + 45, 38 + 45]])
    .step([5, 5]);

var div = d3.select("#container")
          .append("div")
          .attr("class", "d3-tip")
          .style("opacity", 0);

// adding a blank background
svg.append("rect")
    .datum(graticule)
    .attr("class", "background")
    .attr("width", width)
    .attr("height", height)
   // .on("click", clicked);

//declare g as our appended svg
var g = svg.append("g");

var defaultFill = "#aaa";

d3.json("nielsentopo.json", function(error, dma) {

  var nielsen = dma.objects.nielsen_dma.geometries;

  var dmaData = [];

  // adding data from tv json (number of TVs, etc) to map json
  d3.json("DMAdata.json", function(error, insights){
    var maxIdx = -1;
    var minIdx = 10000; //init

    for(var h = 0; h < insights.length; h++){
      var dmaElem = {};
      if(insights[h].type == "Geo Market"){
        var k = insights[h].key.split(":");
        var code = k[1];
        var name = insights[h].name;
        var cidx = insights[h].core;
        var coreIdx = cidx.feature_index;
        var coreReach = cidx.feature_interests_reach;
        dmaElem.code = code;
        dmaElem.coreIdx = coreIdx;
        dmaElem.coreReach = coreReach;
        dmaElem.name = name;
        dmaElem.color = equalIdx;
        dmaData.push(dmaElem);
        if(maxIdx < dmaElem.coreIdx){
          maxIdx = dmaElem.coreIdx;
        }
        if(minIdx > dmaElem.coreIdx){
          minIdx = dmaElem.coreIdx;
        }
      }
    }

    var color = d3.scale.linear()
      .domain([minIdx, 1.0, maxIdx])
      .range([underIdx, equalIdx, overIdx]);

    // console.log(minIdx, maxIdx);

    for(var i=0; i < dmaData.length; i++){
      dmaData[i].color = color(dmaData[i].coreIdx);
    }

    // console.log(dmaData);
    for (var i = 0; i < nielsen.length; i++){
      var dma_code = nielsen[i].id;

      for(var j=0; j < dmaData.length; j++){
        if(dma_code == dmaData[j].code){
          nielsen[i].properties[dma_code] = dmaData[j].code;
          nielsen[i].properties["coreIdx"] = dmaData[j].coreIdx;
          nielsen[i].properties["coreReach"] = dmaData[j].coreReach;
          nielsen[i].properties["color"] = dmaData[j].color;
          nielsen[i].properties["name"] = dmaData[j].name;
        }
      }
    }

    

    // console.log(nielsen.length);

  dma.objects.nielsen_dma.geometries = nielsen;

  g.append("g")
    .attr("id", "dmas")
    .selectAll("path")
    .data(topojson.feature(dma, dma.objects.nielsen_dma).features)
    .enter()
    .append("path")
    .attr("d", path);
    //.on("click", clicked)
     

    
    g.selectAll("path")
      .on("mouseover", function(d){

      var prop = d.properties;  
      d3.select(this)
      .attr("fill", d3.rgb(230, 230, 230));

      div.transition()    
          .duration(200)    
          .style("opacity", .8);   
      div.html(function(d){
            var string = prop.dma1 + "<br>"
            string += "<span class='index'>" + d3.format("%")(prop.coreIdx) + "</span><br>"
            string += "Reach: " + prop.coreReach;
            return string; 
          })
          .style("left", (d3.event.pageX) + "px")
          .style("top", (d3.event.pageY) + "px");

      // console.log(prop);
      /* side box for info, using tooltips now
      var string = "<p><strong>Market Area Name</strong>: " + prop.name + "</p>";
      string += "<p><strong>% core index</strong>: " + d3.format('%')(prop.coreIdx) + "</p>";
      string += "<p><strong>core reach</strong>: " + prop.coreReach + "</p>";

      d3.select("#textbox")
        .html("")
        .append("text")
        .html(string);
      */
    })

    .on("mouseout", function(d){
      var prop = d.properties;  
      d3.select(this)
      .attr("fill", function(d){
        return d.properties.color;
      });
      div.transition()    
          .duration(200)    
          .style("opacity", 0); 
    })
    
    .attr("opacity", 1)
    .attr("fill", function(d){
      // console.log(d.color);
      return d.properties.color;
    });

  // add dma borders
    g.append("path", ".graticule")
      .datum(topojson.mesh(dma, dma.objects.nielsen_dma, function(a, b) { 
        return true;
      }))
      .attr("id", "dma-borders")
      .attr("d", path);
  })
})

// via http://stackoverflow.com/a/2901298
function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

</script>
</body>
</html>

<!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://syntagmatic.github.io/parallel-coordinates/d3.parcoords.css'>
    
    <script src='http://d3js.org/d3.v2.min.js' type='text/javascript'></script>
    <script src='http://syntagmatic.github.io/parallel-coordinates/d3.parcoords.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart2290584f2d89' class = 'rChart parcoords'></div>    
    <script id="brushing">
var params = {
 "dom": "chart2290584f2d89",
"width": "800",
"height": "400",
"padding": {
 "top":     24,
"left":    100,
"bottom":     12,
"right":    100 
},
"color": d3.scale.category10(),
"id": "chart2290584f2d89",
"data": [
 {
 "since 2007":   0.47,
"tckrs": "VEA",
"2007":   -5.3,
"2008":  -44.9,
"2009":   40.2,
"2010":   17.1,
"2011":   -9.3,
"2012":   16.6,
"2013":   11.2,
"2014":    2.5 
},
{
 "since 2007":    1.9,
"tckrs": "EEM",
"2007":   21.3,
"2008":  -49.7,
"2009":   71.8,
"2010":   21.5,
"2011":   -6.3,
"2012":    6.9,
"2013":  -11.7,
"2014":    1.4 
},
{
 "since 2007":   5.95,
"tckrs": "SPY",
"2007":   -2.7,
"2008":  -38.3,
"2009":   32.7,
"2010":   22.2,
"2011":    4.2,
"2012":   16.5,
"2013":   21.4,
"2014":    5.4 
} 
],
"colorby": "tckrs",
"range": [ "SPY", "EEM", "VEA" ],
"colors": [ "#CA0020", "gray", "#0571B0" ] 
}

var getColors = params.color
  //.domain(params.range)
  //.range(params.colors)
  //.interpolate(d3.interpolateLab);

var color = function(d) { return getColors(d[params.colorby]); };

  d3.parcoords()("#" + params.dom)
    .width(params.width)
    .height(params.height)
    .margin(params.padding)
    .data(params.data)
    .color(color)
    .alpha(0.4)
    .render()
    .shadows()
    .brushable()  // enable brushing
    //.reorderable(); // enable moving axes
</script>
    
    
     <script>
     d3.selectAll("svg").selectAll("text")
     .style("font-size","10px")
     </script>
         
  </body>
</html><!DOCTYPE html>
<head>
	<meta charset="utf-8">
	<title>What per cent of people per North American country use the Internet?</title>
	<script src="d3.v3.js"></script>
	<script src="jquery-2.0.3.min.js"></script>
	<link rel="stylesheet" href="style.css">
</head>
<body>
<article>

	<div id="tooltip" class="hidden">
		<p id="perCent"></p>
	</div>
</article>
<div class="controls" id="yearSelect">
 		<ul>
 		
 		 	<li>  
 		 		<button type="button" class="btn" data-value="2007">2007</button>
 		 	</li>
 		 	<li>  
 		 		<button type="button" class="btn highlight" data-value="2012">2012</button>
 		 	</li>
 		 
 		 	
 		 </ul>
 	</div>
<div id="legend">

	<h1>UN Data: Per cent of people using the Internet</h1>
</div>
<script src="vis.js"></script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  font: 13px "helvetica neue";
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 250, right: 20, bottom: 250, left: 20},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var superscript = "⁰¹²³⁴⁵⁶⁷⁸⁹",
    formatPower = function(d) { return (d + "").split("").map(function(c) { return superscript[c]; }).join(""); };

var x = d3.scale.log()
    .domain([1e0, 1e9])
    .range([0, width]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(10, function(d) { return 10 + formatPower(Math.round(Math.log(d) / Math.LN10)); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

</script>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    .axis path,
    .axis line {
      fill: none;
      stroke: #000;
      shape-rendering: crispEdges;
    }

    .axis text {
      font: 10px sans-serif;
    }
  </style>
</head>

<body>

  <script>
    d3.csv("o-ring.txt", function(data){
    // data that you want to plot, I've used separate arrays for x and y values
    var xdata = [5, 10, 15, 20],
        ydata = [3, 17, 4, 6];

    var x = function(d){ return d.temp; },
    	  y = function(d){ return d.damage; };
      
    // size and margins for the chart
    var margin = {top: 20, right: 15, bottom: 60, left: 60}
      , width = 960 - margin.left - margin.right
      , height = 500 - margin.top - margin.bottom;

    // x and y scales, I've used linear here but there are other options
    // the scales translate data values to pixel values for you
    var x = d3.scale.linear()
              .domain([0, d3.max(data, x)])  // the range of the values to plot
              .range([ 0, width ]);        // the pixel range of the x-axis

    var y = d3.scale.linear()
              .domain([0, d3.max(data, y)])
              .range([ height, 0 ]);

    // the chart object, includes all margins
    var chart = d3.select('body')
        .append('svg:svg')
        .attr('width', width + margin.right + margin.left)
        .attr('height', height + margin.top + margin.bottom)
        .attr('class', 'chart')

    // the main object where the chart and axis will be drawn
    var main = chart.append('g')
        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')
        .attr('width', width)
        .attr('height', height)
        .attr('class', 'main')   

    // draw the x axis
    var xAxis = d3.svg.axis()
        .scale(x)
        .orient('bottom');

    main.append('g')
        .attr('transform', 'translate(0,' + height + ')')
        .attr('class', 'main axis date')
        .call(xAxis);

    // draw the y axis
    var yAxis = d3.svg.axis()
        .scale(y)
        .orient('left');

    main.append('g')
        .attr('transform', 'translate(0,0)')
        .attr('class', 'main axis date')
        .call(yAxis);

    // draw the graph object
    var g = main.append("svg:g"); 

    g.selectAll("scatter-dots")
      .data(ydata)  // using the values in the ydata array
      .enter().append("svg:circle")  // create a new circle for each value
          .attr("cy", function (d) { return y(d); } ) // translate y value to a pixel
          .attr("cx", function (d,i) { return x(xdata[i]); } ) // translate x value
          .attr("r", 10) // radius of circle
          .style("opacity", 0.6); // opacity of circle
      
    });
  </script>
</body>


Not Found<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10, "%");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", type, function(error, data) {
  if (error) throw error;

  x.domain(data.map(function(d) { return d.letter; }));
  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Frequency");

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.letter); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.frequency); })
      .attr("height", function(d) { return height - y(d.frequency); });
});

function type(d) {
  d.frequency = +d.frequency;
  return d;
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  fill: none;
  stroke-linejoin: round;
}

.sphere,
.graticule {
  stroke: #aaa;
}

.equator {
  stroke: red;
  stroke-width: 2px;
}

</style>
<body>

<script src="http://d3js.org/d3.v3.js"></script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js" type="text/javascript"></script>
<script src="http://d3js.org/topojson.v1.js"></script>

<script>

var width = 1060,
    height = 600;


var projection = interpolatedProjection(
    d3.geo.orthographic()
        .rotate([10, -10])
        .center([-10, 10])
        .scale(240)
        .translate([width / 2, height / 2]),


      d3.geo.equirectangular()
        .scale(153)
        .translate([width / 2, height / 2])
      //  .precision(.1);

/*
        d3.geo.conicEqualArea()//d3.geo.albers()
=======
    d3.geo.albers()
>>>>>>> 6a21d8059528c81f8c9b7ad586cdca54b5bcbc42
        .scale(145)
        .translate([width / 2, height / 1.5])
  */
        );

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

    var feature = svg.selectAll("path");




d3.json('brazilWor.json',function(world){


console.log(topojson.feature(world,world.objects.countries110).features)
  svg.selectAll('.coun')
  .data(topojson.feature(world,world.objects.countries110).features).enter().append('path')
  .attr('d',path)
  .on('hover',function(){
    //    console.log(this)
    return this.style('fill','purple');
  })
  .attr('class',function(d,i){
    //    console.log(i + 'this is for the countries class');
    return 'coun'})
    .style('fill', 'blue');

console.log(world);


svg.append("path")
.datum({type: "Sphere"})
.attr("class", "sphere")
.attr("d", path);


//d3.json('brazilWor.json',function(json){

//console.log(json);

svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

svg.append("path")
    .datum({type: "LineString", coordinates: [[-180, 0], [-90, 0], [0, 0], [90, 0], [180, 0]]})
    .attr("class", "equator")
    .attr("d", path);



feature = svg.selectAll("path");



animation();


})


function animation() {
  svg.transition()
      .duration(10500)
      .tween("projection", function() {
        return function(_) {
          projection.alpha(_);
          feature.attr("d", path);
        };
      })
    .transition()
      .duration(2500)
      .each("end", animation);
}



function interpolatedProjection(a, b) {
  var projection = d3.geo.projection(raw).scale(1),
      center = projection.center,
      translate = projection.translate,
      α;

  function raw(λ, φ) {
    var pa = a([λ *= 180 / Math.PI, φ *= 180 / Math.PI]), pb = b([λ, φ]);
    return [(1 - α) * pa[0] + α * pb[0], (α - 1) * pa[1] - α * pb[1]];
  }

  projection.alpha = function(_) {
    if (!arguments.length) return α;
    α = +_;
    var ca = a.center(), cb = b.center(),
        ta = a.translate(), tb = b.translate();
    center([(1 - α) * ca[0] + α * cb[0], (1 - α) * ca[1] + α * cb[1]]);
    translate([(1 - α) * ta[0] + α * tb[0], (1 - α) * ta[1] + α * tb[1]]);
    return projection;
  };

  delete projection.scale;
  delete projection.translate;
  delete projection.center;
  return projection.alpha(0);
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.roads {
  fill: none;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.major-highway { stroke: #525252; stroke-width: 1.5px; }
.secondary-highway { stroke: #737373; }
.road { stroke: #bdbdbd; }
.beltway { stroke: #737373; }
.ferry-route { stroke: #4393c3; stroke-width: 1.5px; }

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1100)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);


d3.json("usroads.json", function(error, usroads) {
  if (error) throw error;

  svg.append("g")
    .selectAll("path")
      .data(topojson.feature(usroads, usroads.objects.usa).features)
    .enter().append("path")
      .attr("d", path)
      .style("fill","none")
      .style("stroke","#252525")
      .style("stroke-width",1);

  svg.append("g")
    .selectAll("path")
      .data(topojson.feature(usroads, usroads.objects.roads).features)
    .enter().append("path")
      .attr("d", path)
      .attr("class",function(d) { return "roads " + d.properties.type.toLowerCase().split(' ').join('-'); });


});

d3.select(self.frameElement).style("height", height + "px");

</script><!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.albers()
    .scale(1000);

var canvas = d3.select("body").append("canvas")
    .attr("width", width)
    .attr("height", height);

var context = canvas.node().getContext("2d");

var path = d3.geo.path()
    .projection(projection)
    .context(context);

d3.json("us.json", function(error, us) {
  if (error) { throw error; }

  var imageObj = new Image();
  imageObj.onload = function() {
    var pattern = context.createPattern(imageObj, 'repeat');

    path(topojson.feature(us, us.objects.counties));
    context.fillStyle = pattern;
    context.fill();
  };
  imageObj.src = 'http://lorempixel.com/output/abstract-q-c-640-480-6.jpg';
});

</script><!DOCTYPE html>
<html lang="en">
   <head>
      <!------------------------------------------------------------------>
      <!-- BEGIN HEADER                                                 -->
      <!------------------------------------------------------------------>
      <meta charset="utf-8">
      <title>Predicting healthcare services</title>
      <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
      <link rel="stylesheet" type="text/css" href="index.css">
      <!------------------------------------------------------------------>
      <!-- END HEADER                                                   -->
      <!------------------------------------------------------------------>
   </head>
   <body>
      <!------------------------------------------------------------------>
      <!-- BEGIN BODY                                                   -->
      <!------------------------------------------------------------------>

      <script type="text/javascript">

         /////////////////////////////////////////////////////////////////////  
         // GLOBAL VARIABLES
         ///////////////////////////////////////////////////////////////////// 

         var dv={};

         // Services
         dv.services=[{name: "A"},{name: "B"},{name: "C"},{name: "D"},{name: "E"},
                      {name: "F"},{name: "G"},{name: "H"},{name: "I"},{name: "J"},
                      {name: "K"},{name: "L"},{name: "M"},{name: "N"}],
         dv.Nservices=dv.services.length;

         // Positioning of Elements
         dv.plot={};
         dv.plot.width=100;
         dv.plot.xspacing=50;
         dv.plot.yspacing=60;
         dv.plot.xoff=40;
         dv.plot.yoff=30;
         dv.plot.Nx=5; 
         dv.plot.Ny=Math.ceil(dv.Nservices/dv.plot.Nx);

         dv.svg={};
         dv.svg.width=dv.plot.xoff+(dv.plot.width+dv.plot.xspacing)*dv.plot.Nx;
         dv.svg.height=dv.plot.yoff+(dv.plot.width+dv.plot.yspacing)*dv.plot.Ny;


         // Add a header
         d3.select("body").append("h1")
           .style("margin-left",(dv.plot.xoff/2)+"px")
           .text("Predicting healthcare services");

         // Add a description
         d3.select("body").append("p")
           .style("width",(dv.svg.width-dv.plot.xspacing-dv.plot.xoff/2)+"px")
           .style("margin-left",(dv.plot.xoff/2)+"px")
           .html("Driven Data hosted a <a href=\"http://www.drivendata.org/competitions/6/\" target=\"_blank\">competition</a> in 2015 on behalf of Planned Parenthood to predict reproductive health care services accessed by women.  The features were taken from the CDC's National Survey of Family Growth and the data were obfuscated to the competitors.  The objective was to predict whether women would access any of 14 different services using the features provided.  My goal was to see how well a support vector machine would perform for this task and I was able to achieve a ranking of 74 out of 491 total submissions (15%).  My analysis was completed using Python, Numpy, and Scikit-learn. <br><br> Below are the <a href=\"https://en.wikipedia.org/wiki/Receiver_operating_characteristic\" target=\"_blank\">ROC curves</a> for my predictions for each of the 14 services.  The larger the area under the curve (AUC), the better the predictive power.  AUC values are listed for each plot.  Since testing labels were not provided for the competitors, I used a cross validation data set (a small portion of the training data that was withheld from training and used to optimize model parameters) to produce these plots.");  



         // Create SVG
         dv.svg=d3.select("body").append("svg")
                  .attr("class","plots")
                  .attr("id","svg_plots")
                  .attr("width",dv.svg.width+"px")
                  .attr("height",dv.svg.height+"px")
                  .attr("style","position:relative; left: 0px;");
        

         // Create linear gradient fill
         var grad=dv.svg.append("svg:defs").append("svg:linearGradient")
                                           .attr("id","grad")
                                           .attr("x1","0%").attr("y1","0%").attr("x2","100%").attr("y2","100%");
         grad.append("stop")
             .attr("offset","0%")
             .attr("stop-color","rgb(255,209,56)")
             .attr("stop-opacity",1);
         grad.append("stop")
             .attr("offset","100%")
             .attr("stop-color","rgb(255,209,56)")
             .attr("stop-opacity",0);


         /////////////////////////////////////////////////////////////////////  
         // LOAD THE DATA
         /////////////////////////////////////////////////////////////////////  
         d3.csv("DrivenDataPPFA_ROC.csv", function(error,rdata) {
         d3.csv("DrivenDataPPFA_AUC.csv", function(error,adata) {
            if (error) return console.log(error);

            // Add (spec,sens)=(0,0) so that plots show full area
            var hold={threshold: 0, sensA: 0, specA: 0, sensB: 0, specB: 0, sensC: 0, specC: 0, sensD: 0, specD: 0, sensE: 0, specE: 0, 
                      sensF: 0, specF: 0, sensG: 0, specG: 0, sensH: 0, specH: 0, sensI: 0, specI: 0, sensJ: 0, specJ: 0, sensK: 0, specK: 0, 
                      sensL: 0, specL: 0, sensM: 0, specM: 0, sensN: 0, specN: 0};
            rdata.push(hold);

            // Plot everything
            var ix=0,iy=0,xx=0,yy=0,auc=0;
            dv.services.map(function(d,i){
               ix=i%dv.plot.Nx;
               iy=Math.floor(i/dv.plot.Nx);
               xx=dv.plot.xoff+(dv.plot.xspacing+dv.plot.width)*ix;
               yy=dv.plot.yoff+(dv.plot.yspacing+dv.plot.width)*iy;
               auc=adata[i].AUC;
               console.log(auc);
               addPlot(d.name,xx,yy,dv.plot.width,rdata,auc);
            });

         }); //adata d3.csv("DrivenDataPPFA_AUC.csv"
         }); //rdata d3.csv("DrivenDataPPFA_ROC.csv"



         /////////////////////////////////////////////////////////////////////  
         // FUNCTIONS
         /////////////////////////////////////////////////////////////////////

         //
         // Add Plot to SVG
         //
         function addPlot(service,xx,yy,ww,rdata,AUCvalue)
         {
            // Some Positioning Information
            var xlabelpad=25, ylabelpad=15, titlepad=0;

            // Scales and Axes
            var xScale=d3.scale.linear().range([xx,xx+ww]).domain([0,1]);
            var yScale=d3.scale.linear().range([yy+ww,yy]).domain([0,1]);

            var xAxis=d3.svg.axis()
                            .scale(xScale) 
                            .tickValues([0,1])
                            .tickFormat(d3.format(".0d"))
                            .orient("bottom");
            var yAxis=d3.svg.axis()
                            .scale(yScale)
                            .tickValues([0,1])
                            .tickFormat(d3.format(".0d"))
                            .orient("left");

            // Plots
            var line = d3.svg.line()
                             .x(function(d) { return xScale(1.0-(+d["spec"+service])); })
                             .y(function(d) { return yScale(+d["sens"+service]); });
            dv.svg.append("path")
                  .datum(rdata)
                  .attr("class", "plot line service"+service)
                  .attr("d", line)
                  .style("fill","url(#grad)");

            dv.svg.append("g")
                  .attr("class","plot x axis service"+service)
                  .call(xAxis)
                  .attr("transform","translate(0,"+(yy+ww)+")");
            dv.svg.append("text")
                  .attr("class","plot x label service"+service)
                  .attr("x",xx+ww/2)
                  .attr("y",yy+ww+xlabelpad)
                  .text("1-Specificity")
                  .attr("text-anchor","middle");

            dv.svg.append("g")
                  .attr("class","plot y axis service"+service)
                  .call(yAxis)
                  .attr("transform","translate("+xx+",0)");
            dv.svg.append("text")
                  .attr("class","plot y label service"+service)
                  .attr("x",xx-ylabelpad)
                  .attr("y",yy+ww/2)
                  .text("Sensitivity")
                  .attr("transform","rotate(-90,"+(xx-ylabelpad)+","+(yy+ww/2)+")")
                  .attr("text-anchor","middle");

            dv.svg.append("text")
                  .attr("class","plot y title service"+service)
                  .attr("x",xx+ww/2)
                  .attr("y",yy-titlepad)
                  .text("Service "+service)
                  .attr("text-anchor","middle");

            var fmt=d3.format(".3r");
            dv.svg.append("text")
                  .attr("class","plot annotation service"+service)
                  .attr("x",xx+5)
                  .attr("y",yy+ww-5)
                  .text("AUC="+fmt(+AUCvalue))
                  .attr("text-anchor","start");
console.log(AUCvalue);


         }

      </script>

      <!------------------------------------------------------------------>
      <!-- END BODY                                                     -->
      <!------------------------------------------------------------------>
   </body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title></title>
    <style>
        canvas {
            border: 1px solid rgba(0,0,0,0.5);
        }
        #results, #container {
            display: inline-block;
            margin: 15px;
        }
        p {
            margin: 15px;
        }
        td {
            border: 1px solid #bbb;
            text-align: right;
        }
        .header {
            font-weight: bold;
        }
    </style>
</head>
<body>
<p id="user-agent"></p>
<div id="container"></div>
<table id="results">
    <tr class="header">
        <td>Circles</td>
        <td>FPS</td>
        <td>repaint [ms]</td>
    </tr>
</table>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pixi.js/3.0.7/pixi.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tinycolor/1.1.2/tinycolor.min.js"></script>
<script src="https://gitcdn.xyz/repo/cool-Blue/d3-lib/master/filters/shadow.js"></script>
<div id="log1"></div>
<div id="log2"></div>
<script>
    $(function (){
        /* global requestAnimationFrame, $, PIXI, canvg */
        window.requestAnimationFrame = (function() {
            return window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function(/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {
                    return window.setTimeout(callback, 1000/60);
                };
        })();
        var tests = [250, 500, 750, 1000, 2000, 2041, 2042];
        var refTest = tests[0];

        var maxRadius = 30,
            c20 = d3.scale.category20(),
            maxX = 680,
            maxY = 400,
            renderer;

        function addRecord(count) {
            var results = d3.select("#results")
                .append("tr").selectAll("td").data([d3.format(",f")(count),"",""])
            results.enter().append("td")
                .text(function(d){return d});

            return function updateResults(time, steps) {
                var repaint = time / steps;
                results.datum([count, (1000 / repaint).toFixed(2), repaint.toFixed(2)])
                    .text(function(d, i){return this.textContent || d[i]});
            }
        }

        // set up webgl
        renderer = new PIXI.CanvasRenderer(maxX, maxY);
        $("#container").append(renderer.view);
        renderer.backgroundColor = +("0x" + tinycolor("rgba(255,255,255,0)").toHex());

        dropShadow = new PIXI.filters.DropShadowFilter();
        dropShadow.color = "0x" + tinycolor("steelblue").toHex();
        dropShadow.angle = Math.PI/4;
        dropShadow.blur = 4;
        dropShadow.distance = 5;

        function test() {
            var count,
                maxSteps = 100,
                steps = 0,
                stage = new PIXI.Container(),
                startTime,
                circle = {},
                s,
                v = 20,
                constraints = new PIXI.Graphics(),
                background = new PIXI.Container();

            if (tests.length > 0) {
                count = tests.shift();
            } else {
                return;
            }
            var x = d3.scale.linear()
                    .range([0, maxX])
                    .domain([maxX * 0.1, maxX * 0.9]),
                y = d3.scale.linear()
                    .range([0, maxY])
                    .domain([maxY * 0.1, maxY * 0.9]),
                col = d3.range(20).map(function(c){
                    return c20(c).replace("#", "0x")
                }),
                species, r = Math.pow(1.1, -(count - refTest) / refTest) * (1 - 1/10) + 1/10,
                updateResults = addRecord(count);


            constraints.lineStyle(1, 0, 0.5)
                .drawRect(x.invert(0), y.invert(0), x.invert(maxX) - x.invert(0), y.invert(maxY) - y.invert(0));
            background.addChild(constraints);

            d3.range(count).forEach(function(i){
                var rMax = maxRadius * r;
                circle = sphere(c20(Math.round((species = Math.random())*19)), (rad = (maxRadius * r).toFixed() * (s = species + 0.25)));
                circle.data = {
                    x: x.invert(rMax + (maxX - rMax*2) * Math.random()),
                    y: y.invert(rMax + (maxY - rMax*2) * Math.random()),
                    r: rMax * (s = species + 0.25) ,
                    vx: (Math.random() - 0.5) * v,
                    vy: (Math.random() - 0.5) * v
                };
                circle.scale.set(s);
                circle.anchor.set(0.5);
                circle.interactive = true;
                circle.index = i;
                circle
                    .on("mouseover", onMouseOver)
                    .on("mouseout", onMouseOut)
                    // events for drag start
                    .on('mousedown', onDragStart)
                    .on('touchstart', onDragStart)
                    // events for drag end
                    .on('mouseup', onDragEnd)
                    .on('mouseupoutside', onDragEnd)
                    .on('touchend', onDragEnd)
                    .on('touchendoutside', onDragEnd)
                    // events for drag move
                    .on('mousemove', onDragMove)
                    .on('touchmove', onDragMove);
                stage.addChild(circle);
            });

            // Start animation.
            startTime = new Date().getTime();
            requestAnimationFrame(step);
            function step() {
                var time;
                stage.children.forEach(function(c){
                    if(!c.fixed){
                        if (x(c.data.x) >= (maxX - c.data.r) || x(c.data.x) <= c.data.r) c.data.vx *= -1;
                        if (y(c.data.y) >= (maxY - c.data.r) || y(c.data.y) <= c.data.r) c.data.vy *= -1;
                        c.data.x += c.data.vx;
                        c.data.y += c.data.vy;
                        c.position.x = c.data.x;
                        c.position.y = c.data.y;
                    } else {
                        c.data.x = c.position.x;
                        c.data.y = c.position.y;
                }
                });
                renderer.render(stage);
                renderer.clearBeforeRender = false;
                renderer.render(background);
                renderer.clearBeforeRender = true;

                if (steps < maxSteps) {
                    steps++;
                    requestAnimationFrame(step);
                } else {
                    time = new Date().getTime() - startTime;
                    updateResults(time, maxSteps);
                    test();
                }
            }
            function onMouseOver(event) {
                this.fixed |= 4;
                console.log([myName(arguments), this.index].join(": "))
                this.data.x = this.position.x -= this.data.vx;
                this.data.y = this.position.y -= this.data.vy;
                bringToFront.call(stage.children, this);
            }
            function bringToFront(c){
                this.splice(c.index, 1);
                this.push(c);
                this.forEach(function(d, i) {d.index = i});
            }
            function onMouseOut(event) {
                console.log(["\t", myName(arguments), this.index].join(": "))
                this.fixed &= ~4;
            }
            function onDragStart(event) {
                console.log([myName(arguments), this.index].join(": "))
                // store a reference to the data
                // the reason for this is because of multitouch
                // we want to track the movement of this particular touch
                this.eventData = event.data;
                this.alpha = 0.5;
                this.fixed  |= 2;
            }

            function onDragEnd() {
                console.log(["\t", myName(arguments), this.index].join(": "))
                this.alpha = 1;
                this.fixed &= ~6;
                // set the interaction data to null
                this.eventData = null;
            }

            function onDragMove() {
                if (this.fixed & 2) {
                    console.log([myName(arguments), this.index].join(": "))
                    var newPosition = this.eventData.getLocalPosition(this.parent);
                    this.position.x = newPosition.x;
                    this.position.y = newPosition.y;
                }
            }
        }
        $(function () {
            $("#user-agent").text(navigator.userAgent);
            test();
        });
        function sphere(color, radius){
            var size = (radius * 2 + 3),
                circleCanvas = document.createElement("canvas");
            d3.select(circleCanvas).attr({width: size, height: size})
            filters.cSphere(circleCanvas.getContext("2d"), size/2, size/2, radius, color);
            return new PIXI.Sprite((new PIXI.Texture.fromCanvas(circleCanvas)));
        }
        function myName(args) {
            return /function\s+(\w*)\(/.exec(args.callee)[1];
        }

    })
</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Module 4 - Adding Scales and Axes</title>
    <script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
    <style type="text/css">
      
      body {
      background-color: white;
      font-family: Helvetica, Arial, sans-serif;
      }

      h1 {
      font-size: 24px;
      margin: 0;
      }

      p {
      font-size: 14px;
      margin: 10px 0 0 0;
      }

      svg {
      background-color: white;
      }

      rect:hover {
      fill: orange;
      }
      
      .axis path,
      .axis line {
      fill: none;
      stroke: black;
      shape-rendering: crispEdges;
      }
      
      .axis text {
      font-family: sans-serif;
      font-size: 11px;
      }

      .y.axis path,
      .y.axis line {
      opacity: 0;
      }

    </style>
  </head>
  <body>

    <h1>Colombia CPI by Main Cities</h1>

    <p>Colombia Customer Price &ldquo;(CPI)&rdquo; index by country main cities. Source: <a href="http://www.dane.gov.co/index.php/precios-e-inflacion/indice-de-precios-al-consumidor">DANE</a>, March 2015</p>

    <script type="text/javascript">		
      var w = 700, h = 600;
      var padding = [ 20, 10, 30, 120 ];  //Top, right, bottom, left
      var widthScale = d3.scale.linear().range([0,w-padding[1]-padding[3]]);
      var heightScale = d3.scale.ordinal().rangeRoundBands([padding[0],h-padding[2]],0.1);
      var xAxis = d3.svg.axis().scale(widthScale).orient("bottom");
      var yAxis = d3.svg.axis().scale(heightScale).orient("left");

      var svg = d3.select("body").append("svg").attr("width", w).attr("height", h);

      d3.csv("col_cpi.csv", function(data){
	  data.sort(function(a, b) {
	      return d3.descending(+a.monthlyCPI, +b.monthlyCPI);
	  });
	  widthScale.domain([0,d3.max(data, function(d){
	      return +d.monthlyCPI;
	  })]);
	  heightScale.domain(data.map(function(d) { return d.city; } ));

	  var rects = svg.selectAll("rect").data(data).enter().append("rect");
	  rects.attr("x", padding[3]).attr("y", function(d){
	      return heightScale(d.city);
	  }).attr("width", function(d){
	      return widthScale(d.monthlyCPI);
	  }).attr("height", heightScale.rangeBand()).attr("fill", "teal")
	  .append("title").text(function(d){
	      return d.city + "'s Month CPI is " + d.monthlyCPI;
	  });

	  svg.append("g").attr("class", "x axis")
	     .attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
	     .call(xAxis);

	  svg.append("g").attr("class", "y axis")
	     .attr("transform", "translate(" + padding[3] + ",0)")
	     .call(yAxis);
      });

    </script>

  </body>
</html>
<script>
  if (typeof ts_embed === 'undefined') {
    document.write("<div id='ts-embed-1305221934214-script'><script src='http://tiles.mapbox.com/bclc/api/v1/embed.js?api=ol&size%5B%5D=500&size%5B%5D=300&center%5B%5D=140.83078056492&center%5B%5D=37.176345739761&center%5B%5D=7&layers%5B%5D=bclc-japan&options%5B%5D=legend&options%5B%5D=zoompan&options%5B%5D=tooltips&options%5B%5D=zoomwheel&el=ts-embed-1305221934214'></scr" + "ipt></div>");
    ts_embed = true;
  }
</script><!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500;

var nodes = d3.range(200).map(function() { return {radius: Math.random() * 12 + 4}; }),
    root = nodes[0],
    color = d3.scale.category10();

root.radius = 0;
root.fixed = true;

var force = d3.layout.force()
    .gravity(0.05)
    .charge(-100)
    .nodes(nodes)
    .size([width, height]);

force.start();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.selectAll("circle")
    .data(nodes.slice(1))
  .enter().append("circle")
    .attr("r", function(d) { return d.radius; })
    .style("fill", function(d, i) { return color(i % 3); });

force.on("tick", function(e) {
  var q = d3.geom.quadtree(nodes),
      i = 0,
      n = nodes.length;

  while (++i < n) q.visit(collide(nodes[i]));

  svg.selectAll("circle")
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });
});

svg.on("mousemove", function() {
  var p1 = d3.mouse(this);
  root.px = p1[0];
  root.py = p1[1];
  force.resume();
});

function collide(node) {
  var r = node.radius + 16,
      nx1 = node.x - r,
      nx2 = node.x + r,
      ny1 = node.y - r,
      ny2 = node.y + r;
  return function(quad, x1, y1, x2, y2) {
    if (quad.point && (quad.point !== node)) {
      var x = node.x - quad.point.x,
          y = node.y - quad.point.y,
          l = Math.sqrt(x * x + y * y),
          r = node.radius + quad.point.radius;
      if (l < r) {
        l = (l - r) / l * .5;
        node.x -= x *= l;
        node.y -= y *= l;
        quad.point.x += x;
        quad.point.y += y;
      }
    }
    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
  };
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.background {
  fill: none;
  pointer-events: all;
}

#states {
  fill: #aaa;
}

#states .active {
  fill: orange;
}

#state-borders {
  fill: none;
  stroke: #fff;
  stroke-width: 1.5px;
  stroke-linejoin: round;
  stroke-linecap: round;
  pointer-events: none;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500,
    centered;

var projection = d3.geo.albersUsa()
    .scale(1070)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("rect")
    .attr("class", "background")
    .attr("width", width)
    .attr("height", height)
    .on("click", clicked);

var g = svg.append("g");

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  g.append("g")
      .attr("id", "states")
    .selectAll("path")
      .data(topojson.feature(us, us.objects.states).features)
    .enter().append("path")
      .attr("d", path)
      .on("click", clicked);

  g.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("id", "state-borders")
      .attr("d", path);
});

function clicked(d) {

  // If the click was on the centered state or the background, re-center.
  // Otherwise, center the clicked-on state.
  if (!d || centered === d) {
    projection.translate([width / 2, height / 2]);
    centered = null;
  } else {
    var centroid = path.centroid(d),
        translate = projection.translate();
    projection.translate([
      translate[0] - centroid[0] + width / 2,
      translate[1] - centroid[1] + height / 2
    ]);
    centered = d;
  }

  // Transition to the new projection.
  g.selectAll("path").transition()
      .duration(750)
      .attr("d", path);
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">

<head>
  <script type = "text/javascript" src="http://d3js.org/d3.v3.js"></script>
</head>

<body>
  <div id="bubbleCursor">
  <script>

  // Number of targets
  var numTargets = 40;
  // Min/Max radius of targets
  var minRadius = 10, maxRadius = 30;
  // Min separation between targets
  var minSep = 20;

  var w = 960, h = 500;
  var svg = d3.select("#bubbleCursor")
	.append("svg:svg")
	.attr("width", w)
	.attr("height", h);

  // Make a white background rectangle
  svg.append("rect")
     .attr("class","backgroundRect")
     .attr("width", w)
     .attr("height", h)
     .attr("fill","white");


  function distance(ptA,ptB) {
      var diff = [ptB[0]-ptA[0],ptB[1]-ptA[1]];
      return Math.sqrt(diff[0]*diff[0] + diff[1]*diff[1]);
  }

  // Initialize position and radius of all targets.
  function initTargets(numTargets,minRadius,maxRadius,minSep) {
      var radRange = maxRadius - minRadius;
      var minX = maxRadius + 10, maxX = w-maxRadius-10, xRange = maxX-minX;
      var minY = maxRadius + 10, maxY = h-maxRadius-10, yRange = maxY-minY;

      // Make a vertices array storing position and radius of each
      // target point.
      var targets = [];
      for (var i = 0; i<numTargets;i++) {
	  var ptCollision = true;
	  while (ptCollision) {
	      // Randomly choose position and radius of new target pt.
	      var pt = [Math.random() * xRange + minX,
			Math.random() * yRange + minY];
	      var rad = Math.random()*radRange+minRadius;

	      // Check for collisions with all targets made earlier.
	      ptCollision = false;
	      for(var j = 0; j < targets.length && !ptCollision; j++) {
		  var ptJ = targets[j][0]
		  var radPtJ = targets[j][1];
		  var separation = distance(pt,ptJ);
		  if (separation < (rad+radPtJ+minSep)) {
		      ptCollision = true;
		  }
	      }

	      if(!ptCollision) {
		  targets.push([pt,rad]);
	      }
	  }
      }

      return targets;
  }


  function updateTargetsFill(currentCapturedTarget,clickTarget) {
      // Update the fillcolor of the targetcircles
      svg.selectAll(".targetCircles")
          .attr("fill",function(d,i){
	      var clr = "white";
	      if(i === currentCapturedTarget) {
		  clr = "limegreen";
	      }
	      if(i === clickTarget)
		  clr = "salmon";
	      return clr;
	  });
      
  }

  function getTargetCapturedByBubbleCursor(mouse,targets) {
      // Compute distances from mouse to center, outermost, innermost
      // of each target and find currMinIdx and secondMinIdx;
      var mousePt = [mouse[0],mouse[1]];
      var dists=[], containDists=[], intersectDists=[];
      var currMinIdx = 0;
      for (var idx =0; idx < numTargets; idx++) {
	  var targetPt = targets[idx][0];
	  var currDist = distance(mousePt,targetPt);
	  dists.push(currDist);

	  targetRadius = targets[idx][1];
	  containDists.push(currDist+targetRadius);
	  intersectDists.push(currDist-targetRadius);

	  
	  if(intersectDists[idx] < intersectDists[currMinIdx]) {
	      currMinIdx = idx;
	      
	  } 
      }
      
      // Find secondMinIdx
      var secondMinIdx = (currMinIdx+1)%numTargets;
      for (var idx =0; idx < numTargets; idx++) {
	  if (idx != currMinIdx && 
	      intersectDists[idx] < intersectDists[secondMinIdx]) {
	      secondMinIdx = idx;
	  }
      }

      var cursorRadius = Math.min(containDists[currMinIdx],
			       intersectDists[secondMinIdx]);
      svg.select(".cursorCircle")
	  .attr("cx",mouse[0])
	  .attr("cy",mouse[1])
	  .attr("r",cursorRadius);

      if(cursorRadius < containDists[currMinIdx]) {
	  svg.select(".cursorMorphCircle")
	      .attr("cx",targets[currMinIdx][0][0])
	      .attr("cy",targets[currMinIdx][0][1])
	      .attr("r",targets[currMinIdx][1]+5);
      } else {
	  svg.select(".cursorMorphCircle")
	      .attr("cx",0)
	      .attr("cy",0)
	      .attr("r",0);
      }

      return currMinIdx;
  }

  // Make the targets
  var targets = initTargets(numTargets,minRadius,maxRadius,minSep);
  // Choose the target that should be clicked
  var clickTarget = Math.floor(Math.random()*targets.length);


  // Add in the cursor circle at 0,0 with 0 radius
  // We add it first so that it appears behind the targets
  svg.append("circle")
    .attr("class","cursorCircle")
    .attr("cx",0)
    .attr("cy",0)
    .attr("r",0)
    .attr("fill","lightgray");

  // Add in cursorMorph circle  at 0,0 with 0 radius
  // We add it first so that it appears behind the targets
  svg.append("circle")
    .attr("class","cursorMorphCircle")
    .attr("cx",0)
    .attr("cy",0)
    .attr("r",0)
    .attr("fill","lightgray");

  // Add in the target circles
  svg.selectAll("targetCircles")
    .data(targets)
    .enter()
    .append("circle")
    .attr("class","targetCircles")
    .attr("cx",function(d,i){return d[0][0];})
    .attr("cy",function(d,i){return d[0][1];})
    .attr("r",function(d,i){return d[1]-1;})
    .attr("stroke-width",2)
    .attr("stroke","limegreen")
    .attr("fill","white");

  // Update the fill color of the targets
  updateTargetsFill(-1,clickTarget);

  //Handle mousemove events
  svg.on("mousemove", function(d,i) {
      var capturedTargetIdx = 
	  getTargetCapturedByBubbleCursor(d3.mouse(this),targets);
	  
      // Update the fillcolor of the targetcircles
      updateTargetsFill(capturedTargetIdx,clickTarget);
  });

  // Handle mouse moving outside of svg window. 
  svg.on("mouseout", function(d,i) {
      // Update the fillcolor of the targetcircles
      updateTargetsFill(-1,clickTarget);

      // Get rid of the grady cursor circles by setting size and pos to 0
      svg.select(".cursorCircle")
	  .attr("cx",0)
	  .attr("cy",0)
	  .attr("r",0);

      svg.select(".cursorMorphCircle")
	  .attr("cx",0)
	  .attr("cy",0)
	  .attr("r",0);
  });

  // Handle a mouse click
  svg.on("click", function(d,i) {
      var capturedTargetIdx = 
	  getTargetCapturedByBubbleCursor(d3.mouse(this),targets);

      // If user clicked on the clickTarget then choose a new clickTarget
      if(capturedTargetIdx == clickTarget) {
	  var newClickTarget = clickTarget;
	  // Make sure newClickTarget is not the same as the current clickTarget
	  while (newClickTarget == clickTarget)
	      newClickTarget = Math.floor(Math.random()*targets.length);
	  clickTarget = newClickTarget;

	  // Update drawing of targets
	  updateTargetsFill(capturedTargetIdx,clickTarget);
      }

  });

  </script>
  </div>

</body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <title></title>
  </head>
  <style>
    body, html{
      margin: 0;
      color: white;
      background-color: black;
      font-family: helvetica;
      margin: auto;
      width: 100%;
      height: 100%;
    }
    scatter{
      display: block;
      z-index: 0;
      overflow: hidden;
      font-size: 10px;
    }
    scatter circle{
      fill: yellow;
      opacity: 1;
      cursor: pointer;
      stroke-width: 2;
    }
    scatter circle:hover{
      stroke: white;
    }
    scatter text{
      fill: white;
      stroke: none;
    }
    scatter .x-axis path, scatter .y-axis path{
      stroke: none;
      fill: none;
    }
    scatter .x-axis line, scatter .y-axis line{
      stroke: rgba(255, 255, 255, 0.2);
    }
    .scatter-1{
      width: 30%;
    }
    .scatter-2{
      width: 70%;
    }
    .scatter-3{
      width: 100%;
    }
    .scatter-1, .scatter-2, .scatter-3{
      height: 50%;
      float: left;
    }
  </style>

  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

  <body ng-app="myApp" ng-controller="MainCtrl">
    <scatter class="scatter-1" data="employers"></scatter>
    <scatter class="scatter-2" data="employers"></scatter>
    <scatter class="scatter-3" data="employers"></scatter>
  </body>
  <script>

var app = angular.module('myApp', []);

app.controller('MainCtrl', function($scope, $window){
  angular.element($window).on('resize', function(){ $scope.$apply() })
  // world's largest employers
  // source: https://en.wikipedia.org/wiki/List_of_largest_employers
  $scope.employers = [
      { value: 3.2, name: 'United States Department of Defense' }
    , { value: 2.3, name: 'People\'s Liberation Army' }
    , { value: 2.1, name: 'Walmart' }
    , { value: 1.9, name: 'McDonald\'s' }
    , { value: 1.7, name: 'National Health Service' }
    , { value: 1.6, name: 'China National Petroleum Corporation' }
    , { value: 1.5, name: 'State Grid Corporation of China' }
    , { value: 1.4, name: 'Indian Railways' }
    , { value: 1.3, name: 'Indian Armed Forces' }
    , { value: 1.2, name: 'Hon Hai Precision Industry (Foxconn)' }
  ]
});

app.directive('scatter', function(){
  function link(scope, el, attr){
    el = el[0];
    var w, h;
    var svg = d3.select(el).append('svg');
    var xAxisG = svg.append('g').attr('class', 'x-axis');
    var yAxisG = svg.append('g').attr('class', 'y-axis');
    var points = svg.append('g').attr('class', 'points').selectAll('g.point');
    var x = d3.scale.linear();
    var y = d3.scale.linear();
    var xAxis = d3.svg.axis().scale(x).orient('bottom')
      .tickFormat(function(d, i){ return i + 1; }); // 1 index the company ranks
    var yAxis = d3.svg.axis().scale(y).orient('left');
    var m = 50;

    scope.$watch(function(){
      w = el.clientWidth;
      h = el.clientHeight;
      return w + h;
    }, resize);

    function resize(){
      svg.attr({width: w, height: h});
      x.range([m, w - m]);
      y.range([h - m, m]);
      xAxis.tickSize(-h + 2 * m);
      yAxis.tickSize(-w + 2 * m);
      xAxisG.attr('transform', 'translate(' + [0, y.range()[0] + 0.5] + ')');
      yAxisG.attr('transform', 'translate(' + [x.range()[0], 0] + ')');
      update();
    }

    scope.$watch('data', update);

    function update(){
      if(!scope.data){ return };
      var data = scope.data;
      var x_extent = d3.extent(data, function(d, i){ return i });
      x.domain(x_extent);
      var y_max = d3.max(data, function(d){ return d.value });
      y.domain([0, y_max]);
      points = points.data(data);
      points.exit().remove();
      var point = points.enter().append('g').attr('class', 'point');
      point.append('circle').attr('r', 5)

      // update the position of all the points
      points.attr('transform', function(d, i){
        return 'translate(' + [x(i), y(d.value)] + ')';
      });

      xAxisG.call(xAxis);
      yAxisG.call(yAxis);

    };
  }
  return {
    link: link,
    restrict: 'E',
    scope: { data: '=' }
  };
});
  </script>
</html><img src='https://api.url2png.com/v6/P4DE5D1C99D8EF/ef916a08ed30fc53ea090aaf7d6b6efc/png/?url=http%3A%2F%2Fkatieball.me%2Foneday%2F&max_width=550&viewport=1024x2000&fullpage=1&thumbnail_max_width=550' /><!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body>
	<h1>The number of CCTV cameras by region in Seoul, Korea</h1>
	<script type="text/javascript">
	d3.csv("data.csv", function(error, data) { 
	
	var svg = d3.select("body")
					.append("svg")
					.attr("width",1000)
					.attr("height",1000);

	data.sort(function(a,b){
				return d3.descending(+a.value, +b.value);
			})

			var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 25;
					})
					.attr("width", function(d) {
						return d.value/2;
					})
					.attr("height", 20)
					.attr("fill","#4DAAAB")

			var texts = svg.selectAll("text")
				.data(data)
				.enter()
				.append("text");

				texts.attr("x", function(d) {
					return d.value/2;
					})
					.attr("y", function(d, i) {
						return i * 25+15;
					})
					.attr("fill","#777777")
					.text(function(d) { return d.value;});

			var labels = svg.selectAll(".label")
				.data(data)
				.enter()
				.append("text")
				.attr("class","label");

				labels.attr("x", 10)
					.attr("y", function(d, i) {
						return i * 25+15;
					})
					.attr("fill","#ffffff")
					.text(function(d) { return d.Area;});
	});
	</script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

rect {
  fill: none;
  stroke: #fff;
}

text {
  font: 10px sans-serif;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500,
    color = d3.scale.category20c();

var treemap = d3.layout.treemap()
    .padding(4)
    .size([width, height])
    .value(function(d) { return d.size; });

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(-.5,-.5)");

d3.json("/mbostock/raw/4063550/flare.json", function(error, json) {
  if (error) throw error;

  var cell = svg.data([json]).selectAll("g")
      .data(treemap.nodes)
    .enter().append("g")
      .attr("class", "cell")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  cell.append("rect")
      .attr("width", function(d) { return d.dx; })
      .attr("height", function(d) { return d.dy; })
      .style("fill", function(d) { return d.children ? color(d.name) : null; });

  cell.append("text")
      .attr("x", function(d) { return d.dx / 2; })
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "middle")
      .text(function(d) { return d.children ? null : d.name; });
});

</script>
<!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400italic,600italic,700italic,200,300,400,600,700,900">
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 1em;
  color: #333;
  font-weight: 400;
}

#content {
  margin: 5px;
  padding: 20px 10px 20px 20px;
  width: 780px;
  text-align: left;
  border: 1px solid #ccc;
}

h1 {
  line-height: 1em;
  font-size: 1.75em;
  font-weight: 900;
  color: #000;
}

p {
  margin: 5px 0px 0px 0px;
  padding: 0;
}

.domain {
  stroke-width: 0;
}

path.line {
  fill: none;
  stroke: #08306b;
  stroke-width: 2px;
}

.axis path, .axis line {
  fill: none;
  stroke: #ccc;
  shape-rendering: crispEdges;
}

.axis line {
  stroke: #eee;
  stroke-width: 1;
  shape-rendering: crispEdges;
}

.g-baseline line {
  stroke: #333;
  stroke-width: 2;
  shape-rendering: crispEdges;
}

.x.axis .tick text, .y.axis .tick text  {
  color: #333;
  font-size: 0.9em;
}

</style>

</head>

<body>

<div id="content">
<h1>S&P 500 Stock Price Index</h1>
<p>Jan 2000&ndash;Feb 2014</p>
<div id="chart"></div>
<p>Source: S&P Dow Jones Indices.</p>
</div>

<script src="chart.js"></script>
<script>

var chart = timeSeriesChart()
    .x(function(d) { return formatDate.parse(d.date); })
    .y(function(d) { return +d.price; });

var formatDate = d3.time.format("%Y-%m-%d");

d3.csv("data.csv", function(data) {
  d3.select("#chart")
      .datum(data)
      .call(chart);
});

d3.select(self.frameElement).style("height", "555px");

</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Cleaning Up</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			rect:hover {
				fill: orange;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1>International Immigration to the United States</h1>

		<p>Cummulative international immigration, 2010-2014, as a percentage of 2014 population (estimated) by state. Source: <a href="http://factfinder.census.gov/faces/tableservices/jsf/pages/productview.xhtml?pid=PEP_2014_PEPTCOMP&prodType=table">Census.gov</a>, 2010-2014</p>

		<script type="text/javascript">		


			var w = 700;
			var h = 600;
			var padding = [ 20, 10, 30, 120 ];  //Top, right, bottom, left



			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);



			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("USA_immigration.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.immigrationPercent, +b.immigrationPercent);
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.immigrationPercent;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.state; } ));

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.state);
					})
					.attr("width", function(d) {
						return widthScale(d.immigrationPercent);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill", "steelblue")
					.append("title")
					.text(function(d) {
						return d.state + "'s immigration as % of total population is " + d.immigrationPercent;
					});

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!doctype html>
<html>
<head>
    <title>Polyline Tesspathy</title>
    <meta charset="utf-8">

    <style>
        html, body {
            height: 100%;
            padding: 0;
            margin: 0;
            background: rgb(14, 21, 30);
            height: 100%;
        }

        #map {
            position: absolute;
            height: 100%;
            width: 100%;
            background-color: #333;
        }
    </style>
    <!-- vertex shader -->
    <script id="vshader" type="x-shader/x-vertex">
        uniform mat4 u_matrix;
        attribute vec4 a_vertex;
        attribute float a_pointSize;
        attribute vec4 a_color;
        varying vec4 v_color;

        void main() {
        // Set the size of the point
        gl_PointSize =  a_pointSize;

        // multiply each vertex by a matrix.
        gl_Position = u_matrix * a_vertex;


        // pass the color to the fragment shader
        v_color = a_color;
        }
    </script>
    <!-- fragment shader -->



    <script id="fshader" type="x-shader/x-fragment">
        precision mediump float;
        varying vec4 v_color;

        void main() {

        // -- squares
        gl_FragColor = v_color;
        gl_FragColor =vec4(0.8, 0.1,0.1, 0.9); // v_color;

       
        }

    </script>

</head>
<body>
    <div id="map"></div>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.js"></script>
    <script src="http://www.sumbera.com/gist/js/leaflet/canvas/L.CanvasOverlay.js"></script>
    <script src="http://www.sumbera.com/gist/js/tesspathy/tesspathy.min.js"></script>
    <script src="http://www.sumbera.com/gist/data/route.js" charset="utf-8"></script>
    

    <script>

        var leafletMap = L.map('map').setView([38.911, -77.0361], 16);
        L.tileLayer("http://{s}.sm.mapstack.stamen.com/(toner-background,$fff[difference],$fff[@23],$fff[hsl-saturation@20],toner-lines[destination-in])/{z}/{x}/{y}.png")
        //L.tileLayer("http://{s}.sm.mapstack.stamen.com/(toner-lite,$fff[difference],$fff[@23],$fff[hsl-saturation@20])/{z}/{x}/{y}.png")
            .addTo(leafletMap);


        var glLayer = L.canvasOverlay()
                       .drawing(drawingOnCanvas)
                       .addTo(leafletMap);
        var canvas = glLayer.canvas();

        glLayer.canvas.width = canvas.clientWidth;
        glLayer.canvas.height = canvas.clientHeight;


        var gl = canvas.getContext('experimental-webgl', { antialias: true });

        var pixelsToWebGLMatrix = new Float32Array(16);
        var mapMatrix = new Float32Array(16);

        // -- WebGl setup
        var vertexShader = gl.createShader(gl.VERTEX_SHADER);
        gl.shaderSource(vertexShader, document.getElementById('vshader').text);
        gl.compileShader(vertexShader);

        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
        gl.shaderSource(fragmentShader, document.getElementById('fshader').text);
        gl.compileShader(fragmentShader);

        // link shaders to create our program
        var program = gl.createProgram();
        gl.attachShader(program, vertexShader);
        gl.attachShader(program, fragmentShader);
        gl.linkProgram(program);
        gl.useProgram(program);



        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
        gl.enable(gl.BLEND);
        //  gl.disable(gl.DEPTH_TEST);
        // ----------------------------
        // look up the locations for the inputs to our shaders.
        var u_matLoc = gl.getUniformLocation(program, "u_matrix");
        gl.aPointSize = gl.getAttribLocation(program, "a_pointSize");
        // Set the matrix to some that makes 1 unit 1 pixel.

        pixelsToWebGLMatrix.set([2 / canvas.width, 0, 0, 0, 0, -2 / canvas.height, 0, 0, 0, 0, 0, 0, -1, 1, 0, 1]);
        gl.viewport(0, 0, canvas.width, canvas.height);

        gl.uniformMatrix4fv(u_matLoc, false, pixelsToWebGLMatrix);










        // -- data

        var verts = [];
        var vertLabels = [];
        var rawVerts = [];
        //-- verts only


        for (var i = 0 ; i < data.geometry.coordinates.length  ; i++) {
            var d = data.geometry.coordinates[i];
            pixel = LatLongToPixelXY(d[1], d[0]);
            verts.push([pixel.x, pixel.y]);
            i == 0 ? vertLabels.push([Tesspathy.PATH_START]) : vertLabels.push([Tesspathy.PATH_ANCHOR]);

        }
       
        var tLocations = verts;
        var tLabels = vertLabels;


        var tResult = Tesspathy.triangulateLine(tLocations, tLabels, { width: 0.0001, cap: 'round', join: 'round' });


        
        var graphicsData = {
            points: verts,
            lineWidth: 0.0001,
            lineColor: 0x33FF00,
            lineAlpha: 0.8
        };
        var webGLData = {
            points: [],
            indices: []
        };
        
        
        function hex2rgb(hex) {
            return [(hex >> 16 & 0xFF) / 255, (hex >> 8 & 0xFF) / 255, (hex & 0xFF) / 255];
        };

        for (var i = 0; i < tResult.triangleLocations.length / 2 ; i++) {
            var x = tResult.triangleLocations[i*2];
            var y = tResult.triangleLocations[i*2 + 1];
            var rgb = hex2rgb(graphicsData.lineColor);

            webGLData.points[i*6]   = x;
            webGLData.points[i*6 + 1] = y;
            webGLData.points[i*6 + 2] = rgb[0];
            webGLData.points[i*6 + 3] = rgb[1];
            webGLData.points[i*6 + 4] = rgb[2];
            webGLData.points[i*6 + 5] = 0.8;
        }

        webGLData.indices = tResult.triangleIndices;
       


        // --  buffer (vertex + color interleaved)
        webGLData.buffer = gl.createBuffer();
        gl.bindBuffer(gl.ARRAY_BUFFER, webGLData.buffer);

        var vertArray = new Float32Array(webGLData.points); // -- points includes color too
        var fsize = vertArray.BYTES_PER_ELEMENT;
         // -- set up vertext offset
        gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);
        var vertLoc = gl.getAttribLocation(program, "a_vertex");
        gl.vertexAttribPointer(vertLoc, 2, gl.FLOAT, false, fsize * 6, 0);
        gl.enableVertexAttribArray(vertLoc);

        // -- offset for color buffer
        var colorLoc = gl.getAttribLocation(program, "a_color");
        gl.vertexAttribPointer(colorLoc, 4, gl.FLOAT, false, fsize * 6, fsize * 2);
        gl.enableVertexAttribArray(colorLoc);


        var indexBuffer = gl.createBuffer();
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(webGLData.indices), gl.STATIC_DRAW);

        
        var numPoints = webGLData.points.length / 6;
        

        // tirangles or point count
        //var numPoints = verts.length / 2;


        glLayer.redraw();


        function drawingOnCanvas(canvasOverlay, params) {
            if (gl == null) return;

            gl.clear(gl.COLOR_BUFFER_BIT);


            pixelsToWebGLMatrix.set([2 / canvas.width, 0, 0, 0, 0, -2 / canvas.height, 0, 0, 0, 0, 0, 0, -1, 1, 0, 1]);
            gl.viewport(0, 0, canvas.width, canvas.height);



            var pointSize = Math.max(leafletMap.getZoom() - 4.0, 1.0);
            gl.vertexAttrib1f(gl.aPointSize, pointSize);

            // -- set base matrix to translate canvas pixel coordinates -> webgl coordinates
            mapMatrix.set(pixelsToWebGLMatrix);

            var bounds = leafletMap.getBounds();
            var topLeft = new L.LatLng(bounds.getNorth(), bounds.getWest());
            var offset = LatLongToPixelXY(topLeft.lat, topLeft.lng);

            // -- Scale to current zoom
            var scale = Math.pow(2, leafletMap.getZoom());
            scaleMatrix(mapMatrix, scale, scale);

            translateMatrix(mapMatrix, -offset.x, -offset.y);

            // -- attach matrix value to 'mapMatrix' uniform in shader
            gl.uniformMatrix4fv(u_matLoc, false, mapMatrix);

            gl.drawElements(gl.TRIANGLES, webGLData.indices.length, gl.UNSIGNED_SHORT, 0);
    
            //gl.drawArrays(gl.TRIANGLE_STRIP, 0, numPoints);

            

        }

        // Returns a random integer from 0 to range - 1.
        function randomInt(range) {
            return Math.floor(Math.random() * range);
        }

     
        // -- converts latlon to pixels at zoom level 0 (for 256x256 tile size) , inverts y coord )
        // -- source : http://build-failed.blogspot.cz/2013/02/displaying-webgl-data-on-google-maps.html

        function LatLongToPixelXY(latitude, longitude) {
            var pi_180 = Math.PI / 180.0;
            var pi_4 = Math.PI * 4;
            var sinLatitude = Math.sin(latitude * pi_180);
            var pixelY = (0.5 - Math.log((1 + sinLatitude) / (1 - sinLatitude)) / (pi_4)) * 256;
            var pixelX = ((longitude + 180) / 360) * 256;

            var pixel = { x: pixelX, y: pixelY };

            return pixel;
        }

        function translateMatrix(matrix, tx, ty) {
            // translation is in last column of matrix
            matrix[12] += matrix[0] * tx + matrix[4] * ty;
            matrix[13] += matrix[1] * tx + matrix[5] * ty;
            matrix[14] += matrix[2] * tx + matrix[6] * ty;
            matrix[15] += matrix[3] * tx + matrix[7] * ty;
        }

        function scaleMatrix(matrix, scaleX, scaleY) {
            // scaling x and y, which is just scaling first two columns of matrix
            matrix[0] *= scaleX;
            matrix[1] *= scaleX;
            matrix[2] *= scaleX;
            matrix[3] *= scaleX;

            matrix[4] *= scaleY;
            matrix[5] *= scaleY;
            matrix[6] *= scaleY;
            matrix[7] *= scaleY;
        }


    </script>
</body>



</html>
<html>
<head>
    <title>Celestial Sphere</title>
    <link rel="stylesheet" type="text/css" href="styles.css">
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body>

    <div id="map"></div>

    <script type="text/javascript">

        // Set the width and height of the SVG container
        var width = 400,
            height = 400;

        // Select the container div and append the SVG element
        var div = d3.select('#map'),
            svg = div.append('svg').attr('width', width).attr('height', height),
            grp = svg.append('g').attr('class', 'gmap');

        // Add a lighting effect to give the circle a spherical aspect
        var filter = svg.append('filter').attr('id', 'lightMe');

        filter.append('feDiffuseLighting')
            .attr('in', 'SourceGraphic')
            .attr('result', 'light')
            .attr('lighting-color', 'white')
            .append('fePointLight')
                .attr('x', 0.85 * width)
                .attr('y', 0.85 * height)
                .attr('z', 50);

        filter.append('feComposite')
            .attr('in', 'SourceGraphic')
            .attr('in2', 'light')
            .attr('operator', 'arithmetic')
            .attr('k1', '1')
            .attr('k2', '0')
            .attr('k3', '0')
            .attr('k4', '0');

        // Projectioon and Path Generator
        // ------------------------------

        // Store the current rotation
        var rotate = {x: 0, y: 90};

        // Create and configure an instance of the orthographic projection
        var projection = d3.geo.orthographic()
            .scale(width / 2)
            .translate([width / 2, height / 2])
            .clipAngle(90)
            .rotate([rotate.x / 2, -rotate.y / 2]);

        // Create and configure the geographic path generator
        var path = d3.geo.path().projection(projection);

        // Overlay
        // -------
        var overlay = svg.selectAll('circle').data([rotate])
            .enter().append('circle')
            .attr('transform', 'translate(' + [width / 2, height / 2] + ')')
            .attr('r', width / 2)
            .attr('filter', 'url(#lightMe)')
            .attr('class', 'overlay');

        // Globe Outline
        // -------------
        var globe = grp.selectAll('path.globe').data([{type: 'Sphere'}])
            .enter().append('path')
            .attr('class', 'globe')
            .attr('d', path);

        // Graticule
        // ---------
        var graticule = d3.geo.graticule();

        // Draw graticule lines
        grp.selectAll('path.graticule').data([graticule()])
            .enter().append('path')
            .attr('class', 'graticule')
            .attr('d', path);

        // Load the stellar catalog
        d3.json('hyg.json', function(error, data) {

            // Handle errors getting and parsing the data
            if (error) { return error; }

            // Compute the radius scale. The radius will be proportional to
            // the aparent magnitude
            var rScale = d3.scale.linear()
                .domain(d3.extent(data.features, function(d) { return d.properties.mag; }))
                .range([3, 1]);

            // Compute the radius for the point features
            path.pointRadius(function(d) {
                return d.properties ? rScale(d.properties.mag) : 1;
            });

            // Stars
            // -----
            grp.selectAll('path.star').data(data.features)
                .enter().append('path')
                .attr('class', 'star')
                .attr('d', path);

            // Drag Behavior
            // -------------
            var dragBehavior = d3.behavior.drag()
                .origin(Object)
                .on('drag', function(d) {
                    projection.rotate([(d.x = d3.event.x) / 2, -(d.y = d3.event.y) / 2]);
                    svg.selectAll('path').attr('d', function(u) {
                        // The circles are not properly generated when the
                        // projection has the clipAngle option set.
                        return path(u) ? path(u) : 'M 10 10';
                    });
                });

            // Add the drag behavior to the overlay
            overlay.call(dragBehavior);
        });
    </script>
</body>
</html><!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400italic,600italic,700italic,200,300,400,600,700,900">
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 1em;
  color: #333;
  font-weight: 400;
}

#content {
  margin: 5px;
  padding: 20px;
  width: 775px;
  text-align: left;
  border: 1px solid #ccc;
}

h1 {
  line-height: 1em;
  font-size: 1.75em;
  font-weight: 900;
  color: #000;
}

p {
  margin: 5px 0px 0px 0px;
}

.domain {
  fill: none;
  stroke-width: 0;
}

#menu {
  margin: 5px 0px 0px 0px;
  display: block;
}

#unit {
  margin: 10px 0px 5px 0px;
  font-size: 0.9em;
}

select {
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 0.9em;
  color: #333;
  font-weight: 400;
}

.bar {
  fill: #2980B9;
}

.bar:hover {
  fill: #2C3E50;
}

.axis line {
  stroke: #eee;
  stroke-width: 1;
  opacity: 0.5;
  shape-rendering: crispEdges;
}

.g-baseline line {
  stroke: #333;
  stroke-width: 2;
  opacity: 1;
  shape-rendering: crispEdges;
}

.x.axis .tick text, .y.axis .tick text {
  fill: #333;
  font-size: 0.9em;
}

</style>

</head>

<body>
<div id="content">
<h1>OECD Social Indicators, 2012</h1>
  <select id="menu">
	<option>Poverty rate</option>
	<option>Infant mortality</option>
	<option>Health expenditures</option>
	<option>Education</option>
	<option>Income inequality</option>
	<option>Public social spending</option>
	<option>Tax revenue</option>
    <option>Employment to population ratio</option>
    <option>GDP per capita</option>
	<option>CO2 emissions</option>
  </select>

<p id="unit">Percent of population earning less than 50% of median household income</p>

<div id="chart"></div>
<p>Source: OECD.</p>
</div>

<script src="chart.js"></script>
<script>

var map = d3.map(),
    barchart;

d3.csv("data.csv", function(error, data) {

  data = d3.nest()
      .key(function(d){ return d.variable; })
      .entries(data);

  data.forEach(function(d){
    d.value = +d.value;
    d.values.sort(function(a, b){ return d3.ascending(+a.value, +b.value); });
    map.set(d.key, d.values);
  });

  barchart = d3.svg.barchart()
      .margin({top: 0, right: 10, bottom: 40, left: 40})
      .tickFormat(d3.format(",.0f"))
      .x(function(d){ return d.country; })
      .y(function(d){ return d.value; });

  d3.select("#chart")
      .datum(map.get("Poverty rate"))
      .call(barchart);

});


d3.select("#menu").on("change", function() {

  d3.select("#chart")
      .datum(map.get(this.value))
      .call(barchart);

  var unit;
  var selectedVariable = document.getElementById("menu").value;
  switch (selectedVariable)
    	{
    	case "CO2 emissions": unit = "Metric tons of CO<sub>2</sub> per capita"; break;
    	case "Education": unit = "Percent of 25&ndash;34 year-olds with a post-secondary degree"; break;
    	case "Employment to population ratio": unit = "Percent of working age population (15&ndash;64)"; break;
    	case "GDP per capita": unit = "$US PPP adjusted"; break;
    	case "Health expenditures": unit = "Percent of GDP"; break;
    	case "Income inequality": unit = "Gini coefficient (0 = perfect equality, 100 = perfect inequality)"; break;
    	case "Infant mortality": unit = "Deaths per 1,000 live births"; break;
    	case "Poverty rate": unit = "Percent of population earning less than 50% of median household income"; break;
    	case "Public social spending": unit = "Percent of GDP"; break;
    	case "Tax revenue": unit = "Percent of GDP"; break;
    	}
  d3.select("#unit")
      .html(unit);

});

d3.select(self.frameElement).style("height", "560px");

</script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <link href="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.css" rel="stylesheet" type="text/css"/>
	<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/2D.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/IntersectionUtilities.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.utils.js"></script>	
    <style type="text/css">

circle {
  stroke: #000;
  stroke-opacity: .5;
}

    </style>
  </head>
  <body>
    <div id="body">
      <div id="footer">
        Collision Detection
        <div class="hint">move the mouse to repel nodes</div>
      </div>
    </div>
    <script type="text/javascript">

var w = 1280,
    h = 800;

VisDock.init("body", {width: 1000, height: 700});
AnnotatedByData.layerTypes = [".Circ"]
var viewport = VisDock.getViewport();

var nodes = d3.range(200).map(function() { return {radius: Math.random() * 12 + 4}; }),
    color = d3.scale.category10();

var force = d3.layout.force()
    .gravity(0.05)
    .charge(function(d, i) { return i ? 0 : -2000; })
    .nodes(nodes)
    .size([w, h]);

var root = nodes[0];
root.radius = 0;
root.fixed = true;

force.start();

var svg = viewport
Panel.x -= 150;
Panel.y -= 100;
Panel.setTransform();

svg.selectAll("circle")
    .data(nodes.slice(1))
  .enter().append("svg:circle")
  	.attr("class", "Circ")
    .attr("r", function(d) { return d.radius - 2; })
    .style("fill", function(d, i) { return color(i % 3); });

force.on("tick", function(e) {
  VisDock.startChrome();
  var q = d3.geom.quadtree(nodes),
      i = 0,
      n = nodes.length;

  while (++i < n) {
    q.visit(collide(nodes[i]));
  }
  var id = 0;
  svg.selectAll(".Circ")
  	  .attr("id", function(){
  	  	return "_c"+id++;
  	  })
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });
  var layers = d3.selectAll(".VisDockEllipseLayer")[0]
  for (var i = 0; i < layers.length; i++){
  	var id = layers[i].getAttributeNS(null, "id")
  	layers[i].setAttributeNS(null, "cx", d3.select("#_" + id).attr("cx"))
  	layers[i].setAttributeNS(null, "cy", d3.select("#_" + id).attr("cy"))
  }
  AnnotatedByData.update();
  VisDock.finishChrome();  
});

svg.on("mousemove", function() {
  var p1 = d3.mouse(this);
  root.px = p1[0];
  root.py = p1[1];
  force.resume();
});

function collide(node) {
  var r = node.radius + 16,
      nx1 = node.x - r,
      nx2 = node.x + r,
      ny1 = node.y - r,
      ny2 = node.y + r;
  return function(quad, x1, y1, x2, y2) {
    if (quad.point && (quad.point !== node)) {
      var x = node.x - quad.point.x,
          y = node.y - quad.point.y,
          l = Math.sqrt(x * x + y * y),
          r = node.radius + quad.point.radius;
      if (l < r) {
        l = (l - r) / l * .5;
        node.x -= x *= l;
        node.y -= y *= l;
        quad.point.x += x;
        quad.point.y += y;
      }
    }
    return x1 > nx2
        || x2 < nx1
        || y1 > ny2
        || y2 < ny1;
  };
}
VisDock.eventHandler = {
    getHitsPolygon: function(points, inclusive){
	
		var shapebound = new createPolygon(points);
		return shapebound.intersectEllipse(d3.selectAll(".Circ")[0], inclusive)

    },
    getHitsEllipse: function(points, inclusive){

		var shapebound = new createEllipse(points);
		return shapebound.intersectEllipse(d3.selectAll(".Circ")[0], inclusive)

    },
    getHitsLine: function(points, inclusive){

		var shapebound = new createLine(points);
		return shapebound.intersectEllipse(d3.selectAll(".Circ")[0], inclusive)

    },
    setColor: function(hits){
		QueryManager.layers[num - 1] = [];
		for (var i=0;i<hits.length;i++){
			var r = hits[i].getAttributeNS(null, "r")
			var cx = hits[i].getAttributeNS(null, "cx")
			var cy = hits[i].getAttributeNS(null, "cy")
			QueryManager.layers[num - 1][i] = d3.select(hits[i].parentNode).append("circle")
				.attr("r", r).attr("style", "fill: " + VisDock.color[num - 1] + "; opacity: 1; pointer-events: none")
				.attr("cx", cx).attr("cy", cy)
				.attr("id", hits[i].getAttributeNS(null, "id").split("_")[1])
				.attr("class", "VisDockEllipseLayer")
		}
    },
    changeColor: function(color, query, index){
	var visibility = VisDock.utils.getQueryVisibility(index);	
		for (var i=0;i<query.length;i++){
		    query[i].attr("style","opacity:" + visibility + ";fill: " +color)
		}
    },
    changeVisibility: function(vis, query, index){
		var color = VisDock.utils.getQueryColor(index);
		for (var i=0;i<query.length;i++){
		    query[i].attr("style","opacity:" + vis + ";fill: " +color)
		}
    },
    removeColor: function(hits, index){
		for (var i=0;i<hits.length;i++){
		    hits[i].remove();
		}
    }
}
BirdView.init(viewport, 1000, 700)
d3.select(self.frameElement).style("width", "1280px");
d3.select(self.frameElement).style("height", "800px");
    </script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
}

.x.axis path {
  display: none;
}

</style>
<body>

<script src="http://d3js.org/d3.v3.min.js"></script>
<link href="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.css" rel="stylesheet" type="text/css"/>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/2D.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/IntersectionUtilities.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.utils.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

VisDock.init("body", {width: 1200, height: 800});
var viewport = VisDock.getViewport();

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .rangeRound([height, 0]);

var color = d3.scale.ordinal()
    .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(d3.format(".2s"));

var svg = viewport;
Panel.x = margin.left;
Panel.y = margin.top;
Panel.setTransform();

d3.csv("data.csv", function(error, data) {
  VisDock.startChrome();
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "State"; }));

  data.forEach(function(d) {
    var y0 = 0;
    d.ages = color.domain().map(function(name) { return {name: name, y0: y0, y1: y0 += +d[name]}; });
    d.total = d.ages[d.ages.length - 1].y1;
  });

  data.sort(function(a, b) { return b.total - a.total; });

  x.domain(data.map(function(d) { return d.State; }));
  y.domain([0, d3.max(data, function(d) { return d.total; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Population");

  var state = svg.selectAll(".state")
      .data(data)
    .enter().append("g")
      .attr("class", "g")
      .attr("transform", function(d) { return "translate(" + x(d.State) + ",0)"; });

  state.selectAll("rect")
      .data(function(d) { return d.ages; })
    .enter().append("rect")
      .attr("class", "stackbar")
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.y1); })
      .attr("height", function(d) { return y(d.y0) - y(d.y1); })
      .style("fill", function(d) { return color(d.name); });

  var legend = svg.selectAll(".legend")
      .data(color.domain().slice().reverse())
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  legend.append("rect")
      .attr("x", width - 18)
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", color);

  legend.append("text")
      .attr("x", width - 24)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("text-anchor", "end")
      .text(function(d) { return d; });
  VisDock.finishChrome();

});

	VisDock.eventHandler = {
		getHitsPolygon : function(points, inclusive) {
			var shapebound = new createPolygon(points);
			return shapebound.intersectPolygon(d3.selectAll(".stackbar")[0], inclusive)
		},
		getHitsLine : function(points, inclusive) {
			var shapebound = new createLine(points);
			return shapebound.intersectPolygon(d3.selectAll(".stackbar")[0], inclusive)
		},
		getHitsEllipse : function(points, inclusive) {
			var shapebound = new createEllipse(points);
			return shapebound.intersectPolygon(d3.selectAll(".stackbar")[0], inclusive)
		},
		setColor : function(hits) {
			if (QueryManager.layers[num] == undefined) QueryManager.layers[num] = [];
			for (var i = 0; i < hits.length; i++) {
				var y = hits[i].getAttributeNS(null, "y")
				var w = hits[i].getAttributeNS(null, "width")
				var h = hits[i].getAttributeNS(null, "height")
				QueryManager.layers[num][i] = d3.select(hits[i].parentNode).append("rect").attr("y", y).attr("width", w)
					.attr("height", h).attr("style", "fill: " + VisDock.color[num - 1] + "; opacity: 1; pointer-events: none")				
			}
		},
		changeColor : function(color, query, index) {
			for (var i = 0; i < query.length; i++) {
				var vis = query[i][0][0].getAttributeNS(null, "style").split(";")[1] 
				 "; "+ query[i][0][0].getAttributeNS(null, "style").split(";")[2]
				query[i][0][0].setAttributeNS(null, "style", "fill: " + color + "; " + vis)
			}
		},
		changeVisibility : function(vis, query, index) {
			
			for (var i = 0; i < query.length; i++) {
				var style = query[i][0][0].getAttributeNS(null, "style").split("opacity")[0]
				query[i][0][0].setAttributeNS(null, "style", style + "; opacity: " + vis)
			}
		},
		removeColor : function(hits, index) {
			for (var i = 0; i < hits.length; i++) {
				hits[i].remove();
			}
		},
		QueryClick : function(query, index) {

		}
	}

BirdView.init(viewport, 1200, 800)
d3.select(self.frameElement).style("width", "1200px");
d3.select(self.frameElement).style("height", "800px");
</script><!DOCTYPE html>
<meta charset="utf-8">
<style>

.link {
  stroke: #ccc;
}

.node text {
  pointer-events: none;
  font: 10px sans-serif;
}

</style>
<body>
<link href="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.css" rel="stylesheet" type="text/css"/>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/2D.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/IntersectionUtilities.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.utils.js"></script>
<script>

var width = 960,
    height = 500

VisDock.init('body', {width: 1100, height: 700});
AnnotatedByData.layerTypes = ["rect"];
var viewport = VisDock.getViewport();

var svg = viewport;   

var force = d3.layout.force()
    .gravity(.05)
    .distance(100)
    .charge(-100)
    .size([width, height]);

d3.json("graph.json", function(error, json) {
  VisDock.startChrome();	
  force
      .nodes(json.nodes)
      .links(json.links)
      .start();

  var link = svg.selectAll(".link")
      .data(json.links)
    .enter().append("line")
      .attr("class", "link");

  var node = svg.selectAll(".node")
      .data(json.nodes)
    .enter().append("g")
      .attr("class", "node")
      .call(force.drag);

  node.append("rect")
      .attr("class", "enclosure")
      .attr("x", -8)
      .attr("y", -8)
      .attr("width", 16)
      .attr("height", 16)
      .attr("style", "fill: white; opacity: 0.5")

  node.append("image")
      .attr("xlink:href", "https://github.com/favicon.ico")
      .attr("x", -8)
      .attr("y", -8)
      .attr("width", 16)
      .attr("height", 16);

  node.append("text")
      .attr("dx", 12)
      .attr("dy", ".35em")
      .text(function(d) { return d.name });

  force.on("tick", function() {
    VisDock.startChrome();
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
    VisDock.updateLayers();
    AnnotatedByData.update();
    VisDock.finishChrome();
  });
  VisDock.finishChrome();
});

	VisDock.eventHandler = {
		getHitsPolygon : function(points, inclusive) {
			var shapebound = new createPolygon(points);
			return shapebound.intersectPolygon(d3.selectAll(".enclosure")[0], inclusive)
		},
		getHitsLine : function(points, inclusive) {
			var shapebound = new createLine(points);
			return shapebound.intersectPolygon(d3.selectAll(".enclosure")[0], inclusive)
		},
		getHitsEllipse : function(points, inclusive) {
			var shapebound = new createEllipse(points);
			return shapebound.intersectPolygon(d3.selectAll(".enclosure")[0], inclusive)
		},
		setColor : function(hits) {
			for (var i = 0; i < hits.length; i++) {
				VisDock.utils.addPolygonLayer(hits[i], "fill: " + VisDock.color[num - 1] + "; opacity: 0.5", num - 1)
			}
		},
		changeColor : function(color, query, index) {
			for (var i = 0; i < query.length; i++) {
				var vis = query[i][0][0].getAttributeNS(null, "style").split(";")[1] 
				 "; "+ query[i][0][0].getAttributeNS(null, "style").split(";")[2]
				query[i][0][0].setAttributeNS(null, "style", "fill: " + color + "; " + vis)
			}
		},
		changeVisibility : function(vis, query, index) {
			
			for (var i = 0; i < query.length; i++) {
				var style = query[i][0][0].getAttributeNS(null, "style").split("opacity")[0]
				query[i][0][0].setAttributeNS(null, "style", style + "; opacity: " + vis)
			}
		},
		removeColor : function(hits, index) {
			for (var i = 0; i < hits.length; i++) {
				hits[i].remove();
			}
		},
		QueryClick : function(query, index) {

		}
	}
BirdView.init(viewport, 1100, 700)
d3.select(self.frameElement).style("width", "1100px");
d3.select(self.frameElement).style("height", "700px");
</script><!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400italic,600italic,700italic,200,300,400,600,700,900">
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 1em;
  color: #333;
  font-weight: 400;
}

#content {
  margin: 5px;
  padding: 20px;
  width: 685px;
  text-align: left;
  border: 1px solid #ccc;
}

h1 {
  line-height: 1em;
  font-size: 1.65em;
  font-weight: 900;
  color: #000;
}

p {
  margin: 5px 0px 0px 0px;
}

.domain {
  stroke-width: 1px;
}

path.line {
  fill: none;
  stroke-width: 2px;
}

.axis path, .axis line {
  fill: none;
  stroke: #ccc;
  shape-rendering: crispEdges;
}

.axis line {
  stroke: #eee;
  stroke-width: 1;
  shape-rendering: crispEdges;
}

.g-baseline line {
  stroke: #333;
  stroke-width: 1;
  shape-rendering: crispEdges;
}

.x.axis text, .y.axis text  {
  color: #333;
  font-size: 0.9em;
}

.recessionLine text {
  font-size: 0.9em;
}

</style>

</head>

<body>

<div id="content">
<h1>Change in Nonfarm Employment Since Start of Recession</h1>
<p>Percent</p>
<div class="chart"></div>
<p>Source: U.S. Bureau of Labor Statistics.</p>
</div>

<script src="chart.js"></script>
</body>
</html><!doctype html>

<html>
  <head>
    <title>D3 is fun</title>
  </head>
  <body>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="index.js"></script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  margin: 0;
}

path {
  fill: none;
  stroke: red;
  stroke-linejoin: round;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.tile.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>

<link href="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.css" rel="stylesheet" type="text/css"/>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/2D.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/IntersectionUtilities.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.utils.js"></script>
<script>

var width = 1200;
    height = 700;

VisDock.init("body", {width: 1200, height: 700});
var viewport = VisDock.getViewport();

var tile = d3.geo.tile()
    .size([width, height]);

var projection = d3.geo.mercator()
    .scale((1 << 12) / 2 / Math.PI)
    .translate([width / 2, height / 2]);

var center = projection([-100, 40]);

var path = d3.geo.path()
    .projection(projection);

var zoom = d3.behavior.zoom()
    .scale(projection.scale() * 2 * Math.PI)
    .scaleExtent([1 << 11, 1 << 14])
    .translate([width - center[0], height - center[1]])
    .on("zoom", zoomed);

var svg = viewport;   

var raster = svg.append("g");

var vector = svg.append("path");

d3.csv("us-state-capitals.csv", type, function(error, capitals) {
  svg.call(zoom);
  vector.datum({type: "FeatureCollection", features: capitals});
  zoomed();
});

function type(d) {
  return {
    type: "Feature",
    properties: {
      name: d.description,
      state: d.name
    },
    geometry: {
      type: "Point",
      coordinates: [+d.longitude, +d.latitude]
    }
  };
}

function zoomed() {
  var tiles = tile
      .scale(zoom.scale())
      .translate(zoom.translate())
      ();

  projection
      .scale(zoom.scale() / 2 / Math.PI)
      .translate(zoom.translate());

  vector
      .attr("d", path);

  var image = raster
      .attr("transform", "scale(" + tiles.scale + ")translate(" + tiles.translate + ")")
    .selectAll("image")
      .data(tiles, function(d) { return d; });

  image.exit()
      .remove();

  image.enter().append("image")
      .attr("xlink:href", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/examples.map-vyofok3q/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .attr("width", 1)
      .attr("height", 1)
      .attr("x", function(d) { return d[0]; })
      .attr("y", function(d) { return d[1]; });
      
}
BirdView.init(viewport, 1200, 700)
d3.select(self.frameElement).style("width", "1200px");
d3.select(self.frameElement).style("height", "700px");
</script><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		 <title>D3 scatterplot and transition</title>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
		<style type="text/css">
body{margin:10px;}
circle {
  fill:#ccc;
  stroke:#000;
  pointer-events:none;
}
#button {position:absolute;top:10px;left:400px;}
#title {position:absolute;top:12px;left:0px;width:500px;text-align:center;}
.btn { display:inline-block;*display:inline;/* IE7 inline-block hack */ *zoom:1;padding:4px 10px 4px;margin-bottom:0;font-size:13px;line-height:18px;color:#333333;text-align:center;text-shadow:0 1px 1px rgba(255,255,255,0.75);vertical-align:middle;background-color:#f5f5f5;background-image:-moz-linear-gradient(top,#ffffff,#e6e6e6);background-image:-ms-linear-gradient(top,#ffffff,#e6e6e6);background-image:-webkit-gradient(linear,0 0,0 100%,from(#ffffff),to(#e6e6e6));background-image:-webkit-linear-gradient(top,#ffffff,#e6e6e6);background-image:-o-linear-gradient(top,#ffffff,#e6e6e6);background-image:linear-gradient(top,#ffffff,#e6e6e6);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff',endColorstr='#e6e6e6',GradientType=0);border-color:#e6e6e6 #e6e6e6 #bfbfbf;border-color:rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);filter:progid:dximagetransform.microsoft.gradient(enabled=false);border:1px solid #cccccc;border-bottom-color:#b3b3b3;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);cursor:pointer;*margin-left:.3em;} .btn:hover,.btn:active,.btn.active,.btn.disabled,.btn[disabled] { background-color:#e6e6e6;} .btn:active,.btn.active { background-color:#cccccc \9;} .btn:first-child { *margin-left:0;} .btn:hover { color:#333333;text-decoration:none;background-color:#e6e6e6;background-position:0 -15px;-webkit-transition:background-position 0.1s linear;-moz-transition:background-position 0.1s linear;-ms-transition:background-position 0.1s linear;-o-transition:background-position 0.1s linear;transition:background-position 0.1s linear;} .btn:focus { outline:thin dotted #333;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;} .btn.active,.btn:active { background-image:none;-webkit-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);-moz-box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);box-shadow:inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05);background-color:#e6e6e6;background-color:#d9d9d9 \9;outline:0;} .btn.disabled,.btn[disabled] { cursor:default;background-image:none;background-color:#e6e6e6;opacity:0.65;filter:alpha(opacity=65);-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;} .btn-mini { padding:2px 6px;font-size:11px;line-height:14px;}
}
svg {border:1px solid black;}
.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 17px;
			}
			
		</style>
		<script src="http://d3js.org/d3.v2.min.js?2.8.1"></script>
		<div id="chart" style="width:500px;height:250px">
  <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="500" height="200">
  </svg>
  <div id="title">Movement</div>
  <button class="btn btn-mini" id="button">Transition</button>
</div>
	</head>
	<body>
		<script>
			var w = 500;
			var h = 300;
			var padding = 40;
			var dataset = [];					
			var numDataPoints = 50;				
			var xRange = Math.random() * 1000;	
			var yRange = Math.random() * 1000;	
			for (var i = 0; i < numDataPoints; i++) {				
				var newNumber1 = Math.round(Math.random() * xRange);	
				var newNumber2 = Math.round(Math.random() * yRange);	
				dataset.push([newNumber1, newNumber2]);					
			}
			var xScale = d3.scale.linear()
								 .domain([0, d3.max(dataset, function(d) { return d[0]; })])
								 .range([padding, w - padding * 2]);
			var yScale = d3.scale.linear()
								 .domain([0, d3.max(dataset, function(d) { return d[1]; })])
								 .range([h - padding, padding]);
			var rScale = d3.scale.linear()
								 .domain([0, d3.max(dataset, function(d) { return d[1]; })])
								 .range([2, 5]);
			var xAxis = d3.svg.axis()
							  .scale(xScale)
							  .orient("bottom")
							  .ticks(5);
			var yAxis = d3.svg.axis()
							  .scale(yScale)
							  .orient("left")
							  .ticks(5);
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
			svg.selectAll("circle")
			   .data(dataset)
			   .enter()
			   .append("circle")
			   .attr("cx", function(d) {
			   		return xScale(d[0]);
			   })
			   .attr("cy", function(d) {
			   		return yScale(d[1]);
			   })
			  
			  svg.selectAll("text")
			   .data(dataset)
			   .enter()
			   .append("text")
			   .text(function(d) {
			   		return d[0] + "," + d[1];
			   })
			   .attr("x", function(d) {
			   		return xScale(d[0]);
			   })
			   .attr("y", function(d) {
			   		return yScale(d[1]);
			   })
			   .attr("font-family", "sans-serif")
			   .attr("font-size", "9px")
			   .attr("fill", "blue");
			   
			svg.append("g")
				.attr("class", "axis")
				.attr("transform", "translate(0," + (h - padding) + ")")
				.call(xAxis);
			svg.append("g")
				.attr("class", "axis")
				.attr("transform", "translate(" + padding + ",0)")
				.call(yAxis);
		</script>
		
<script>
data={
title:"Line chart (unrolling)",
  shapes:[
    {
      type:"path",
      init:{
        attr:{
          "d":"m0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120L0,120"
        },
          style:{stroke:"blue","stroke-width":2,fill:"none"}
      },
      transition:{duration:50,delay:50,ease:"linear",attr:{"d":"m0,120L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110L20,110"},
        next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170L40,170"},
          next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190L60,190"},
            next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180L80,180"},
              next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160L100,160"},
                next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165L120,165"},
                  next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140L140,140"},
                    next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120L160,120"},
                      next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130L180,130"},
                        next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150L200,150"},
                          next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130L220,130"},
                            next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L240,120L240,120L240,120L240,120L240,120L240,120L240,120L240,120L240,120L240,120L240,120L240,120L240,120"},
                              next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L260,110L260,110L260,110L260,110L260,110L260,110L260,110L260,110L260,110L260,110L260,110L260,110"},
                                next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L280,90L280,90L280,90L280,90L280,90L280,90L280,90L280,90L280,90L280,90L280,90"},
                                  next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L300,80L300,80L300,80L300,80L300,80L300,80L300,80L300,80L300,80L300,80"},
                                    next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L320,85L320,85L320,85L320,85L320,85L320,85L320,85L320,85L320,85"},
                                      next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L340,100L340,100L340,100L340,100L340,100L340,100L340,100L340,100"},
                                        next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L360,90L360,90L360,90L360,90L360,90L360,90L360,90L360,90"},
                                          next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L360,90L380,80L380,80L380,80L380,80L380,80L380,80L380,80"},
                                            next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L360,90L380,80L400,70L400,70L400,70L400,70L400,70L400,70"},
                                              next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L360,90L380,80L400,70L420,50L420,50L420,50L420,50L420,50"},
                                                next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L360,90L380,80L400,70L420,50L440,45L440,45L440,45L440,45"},
                                                  next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L360,90L380,80L400,70L420,50L440,45L460,50L460,50L460,50"},
                                                    next:{duration:25,ease:"linear",attr:{"d":"m0,120L20,110L40,170L60,190L80,180L100,160L120,165L140,140L160,120L180,130L200,150L220,130L240,120L260,110L280,90L300,80L320,85L340,100L360,90L380,80L400,70L420,50L440,45L460,50L500,40L500,40"},
                                                  },
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
            },  
          },
        },
      }
    }}
  ]
  
  
};
var svg=d3.select("svg");
svg.selectAll(".vline").data(d3.range(26)).enter()
  .append("line")
  .attr("x1",function(d){return d*20;})
  .attr("x2",function(d){return d*20;})
  .attr("y1",function(d){return 40;})
  .attr("y2",function(d){return 250;})
  .style("stroke","#eee");
svg.selectAll(".vline").data(d3.range(2,13)).enter()
  .append("line")
  .attr("y1",function(d){return d*20;})
  .attr("y2",function(d){return d*20;})
  .attr("x1",function(d){return 0;})
  .attr("x2",function(d){return 500;})
  .style("stroke","#eee");

var button=d3.select("#button");
if (data.button==="none") {button.remove();}
var mode=0;
var modes=[{state:"init",title:"Transition"},{state:"transition",title:"Reset"}];

d3.select("#title").html(data.title);
data.shapes.forEach(function(d,i) {



  var myshape=svg.append(d.type).attr("id","s"+i); 
  var state=d.init;                                 
  set(myshape,state);
})

button.on("click",function() {
  mode=1-mode;
  button.html(modes[mode].title);
  data.shapes.forEach(change)
});

function change(d,i){
  var state=d[modes[mode].state];
  var myshape=svg.select("#s"+i).transition().duration(state.duration||1000).delay(state.delay||0).ease(state.ease||"cubic-in-out");

  set(myshape,state);

}

function set(selection,state,createTransition) {
  if(state.remove)  {
    selection.remove();return;
  }

  d3.keys(state.attr).forEach(function(a) {
    selection.attr(a, state.attr[a]);                    
  });
  if (state.text) {
    selection.text(state.text);
  };
  d3.keys(state.style).forEach(function(s) {
    selection.style(s, state.style[s]);                   
  });

  if(state.next)  {
    var next=state.next;
    if (next.type) {
        selection.each("end",function() {
          set(svg.append(next.type),next,true);                    
        })
    }
    else {
      if(createTransition)  {
        selection=selection.transition().duration(0);
      }
      selection.each("end",function() {
        set(d3.select(this).transition().duration(next.duration||1000).delay(next.delay||0).ease(state.ease||"cubic-in-out"),next);
      });
    }
  }
}
</script> 
	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

#n {
  position: absolute;
  top: 20px;
  left: 20px;
}

#n input {
  width: 200px;
}

#grid {
  margin: 10px;
  margin-top: 60px;
}

.box-view {
  width: 20px; height: 20px;
  float: left;
  position: relative;
  margin: 8px;
}

.box {
  border-radius: 100px;
  width: 20px; height: 10px;
  padding: 5px 0;
  color: #fff;
  font: 10px/10px Arial;
  text-align: center;
  position: absolute;
}

</style>
<div id="n">
  <input type="range" min="1" max="1000" value="100">
  <output name="n"></output>
</div>
<div id="grid">
  <div class="box-view">
    <div class="box"></div>
  </div>
</div>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var boxViewTemplate = d3.select(".box-view").remove().node(),
    boxView = d3.select("#grid").selectAll(".box-view"),
    box = boxView.select(".box");

var output = d3.select("output"),
    input = d3.select("input").on("change", changed).each(changed),
    count = 0;

d3.timer(function() {
  ++count;

  box
      .style("top", Math.sin(count / 10) * 10 + "px")
      .style("left", Math.cos(count / 10) * 10 + "px")
      .style("background-color", "rgb(0,0," + count % 255 + ")")
      .text(count % 100);
});

function changed() {
  var n = +this.value;
  output.text(n);
  boxView = boxView.data(d3.range(n));
  boxView.exit().remove();
  boxView.enter().append(function() { return boxViewTemplate.cloneNode(true); });
  box = boxView.select(".box");
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  stroke-linejoin: round;
  stroke-linecap: round;
}

.land {
  fill: #ddd;
}

.border {
  fill: none;
  stroke: #fff;
}

.graph {
  fill: none;
  stroke: #000;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  var geometryCollection = us.objects.counties,
      featureCollection = topojson.feature(us, geometryCollection),
      features = featureCollection.features,
      neighbors = topojson.neighbors(geometryCollection.geometries);

  features.forEach(function(feature, i) {
    feature.centroid = path.centroid(feature);
    if (feature.centroid.some(isNaN)) feature.centroid = null; // off the map
    feature.neighbors = feature.centroid ? neighbors[i]
        .filter(function(j) { return j < i && features[j].centroid; })
        .map(function(j) { return features[j]; }) : [];
  });

  svg.append("path")
      .attr("class", "land")
      .datum(featureCollection)
      .attr("d", path);

  svg.append("path")
      .attr("class", "border")
      .datum(topojson.mesh(us, geometryCollection, function(a, b) { return a !== b; }))
      .attr("d", path);

  svg.append("path")
      .attr("class", "graph")
      .datum(d3.merge(features.map(function(a) { return a.neighbors.map(function(b) { return [a, b]; }); })))
      .attr("d", function(d) { return d.map(function(l) { return "M" + l[0].centroid + "L" + l[1].centroid; }).join(""); });
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.counties {
  fill: #ccc;
}

.county-borders {
  fill: none;
  stroke: #ccc;
  stroke-width: .5px;
  stroke-linejoin: round;
  stroke-linecap: round;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script src="//d3js.org/queue.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.albersUsa()
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var color = d3.scale.ordinal()
    .domain(d3.range(9).reverse())
    .range(["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

queue()
    .defer(d3.json, "/mbostock/raw/4090846/us.json")
    .defer(d3.tsv, "coastal-counties.tsv")
    .await(ready);

function ready(error, us, coastals) {
  if (error) throw error;

  var counties = topojson.feature(us, us.objects.counties),
      neighbors = topojson.neighbors(us.objects.counties.geometries),
      coastals = d3.set(coastals.map(function(d) { return d.id; })),
      nexts = [],
      nexts2 = [],
      distance = 0;

  counties.features.forEach(function(county, i) {
    if (coastals.has(county.id)) nexts.push(county);
    county.distance = Infinity;
    county.neighbors = neighbors[i].map(function(j) { return counties.features[j]; });
  });

  while (nexts.length) {
    nexts.forEach(function(county) {
      if (county.distance > distance) {
        county.distance = distance;
        county.neighbors.forEach(function(neighbor) { nexts2.push(neighbor); });
      }
    });
    nexts = nexts2, nexts2 = [], ++distance;
  }

  svg.append("g")
      .attr("class", "counties")
    .selectAll("path")
      .data(counties.features)
    .enter().append("path")
      .style("fill", function(d) { return color(Math.min(9, d.distance)); })
      .attr("d", path);

  svg.append("path")
      .attr("class", "county-borders")
      .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a !== b; }))
      .attr("d", path);
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">

<style>
.link {
  stroke: black;
  stroke-width: 2px;
}
.node {
  fill: steelblue;
  stroke: white;
  stroke-width: 2px;
}
</style>

<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

var width = 960, 
    height = 500,
    nodes = [{},{},{}],
    links = [{source: 0, target: 1}, {source: 1, target: 2}, {source: 2, target: 0}];

var force = d3.layout.force()
    .size([width, height])
    .nodes(nodes)
    .links(links)
    .linkDistance(150)
    .on("tick", tick)
    .start();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svgLinks = svg.selectAll(".link").data(links)
  .enter().append("line")
    .attr("class", "link");

svgNodes = svg.selectAll(".node").data(nodes)
  .enter().append("circle")
    .attr("class", "node")
    .attr("r", 8)
    .call(force.drag);

function tick() {
  svgNodes
      .attr("cx", function(d) { return d.x })
      .attr("cy", function(d) { return d.y });

  svgLinks
      .attr("x1", function(d) { return d.source.x })
      .attr("y1", function(d) { return d.source.y })
      .attr("x2", function(d) { return d.target.x })
      .attr("y2", function(d) { return d.target.y });
};

</script><!DOCTYPE html>
<meta charset="utf-8">

<style>
.link {stroke: black;}
.node {stroke: white; stroke-width: 3px;}
</style>

<body>

<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

<script>

var width = 960, height = 500, colors = d3.scale.category10();

var n = 20, // number of nodes
    m = 22, // number of links
    charge = -1000;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
    .on("mousedown", create);

create();

function create () {
  svg.selectAll(".link, .node").remove();
  randomGraph(n, m, charge);
}

function randomGraph (n, m, charge) { //creates a random graph on n nodes and m links
  var nodes = d3.range(n).map(Object),
      list  = randomChoose(unorderedPairs(d3.range(n)), m),
      links = list.map(function (a) { return {source: a[0], target: a[1]} });

  var force = d3.layout.force()
      .size([width, height])
      .nodes(nodes)
      .links(links)
      .charge(charge)
      .on("tick", tick)
      .start();

  var svgLinks = svg.selectAll(".link").data(links)
    .enter().append("line")
      .attr("class", "link");

  var svgNodes = svg.selectAll(".node").data(nodes)
    .enter().append("circle")
      .attr("class", "node")
      .attr("r", 3)
      .style("fill", "white");

  svgNodes.transition().duration(800)
      .attr("r", function (d) { return 3 + 3 * d.weight })
      .style("fill", function (d) { return colors(d.weight) });

  svgLinks.transition().duration(800)
      .style("stroke-width", 3);

  function tick () {
    svgNodes
        .attr("cx", function(d) { return d.x })
        .attr("cy", function(d) { return d.y });

    svgLinks
        .attr("x1", function(d) { return d.source.x })
        .attr("y1", function(d) { return d.source.y })
        .attr("x2", function(d) { return d.target.x })
        .attr("y2", function(d) { return d.target.y });
  }
}

function randomChoose (s, k) { // returns a random k element subset of s
  var a = [], i = -1, j;
  while (++i < k) {
    j = Math.floor(Math.random() * s.length);
    a.push(s.splice(j, 1)[0]);
  };
  return a;
}

function unorderedPairs (s) { // returns the list of all unordered pairs from s
  var i = -1, a = [], j;
  while (++i < s.length) {
    j = i;
    while (++j < s.length) a.push([s[i],s[j]])
  };
  return a;
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">

<style>
.link {
  stroke: black;
  stroke-width: 2px;
}
.node {
  stroke: white;
  stroke-width: 2px;
}
</style>

<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

var width = 960, height = 500, colors = d3.scale.category10();

var n = 200, 
    k = 7,
    nodes = d3.range(n).map(function (num) { return {type: num % k, charge: -50} }),
    links = d3.range(1,n).map(function (a) { return {source: nodes[0], target: nodes[a]} });

    nodes[0].fixed = true;
    nodes[0].x = 480;
    nodes[0].y = 250;

var invisibleNodes = d3.range(k).map(function () { return {charge: -1000} }),
    invisibleLinks = invisibleNodes.map(function (a) { return {source: 0, target: a} });

var force = d3.layout.force()
    .size([width, height])
    .nodes(nodes.concat(invisibleNodes))
    .links(invisibleLinks)
    .charge(function (d) { return d.charge })
    .on("tick", tick)
    .start();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svgLinks = svg.selectAll(".link").data(links)
  .enter().append("line")
    .attr("class", "link")

svgNodes = svg.selectAll(".node").data(nodes)
  .enter().append("circle")
    .attr("class", "node")
    .attr("r", 8)
    .style("fill", function (d) { return colors(d.type) })
    .call(force.drag);

function tick(e) {
  var k = .3 * e.alpha;

  // Push nodes toward their designated focus.
  nodes.forEach(function(o, i) { 
    o.y += (invisibleNodes[o.type].y - o.y) * k;
    o.x += (invisibleNodes[o.type].x - o.x) * k;
  });

  svgNodes
      .attr("cx", function(d) { return d.x })
      .attr("cy", function(d) { return d.y });

  svgLinks
      .attr("x1", function(d) { return d.source.x })
      .attr("y1", function(d) { return d.source.y })
      .attr("x2", function(d) { return d.target.x })
      .attr("y2", function(d) { return d.target.y });
};

</script><!DOCTYPE html>
<meta charset="utf-8">

<style>
.link {
  stroke: white;
  stroke-width: 1px;
}
.licensing {
  fill: #4DDE00;
}
.suit {
  fill: #0772A1;
}
.resolved {
  fill: #FF8700;
}
.node {
  fill: lightgray;
  stroke: black;
  stroke-width: 1px;
}
text {
  font: 10px sans-serif;
  pointer-events: none;
  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;
}
</style>

<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

// http://blog.thomsonreuters.com/index.php/mobile-patent-suits-graphic-of-the-day/
var links = [
  {source: "Microsoft", target: "Amazon", type: "licensing"},
  {source: "Microsoft", target: "HTC", type: "licensing"},
  {source: "Samsung", target: "Apple", type: "suit"},
  {source: "Motorola", target: "Apple", type: "suit"},
  {source: "Nokia", target: "Apple", type: "resolved"},
  {source: "HTC", target: "Apple", type: "suit"},
  {source: "Kodak", target: "Apple", type: "suit"},
  {source: "Microsoft", target: "Barnes & Noble", type: "suit"},
  {source: "Microsoft", target: "Foxconn", type: "suit"},
  {source: "Oracle", target: "Google", type: "suit"},
  {source: "Apple", target: "HTC", type: "suit"},
  {source: "Microsoft", target: "Inventec", type: "suit"},
  {source: "Samsung", target: "Kodak", type: "resolved"},
  {source: "LG", target: "Kodak", type: "resolved"},
  {source: "RIM", target: "Kodak", type: "suit"},
  {source: "Sony", target: "LG", type: "suit"},
  {source: "Kodak", target: "LG", type: "resolved"},
  {source: "Apple", target: "Nokia", type: "resolved"},
  {source: "Qualcomm", target: "Nokia", type: "resolved"},
  {source: "Apple", target: "Motorola", type: "suit"},
  {source: "Microsoft", target: "Motorola", type: "suit"},
  {source: "Motorola", target: "Microsoft", type: "suit"},
  {source: "Huawei", target: "ZTE", type: "suit"},
  {source: "Ericsson", target: "ZTE", type: "suit"},
  {source: "Kodak", target: "Samsung", type: "resolved"},
  {source: "Apple", target: "Samsung", type: "suit"},
  {source: "Kodak", target: "RIM", type: "suit"},
  {source: "Nokia", target: "Qualcomm", type: "suit"}
];

var width  = 960,
    height = 500;

var nodes = {}; // Compute the distinct nodes from the links
links.forEach(function (link) {
  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});
  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});
});
nodes = d3.values(nodes)

links.forEach(function (link) {
  link.linkWidth  = 3;
  link.headLength = 15;
  link.headWidth  = 5;
});

var force = d3.layout.force()
    .size([width, height])
    .nodes(nodes)
    .links(links)
    .charge(-3000)
    .gravity(.8)
    .on("tick", tick)
    .start();

// Attach the r attribute looking at the number of neighbors.
// This is necessary for calculatePolygon)
nodes.forEach(function(node) {node.r = 3 + 1.1 * node.weight })

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var svgLinks = svg.selectAll(".link").data(links)
  .enter().append("polygon")
    .attr("class", function (d) { return "link " + d.type})

var svgNodes = svg.selectAll(".node").data(nodes)
  .enter().append("circle")
    .attr("class", "node")
    .attr("r", function (d) {return d.r})
    .call(force.drag);

var svgTexts = svg.selectAll("text").data(nodes)
  .enter().append("text")
    .attr("x", function (d) { return d.r + 6 })
    .attr("y", ".31em")
    .text(function(d) { return d.name; });

function tick() {
  svgNodes.attr("transform", translate);
  svgTexts.attr("transform", translate);
  svgLinks.attr("points", calculatePolygon);
}

function translate (d) {
  return "translate(" + d.x + "," + d.y + ")";
}

function calculatePolygon(d) {
  var p2  = d.source,
      w   = diff(d.target, p2),
      wl  = length(w),
      v1  = scale(w, (wl - d.target.r) / wl),
      p1  = sum(p2, v1),
      v2  = scale(rotate90(w), d.linkWidth / length(w)),
      p3  = sum(p2, v2),
      v1l = length(v1),
      v3  = scale(v1, (v1l - d.headLength) / v1l),
      p4  = sum(p3, v3),
      v2l = length(v2),
      v4  = scale(v2, d.headWidth / v2l),
      p5  = sum(p4, v4);

  return pr(p1) +" "+ pr(p2) +" "+ pr(p3) +" "+ pr(p4) +" "+ pr(p5);

  function length(v) {return Math.sqrt(v.x * v.x + v.y * v.y)}
  function diff(v, w) {return {x: v.x - w.x, y: v.y - w.y}}
  function sum(v, w) {return {x: v.x + w.x, y: v.y + w.y}}
  function scale(v, f) {return {x: f * v.x, y: f * v.y}}
  function rotate90(v) {return {x: v.y, y: -v.x}} // clockwise
  function pr(v) {return v.x +","+ v.y}
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">

<style>
.link {
  stroke: white;
  fill: black;
}
.node {
  fill: steelblue;
  stroke: #fff;
  stroke-width: 2px;
}
</style>

<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width  = 960, 
    height = 500,
    nodes  = [{r: 10}, {r: 15}, {r: 20}, {r: 25}],
    list   = [[0, 1], [0, 2], [1, 2], [2, 1], [2, 0], [2, 3], [3, 1], [0, 3]],
    links  = list.map(createLinks);

function createLinks (a) {
  return {source: a[0], target: a[1], linkWidth: 5, headLength:20, headWidth: 8}
}

var force = d3.layout.force()
    .size([width, height])
    .nodes(nodes)
    .links(links)
    .linkDistance(150)
    .on("tick", tick)
    .start();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svgLinks = svg.selectAll(".link").data(links)
  .enter().append("polygon")
    .attr("class", "link");

svgNodes = svg.selectAll(".node").data(nodes)
  .enter().append("circle")
    .attr("class", "node")
    .attr("r", function (d) {return d.r})
    .call(force.drag);

function tick() {
  svgNodes
      .attr("cx", function (d) {return d.x})
      .attr("cy", function (d) {return d.y});
  svgLinks
      .attr("points", calculatePolygon);
}

function calculatePolygon(d) {
  var p2  = d.source,
      w   = diff(d.target, p2),
      wl  = length(w),
      v1  = scale(w, (wl - d.target.r) / wl),
      p1  = sum(p2, v1),
      v2  = scale(rotate90(w), d.linkWidth / length(w)),
      p3  = sum(p2, v2),
      v1l = length(v1),
      v3  = scale(v1, (v1l - d.headLength) / v1l),
      p4  = sum(p3, v3),
      v2l = length(v2),
      v4  = scale(v2, d.headWidth / v2l),
      p5  = sum(p4, v4);
      
  return pr(p1) +" "+ pr(p2) +" "+ pr(p3) +" "+ pr(p4) +" "+ pr(p5);

  function length(v) {return Math.sqrt(v.x * v.x + v.y * v.y)}
  function diff(v, w) {return {x: v.x - w.x, y: v.y - w.y}}
  function sum(v, w) {return {x: v.x + w.x, y: v.y + w.y}}
  function scale(v, f) {return {x: f * v.x, y: f * v.y}}
  function rotate90(v) {return {x: v.y, y: -v.x}} // clockwise
  function pr(v) {return v.x +","+ v.y}
}

</script><!DOCTYPE html>
<meta charset="utf-8">
<title>Refugee resettlements in Georgia</title>
<style>

body {
  font: 12px sans-serif;
}

.node rect {
  fill-opacity: .9;
  shape-rendering: crispEdges;
}

.link {
  fill: none;
  stroke: #000;
}

div.tooltip {
  position: absolute; 
  text-align: center; 
  width: 100px;  
  height: 56px;   
  padding: 2px; 
  font: 12px sans-serif;  
  border: 0px;          
  border-radius: 8px;
}

.Syria text{
  fill: red;
}

</style>
<body>

<p id="chart">

<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="sankey.js"></script>
<script>
	
var units = "People";

function width_getter (some_num) {
  if (some_num > 400 ) {return 400;}
    else {return some_num;}
  }

width = width_getter(window.innerWidth);


var margin = {top: 0, right: 0, bottom: 10, left: 0},
    width = width - margin.left - margin.right,
    height = 900 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),    // zero decimal places
    format = function(d) { 
      if (d > 1) { return formatNumber(d) + " people";}
      else {return formatNumber(d) + " person";}
   };
    
// append the svg canvas to the page
var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", 
          "translate(" + margin.left + "," + margin.top + ")");

// Set the sankey diagram properties
var sankey = d3.sankey()
    .nodeWidth(15)
    .nodePadding(10)
    .size([width, height]);

var path = sankey.link();

var div = d3.select("body")
  .append("div")  // declare the tooltip div 
  .attr("class", "tooltip")
  .style("opacity", 0);

// load the data (using the timelyportfolio csv method)
d3.csv("refugee_flow_top_ten_and_other.csv", function(error, data) {

  // set up graph in same style as original example but empty
  graph = {"nodes" : [], "links" : []};

    data.forEach(function (d) {
      graph.nodes.push({ "name": d.source });
      graph.nodes.push({ "name": d.target });
      graph.links.push({ "source": d.source,
                         "target": d.target,
                         "value": +d.value });
     });

     // return only the distinct / unique nodes
     graph.nodes = d3.keys(d3.nest()
       .key(function (d) { return d.name; })
       .map(graph.nodes));

     // loop through each link replacing the text with its index from node
     graph.links.forEach(function (d, i) {
       graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);
       graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);
     });

     //now loop through each nodes to make nodes an array of objects
     // rather than an array of strings
     graph.nodes.forEach(function (d, i) {
       graph.nodes[i] = { "name": d };
     });

  sankey
    .nodes(graph.nodes)
    .links(graph.links)
    .layout(32);

function nospace (in_string) {
  return in_string.replace(/\s+/g, "");
}

function labelgetter (some_num, some_str) {
  if (some_num > 0) {return "Everywhere → " + some_str;}
    else {return some_str + " → Everywhere"}
}

// add in the nodes
  var node = svg.append("g").selectAll(".node")
      .data(graph.nodes)
    .enter().append("g")
      .attr("class", function (d) {return "node " + nospace(d.name);})
      .attr("transform", function(d) { 
		  return "translate(" + d.x + "," + d.y + ")"; })

// add the rectangles for the nodes
  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankey.nodeWidth())
      .style("fill", function (d) {
        if(d.x < width/2) {return "darkkhaki";}
        else {return "darkseagreen";}
      })
      .style("stroke", "white")
      .style("stroke-width", "5px")
      .style("stroke-opacity", 0) // add a big invisible border to each box so the small ones are clickable
    .on("mouseover", function (d) {
      div.transition()
        .duration(10)  
        .style("opacity", 0);
      div.transition()
        .duration(10)  
        .style("opacity", .9)
        .style("background","lightgray")
      div .html(labelgetter(d.x, d.name) + "<br>" + format(d.value))   
        .style("left", width/2.5 + "px")      
        .style("top", (d3.event.pageY + 16) + "px")
      d3.selectAll(".link").filter("." + nospace(d.name)).transition().duration(10).style("stroke", "darkred").style("opacity", 0.6);
      }) //turn selected ones red.
      .on("mouseout", function (d) {
         d3.selectAll(".link").transition().duration(10).style("stroke", "#000").style("opacity", 0.15)
         div.transition().style("opacity", 0);
         // reset paths to default
      });

// add in the title for the nodes
  node.append("text")
      .attr("x", -4)
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "end")
      .attr("class", function (d) {return d.name;})
      .text(function(d) { return d.name; })
    .filter(function(d) { return d.x < width / 2; })
      .attr("x", 4 + sankey.nodeWidth())
      .attr("text-anchor", "start");



// add in the links
  var link = svg.append("g").selectAll(".link")
      .data(graph.links)
    .enter().append("path")
      .attr("class", function (d) {return "link " + nospace(d.source.name) + " " + nospace(d.target.name);})
      .attr("d", path)
      .style("stroke-width", function(d) {return Math.max(1, d.dy); })
      .style("opacity", 0.15)
      
      .on("mouseover", function (d) {
        d3.select(this).transition().duration(10).style("stroke", "darkred").style("opacity", 0.6)   
        div.transition()
          .duration(10)  
          .style("opacity", 0);
        div.transition()
          .duration(10)  
          .style("opacity", .9)
          .style("background","lightgray")
        div .html(
          d.source.name + " → " + d.target.name + "<br>" + format(d.value))   
          .style("left", width/2.5 + "px")      
          .style("top", (d3.event.pageY + 16) + "px");
      })
      .on("mouseout", function (d){
         d3.selectAll(".link").transition().duration(10).style("stroke", "#000").style("opacity", 0.15)
         div.transition().style("opacity", 0);
      });


 });
//total 31241
// cut years, just get total and fill down cities
//correct like iraq, alpharette, 1; add to correct totals


</script>

</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #222;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script src="//d3js.org/queue.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var projection = d3.geo.albersUsa()
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var color = d3.scale.ordinal()
    .domain(d3.range(9).reverse())
    .range(["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

queue()
    .defer(d3.json, "/mbostock/raw/4090846/us.json")
    .defer(d3.tsv, "coastal-counties.tsv")
    .await(ready);

function ready(error, us, coastals) {
  if (error) throw error;

  var counties = topojson.feature(us, us.objects.counties),
      neighbors = topojson.neighbors(us.objects.counties.geometries),
      coastals = d3.set(coastals.map(function(d) { return d.id; })),
      nexts = [],
      nexts2 = [],
      distance = 0;

  counties.features.forEach(function(county, i) {
    if (coastals.has(county.id)) nexts.push(county);
    county.distance = Infinity;
    county.neighbors = neighbors[i].map(function(j) { return counties.features[j]; });
  });

  while (nexts.length) {
    nexts.forEach(function(county) {
      if (county.distance > distance) {
        county.distance = distance;
        county.neighbors.forEach(function(neighbor) { nexts2.push(neighbor); });
      }
    });
    nexts = nexts2, nexts2 = [], ++distance;
  }

  var county = svg.append("g")
      .attr("class", "counties")
    .selectAll("path")
      .data(d3.nest()
        .key(function(d) { return d.distance; })
        .entries(counties.features)
        .map(function(e) { return {type: "FeatureCollection", features: e.values, distance: +e.key}; }))
    .enter().append("path")
      .attr("d", path);

  d3.timer(function(elapsed) {
    county.style("fill", function(d) { return d3.hsl(d.distance * 10 - elapsed / 10, 1, .5); });
  });
}

</script>

<!DOCTYPE html>
<html lang="en" ng-app="myApp">
  <head>
    <meta charset="utf-8">
    <!-- // <script type="text/javascript" src="http://d3js.org/d3.v3.js"></script> -->
    <script src="http://d3js.org/d3.v3.js"></script>
    <script type="text/javascript" src="reusable.d3.charts.js"></script>


    <link rel="stylesheet"  href="http://cdnjs.cloudflare.com/ajax/libs/normalize/3.0.3/normalize.min.css">
    <link rel="stylesheet" href="http://s3.amazonaws.com/codecademy-content/courses/ltp/css/bootstrap.css">
    <link rel="stylesheet" href="renewable.css">
    <link href="http://fonts.googleapis.com/css?family=Lato:400,600" rel="stylesheet" type="text/css">
    <link href="http://fonts.googleapis.com/css?family=Lato:400,600" rel="stylesheet" type="text/css">
    <link href="http://fonts.googleapis.com/css?family=Lato:400,600" rel="stylesheet" type="text/css">
    <link href='http://fonts.googleapis.com/css?family=Poiret+One' rel='stylesheet' type='text/css'>

  </head>
  <body>
    <div class="nav clearfix">
      <div class="container" id="fitwidth">
        <ul class="pull-left border">
            <li class="mainLogo"><a href="http://d3js.org/" target="_blank"><img src="https://raw.githubusercontent.com/jkeohan/portfolio/master/images/d3js.jpg" alt="D3"></a></li>
            <li class="mainLogo" id="ocd"><a href="https://data.oecd.org/energy/renewable-energy.htm" target="_blank"><img src="https://raw.githubusercontent.com/jkeohan/portfolio/master/images/logo-oecd-embed%402x.png"></a></li>
        </ul>
        <ul class="pull-left chart-types">
          <li><a href="index.html#section1">Scatterplot</a></li>
          <li><a href="index.html#section2">Bar Graph</a></li>
          <li><a href="index.html#section3">Line Chart</a></li>
        </ul>
      </div>
    </div>

    <div class="hero-shot"></div>
    <div class="main-content">
      <div class="containter main">
        <h1>D3 Charts on Renewable Energy</h1>
        <p class="intro">This site was created to demo several D3 charts and graphs developed while taking the <a href="http://journalismcourses.org/D3.html">Data Visualization and Inforgaphics with D3</a> online course provided by JournalismCourses.org. The course consisted of 6 modules and was desinged to introduce data vizualization best practices and then building several charts and graphs using D3. The data set was provided by OECD and consisted of the percentage of Renewable Energy production of 41 countries from 2002 to 2012</p>

        <span>Source: </span><a href="https://data.oecd.org/energy/renewable-energy.htm#indicator-chart">https://data.oecd.org/energy</a>
        <hr class="divider">
      </div>
      <a name="section1"></a>
      <div class="container main">
        <h1><span class="number">1 </span>Scatter Plot on Regional Growth</h1>
        <div class="row">
          <div class="col-md-8" id="reduceWidth" style="margin-bottom:40px">
            <div class="switch">
              <form>
                <label>Regions<input type="radio" name="choice" value="Regions" class="radio_buttons" checked></label>
                <label>Countries<input type="radio" name="choice" value="Countries" class="radio_buttons"></label>
              </form>
            </div>
            <div class="regionalstats" ></div>
          </div>
          <div class="col-md-4" id="expandWidth">

             <div class="panel panel-success">
              <div class="panel-heading"><h3>Functional Components</h3></div>
                <div class="panel-body">
                <p>Some of the d3.methods used in the importing and formatting data used to render the scatterplot included:</p>

                <table>
                  <tr class="section1">
                    <td>d3.csv</td>
                    <td>d3.map</td>
                    <td>d3.set</td>
                    <td>d3.keys</td>
                  </tr>
                  <tr class="section1">
                    <td>d3.mean</td>
                    <td>d3.nest</td>
                    <td>d3.extent</td>
                    <td>d3.transition</td>
                  </tr>
                </table>
                <br>
                <p>Additional functionality included:
                <ul>
                  <li>Radio Buttons that transition regions/countries</li>
                  <li>Resuable Legend Module</li>
                </ul>
                <p>This component was created following best practices outlined by Chris Viau in his book: <a href="http://bleedingedgepress.com/our-books/developing-a-d3-js-edge/">Developing a D3.js Edge"</a> and is called using <code>d3.models.legend()</code>.</p>
                <pre>
                <code>
  var rlegend = d3.models.legend()
    .fontSize(15)
    .width(width-160)
    .height(height)
    .inputScale(colorScale)
  svg.call(rlegend)
                </code></pre>
              </div>
             </div>
         </div>
        <hr class="divider">
      </div>  
      <a name="section2"></a>
      <div class="container main" id="section2">
        <h1><span class="number">2 </span>Bar Graph On Country Growth</h1>
        <div class="row">
          <div class="col-md-8" id="reduceWidth">
            <div class="playAll"></div>
            <div class="buttonContainer"></div>
            <div class="clearfix"></div>
            <div class="countrystats"></div>
          </div>
          <div class="col-md-4" id="expandWidth">
            <div class="panel panel-success">
              <div class="panel-heading"><h3>Functional Components</h3></div>
                <div class="panel-body">
                <p>Some of the d3.methods used in the importing and formatting data used to render the scatterplot included:</p>

                <table>
                  <tr class="section1">
                    <td>d3.csv</td>
                    <td>d3.map</td>
                    <td>d3.set</td>
                    <td>d3.keys</td>
                  </tr>
                  <tr class="section1">
                    <td>d3.nest</td>
                    <td>d3.max</td>
                    <td>d3.extent</td>
                    <td>d3.transition</td>
                  </tr>
                </table>
                <br>
                <p>Additional functionality includes the ablility to sequentially cycle through the years by adding an "on click" eventreceiver to <code>"PLAY ALL YEARS"</code> button.</p>
                <pre><code> playAll.on("click", function() {
  svg.append("text")
    .attr("class", "loading")
    .text("Loading ...").attr("font-size",20)
    .attr("x",function() { return width/2; })
    .attr("y",function() { return height/2-5; });

   var i = 0;
   playInterval = setInterval(function() {

    update(years[i]);
    i++;
    if(i > years.length - 1) { 
      clearInterval(playInterval);}
    }, 2000);
 });
         </code></pre>
              </div>
             </div> 
            </div>    
        </div>
        <hr class="divider">
      </div>
        <a name="section3"></a>
        <div class="container main" id="section3">
          <h1><span class="number">3 </span>Line Chart On Country Growth</h1>
          <div class="row">
            <div class="col-md-8" id="reduceWidth">
              <div class="lineChart"></div>
              <div class="sideBar"></div>
            </div>
            <div class="col-md-4" id="expandWidth">
              <div class="panel panel-success">
                <div class="panel-heading"><h3>Functional Components</h3></div>
                  <div class="panel-body">
                  <p>Some of the d3.methods used in the importing and formatting data used to render the scatterplot included:</p>

                  <table>
                    <tr class="section1">
                      <td>d3.csv</td>
                      <td>d3.map</td>
                      <td>d3.set</td>
                      <td>d3.keys</td>
                    </tr>
                    <tr class="section1">
                      <td>d3.nest</td>
                      <td>d3.sort</td>
                      <td>d3.filter</td>
                      <td>d3.transition</td>
                    </tr>
                  </table>
                  <br>
                  <p>Additional functionality includes:
                  <ul>
                    <li>Sliding tooltip</li>
                    <li>Table displaying year data</li>
                    <li>Line highlighted on mouseover</li>
                  </ul>
                    </p>
                </div>
             </div> 
          </div>
        </div>
    </div>

    <script type="text/javascript" src="js/section1.js"></script>
    <script type="text/javascript" src="js/section2.js"></script>
    <script type="text/javascript" src="js/section3.js"></script>
  </body>
</html>
<html>
<head>
  <title>D3 in Action Chapter 2 - Example 6</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
</head>
<style>
  svg {
    height: 500px;
    width: 500px;
    border: 1px solid gray;
  }
</style>
<body>

<div>
  <svg>
  </svg>
</div>
</body>
  <footer>
    
<script>
d3.select("svg")
.selectAll("rect")
.data([14, 68, 24500, 430, 19, 1000, 5555])
.enter()
.append("rect")
.attr("width", 10)
.attr("height", function(d) {return d})
.style("fill", "blue")
.style("stroke", "red")
.style("stroke-width", "1px")
.style("opacity", .25)
.attr("x", function(d,i) {return i * 10})
.attr("y", function(d) {return 100 - d})

</script>
  </footer>

</html>
<!DOCTYPE html>
<meta charset="utf-8">
<title>Simpe Single Axis Zoom</title>
<script src="http://d3js.org/d3.v3.min.js"></script>
<style>
.axis path, .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
}
</style>
<body>
<div id="chart"></div>
<script>
  var ex_chart = example().zoom(true);
  
  var data = [];
  for (var i = 0; i < 100; i++) {
    data.push([Math.random(), Math.random()]);
  }
  d3.select('#chart')
  .append("svg").attr("width", window.innerWidth).attr("height",window.innerHeight)
  .datum(data).call(ex_chart);
  
  function example() {
    var svg;
    var margin = {
      top: 60,
      bottom: 80,
      left: 60,
      right: 0
    };
    var width = 500;
    var height = 400;
    var xaxis = d3.svg.axis();
    var yaxis = d3.svg.axis();
    var xscale = d3.scale.linear();
    var yscale = d3.scale.linear();
    var zoomable = true;
  
  
    var xyzoom = d3.behavior.zoom()
      .x(xscale)
      .y(yscale)
      .on("zoom", zoomable ? draw : null);
    var xzoom = d3.behavior.zoom()
      .x(xscale)
      .on("zoom", zoomable ? draw : null);
    var yzoom = d3.behavior.zoom()
      .y(yscale)
      .on("zoom", zoomable ? draw : null);
  
    function chart(selection) {
      selection.each(function(data) {
        svg = d3.select(this).selectAll('svg').data([data]);
        svg.enter().append('svg');
        var g = svg.append('g')
          .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
  
        g.append("defs").append("clipPath")
          .attr("id", "clip")
          .append("rect")
          .attr("width", width - margin.left - margin.right)
          .attr("height", height - margin.top - margin.bottom);
  
        g.append("svg:rect")
          .attr("class", "border")
          .attr("width", width - margin.left - margin.right)
          .attr("height", height - margin.top - margin.bottom)
          .style("stroke", "black")
          .style("fill", "none");
  
        g.append("g").attr("class", "x axis")
          .attr("transform", "translate(" + 0 + "," + (height - margin.top - margin.bottom) + ")");
  
        g.append("g").attr("class", "y axis");
  
        g.append("g")
          .attr("class", "scatter")
          .attr("clip-path", "url(#clip)");
  
        g
          .append("svg:rect")
          .attr("class", "zoom xy box")
          .attr("width", width - margin.left - margin.right)
          .attr("height", height - margin.top - margin.bottom)
          .style("visibility", "hidden")
          .attr("pointer-events", "all")
          .call(xyzoom);
  
        g
          .append("svg:rect")
          .attr("class", "zoom x box")
          .attr("width", width - margin.left - margin.right)
          .attr("height", height - margin.top - margin.bottom)
          .attr("transform", "translate(" + 0 + "," + (height - margin.top - margin.bottom) + ")")
          .style("visibility", "hidden")
          .attr("pointer-events", "all")
          .call(xzoom);
  
        g
          .append("svg:rect")
          .attr("class", "zoom y box")
          .attr("width", margin.left)
          .attr("height", height - margin.top - margin.bottom)
          .attr("transform", "translate(" + -margin.left + "," + 0 + ")")
          .style("visibility", "hidden")
          .attr("pointer-events", "all")
          .call(yzoom);
  
        // Update the x-axis
        xscale.domain(d3.extent(data, function(d) {
          return d[0];
        }))
          .range([0, width - margin.left - margin.right]);
  
        xaxis.scale(xscale)
          .orient('bottom')
          .tickPadding(10);
  
        svg.select('g.x.axis').call(xaxis);
  
        // Update the y-scale.
        yscale.domain(d3.extent(data, function(d) {
          return d[1];
        }))
          .range([height - margin.top - margin.bottom, 0]);
  
        yaxis.scale(yscale)
          .orient('left')
          .tickPadding(10);
  
        svg.select('g.y.axis').call(yaxis);
  
        draw();
      });
  
      return chart;
    }
  
    function update() {
      var gs = svg.select("g.scatter");
  
      var circle = gs.selectAll("circle")
        .data(function(d) {
          return d;
        });
  
      circle.enter().append("svg:circle")
        .attr("class", "points")
        .style("fill", "steelblue")
        .attr("cx", function(d) {
          return X(d);
        })
        .attr("cy", function(d) {
          return Y(d);
        })
        .attr("r", 4);
  
      circle.attr("cx", function(d) {
        return X(d);
      })
        .attr("cy", function(d) {
          return Y(d);
        });
  
      circle.exit().remove();
    }
  
    function zoom_update() {
      xyzoom = d3.behavior.zoom()
        .x(xscale)
        .y(yscale)
        .on("zoom", zoomable ? draw : null);
      xzoom = d3.behavior.zoom()
        .x(xscale)
        .on("zoom", zoomable ? draw : null);
      yzoom = d3.behavior.zoom()
        .y(yscale)
        .on("zoom", zoomable ? draw : null);
  
      svg.select('rect.zoom.xy.box').call(xyzoom);
      svg.select('rect.zoom.x.box').call(xzoom);
      svg.select('rect.zoom.y.box').call(yzoom);
    }
  
    function draw() {
      svg.select('g.x.axis').call(xaxis);
      svg.select('g.y.axis').call(yaxis);
  
      update();
      zoom_update();
    };
  
    // X value to scale
  
    function X(d) {
      return xscale(d[0]);
    }
  
    // Y value to scale
  
    function Y(d) {
      return yscale(d[1]);
    }
  
    chart.zoom = function (_){
      if (!arguments.length) return zoomable;
      zoomable = _;
      return chart;
    }
  
    return chart;
  }
</script>
<html>
  <head>
    <title>D3 Test</title>
    <script src="http://d3js.org/d3.v2.min.js"></script>
  </head>
  <body>
    <script type="text/javascript">
      var w = 500, h = 500;
      var svg = d3.select("body")
                  .append("svg")
                  .attr("width", w)
                  .attr("height", h);
      
      // var scale = d3.scale.linear().domain([-10,10]).range([-200,200]);
      var scale = d3.scale.linear();
      var scaleT = 10 ;
      
      //  4
      // 2 0
      //  5
      // 3 1
      //  6
      function makeSegments(x, y) {
        return [
          {x: 2-x, y: -3-y, v: true},
          {x: 2-x, y: 0-y, v: true},
          {x: -1-x, y: -3-y, v: true},
          {x: -1-x, y: 0-y, v: true},
          {x: -1-x, y: -3-y, v: false},
          {x: -1-x, y: 0-y, v: false},
          {x: -1-x, y: 3-y, v: false},
        ].reverse();
      }
      var segmentLocations =
        makeSegments(12, 0)
        .concat(makeSegments(7, 0))
        .concat(makeSegments(-6, 0))
        .concat(makeSegments(-11, 0)).reverse();
      
      // var segmentStates = segmentLocations.map(function() {return 0;});

      var digits = [
        [true, true, true, true, true, false, true],
        [true, true, false, false, false, false, false],
        [true, false, false, true, true, true, true],
        [true, true, false, false, true, true, true],
        [true, true, true, false, false, true, false],
        [false, true, true, false, true, true, true],
        [false, true, true, true, true, true, true],
        [true, true, false, false, true, false, false],
        [true, true, true, true, true, true, true],
        [true, true, true, false, true, true, true],
        [false, false, false, false, false, false, false]
      ]
      function setSegments(segments, pos, digit) {
        for (var i = 0; i < 7; ++i) {
          segments[pos+i] = digits[digit][i] ? 0 : 90;
        }
      }
       
      var line = d3.svg.line()
                       .x(function(d) {return scale(d[0]);})
                       .y(function(d) {return scale(d[1]);})
                       .interpolate('linear');
      
      function generateTarget() {
        var newSegments = [];
        var d = new Date();
        var h = (d.getHours() % 12) || 12;
        var m = d.getMinutes();
        var s = d.getSeconds();
        var pos = Math.floor(Math.random()*4);
        setSegments(newSegments, 21, Math.floor(h/10) || 10);
        setSegments(newSegments, 14, h%10);
        setSegments(newSegments, 7, Math.floor(m/10));
        setSegments(newSegments, 0, m%10);
        return newSegments;
      }
      
      function lastMismatch(a, b) {
        if (a.length != b.length) 
          return -1;
        
          for (var i = a.length-1; i >= 0; --i) {
            if (a[i] != b[i]) {
              return i;
            }
          }
          return -1;
      }
      
      function redraw(target) {
        var oldData = svg.selectAll(".segment").data();
        if (oldData.length == 0)
           oldData = segmentLocations.map(function() {return 0;});
        var segments = svg.selectAll(".segment");

        var pathGroup = 
          segments.data(oldData).enter()
                  .append("g")
                  .attr("class", "segment")
                  .attr("transform", "translate("+w/2+","+h/2+") scale("+scaleT+")");
        pathGroup.append("path")
                 .attr("fill", "black")
                 .attr("d", function(d, i) { 
                   var l = segmentLocations[i];
                   return line(l.v ?
                     [[l.x, l.y],
                      [l.x+0.5, l.y+0.5],
                      [l.x+0.5, l.y+2.5],
                      [l.x, l.y+3],
                      [l.x-0.5, l.y+2.5],
                      [l.x-0.5, l.y+0.5]] :
                     [[l.x, l.y],
                      [l.x+0.5, l.y+0.5],
                      [l.x+2.5, l.y+0.5],
                      [l.x+3, l.y],
                      [l.x+2.5, l.y-0.5],
                      [l.x+0.5, l.y-0.5]]
                   ) + " Z" });
        pathGroup.append("line")
                 .attr("x1", 0).attr("y1", 0)
                 .attr("x2", function(d, i) { 
                   if (segmentLocations[i].v) {
                     return scale(segmentLocations[i].x)
                   } else {
                     return segmentLocations[i].x < 0 ? 
                       scale(segmentLocations[i].x+3) :
                       scale(segmentLocations[i].x)
                   }
                 })
                 .attr("y2", function(d, i) { 
                   return scale(segmentLocations[i].y)
                 })
                 .attr("stroke", "black")
                 .attr("stroke-width", "0.03");
        var stop = true;

        var delay = 0;
        // for (var i = lastMismatch(current, target); i >= 0; i = lastMismatch(current, target)) {
        var i = lastMismatch(oldData, target);
        if (i >= 0) {
          var delta = target[i] - oldData[i];
          var nextIntermediary = oldData.map(function(x, idx) { 
            if (idx <= i) 
              return x + delta;
            else 
              return x;
            });
          segments.data(nextIntermediary).transition()
                  .attr("transform", function(d) { return "translate("+w/2+","+h/2+") scale("+scaleT+") rotate("+(d)+")"; })
                  .duration(500)
        }
      }
      redraw(generateTarget());

      setInterval(function() {
        redraw(generateTarget());
      }, 700);
    </script>
  </body>
</html><!DOCTYPE html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
		<title>Swimlane Chart</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<link rel="stylesheet" href="style.css" type="text/css">
		<link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
	</head>
	<body>
		<script type="text/javascript">
		//data
		var lanes = ["Phase I","Phase II","Phase III","Phase IV","Phase V","Phase VI"],
			laneLength = lanes.length,
			items = [{"lane": 0, "id": "Item 1", "start": 5, "end": 205},
					{"lane": 0, "id": "Item 2", "start": 265, "end": 420},
					{"lane": 0, "id": "Item 3", "start": 580, "end": 615},
					{"lane": 0, "id": "Item 4", "start": 620, "end": 900},
					{"lane": 0, "id": "Item 5", "start": 960, "end": 1265},
					{"lane": 0, "id": "Item 6", "start": 1270, "end": 1365},
					{"lane": 0, "id": "Item 7", "start": 1370, "end": 1640},
					{"lane": 0, "id": "Item 8", "start": 1645, "end": 1910},
					{"lane": 1, "id": "Item 9", "start": 300, "end": 530},
					{"lane": 1, "id": "Item 10", "start": 550, "end": 700},
					{"lane": 1, "id": "Item 11", "start": 710, "end": 790},
					{"lane": 1, "id": "Item 12", "start": 800, "end": 1180},
					{"lane": 1, "id": "Item 13", "start": 1190, "end": 1330},
					{"lane": 1, "id": "Item 14", "start": 1340, "end": 1560},
					{"lane": 1, "id": "Item 15", "start": 1610, "end": 1860},
					{"lane": 1, "id": "Item 16", "start": 1870, "end": 1900},
					{"lane": 1, "id": "Item 17", "start": 1910, "end": 1920},
					{"lane": 1, "id": "Item 18", "start": 1925, "end": 1985},
					{"lane": 1, "id": "Item 19", "start": 1990, "end": 1995},
					{"lane": 2, "id": "Item 20", "start": 10, "end": 670},
					{"lane": 2, "id": "Item 21", "start": 690, "end": 900},
					{"lane": 2, "id": "Item 22", "start": 920, "end": 1380},
					{"lane": 2, "id": "Item 23", "start": 1390, "end": 1890},
					{"lane": 2, "id": "Item 24", "start": 1900, "end": 1945},
					{"lane": 3, "id": "Item 25", "start": 5, "end": 205},
					{"lane": 3, "id": "Item 26", "start": 265, "end": 420},
					{"lane": 3, "id": "Item 27", "start": 580, "end": 615},
					{"lane": 3, "id": "Item 28", "start": 620, "end": 900},
					{"lane": 3, "id": "Item 29", "start": 960, "end": 1265},
					{"lane": 3, "id": "Item 30", "start": 1270, "end": 1365},
					{"lane": 3, "id": "Item 31", "start": 1370, "end": 1640},
					{"lane": 3, "id": "Item 32", "start": 1645, "end": 1910},
					{"lane": 4, "id": "Item 33", "start": 300, "end": 530},
					{"lane": 4, "id": "Item 34", "start": 550, "end": 700},
					{"lane": 4, "id": "Item 35", "start": 710, "end": 790},
					{"lane": 4, "id": "Item 36", "start": 800, "end": 1180},
					{"lane": 4, "id": "Item 37", "start": 1190, "end": 1330},
					{"lane": 4, "id": "Item 38", "start": 1340, "end": 1560},
					{"lane": 4, "id": "Item 39", "start": 1610, "end": 1860},
					{"lane": 4, "id": "Item 40", "start": 1870, "end": 1900},
					{"lane": 4, "id": "Item 41", "start": 1910, "end": 1920},
					{"lane": 4, "id": "Item 42", "start": 1925, "end": 1985},
					{"lane": 4, "id": "Item 43", "start": 1990, "end": 1995},
					{"lane": 5, "id": "Item 44", "start": 10, "end": 670},
					{"lane": 5, "id": "Item 45", "start": 690, "end": 900},
					{"lane": 5, "id": "Item 46", "start": 920, "end": 1380},
					{"lane": 5, "id": "Item 47", "start": 1390, "end": 1890},
					{"lane": 5, "id": "Item 48", "start": 1900, "end": 1945}]
			timeBegin = 0,
			timeEnd = 2000;
		</script>
		<script type="text/javascript">
		var m = [20, 15, 15, 120], //top right bottom left
			w = 960 - m[1] - m[3],
			h = 500 - m[0] - m[2],
			miniHeight = laneLength * 12 + 50,
			mainHeight = h - miniHeight - 50;

		//scales
		var x = d3.scale.linear()
				.domain([timeBegin, timeEnd])
				.range([0, w]);
		var x1 = d3.scale.linear()
				.range([0, w]);
		var y1 = d3.scale.linear()
				.domain([0, laneLength])
				.range([0, mainHeight]);
		var y2 = d3.scale.linear()
				.domain([0, laneLength])
				.range([0, miniHeight]);

		var chart = d3.select("body")
					.append("svg")
					.attr("width", w + m[1] + m[3])
					.attr("height", h + m[0] + m[2])
					.attr("class", "chart");
		
		chart.append("defs").append("clipPath")
			.attr("id", "clip")
			.append("rect")
			.attr("width", w)
			.attr("height", mainHeight);

		var main = chart.append("g")
					.attr("transform", "translate(" + m[3] + "," + m[0] + ")")
					.attr("width", w)
					.attr("height", mainHeight)
					.attr("class", "main");

		var mini = chart.append("g")
					.attr("transform", "translate(" + m[3] + "," + (mainHeight + m[0]) + ")")
					.attr("width", w)
					.attr("height", miniHeight)
					.attr("class", "mini");
		
		//main lanes and texts
		main.append("g").selectAll(".laneLines")
			.data(items)
			.enter().append("line")
			.attr("x1", m[1])
			.attr("y1", function(d) {return y1(d.lane);})
			.attr("x2", w)
			.attr("y2", function(d) {return y1(d.lane);})
			//.attr("stroke", "#96999b") //Uncomment to insert lines between lanes
			;

		main.append("g").selectAll(".laneText")
			.data(lanes)
			.enter().append("text")
			.text(function(d) {return d;})
			.attr("x", -m[1])
			.attr("y", function(d, i) {return y1(i + .5);})
			.attr("dy", ".5ex")
			.attr("text-anchor", "end")
			.attr("class", "laneText");
		
		//mini lanes and texts
		mini.append("g").selectAll(".laneLines")
			.data(items)
			.enter().append("line")
			.attr("x1", m[1])
			.attr("y1", function(d) {return y2(d.lane);})
			.attr("x2", w)
			.attr("y2", function(d) {return y2(d.lane);})
			//.attr("stroke", "#96999b")  //Uncomment to insert lines between lanes
			;

		mini.append("g").selectAll(".laneText")
			.data(lanes)
			.enter().append("text")
			.text(function(d) {return d;})
			.attr("x", -m[1])
			.attr("y", function(d, i) {return y2(i + .5);})
			.attr("dy", ".5ex")
			.attr("text-anchor", "end")
			.attr("class", "laneText");

		var itemRects = main.append("g")
							.attr("clip-path", "url(#clip)");
		
		//mini item rects
		mini.append("g").selectAll("miniItems")
			.data(items)
			.enter().append("rect")
			.attr("class", function(d) {return "miniItem" + d.lane;})
			.attr("x", function(d) {return x(d.start);})
			.attr("y", function(d) {return y2(d.lane + .5) - 5;})
			.attr("width", function(d) {return x(d.end - d.start);})
			.attr("height", 10);

		//mini labels
		mini.append("g").selectAll(".miniLabels")
			.data(items)
			.enter().append("text")
			.text(function(d) {return d.id;})
			.attr("x", function(d) {return x(d.start);})
			.attr("y", function(d) {return y2(d.lane + .5);})
			.attr("dy", ".5ex");

		//brush
		var brush = d3.svg.brush()
							.x(x)
							.on("brush", display);

		mini.append("g")
			.attr("class", "x brush")
			.call(brush)
			.selectAll("rect")
			.attr("y", 1)
			.attr("height", miniHeight - 1);

		display();
		
		function display() {
			var rects, labels,
				minExtent = brush.extent()[0],
				maxExtent = brush.extent()[1],
				visItems = items.filter(function(d) {return d.start < maxExtent && d.end > minExtent;});

			mini.select(".brush")
				.call(brush.extent([minExtent, maxExtent]));

			x1.domain([minExtent, maxExtent]);

			//update main item rects
			rects = itemRects.selectAll("rect")
			        .data(visItems, function(d) { return d.id; })
				.attr("x", function(d) {return x1(d.start);})
				.attr("width", function(d) {return x1(d.end) - x1(d.start);});
			
			rects.enter().append("rect")
				.attr("class", function(d) {return "miniItem" + d.lane;})
				.attr("x", function(d) {return x1(d.start);})
				.attr("y", function(d) {return y1(d.lane) + 10;})
				.attr("width", function(d) {return x1(d.end) - x1(d.start);})
				.attr("height", function(d) {return .8 * y1(1);});

			rects.exit().remove();

			//update the item labels
			labels = itemRects.selectAll("text")
				.data(visItems, function (d) { return d.id; })
				.attr("x", function(d) {return x1(Math.max(d.start, minExtent) + 2);});

			labels.enter().append("text")
				.text(function(d) {return d.id;})
				.attr("x", function(d) {return x1(Math.max(d.start, minExtent));})
				.attr("y", function(d) {return y1(d.lane + .5);})
				.attr("text-anchor", "start");

			labels.exit().remove();

		}
		
		</script>
	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=true&libraries=visualization"></script>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <link href="http://fonts.googleapis.com/css?family=Open+Sans:400,700,300" rel='stylesheet' type='text/css'>
    <style type="text/css">

html, body, #map {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

.stations, .stations svg {
  position: absolute;
}

.stations svg {
  width: 60px;
  height: 20px;
  padding-right: 100px;
  font: 10px sans-serif;
}

.stations circle {
  fill: #00aeef;
  stroke: #00447c;
  stroke-width: 1px;
}

    </style>
  </head>
  <body>
    <div id="map"></div>
    <script type="text/javascript">

// Create the Google Map…
var map = new google.maps.Map(d3.select("#map").node(), {
  zoom: 8,
  center: new google.maps.LatLng(37.76487, -122.41948),
  styles: [{stylers:[{saturation:-100},{gamma:1}]},{elementType:"labels.text.stroke",stylers:[{visibility:"off"}]},{featureType:"poi.business",elementType:"labels.text",stylers:[{visibility:"off"}]},{featureType:"poi.business",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"poi.place_of_worship",elementType:"labels.text",stylers:[{visibility:"off"}]},{featureType:"poi.place_of_worship",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"geometry",stylers:[{visibility:"simplified"}]},{featureType:"water",stylers:[{visibility:"on"},{saturation:40},{gamma:0},{hue:"#00aeef"}]},{featureType:"administrative.neighborhood",elementType:"labels.text.fill",stylers:[{color:"#333333"}]},{featureType:"road.local",elementType:"labels.text",stylers:[{weight:0.5},{color:"#333333"}]},{featureType:"transit.station",elementType:"labels.icon",stylers:[{gamma:1},{saturation:50}]}],
  mapTypeId: google.maps.MapTypeId.ROADMAP //google.maps.MapTypeId.SATELLITE
});

// Load the station data. When the data comes back, create an overlay.
d3.json("stations.json", function(data) {
  var overlay = new google.maps.OverlayView();

  // Add the container when the overlay is added to the map.
  overlay.onAdd = function() {
    var layer = d3.select(this.getPanes().overlayLayer).append("div")
        .attr("class", "stations");

    // Draw each marker as a separate SVG element.
    // We could use a single SVG, but what size would it have?
    overlay.draw = function() {
      var projection = this.getProjection(),
          padding = 10;

      var marker = layer.selectAll("svg")
          .data(d3.entries(data))
          .each(transform) // update existing markers
        .enter().append("svg:svg")
          .each(transform)
          .attr("class", "marker");

      // Add a circle.
      marker.append("svg:circle")
          .attr("r", 4.5)
          .attr("cx", padding)
          .attr("cy", padding);

      // Add a label.
      marker.append("svg:text")
          .attr("x", padding + 7)
          .attr("y", padding)
          .attr("dy", ".31em")
          .text(function(d) { return d.key; });

      function transform(d) {
        d = new google.maps.LatLng(d.value[1], d.value[0]);
        d = projection.fromLatLngToDivPixel(d);
        return d3.select(this)
            .style("left", (d.x - padding) + "px")
            .style("top", (d.y - padding) + "px");
      }
    };
  };

  // Bind our overlay to the map…
  overlay.setMap(map);
});

    </script>
  </body>
</html><!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400italic,600italic,700italic,200,300,400,600,700,900">
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 1em;
  color: #333;
  font-weight: 400;
}

#content {
  margin: 5px;
  padding: 20px;
  width: 750px;
  text-align: left;
  border: 1px solid #ccc;
}

h1 {
  line-height: 1em;
  font-size: 1.75em;
  font-weight: 900;
  color: #000;
}

p {
  margin: 5px 0px 0px 0px;
}

.domain {
  stroke-width: 1px;
}

#chart {
  margin: 15px 0px 0px 0px;
  padding: 0px;
}

#menu {
  float: left;
  margin: 15px 0px 0px 0px;
  padding: 0;
  display: block;
}

select {
  width: 150px;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 0.9em;
  color: #333;
  font-weight: 400;
}

.axis path, .axis line {
  fill: none;
  stroke: #ccc;
  shape-rendering: crispEdges;
}

.axis line {
  stroke: #eee;
  stroke-width: 1;
  shape-rendering: crispEdges;
}

.tick text, #xAxisLabel, #yAxisLabel {
  fill: #333;
  font-size: 0.9em;
}

.tooltip {
  position: absolute;
  padding: 7px;
  width: 240px;
  font-size: 0.9em;
  pointer-events: none;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.tooltip p {
  margin: 0;
  padding: 0;
}

circle {
  stroke: #0165A8;
  stroke-width: 2px;
  fill: #fff;
}

circle:hover {
  stroke: #003275;
  fill: #0165A8;
}

</style>

</head>

<body>

<div id="content">
	<h1>Income and Health in the United States</h1>
	<p>U.S. counties were sorted into 20 equally sized groups according to median household income. Poverty rates, infant mortality rates, and life expectancies were calculated for each of the 20 income groups. The data show that in 2007, low-income counties had significantly higher infant mortality rates and lower life expectancies than high-income counties.</p>
	<div id="menu"></div>
	<div id="chart"></div>
	<p>Source: U.S. Census Bureau, Institute for Health Metrics and Evaluation.</p>
</div>

<script type='text/javascript' src='chart.js'></script>
</body>
</html><!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400italic,600italic,700italic,200,300,400,600,700,900">
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 1em;
  color: #333;
  font-weight: 400;
}

#content {
  margin: 5px;
  padding: 20px;
  width: 765px;
  text-align: left;
  border: 1px solid #ccc;
}

h1 {
  line-height: 1em;
  font-size: 1.75em;
  font-weight: 900;
  color: #000;
}

p {
  margin: 5px 0px 0px 0px;
}

.domain {
  fill: none;
  stroke-width: 0;
}

#chart {
  margin: 15px 0px 0px 0px;
  padding: 0px;
}

#menu {
  margin: 5px 0px 0px 0px;
  padding: 0;
  display: block;
}

select {
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 0.9em;
  color: #333;
  font-weight: 400;
}

.axis path, .axis line {
  fill: none;
  stroke: #ccc;
  shape-rendering: crispEdges;
}

.axis line {
  stroke: #eee;
  stroke-width: 1;
  opacity: 0.5;
  shape-rendering: crispEdges;
}

.g-baseline line {
  stroke: #333;
  stroke-width: 2;
  opacity: 1;
  shape-rendering: crispEdges;
}

.x.axis .tick text, .y.axis .tick text, .ylabel {
  fill: #333;
  font-size: 0.9em;
}

.x.axis .tick text {
  fill: #fff;
}

.x.axis .tick line {
  stroke: none;
}

.keylabel {
  fill: #333;
}

.line {
  fill: none;
  stroke: #2C3E50;
  stroke-width: 3px;
}

</style>

</head>

<body>

<div id="content">
<h1>U.S. International Trade in Goods, 2000-2013</h1>
<p>Value of Exports and Imports by 3-digit NAICS Code ($US Billions)</p>
<select id="menu" onchange="makeBars()">
        <option selected value="000">Total</option>
        <option value="111">Agricultural Products</option>
        <option value="112">Livestock & Livestock Products</option>
        <option value="113">Forestry Products</option>
        <option value="114">Fish, Fresh/Chilled/Frozen & Other Marine Products</option>
        <option value="211">Oil & Gas</option>
        <option value="212">Minerals & Ores</option>
        <option value="311">Food & Kindred Products</option>
        <option value="312">Beverages & Tobacco Products</option>
        <option value="313">Textiles & Fabrics</option>
        <option value="314">Textile Mill Products</option>
        <option value="315">Apparel & Accessories</option>
        <option value="316">Leather & Allied Products</option>
        <option value="321">Wood Products</option>
        <option value="322">Paper</option>
        <option value="323">Printed Matter And Related Products</option>
        <option value="324">Petroleum & Coal Products</option>
        <option value="325">Chemicals</option>
        <option value="326">Plastics & Rubber Products</option>
        <option value="327">Nonmetallic Mineral Products</option>
        <option value="331">Primary Metal Mfg</option>
        <option value="332">Fabricated Metal Products</option>
        <option value="333">Machinery, Except Electrical</option>
        <option value="334">Computer & Electronic Products</option>
        <option value="335">Electrical Equipment, Appliances & Components</option>
        <option value="336">Transportation Equipment</option>
        <option value="337">Furniture & Fixtures</option>
        <option value="339">Miscellaneous Manufactured Commodities</option>
        <option value="511">Newspapers, Books & Other Published Matter</option>
        <option value="910">Waste And Scrap</option>
        <option value="920">Used Or Second-Hand Merchandise</option>
        <option value="980">Goods Returned (Exports For Canada Only)</option>
        <option value="990">Special Classification Provisions</option>
</select>
<div id="chart"></div>
<p>Source: U.S. Census Bureau.</p>
</div>

<script src="chart.js"></script>

</body>
</html><!DOCTYPE html>
<html>

<head>
    <title>D3 test</title>
    <style>
    .grid .tick {
        stroke: lightgrey;
        opacity: 0.7;
    }
    .grid path {
        stroke-width: 0;
    }
    .chart {
    }
    .main text {
        font: 10px sans-serif;
    }
    .axis line, .axis path {
        shape-rendering: crispEdges;
        stroke: black;
        fill: none;
    }
    circle {
        fill: steelblue;
    }
    </style>

    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://d3js.org/topojson.v1.min.js"></script>
</head>

<body>
    <div class='content'>
        <!-- /the chart goes here -->
    </div>
</body>
<script type="text/javascript">

var data = [];

d3.csv("data.csv", function(csvData) {

    csvData.forEach(function (d,i) {
        data[i] = {
          first: +d.first, 
          second: +d.second
        } 
    });
    console.log(data);



    var color = d3.scale.ordinal().range(["#b41f2d", "#ff7f0e"]);

    var margin = {
        top: 20,
        right: 15,
        bottom: 60,
        left: 25
    }, width = 950 - margin.left - margin.right,
        height = 480 - margin.top - margin.bottom;

    var x = d3.scale.linear()
        .domain([0, d3.max(data, function(d) {
            return d.first;
        })])
        .range([0, width]);

    var y = d3.scale.linear()
        .domain([0, d3.max(data, function(d) {
            return d.second;
        })])
    //.range([height, 0]) //flip y
    .range([0, height]);

    var chart = d3.select('body')
        .append('svg:svg')
        .attr('width', width + margin.right + margin.left)
        .attr('height', height + margin.top + margin.bottom)
        .attr('class', 'chart');

    var main = chart.append('g')
        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')
        .attr('width', width)
        .attr('height', height)
        .attr('class', 'main');

    // draw the x axis
    var xAxis = d3.svg.axis()
        .scale(x)
    //.orient('bottom')
    .orient('top'); // adjust ticks to new x axis position

    main.append('g')
    //.attr('transform', 'translate(0,' + height + ')')
    .attr('transform', 'translate(0,0)') // move x axis up
    .attr('class', 'main axis date')
        .call(xAxis);

    // draw the y axis
    var yAxis = d3.svg.axis()
        .scale(y)
        .orient('left');

    main.append('g')
        .attr('transform', 'translate(0,0)')
        .attr('class', 'main axis date')
        .call(yAxis);

    var g = main.append("svg:g");

    g.selectAll("scatter-dots")
        .data(data)
        .enter().append("svg:circle")
        .attr("cx", function(d, i) {
            return x(d.first);
        })
        .attr("cy", function(d) {
            return y(d.second);
        })
        .attr("r", 5)
        .style("fill", function(d,i) {
            return color(i);
        });

    // begin of drawing lines
    var line = d3.svg.line()
        .x(function(d) {
            return x(d.first)
        })
        .y(function(d) {
            return y(d.second);
        })
        .interpolate("linear");

    g.append("path")
        .attr("d", function(d) {
            return line(data)
        })
        .attr("transform", "translate(0,0)")
        .style("stroke-width", 2)
        .style("stroke", "steelblue")
        .style("fill", "none");
    // end of drawing lines

    main.append("g")
        .attr("class", "grid")
        .attr("transform", "translate(0," + height + ")")
        .call(make_x_axis()
            .tickSize(-height, 0, 0)
            .tickFormat(""))

    main.append("g")
        .attr("class", "grid")
        .call(make_y_axis()
            .tickSize(-width, 0, 0)
            .tickFormat(""))

    function make_x_axis() {
        return d3.svg.axis()
            .scale(x)
            .orient("bottom")
            .ticks(30)
    }

    function make_y_axis() {
        return d3.svg.axis()
            .scale(y)
            .orient("left")
            .ticks(17)
    }
});
</script>



</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  font: 10px sans-serif;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 0, bottom: 20, left: 0},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .domain([0, 1])
    .rangePoints([0, width], 1);

var y = d3.scale.linear()
    .domain([-1e6, 2e6])
    .range([height, 0]);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("g")
    .attr("transform", "translate(" + x(0) + ",0)")
    .attr("class", "axis")
    .call(d3.svg.axis()
      .scale(y)
      .orient("left")
      .ticks(20, "s"));

svg.append("g")
    .attr("transform", "translate(" + x(1) + ",0)")
    .attr("class", "axis")
    .call(d3.svg.axis()
      .scale(y)
      .orient("left")
      .ticks(20)
      .tickFormat(d3.format("s")));

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 700;

var path = d3.geo.path()
    .projection(null);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("world.json", function(error, world) {
  if (error) throw error;

  svg.insert("path", ".graticule")
      .datum(topojson.feature(world, world.objects.countries))
      .attr("class", "land")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <link type="text/css" href="style.css" rel="stylesheet" media="all" />

  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/topojson/1.1.0/topojson.min.js"></script>
  <!-- <script src="javascripts/queue.js"></script> -->
  <script src="//cdnjs.cloudflare.com/ajax/libs/queue-async/1.0.4/queue.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore-min.js" type="text/javascript" charset="utf-8"></script>
  <script type="text/javascript" charset="utf-8">

  function geoStatJoinChart(options, d3, topojson, _, queue) {

    var width       = options.width;
    var height      = options.height;
    var latLong     = options.latLong;
    var scale       = options.scale;
    var geoDataUrl  = options.geoDataUrl;
    var statDataUrl = options.statDataUrl;

    var lng = latLong[0];
    var lat = latLong[1];

    var colorScale = d3.scale.threshold()
      .domain([0.0039062, 0.0078125, 0.015625, 0.03125, 0.0625, 0.125, 0.25, 0.5, 1.0])
      .range(["transparent", "#E0F3DB", "#CCEBC5", "#A8DDB5", "#7BCCC4", "#4EB3D3", "#2B8CBE" , "#0868AC", "#084081"]);

    function capitalize(s){
      return s.toLowerCase().replace( /\b./g, function(a){ return a.toUpperCase(); } );
    };

    function longName(s) {
      return capitalize(s.replace("-"," ")) + ",CA,US";
    };

    // notice the weird way this has to be done for albers...
    var projection = d3.geo.albers()
      .translate([(width / 2), (height / 2)])
      .scale(scale)
      .rotate([-lng,0])
      .center([0,lat]);

    var path = d3.geo.path()
      .projection(projection);

    var dsv = d3.dsv("|", "text/plain");

    queue()
      .defer(d3.json, geoDataUrl)
      .defer(dsv, statDataUrl)
      .await(ready);

    function ready(error, geoData, statData) {

      var domElement = document.querySelector("body");

      var regions = document.querySelectorAll("#cities .region");
      _.each(regions, function(region) {
        var name = longName(region.id);
        createChartWithCity({
          highlightedCity: name,
          domElement: region,
          geoData: geoData,
          statData: statData
        });
      });
    }

    function createChartWithCity(options) {

      var highlightedCity = options.highlightedCity;
      var domElement      = options.domElement;
      var geoData         = options.geoData;
      var statData        = options.statData;

      //console.log("createChartWithCity", highlightedCity);

      var svg = d3.select(domElement).append("svg")
        .attr("width", width)
        .attr("height", height);

      var observedInHighlightedCity = _.filter(statData, function(d) {
        return d.end_city == highlightedCity;
      });

      function fillColor(d) {
        var ln = longName(d.id);
        var cityData = _.find(observedInHighlightedCity, function(d) { return d.start_city == ln } );
        var color;
        if (cityData && cityData.prct) {
          color = colorScale(cityData.prct);
        }
        else {
          color = "transparent";
        }
        return color;
      }

      // draw the state
      svg.append("path")
        .datum(topojson.mesh(geoData, geoData.objects.state_border))
        .attr("class", "state-boundary")
        .attr("d", path);

      // fill the cities
      svg.selectAll(".cities-fill")
        .data(topojson.feature(geoData, geoData.objects.cities).features)
        .enter().append("path")
        .attr("class", function(d) {
          if (d.id == highlightedCity.split(",")[0]) {
            return "cities-fill highlighted"
          }
          else {
            return "cities-fill";
          }
        })
        .attr("fill", fillColor)
        .attr("d", path);

      svg.append("text")
        .attr("class","observed-label")
        .text(highlightedCity.split(",")[0])
        .attr("dx",15)
        .attr("dy",25)
    }

    var keySvg = d3.select("#key").append("svg")
      .attr("class", "key")
      .attr("width", 1800)
      .attr("height", 80);

    var x = d3.scale.linear()
      .domain([0, 1])
      .range([0, 1210]);

    var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom")
      .tickSize(13)
      .tickValues(colorScale.domain())
      .tickFormat(function(d) { return d >= 0.02 ? parseInt(d*100) : null; });

    keySvg.selectAll("rect")
      .data(colorScale.range().map(function(d, i) {
        return {
          x0: i ? x(colorScale.domain()[i - 1]) : x.range()[0],
          x1: i < colorScale.domain().length ? x(colorScale.domain()[i]) : x.range()[1],
          z: d
        };
      }))
    .enter().append("rect")
      .attr("height", 8)
      .attr("x", function(d) { return d.x0; })
      .attr("width", function(d) { return d.x1 - d.x0; })
      .style("fill", function(d) { return d.z; });

    keySvg.call(xAxis);

    keySvg.append("text")
      .attr("class","title")
      .attr("dy", "60")
      .attr("dx", "0")
      .text("Percentage of People who say they are in a Stated Region who were seen in the Observed Region.")
  }

  </script>
  </head>

<body>

  <div class="page">
    <ul id="cities">
      <li id="santa-monica" class="region"></li>
      <li id="los-angeles"  class="region"></li>
      <div id="key"></div>
    </ul>
  </div>

  <script>
    geoStatJoinChart({
      width: 300,
      height: 300,
      latLong: [-118.2428,34.00],
      scale: 18000,
      geoDataUrl: "./los-angeles-cities.json",
      statDataUrl: "./los-angeles-stats.csv"
    }, d3, topojson, _, queue);
  </script>

</body>
</html>

<!DOCTYPE html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
		<title>Slopegraph</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.min.js"></script>
		<link rel="stylesheet" href="style.css" type="text/css">
		<link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
		<link href="http://fonts.googleapis.com/css?family=Libre+Baskerville:400,700" rel="stylesheet" type="text/css">
	</head>
	<body>
	<div id="slopegraph"></div>
		<script type="text/javascript">

//Based on http://thisiscave.co.uk/2013/08/04/d3-slope-graph.html
 
//Settings - width, height, margins
if ((window.innerHeight > 1000) & (window.innerWidth > 1600))
  {
  var WIDTH = 950,
    HEIGHT = 0.85 * window.innerHeight,
    MARGINS = [83, 0, 10, 225], //Top, right, bottom, left
	AXISDISTANCE = 500; //Distance between the two y axes
  }
else if (window.innerWidth > 1600)
  {
  var WIDTH = 950,
    HEIGHT = 900,
    MARGINS = [83, 0, 10, 225], //Top, right, bottom, left
	AXISDISTANCE = 500; //Distance between the two y axes
  }
else if ((window.innerWidth < window.innerHeight) & (window.innerWidth < 1025))
  {
  var WIDTH = 550,
    HEIGHT = 800,
    MARGINS = [83, 0, 10, 150], //Top, right, bottom, left
	AXISDISTANCE = 250; //Distance between the two y axes
  }
else if (window.innerWidth < 1025)
  {
  var WIDTH = 650,
    HEIGHT = 800,
    MARGINS = [83, 0, 10, 180], //Top, right, bottom, left
	AXISDISTANCE = 300; //Distance between the two y axes
  }
else
  {
  var WIDTH = 770,
    HEIGHT = 1000,
    MARGINS = [83, 0, 10, 210], //Top, right, bottom, left
	AXISDISTANCE = 350; //Distance between the two y axes
  }

//var WIDTH = 850,
//  HEIGHT = 800,
//  MARGINS = [83, 0, 10, 225], //Top, right, bottom, left
//  AXISDISTANCE = 400; //Distance between the two y axes

// Real size for the chart
var CHARTWIDTH = WIDTH - MARGINS[1] - MARGINS[3],
  CHARTHEIGHT = HEIGHT - MARGINS[0] - MARGINS[2];

//The svg element
var svg = d3.select("body").append("svg")
  .attr({
    "height": HEIGHT,
    "width": WIDTH
  });

//Visualisation group/container
var vis = svg.append("g")
  .attr({
    "id": "slopegraph",
    "class": "col-md-8",
    "transform": "translate(" + MARGINS[3] + "," + MARGINS[0] + ")"
  });

//Popup
var tip = d3.tip()
  .attr('id', "d3-tip")
  .attr('class', 'd3-tip')
  .offset([-10, 0])
  .html(function(d) {
    return "<h4>" + d.topic + "</h4>" + "The World: " + d.left + "%" + "<br/>" + "Women's Day & CSW: " + d.right + "%" + "<br/>" + "Difference: " + d3.round(d.right - d.left,2);
  });

function fixedHide() {
  tip.hide();
  tip.attr("style", "position: absolute; opacity: 0; top: 0px; left: 0px;");
}

//Load the data
d3.csv("iwd.csv", function(d) {

  //Tidy up the data depending on input csv
  dataSlopeGraph = d.map(function(d) {
    return {
      "fill": d.Colour,
      "left": +d["Global"],
      "right": +d["IWD"],
      "topic": d.Topic
    };
    //And sort it descending using the value on the right
  }).sort(function(a, b) {
    return a.right - b.right;
  });

  //The data
  var dataSlopeGraph,
  minSlopeValue = 0,
  //maxSlopeValue = 48;
  maxLeftSlopeValue = d3.max(d, function(d) { return +d["Global"];} ),
  maxRightSlopeValue = d3.max(d, function(d) { return +d["IWD"];} );
  
  if (maxLeftSlopeValue > maxRightSlopeValue) { var maxSlopeValue = (maxLeftSlopeValue + 1);}
  else { var maxSlopeValue = (maxRightSlopeValue + 1);}
  
  //Find max values of each side
  
  //Y scale used for the two axes
	var yScale = d3.scale.linear()
	  .range([CHARTHEIGHT, 0])
	  .domain([minSlopeValue, maxSlopeValue]);
	
	//Left axis
	var yAxisLeft = d3.svg.axis()
	  .scale(yScale)
	  .ticks(4)
	  .tickFormat(function(d) {
	    return d3.format(",.0f")(d) + "%";
	  })
	  .orient("left"),
	//Right axis
	  yAxisRight = d3.svg.axis()
	    .scale(yScale)
	    .ticks(0)
	    .orient("left");

  //Add the axis and gridlines
  var tmpYAxis = vis.append("g")
    .attr("class", "axis y")
    .call(yAxisLeft);
  //Gridlines
  tmpYAxis.selectAll(".tick line")
    .each(function(d) {
      //Loop through all the ticks and extend them
      //across the axis distance
      var line = d3.select(this);
      line.attr({
        "x1": line.attr("x2") - -35,
        "x2": AXISDISTANCE
      });
    });
  //Move the tick labels in between the axes
  tmpYAxis.selectAll(".tick text")
    .attr("dx", "35px");
  //Left axis title
  tmpYAxis.append("text")
    .text("All Post-2015 Tweets")
    .style("text-anchor", "middle")
    .attr({
      "class": "title",
      "dy": "-20px"
    });
  tmpYAxis.append("text")
    .text("All tweets in the world about Post-2015")
    .style("text-anchor", "middle")
    .attr({
      "class": "subtitle",
      "dy": "-5px"
    });

  //Right axis, almost the same just without a gridline loop
  tmpYAxis = vis.append("g")
    .attr({
      "class": "axis y",
      "transform": "translate(" + AXISDISTANCE + ",0)"
    })
    .call(yAxisRight);
  tmpYAxis.append("text")
    .text("IWD & CSW")
    .style("text-anchor", "middle")
    .attr({
      "class": "title",
      "dy": "-20px"
    });
  tmpYAxis.append("text")
    .text("Tweets also about International Women's Day or CSW")
    .style("text-anchor", "middle")
    .attr({
      "class": "subtitle",
      "dy": "-5px"
    });

  //This will return a line pathstring based on some data. The data
  //that I pass in is formatted like so:
  // [ [0,y-value],  [AXISDISTANCE,y-value] ]
  var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) {
      //Use the exact x value
      return d[0];
    })
    .y(function(d) {
      //Return a value based on the y scale created
      return yScale(d[1]);
    });

  //Plot the actual data
  //Create a group to store each slope. I also apply a mouseover/leave
  //listener to it.
  var topicData = vis.selectAll(".topic-data")
    .data(dataSlopeGraph).enter()
    .append("g")
    .attr("class", "topic-data")
    .on("mouseover", mouseover)
    .on("mouseleave", mouseleave);
  //Left circle
  topicData.append("circle")
    .attr({
      "cy": function(d) {
        return yScale(d.left);
      },
      "fill": function(d) {
        return d.fill;
      },
      "r": 6
    })
    .style("opacity", "0.5");
  //Right circle
  topicData.append("circle")
    .attr({
      "cx": AXISDISTANCE,
      "cy": function(d) {
        return yScale(d.right);
      },
      "fill": function(d) {
        return d.fill;
      },
      "r": 6
    })
    .style("opacity", "0.5");
  //Text label
  topicData.append("text")
    .attr({
      "class": "legend-item",
      "dy": "0.3em",
      "text-anchor": "end",
      "x": -15,
      "y": function(d) {
        return yScale(d.left);
      }
    })
    .text(function(d) {
      return d.topic
    })
    .call(tip);
  topicData.append("text")
    .attr({
      "class": "legend-item",
      "dy": "0.3em",
      "text-anchor": "start",
      "x": AXISDISTANCE + 15,
      "y": function(d) {
        return yScale(d.right);
      }
    })
    .text(function(d) {
      return d.topic
    })
    .call(tip);
  //Slope line
  topicData.append("path")
    .attr({
      "class": "link",
      "d": function(d) {
        return line([
          [0, d.left],
          [AXISDISTANCE, d.right]
        ]);
      }
    })
    .style("stroke", function(d) {
      return d.fill;
    })
    .style("opacity", "0.5");


  function mouseover(d, i) {
    var topic = d3.select(topicData[0][i]);
    topic.selectAll("circle").attr("r", 8);
    topic.select(".link").style("stroke-width", "5px");
    topic.selectAll("text").attr("font-weight", "700");
    topic.selectAll("text").style("fill", "#000");
    topic.selectAll("circle").on("mouseover",tip.show);
    topic.selectAll("text").on("mouseover",tip.show);
    topic.selectAll("circle").style("opacity", "1");
    topic.select(".link").style("opacity", "1");
  }

  function mouseleave(d, i) {
    var topic = d3.select(topicData[0][i]);
    topic.selectAll("circle").attr("r", 6);
    topic.select(".link").style("stroke-width", "");
    topic.selectAll("text").attr("font-weight", "normal");
    topic.selectAll("text").style("fill", "#96999b");
    topic.selectAll("circle").on("mouseleave", fixedHide);
    topic.selectAll("text").on("mouseleave", fixedHide);
    topic.selectAll("circle").style("opacity", "0.5");
    topic.select(".link").style("opacity", "0.5");
  }

});

		</script>
	</body>
</html><!DOCTYPE html>
  <head>
    <meta charset="utf-8">
    <style>
      path {
        fill: none;
      }
      #airports circle {
        fill: #333333;
      }
      #states path {
        stroke-width: 1px;
        stroke: #999999;
        stroke-opacity: 1;
      }
      #routes path {
        stroke-width: 1px;
        stroke: #4040ff;
        stroke-opacity: 0.12;
      }
    </style>
  </head>
  <body>
    <div id="vis"></div>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://d3js.org/topojson.v1.min.js"></script>
    <script src="http://d3js.org/queue.v1.min.js"></script>
    <script>
      // NOTE: code copied and cleaned up from CoffeeScript file
      //       original CoffeeScript at: http://www.bytemuse.com/post/airline-routes-contiguous-united-states-d3-js/
      
      var buildMap = function(error, stateData, airportData, routeData) {
        var width = 960,
            height = 500;
      
        var apLatLngs = {};
        for (var ndx = 0, _len = airportData.length; ndx < _len; ndx++) {
          ap = airportData[ndx];
          apLatLngs[ap.id] = ap.latLng = [parseFloat(ap.long), parseFloat(ap.lat)];
        }
        var projection = d3.geo.albersUsa().scale(width * 1.12).translate([width / 2, height / 2]);
        var path       = d3.geo.path().projection(projection);
        var svg = d3.select('#vis')
          .append('svg')
            .attr('width', width)
            .attr('height', height);
    
        var states   = svg.append('g').attr('id', 'states');
        var routes   = svg.append('g').attr('id', 'routes');
        var airports = svg.append('g').attr('id', 'airports');
        
        states.selectAll('path').data(stateData.features.filter(function(d, ndx) {
          return ndx !== 1 && ndx !== 11;
        })).enter()
          .append('path')
            .attr('d', path);
        airports.selectAll('circle')
          .data(airportData).enter()
          .append('circle')
            .attr('cx', function(d) { return projection(d.latLng)[0]; })
            .attr('cy', function(d) { return projection(d.latLng)[1]; })
            .attr('r', 2);
        routes.selectAll('path')
          .data(routeData).enter()
          .append('path')
            .attr('d', function(d) {
              return path({
                type: 'LineString',
                coordinates: [apLatLngs[d.src_id], apLatLngs[d.dest_id]]
              });
            });
      };
      queue()
        .defer(d3.json, 'us_states.json')
        .defer(d3.csv,  'us_airports.csv')
        .defer(d3.csv,  'us_routes.csv')
        .await(buildMap);
    </script>
  </body>
</html><!doctype html>
<html lang="en">
<meta charset="utf-8">
<!--<link href="/assets/css/bootstrap.css" rel="stylesheet">-->
<link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet">
<style>
div {
  margin-left: 10px;
  margin-top: 10px;
}
#table tr td:nth-child(3), #table tr td:nth-child(4), #table tr td:nth-child(5),
#table tr th:nth-child(3), #table tr th:nth-child(4), #table tr th:nth-child(5) { 
  text-align: right; 
}
#table td, #table th {
  font-size: 12px;
  line-height: 17px;
}
.background {
  fill: #4B9E9E;
  fill-opacity: 0.1;
}
.extent {
  fill: rgb(180, 180, 180); 
  fill-opacity: 0.4;
}
.resize rect {
  fill: #276C86;
}
.axis text {
  /*font-family: sans-serif;*/
  font-size: 12px;
}
input[type="radio"] {
  vertical-align: top;
  font-size: 12px;
  line-height: 17px;
}
label {
  font-size: 13px;
  font-weight: normal;
  line-height: 17px;
  display: inline;
  margin-left: 20px;
}
form {
  position: absolute;
  left: 75px;
  top: 55px;
}
#table thead th:hover {
  background-color: rgb(240, 240, 240) ! important;
}
.btn {
  background-image: linear-gradient(to bottom, rgb(255, 134, 26), #E6E6E6);
}

</style>
<body>
<table id="mainLayout" style="margin-top: 12px">
  <tr>
    <td style="width: 500px; vertical-align: top">
      <div id="chartDiv" style="border1: 1px solid black">
        <h4 style="margin-top: 0px">Internet/Cellular Penetration vs. GDP/Capita 2012 (World Bank)</h4>
        <svg id="svgDiv"></svg>
      </div>
    </td>
    <td style="vertical-align: top">
        <div id="tableContainerDiv" style="height: 467px; border1: 1px solid black;">
          <p style="font-size: 14px"><b>Source:</b> World Bank, World Development Indicators <br>(extracted March 2014)</p>
            <div id="tableDiv">
            </div>
        </div>
    </td>
  </tr>
  <tr>
    <td style="width: 500px">
      <div style="margin-top: 0px; margin-left: 40px">
        <button type="button" id="helpBtn" class="btn"><b>?</b></button>
      </div>
      <div id="helpDiv" style="margin-left: 40px; display: none">
        <p style="font-size: 13px;">
          <b>Note:</b> The X-axis (GDP/capita) is drawn with a logaritmic scale<br>
          <b>Note:</b> Only countries with cellular, internet and GDP data are included (174 out of 214 countries)<br>
          <b>Usage:</b> a) Drag the gray rectangle around the chart to view different data points, b) Grab the sides of the rectangle to change its size, c) Click the headers in the table to change the sort order, d) Hover over countries in the table to see the corresponding location in the scatter chart, e) Double click in the chart to remove the rectangle, and begin dragging to re-create
        </p>
      </div>
    </td>
  </tr>
</table>
<form>
  <label><input type="radio" name="mode" value="internet" checked> Internet penetration</label>
  <label><input type="radio" name="mode" value="cellular"> Cellular penetration</label>
</form>
<!--<script src="../d3/d3.v3.js"></script>-->
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
  'use strict';
  var margin = {top: 30, right: 30, bottom: 2, left: 30},
      data = [],
      table, chart,
      commasFormatter = d3.format(",.0f"),
      mode = "showInternet",
      svgGroup;

  // get the raw data tsv file
  d3.tsv("internetCellularGDP.txt", function(error, json) {

    var nest = d3.nest()
        .key(function(d) { return d["Country Code"]; })
        .key(function(d) { return d["Indicator Code"]; })
        .entries(json);   

    // create usable data structure, process country by country
    nest.forEach(function(d) {
      var include = true;
      var item = {};

      item.key = d.key;
      item.countryCode = d.key;
      item.countryName = d.values[0].values[0]["Country Name"];

      ["GDP", "Cellular", "Internet"].forEach(function(c, i) {
        var value = d.values[i].values[0]["2012 [YR2012]"];
        if (value === "..") { include = false; return; } // exclude countries with any null values

        item["indicatorName" + c] = d.values[i].values[0]["Indicator Name"];
        item["indicatorCode" + c] = d.values[i].values[0]["Indicator Code"];
        item["value"         + c] = +value;
      });

      if (include) data.push(item);
    });

    // select the chart div
    var chartDiv = d3.select("#chartDiv")
      .style("overflow", "scroll");

    // select the svg element
    var svg = d3.select("#svgDiv")
      .attr("width", "580px")
      .attr("height", "430px")
      .style("margin-bottom", "10px")
      .style("margin-right", "10px")
      .style("background-color", "white");

    svgGroup = svg.append("g")
      .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

    // create chart
    chart = scatterView()
      .accessor(mode)
      .data(data);

    chart(svgGroup);

    // select table div
    var tableDiv = d3.select("#tableDiv")
        .style("overflow", "scroll")
        .style("width", "330px")
        .style("height", "400px")
        .style("margin", "0px")
        .style("padding-left", "0px");

    // create table
    table = tableView()
      .data(data);

    table(tableDiv);

    // define handlers after chart and table are constructed
    chart.on("filter", function(filtered) {
        table.data(filtered); 
        table(tableDiv); 
      });

    table.on("hover", function(item) {
        chart.highlight(item)
      });

    chart.forceBrushEvent(); //TODO: upon initial load, table is not synced to brush


    // chart function -----------------------------------------------------------------------------
    function scatterView() {
      var dispatch = d3.dispatch(chart, "filter");
      var data, 
          dataYmax, dataXmax,
          saveG,
          radius = 7, radiusSelected = 9,
          strokeWidth = 1,
          fillOpacity = 0.5,
          colorFill,
          colorStroke,
          mode = "internet",
          colors = {
            red:    'rgb(216, 50, 51)',
            green:  'rgb(51, 164, 51)',
            blue:   'rgb(42, 126, 184)',
            orange: 'rgb(255, 134, 26)'
          }

      function x(g) {
        // save reference to svg group (for highlight method)
        saveG = g; 

        // get dimensions of parent
        var container = d3.select(g.node().parentNode);
        var width = +container.attr("width").replace("px", "");
        var height = +container.attr("height").replace("px", "");

        // remove all previous elements in group
        g.selectAll("*").remove();

        // set dimensions
        var chartWidth = width - 60;
        var chartHeight = height - 60;

        var xField = function(d) { return d.valueGDP; };
        var yField = function(d) { return yAccessor(d); };

        var yAccessor = function(d) {
          if (mode == "internet") return d.valueInternet;
          else return d.valueCellular;
        }

        dataYmax = d3.max(data, yField);
        var yScale = d3.scale.linear()
          .domain([0, d3.max(data, yField)])
          .range([chartHeight, 0]);

        dataXmax = d3.max(data, xField) + 10000;
        var xScale = d3.scale.log()
          .domain([d3.min(data, xField), d3.max(data, xField) + 10000])
          .range([0, chartWidth - 10]);

        // set colors for this mode
        colorFill   = (mode === "internet" ? colors.orange : colors.green);
        colorStroke = (mode === "internet" ? colors.orange : colors.green);

        // set color scale for circle color --> not used at the moment
        var colorScale = d3.scale.linear()
          .domain([0, d3.max(data, function(d) { return d.valueGDP })])
          .range(["#17D84D", "#FF1D1D"])
          .interpolate(d3.interpolateHsl);  

        // create circles for scatter chart, and bind data
        var circles = g
          .selectAll("circle")
          .data(data)
          .enter()
          .append("circle")
          .attr("cx", function(d, i) { return xScale(xField(d)); })
          .attr("cy", function(d, i) { return yScale(yField(d)); })
          .attr("r", radius)
          .style("fill", colorFill)
          .style("stroke", colorStroke)
          .style("stroke-width", strokeWidth)
          .style("fill-opacity", fillOpacity)
          .on("click", function(d) { console.log(d.key); });

        // setup y axis
        var yaxis = d3.svg.axis()
          .scale(yScale)
          .orient("left") //left, right, top
          .ticks(4) //best guess

        // call y axis
        var yg = g.append("g")
          .call(yaxis)
          .attr("class", "axis");

        yg
          .append("text")
          .attr("transform", "rotate(-90)")
          .attr("y", 10)
          .attr("x", -10)
          .attr("dy", ".71em")
          .style("text-anchor", "end")
          .text("Penetration per 100 people");

        // format y axis
        yg.selectAll("path").style({ fill: "none", stroke: "gray"})
        //yg.selectAll(".tick text").attr("transform", "rotate(0)")
        yg.selectAll("line").style({ stroke: "#000"});

        // setup x axis
        var xaxis = d3.svg.axis()
          .scale(xScale)
          .orient("bottom") //left, right, top
          .ticks(5) // doesn't really work on a log scale
          //.tickFormat(function(d) { return commasFormatter(d); })
          .tickFormat(function(d) { return xScale.tickFormat(4,d3.format(",d"))(d) });

        // call x axis
        var xg = g.append("g")
          .call(xaxis)
          .attr("class", "axis");

        xg.append("text")
          //.attr("transform", "rotate(-90)")
          .attr("y", -20)
          .attr("x", chartWidth - 20)
          .attr("dy", ".71em")
          .style("text-anchor", "end")
          .text("GDP per capita (curr $)");

        // format x axis
        xg.attr("transform", "translate(" + [0, chartHeight] + ")")
        xg.selectAll("path").style({ fill: "none", stroke: "gray"})
        xg.selectAll("line").style({ stroke: "#000"})
        //xg.selectAll(".tick text").attr("transform", "rotate(0)")
         
        // create brush
        var brush = d3.svg.brush()
          .x(xScale)
          .y(yScale)
          .extent([ [2000, dataYmax * 0.3], [20000, dataYmax * 0.7] ])
          .on("brush", brushed);
   
        // create brush group
        var brushg = g.append("g")
          .classed("brush", true)
          .call(brush);

        // set brush styles (after brush is created)
        //brushg.selectAll(".background").style({visibility: "visible"})
        brushg.selectAll(".background").style({visibility: "none"})
        brushg.selectAll(".extent").style({visibility: "visible"})
        //brushg.selectAll(".resize rect").style({visibility: "visible"})

        // initial invokation
        brushed();

        // brush handler
        function brushed() {
          var minext = brush.extent()[0];
          var xmin = minext[0];
          var ymin = minext[1];
     
          var maxext = brush.extent()[1];
          var xmax = maxext[0];
          var ymax = maxext[1];
          
          var filtered = data.filter(function(d) {
            var x = xField(d);
            var y = yField(d);
            return x >= xmin 
              && x <= xmax 
              && y >= ymin 
              && y <= ymax;
          })
          
          g.selectAll("circle")
            .style("stroke", colorStroke)
            .style("fill-opacity", fillOpacity)
          
          g.selectAll("circle")
            .data(filtered, function(d) { return d.key })
            //.style("stroke", "#FFFFFF")
            .style("stroke", "black")
            .style("fill-opacity", 0.8)
     
          if (filtered.length == 0) filtered = data;
          dispatch.filter(filtered);

        } // end brush handler

      } // end x function

      x.data = function(_) {
        if(!arguments.length) return data;
        data = _;

        return x;
      }

      x.highlight = function(_) {
        saveG.selectAll("circle")
          .attr("r", radius)
          .style("stroke-width", strokeWidth)
          .style("fill", colorFill)
          .style("fill-opacity", fillOpacity)
          // matching data only
          .data(_, function(d) { return d.key })
          .attr("r", radiusSelected)
          .style("stroke-width", 1)
          .style("fill", colors.red)
          .style("fill-opacity", 1);

        return x;
      }

      x.accessor = function(_) {
        if(!arguments.length) return mode;
        if (_ === "showInternet") mode = "internet";
        else mode = "cellular";

        return x;
      }

      x.forceBrushEvent = function() {
        //console.log('x.forceBrushEvent');

        return x;
      }

      return d3.rebind(x, dispatch, "on");

    } // end scatterView function


    // table function -----------------------------------------------------------------------------
    function tableView() {
      var dispatch = d3.dispatch(x, "hover");
      var data,
          sortColumn = "countryCode";

      function x(div) {
        div.select("#table").remove();

        var table = div.append("table")
          .attr("class", "table table-condensed table-bordered table-striped")
          .attr("id", "table")
          .style("background-color", "white");

        var columnWidths = ["10%", "30%", "20%", "20%", "20%"];
        table.selectAll("col")
          .data(columnWidths)
          .enter()
          .append("col")
          .style("width", function(d) { return d; });

        var columnHead = ["Code", "Country", "Cellular use per 100 people", "Internet use per 100 people", "GDP per capita ($)"];
        var columnData = ["countryCode", "countryName", "valueCellular", "valueInternet", "valueGDP"];

        var thead = table.append("thead");
        var tbody = table.append("tbody");
        thead.append("tr")
          .selectAll("th")
          .data(columnHead)
          .enter()
          .append("th")
          .attr("id", function(d, i) { return "head" + i ; })
          .attr("class", "colHead")
          .style("background-color", function(d, i) { 
            return (columnData[i] === sortColumn) ? "rgb(220, 220, 220)" : "white"; })
          .text(function(d) { return d; })
          .on("click", function(d, i) { 
            sortColumn = columnData[i]; 
            x.sort(); 
            x(div); 
          });

        // create table rows
        var rows = tbody.selectAll("tr")
          .data(data)
          .enter()
          .append("tr");

        // create cells
        rows.selectAll("td")
          .data(function(d) {
            return columnData.map(function(column) {
              var value = d[column];
              if (typeof value == "number") {
                if (column === "valueGDP") value = commasFormatter(value)
                else value = value.toFixed(2);
              }
              return { value: value };
            });
          })
          .enter()
          .append("td")
          .html(function(d) { return d.value; });
    
        //rows.exit().remove();

        // handle hover events
        rows.on("mouseover", function(d, i) { dispatch.hover([d]) })
        rows.on("mouseout", function(d, i) { dispatch.hover([]) })        
      }

      x.data = function(_) {
        if(!arguments.length) return data;
        data = _;
        x.sort();

        return x;
      }

      x.sort = function() {
        var result = 0;
        data.sort(function(a, b) {
          if (a[sortColumn] > b[sortColumn]) result = -1;
          if (a[sortColumn] < b[sortColumn]) result = 1;
          if (sortColumn === "countryCode" || sortColumn === "countryName") result *= -1;

          return result;
        });
      }

      return d3.rebind(x, dispatch, "on");

    } // end tableView function


    // controls -----------------------------------------------------------------------------------
    d3.selectAll("input").on("change", change);

    function change() {
      if (this.value === "internet") mode = "showInternet";
      else mode = "showCellular";
      //console.log(mode);

      // regenerate the chart
      chart
        .accessor(mode)
        .data(data);

      chart(svgGroup);
    }

    var helpBtn = d3.select("#helpBtn")
      .on("click", function(){

        // get current state of help div
        var helpDiv = d3.select("#helpDiv");
        if (helpDiv.style("display") == "none") helpDiv.style("display", "block");
        else helpDiv.style("display", "none");

        helpBtn[0][0].blur(); // remove focus
    });


  }); // end d3.tsv ajax

</script>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <style>
body {
  color: #222;
}

.col {
  width: 50%;
}

.col-left {
  background: #da9090;
}

.col-right {
  background: #90da90;
}

@media(min-width: 640px) {
  .col-left {
    float: left;
  }

  .col-right {
    float: right;
  }
}
    </style>
  </head>
  <body>
  <div class="container">
    <div class="col col-left">
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc pulvinar urna sit amet sem condimentum auctor. Proin ligula enim, tempus id augue nec, posuere dignissim nisl. Phasellus id ligula nisl. Curabitur congue massa nec dolor sollicitudin semper. Mauris ac tempor neque. Pellentesque dictum urna ac nisl imperdiet venenatis. Nunc eget commodo nisi, luctus pharetra quam. Vestibulum lacinia in quam at euismod. Nam sed mauris id velit malesuada molestie. Ut sit amet vestibulum urna.

In pretium erat vitae feugiat faucibus. Sed viverra a metus id porta. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Phasellus egestas tellus a est varius, a euismod libero ornare. Cras sit amet libero vitae erat rutrum aliquam at at mauris. Praesent condimentum metus vitae nunc fermentum tristique. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Fusce et mi dignissim, lacinia turpis et, commodo metus.
    </div>

    <div class="col col-right">
Nam faucibus suscipit turpis in egestas. Proin eget sagittis purus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Cras placerat ipsum efficitur dui elementum varius. Integer mi mauris, faucibus a augue lacinia, pellentesque volutpat lectus. Vivamus ornare ullamcorper tristique. Nam vulputate, enim ut convallis rhoncus, ipsum urna consequat mauris, ac rutrum libero risus a lacus. Etiam elementum sit amet urna id accumsan.

Praesent ultricies, ex at luctus semper, mauris est eleifend leo, ut commodo leo quam et ante. Fusce semper metus ac risus varius mollis. Nunc vestibulum egestas tortor sed pretium. Sed ullamcorper diam sed lacus cursus, eget ornare neque tincidunt. Cras semper ac risus nec consequat. Mauris eros enim, mattis quis placerat quis, scelerisque tristique magna. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Vestibulum quis vestibulum velit. Fusce nec eros a augue elementum condimentum. In semper sem nisi, ut pharetra neque molestie facilisis.
    </div>
  </div>
  </body>
</html>
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.8/d3.min.js"></script>
  <style>
    body, html {
      width: 100%;
      height: 100%;
    }

    svg {
      width:50%;
      height:100%;
      float: left;
    }

    circle.airbnb {
      fill: #e00007;
      opacity: 0.6;
    }

    .axis {
        font-family: arial;
        font-size: 0.7em;
      }
      text {
        fill: black;
      }
      .label {
        font-size: 2em;
      }
      path {
        fill: none;
        stroke: black;
        stroke-width: 2px;
      }
      .tick {
        fill: none;
        stroke: black;
      }
      circle {
        opacity: 0.9;
        stroke: none;
        fill: red;
      }
      .line {
        fill: none;
        stroke: #e00007;
        stroke-width: 1px;
      }
  </style>
  <script>
    function draw(geo_data) {
    "use strict";

    /*
    D3.js setup code
    */

    var margin = 75,
        width = 750 - margin,
        height = 780 - margin;

    // https://github.com/mbostock/d3/wiki/Time-Formatting
    var format = d3.time.format("%Y-%m-%d");
    
    var projection = d3.geo.mercator()
                          .center([-122.433701, 37.767683])
                          .scale(230000)
                          .translate([width / 1.95, height / 1.74]);
    
    var path = d3.geo.path()
                     .projection(projection);

    var map = d3.select('#map').selectAll('path')
                 .data(geo_data.features)
                 .enter()
                 .append('path')
                 .attr('d', path)
                 .style('fill', '#eee')
                 .style('stroke', 'black')
                 .style('stroke-width', 1);

    map.datum(function(d) {
      var normalized = d.properties.neighbourhood
                        .replace(/ /g, '_')
                        .replace(/\//g, '_');

      d.properties.neighbourhood = normalized;
      return d;
    });

    map.attr('class', function(d) {
                    return d.properties.neighbourhood;
                 });

    d3.json("http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/listing_count.json", function(data) {
        var listings_extent = d3.extent(d3.values(data));

        var bubbles = d3.select('#map').append("g")
               .attr("class", "bubble")
               .selectAll("circle")
               .data(geo_data.features)
               .enter()
               .append("circle")
               .attr('class', 'airbnb');

        bubbles.datum(function(d) {
          d.count = data[d.properties.neighbourhood];
          return d;
        });

        var radius = d3.scale.pow().exponent(1.2)
                       .domain(listings_extent)
                       .range([3, 25]);

        bubbles
           .attr("cx", function(d) { return path.centroid(d.geometry)[0]; })
           .attr("cy", function(d) { return path.centroid(d.geometry)[1]; })
           .attr("r", function(d) { return radius(d.count); });

        d3.csv('http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/neighborhood_reviews_timeseries.csv',
          function(timeseries) {
            var field = "Mission";

            // maximum reviews
            var max_y = d3.max(timeseries, function(d) {
                var max = 0;

                d3.values(d).forEach(function(i) {
                  if (+i && (+i > max)) {
                    max = +i;
                  }
                });

                return max;
            });

            // Create y-axis scale mapping price -> pixels
            var measure_scale = d3.scale.linear()
                .range([height, 100])
                .domain([0, max_y]);

            // Create D3 axis object from measure_scale for the y-axis
            var measure_axis = d3.svg.axis()
                .scale(measure_scale)
                .orient("right");

            // Append SVG to page corresponding to the D3 y-axis
              d3.select('#chart').append('g')
                  .attr('class', 'y axis')
                  .attr("transform", "translate(" + (width - 40) + " ,0)")
                  .call(measure_axis);

              // add label to y-axis
              d3.select(".y.axis")
                  .append("text")
                  .attr('class', 'label')
                  .text("Reviews per week")
                  .attr("transform", "translate(45,300) rotate(90)");

            var drawChart = function(field) {
              d3.select('#chart').select('.x.axis').remove();
              d3.select('#chart').select('#chart path').remove();

              d3.select('#heading')
                .text(field);

              // remove missing values
              timeseries = timeseries.filter(function(d) {
                return d[field];
              });

              // get min/max dates
              var time_extent = d3.extent(timeseries, function(d){
                return format.parse(d['timestamp']);
              });

              // Create x-axis scale mapping dates -> pixels
              var time_scale = d3.time.scale()
                  .range([0, width - 50])
                  .domain(time_extent);

              // Create D3 axis object from time_scale for the x-axis
              var time_axis = d3.svg.axis()
                  .scale(time_scale)
                  .tickFormat(d3.time.format("%b '%y"));

              // Append SVG to page corresponding to the D3 x-axis
              d3.select('#chart').append('g')
                  .attr('class', 'x axis')
                  .attr('transform', "translate(0," + height + ")")
                  .call(time_axis);
              
              // define the values to map for x and y position of the line
              var line = d3.svg.line()
                           .x(function(d) { return time_scale(format.parse(d['timestamp'])); })
                           .y(function(d) { return measure_scale(+d[field]); });

              // append a SVG path that corresponds to the line chart
              d3.select('#chart').append("path")
                .datum(timeseries)
                .attr("class", "line")
                .attr("d", line);
            };

            drawChart(field);

            var mover = function(d) {
              var neigh = d.properties.neighbourhood;
              d3.select('#map path.' + neigh).style('fill', 'black');
              
              drawChart(neigh);
            };

            var mout = function(d) {
              var neigh = d.properties.neighbourhood;
              d3.select('path.' + neigh).style('fill', '#eee');
            }

            map.on("mouseover", mover);
            map.on("mouseout", mout);

            bubbles.on('mouseover', mover);
            bubbles.on('mouseout', mout);
        });
    });
    }
  </script>
</head>
<body>
    <svg id="map"></svg>
    <svg id="chart">
      <text x="50%" y="50" id="heading" font-size="2em" text-anchor="middle" font-family="futura">SF</text>
</svg>
  <script>
    d3.json("http://jay-oh-en.github.io/interactive-data-viz/data/airbnb/neighbourhoods.geojson", draw);
  </script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #fcfcfa;
}

.land {
  fill: #fff;
}

.coast-buffers {
  fill: none;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.state-borders {
  fill: none;
  stroke: #ccc;
  stroke-linejoin: round;
  stroke-linecap: round;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var color = d3.scale.ordinal()
    .domain(d3.range(90, 0, -10))
    .range(["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"]);

var projection = d3.geo.albersUsa()
    .translate([width / 2, height / 2])
    .scale(1280);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  var defs = svg.append("defs");

  defs.append("path")
      .datum(topojson.feature(us, us.objects.land))
      .attr("id", "land")
      .attr("d", path);

  defs.append("clipPath")
      .attr("id", "clip-land")
    .append("use")
      .attr("xlink:href", "#land");

  svg.append("use")
      .attr("class", "land")
      .attr("xlink:href", "#land");

  svg.append("g")
      .attr("class", "coast-buffers")
      .attr("clip-path", "url(#clip-land)")
    .selectAll("use")
      .data(color.domain())
    .enter().append("use")
      .style("stroke", color)
      .style("stroke-width", function(d) { return d + "px"; })
      .attr("xlink:href", "#land");

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "state-borders")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #000;
}

path {
  fill: #fff;
  stroke: #000;
  stroke-width: 1.5px;
}

</style>
<body>
<link href="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.css" rel="stylesheet" type="text/css"/>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/2D.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/IntersectionUtilities.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.utils.js"></script>

<script>

var width = 960,
    height = 500;

VisDock.init('body', {width: 960, height: 700});
AnnotatedByData.layerTypes = ["path"];
var viewport = VisDock.getViewport();
var points = [];

var bounds = d3.geom.polygon([
  [-width / 2, -height / 2],
  [-width / 2, +height / 2],
  [+width / 2, +height / 2],
  [+width / 2, -height / 2]
]);

circle(0, 0, 120, 96, -.001);
circle(0, 0, 30, 10, .03);
circle(0, 0, 60, 3, -.05);
circle(0, 0, 15, 4, -.02);
circle(0, 0, 0, 1, -.02);

circle(240, -120, 80, 4, -.02);
circle(240, -120, 0, 1, -.02);

circle(280, +120, 40, 8, .02);
circle(280, +120, 20, 8, -.02);
circle(280, +120, 0, 1, .02);

var line = d3.svg.line()
    .interpolate("basis-closed");

var svg = viewport;
Panel.x = width / 2;
Panel.y = height / 2;
Panel.setTransform();

var id = 0;
var path = svg.selectAll("path")
    .data(points)
  .enter().append("path")
  .attr("id", function(){
  	return "v" + id++;
  });

d3.timer(function() {
  VisDock.startChrome();	
  var voronoi = d3.geom.voronoi(points).map(function(cell) { return bounds.clip(cell); });
  path.attr("d", function(point, i) { return line(resample(voronoi[i])); });
  
  VisDock.updateLayers();
  AnnotatedByData.update();
  VisDock.finishChrome();
});

function circle(cx, cy, r, n, δθ) {
  d3.range(1e-6, 2 * Math.PI, 2 * Math.PI / n).map(function(θ) {
    var point = [cx + Math.cos(θ) * r, cy + Math.sin(θ) * r];
    d3.timer(function() {
      θ += δθ;
      point[0] = cx + Math.cos(θ) * r;
      point[1] = cy + Math.sin(θ) * r;
    });
    points.push(point);
    return point;
  });
}

function resample(points) {
  var i = -1,
      n = points.length,
      p0 = points[n - 1], x0 = p0[0], y0 = p0[1], p1, x1, y1,
      points2 = [];
  while (++i < n) {
    p1 = points[i], x1 = p1[0], y1 = p1[1];
    points2.push(
      [(x0 * 2 + x1) / 3, (y0 * 2 + y1) / 3],
      [(x0 + x1 * 2) / 3, (y0 + y1 * 2) / 3],
      p1
    );
    p0 = p1, x0 = x1, y0 = y1;
  }
  return points2;
}

VisDock.eventHandler = {
	getHitsPolygon : function(points, inclusive) {
		var shapebound = new createPolygon(points);
		return shapebound.intersectPath(d3.selectAll("path")[0], inclusive)
	},
	getHitsLine : function(points, inclusive) {
		var shapebound = new createLine(points);
		return shapebound.intersectPath(d3.selectAll("path")[0], inclusive)
	},
	getHitsEllipse : function(points, inclusive) {
		var shapebound = new createEllipse(points);
		return shapebound.intersectPath(d3.selectAll("path")[0], inclusive)
	},
	setColor : function(hits) {
		for (var i = 0; i < hits.length; i++) {
			VisDock.utils.addPathLayer(hits[i], undefined, num - 1)
		}
	},
	changeColor : function(color, query, index) {
		for (var i = 0; i < query.length; i++) {
			var vis = query[i].attr("style").split("opacity: ")[1].split(";")[0]
			query[i][0][0].setAttributeNS(null, "style", "fill: " + color + "; stroke: black; opacity: " + vis)
		}
	},
	changeVisibility : function(vis, query, index) {
		for (var i = 0; i < query.length; i++) {
			var color = query[i].attr("style").split(";")[0]
			query[i][0][0].setAttributeNS(null, "style", color + "; opacity: " + vis)
		}
	},
	removeColor : function(hits, index) {
		for (var i = 0; i < hits.length; i++) {
			hits[i].remove();
		}
	},
	QueryClick : function(query, index) {

	}
}

BirdView.init(viewport, 960, 700)
d3.select(self.frameElement).style("width", "960px");
d3.select(self.frameElement).style("height", "700px");
</script><!DOCTYPE html>
<meta charset="utf-8">
<style>

.axis {
  font: 10px sans-serif;
}

.axis-title {
  text-anchor: end;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis--x path {
  display: none;
}

.axis--y .tick:not(.tick--one) line {
  stroke-opacity: .15;
}

.line {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.area {
  fill-opacity: 0.6;
}

.area--below {
  fill: #de77ae;
}

.area--above {
  fill: #7fbc41;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 30, right: 30, bottom: 40, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var formatPercent = d3.format("+.0%"),
    formatChange = function(x) { return formatPercent(x - 1); },
    parseDate = d3.time.format("%d-%b-%y").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.log()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickSize(-width, 0)
    .tickFormat(formatChange);

var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.ratio); });

var area = d3.svg.area()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.ratio); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var gX = svg.append("g")
    .attr("class", "axis axis--x")
    .attr("transform", "translate(0," + height + ")");

var gY = svg.append("g")
    .attr("class", "axis axis--y");

gY.append("text")
    .attr("class", "axis-title")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .text("Change in Price");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  // Compute price relative to base value (hypothetical purchase price).
  var baseValue = +data[0].close;
  data.forEach(function(d) {
    d.date = parseDate(d.date);
    d.ratio = d.close / baseValue;
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain(d3.extent(data, function(d) { return d.ratio; }));

  area.y0(y(1));

  // Use a second linear scale for ticks.
  yAxis.tickValues(d3.scale.linear()
      .domain(y.domain())
      .ticks(20));

  gX.call(xAxis);

  gY.call(yAxis)
    .selectAll(".tick")
      .classed("tick--one", function(d) { return Math.abs(d - 1) < 1e-6; });

  var defs = svg.append("defs");

  defs.append("clipPath")
      .attr("id", "clip-above")
    .append("rect")
      .attr("width", width)
      .attr("height", y(1));

  defs.append("clipPath")
      .attr("id", "clip-below")
    .append("rect")
      .attr("y", y(1))
      .attr("width", width)
      .attr("height", height - y(1));

  svg.append("path")
      .datum(data)
      .attr("clip-path", "url(#clip-above)")
      .attr("class", "area area--above")
      .attr("d", area);

  svg.append("path")
      .datum(data)
      .attr("clip-path", "url(#clip-below)")
      .attr("class", "area area--below")
      .attr("d", area);

  svg.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", line);
});

</script>
<html>
	<head>
		<link rel="stylesheet" href="/style.css"/>
	</head>
	<body>
		<div id="chart">
		</div>
	</body>
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
	<script src="index.js" type="application/javascript"></script>
</html>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <!-- Bl.ock: http://bl.ocks.org/jm3/9793337 -->
</head>
<body>
  <svg width="300" height="300" viewbox="0 0 200 200">
    <circle cx="0" cy="100" r="100" fill="rgba(0, 255, 255, 1.0)"></circle>
    <circle cx="150" cy="150" r="100" fill="rgba(255, 0, 255, 0.75)"></circle>
    <circle cx="25" cy="25" r="100" fill="rgba(255, 255, 0, 0.5)"></circle>
  </svg>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
body{
	width:1200px;
	margin:100px auto;
}
svg text{
	font-size:12px;
}
rect{
	shape-rendering:crispEdges;
}
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="biPartite.js"></script>
<script>
var sales_data=[
['Lite','CA',16,0],
['Small','CA',1278,4],
['Medium','CA',27,0],
['Plus','CA',58,0],
['Grand','CA',1551,15],
['Elite','CA',141,0],
['Lite','AZ',5453,35],
['Small','AZ',683,1],
['Medium','AZ',862,0],
['Grand','AZ',6228,30],
['Lite','AL',15001,449],
['Small','AL',527,3],
['Medium','AL',836,0],
['Plus','AL',28648,1419],
['Grand','AL',3,0],
['Lite','CO',13,0],
['Small','CO',396,0],
['Medium','CO',362,0],
['Plus','CO',78,10],
['Grand','CO',2473,32],
['Elite','CO',2063,64],
['Medium','DE',203,0],
['Grand','DE',686,2],
['Elite','DE',826,0],
['Lite','KS',1738,110],
['Small','KS',12925,13],
['Medium','KS',15413,0],
['Small','GA',2166,2],
['Medium','GA',86,0],
['Plus','GA',348,3],
['Grand','GA',4244,18],
['Elite','GA',1536,1],
['Small','IA',351,0],
['Grand','IA',405,1],
['Small','IL',914,1],
['Medium','IL',127,0],
['Grand','IL',1470,7],
['Elite','IL',516,1],
['Lite','IN',43,0],
['Small','IN',667,1],
['Medium','IN',172,0],
['Plus','IN',149,1],
['Grand','IN',1380,5],
['Elite','IN',791,23],
['Small','FL',1,0],
['Grand','FL',1,0],
['Small','MD',1070,1],
['Grand','MD',1171,2],
['Elite','MD',33,0],
['Plus','TX',1,0],
['Small','MS',407,0],
['Medium','MS',3,0],
['Grand','MS',457,2],
['Elite','MS',20,0],
['Small','NC',557,0],
['Medium','NC',167,0],
['Plus','NC',95,1],
['Grand','NC',1090,5],
['Elite','NC',676,6],
['Lite','NM',1195,99],
['Small','NM',350,3],
['Medium','NM',212,0],
['Grand','NM',1509,8],
['Lite','NV',3899,389],
['Small','NV',147,0],
['Medium','NV',455,0],
['Plus','NV',1,1],
['Grand','NV',4100,16],
['Lite','OH',12,0],
['Small','OH',634,2],
['Medium','OH',749,0],
['Plus','OH',119,1],
['Grand','OH',3705,19],
['Elite','OH',3456,25],
['Small','PA',828,2],
['Medium','PA',288,0],
['Plus','PA',141,0],
['Grand','PA',2625,7],
['Elite','PA',1920,10],
['Small','SC',1146,2],
['Medium','SC',212,0],
['Plus','SC',223,4],
['Grand','SC',1803,6],
['Elite','SC',761,8],
['Small','TN',527,0],
['Medium','TN',90,0],
['Grand','TN',930,4],
['Elite','TN',395,1],
['Lite','ME',7232,58],
['Small','ME',1272,0],
['Medium','ME',1896,0],
['Plus','ME',1,0],
['Grand','ME',10782,33],
['Elite','ME',1911,3],
['Small','VA',495,0],
['Medium','VA',32,0],
['Plus','VA',7,0],
['Grand','VA',1557,12],
['Elite','VA',24,0],
['Small','WA',460,1],
['Plus','WA',88,3],
['Grand','WA',956,3],
['Small','WV',232,0],
['Medium','WV',71,0],
['Grand','WV',575,2],
['Elite','WV',368,3]
];

var width = 1100, height = 610, margin ={b:0, t:40, l:170, r:50};

var svg = d3.select("body")
	.append("svg").attr('width',width).attr('height',(height+margin.b+margin.t))
	.append("g").attr("transform","translate("+ margin.l+","+margin.t+")");

var data = [ 
	{data:bP.partData(sales_data,2), id:'SalesAttempts', header:["Channel","State", "Sales Attempts"]},
	{data:bP.partData(sales_data,3), id:'Sales', header:["Channel","State", "Sales"]}
];

bP.draw(data, svg);

</script>
</body><!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>helloworld</title>
  <meta name="description" content="" />
  <meta name="viewport" content="width=device-width" />
</head>

<body>
  <h2>User Profile</h2>
  <form id="userForm">
    First name:
    <input type="text" name="firstname" />
    <br />Last name:
    <input type="text" name="lastname" />
    <br />
    <input type="submit" value="Submit" id="btnAddUserProfile" />
  </form>
  <br />
  <ul id="userProfileList"></ul>
  
  <h2>Admin Profile</h2>
  <form id="adminForm">
    First name:
    <input type="text" name="firstname" />
    <br />Last name:
    <input type="text" name="lastname" />
    <br />
    <input type="submit" value="Submit" id="btnAddAdminProfile" />
  </form>
  <br />
  <ul id="adminProfileList"></ul>  
  
  <script data-require="jquery@*" data-semver="2.0.3" src="http://code.jquery.com/jquery-2.0.3.min.js"></script>
  <script src="http://flightjs.github.io/release/latest/flight.js"></script>
  <script data-main="main" data-require="require.js@*" data-semver="2.1.4" src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.4/require.js"></script>
</body>

</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.node {
  cursor: pointer;
}

.node:hover {
  stroke: #000;
  stroke-width: 1.5px;
}

.node--root {
  stroke: #777;
  stroke-width: 2px;
}

.node--leaf {
  fill: white;
}

.label {
  font: 11px "Helvetica Neue", Helvetica, Arial, sans-serif;
  text-anchor: middle;
  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff, 0 -1px 0 #fff;
}

.label,
.node--root,
.node--leaf {
  
}

</style>
<body>
<link href="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.css" rel="stylesheet" type="text/css"/>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/2D.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/IntersectionUtilities.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.utils.js"></script>

<script>

VisDock.init("body", {width: 1000, height: 1000});
AnnotatedByData.layerTypes = [".node.node--leaf"];
var viewport = VisDock.getViewport();

var margin = 10,
    outerDiameter = 960,
    innerDiameter = outerDiameter - margin - margin;

var x = d3.scale.linear()
    .range([0, innerDiameter]);

var y = d3.scale.linear()
    .range([0, innerDiameter]);

var color = d3.scale.linear()
    .domain([-1, 5])
    .range(["hsl(152,80%,80%)", "hsl(228,30%,40%)"])
    .interpolate(d3.interpolateHcl);

var pack = d3.layout.pack()
    .padding(2)
    .size([innerDiameter, innerDiameter])
    .value(function(d) { return d.size; })

var svg = viewport;
Panel.x = margin;
Panel.y = margin;
Panel.setTransform();

d3.json("flare.json", function(error, root) {
  VisDock.startChrome();
  var focus = root,
      nodes = pack.nodes(root);

  svg.append("g").selectAll("circle")
      .data(nodes)
    .enter().append("circle")
      .attr("class", function(d) { return d.parent ? d.children ? "node" : "node node--leaf" : "node node--root"; })
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return d.children ? color(d.depth) : null; })
      .on("mousedown", function(d) {
      	if (this.getAttributeNS(null, "class") != "node node--leaf") 
      	return zoom(focus == d ? root : d); });
  var id = 0;
  svg.selectAll(".node.node--leaf").attr("id", function(){
  	return "c" + id++;
  })
  svg.append("g").selectAll("text")
      .data(nodes)
    .enter().append("text")
      .attr("class", "label")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
      .style("fill-opacity", function(d) { return d.parent === root ? 1 : 0; })
      .style("display", function(d) { return d.parent === root ? null : "none"; })
      .text(function(d) { return d.name; });

  VisDock.finishChrome();
  function zoom(d, i) {
    VisDock.startChrome();
    var focus0 = focus;
    focus = d;

    var k = innerDiameter / d.r / 2;
    x.domain([d.x - d.r, d.x + d.r]);
    y.domain([d.y - d.r, d.y + d.r]);
    d3.event.stopPropagation();

    var transition = viewport.selectAll("text,.node.node--root,.node.node--leaf,.node").transition()
        .duration(d3.event.altKey ? 7500 : 750)
        .attr("transform", function(d) { 
        	return "translate(" + x(d.x) + "," + y(d.y) + ")"; 
        	});

    transition.filter("circle")
        .attr("r", function(d) { return k * d.r; });

    transition.filter("text")
      .filter(function(d) { return d.parent === focus || d.parent === focus0; })
        .style("fill-opacity", function(d) { return d.parent === focus ? 1 : 0; })
        .each("start", function(d) { if (d.parent === focus) this.style.display = "inline"; })
        .each("end", function(d) { if (d.parent !== focus) this.style.display = "none"; });
    VisDock.finishChrome();
  }
});
d3.timer(function(){
	VisDock.startChrome();
	var layers = Panel.panel.selectAll(".VisDockEllipseLayer")[0]
	for (var i = 0; i < layers.length; i++){
		var id = layers[i].getAttribute("id").split("_")[1];
		var t = Panel.panel.select("#"+id).attr("transform");
		var r = Panel.panel.select("#"+id).attr("r")
		layers[i].setAttribute("transform", t)
		layers[i].setAttribute("r", r)
		layers[i].setAttribute("pointer-events", "none")
	}
	AnnotatedByData.update();
	VisDock.finishChrome();
})

VisDock.eventHandler = {
    getHitsPolygon: function(points, inclusive){
	
		var shapebound = new createPolygon(points);
		return shapebound.intersectEllipse(d3.selectAll(".node.node--leaf")[0], inclusive)

    },
    getHitsEllipse: function(points, inclusive){

		var shapebound = new createEllipse(points);
		return shapebound.intersectEllipse(d3.selectAll(".node.node--leaf")[0], inclusive)

    },
    getHitsLine: function(points, inclusive){

		var shapebound = new createLine(points);
		return shapebound.intersectEllipse(d3.selectAll(".node.node--leaf")[0], inclusive)

    },
    setColor: function(hits){
		if (QueryManager.layers[num-1] == undefined) QueryManager.layers[num - 1] = [];
		for (var i=0;i<hits.length;i++){
			var r = hits[i].getAttributeNS(null, "r")
			var str = hits[i].getAttributeNS(null, "transform")
			QueryManager.layers[num-1][i] = d3.select(hits[i].parentNode).append("circle")
				.attr("r", r).attr("style", "fill: " + VisDock.color[num - 1] + ";opacity: 1;")
				.attr("pointer-events", "none")
				.attr("id", "_" + hits[i].getAttribute("id")).attr("class", "VisDockEllipseLayer")
				.attr("transform", str)
		}
    },
    changeColor: function(color, query, index){
		for (var i=0;i<query.length;i++){
			var vis = query[i].attr("style").split(";")[1];
			query[i].attr("style","fill: " + color + ";" + vis)
		}
    },
    changeVisibility: function(vis, query, index){
		for (var i=0;i<query.length;i++){
			var color = query[i].attr("style").split(";")[0]
			query[i].attr("style", color + ";opacity:" + vis)
		}
    },
    removeColor: function(hits, index){
		for (var i=0;i<hits.length;i++){
		    hits[i].remove();
		}
    }
}
BirdView.init(viewport, 1000, 1000)
d3.select(self.frameElement).style("height", "1000px");
d3.select(self.frameElement).style("width", "1000px");
</script><!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <link type="text/css" rel="stylesheet" href="style.css"/>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
</head>
<body>
    <div id="viz"></div>
    <script type="text/javascript">

    var myCircle = d3.select("#viz")
        .append("svg")
        .attr("width", 1000)
        .attr("height", 1000);    

    myCircle
		.append("circle")
        .style("stroke", "black")
        .style("fill", "white")
        .attr("r", 40)
        .attr("cx", 50)
        .attr("cy", 50)
        .on("mouseover", function(){d3.select(this).style("fill", "mediumvioletred");})
        .on("mouseout", function(){d3.select(this).style("fill", "aliceblue");});

/*
	button.on("click", function() {
		  myCircle
			.transition()
			.delay(250)
			.attr("x", 320)
			.ease("elastic");
		})
*/
    </script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Adding Tooltips</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: lightblue;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 600)
						.attr("height", 600);



			d3.csv("scimagojr.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.Documents, +b.Documents);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return d.Documents / 15000;
					})
					.attr("height", 8)
					.append("title")
					.text(function(d) {
						return d.Country + "'s number of papers published 1996 - 2013 " + d.Documents;
					});

			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font-family: Helvetica;
}

</style>
<body>

<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.js"></script>

<script>

function foo() {
}

</script>

<div>TEST TEXT</div>

</body><html>
<!--Sortable: http://bl.ocks.org/mbostock/3885705-->
<!--Tip: http://bl.ocks.org/Caged/6476579-->
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  position: relative;
  width: 960px;
}

.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: orange;
}
.bar:hover{
 fill: orangered;
}

.x.axis path {
  display: none;
}

label {
  position: absolute;
  top: 10px;
  right: 10px;
}

.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}

</style>
<label><input type="checkbox"> Sort values</label>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
<script>

var margin = {top: 50, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var formatPercent = d3.format("d");

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1, 1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var tip = d3.tip()
  .attr('class', 'd3-tip')
  .offset([-17, -8])
  .html(function(d) {
    return "<strong> "+ d.letter + ": </strong> <span style='color:red'>" + d.frequency + "</span>";
  });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.call(tip);

d3.tsv("letters.tsv", type, function(error, data) {

  x.domain(data.map(function(d) { return d.letter; }));
  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Frequency");

  svg.append("text")
        .attr("x", (width / 2))             
        .attr("y", 0 - (margin.top / 2))
        .attr("text-anchor", "middle")  
        .style("font-size", "16px") 
        .text("Sortable Barchart with a Tip");

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.letter); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.frequency); })
      .attr("height", function(d) { return height - y(d.frequency); })
      .on('mouseover', tip.show)
      .on('mouseout',tip.hide);

  d3.select("input").on("change", change);

  var sortTimeout = setTimeout(function() {
    d3.select("input").property("checked", true).each(change);
  }, 2000);

  function change() {
    clearTimeout(sortTimeout);

    // Copy-on-write since tweens are evaluated after a delay.
    var x0 = x.domain(data.sort(this.checked
        ? function(a, b) { return b.frequency - a.frequency; }
        : function(a, b) { return d3.ascending(a.letter, b.letter); })
        .map(function(d) { return d.letter; }))
        .copy();

    svg.selectAll(".bar")
        .sort(function(a, b) { return x0(a.letter) - x0(b.letter); });

    var transition = svg.transition().duration(500),
        delay = function(d, i) { return i * 25; };

    transition.selectAll(".bar")
        .delay(delay)
        .attr("x", function(d) { return x0(d.letter); });

    transition.select(".x.axis")
        .call(xAxis)
      .selectAll("g")
        .delay(delay);
  }
});

  function type(d) {
    d.frequency = +d.frequency;
    return d;
  }

</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>Location API</title>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
</head>
<body>

  <style>

  body {
    margin: 0;
  }

  svg {
    background-color: #333;
    cursor: pointer;
  }

  .land {
    fill: #00D9FF;
    fill-opacity: 0.35;
    stroke: #00D9FF;
    stroke-width: 1;
  }

  .location {
    fill: none;
    stroke: #FFFB00;
    stroke-width: 2;
  }

  .coords {
    fill: none;
    stroke: #FFFB00;
    font-family: 'Helvetica Neue',  Helvetica, sans-serif;
    font-weight: 300;
    font-size: 16px;
  }

  </style>

  <div id="map-container"></div>

  <script>

    // Set the dimensions of the map
    var width  = 960,
        height = 480;

    // Create a selection for the container div and append the svg element
    var div = d3.select('#map-container'),
        svg = div.append('svg');

    // Set the size of the SVG element
    svg.attr('width', width).attr('height', height);

    // Create and configure a geographic projection
    var projection = d3.geo.equirectangular()
      .translate([width / 2, height / 2]);

    // Create and configure a path generator
    var pathGenerator = d3.geo.path()
      .projection(projection);

    // Retrieve the geographic data asynchronously
    d3.json('land.geojson', function(err, data) {

      // Throw errors on getting or parsing the file
      if (err) { throw err; }

      // Land
      var land = svg.selectAll('path.land').data([data]);

      land.enter().append('path').classed('land', true);
      land.attr('d', pathGenerator);
      land.exit().remove();

    });

    // Location API Options
    var locationOptions = {
      enableHighAccuracy: false,  // No need for high accuracy
      timeout: 2e3,               // Wait at most 2 seconds
      maximumAge: 60 * 60 * 1e3   // one hour
    };

    // Location API
    svg.on('click', function() {
      navigator.geolocation.getCurrentPosition(showLocation, fallback, locationOptions);
    });

    // It will be invoked when the user allows the application to use the Location API
    function showLocation(position) {

      // Extract the longiture and latitude from the position object
      var coords = [
        position.coords.longitude,
        position.coords.latitude
      ];

      // Circle showing the location
      var circle = svg.selectAll('circle.location').data([coords]);

      circle.enter().append('circle')
        .classed('location', true)
        .attr('r', d3.max([width, height]))
        .attr('cx', function(d) { return projection(d)[0]; })
        .attr('cy', function(d) { return projection(d)[1]; });

      circle.transition().duration(2e3)
        .attr('r', 3);

      circle.exit().remove();

      // Label with the coordinates
      var label = svg.selectAll('text.coords').data([coords]);

      label.enter().append('text')
        .classed('coords', true)
        .attr('x', function(d) { return 10 + projection(d)[0]; })
        .attr('y', function(d) { return 5 + projection(d)[1]; });

      label.transition().delay(2e3)
        .text(function(d) {
          var lon = d[0].toFixed(4),
              lat = d[1].toFixed(4);
          return lat + ', ' + lon;
        });

      label.exit().remove();
    }

    function fallback() {
      console.log('Unable to get the location');
    }
  </script>

</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  if (error) throw error;

  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name]};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});

</script>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title></title>
	<style>
  .scene {perspective:250px;}
  .scene, .camera {width:100vw; height:100vh;}
  .camera, .camera * {transform-style:preserve-3d;}
  .camera {
    transform:rotateX(15deg) rotateY(5deg) scale(1.1); background:rgba(255,255,255,.5);
  }

  div {
    display: inline-block;
    background: rgba(255,0,0,.5);
    width: 100px;height:50px;
    box-shadow: 0 0 0 1px pink inset; 
  }

  #a {
    position:relative; margin-left:50px;margin-top:100px;
    transform:translate(200px, 150px) rotate(-10deg) translateZ(50px); transform-origin:center;
  }
  #b {
    margin-left:100px;
    transform:translate(100px, 50px) rotate(-10deg) translateZ(50px) rotateX(-20deg); transform-origin:center;
  }
  #c {
    /*transform:translateY(100px);*/
  }
  #d {
    margin-top:10px; margin-left:50px;
  }
  #e {
    transform:translateY(30px);
  }
  #f {
    position:absolute;left:100px;top:50px;
    transform:translate(-50px, 50px) rotate(5deg); transform-origin:right top;
  }
  #g {
    position:fixed;left:100px;top:50px;
    transform:scale(2) translate(-60px, 30px) rotate(20deg); transform-origin:right top;
  }
	</style>
</head>
<body style="margin:0;">
	<div class="scene"><div class="camera">
    <div id="a">
  		relative;A;(50,100);t(200,150)r(10)tz(50);center
  		<div id="b">
  			static;B;(100,0);t(100,50)r(-10)tz(50)rx(-20);center
  			<div id="c">
  				static;C;(0,0);;center
  				<div id="d">
  					static;D;(50,10);;center
            <div id="e">
            static;E;(0,0);ty(30);center
              <div id="f">
                absolute;F;(100,50);t(-50,50)r(5);right top
                <div id="g">
                fixed;G(100,50);s(2)t(-60,30)r(20);right top
                </div>
              </div>
            </div>
  				</div>
  			</div>
  		</div>
  	</div>
  </div></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore.js"></script>
<script src="https://code.jquery.com/jquery-2.1.3.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.js"></script>
<script src="domvertices.js"></script>
<script src="jquery.domvertices.js"></script>
<script>
var $els = $('#a, #b, #c, #d, #e, #f, #g');

$.fn.domvertices.defaults = {append: $('.scene')};

$els.each(function (i, el) {
  $(el).domvertices().trace();
});
$(window).resize(function () {
  $.fn.domvertices.v.forEach(function (v) {
    v.update();
    v.trace();
  });
});
</script>
</body>
</html><!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <title>Treemap - Neat Zoom Effect</title>
    <script type="text/javascript" src="http://www.billdwhite.com/wordpress/wp-content/js/browserdetect/browserdetect.js"></script>
    <script type="text/javascript" src="http://www.billdwhite.com/wordpress/wp-content/js/d3/d3.js"></script>
    <style type="text/css">
        body {
            overflow: hidden;
            margin: 0;
            font-size: 12px;
            font-family: "Helvetica Neue", Helvetica;
        }

        .footer {
            z-index: 1;
            display: block;
            font-size: 26px;
            font-weight: 200;
            text-shadow: 0 1px 0 #fff;
        }

        svg {
            overflow: hidden;
        }

        rect {
            pointer-events: all;
            cursor: pointer;
            stroke: #EEEEEE;
        }

        .chart {
            display: block;
            margin: auto;
        }

        .parent .label {
            color: #FFFFFF;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -webkit-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -moz-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        }

        .labelbody {
            background: transparent;
        }

        .label {
            margin: 2px;
            white-space: pre;
            overflow: hidden;
            text-overflow: ellipsis;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -webkit-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -moz-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        }

        .child .label {
            white-space: pre-wrap;
            text-align: center;
            text-overflow: ellipsis;
        }

        .cell {
            font-size: 11px;
            cursor: pointer
        }
    </style>
</head>
<body>
<div id="body"></div>
<div class="footer">
    <select>
        <option value="size">Size</option>
        <option value="count">Count</option>
    </select>
</div>
</body>

<script type="text/javascript">
    var isIE = BrowserDetect.browser == 'Explorer';
    var chartWidth = 550;
    var chartHeight = 550;
    var xscale = d3.scale.linear().range([0, chartWidth]);
    var yscale = d3.scale.linear().range([0, chartHeight]);
    var color = d3.scale.category10();
    var headerHeight = 20;
    var headerColor = "#555555";
    var transitionDuration = 500;
    var root;
    var node;

    var treemap = d3.layout.treemap()
        .round(false)
        .size([chartWidth, chartHeight])
        .sticky(true)
        .value(function(d) {
            return d.size;
        });

    var svg = d3.select("#body")
        .append("svg:svg")
        .attr("width", chartWidth)
        .attr("height", chartHeight);

    var chart = svg.append("svg:g");

    var defs = svg.append("defs");

    var filter = defs.append("svg:filter")
        .attr("id", "outerDropShadow")
        .attr("x", "-20%")
        .attr("y", "-20%")
        .attr("width", "140%")
        .attr("height", "140%");

    filter.append("svg:feOffset")
        .attr("result", "offOut")
        .attr("in", "SourceGraphic")
        .attr("dx", "1")
        .attr("dy", "1");

    filter.append("svg:feColorMatrix")
        .attr("result", "matrixOut")
        .attr("in", "offOut")
        .attr("type", "matrix")
        .attr("values", "1 0 0 0 0 0 0.1 0 0 0 0 0 0.1 0 0 0 0 0 .5 0");

    filter.append("svg:feGaussianBlur")
        .attr("result", "blurOut")
        .attr("in", "matrixOut")
        .attr("stdDeviation", "3");

    filter.append("svg:feBlend")
        .attr("in", "SourceGraphic")
        .attr("in2", "blurOut")
        .attr("mode", "normal");


    d3.json("../data/flare2.json", function(data) {
        node = root = data;
        var nodes = treemap.nodes(root);

        var children = nodes.filter(function(d) {
            return !d.children;
        });
        var parents = nodes.filter(function(d) {
            return d.children;
        });

        // create parent cells
        var parentCells = chart.selectAll("g.cell.parent")
            .data(parents, function(d) {
                return "p-" + d.id;
            });
        var parentEnterTransition = parentCells.enter()
            .append("g")
            .attr("class", "cell parent")
            .on("click", function(d) {
                zoom(d);
            });
        parentEnterTransition.append("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", headerHeight)
            .style("fill", headerColor);
        parentEnterTransition.append('foreignObject')
            .attr("class", "foreignObject")
            .append("xhtml:body")
            .attr("class", "labelbody")
            .append("div")
            .attr("class", "label");
        // update transition
        var parentUpdateTransition = parentCells.transition().duration(transitionDuration);
        parentUpdateTransition.select(".cell")
            .attr("transform", function(d) {
                return "translate(" + d.dx + "," + d.y + ")";
            });
        parentUpdateTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", headerHeight)
            .style("fill", headerColor);
        parentUpdateTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", headerHeight)
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });
        // remove transition
        parentCells.exit()
            .remove();

        // create children cells
        var childrenCells = chart.selectAll("g.cell.child")
            .data(children, function(d) {
                return "c-" + d.id;
            });
        // enter transition
        var childEnterTransition = childrenCells.enter()
            .append("g")
            .attr("class", "cell child")
            .on("click", function(d) {
                zoom(node === d.parent ? root : d.parent);
            })
            .on("mouseover", function() {
                this.parentNode.appendChild(this); // workaround for bringing elements to the front (ie z-index)
                d3.select(this)
                    .attr("filter", "url(#outerDropShadow)")
                    .select(".background")
                    .style("stroke", "#000000");
            })
            .on("mouseout", function() {
                d3.select(this)
                    .attr("filter", "")
                    .select(".background")
                    .style("stroke", "#FFFFFF");
            });
        childEnterTransition.append("rect")
            .classed("background", true)
            .style("fill", function(d) {
                return color(d.parent.name);
            });
        childEnterTransition.append('foreignObject')
            .attr("class", "foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return Math.max(0.01, d.dy);
            })
            .append("xhtml:body")
            .attr("class", "labelbody")
            .append("div")
            .attr("class", "label")
            .text(function(d) {
                return d.name;
            });

        if (isIE) {
            childEnterTransition.selectAll(".foreignObject .labelbody .label")
                .style("display", "none");
        } else {
            childEnterTransition.selectAll(".foreignObject")
                .style("display", "none");
        }

        // update transition
        var childUpdateTransition = childrenCells.transition().duration(transitionDuration);
        childUpdateTransition.select(".cell")
            .attr("transform", function(d) {
                return "translate(" + d.x  + "," + d.y + ")";
            });
        childUpdateTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return d.dy;
            })
            .style("fill", function(d) {
                return color(d.parent.name);
            });
        childUpdateTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return Math.max(0.01, d.dy);
            })
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });
        // exit transition
        childrenCells.exit()
            .remove();

        d3.select("select").on("change", function() {
            console.log("select zoom(node)");
            treemap.value(this.value == "size" ? size : count)
                .nodes(root);
            zoom(node);
        });

        zoom(node);
    });


    function size(d) {
        return d.size;
    }


    function count(d) {
        return 1;
    }


    //and another one
    function textHeight(d) {
        var ky = chartHeight / d.dy;
        yscale.domain([d.y, d.y + d.dy]);
        return (ky * d.dy) / headerHeight;
    }


    function getRGBComponents (color) {
        var r = color.substring(1, 3);
        var g = color.substring(3, 5);
        var b = color.substring(5, 7);
        return {
            R: parseInt(r, 16),
            G: parseInt(g, 16),
            B: parseInt(b, 16)
        };
    }


    function idealTextColor (bgColor) {
        var nThreshold = 105;
        var components = getRGBComponents(bgColor);
        var bgDelta = (components.R * 0.299) + (components.G * 0.587) + (components.B * 0.114);
        return ((255 - bgDelta) < nThreshold) ? "#000000" : "#ffffff";
    }


    function zoom(d) {
        this.treemap
            .padding([headerHeight/(chartHeight/d.dy), 0, 0, 0])
            .nodes(d);

        // moving the next two lines above treemap layout messes up padding of zoom result
        var kx = chartWidth  / d.dx;
        var ky = chartHeight / d.dy;
        var level = d;

        xscale.domain([d.x, d.x + d.dx]);
        yscale.domain([d.y, d.y + d.dy]);

        if (node != level) {
            if (isIE) {
                chart.selectAll(".cell.child .foreignObject .labelbody .label")
                    .style("display", "none");
            } else {
                chart.selectAll(".cell.child .foreignObject")
                    .style("display", "none");
            }
        }

        var zoomTransition = chart.selectAll("g.cell").transition().duration(transitionDuration)
            .attr("transform", function(d) {
                return "translate(" + xscale(d.x) + "," + yscale(d.y) + ")";
            })
            .each("end", function(d, i) {
                if (!i && (level !== self.root)) {
                    chart.selectAll(".cell.child")
                        .filter(function(d) {
                            return d.parent === self.node; // only get the children for selected group
                        })
                        .select(".foreignObject .labelbody .label")
                        .style("color", function(d) {
                            return idealTextColor(color(d.parent.name));
                        });

                    if (isIE) {
                        chart.selectAll(".cell.child")
                            .filter(function(d) {
                                return d.parent === self.node; // only get the children for selected group
                            })
                            .select(".foreignObject .labelbody .label")
                            .style("display", "")
                    } else {
                        chart.selectAll(".cell.child")
                            .filter(function(d) {
                                return d.parent === self.node; // only get the children for selected group
                            })
                            .select(".foreignObject")
                            .style("display", "")
                    }
                }
            });

        zoomTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, kx * d.dx);
            })
            .attr("height", function(d) {
                return d.children ? headerHeight: Math.max(0.01, ky * d.dy);
            })
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });

        // update the width/height of the rects
        zoomTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, kx * d.dx);
            })
            .attr("height", function(d) {
                return d.children ? headerHeight : Math.max(0.01, ky * d.dy);
            })
            .style("fill", function(d) {
                return d.children ? headerColor : color(d.parent.name);
            });

        node = d;

        if (d3.event) {
            d3.event.stopPropagation();
        }
    }
</script>

</html><!DOCTYPE html>
<html>
<head>
	<title>Linear regression test</title>	
	<style>
		path {
			stroke: steelblue; stroke-width: 2; fill: none;
		}
		
		.axis path, .axis line {
			fill: none;
			stroke: grey;
			stroke-width: 1; shape-rendering: crispEdges;
		}

		.dot {
			stroke: black;			
		}

		div.tooltip {
			position: absolute; text-align: center;
			width: 80px;
			height: 28px;
			padding: 2px;
			font: 12px sans-serif; background: lightsteelblue; border: 0px; border-radius: 8px; pointer-events: none;
		}

	</style>
</head>
<body>
	<!-- <script src="bower_components/d3/d3.min.js"></script>
	<script src="bower_components/mathjs/dist/math.js"></script> -->
	<script src="d3.min.js"></script>
	<script src="math.min.js"></script>
	<script type="text/javascript">
		var math = mathjs();

		var linear_regression = function(X, y) {
			var m = y.length;

			X = math.concat(math.ones(m,1), X);
			y = math.matrix(y);

			var tr = math.transpose(X);
			var tr_X = math.multiply(tr, X);
			var tr_y = math.multiply(tr, y);
			var theta = math.multiply( math.inv(tr_X), tr_y );

			return function() {
				var args = Array.prototype.slice.call(arguments);
				return math.multiply(math.matrix(math.concat([1], args)), theta);
			}
		}
		

		console.group("lineal");

		var age_weight = [{"age":12,"weight":58},{"age":8,"weight":42},{"age":10,"weight":51},{"age":11,"weight":54},{"age":7,"weight":40},{"age":7,"weight":39},{"age":10,"weight":49},{"age":14,"weight":56}];

		var X = age_weight.map(function(d){ return [+d.age]; }),
			y = age_weight.map(function(d){ return [+d.weight]; }),
			f = linear_regression(X , y);

		console.table(age_weight.sort(function(a, b) { return +a.age - b.age; }));	

		console.log("Weight for a child 6 years old:",f(6));	
		console.log("Weight for a child 7 years old:",f(7));
		console.log("Weight for a child 9 years old:",f(9));
		console.log("Weight for a child 15 years old:",f(15));
		console.log("Weight for a child 12 years old:",f(12));
		
		console.groupEnd();

		draw_chart(age_weight, f, "age", "weight");		

		function draw_chart(data, fn, xLabel, yLabel) {

			var extent = d3.extent(data, function(d) { return d[xLabel]; }),
				range = d3.range(extent[0], extent[1], 1);

			var regression = data.map(function(d) { 
				var ob = {}; 
				ob[xLabel] = d[xLabel]; 
				ob[yLabel] = f(d[xLabel]);
				return ob; 
			});

			
			var margin = {top: 30, right: 20, bottom: 30, left: 50}, 
				width = 500 - margin.left - margin.right,
				height = 270 - margin.top - margin.bottom;	

			var x = d3.scale.linear().range([0, width]);
			var y = d3.scale.linear().range([height, 0]);

			var xAxis = d3.svg.axis().scale(x)
							.orient("bottom")
							.ticks(10);

			var yAxis = d3.svg.axis().scale(y)
							.orient("left")
							.ticks(10);

			var line = d3.svg.line()
							.x(function(d) { return x(d[xLabel]); })
							.y(function(d) { return y(d[yLabel]); })
							;

			var svg = d3.select("body")
						.append("svg")
							.attr("width", width + margin.left + margin.right)
							.attr("height", height + margin.top + margin.bottom)
						.append("g")
							.attr("transform", "translate(" + margin.left + "," + margin.top + ")");		

			x.domain(d3.extent(data, function(d) { return d[xLabel]; }));
			y.domain(d3.extent(data, function(d) { return d[yLabel]; }));


			svg.selectAll(".dot")
				.data(data)
				.enter()
					.append("circle")	
						.attr("cx", function(d) { return x(d[xLabel]); })
						.attr("cy", function(d) { return y(d[yLabel]); })
						.attr("r", 2)
						.attr("class", "dot");

			var div = d3.select("body")
				.append("div")
				.attr("class", "tooltip")
				.style("opacity", 0);			

			svg.append("path")
				.attr("d", line(regression))
				.on("mousemove", function(d) {

					var _x = d3.mouse(this)[0],
						_y = d3.mouse(this)[1];

					div.transition()
						.duration(200)
						.style({
							"opacity": .9, 
							left: d3.event.pageX + 20 + 'px',
                    		top: d3.event.pageY + 10 + 'px'
                    	});

					div.html(xLabel + ": " + d3.round(x.invert(_x), 2) + " " + yLabel + ": " + d3.round(y.invert(_y), 2));
				})
				.on("mouseout", function(d) {
					div.transition()
						.duration(500)
						.style("opacity", 0);
				})

			svg.append("g")
				.attr("class", "x axis")
				.attr("transform", "translate(0," + height + ")")
				.call(xAxis);

			svg.append("g")
				.attr("class", "y axis")
				.call(yAxis);

		}

	</script>
</body>
</html><!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-COMPATIBLE" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>graphSub</title>
    <title>Animating Changes in Force Diagram</title>
    <script src="http://d3js.org/d3.v3.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script type="text/javascript" src="http://livejs.com/live.js"></script>
    <style>
        .link {
            stroke: #2E2E2E;
            stroke-width: 2px;
        }

        .node {
            stroke: #fff;
            stroke-width: 2px;
        }
        .textClass {
            stroke: #323232;
            font-family: "Lucida Grande", "Droid Sans", Arial, Helvetica, sans-serif;
            font-weight: normal;
            stroke-width: .5;
            font-size: 14px;
        }
    </style>
</head>
<body>
<button onclick="reStart()">Restart Animation</button>
<script>
    //<link rel="stylesheet" href="static/css/base.css">
    // add a method conditionaly
    if (!('xpush' in Array.prototype)) {
        // push value to array only if not already present
        Array.prototype.xpush = function(value){
            if(this.indexOf(value) === -1){
                this.push(value);
            };
            return this
        };
    }
    
    d3.json("fm.json", function(error, graph) {
        if (error) throw error;
        
        function chart(elementName) {

            var width = function(value) {
                if (!arguments.length) return width;
                width = value;
                return chart; // enable chaining
            };

            var height = function(value) {
                if (!arguments.length) return height;
                height = value;
                return chart; // enable chaining
            };

            var resize = function() {
                var svg = d3.select(elementName).append("svg");
                width = window.innerWidth, height = window.innerHeight;
                vis.attr("width", width).attr("height", height);
                force.size([width, height]).resume();
            }

            // add nodes to the layout
            var addNode = function(node){
                nodes.push(node);                
            };

            // add link to the layout
            var addLink = function(source, target, value){
                var link = {"source": findNode(source), "target": findNode(target), "value": value};
                subNetLinks.push(link);
            };

            // look for the node in the d3 layout
            var findNode = function(name) {
                for (var i in subNetNodes) {
                    if (subNetNodes[i]["name"] === name) return subNetNodes[i];
                };
            };

            // remove all links form the layout
            var removeAllLinks = function() {
                subNetLinks.splice(0, subNetLinks.length);
                //update();
            };

            // remove all node from the layout
            var removeAllNodes = function() {
                subNetNodes.splice(0, subNetNodes.length);
                //update();
            };

            var findNodeIndex = function(name, nodes) {
                for (var i = 0; i < nodes.length; i++) {
                    if (nodes[i].name == name) {
                        return i;
                    }
                };
            };

            var subNet = function(currentIndex, hops){
                // links stored as JSON objects, easy to compare
                // operates on the data loaded from the JSON
                // extracts a subset of the original data
                var n = graph.nodes[currentIndex];
                subNetNodes.xpush(n);

                if (hops === 0) {
                    return;
                };

                for (var i = 0; i < graph.links.length; i++) {

                    if (currentIndex === graph.links[i].source) {
                        tempLinks.xpush(JSON.stringify(graph.links[i]));
                        subNet(graph.links[i].target, hops - 1)
                    };
                    if (currentIndex === graph.links[i].target) {
                        tempLinks.xpush(JSON.stringify(graph.links[i]));
                        subNet(graph.links[i].source, hops - 1)
                    };
                };                
            };

            var clickHandler = function(d, i){
                // init
                removeAllNodes(); // clears force.nodes()
                removeAllLinks(); // clears force.links()
                tempLinks = [];
                
                var link,
                    source,
                    target;

                // extract subnet around 'd' with all nodes up to 2 hops away
                subNet(findNodeIndex(d.name, graph.nodes), 2);
                
                //add links incrementaly
                for (var i = 0; i < tempLinks.length; i++) {
                    link = JSON.parse(tempLinks[i]);

                    source = graph.nodes[link.source];
                    target = graph.nodes[link.target];
                    addLink(source.name, target.name, 2);
                      
                };

                // setting the initial positions of the nodes
                force.nodes().forEach(function(){
                    this.x = width/2;
                    this.y = height/2;
                });
                update();
                //console.log(nodes);
            };

            d3.select(window).on("resize", resize)

            var width = 960, // default width
                height = 450, // default height
                color = d3.scale.category10(),
                force = d3.layout.force(),
                subNetNodes = force.nodes(),
                subNetLinks = force.links(),
                tempLinks = [],
                vis,
                runOnceFlag = true,
                clikedNode;

            vis = d3.select(elementName)
                    .append("svg:svg")
                    .attr("width", width)
                    .attr("height", height)
                    .attr("id", "svg")
                    .attr("pointer-events", "all")
                    .append('svg:g');
                    // .attr("viewBox", "0 0 " + width + " " + height)
                    // .attr("perserveAspectRatio", "xMinYMid")

            var update = function() {

                console.log('update', force.nodes(), force.links());

                var link = vis.selectAll("line")
                        .data(subNetLinks, function (d) {
                            console.log('update', typeof(d.source), d);
                            if (typeof(d.source) === 'number') {
                                return subNetNodes[d.source].name + "-" + subNetNodes[d.target].name;
                            }else{
                                return d.source.name + "-" + d.target.name;
                            };
                            
                        });
                
                link.enter().insert("line", "g")
                        .transition()   
                        .delay(function (d, i) {
                            return i*100;
                        })
                        .attr("id", function (d) {
                            return d.source.name + "-" + d.target
                            .name;
                        })
                        .attr("stroke-width", function (d) {
                            return d.value / 10;
                        })
                        .attr("class", "link");
                
                link.append("title")
                        .text(function (d) {
                            return d.value;
                        });
                
                link.exit().remove();

                var node = vis.selectAll("g.node")
                        .data(subNetNodes, function (d) {
                            return d.name;
                        });

                var nodeEnter = node.enter()
                        .append("g")
                        .attr("class", "node")
                        .call(force.drag);

                nodeEnter
                        .append("svg:circle")
                        .attr("r", 12)
                        .attr("id", function (d) {
                            return "Node;" + d.name;
                        })
                        .attr("class", "nodeStrokeClass")
                        .attr("fill", function(d) { return color(d.group); })
                        .on('click', clickHandler);

                nodeEnter.append("svg:text")
                        .attr("class", "textClass")
                        .attr("x", 14)
                        .attr("y", ".31em")
                        .text(function (d) {
                            return d.name;
                        });

                node.exit().remove();

                // Restart the force layout.
                force
                    .charge(-500)
                    .linkDistance(15)
                    .size([width, height])
                    .start();                

                force.on("tick", function () {

                    node.attr("transform", function (d) {
                        //console.log('**', d);
                        return "translate(" + d.x + "," + d.y + ")";
                    }); 
                    
                    link.attr("x1", function (d) {
                        return d.source.x;
                    })
                            .attr("y1", function (d) {
                                return d.source.y;
                            })
                            .attr("x2", function (d) {
                                return d.target.x;
                            })
                            .attr("y2", function (d) {
                                return d.target.y;
                            }); 
                });                
            };

            if (runOnceFlag) {
                var a = graph.nodes[0];
                var b = graph.nodes[1];
                
                //console.log(subNetNodes, subNetLinks);
                subNetNodes.push(a);
                subNetNodes.push(b);
                
                var c = {"source":0,"target":1,"value":1};
                subNetLinks.push(c);
                update();
                runOnceFlag = false;
            };
        };
        ///
        chart('body');
    });
</script>
</body>
</html><html>
  <head>
    <title> VI 4 Bubble Chart </title>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    <style>
      body {
        font-family: 'Open sans',verdana,arial,sans-serif;
        font-size: 10pt
      }
      .axis path,
      .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
      }
    </style>
  </head>
  <body>
	  
	  <div class="container"  style="height:480px;overflow-x: hidden; overflow-y: scroll">
	  	<div class="chartcontainer">
	   	 <script>
			var i=0;
				d3.csv("input_data.csv", 
	        		function(data) {
	          		 
					  return {
	            		  x: +data["Participants"],
	            		  y: +data["Number of medals"], 
	            		  label: data["Country"],
						  size:5,
						  color:""
	          			};
					},function(error,dataNum){
						
						var colors=["yellow","blue","black","violet","green","brown","pink","red","gray","maroon"]
						
						dataNum.forEach(function(eachData,i){
							
							eachData['size']=5;
							eachData['color']= colors[i];
							
						});
						
						
			            var x = d3.scale.linear().domain([
			                      d3.min(dataNum, function (d) { return d.x; }), 
			                      d3.max(dataNum, function (d) { return d.x; })
			                    ]).range([0, 750]);
			            var y = d3.scale.linear().domain([
			                      d3.min(dataNum, function (d) { return d.y; }), 
			                      d3.max(dataNum, function (d) { return d.y; })
			                    ]).range([338, 0]);

			            var svg = d3.select('.chartcontainer')
			                        .append('svg')
			                        .attr('class', 'chart')
			                        .attr("width", 904)
			                        .attr("height", 510)
			                        .append("g")
			                        .attr("transform", "translate(" + 70 + "," + 70 + ")");
									
			            var xAxis = d3.svg.axis().scale(x);
			            svg.append("g")
			              .attr("class", "x axis")
			              .attr("transform", "translate(0," + 340 + ")")
			              .call(xAxis)
			              .append("text")
			                .text("Participants")
			                .attr("x", 500)
			                .attr("y", 30)
			                .attr("dy", ".41em")
			                .style("text-anchor", "end");

			            // Y Axis
			            var yAxis = d3.svg.axis().scale(y).orient("left");
			            svg.append("g")
			              .attr("class", "y axis")
			              .call(yAxis)
			              .append("text")
			                .text("Number of Medals")
			                .attr("transform", "rotate(-90)")
			                .attr("x", 0)
			                .attr("y", -40)
			                .attr("dy", ".41em")
			                .style("text-anchor", "end");
							
			          svg.selectAll("circle")
			            .data(dataNum)
			            .enter()
			            .append("circle")
			              .attr("cx", function (d) { return x(d.x); })
			              .attr("cy", function (d) { return y(d.y); })
			              .attr("r", function (d) { return d.x/80; })
			              .attr("text", function (d) { return d.label })
			              .style("fill", function (d) {   return d.color; })
							.attr("opacity", 0.7);
					
				          svg.selectAll("circle")
				            .each(function(d, i) {
				              circle = d3.select(this)
				              svg.append("text")
				                .text(circle.attr("text"))
				                .attr("dx", +circle.attr("cx") - (+circle.attr("r")/2))
				                .attr("dy", +circle.attr("cy") + 3);
				            });
															
						
					});		
		</script>			
	  	</div>
		<div class="piechartcontainer">
			
			<script>
		d3.csv("input_data.csv", 
    		function(data) {
      		 
			  return {
        		  x: +data["Participants"],
        		  y: +data["Number of medals"], 
        		  label: data["Country"],
				  size:5,
				  color:""
      			};
			},function(error,dataNum){
				
			var width = 960,
			    height = 500,
			    radius = Math.min(width, height) / 2;
				
			var color = d3.scale.ordinal()
			    .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

			var arc = d3.svg.arc()
			    .outerRadius(radius - 10)
			    .innerRadius(0);

			var labelArc = d3.svg.arc()
			    .outerRadius(radius - 40)
			    .innerRadius(radius - 40);

			var pie = d3.layout.pie()
			    .sort(null)
			    .value(function(d) { return d.Participants; });
				
				
			var svg = d3.select(".piechartcontainer").append("svg")
			    .attr("width", width)
			    .attr("height", height)
			  .append("g")
			    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
				
				d3.csv("input_data2.csv", type, function(error, data) {
				  if (error) throw error;

				  var g = svg.selectAll(".arc")
				      .data(pie(data))
				    .enter().append("g")
				      .attr("class", "arc");

				  g.append("path")
				      .attr("d", arc)
				      .style("fill", function(d) { return color(d.data.Country); });

				  g.append("text")
				      .attr("transform", function(d) { return "translate(" + labelArc.centroid(d) + ")"; })
				      .attr("dy", ".35em")
				      .text(function(d) { return d.data.Country; });
				});
				
				
				
			});
				
				
			function type(d) {
			  d.Participants = +d.Participants;
			  return d;
			}
			
			
			
			
			
			
			
			
			</script>
			
			
		</div>
		
	  </div>
	  
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Module 1 Bar Chart</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			body {
				font-family: Helvetica, Arial, sans-serif;
				margin: 0;
				background-color: lightGray;
			}
			#container {
				width: 800px;
				margin-left: auto;
				margin-right: auto;
				margin-top: 20px;
				padding: 10px;
				background-color: white;
				box-shadow: 3px 3px 5px 6px #ccc;
			}
			h1 {
				border-bottom: solid 5px #000099;
				font-size: 18pt;
			}
			svg {background-color: white;}
			/* CSS rules for bar groups */
			g.bar text {
				font-size: 12px;
				font-weight: bold;
				text-anchor: start;
				opacity: 0;
			}
			g.bar:hover rect {
				fill: orange;
			}
			g.bar:hover text {
				opacity: 1;
			}
			/*rect:hover {fill: orange;}*/
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			.axis text {font-family: sans-serif;}
			.x.axis text {font-size: 12px;}
			.y.axis text {font-size: 14px;}
			.y.axis path,
			.y.axis line {
				opacity: 0.0;  /* set the visibility of the y-axis line and ticks*/
			}
			text.axisLabel {font-size: 12px;}
			.errorbars {stroke-width: 2; stroke: #2C4E71;			}
			.gridlines {stroke-width: 1; stroke: white;			}
			rect.trigger {opacity: 0;} /* Invisible rect in front of text */
			rect.trigBack {fill: #DBEBFC; stroke: #254E77; shape-rendering: crispEdges;}
			text.trigText {font-size: 14px; fill: #254E77;}
		</style>
	</head>
	<body>


		<div id="container">
			<h1>Maryland County Motor Vehicle Death Rates</h1>
			<p>Caroline County had the highest rate of motor vehicle deaths 
				among Maryland counties in 2014.</p>
			<p>

		<script type="text/javascript">		

			// Tunable variables:
			var svgw = 800;
			var svgh = 600;
			var pad = { top: 1, right: 20, bottom: 30, left: 120 };

			var meas = { base: "MVMort_rate", cil: "MVMort_cil", cih: "MVMort_cih"};

			// Global variables:
			//Now the SVG goes into #container instead of body
			var svg1 = d3.select("#container")
			// var svg1 = d3.select("body") // An empty SVG
				.append("svg")
				.attr("width", svgw).attr("height", svgh);
			var dataset; 

			// Scale and axis variables:
			var widthScale = d3.scale.linear()
								.range([ 0, svgw - pad.left - pad.right ]);
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ pad.top, svgh - pad.bottom ], 0.15);
			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom")
							.ticks(5);
			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");

			//Load in contents of CSV file, check for errors, and call generateVis()
			d3.csv("MD County Health Rankings - additional_measures.csv", 
				function(error, data) {
					if (error) { console.log(error); //Log the error.
					} else { 
						console.log(data); //Log the data.
						dataset = data;
						generateVis();
					}
				});

			// generateVis: function to generate the bar chart
			var generateVis = function() {

				// Sort in descending order
				dataset.sort(function(a, b) {
					return d3.descending(+a[meas.base], +b[meas.base]);
				}); // Plus signs before the a.* and b.* arguments force a numeric value sort
				// Alternatives are Javascript functions parseInt() and parseFloat()

				// Set up the input domains
				widthScale.domain([ 0, 
					d3.max(dataset, function(d) { return +d[meas.cih]; })
				]);
				heightScale.domain(dataset.map(function(d) { return d.CoName; } ));

				// Create the bar chart
				//Bind data to groups (not bars directly)
				var groups = svg1.selectAll("g")
					.data(dataset)
					.enter()
					.append("g")
					.attr("class", "bar");
					//"bar" class help us differentiate these groups
					//from the groups created later for axes

				// Add a rect to each group
				var rects = groups.append("rect")
					.attr("x", pad.left)
					.attr("y", function(d) {
						return heightScale(d.CoName);
					})
					//Initially, set bar width to zero
					.attr("width", 0)
					// .attr("width", function(d) {
					// 	return widthScale(d[meas.base]);
					// })
					.attr("height", heightScale.rangeBand())
					.attr("fill", "#6E9BCA");
					// .append("title") // Add mouseover action
					// .text(function(d) {
					// 	return d[meas.base]
					// 		+ " (from " + d[meas.cil] + " to " + d[meas.cih] + ")";
					// });

				// Add a text element to each group for hover action
				groups.append("text")
					.attr("x", function(d) {
						return pad.left + 3;
					})
					.attr("y", function(d) {
						return heightScale(d.CoName) + 15;
					})
					.text(function(d) {
						return d[meas.base]
							+ " (from " + d[meas.cil] + " to " + d[meas.cih] + ")";
					});

				// Transition bar widths into place
				rects.transition()
					.duration(1000)
					.attr("width", function(d) {
						return widthScale(d[meas.base]);
					});

				// Add verticle grid lines: (does not scale with different measures)
				for (var i = 10; i <= 30; i += 10) {
					svg1.append("line")
						.attr("class", "gridlines")
						.attr("x1", pad.left + widthScale(i))
						.attr("y1", pad.top)
						.attr("x2", pad.left + widthScale(i))
						.attr("y2", svgh - pad.bottom)
				} // End for-loop to add grid lines

				// Add error bars for confidence intervals
				var errorBars = svg1.selectAll("line.errorbars")
					.data(dataset)
					.enter()
					.append("line");
				errorBars.attr("class", "errorbars")
					.attr("x1", function(d) {
						return pad.left + widthScale(d[meas.base]); // Will transition to low CI
					})
					.attr("x2", function(d) {
						return pad.left + widthScale(d[meas.base]); // Will transition to low CI
					})
					.attr("y1", function(d) {
						return heightScale(d.CoName) + (heightScale.rangeBand() / 2);
					})
					.attr("y2", function(d) {
						return heightScale(d.CoName) + (heightScale.rangeBand() / 2);
					})

				// Add the axes and x-axis label:
				svg1.append("g")
					.attr("class", "x axis")
					.attr("transform", 
						"translate(" + pad.left + "," + (svgh - pad.bottom - 5) + ")") 
						// Adjusted a bit to account for extra space from using rangeRoundBands
					.call(xAxis);
				svg1.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + pad.left + ",0)")
					.call(yAxis);
				svg1.append("text") // label the x-axis
					.attr("class", "axisLabel")
					.attr("x", pad.left - 2)
					.attr("y", svgh - pad.bottom + 26)
					.text("Motor vehicle deaths per 100,000 people per year");

				// Add a text box to trigger transitions
				svg1.append("rect")
					.attr("class", "trigBack")
					.attr("x", 2)
					.attr("y", svgh - 40)
					.attr("width", 100)
					.attr("height", 35)
				svg1.append("text") // label the x-axis
					.attr("class", "trigText")
					.attr("x", 6).attr("y", svgh - 25)
					.text("Click to show");
				svg1.append("text") // label the x-axis
					.attr("class", "trigText")
					.attr("x", 6).attr("y", svgh - 10)
					.text("uncertainty");
				svg1.append("rect")
					.attr("class", "trigger")
					.attr("x", 2)
					.attr("y", svgh - 40)
					.attr("width", 100)
					.attr("height", 35)

				// Trigger action:
				d3.select("rect.trigger")
					.on("click", function() {
						errorBars.transition()
						.duration(2000)
					.attr("x1", function(d) {
						return pad.left + widthScale(d[meas.cil]);
					})
					.attr("x2", function(d) {
						return pad.left + widthScale(d[meas.cih]);
					})
					});

			}; // End generateVis function

		</script>

		<p style="font-size:12px">Source: County Health Rankings web site (
			<a href="http://www.countyhealthrankings.org/" target="_blank">
					http://www.countyhealthrankings.org/</a>
			), the "Additional Measures" data for 2014.</p>

	</div>
	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta http-equiv="content=type" content="text/html"; charset="utf-8">
		<title>Homicide vs life satisfaction</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js" charset="utf-8"></script>
		<style type="text/css">

			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				color: #65c8d0;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: #ba9bc9;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: #666666;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: Helvetica, Arial, sans-serif;
				font-size: 12px;
			}

		</style>
	</head>
	<body>
		<h1>Homicide rate vs life satisfaction score in OECD countries </h1>
		<p>Homicide rate on the horizontal axis, life satisfaction score on the vertical axis. Data from <a href="http://www.oecdbetterlifeindex.org/about/better-life-initiative/">OECD</a>.</p>

		<script type="text/javascript">	

			// Define height and width of SVG box
			var w = 600;
			var h = 500;
			var padding = [ 30, 20, 40, 40 ];  // Paading 0 top, 1 right, 2 bottom, 3 left

			// Create scale pixel range for width
			var xScale = d3.scale.linear()
								.range([ padding[3], w - padding[1] ]);

			// Create scale pixel range for height, and percentage gap
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2]
									]);

			// Create x axis at the bottom
			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(12);

			// Create y axis to the left
			var yAxis = d3.svg.axis()
							.scale(yScale)
							.ticks(8)
							.orient("left");

			// Create SVG with right height and width
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			// Import data from file
			d3.csv("oecd.csv", function(data) {

				// Sort data
				data.sort(function(a, b) {
					return d3.descending(+a.homicide, +b.homicide);
				});	

				// Set domain (input range) for x scale 
				xScale.domain([ 0, d3.max(data, function(d) 
						{return +d.homicide;})
					]);

				// Set domain (input range) for y scale 
				yScale.domain([ d3.max(data, function(d) {return +d.satisfaction;}), 
					d3.min(data, function(d) {return +d.satisfaction;}) 
				]);

				// create circles
				var circles = svg.selectAll("circle")
					.data(data)
					.enter()
					.append("circle")

				// Set attributes for circles, initial state
				circles.attr("cx", padding[3])
					.attr("cy", h - padding[2])
					.attr("r", 5)
					.attr("fill", "#ffffff")
					.append("title")
					.text(function(d) {
						return d.country + "'s satisfaction rate: " + d.satisfaction + " % and homicide rate: " + d.homicide ;
					});

				// Set new attributes for transition
				circles.sort(function(a, b) {
						return d3.ascending(+a.homicide, +b.homicide);
					})
					.transition()
					// Delay in ms pr item
					.delay(function(d, i) {
						return i * 50;
					})
					.duration(1000)
					.attr("fill", "#65c8d0")
					.attr("cx", function(d){
						return xScale(d.homicide);
					})
					.attr("cy", function(d) {
						return yScale(d.satisfaction);
					})
					;


				// Append x axis as group, translate
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0" + "," + (h - padding[2]) + ")")
					.call(xAxis);

				// Append y axis as group, translate
				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);
			});
		</script>
	</body>
</html><!DOCTYPE html> <html> <head> <meta charset="utf-8"/>   </head> <body> <div style="display:inline-block;height:100%;width:100%">   <h3>     Colors of TimelyPortfolio from      <a href="http://cssstats.com">cssstats</a>   </h3>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="transparent"/>   <text x="0" y="75" style="font-size:70%">transparent</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#fff"/>   <text x="0" y="75" style="font-size:70%">#fff</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#ffffff"/>   <text x="0" y="75" style="font-size:70%">#ffffff</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#fcfcfc"/>   <text x="0" y="75" style="font-size:70%">#fcfcfc</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#eeeeee"/>   <text x="0" y="75" style="font-size:70%">#eeeeee</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#fcf8e3"/>   <text x="0" y="75" style="font-size:70%">#fcf8e3</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#f2dede"/>   <text x="0" y="75" style="font-size:70%">#f2dede</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#dff0d8"/>   <text x="0" y="75" style="font-size:70%">#dff0d8</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#d9edf7"/>   <text x="0" y="75" style="font-size:70%">#d9edf7</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#f5f5f5"/>   <text x="0" y="75" style="font-size:70%">#f5f5f5</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#a9dba9"/>   <text x="0" y="75" style="font-size:70%">#a9dba9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#f9f9f9"/>   <text x="0" y="75" style="font-size:70%">#f9f9f9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#d0e9c6"/>   <text x="0" y="75" style="font-size:70%">#d0e9c6</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#ebcccc"/>   <text x="0" y="75" style="font-size:70%">#ebcccc</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#faf2cc"/>   <text x="0" y="75" style="font-size:70%">#faf2cc</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#c4e3f3"/>   <text x="0" y="75" style="font-size:70%">#c4e3f3</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#e5e5e5"/>   <text x="0" y="75" style="font-size:70%">#e5e5e5</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#0081c2"/>   <text x="0" y="75" style="font-size:70%">#0081c2</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#e6e6e6"/>   <text x="0" y="75" style="font-size:70%">#e6e6e6</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#cccccc \9"/>   <text x="0" y="75" style="font-size:70%">#cccccc \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#006dcc"/>   <text x="0" y="75" style="font-size:70%">#006dcc</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#0044cc"/>   <text x="0" y="75" style="font-size:70%">#0044cc</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#003399 \9"/>   <text x="0" y="75" style="font-size:70%">#003399 \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#faa732"/>   <text x="0" y="75" style="font-size:70%">#faa732</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#f89406"/>   <text x="0" y="75" style="font-size:70%">#f89406</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#c67605 \9"/>   <text x="0" y="75" style="font-size:70%">#c67605 \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#da4f49"/>   <text x="0" y="75" style="font-size:70%">#da4f49</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#bd362f"/>   <text x="0" y="75" style="font-size:70%">#bd362f</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#942a25 \9"/>   <text x="0" y="75" style="font-size:70%">#942a25 \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#5bb75b"/>   <text x="0" y="75" style="font-size:70%">#5bb75b</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#51a351"/>   <text x="0" y="75" style="font-size:70%">#51a351</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#408140 \9"/>   <text x="0" y="75" style="font-size:70%">#408140 \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#49afcd"/>   <text x="0" y="75" style="font-size:70%">#49afcd</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#2f96b4"/>   <text x="0" y="75" style="font-size:70%">#2f96b4</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#24748c \9"/>   <text x="0" y="75" style="font-size:70%">#24748c \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#363636"/>   <text x="0" y="75" style="font-size:70%">#363636</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#222222"/>   <text x="0" y="75" style="font-size:70%">#222222</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#080808 \9"/>   <text x="0" y="75" style="font-size:70%">#080808 \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#0088cc"/>   <text x="0" y="75" style="font-size:70%">#0088cc</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#999999"/>   <text x="0" y="75" style="font-size:70%">#999999</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#fafafa"/>   <text x="0" y="75" style="font-size:70%">#fafafa</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#ededed"/>   <text x="0" y="75" style="font-size:70%">#ededed</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#1b1b1b"/>   <text x="0" y="75" style="font-size:70%">#1b1b1b</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#111111"/>   <text x="0" y="75" style="font-size:70%">#111111</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#515151"/>   <text x="0" y="75" style="font-size:70%">#515151</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#0e0e0e"/>   <text x="0" y="75" style="font-size:70%">#0e0e0e</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#040404"/>   <text x="0" y="75" style="font-size:70%">#040404</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#000000 \9"/>   <text x="0" y="75" style="font-size:70%">#000000 \9</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#000000"/>   <text x="0" y="75" style="font-size:70%">#000000</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#f7f7f7"/>   <text x="0" y="75" style="font-size:70%">#f7f7f7</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#b94a48"/>   <text x="0" y="75" style="font-size:70%">#b94a48</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#953b39"/>   <text x="0" y="75" style="font-size:70%">#953b39</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#c67605"/>   <text x="0" y="75" style="font-size:70%">#c67605</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#468847"/>   <text x="0" y="75" style="font-size:70%">#468847</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#356635"/>   <text x="0" y="75" style="font-size:70%">#356635</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#3a87ad"/>   <text x="0" y="75" style="font-size:70%">#3a87ad</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#2d6987"/>   <text x="0" y="75" style="font-size:70%">#2d6987</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#333333"/>   <text x="0" y="75" style="font-size:70%">#333333</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#1a1a1a"/>   <text x="0" y="75" style="font-size:70%">#1a1a1a</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#0e90d2"/>   <text x="0" y="75" style="font-size:70%">#0e90d2</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#149bdf"/>   <text x="0" y="75" style="font-size:70%">#149bdf</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#dd514c"/>   <text x="0" y="75" style="font-size:70%">#dd514c</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#ee5f5b"/>   <text x="0" y="75" style="font-size:70%">#ee5f5b</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#5eb95e"/>   <text x="0" y="75" style="font-size:70%">#5eb95e</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#62c462"/>   <text x="0" y="75" style="font-size:70%">#62c462</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#4bb1cf"/>   <text x="0" y="75" style="font-size:70%">#4bb1cf</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#5bc0de"/>   <text x="0" y="75" style="font-size:70%">#5bc0de</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#fbb450"/>   <text x="0" y="75" style="font-size:70%">#fbb450</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#ccc"/>   <text x="0" y="75" style="font-size:70%">#ccc</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="rgba(255, 255, 255, 0.25)"/>   <text x="0" y="75" style="font-size:70%">rgba(255, 255, 255, 0.25)</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#2288bb"/>   <text x="0" y="75" style="font-size:70%">#2288bb</text> </svg>   <svg style="display:inline-block;height:85px;width:64px">   <rect width="64" height="64" fill="#ffff00"/>   <text x="0" y="75" style="font-size:70%">#ffff00</text> </svg> </div>
<code>
<pre>
library(pipeR)
library(htmltools)
library(rvest)
library(XML)

# some slightly more advanced exercises
# using rvest, XML, and htmltools

# this one takes all the svg nodes in the section
# with id unique-background-colors from the 
# site cssstats.com run on timelyportfolio.blogspot.com
# 1) removes attributes
# 2) sizes them at 85px x 64px
# 3) add new text node with fill value
# 4) combines them into a single div
# 5) with some meta information
"http://cssstats.com/stats?url=http%3A%2F%2Ftimelyportfolio.blogspot.com" %>>%
  html %>>%
  html_nodes( "#unique-background-colors svg" ) %>>%
  xmlApply( function(x){
    removeAttributes(x)
    addAttributes(x,style="display:inline-block;height:85px;width:64px")
    fillNode = newXMLNode(
      "text"
      ,html_attr(html_node(x,"rect"),"fill")
      ,attrs=c(x=0,y=75,style="font-size:70%")
    )
    addChildren(x,fillNode)
    saveXML(x) %>>% HTML
  } ) %>>%
  (tags$div(
    style="display:inline-block;height:100%;width:100%"
    ,list(
      tags$h3(
        "Colors of TimelyPortfolio from "
        ,tags$a(href="http://cssstats.com","cssstats")
      )
      ,.
    )
  )) %>>%
  tagList %>>%
  html_print
</pre>
<code> </body> </html><!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Mapbox GL JS Examples</title>
<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.2.0/mapbox-gl.js'></script>
<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
</style>
</head>
<body>
<div id='map'></div>
<script>
var map;
mapboxgl.accessToken = 'pk.eyJ1IjoiZmFyYWRheTIiLCJhIjoiTUVHbDl5OCJ9.buFaqIdaIM3iXr1BOYKpsQ';
  
map = new mapboxgl.Map({
  container: 'map', // container id
  style: 'pencil-v4.json', //stylesheet location
  center: [36.97319, -122.03552], // starting position
  zoom: 14, // starting zoom
  bearing: 90,
  hash: true
});
</script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.border {
  stroke-width: .3px;
  fill: none;
  stroke: #333;
}

.caption {
  font-weight: bold;
}

.key path {
  display: none;
}

.key line {
  stroke: #000;
  shape-rendering: crispEdges;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js"></script>
<script>

var width = 960,
    height = 500,
    formatNumber = d3.format("s");

var color = d3.scale.threshold()
    .domain([250000, 500000, 750000, 1000000, 1250000,1500000,1750000])
    .range(["#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"]);

var x = d3.scale.linear()
    .domain([77156, 2579208])
    .range([0, 300]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .tickSize(13)
    .tickValues(color.domain())
    .tickFormat(function(d) { return formatNumber(d); });

var projection = d3.geo.albers()
    .center([0, 49.5])
    .rotate([-2.8, 3])
    .parallels([45, 55])
    .scale(2500)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select('body').append("svg")
    .attr("width", width)
    .attr("height", height);

var g = svg.append("g")
    .attr("class", "key")
    .attr("transform", "translate(" + 40 + "," + 40 + ")");

g.selectAll("rect")
    .data(color.range().map(function(currentColor) {
      var d = color.invertExtent(currentColor);
      if (d[0] == null) d[0] = x.domain()[0];
      if (d[1] == null) d[1] = x.domain()[1];
      return d;
    }))
  .enter().append("rect")
    .attr("height", 8)
    .attr("x", function(d) { return x(d[0]); })
    .attr("width", function(d) { return x(d[1]) - x(d[0]); })
    .style("fill", function(d) { return color(d[0]); });

g.call(xAxis).append("text")
    .attr("class", "caption")
    .attr("y", -6)
    .text("Population");

queue()
    .defer(d3.json, "france.json")
    .defer(d3.csv, "population.csv")
    .await(ready);

function ready(error, france, population) {

  var regions = svg.selectAll(".departements")
      .data(topojson.feature(france, france.objects.regions).features)
    .enter().append("path")
      .attr("class", "departements")
      .attr("d", path)
      .style("fill",function(departement){
        var paringData = population.filter(function(population){ return departement.properties.name === population.name; })[0];
        return paringData ? color(paringData.population) : color(0);
      });

  svg.append("path")
      .datum(topojson.mesh(france, france.objects.regions, function(a, b) { return a.properties.name !== b.properties.name || a === b; }))
      .attr("class","border")
      .attr("d", path);
 };

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

svg {
  font: 10px sans-serif;
  padding: 10px;
}

.axis,
.frame {
  shape-rendering: crispEdges;
}

.axis line {
  stroke: #ddd;
}

.axis path {
  display: none;
}

.frame {
  fill: none;
  stroke: #aaa;
}

circle {
  fill-opacity: .3;
}

</style>
<body>
<div id="chart"></div>
<script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="./d3.scatterplot.js"></script>
<script>

var width = 960,
    size = 150,
    padding = 19.5;

var x = d3.scale.linear()
    .range([padding/2, size - padding / 2]);

var y = d3.scale.linear()
    .range([size - padding/2, padding / 2]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(5);

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(5);

var color = d3.scale.category10();

d3.csv("distances.csv", function(error, data) {

    n2c = {
    'ano':'#5f91b3',
    'ceska-piratska-strana':'black',
    'cssd':'orange',
    'hnuti-usvit-prime-demokracie':'#91b82e',
    'kdu-csl':'yellow',
    'komunisticka-strana-cech-a-moravy':'red',
    'obcanska-demokraticka-strana-ods':'blue',
    'strana-svobodnych-obcanu':'#040',
    'strana-zelenych':'green',
    'top-09':'#660066',
    }
    n2n = {
        'ano':'ANO',
        'ceska-piratska-strana':'Piráti',
        'cssd':'ČSSD',
        'hnuti-usvit-prime-demokracie':'Úsvit',
        'kdu-csl':'KDU-ČSL',
        'komunisticka-strana-cech-a-moravy':'KSČM',
        'obcanska-demokraticka-strana-ods':'ODS',
        'strana-svobodnych-obcanu':'Svobodní',
        'strana-zelenych':'Zelení',
        'top-09':'TOP 09',
    }
    selected = ['ano','ceska-piratska-strana','cssd','hnuti-usvit-prime-demokracie','kdu-csl','komunisticka-strana-cech-a-moravy','obcanska-demokraticka-strana-ods','strana-svobodnych-obcanu','strana-zelenych','top-09'];
    //selected = ['ano','ceska-piratska-strana','cssd','strana-zelenych','strana-svobodnych-obcanu','top-09'];

    w = 600;
    h = 600;
    gap = 10;
    csize = (w-(selected.length - 1)*gap)/selected.length - gap;
    charts = [];
    for (i=0;i<selected.length;i++) {
        for (j=0;j<selected.length;j++) {
            if (j<=i) {
                cdata = [];
                data.forEach(function(d) {
                    cdata.push({"x":d[selected[i]],"y":d[selected[j]]});
                });
                charts.push({
                    'data': cdata,
                    'margin': {'left': i*(csize+gap),'top':j*(csize+gap),'right':w - ((i)*(csize+gap) + csize),'bottom': h - (j*(csize+gap)+csize)},
                    'axes': {'labels': {'x': '', 'y': ''}},
                    'minmax': {'x': {'min': 0, 'max': 1},'y': {'min':0,'max':1},
                        'r':{'min':0,'max':1}, 'rrange':{'min':0,'max':1}},
                    'size': {'width': w, 'height': h},
                    'colors': {'x': n2c[selected[i]], 'y': n2c[selected[j]]},
                    'i': i,
                    'j': j,
                    'name': {'x': n2n[selected[i]], 'y': n2n[selected[j]]},
                })
            }
        }
    }
    var svg = d3.select("#chart")
        .append("svg")
        .attr("width",w)
        .attr("height",h);   

    var sp = d3.scatterplot()
            .data(function(d) {return d.data})
            .margin(function(d) {return d.margin})
            .axes(function(d) {return d.axes})
            .minmax(function(d) {return d.minmax})
            .size(function(d) {return d.size});

    var scatter = svg.selectAll(".scatterplot")
        .data(charts)
      .enter()
        .append("svg:g")
        .call(sp);
})


/*
  xAxis.tickSize(size * n);
  yAxis.tickSize(-size * n);

  var svg = d3.select("body").append("svg")
      .attr("width", size * n + padding)
      .attr("height", size * n + padding)
    .append("g")
      .attr("transform", "translate(" + padding + "," + padding / 2 + ")");

  svg.selectAll(".x.axis")
      .data(traits)
    .enter().append("g")
      .attr("class", "x axis")
      .attr("transform", function(d, i) { return "translate(" + (n - i - 1) * size + ",0)"; })
      .each(function(d) { x.domain(domainByTrait[d]); d3.select(this).call(xAxis); });

  svg.selectAll(".y.axis")
      .data(traits)
    .enter().append("g")
      .attr("class", "y axis")
      .attr("transform", function(d, i) { return "translate(0," + i * size + ")"; })
      .each(function(d) { y.domain(domainByTrait[d]); d3.select(this).call(yAxis); });

  var cell = svg.selectAll(".cell")
      .data(cross(traits, traits))
    .enter().append("g")
      .attr("class", "cell")
      .attr("transform", function(d) { return "translate(" + (n - d.i - 1) * size + "," + d.j * size + ")"; })
      .each(plot);

  // Titles for the diagonal.
  cell.filter(function(d) { return d.i === d.j; }).append("text")
      .attr("x", padding)
      .attr("y", padding)
      .attr("dy", ".71em")
      .text(function(d) { return d.x; });

  function plot(p) {
    var cell = d3.select(this);

    x.domain(domainByTrait[p.x]);
    y.domain(domainByTrait[p.y]);

    cell.append("rect")
        .attr("class", "frame")
        .attr("x", padding / 2)
        .attr("y", padding / 2)
        .attr("width", size - padding)
        .attr("height", size - padding);

    cell.selectAll("circle")
        .data(data)
      .enter().append("circle")
        .attr("cx", function(d) { return x(d[p.x]); })
        .attr("cy", function(d) { return y(d[p.y]); })
        .attr("r", 3)
        .style("fill", function(d) { return color(d.species); });
  }

  function cross(a, b) {
    var c = [], n = a.length, m = b.length, i, j;
    for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});
    return c;
  }

  d3.select(self.frameElement).style("height", size * n + padding + 20 + "px");
});*/

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Global Food Index Bar Chart</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
				font-size: 12px;
			}

			 .headline{
            font-size: 15px;
            color:#d95f0e;
        }	

        
			
		.axis path,
        .axis line {
          fill:none;
          stroke:gray;
          stroke-width: 0.5px;
          shape-rendering: crispEdges;;
        }
			
			.axis text {
				font-family: Arial, sans-serif;
				font-size: 8px;
			}

			.y.axis path {
  				display: none;
					}

			.legend { list-style: none; }
				.legend li { float: left; margin-right: 0px; }
				.legend span { border: 1px solid #ccc; float: left; width: 9px; height: 9px; margin: 2px; }
				.legend .enoughtoeat { background-color: #7fbc41; }
				.legend .foodquality { background-color: #f1b6da; }
				.legend .healthyeating { background-color: #005824; }
				.legend .notenough { background-color: #8c510a; }
				.legend .foodafford { background-color: #253494; }
				.legend .poorquality { background-color: #dfc27d; }
				.legend .unhealthy { background-color: #80cdc1; }

			ul{
  				position: absolute;
  				right: 190px;
  				top: 60px;
  				width: 800px;
				}
			
			form {
  				position: absolute;
  				right: 650px;
  				top: 40px;
				}

			


		</style>
	</head>
	<body>

		<form>
  			<label><input type="radio" name="mode" value="best" checked> What's the country best at?</label>
  			<label><input type="radio" name="mode" value="worst"> What's the country worst at?</label>
			</form>

			<ul class="legend">
    		<li><span class="enoughtoeat"></span> Enough to Eat</li>
    		<li><span class="foodquality"></span> Quality Food</li>
    		<li><span class="healthyeating"></span> Healthy Eating</li>
    		<li><span class="notenough"></span> Not Enough Food</li>
    		<li><span class="foodafford"></span> Unaffordable Food</li>
    		<li><span class="poorquality"></span> Poor Quality Food</li>
    		<li><span class="unhealthy"></span> Unhealthy Eating</li>
			</ul>


		<script type="text/javascript">		

			d3.select("body")
				.append("p")
				.text("Global Food Index Scores by Country: Where is it best to eat?")
				.attr("class", "headline")

				;


			var w = 700;
			var h = 1750;
			var padding = [ 5, 10, 20, 100];  //Top, right, bottom, left

			

			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.15);



			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			d3.csv("FoodDataFinal.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(a.ScoreReversedHighGood, b.ScoreReversedHighGood);

				
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.ScoreReversedHighGood;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.Country; } ));

			var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

					rects.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.Country);
					})
					.attr("width", function(d) {
						return widthScale(d.ScoreReversedHighGood);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill", "#fec44f")
					.attr("stroke", "#fe9929")
					.append("title")
					.text(function(d) {
						return d.Country + "'s Food Index score is " + d.ScoreReversedHighGood + " and they are best at " + d.DriverBestF;
					});
					

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - 55) + ")")
					.call(xAxis)
					;

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + 100 + ",0)")
					.call(yAxis)
					;

			d3.selectAll("input").on("change", change);

var timeout = setTimeout(function() {
  d3.select("input[value=\"best\"]").property("checked", true).each(change);
}, 8000);

function change() {
  clearTimeout(timeout);
  if (this.value === "best") transitionBest();
  else transitionWorst();
}

function transitionBest() {
  

  rects.transition()
  		.transition()
      .duration(1000)
      .delay(1000)
      .attr("fill", function(d) {
            if(d.DriverBestF == "Enough to Eat") {return "#7fbc41"}
            	if(d.DriverBestF == "Food Quality") {return "#f1b6da"}
              else {return "#005824"}
          ;})
      .attr("stroke", "#bababa")


      
      
      }

function transitionWorst() {
  

  rects.transition()
  		.transition()
      .duration(1000)
      .delay(1000)
      .attr("fill", function(d) {
            if(d.DriverWorstF == "Not Enough to Eat") {return "#8c510a"}
            	if(d.DriverWorstF == "Poor Food Quality") {return "#dfc27d"}
            		if(d.DriverWorstF == "Unhealthy Eating") {return "#80cdc1"}
              else {return "#253494"}
          ;})
      .attr("stroke", "#bababa")

      
      
      
}	

			});




		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #000;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 960;

var N = 1 << 0,
    S = 1 << 1,
    W = 1 << 2,
    E = 1 << 3;

var cellSize = 4,
    cellSpacing = 4,
    cellWidth = Math.floor((width - cellSpacing) / (cellSize + cellSpacing)),
    cellHeight = Math.floor((height - cellSpacing) / (cellSize + cellSpacing)),
    cells = generateMaze(cellWidth, cellHeight), // each cell’s edge bits
    distance = 0,
    visited = new Array(cellWidth * cellHeight),
    frontier = [(cellHeight - 1) * cellWidth];

var canvas = d3.select("body").append("canvas")
    .attr("width", width)
    .attr("height", height);

var context = canvas.node().getContext("2d");

context.translate(
  Math.round((width - cellWidth * cellSize - (cellWidth + 1) * cellSpacing) / 2),
  Math.round((height - cellHeight * cellSize - (cellHeight + 1) * cellSpacing) / 2)
);

context.fillStyle = "#fff";
for (var y = 0, i = 0; y < cellHeight; ++y) {
  for (var x = 0; x < cellWidth; ++x, ++i) {
    fillCell(i);
    if (cells[i] & S) fillSouth(i);
    if (cells[i] & E) fillEast(i);
  }
}

d3.timer(function() {
  if (!(n0 = frontier.length)) return true;

  context.fillStyle = d3.hsl(distance++ % 360, 1, .5) + "";

  if (distance & 1) {
    for (var i = 0; i < n0; ++i) {
      fillCell(frontier[i]);
    }
  } else {
    var frontier1 = [],
        i0,
        i1,
        n0;

    for (var i = 0; i < n0; ++i) {
      i0 = frontier[i];
      if (cells[i0] & E && !visited[i1 = i0 + 1]) visited[i1] = true, fillEast(i0), frontier1.push(i1);
      if (cells[i0] & W && !visited[i1 = i0 - 1]) visited[i1] = true, fillEast(i1), frontier1.push(i1);
      if (cells[i0] & S && !visited[i1 = i0 + cellWidth]) visited[i1] = true, fillSouth(i0), frontier1.push(i1);
      if (cells[i0] & N && !visited[i1 = i0 - cellWidth]) visited[i1] = true, fillSouth(i1), frontier1.push(i1);
    }

    frontier = frontier1;
  }
});

function fillCell(i) {
  var x = i % cellWidth, y = i / cellWidth | 0;
  context.fillRect(x * cellSize + (x + 1) * cellSpacing, y * cellSize + (y + 1) * cellSpacing, cellSize, cellSize);
}

function fillEast(i) {
  var x = i % cellWidth, y = i / cellWidth | 0;
  context.fillRect((x + 1) * (cellSize + cellSpacing), y * cellSize + (y + 1) * cellSpacing, cellSpacing, cellSize);
}

function fillSouth(i) {
  var x = i % cellWidth, y = i / cellWidth | 0;
  context.fillRect(x * cellSize + (x + 1) * cellSpacing, (y + 1) * (cellSize + cellSpacing), cellSize, cellSpacing);
}

function generateMaze(cellWidth, cellHeight) {
  var cells = new Array(cellWidth * cellHeight), // each cell’s edge bits
      frontier = [];

  var start = (cellHeight - 1) * cellWidth;
  cells[start] = 0;
  frontier.push({index: start, direction: N});
  frontier.push({index: start, direction: E});
  shuffle(frontier, 0, 2);
  while (!exploreFrontier());
  return cells;

  function exploreFrontier() {
    if ((edge = frontier.pop()) == null) return true;

    var edge,
        i0 = edge.index,
        d0 = edge.direction,
        i1 = i0 + (d0 === N ? -cellWidth : d0 === S ? cellWidth : d0 === W ? -1 : +1),
        x0 = i0 % cellWidth,
        y0 = i0 / cellWidth | 0,
        x1,
        y1,
        d1,
        open = cells[i1] == null; // opposite not yet part of the maze

    if (d0 === N) x1 = x0, y1 = y0 - 1, d1 = S;
    else if (d0 === S) x1 = x0, y1 = y0 + 1, d1 = N;
    else if (d0 === W) x1 = x0 - 1, y1 = y0, d1 = E;
    else x1 = x0 + 1, y1 = y0, d1 = W;

    if (open) {
      cells[i0] |= d0, cells[i1] |= d1;

      var m = 0;
      if (y1 > 0 && cells[i1 - cellWidth] == null) frontier.push({index: i1, direction: N}), ++m;
      if (y1 < cellHeight - 1 && cells[i1 + cellWidth] == null) frontier.push({index: i1, direction: S}), ++m;
      if (x1 > 0 && cells[i1 - 1] == null) frontier.push({index: i1, direction: W}), ++m;
      if (x1 < cellWidth - 1 && cells[i1 + 1] == null) frontier.push({index: i1, direction: E}), ++m;
      shuffle(frontier, frontier.length - m, frontier.length);
    }
  }
}

function shuffle(array, i0, i1) {
  var m = i1 - i0, t, i, j;
  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
  }
  return array;
}

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Loading CSV Data with D3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>
	<body>

		<p>Not much to see here; try looking in the console!</p>

		<script type="text/javascript">		
<svg width="1000" height="1000">
			<line x1="10" y1="10" x2="100" y2="200"stroke="#999" stroke-width="5" stroke-linecap="round"/>
			<polyline points="580,10 560,390 540,200 520,390 400,390"stroke="#c00" stroke-width="5" stroke-linecap="round"stroke-linejoin="round" fill="none"/>
			<polygon points="350,75 379,161 469,161 397,215,423,301,350,250 277,301 303,215 231,161 321,161"stroke="#ff0" stroke-width="10" fill="#ff6"/>
			<rect x="100" y="10" width="150" height="100" rx="10" ry="20"stroke="#060" stroke-width="8" fill="#0f0"/>
			<circle cx="100" cy="300" r="80"stroke="#909" stroke-width="10" fill="#f6f"/>
			<ellipse cx="450" cy="50" rx="80" ry="30"stroke="#0cc"stroke-width="10" fill="#0ff"/>
			<text x="240" y="390" font-family="sans-serif" font-size="50" fill="#00f">SVG</text>
		</svg>

			//Load in contents of CSV file
			d3.csv("AFOLCopy.csv", function(data) {

				//Now CSV contents have been transformed into
				//an array of JSON objects.

				//Log 'data' to the console, for verification.
				console.log(data);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
<link href="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.css" rel="stylesheet" type="text/css"/>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/2D.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/IntersectionUtilities.js"></script>
<script src="http://rawgithub.com/VisDockHub/NewVisDock/master/master/visdock.utils.js"></script>
    <style type="text/css">

path.arc {
  cursor: move;
  fill: #fff;
}

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node {
  font-size: 10px;
  pointer-events: none;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

    </style>
  </head>
  <body>
    <div id="body">

    </div>
    <script type="text/javascript">

var w = 1280,
    h = 800,
    rx = w / 3,
    ry = h / 2,
    m0,
    rotate = 0;
VisDock.init('#body', {width: 1000, height: 800});
AnnotatedByData.layerTypes = ["circle"];
var viewport = VisDock.getViewport();

var cluster = d3.layout.cluster()
    .size([360, ry - 120])
    .sort(null);

var diagonal = d3.svg.diagonal.radial()
    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });

var svg = d3.select("#body").append("div")
    .style("width", w + "px")
    .style("height", w + "px");

var vis = svg.append("svg:svg")
    .attr("width", w)
    .attr("height", w)
  .append("svg:g")
    .attr("transform", "translate(" + rx + "," + ry + ")");

var vis = viewport.append("svg:g")
	.attr("transform", "translate(" + rx + "," + ry + ")");

vis.append("svg:path")
    .attr("class", "arc")
    .attr("d", d3.svg.arc().innerRadius(ry - 120).outerRadius(ry).startAngle(0).endAngle(2 * Math.PI))
    .on("mousedown", mousedown);

d3.json("flare.json", function(json) {
  VisDock.startChrome();
  var nodes = cluster.nodes(json);

  var link = vis.selectAll("path.link")
      .data(cluster.links(nodes))
    .enter().append("svg:path")
      .attr("class", "link")
      .attr("d", diagonal);

  var node = vis.selectAll("g.node")
      .data(nodes)
    .enter().append("svg:g")
      .attr("class", "node")
      .attr("transform", function(d) { return "rotate(" + (d.x - 90) + ")translate(" + d.y + ")"; })

  node.append("svg:circle")
      .attr("r", 3);

  node.append("svg:text")
      .attr("dx", function(d) { return d.x < 180 ? 8 : -8; })
      .attr("dy", ".31em")
      .attr("text-anchor", function(d) { return d.x < 180 ? "start" : "end"; })
      .attr("transform", function(d) { return d.x < 180 ? null : "rotate(180)"; })
      .text(function(d) { return d.name; });
  VisDock.finishChrome();
});

d3.select(window)
    .on("mousemove", mousemove)
    .on("mouseup", mouseup);

function mouse(e) {
  return [e.pageX - rx, e.pageY - ry];
}

function mousedown() {
  m0 = mouse(d3.event);
  d3.event.preventDefault();
}

function mousemove() {
  if (m0) {
  	VisDock.startChrome();
    var m1 = mouse(d3.event),
        dm = Math.atan2(cross(m0, m1), dot(m0, m1)) * 180 / Math.PI,
        tx = "translate3d(0," + (ry - rx) + "px,0)rotate3d(0,0,0," + dm + "deg)translate3d(0," + (rx - ry) + "px,0)";
    svg
        .style("-moz-transform", tx)
        .style("-ms-transform", tx)
        .style("-webkit-transform", tx);
    update();
    VisDock.finishChrome();
  }
}

function mouseup() {
  if (m0) {
  	m0 = 0;
  }
}

function update(){
    VisDock.startChrome();
    var m1 = mouse(d3.event),
        dm = Math.atan2(cross(m0, m1), dot(m0, m1)) * 180 / Math.PI,
        tx = "rotate3d(0,0,0,0deg)";

    rotate += dm;
    if (rotate > 360) rotate -= 360;
    else if (rotate < 0) rotate += 360;
    m0 = null;

    svg
        .style("-moz-transform", tx)
        .style("-ms-transform", tx)
        .style("-webkit-transform", tx);

    vis
        .attr("transform", "translate(" + rx + "," + ry + ")rotate(" + rotate + ")")
      .selectAll("g.node text")
        .attr("dx", function(d) { return (d.x + rotate) % 360 < 180 ? 8 : -8; })
        .attr("text-anchor", function(d) { return (d.x + rotate) % 360 < 180 ? "start" : "end"; })
        .attr("transform", function(d) { return (d.x + rotate) % 360 < 180 ? null : "rotate(180)"; });
    m0 = mouse(d3.event);
    VisDock.updateLayers();
    AnnotatedByData.update();
    VisDock.finishChrome();	
}

function cross(a, b) {
  return a[0] * b[1] - a[1] * b[0];
}

function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1];
}

VisDock.eventHandler = {
	getHitsPolygon : function(points, inclusive) {
		var shapebound = new createPolygon(points);
		return shapebound.intersectEllipse(viewport.selectAll("circle")[0], inclusive)
	},
	getHitsLine : function(points, inclusive) {
		var shapebound = new createLine(points);
		return shapebound.intersectEllipse(viewport.selectAll("circle")[0], inclusive)
	},
	getHitsEllipse : function(points, inclusive) {
		var shapebound = new createEllipse(points);
		return shapebound.intersectEllipse(viewport.selectAll("circle")[0], inclusive)
	},
	setColor : function(hits) {
		for (var i = 0; i < hits.length; i++) {
			VisDock.utils.addEllipseLayer(hits[i], undefined, num - 1)
		}
	},
	changeColor : function(color, query, index) {
		for (var i = 0; i < query.length; i++) {
			var vis = query[i].attr("style").split("opacity:")[1].split(";")[0]
			query[i][0][0].setAttributeNS(null, "style", "fill: " + color + "; stroke: black; opacity: " + vis)
		}
	},
	changeVisibility : function(vis, query, index) {
		for (var i = 0; i < query.length; i++) {
			var color = query[i].attr("style").split(";")[0]
			query[i][0][0].setAttributeNS(null, "style", color + "; opacity: " + vis)
		}
	},
	removeColor : function(hits, index) {
		for (var i = 0; i < hits.length; i++) {
			hits[i].remove();
		}
	},
}

BirdView.init(viewport, 1000, 800)
d3.select(self.frameElement).style("height", "800px");
d3.select(self.frameElement).style("width", "1000px");
    </script>
  </body>
</html>
<!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/topojson.v1.min.js' type='text/javascript'></script>
    <script src='http://datamaps.github.io/scripts/datamaps.none.min.js' type='text/javascript'></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0/handlebars.min.js' type='text/javascript'></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.1/angular.min.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body ng-app ng-controller='rChartsCtrl'>
    
    
            <div class='container'>
              <input id='slider' type='range' min=2011 max=2013 ng-model='year' width=200>
              <span ng-bind='year'></span>
              <div id='charta7c3563ee1' class='rChart datamaps'></div>          
            </div>
            <script>
              function rChartsCtrl($scope){
                $scope.year = 2011;
                $scope.$watch('year', function(newYear){
                  mapcharta7c3563ee1.updateChoropleth(chartParams.newData[newYear]);
                })
              }
           </script>    
    <script id='popup-template' type='text/x-handlebars-template'>
  <div class="hoverinfo">
    <h3>
     {{ data.STATE_NAME }} : {{ data.STATE_CONGRESSIONAL_DISTRICT }}
    </h3>
      <strong>Total Funding:</strong> {{#data.ALL_FUNDING}}{{ formatPrice this }}{{/data.ALL_FUNDING}}
  <div>  
</script>

<script>
  var chartParams = {
 "dom": "charta7c3563ee1",
"width":    800,
"height":    400,
"scope": "districts",
"fills": {
 "[0,1.3e+05]": "#F1EEF6",
"(1.3e+05,1.21e+06]": "#D7B5D8",
"(1.21e+06,4.99e+07]": "#DF65B0" 
},
"legend": true,
"labels": true,
"bodyattrs": "ng-app ng-controller='rChartsCtrl'",
"newData": {
 "2011": {
 "c2301": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2301",
"STATE_NAME": "Maine",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 3.2276e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1222": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1222",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING": 2.87e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5305": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5305",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 4.1802e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1227": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1227",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c618": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c618",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING": 5.3179e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4806": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4806",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  99925,
"fillKey": "[0,1.3e+05]" 
},
"c1804": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1804",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.839e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c636": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c636",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 36,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4003": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4003",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.068e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3908": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3908",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3903": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3903",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.0071e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c623": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c623",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c904": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c904",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":  95914,
"fillKey": "[0,1.3e+05]" 
},
"c4206": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4206",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4212": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4212",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c604": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c604",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3403": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3403",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4205": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4205",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 3.4648e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3626": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3626",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4201": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4201",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 8.2932e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3702": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3702",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4831": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4831",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 31,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3203": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3203",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4402": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4402",
"STATE_NAME": "Rhode Island",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 4.6848e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5104": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5104",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 7.7566e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5101": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5101",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3302": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3302",
"STATE_NAME": "New Hampshire",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  89500,
"fillKey": "[0,1.3e+05]" 
},
"c4102": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4102",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.1744e+05,
"fillKey": "[0,1.3e+05]" 
},
"c605": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c605",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2604": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2604",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.0759e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2906": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2906",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2614": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2614",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4819": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4819",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING": 1.5383e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3410": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3410",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3501": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3501",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.8759e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5102": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5102",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5303": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5303",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1711": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1711",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":  45516,
"fillKey": "[0,1.3e+05]" 
},
"c3710": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3710",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":  15000,
"fillKey": "[0,1.3e+05]" 
},
"c3705": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3705",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.4009e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3602": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3602",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4209": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4209",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c634": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c634",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 34,
"ALL_FUNDING":  29000,
"fillKey": "[0,1.3e+05]" 
},
"c614": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c614",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3906": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3906",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3201": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3201",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 3.3328e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3707": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3707",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4836": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4836",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 36,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4105": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4105",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4809": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4809",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 4.3246e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4901": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4901",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.1692e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c403": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c403",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.2361e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1311": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1311",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3601": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3601",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3000": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3000",
"STATE_NAME": "Montana",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.1468e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1703": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1703",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5103": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5103",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3905": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3905",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2605": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2605",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c501": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c501",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.1601e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4829": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4829",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 29,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4830": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4830",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 30,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1602": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1602",
"STATE_NAME": "Idaho",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3607": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3607",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2601": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2601",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 9.7569e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1211": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1211",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5307": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5307",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.7374e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1304": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1304",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3709": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3709",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5301": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5301",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 6.4759e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c103": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c103",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.7184e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3614": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3614",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4707": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4707",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5308": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5308",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  96700,
"fillKey": "[0,1.3e+05]" 
},
"c653": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c653",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 53,
"ALL_FUNDING": 4.6e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1902": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1902",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 9.8119e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5110": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5110",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 4.6e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3204": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3204",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4104": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4104",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 1.8914e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4822": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4822",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2613": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2613",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3910": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3910",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 4.5454e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4804": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4804",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1310": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1310",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 3.1674e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c803": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c803",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4903": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4903",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4502": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4502",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5403": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5403",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2706": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2706",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4812": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4812",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1314": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1314",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":  99840,
"fillKey": "[0,1.3e+05]" 
},
"c3706": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3706",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 3.1352e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c409": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c409",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 2.4861e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c649": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c649",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 49,
"ALL_FUNDING": 7.1999e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3621": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3621",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":  57925,
"fillKey": "[0,1.3e+05]" 
},
"c2901": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2901",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  75000,
"fillKey": "[0,1.3e+05]" 
},
"c5108": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5108",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2507": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2507",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.9748e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1226": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1226",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING": 1.22e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4217": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4217",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3411": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3411",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING": 1.2334e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1708": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1708",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3102": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3102",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c101": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c101",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1209": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1209",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1221": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1221",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":   5000,
"fillKey": "[0,1.3e+05]" 
},
"c2406": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2406",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 5.9055e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4708": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4708",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4815": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4815",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING": 2.45e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1204": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1204",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c625": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c625",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1224": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1224",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1312": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1312",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c629": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c629",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 29,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4103": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4103",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.4478e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3902": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3902",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c2205": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2205",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.5179e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3623": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3623",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING": 4.012e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1219": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1219",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3402": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3402",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  97655,
"fillKey": "[0,1.3e+05]" 
},
"c1809": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1809",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2610": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2610",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1903": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1903",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3704": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3704",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.8089e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5109": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5109",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 2.3645e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3617": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3617",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 7.3513e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2402": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2402",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3708": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3708",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3913": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3913",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":  70000,
"fillKey": "[0,1.3e+05]" 
},
"c4835": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4835",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 35,
"ALL_FUNDING": 2.8e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3611": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3611",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c608": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c608",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c617": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c617",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4203": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4203",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5106": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5106",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  25000,
"fillKey": "[0,1.3e+05]" 
},
"c3103": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3103",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3408": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3408",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3609": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3609",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 6.4424e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3912": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3912",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":  31000,
"fillKey": "[0,1.3e+05]" 
},
"c637": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c637",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 37,
"ALL_FUNDING": 4.6e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3915": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3915",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3616": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3616",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c106": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c106",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c609": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c609",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3412": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3412",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 1.031e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3604": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3604",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1712": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1712",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 2.608e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4703": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4703",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1716": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1716",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1308": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1308",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 6.7575e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c502": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c502",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.0453e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2903": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2903",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.0768e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c407": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c407",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 2.89e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1713": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1713",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 2.6934e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1702": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1702",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4002": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4002",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.4253e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c606": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c606",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  30295,
"fillKey": "[0,1.3e+05]" 
},
"c611": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c611",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":  3e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1313": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1313",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2907": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2907",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2801": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2801",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.61e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2502": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2502",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.6463e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c807": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c807",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 4.9981e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2602": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2602",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c801": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c801",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  70000,
"fillKey": "[0,1.3e+05]" 
},
"c2803": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2803",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.8928e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4506": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4506",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 7.0462e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1714": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1714",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3618": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3618",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":  90768,
"fillKey": "[0,1.3e+05]" 
},
"c2802": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2802",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.0213e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1307": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1307",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1208": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1208",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5600": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5600",
"STATE_NAME": "Wyoming",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 6.8175e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4401": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4401",
"STATE_NAME": "Rhode Island",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4504": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4504",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c806": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c806",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c3800": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3800",
"STATE_NAME": "North Dakota",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.3025e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c612": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c612",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":  50000,
"fillKey": "[0,1.3e+05]" 
},
"c4823": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4823",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3606": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3606",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4507": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4507",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 3.1741e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c901": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c901",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  50000,
"fillKey": "[0,1.3e+05]" 
},
"c2401": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2401",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 3.281e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2603": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2603",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  70000,
"fillKey": "[0,1.3e+05]" 
},
"c645": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c645",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 45,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1801": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1801",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1305": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1305",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.2123e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4814": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4814",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4825": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4825",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING": 2.599e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4216": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4216",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":  98833,
"fillKey": "[0,1.3e+05]" 
},
"c631": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c631",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 31,
"ALL_FUNDING": 5.007e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2606": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2606",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2103": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2103",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c635": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c635",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 35,
"ALL_FUNDING": 5.73e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2404": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2404",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1225": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1225",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4004": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4004",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1709": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1709",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1808": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1808",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4202": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4202",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.3062e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2707": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2707",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 2.0759e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2102": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2102",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c650": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c650",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 50,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c805": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c805",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 3.6952e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2506": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2506",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  99416,
"fillKey": "[0,1.3e+05]" 
},
"c401": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c401",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.2065e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1223": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1223",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING": 2.8411e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4701": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4701",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1210": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1210",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4211": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4211",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":  31000,
"fillKey": "[0,1.3e+05]" 
},
"c4215": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4215",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3703": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3703",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2204": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2204",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3909": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3909",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 1.9956e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1807": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1807",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1701": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1701",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 6.3986e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4821": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4821",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING": 2.4991e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4817": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4817",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 4.4703e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4904": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4904",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4816": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4816",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":  8e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3622": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3622",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":  45516,
"fillKey": "[0,1.3e+05]" 
},
"c3625": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3625",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":  25000,
"fillKey": "[0,1.3e+05]" 
},
"c2611": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2611",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING": 4.4163e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3608": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3608",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 1.975e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3301": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3301",
"STATE_NAME": "New Hampshire",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 8.2348e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c903": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c903",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.8898e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4820": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4820",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING": 1.4986e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c627": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c627",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":  3e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3914": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3914",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c1207": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1207",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2403": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2403",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.5998e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2004": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2004",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4101": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4101",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1705": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1705",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1901": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1901",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  70324,
"fillKey": "[0,1.3e+05]" 
},
"c2106": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2106",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 3.2251e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4001": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4001",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4503": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4503",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.4691e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2705": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2705",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 3.1919e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c905": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c905",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c647": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c647",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 47,
"ALL_FUNDING": 1.5e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c602": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c602",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.2047e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4802": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4802",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.716e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5502": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5502",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 3.1544e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c632": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c632",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 32,
"ALL_FUNDING": 2.44e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5302": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5302",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1707": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1707",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 9.5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3901": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3901",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2201": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2201",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  76978,
"fillKey": "[0,1.3e+05]" 
},
"c4704": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4704",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c641": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c641",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 41,
"ALL_FUNDING": 6.5158e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1201": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1201",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4005": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4005",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3409": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3409",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1217": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1217",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":  98809,
"fillKey": "[0,1.3e+05]" 
},
"c3612": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3612",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 5.1744e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3911": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3911",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c504": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c504",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 5.351e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2408": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2408",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 6.4422e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2203": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2203",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1309": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1309",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1806": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1806",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1715": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1715",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2904": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2904",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.4966e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1802": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1802",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4834": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4834",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 34,
"ALL_FUNDING":  8e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4805": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4805",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3624": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3624",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING": 6.8955e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3503": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3503",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 7.196e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c628": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c628",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 28,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1718": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1718",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1303": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1303",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5501": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5501",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4706": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4706",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 1.4001e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1502": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1502",
"STATE_NAME": "Hawaii",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.7868e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4803": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4803",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5105": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5105",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1216": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1216",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 1.3e+05,
"fillKey": "[0,1.3e+05]" 
},
"c902": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c902",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.9365e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4801": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4801",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 4.5481e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3404": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3404",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":  99882,
"fillKey": "[0,1.3e+05]" 
},
"c2708": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2708",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 5.9019e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2501": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2501",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5506": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5506",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c644": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c644",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 44,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3405": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3405",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.3146e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2002": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2002",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.4834e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4702": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4702",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 2.6856e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4705": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4705",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.4206e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4214": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4214",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4902": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4902",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3620": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3620",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING": 8.9199e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1212": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1212",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1306": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1306",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2908": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2908",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5304": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5304",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c408": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c408",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5505": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5505",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3627": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3627",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":  99510,
"fillKey": "[0,1.3e+05]" 
},
"c2508": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2508",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  99964,
"fillKey": "[0,1.3e+05]" 
},
"c4824": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4824",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3916": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3916",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 8.3764e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4827": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4827",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING": 2.4672e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c648": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c648",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 48,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c503": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c503",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.2714e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4600": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4600",
"STATE_NAME": "South Dakota",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.2046e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4213": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4213",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 6.418e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2704": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2704",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c104": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c104",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5309": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5309",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 4.3568e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1203": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1203",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 4.1921e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1218": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1218",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2206": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2206",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 2.1777e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4818": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4818",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING": 2.45e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2509": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2509",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c804": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c804",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":  25000,
"fillKey": "[0,1.3e+05]" 
},
"c2804": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2804",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2608": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2608",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 4.3023e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c652": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c652",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 52,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4501": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4501",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1213": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1213",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c633": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c633",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 33,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3701": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3701",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 7.6565e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3407": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3407",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.0248e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1205": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1205",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c646": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c646",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 46,
"ALL_FUNDING": 9.48e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c402": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c402",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c607": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c607",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4826": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4826",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING": 3.8192e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2702": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2702",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.9681e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4210": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4210",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1904": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1904",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.9872e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4810": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4810",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 1.1618e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3502": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3502",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.4624e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5111": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5111",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING": 6.0826e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3615": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3615",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2504": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2504",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.6e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1206": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1206",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3619": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3619",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2607": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2607",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c102": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c102",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 4.6e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3904": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3904",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1803": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1803",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  99926,
"fillKey": "[0,1.3e+05]" 
},
"c615": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c615",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5508": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5508",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 8.3923e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5107": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5107",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c603": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c603",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 4.6278e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3907": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3907",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4207": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4207",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 4.6e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5402": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5402",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 4.7447e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c621": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c621",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1706": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1706",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c406": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c406",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3713": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3713",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4832": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4832",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 32,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1202": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1202",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.8648e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c643": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c643",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 43,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c622": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c622",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c105": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c105",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.0202e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c651": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c651",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 51,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c404": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c404",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1215": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1215",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":  99457,
"fillKey": "[0,1.3e+05]" 
},
"c4813": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4813",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3603": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3603",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 4.9672e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4709": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4709",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5504": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5504",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.7297e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1710": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1710",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c624": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c624",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING": 9.4678e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c619": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c619",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3101": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3101",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.1029e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2505": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2505",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 5.9416e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2503": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2503",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.9777e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3610": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3610",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 7.1e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4833": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4833",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 33,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3202": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3202",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 4.4985e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2003": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2003",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.2459e+05,
"fillKey": "[0,1.3e+05]" 
},
"c5503": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5503",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.3108e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4828": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4828",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 28,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1214": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1214",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4208": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4208",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1501": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1501",
"STATE_NAME": "Hawaii",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.6528e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2905": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2905",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3605": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3605",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2105": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2105",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":  99961,
"fillKey": "[0,1.3e+05]" 
},
"c620": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c620",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING": 2.6082e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3613": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3613",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1805": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1805",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 5.95e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c640": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c640",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 40,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1220": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1220",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3712": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3712",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 1.2337e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3401": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3401",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c107": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c107",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4808": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4808",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1704": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1704",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.29e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1601": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1601",
"STATE_NAME": "Idaho",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.7211e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4218": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4218",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2405": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2405",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.8654e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1717": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1717",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 4.2648e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c613": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c613",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 2.7128e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5507": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5507",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 3.9061e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3406": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3406",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 1.8885e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3711": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c3711",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING": 4.6e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4807": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4807",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2701": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2701",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2902": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2902",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  95513,
"fillKey": "[0,1.3e+05]" 
},
"c2407": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2407",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.534e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2101": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2101",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  31000,
"fillKey": "[0,1.3e+05]" 
},
"c2612": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2612",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 6.3399e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5000": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5000",
"STATE_NAME": "Vermont",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.1027e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c200": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c200",
"STATE_NAME": "Alaska",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 6.3895e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2703": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2703",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c639": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c639",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 39,
"ALL_FUNDING": 8.3534e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4811": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4811",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c638": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c638",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 38,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5310": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5310",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c601": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c601",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.4997e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4204": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4204",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2104": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2104",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5306": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5306",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5401": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c5401",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.4426e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2609": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2609",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c642": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c642",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 42,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c630": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c630",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 30,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2202": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2202",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.302e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2001": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2001",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 3.5431e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1301": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1301",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1000": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1000",
"STATE_NAME": "Delaware",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.7566e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c610": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c610",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c802": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c802",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.5189e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c405": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c405",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c626": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c626",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING":  24884,
"fillKey": "[0,1.3e+05]" 
},
"c616": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c616",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 2.89e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2302": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c2302",
"STATE_NAME": "Maine",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 8.567e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4505": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c4505",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1302": {
 "AWARD_FISCAL_YEAR": 2011,
"key": "c1302",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.763e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
} 
},
"2012": {
 "c4202": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4202",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 4.1332e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2707": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2707",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 2.0758e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c653": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c653",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 53,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3608": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3608",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3607": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3607",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":  44399,
"fillKey": "[0,1.3e+05]" 
},
"c634": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c634",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 34,
"ALL_FUNDING": 3.7671e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c651": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c651",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 51,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4812": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4812",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4104": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4104",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 1.5368e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c404": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c404",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4212": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4212",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 3.0042e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2705": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2705",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 3.8229e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3906": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3906",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1313": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1313",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2802": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2802",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.2283e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1210": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1210",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":  9e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1222": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1222",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":  97692,
"fillKey": "[0,1.3e+05]" 
},
"c4803": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4803",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3708": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3708",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3621": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3621",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING": 2.3296e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c802": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c802",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.9683e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1218": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1218",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":  22491,
"fillKey": "[0,1.3e+05]" 
},
"c2503": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2503",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.2498e+05,
"fillKey": "[0,1.3e+05]" 
},
"c806": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c806",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 4.4981e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5309": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5309",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 5.4659e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4831": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4831",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 31,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2701": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2701",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2604": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2604",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.0758e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c104": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c104",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3609": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3609",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1801": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1801",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3102": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3102",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 5.3445e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c609": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c609",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3709": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3709",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3604": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3604",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3000": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3000",
"STATE_NAME": "Montana",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.2461e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2102": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2102",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3706": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3706",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3606": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3606",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1304": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1304",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c623": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c623",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING": 2.95e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2202": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2202",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.5158e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4830": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4830",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 30,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c614": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c614",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c603": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c603",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 9.7489e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5106": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5106",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2906": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2906",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2001": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2001",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.7859e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c406": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c406",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3913": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3913",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4817": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4817",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 4.2328e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4704": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4704",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4205": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4205",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 3.8495e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4809": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4809",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 5.4958e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c645": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c645",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 45,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1224": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1224",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1808": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1808",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1203": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1203",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.7582e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3902": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3902",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3406": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3406",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 1.3895e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c636": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c636",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 36,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1717": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1717",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 8.7983e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2403": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2403",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 4.4986e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2506": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2506",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c626": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c626",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5503": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5503",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 6.3705e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3601": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3601",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3410": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3410",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 4.8e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c504": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c504",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 6.9388e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4833": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4833",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 33,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c635": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c635",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 35,
"ALL_FUNDING": 2.0247e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3912": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3912",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":  31000,
"fillKey": "[0,1.3e+05]" 
},
"c3603": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3603",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3705": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3705",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1310": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1310",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 3.0334e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1227": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1227",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2706": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2706",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 3.2011e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2603": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2603",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  93011,
"fillKey": "[0,1.3e+05]" 
},
"c5102": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5102",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4507": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4507",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 3.8259e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3203": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3203",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3404": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3404",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2103": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2103",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2901": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2901",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c408": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c408",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4217": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4217",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1214": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1214",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4828": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4828",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 28,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1602": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1602",
"STATE_NAME": "Idaho",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.2744e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c102": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c102",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4701": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4701",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1225": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1225",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1712": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1712",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 7.6041e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c107": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c107",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2908": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2908",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  27725,
"fillKey": "[0,1.3e+05]" 
},
"c1702": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1702",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4904": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4904",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 6.6993e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1502": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1502",
"STATE_NAME": "Hawaii",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.2956e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2404": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2404",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4804": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4804",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3626": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3626",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING": 1.4298e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4005": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4005",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1221": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1221",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2903": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2903",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 9.6001e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4702": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4702",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 2.2603e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4211": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4211",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":  31000,
"fillKey": "[0,1.3e+05]" 
},
"c4105": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4105",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.3502e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1807": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1807",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c610": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c610",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4504": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4504",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3613": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3613",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3903": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3903",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.7109e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1704": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1704",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c622": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c622",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING": 1.3291e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3627": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3627",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4503": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4503",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.4065e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2612": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2612",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 1.6688e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c641": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c641",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 41,
"ALL_FUNDING": 6.3927e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4705": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4705",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 9.8403e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1802": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1802",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3911": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3911",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c903": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c903",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.0024e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1311": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1311",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1706": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1706",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4824": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4824",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2201": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2201",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c905": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c905",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2101": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2101",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.6714e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5109": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5109",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 2.2474e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c630": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c630",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 30,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1212": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1212",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":  50000,
"fillKey": "[0,1.3e+05]" 
},
"c4600": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4600",
"STATE_NAME": "South Dakota",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.1163e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c804": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c804",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 3.353e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2702": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2702",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2611": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2611",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1312": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1312",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 2.7146e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1903": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1903",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1716": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1716",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 6.7454e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c803": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c803",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.4205e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1714": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1714",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4208": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4208",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4813": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4813",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 1.49e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4902": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4902",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2905": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2905",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4003": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4003",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.9847e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3612": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3612",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 1.4987e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3411": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3411",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING": 4.4015e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1223": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1223",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING": 4.6545e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1219": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1219",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5600": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5600",
"STATE_NAME": "Wyoming",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 7.2208e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4502": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4502",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4101": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4101",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c604": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c604",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5101": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5101",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2606": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2606",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  95583,
"fillKey": "[0,1.3e+05]" 
},
"c3407": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3407",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3901": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3901",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.7317e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2708": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2708",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 3.7276e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4818": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4818",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c502": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c502",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 9.6811e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2407": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2407",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3915": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3915",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c620": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c620",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING": 1.966e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1216": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1216",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3614": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3614",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1601": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1601",
"STATE_NAME": "Idaho",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 9.1741e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4401": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4401",
"STATE_NAME": "Rhode Island",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3703": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3703",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  45007,
"fillKey": "[0,1.3e+05]" 
},
"c3301": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3301",
"STATE_NAME": "New Hampshire",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 5.0675e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4825": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4825",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING": 6.9178e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2907": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2907",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 5.5176e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1000": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1000",
"STATE_NAME": "Delaware",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.2982e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3712": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3712",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 1.2076e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1309": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1309",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1211": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1211",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3908": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3908",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2205": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2205",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.3793e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4808": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4808",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 6.9302e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c648": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c648",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 48,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c638": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c638",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 38,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3624": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3624",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING": 2.128e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2601": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2601",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.1662e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2609": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2609",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4816": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4816",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 1.145e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3103": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3103",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5302": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5302",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c642": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c642",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 42,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2301": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2301",
"STATE_NAME": "Maine",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.2202e+05,
"fillKey": "[0,1.3e+05]" 
},
"c1711": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1711",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4218": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4218",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2004": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2004",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2302": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2302",
"STATE_NAME": "Maine",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.4804e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5403": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5403",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4505": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4505",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1314": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1314",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3800": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3800",
"STATE_NAME": "North Dakota",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.2719e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4814": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4814",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3704": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3704",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 3.5758e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3502": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3502",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.3136e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2704": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2704",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 5.2683e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1205": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1205",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1302": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1302",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 8.2878e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5103": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5103",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4706": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4706",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2105": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2105",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1701": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1701",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.09e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c613": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c613",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 2.8261e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c625": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c625",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1217": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1217",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4826": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4826",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1709": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1709",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c637": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c637",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 37,
"ALL_FUNDING": 1.3346e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c401": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c401",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 6.1405e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c607": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c607",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5505": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5505",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1207": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1207",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3622": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3622",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4815": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4815",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING": 9.7302e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3707": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3707",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4802": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4802",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 2.7194e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4204": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4204",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4801": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4801",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 4.4079e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3619": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3619",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING": 1.3756e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4806": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4806",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5000": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5000",
"STATE_NAME": "Vermont",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.0018e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c644": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c644",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 44,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c105": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c105",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 8.9639e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4707": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4707",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3405": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3405",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4811": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4811",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3618": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3618",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c627": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c627",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2204": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2204",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2902": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2902",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.4885e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1209": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1209",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4820": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4820",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING":  5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c621": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c621",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5506": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5506",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3625": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3625",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4215": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4215",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1308": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1308",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3916": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3916",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 8.1184e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2508": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2508",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 4.5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5401": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5401",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.2349e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4805": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4805",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4708": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4708",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  99832,
"fillKey": "[0,1.3e+05]" 
},
"c3101": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3101",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.9163e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3905": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3905",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 6.8542e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1206": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1206",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4810": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4810",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 1.1928e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c901": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c901",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5507": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5507",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 3.5258e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4703": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4703",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1708": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1708",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c103": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c103",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.5025e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4214": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4214",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING": 9.646e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5310": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5310",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1204": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1204",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4829": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4829",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 29,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c601": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c601",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 3.022e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2104": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2104",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5304": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5304",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 5.625e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5105": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5105",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2904": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2904",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.1115e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2613": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2613",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5104": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5104",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 7.7833e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2801": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2801",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c611": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c611",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4004": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4004",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":  83526,
"fillKey": "[0,1.3e+05]" 
},
"c1226": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1226",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING": 1.15e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2507": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2507",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 8.9759e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3611": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3611",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c624": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c624",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING": 5.582e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2804": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2804",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c106": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c106",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4103": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4103",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.9771e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c501": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c501",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 7.2688e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2504": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2504",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.8145e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c605": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c605",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 3.9478e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3412": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3412",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 1.0056e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2406": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2406",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3202": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3202",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 3.7943e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4834": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4834",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 34,
"ALL_FUNDING": 8.5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1707": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1707",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.0284e+05,
"fillKey": "[0,1.3e+05]" 
},
"c5108": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5108",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5501": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5501",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4822": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4822",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4402": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4402",
"STATE_NAME": "Rhode Island",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 3.4839e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4823": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4823",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c649": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c649",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 49,
"ALL_FUNDING": 1.44e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c403": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c403",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.0966e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c606": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c606",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2502": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2502",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 9.0981e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3602": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3602",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1208": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1208",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4501": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4501",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1904": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1904",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 3.6084e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3623": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3623",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING": 3.975e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c503": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c503",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 8.138e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4206": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4206",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2602": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2602",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2610": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2610",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1804": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1804",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.7954e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5402": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5402",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 5.4181e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2501": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2501",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4819": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4819",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING": 1.677e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1301": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1301",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1710": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1710",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 7.7e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3403": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3403",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4001": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4001",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  25000,
"fillKey": "[0,1.3e+05]" 
},
"c4216": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4216",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c902": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c902",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.2776e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4903": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4903",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3409": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3409",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4203": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4203",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  35500,
"fillKey": "[0,1.3e+05]" 
},
"c200": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c200",
"STATE_NAME": "Alaska",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 5.8308e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3904": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3904",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2408": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2408",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 3.0813e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5301": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5301",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.0266e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2203": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2203",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3501": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3501",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.9524e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3503": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3503",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.1504e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2607": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2607",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4210": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4210",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5306": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5306",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3408": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3408",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c650": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c650",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 50,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3615": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3615",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c631": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c631",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 31,
"ALL_FUNDING": 5.5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c632": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c632",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 32,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3909": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3909",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 4.4985e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4835": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4835",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 35,
"ALL_FUNDING": 8.62e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3910": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3910",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c5307": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5307",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 4.7184e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4207": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4207",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2803": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2803",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.5832e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c615": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c615",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c1215": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1215",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING": 2.41e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c807": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c807",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.9865e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2505": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2505",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 5.7999e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3610": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3610",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 1.3147e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1213": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1213",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2608": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2608",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 3.4048e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1805": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1805",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.88e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1501": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1501",
"STATE_NAME": "Hawaii",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.2423e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1803": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1803",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1202": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1202",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.6977e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2605": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2605",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5504": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5504",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 5.6249e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4209": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4209",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c101": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c101",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c405": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c405",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c629": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c629",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 29,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1201": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1201",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c616": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c616",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1718": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1718",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2509": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2509",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 2.083e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c628": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c628",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 28,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5508": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5508",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 9.3327e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3401": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3401",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.9242e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4807": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4807",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2206": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2206",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 1.3943e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3710": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3710",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 4.9854e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3713": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3713",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5305": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5305",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.384e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5502": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5502",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 3.7626e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2402": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2402",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3204": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3204",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c805": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c805",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c647": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c647",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 47,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4201": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4201",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 5.2066e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c612": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c612",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 2.8821e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1809": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1809",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 1.6237e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2002": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2002",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.8758e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1303": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1303",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c619": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c619",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3711": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3711",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4821": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4821",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING": 2.95e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c639": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c639",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 39,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5111": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5111",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING": 1.5447e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4832": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4832",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 32,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c652": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c652",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 52,
"ALL_FUNDING":  99980,
"fillKey": "[0,1.3e+05]" 
},
"c3914": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3914",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3201": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3201",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c801": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c801",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2003": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2003",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c3617": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3617",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c640": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c640",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 40,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4213": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4213",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 8.3658e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1902": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1902",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 2.7905e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1307": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1307",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4102": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4102",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c617": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c617",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 2.4484e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1306": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1306",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c402": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c402",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c407": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c407",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2703": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2703",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4836": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4836",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 36,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5303": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5303",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2614": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2614",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3701": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3701",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.2294e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2405": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2405",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.0845e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3620": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3620",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING": 3.9525e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1705": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1705",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5110": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5110",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1703": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1703",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4827": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4827",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING": 2.9836e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5107": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5107",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c633": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c633",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 33,
"ALL_FUNDING":  99920,
"fillKey": "[0,1.3e+05]" 
},
"c4506": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4506",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 5.7401e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3702": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3702",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  97215,
"fillKey": "[0,1.3e+05]" 
},
"c2106": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2106",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 3.7395e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4709": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4709",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5308": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c5308",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  84329,
"fillKey": "[0,1.3e+05]" 
},
"c1220": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1220",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3402": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3402",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4002": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4002",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1305": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1305",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c618": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c618",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING": 1.7457e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2401": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c2401",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 4.1299e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3616": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3616",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 1.9e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3605": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3605",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1901": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1901",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3907": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3907",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4901": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c4901",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.1718e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1713": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1713",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 2.6376e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c643": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c643",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 43,
"ALL_FUNDING": 4.4998e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1715": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1715",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c904": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c904",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c602": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c602",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.2326e+05,
"fillKey": "[0,1.3e+05]" 
},
"c608": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c608",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c646": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c646",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 46,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3302": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c3302",
"STATE_NAME": "New Hampshire",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c409": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c409",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 1.2226e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1806": {
 "AWARD_FISCAL_YEAR": 2012,
"key": "c1806",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
} 
},
"2013": {
 "c3409": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3409",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3403": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3403",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3902": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3902",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2705": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2705",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.7274e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3626": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3626",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING": 1.0264e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c626": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c626",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4834": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4834",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 34,
"ALL_FUNDING": 1.025e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4804": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4804",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4704": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4704",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4005": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4005",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2105": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2105",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1305": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1305",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":  79000,
"fillKey": "[0,1.3e+05]" 
},
"c2804": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2804",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.3376e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3707": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3707",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4814": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4814",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3911": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3911",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3703": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3703",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3701": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3701",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 3.77e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3611": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3611",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4208": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4208",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4829": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4829",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 29,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1807": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1807",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.4436e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1306": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1306",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c615": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c615",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING": 5.4995e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4832": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4832",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 32,
"ALL_FUNDING":  88168,
"fillKey": "[0,1.3e+05]" 
},
"c2614": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2614",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3408": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3408",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4836": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4836",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 36,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4904": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4904",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.4996e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4003": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4003",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.0684e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4217": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4217",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4706": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4706",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4209": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4209",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1207": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1207",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.2106e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1311": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1311",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5102": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5102",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c643": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c643",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 43,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1206": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1206",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4824": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4824",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c807": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c807",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 6.5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c619": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c619",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4801": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4801",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 4.1673e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5305": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5305",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.4316e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2401": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2401",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.5517e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1717": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1717",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 2.4246e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c628": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c628",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 28,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2206": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2206",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 1.5903e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4102": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4102",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2702": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2702",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 4.49e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1304": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1304",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3705": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3705",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2407": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2407",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5303": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5303",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  85371,
"fillKey": "[0,1.3e+05]" 
},
"c1701": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1701",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.3e+05,
"fillKey": "[0,1.3e+05]" 
},
"c1214": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1214",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4203": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4203",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c902": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c902",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 5.291e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1211": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1211",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4204": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4204",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1203": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1203",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.5499e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c640": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c640",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 40,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2503": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2503",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  99999,
"fillKey": "[0,1.3e+05]" 
},
"c1224": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1224",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2501": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2501",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c402": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c402",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2509": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2509",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5310": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5310",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":  10000,
"fillKey": "[0,1.3e+05]" 
},
"c5107": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5107",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5503": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5503",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.1272e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4810": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4810",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 1.0125e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1902": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1902",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.5641e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3502": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3502",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 5.8727e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c107": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c107",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1220": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1220",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c904": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c904",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.48e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1201": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1201",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1225": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1225",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c651": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c651",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 51,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1226": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1226",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING": 1.071e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3610": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3610",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 7.186e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4822": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4822",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3102": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3102",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c614": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c614",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5309": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5309",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c648": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c648",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 48,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2507": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2507",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.4208e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5308": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5308",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 1.9995e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c802": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c802",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.4549e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4503": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4503",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.2196e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1711": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1711",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3411": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3411",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4812": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4812",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3406": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3406",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 1.053e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3615": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3615",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3708": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3708",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2601": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2601",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 6.5707e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3410": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3410",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 5.0011e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1213": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1213",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4002": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4002",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3800": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3800",
"STATE_NAME": "North Dakota",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.3331e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1903": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1903",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c650": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c650",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 50,
"ALL_FUNDING":  96285,
"fillKey": "[0,1.3e+05]" 
},
"c2607": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2607",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2406": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2406",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 4.956e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3204": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3204",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c607": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c607",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5403": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5403",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c634": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c634",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 34,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1808": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1808",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5111": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5111",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c102": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c102",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4206": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4206",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4210": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4210",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c606": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c606",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  48212,
"fillKey": "[0,1.3e+05]" 
},
"c3712": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3712",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 1.0212e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1601": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1601",
"STATE_NAME": "Idaho",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.3929e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3301": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3301",
"STATE_NAME": "New Hampshire",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 4.73e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4705": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4705",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 9.5433e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1716": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1716",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":  3e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c901": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c901",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1205": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1205",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2404": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2404",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":  30392,
"fillKey": "[0,1.3e+05]" 
},
"c408": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c408",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3101": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3101",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.0985e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1705": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1705",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1806": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1806",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3607": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3607",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 3.9999e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4215": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4215",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c601": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c601",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.9364e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4828": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4828",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 28,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1202": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1202",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 5.5562e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c622": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c622",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING": 4.5635e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3623": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3623",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING": 3.0207e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4821": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4821",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1301": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1301",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c404": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c404",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5508": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5508",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 2.915e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5101": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5101",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3618": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3618",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4815": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4815",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING": 5.4249e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3000": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3000",
"STATE_NAME": "Montana",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 9.2069e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c104": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c104",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1313": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1313",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3501": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3501",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.675e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4507": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4507",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2904": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2904",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.0742e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4701": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4701",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.9996e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2706": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2706",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3407": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3407",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c502": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c502",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 8.3834e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3709": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3709",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c638": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c638",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 38,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3624": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3624",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING": 6.8026e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c401": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c401",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 3.6435e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1708": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1708",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2605": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2605",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4216": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4216",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c805": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c805",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2801": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2801",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4833": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4833",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 33,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3402": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3402",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4207": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4207",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1715": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1715",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3619": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3619",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":  25000,
"fillKey": "[0,1.3e+05]" 
},
"c4816": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4816",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 9.65e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2505": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2505",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1309": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1309",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c200": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c200",
"STATE_NAME": "Alaska",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 5.5772e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5302": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5302",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2502": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2502",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 8.0261e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3604": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3604",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":  58883,
"fillKey": "[0,1.3e+05]" 
},
"c5504": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5504",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":  3e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1804": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1804",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.881e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1208": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1208",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3202": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3202",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 4.564e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3711": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3711",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c610": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c610",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4707": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4707",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1809": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1809",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 4.1453e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1215": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1215",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING": 7.3435e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c633": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c633",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 33,
"ALL_FUNDING": 4.49e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c623": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c623",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3614": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3614",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4808": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4808",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 2.9109e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1302": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1302",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.4721e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c501": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c501",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  89008,
"fillKey": "[0,1.3e+05]" 
},
"c3609": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3609",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4401": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4401",
"STATE_NAME": "Rhode Island",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1209": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1209",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3901": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3901",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2104": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2104",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c406": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c406",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1704": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1704",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1801": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1801",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2504": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2504",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 1.9999e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3914": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3914",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":  80250,
"fillKey": "[0,1.3e+05]" 
},
"c4830": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4830",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 30,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2906": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2906",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4903": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4903",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.9676e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5502": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5502",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 2.5129e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c609": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c609",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c103": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c103",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.3439e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3103": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3103",
"STATE_NAME": "Nebraska",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1714": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1714",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4823": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4823",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4817": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4817",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 3.2069e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4901": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4901",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.0742e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c645": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c645",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 45,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1223": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1223",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 23,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c101": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c101",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3412": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3412",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":  30000,
"fillKey": "[0,1.3e+05]" 
},
"c3608": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3608",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5505": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5505",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c804": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c804",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.9596e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1314": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1314",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2603": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2603",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c630": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c630",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 30,
"ALL_FUNDING": 2.45e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3908": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3908",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c105": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c105",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 7.5513e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1502": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1502",
"STATE_NAME": "Hawaii",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.9113e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5306": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5306",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4709": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4709",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2301": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2301",
"STATE_NAME": "Maine",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 4.74e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c647": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c647",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 47,
"ALL_FUNDING": 1.5e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4827": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4827",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2902": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2902",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c611": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c611",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5600": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5600",
"STATE_NAME": "Wyoming",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 5.4505e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2402": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2402",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2903": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2903",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 9.0354e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2907": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2907",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 1.0208e+06,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2701": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2701",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2302": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2302",
"STATE_NAME": "Maine",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 7.6716e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4818": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4818",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING": 2.4162e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2613": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2613",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5106": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5106",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2506": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2506",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2901": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2901",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.2796e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3704": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3704",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 3.373e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2001": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2001",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.1857e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5000": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5000",
"STATE_NAME": "Vermont",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 8.8587e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3605": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3605",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1602": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1602",
"STATE_NAME": "Idaho",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.5943e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c603": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c603",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.6409e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c620": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c620",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING": 1.2974e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4825": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4825",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING": 2.9959e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4205": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4205",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 3.0869e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c407": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c407",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2602": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2602",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1204": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1204",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3906": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3906",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  99982,
"fillKey": "[0,1.3e+05]" 
},
"c1707": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1707",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1217": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1217",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4214": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4214",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 14,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4819": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4819",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING": 1.4682e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1308": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1308",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c631": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c631",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 31,
"ALL_FUNDING": 8.2e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4806": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4806",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1000": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1000",
"STATE_NAME": "Delaware",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.3353e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4505": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4505",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4201": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4201",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":  3e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4504": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4504",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3602": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3602",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2103": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2103",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2408": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2408",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 2.02e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1702": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1702",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4820": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4820",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING":  99977,
"fillKey": "[0,1.3e+05]" 
},
"c2803": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2803",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.6449e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2905": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2905",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4807": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4807",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4105": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4105",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5109": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5109",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING": 1.9556e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4708": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4708",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c617": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c617",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING": 5.4948e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c625": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c625",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3620": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3620",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 20,
"ALL_FUNDING": 1.2106e+05,
"fillKey": "[0,1.3e+05]" 
},
"c2707": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2707",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 2.765e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2205": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2205",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.1993e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3622": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3622",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3603": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3603",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3616": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3616",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4835": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4835",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 35,
"ALL_FUNDING": 9.6347e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4902": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4902",
"STATE_NAME": "Utah",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5506": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5506",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2802": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2802",
"STATE_NAME": "Mississippi",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 6.0534e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2004": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2004",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3201": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3201",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c504": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c504",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.8043e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c905": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c905",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4101": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4101",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.8637e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c403": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c403",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 7.5762e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c405": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c405",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":  95350,
"fillKey": "[0,1.3e+05]" 
},
"c2612": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2612",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 2.1733e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2405": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2405",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.1342e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2611": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2611",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3203": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3203",
"STATE_NAME": "Nevada",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c624": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c624",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 24,
"ALL_FUNDING": 6.8307e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5104": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5104",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 7.2856e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2608": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2608",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 2.9324e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4826": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4826",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 26,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4805": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4805",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1218": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1218",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4218": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4218",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3625": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3625",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 25,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c642": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c642",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 42,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3706": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3706",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3904": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3904",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3405": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3405",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.4999e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c646": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c646",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 46,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1312": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1312",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 9.72e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4402": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4402",
"STATE_NAME": "Rhode Island",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 3.3055e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3913": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3913",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 2.9682e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5507": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5507",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 8.045e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2908": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2908",
"STATE_NAME": "Missouri",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c649": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c649",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 49,
"ALL_FUNDING": 5.8584e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c604": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c604",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c653": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c653",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 53,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c2604": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2604",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 1.915e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c635": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c635",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 35,
"ALL_FUNDING": 5.1768e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3903": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3903",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.8424e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3617": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3617",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 17,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3627": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3627",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4501": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4501",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2106": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2106",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 2.8373e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c637": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c637",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 37,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3601": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3601",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2203": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2203",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 2.6316e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2003": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2003",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3401": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3401",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5301": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5301",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 7.6597e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c608": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c608",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":  23760,
"fillKey": "[0,1.3e+05]" 
},
"c1710": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1710",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3613": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3613",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2606": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2606",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":  99982,
"fillKey": "[0,1.3e+05]" 
},
"c4831": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4831",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 31,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4001": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4001",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5304": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5304",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c641": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c641",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 41,
"ALL_FUNDING": 2.2449e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2204": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2204",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.9712e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c639": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c639",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 39,
"ALL_FUNDING": 2.95e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3503": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3503",
"STATE_NAME": "New Mexico",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 9.7101e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4103": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4103",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 4.1e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2708": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2708",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING": 3.455e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1212": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1212",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c616": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c616",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4600": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4600",
"STATE_NAME": "South Dakota",
"STATE_CONGRESSIONAL_DISTRICT": 0,
"ALL_FUNDING": 1.1706e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1802": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1802",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":  5e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1210": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1210",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4212": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4212",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 4.4999e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c632": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c632",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 32,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4211": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4211",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING":  30000,
"fillKey": "[0,1.3e+05]" 
},
"c1501": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1501",
"STATE_NAME": "Hawaii",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 1.5642e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5103": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5103",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1901": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1901",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4802": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4802",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4104": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4104",
"STATE_NAME": "Oregon",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 2.2975e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c618": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c618",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING": 8.29e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4213": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4213",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 9.9628e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c5108": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5108",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3916": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3916",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING": 7.4674e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c106": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c106",
"STATE_NAME": "Alabama",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3915": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3915",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 15,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4811": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4811",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 11,
"ALL_FUNDING": 2.7e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1222": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1222",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 22,
"ALL_FUNDING": 4.48e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1713": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1713",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 2.5317e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3713": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3713",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1310": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1310",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING": 2.4753e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c503": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c503",
"STATE_NAME": "Arkansas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 6.3498e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c803": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c803",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.4369e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1219": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1219",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 19,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2002": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2002",
"STATE_NAME": "Kansas",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.73e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c629": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c629",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 29,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1706": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1706",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2101": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2101",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.5582e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2610": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2610",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5110": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5110",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":  99357,
"fillKey": "[0,1.3e+05]" 
},
"c2102": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2102",
"STATE_NAME": "Kentucky",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3621": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3621",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING": 7.6087e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c652": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c652",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 52,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1221": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1221",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1718": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1718",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 18,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3909": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3909",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2202": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2202",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 5.7936e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c621": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c621",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 21,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1712": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1712",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 2.4202e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c801": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c801",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 2.9968e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4506": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4506",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING": 5.2017e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1904": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1904",
"STATE_NAME": "Iowa",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 3.9378e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3710": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3710",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3302": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3302",
"STATE_NAME": "New Hampshire",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2508": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2508",
"STATE_NAME": "Massachusetts",
"STATE_CONGRESSIONAL_DISTRICT": 8,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c409": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c409",
"STATE_NAME": "Arizona",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4004": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4004",
"STATE_NAME": "Oklahoma",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING": 4.9403e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c602": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c602",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 2.0918e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c2703": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2703",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3912": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3912",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":  30000,
"fillKey": "[0,1.3e+05]" 
},
"c1703": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1703",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5501": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5501",
"STATE_NAME": "Wisconsin",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3910": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3910",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 10,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c636": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c636",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 36,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1805": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1805",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 2.58e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c4702": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4702",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 2.3722e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1307": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1307",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c612": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c612",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING":  1e+05,
"fillKey": "[0,1.3e+05]" 
},
"c2403": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2403",
"STATE_NAME": "Maryland",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":  99991,
"fillKey": "[0,1.3e+05]" 
},
"c3702": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3702",
"STATE_NAME": "North Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5307": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5307",
"STATE_NAME": "Washington",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING": 9.2e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c5401": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5401",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 9.6642e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c3905": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3905",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING": 1.1613e+05,
"fillKey": "[0,1.3e+05]" 
},
"c4809": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4809",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":  9e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3907": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3907",
"STATE_NAME": "Ohio",
"STATE_CONGRESSIONAL_DISTRICT": 7,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4803": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4803",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c627": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c627",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4502": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4502",
"STATE_NAME": "South Carolina",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5105": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5105",
"STATE_NAME": "Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c5402": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c5402",
"STATE_NAME": "West Virginia",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 5.5625e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c903": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c903",
"STATE_NAME": "Connecticut",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING": 1.2507e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c4703": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4703",
"STATE_NAME": "Tennessee",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c613": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c613",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING": 2.1071e+07,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c1303": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1303",
"STATE_NAME": "Georgia",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c605": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c605",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 5,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2609": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2609",
"STATE_NAME": "Michigan",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c2201": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2201",
"STATE_NAME": "Louisiana",
"STATE_CONGRESSIONAL_DISTRICT": 1,
"ALL_FUNDING": 4.041e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c1709": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1709",
"STATE_NAME": "Illinois",
"STATE_CONGRESSIONAL_DISTRICT": 9,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3404": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3404",
"STATE_NAME": "New Jersey",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c3612": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3612",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 12,
"ALL_FUNDING": 2.0573e+05,
"fillKey": "(1.3e+05,1.21e+06]" 
},
"c3606": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c3606",
"STATE_NAME": "New York",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1216": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1216",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 16,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1803": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1803",
"STATE_NAME": "Indiana",
"STATE_CONGRESSIONAL_DISTRICT": 3,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c1227": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c1227",
"STATE_NAME": "Florida",
"STATE_CONGRESSIONAL_DISTRICT": 27,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4202": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4202",
"STATE_NAME": "Pennsylvania",
"STATE_CONGRESSIONAL_DISTRICT": 2,
"ALL_FUNDING": 1.4387e+06,
"fillKey": "(1.21e+06,4.99e+07]" 
},
"c2704": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c2704",
"STATE_NAME": "Minnesota",
"STATE_CONGRESSIONAL_DISTRICT": 4,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c644": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c644",
"STATE_NAME": "California",
"STATE_CONGRESSIONAL_DISTRICT": 44,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c4813": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c4813",
"STATE_NAME": "Texas",
"STATE_CONGRESSIONAL_DISTRICT": 13,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
},
"c806": {
 "AWARD_FISCAL_YEAR": 2013,
"key": "c806",
"STATE_NAME": "Colorado",
"STATE_CONGRESSIONAL_DISTRICT": 6,
"ALL_FUNDING":      0,
"fillKey": "[0,1.3e+05]" 
} 
} 
},
"geographyConfig": {
 "dataUrl": "us-congress-113.stringid.json",
"highlightFillColor": "orange",
"highlightBorderColor": "white",
"highlightBorderWidth":      1 
},
"id": "charta7c3563ee1" 
}
  chartParams.element = document.getElementById('charta7c3563ee1')
  
  var tmplFn =  Handlebars.compile(
    document.getElementById("popup-template").innerHTML.replace(/\"#!(.*?)!#\"/g, "\\$1")
    //document.getElementById("popup-template").innerHTML
  );
  var popupFn = function(geography, data) {
    return tmplFn({geography: geography, data: data});
  }
  if (chartParams.geographyConfig){
    chartParams.geographyConfig.popupTemplate = popupFn
  } else {
    chartParams.geographyConfig = {"popupTemplate": popupFn}
  }
  
  chartParams.setProjection = function( element, options ) {
    var projection, path;
 
      projection = d3.geo.albersUsa()
        .scale(element.offsetWidth)
        .translate([element.offsetWidth / 2, element.offsetHeight / 2]);
 
    path = d3.geo.path()
      .projection( projection );
 
    return {path: path, projection: projection};
  }  
  
  chartParams.data = chartParams.newData[d3.keys(chartParams.newData)[0]];  
  
  var mapcharta7c3563ee1 = new Datamap(chartParams);
  
  
    
  // draw a bubble map if specified
  if (chartParams.bubbles) {
    var bubbles = chartParams.bubbles
    mapcharta7c3563ee1.bubbles(bubbles)
  }
  
  if (chartParams.labels){
    mapcharta7c3563ee1.labels()
  }
  
  if (chartParams.legend){
    mapcharta7c3563ee1.legend()
  }
  
</script>

<style>
.datamaps {
  position: relative;
}
</style>
    
    
    <script>
      	Handlebars.registerHelper("formatPrice", function(d) {		
    			return d3.format("$,.0f")(d);
    		});
    </script>
        
  </body>
</html>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Tootals</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
    </head>
    <body>
        <div id="logo">Tootals</div>
        <input type="search" id="search_input"/>
        <svg width="810" height="300">
        </svg>
    </body>
    <script src="index.js"></script>
</html><h1>Drag the black border ↔ pure Css</h1>
<div class='alfa' title='Primavera'>
<div class='bravo' title='Otoño'>
<textarea readonly cols='0' rows='0' class='charly'></textarea>
</div>
</div>
<p>Credits:Original idea: <a href='http://codepen.io/solipsistacp/pen/Gpmaq/'>solipsistaCP</a></p>
<!DOCTYPE html>
<html>
  <head>
    <title>ESD data viz sandbox</title>
    <script src="rsvp.js"></script>
    <script src="Chart.min.js"></script>
  </head>
  <body>

  <canvas id="faceoff" width="400" height="400"></canvas>

  <script>

var draw_charts = function(data) {
  var ctx = document.getElementById('faceoff').getContext('2d');
  var scores = build_scores(data);
  var options = {};

  var faceoff_chart = new Chart(ctx).Bar(scores, options);
};

String.prototype.toInt = function() {
  return parseInt(this.replace(',', ''));
};

var build_scores = function(data) {
  var ctx_data = {
    labels: ['2009', '2010'],
    datasets: [
      // cass tech
      {
        fillColor : "red",
        data : [
          data.meap_2009_casstech[0].meap_2009_grade_11_math_avg_ss.toInt(),
          data.meap_2010_casstech[0].meap_2010_grade_11_math_avg_ss.toInt()
        ]
      },
      // renaissance
      {
        fillColor : "blue",
        data : [
          data.meap_2009_renaissance[0].meap_2009_grade_11_math_avg_ss.toInt(),
          data.meap_2010_renaissance[0].meap_2010_grade_11_math_avg_ss.toInt()
        ]
      }
    ]
  };

  return ctx_data;
};

// Get JSONP

var create_cb_promise = function(cb_name) {
  var promise = new RSVP.Promise(function(resolve, reject) {
    window[cb_name] = function(data) {
      resolve(data);
    };
  });
  return promise;
};

var promises = {
  meap_2009_casstech: create_cb_promise('meap_2009_casstech'),
  meap_2009_renaissance: create_cb_promise('meap_2009_renaissance'),
  meap_2010_casstech: create_cb_promise('meap_2010_casstech'),
  meap_2010_renaissance: create_cb_promise('meap_2010_renaissance')
};

RSVP.hash(promises).then(draw_charts);

  </script>
  <script src="https://portal.excellentschoolsdetroit.org/api/1.0/views/meap_2009.jsonp?filters[bcode]=554&callback=meap_2009_casstech"></script>
  <script src="https://portal.excellentschoolsdetroit.org/api/1.0/views/meap_2009.jsonp?filters[bcode]=6971&callback=meap_2009_renaissance"></script>
  <script src="https://portal.excellentschoolsdetroit.org/api/1.0/views/meap_2010.jsonp?filters[bcode]=554&callback=meap_2010_casstech"></script>
  <script src="https://portal.excellentschoolsdetroit.org/api/1.0/views/meap_2010.jsonp?filters[bcode]=6971&callback=meap_2010_renaissance"></script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.dot {
  stroke: #000;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>


d3.tsv("data.tsv", function(error, data) {
  var margin = {top: 20, right: 20, bottom: 30, left: 40},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
  
  var x = d3.scale.linear()
      .range([0, width]);

  var y = d3.scale.linear()
      .range([height, 0]);

  var color = d3.scale.category10();

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left");

  x.domain(d3.extent(data, function(d) { return d.sepalWidth; })).nice();
  y.domain(d3.extent(data, function(d) { return d.sepalLength; })).nice();

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .append("text")
      .attr("class", "label")
      .attr("x", width)
      .attr("y", -6)
      .style("text-anchor", "end")
      .text("Sepal Width (cm)");

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("class", "label")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Sepal Length (cm)")

  svg.selectAll(".dot")
      .data(data)
    .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 3.5)
      .attr("cx", function(d) { return x(d.sepalWidth); })
      .attr("cy", function(d) { return y(d.sepalLength); })
      .style("fill", function(d) { return color(d.species); });

  var legend = svg.selectAll(".legend")
      .data(color.domain())
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  legend.append("rect")
      .attr("x", width - 18)
      .attr("width", 18)
      .attr("height", 18)
      .style("fill", color);

  legend.append("text")
      .attr("x", width - 24)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("text-anchor", "end")
      .text(function(d) { return d; });
});

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  font: 13px "helvetica neue";
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 250, right: 20, bottom: 250, left: 20},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var superscript = "⁰¹²³⁴⁵⁶⁷⁸⁹",
    formatPower = function(d) { return (d + "").split("").map(function(c) { return superscript[c]; }).join(""); };

var x = d3.scale.log()
    .domain([1e0, 1e9])
    .range([0, width]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(10, function(d) { return 10 + formatPower(Math.round(Math.log(d) / Math.LN10)); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

</script>
<html>
  <head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <script src="http://d3js.org/topojson.v1.min.js" charset="utf-8"></script>
    <style>
      body, html{
        margin: 0;
        background-color: #333;
      }
      my-map, loading-overlay{
        position: absolute;
        width: 100%;
        height: 100%;
        display: block;
        overflow: hidden;
      }
      loading-overlay{
        background-color: black;
      }
      loading-overlay text{
        fill: white;
        text-anchor: middle;
        font-size: 12px;
        font-family: helvetica;
      }
      loading-overlay rect{
        fill: white;
      }
      my-map path{
        fill: black;
        stroke: black;
      }
    </style>
  </head>
  <body ng-app="app" ng-controller="MainCtrl">
    <my-map loading="mapIsLoading"></my-map>
    <loading-overlay ng-show="mapIsLoading"></loading-overlay>
  </body>
  <script>
var app = angular.module('app', [])
app.controller('MainCtrl', function($scope, $window){
  angular.element($window).on('resize', function(){ $scope.$apply(); });
});
app.directive('loadingOverlay', function(){
  function link(scope, el, attr){
    el = el[0];
    var w, h;
    var len = 24;
    var dur = 1000;
    var offset = 45;
    var bar_height = 5;
    var svg = d3.select(el).append('svg');
    var root = svg.append('g');
    var g = root.append('g');

    root.append('text').text('loading...').attr('y', 3);

    var slices = g.selectAll('g.slice').data(d3.range(len))
      .enter().append('g').attr('class', 'slice')
        .attr('transform', function(d, i){
          return 'rotate(' + (i / (len) * 360) + ')';
        });
    slices.append('rect')
      .attr({width: 14, height: bar_height, y: - bar_height / 2, x: offset});

    function loop(sel){
      var dur = 4000;
      sel.attr('transform', 'rotate(0)')
        .transition().duration(dur).ease('linear')
        .attr('transform', 'rotate(180)')
        .transition().duration(dur).ease('linear')
        .attr('transform', 'rotate(359)')
        .each('end', function(){ d3.select(this).call(loop); });
    }

    scope.$watch('ngShow', function(show){
      if(show){
        // start the animation loop
        g.call(loop);
      }else{
        // end the animation loop
        g.transition().duration(0).each('end', null);
      }
    });

    function resize(){
      svg.attr({width: w, height: h});
      // recent the visualization
      root.attr('transform', 'translate(' + [ w / 2, h / 2] + ')')
    }
    scope.$watch(function(){
      w = el.clientWidth;
      h = el.clientHeight;
      return w + h;
    }, resize);
  }
  return {
     link: link
    , scope: { ngShow: '=' }
    , restrict: 'E'
  }
})
app.directive('myMap', function($timeout, $http){
  function link(scope, el, attr){
    el = el[0];
    var svg = d3.select(el).append('svg');
    var w, h;
    var root = svg.append('g');
    var projection = d3.geo.equirectangular().translate([0,0]).precision(.1);
    var path = d3.geo.path().projection(projection);
    var countries;

    function resize(){
      svg.attr({width: w, height: h});
      var sw = 1 / (Math.PI * 2) * w;
      var sh = 1 / Math.PI * h;
      projection.scale(Math.max(sw, sh));
      root.attr('transform', 'translate(' + [w / 2, h / 2] + ')');
    }
    scope.$watch(function(){
      w = el.clientWidth;
      h = el.clientHeight;
      return w + h;
    }, resize);

    scope.loading = true;
    // take longer than normal to load the map for the demo.
    $timeout(function(){
      $http.get('/mbostock/raw/4090846/world-50m.json').then(function(res){
        var world = res.data;
        countries = root.selectAll('path')
          .data(topojson.feature(world, world.objects.countries).features)
          .enter().append('path')
          .attr('d', path);
        scope.loading = false;
      }, function(err){ throw err });
    }, 2000);
  }
  return {
      link: link
    , scope: { loading: '=' }
    , restrict: 'E'
  }
})
  </script>
</html><html>
<head>
    <meta charset="utf-8">
    <link href="stars.css" rel="stylesheet">
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="stars.js"></script>
<script>d3.select(self.frameElement).style("height", "680px")</script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500;

var sample = bestCandidateSampler(width, height, 10, 3000);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.timer(function() {
  for (var i = 0; i < 10; ++i) {
    var s = sample();
    if (!s) return true;
    svg.append("circle")
        .attr("cx", s[0])
        .attr("cy", s[1])
        .attr("r", 0)
      .transition()
        .attr("r", 2);
  }
});

function bestCandidateSampler(width, height, numCandidates, numSamplesMax) {
  var numSamples = 0;

  var quadtree = d3.geom.quadtree()
      .extent([[0, 0], [width, height]])
      ([[Math.random() * width, Math.random() * height]]);

  return function() {
    if (++numSamples > numSamplesMax) return;
    var bestCandidate, bestDistance = 0;
    for (var i = 0; i < numCandidates; ++i) {
      var c = [Math.random() * width, Math.random() * height],
          d = distance(search(c[0], c[1]), c);
      if (d > bestDistance) {
        bestDistance = d;
        bestCandidate = c;
      }
    }
    quadtree.add(bestCandidate);
    return bestCandidate;
  };

  function distance(a, b) {
    var dx = a[0] - b[0],
        dy = a[1] - b[1];
    return dx * dx + dy * dy;
  };

  // Find the closest node to the specified point.
  function search(x, y) {
    var x0 = 0,
        y0 = 0,
        x3 = width,
        y3 = width,
        minDistance2 = Infinity,
        closestPoint;

    (function find(node, x1, y1, x2, y2) {
      var point;

      // stop searching if this cell can’t contain a closer node
      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;

      // visit this point
      if (point = node.point) {
        var dx = x - point[0],
            dy = y - point[1],
            distance2 = dx * dx + dy * dy;
        if (distance2 < minDistance2) {
          var distance = Math.sqrt(minDistance2 = distance2);
          x0 = x - distance, y0 = y - distance;
          x3 = x + distance, y3 = y + distance;
          closestPoint = point;
        }
      }

      // bisect the current node
      var children = node.nodes,
          xm = (x1 + x2) * .5,
          ym = (y1 + y2) * .5,
          right = x > xm,
          below = y > ym;

      // visit closest cell first
      if (node = children[below << 1 | right]) find(node, right ? xm : x1, below ? ym : y1, right ? x2 : xm, below ? y2 : ym);
      if (node = children[below << 1 | !right]) find(node, right ? x1 : xm, below ? ym : y1, right ? xm : x2, below ? y2 : ym);
      if (node = children[!below << 1 | right]) find(node, right ? xm : x1, below ? y1 : ym, right ? x2 : xm, below ? ym : y2);
      if (node = children[!below << 1 | !right]) find(node, right ? x1 : xm, below ? y1 : ym, right ? xm : x2, below ? ym : y2);
    })(quadtree, x0, y0, x3, y3);

    return closestPoint;
  }
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.state {
  display: inline-block;
  padding: 1em;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 48,
    height = 48;

var path = d3.geo.path()
    .projection(null);

d3.json("state-icons.json", function(error, states) {
  if (error) throw error;

  d3.select("body").selectAll(".state")
      .data(d3.entries(states))
    .enter().append("div")
      .attr("class", "state")
      .text(function(d) { return d.key; })
    .append("svg")
      .attr("width", width)
      .attr("height", height)
    .append("path")
      .datum(function(d) { return topojson.feature(d.value, d.value.objects.icon); })
      .attr("d", path);
});

</script>
<!DOCTYPE html>
<html>
  <head>
    <title>Pathvisiojs Demos</title>
    <script src="./../dist/lib/jquery/js/jquery.min.js"></script>
    <script src="pathvisiojs.js"></script>
    <script>
      $(function(){
        $('#path1').pathvisiojs()
        $('#path2').pathvisiojs()
        $('#path1').pathvisiojs()
        $('#path2').pathvisiojs()
      })
    </script>
  </head>

<body>
  <div id="path1">1</div>
  <div id="path2">2</div>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.link {
  stroke: #000;
  stroke-width: 1.5px;
}

.node {
  cursor: move;
  fill: #ccc;
  stroke: #000;
  stroke-width: 1.5px;
}

.node.fixed {
  fill: #f00;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500;

var force = d3.layout.force()
    .size([width, height])
    .charge(-400)
    .linkDistance(40)
    .on("tick", tick);

var drag = force.drag()
    .on("dragstart", dragstart);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var link = svg.selectAll(".link"),
    node = svg.selectAll(".node");

d3.json("graph.json", function(error, graph) {
  force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();

  link = link.data(graph.links)
    .enter().append("line")
      .attr("class", "link");

  node = node.data(graph.nodes)
  node.enter().append("g")
  node.append("circle")
      .attr("class", "node")
      .attr("r", 12)
      .on("dblclick", dblclick)
      .call(drag);

  node.on("mouseover", function(d,i) {
    var group = d3.select(this)
    var mouseover = group.append("g").classed("mouseover", true);
    mouseover.append("text").text(i);
  });

  node.on("mouseout", function(d,i) {
    d3.selectAll(".mouseover").remove();
  });
});

function tick() {
  link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });

    node.attr("transform",function(d) { return "translate(" + [d.x, d.y] + ")"})
}

function dblclick(d) {
  d3.select(this).classed("fixed", d.fixed = false);
}

function dragstart(d) {
  d3.select(this).classed("fixed", d.fixed = true);
}

</script>
  <!DOCTYPE html>
  <meta charset="utf-8">
  <title>Quadtree</title>
  <style>
  p {
   font-family: "Helvetica Neue", Helvetica, sans-serif;
   font-size: 60px;
   margin:0px;
  }
  </style>
  <body>
  <p id="K"></p>
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script>
  var width = 800;
  var height = 400;
  var padding = 40;

  console.log('Start..');
  var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);
  console.log('=');
  /*
   * Expected keys in object:
   * rooms, area, type
   */
  var KNode = function(object) {
      for (var key in object)
      {
          this[key] = object[key];
      }
  };
  KNode.prototype.measureDistances = function(area_range_obj, rooms_range_obj) {
      var rooms_range = rooms_range_obj.max - rooms_range_obj.min;
      var area_range  = area_range_obj.max  - area_range_obj.min;

      for (var i in this.neighbors)
      {
          /* Just shortcut syntax */
          var neighbor = this.neighbors[i];

          var delta_rooms = neighbor.rooms - this.rooms;
          delta_rooms = (delta_rooms ) / rooms_range;

          var delta_area  = neighbor.area  - this.area;
          delta_area = (delta_area ) / area_range;

          neighbor.distance = Math.sqrt( delta_rooms*delta_rooms + delta_area*delta_area );
      }
  };
  KNode.prototype.sortByDistance = function() {
      this.neighbors.sort(function (a, b) {
          return a.distance - b.distance;
      });
  };
  KNode.prototype.guessType = function(k) {
      var types = {};

      for (var i in this.neighbors.slice(0, k))
      {
          var neighbor = this.neighbors[i];

          if ( ! types[neighbor.type] )
          {
              types[neighbor.type] = 0;
          }

          types[neighbor.type] += 1;
      }

      var guess = {type: false, count: 0};
      for (var type in types)
      {
          if (types[type] > guess.count)
          {
              guess.type = type;
              guess.count = types[type];
          }
      }

      this.guess = guess;

      return types;
  };



  var KNodeList = function(k) {
      this.nodes = [];
      this.k = k;
  };
  KNodeList.prototype.add = function(node) {
      this.nodes.push(node);
  };
  KNodeList.prototype.determineUnknown = function() {

      this.calculateRanges();

      /*
       * Loop through our nodes and look for unknown types.
       */
      for (var i in this.nodes)
      {

          if ( ! this.nodes[i].type)
          {
              /*
               * If the node is an unknown type, clone the nodes list and then measure distances.
               */

              /* Clone nodes */
              this.nodes[i].neighbors = [];
              for (var j in this.nodes)
              {
                  if ( ! this.nodes[j].type)
                      continue;
                  this.nodes[i].neighbors.push( new KNode(this.nodes[j]) );
              }

              /* Measure distances */
              this.nodes[i].measureDistances(this.areas, this.rooms);

              /* Sort by distance */
              this.nodes[i].sortByDistance();

              /* Guess type */
              console.log(this.nodes[i].guessType(this.k));

          }
      }
  };
  KNodeList.prototype.calculateRanges = function() {
      this.areas = {min: 1000000, max: 0};
      this.rooms = {min: 1000000, max: 0};
      for (var i in this.nodes)
      {
          if (this.nodes[i].rooms < this.rooms.min)
          {
              this.rooms.min = this.nodes[i].rooms;
          }

          if (this.nodes[i].rooms > this.rooms.max)
          {
              this.rooms.max = this.nodes[i].rooms;
          }

          if (this.nodes[i].area < this.areas.min)
          {
              this.areas.min = this.nodes[i].area;
          }

          if (this.nodes[i].area > this.areas.max)
          {
              this.areas.max = this.nodes[i].area;
          }
      }

  };
  function nodeColor(type) {
         switch (type)
          {
              case 'apartment':
                  return 'red';
                  break;
              case 'house':
                  return 'green';
                  break;
              case 'flat':
                  return  'blue';
                  break;
              default:
                  return '#666666';
          }
  }


  KNodeList.prototype.draw = function(canvas_id) {
      var width = 800;
      var height = 400;
      var padding = 40;
      var rooms_range = this.rooms.max - this.rooms.min;
      var areas_range = this.areas.max - this.areas.min;

      var x_shift_pct = (width  - padding) / width;
      var y_shift_pct = (height - padding) / height;
      var dataJoin = svg.selectAll(".nodes").data(this.nodes);
      var minroom = this.rooms.min;
      var areasmin = this.areas.min;
      var self = this;
      //console.log(dataJoin.enter(),this.nodes.length);
      dataJoin.enter().append("circle");
      dataJoin.transition()
        .attr("class","nodes")
        .attr("cx", function(d) {
          //console.log(d.rooms,minroom,rooms_range,width,x_shift_pct,padding);
          return  (d.rooms-minroom)* (width  / rooms_range) * x_shift_pct + (padding / 2)})
        .attr("cy", function(d) { y=  (d.area-areasmin)* (height / areas_range) * y_shift_pct + (padding / 2);
          return Math.abs(y-height);
        })
        .attr("r",5)
        .attr("fill",function(d){
          return nodeColor(d.type)
        });
      dataJoin.exit().remove()
      var unknown = this.nodes.filter(function(d,i){ return !d.type });
      //console.log("UNK",unknown);
      datajoin = svg.selectAll(".nodesUnkown").data(unknown);
      datajoin.enter().append("circle")
      datajoin.transition().attr("cx", function(d) {
          //console.log(d.rooms,minroom,rooms_range,width,x_shift_pct,padding);
          return  (d.rooms-minroom)* (width  / rooms_range) * x_shift_pct + (padding / 2)})
        .attr("cy", function(d) { y=  (d.area-areasmin)* (height / areas_range) * y_shift_pct + (padding / 2);
          return Math.abs(y-height);
        })
        .attr("r",function(d){
          var radius = d.neighbors[self.k - 1].distance * width;
            radius *= x_shift_pct;
          return radius;
        })
        .attr("fill",function(d) {
          return nodeColor(d.guess.type)
        })
        .attr("class","nodesUnkown")
        .attr("opacity","0.1");
       datajoin.exit().transition().attr("r",0).remove();
       var neighbor = unknown[0].neighbors.slice(0,this.k);
       dataJoin = svg.selectAll(".nodesNext").data(neighbor);

       dataJoin.enter().append("circle").attr("r",0);
       dataJoin.exit().transition().attr("r",0).remove();
       dataJoin.transition()
        .attr("class","nodesNext")
        .attr("cx", function(d) {
          //console.log(d.rooms,minroom,rooms_range,width,x_shift_pct,padding);
          return  (d.rooms-minroom)* (width  / rooms_range) * x_shift_pct + (padding / 2)})
        .attr("cy", function(d) { y=  (d.area-areasmin)* (height / areas_range) * y_shift_pct + (padding / 2);
          return Math.abs(y-height);
        })
        .attr("r",10)
        .attr("stroke",function(d){
          return nodeColor(d.type)
        }).attr("fill","transparent");




      return;
      for (var i in this.nodes)
      {
          ctx.save();

          switch (this.nodes[i].type)
          {
              case 'apartment':
                  ctx.fillStyle = 'red';
                  break;
              case 'house':
                  ctx.fillStyle = 'green';
                  break;
              case 'flat':
                  ctx.fillStyle = 'blue';
                  break;
              default:
                  ctx.fillStyle = '#666666';
          }

          var padding = 40;
          var x_shift_pct = (width  - padding) / width;
          var y_shift_pct = (height - padding) / height;

          var x = (this.nodes[i].rooms - this.rooms.min) * (width  / rooms_range) * x_shift_pct + (padding / 2);
          var y = (this.nodes[i].area  - this.areas.min) * (height / areas_range) * y_shift_pct + (padding / 2);
          y = Math.abs(y - height);


          ctx.translate(x, y);
          ctx.beginPath();
          ctx.arc(0, 0, 5, 0, Math.PI*2, true);
          ctx.fill();
          ctx.closePath();


          /*
           * Is this an unknown node? If so, draw the radius of influence
           */

          if ( ! this.nodes[i].type )
          {
              switch (this.nodes[i].guess.type)
              {
                  case 'apartment':
                      ctx.strokeStyle = 'red';
                      break;
                  case 'house':
                      ctx.strokeStyle = 'green';
                      break;
                  case 'flat':
                      ctx.strokeStyle = 'blue';
                      break;
                  default:
                      ctx.strokeStyle = '#666666';
              }

              var radius = this.nodes[i].neighbors[this.k - 1].distance * width;
              radius *= x_shift_pct;
              ctx.beginPath();
              ctx.arc(0, 0, radius, 0, Math.PI*2, true);
              ctx.stroke();
              ctx.closePath();

          }

          ctx.restore();

      }

  };



  var nodes;

  var data = [
      {rooms: 1, area: 350, type: 'apartment'},
      {rooms: 2, area: 300, type: 'apartment'},
      {rooms: 3, area: 300, type: 'apartment'},
      {rooms: 4, area: 250, type: 'apartment'},
      {rooms: 4, area: 500, type: 'apartment'},
      {rooms: 4, area: 400, type: 'apartment'},
      {rooms: 5, area: 450, type: 'apartment'},

      {rooms: 7,  area: 850,  type: 'house'},
      {rooms: 7,  area: 900,  type: 'house'},
      {rooms: 7,  area: 1200, type: 'house'},
      {rooms: 8,  area: 1500, type: 'house'},
      {rooms: 9,  area: 1300, type: 'house'},
      {rooms: 8,  area: 1240, type: 'house'},
      {rooms: 10, area: 1700, type: 'house'},
      {rooms: 9,  area: 1000, type: 'house'},

      {rooms: 1, area: 800,  type: 'flat'},
      {rooms: 3, area: 900,  type: 'flat'},
      {rooms: 2, area: 700,  type: 'flat'},
      {rooms: 1, area: 900,  type: 'flat'},
      {rooms: 2, area: 1150, type: 'flat'},
      {rooms: 1, area: 1000, type: 'flat'},
      {rooms: 2, area: 1200, type: 'flat'},
      {rooms: 1, area: 1300, type: 'flat'},
  ];
  var run = function() {
      var k = Math.floor(1+Math.random()*5);
      d3.select("p").html( " K : " + k);
      nodes = new KNodeList(k);
      for (var i in data)
      {
          nodes.add( new KNode(data[i]) );
      }
      var random_rooms = Math.round( Math.random() * 10 );
      var random_area = Math.round( Math.random() * 2000 );
      nodes.add( new KNode({rooms: random_rooms, area: random_area, type: false}) );

      nodes.determineUnknown();
      nodes.draw("canvas");
  };
  var width = 400;
  var height = 400;
  var padding = 40;




  setInterval(run, 1000);
  run();
  </script>
<!DOCTYPE html>

<head>
  <meta charset="utf-8">

  <style>
    .stop {
      fill: #C83D2D;
      stroke: #C83D2D;
      stroke-width: 0.01px;
    }

    .stop.active {
      stroke-width: 0.05px;
    }

    .voronoi-stops {
      fill: transparent;
      stroke-width: 0.001;
      stroke: #676767;
    }

    .text-tooltip {
      position: absolute;
      top: 0;
      right: 0;
      margin: 1em 1em 0 0;
      padding: 1em;
      font-size: 1.5em;
      background-color: #F2F2F2;
      border: 1px solid #222222;
    }
  </style>
</head>

<body>
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script src="http://d3js.org/topojson.v1.min.js"></script>

  <script>

    d3.json('metrotransit-green-line-stops.geo.json', function(error, stops) {
      var width = 960;
      var height = 500;

      var svg = d3.select('body').append('svg')
        .attr('width', width)
        .attr('height', height);

      // Make projection and path handler
      var projectionData = stops;
      var centroid = d3.geo.centroid(projectionData);
      var projection = d3.geo.albersUsa()
        .scale(1000)
        .translate([width / 2, height / 2]);
      var projectionPath = d3.geo.path().projection(projection)
        .pointRadius(function(d) { return 0.002; });

      // Make group for features
      var featureGroup = svg.append('g').attr('class', 'feature-group');

      // Fit map to data
      var b = projectionPath.bounds(projectionData);
      featureGroup.attr('transform',
        'translate(' + projection.translate() + ') ' +
        'scale(' + 0.95 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][1]) / height) + ') ' +
        'translate(' + -(b[1][0] + b[0][0]) / 2 + ',' + -(b[1][1] + b[0][1]) / 2 + ')');

      // Add stops
      featureGroup.selectAll('.stop')
        .data(stops.features)
        .enter().append('path')
          .attr('class', 'stop')
          .attr('d', function(d) {
            // Attach this path to data
            d.stopPath = this;
            return projectionPath(d);
          });

      // Make Voronoi map for hovering over stop
      var text = d3.select('body').append('div').attr('class', 'text-tooltip');

      var voronoiStops = d3.geom.voronoi()
        .x(function(d) { return projection(d.geometry.coordinates)[0]; })
        .y(function(d) { return projection(d.geometry.coordinates)[1]; })
        .clipExtent([[0, 0], [width, height]]);

      featureGroup.selectAll('.voronoi-stops')
        .data(voronoiStops(stops.features))
        .enter().append('path')
          .attr('class', 'voronoi-stops')
          .attr('d', function(d) { return 'M' + d.join('L') + 'Z'; })
          .on('mouseover', function(d) {
            text.style('display', 'block')
              .text(d.point.properties.Station);
            d3.select(d.point.stopPath).classed('active', true);
          })
          .on('mouseout', function(d) {
            text.style('display', 'none')
              .text('');
            d3.select(d.point.stopPath).classed('active', false);
          });

    });

  </script>
</body>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    
    <title>US Socical Election</title>
    
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	<script type="text/javascript" src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    <script type="text/javascript" src="election-data3.js"></script>
    <link rel="stylesheet" type="text/css" href="styles.css" />
	<link rel="stylesheet" type="text/css" href="http://www.tips-for-excel.com/blocks/election/jquery-ui.css" />
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,700,300' rel='stylesheet' type='text/css'>
	<link href='http://fonts.googleapis.com/css?family=Codystar' rel='stylesheet' type='text/css'>
    
</head> 
 
<body>  
 
<p class = "SMD">Social listening to predict the next US President</p>
 
<p class="Obama">Obama</p>
<p class="Romney">Romney</p>
 
 
<div id="slider"></div>
 
<p ID="obscore"> 
303
</p>
<p ID="roscore"> 
235
</p>
<p ID="col"> 
&#58;
</p>
 
<img class  = "pitch" src="http://www.tips-for-excel.com/blocks/election/Background.jpg" alt="pitch" >
 
 
 
 
 
<div id="scoreb"></div>
 
 
 
 
 
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    
    <title>WWE Title reigns visualised using d3.js</title>
    
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	<script type="text/javascript" src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script type="text/javascript">



</script>

    
	
	 <style type="text/css"> 
	 .twitter-share-button {
position:absolute;
left:280px;
top:15px;
}
	 
	 #p1 {
position:absolute;
top:310px;
left:10px;
height:150px;
width:120px;
}

	 
#logo {
position:absolute;
top:200px;
left:470px;
}


p
{font-family:'tahoma';
position:absolute;
top:10px;
left:10px;
width:200px;
}

	</style>
	


	
	
	
</head> 

<body>   


<script>
var vis = d3.select("body").append("svg").attr("width",1000).attr("height",700)
var pi = Math.PI;
var p=d3.scale.category10();
    
var series = [
 [-85,-84.79429074,"Buddy Rogers",235,"code1"],
[-84.79429074,-58.58506132,"Bruno Sammartino",235,"code2"],
[-58.58506132,-58.38870248,"Ivan Koloff",235,"code3"],
[-58.38870248,-48.78582035,"Pedro Morales",235,"code4"],
[-48.78582035,-48.70166656,"Stan Stasiak",235,"code5"],
[-48.70166656,-37.13519607,"Bruno Sammartino",240,"code2"],
[-37.13519607,-34.36747152,"Superstar Billy Graham",235,"code6"],
[-34.36747152,-14.40432318,"Bob Backlund",235,"code7"],
[-14.40432318,-14.1425114,"The Iron Sheik",235,"code8"],
[-14.1425114,-0.359991189999995,"Hulk Hogan",235,"code9"],
[-0.359991189999995,0.116880270000005,"Andre the Giant",235,"code10"],
[0.116880270000005,3.58588638,"Randy Savage",235,"code11"],
[3.58588638,6.98943954,"Hulk Hogan",240,"code9"],
[6.98943954,9.72911283000001,"Ultimate Warrior",235,"code12"],
[9.72911283000001,10.32753976,"Sgt. Slaughter",235,"code13"],
[10.32753976,12.64644411,"Hulk Hogan",245,"code9"],
[12.64644411,12.70254663,"Undertaker",235,"code14"],
[12.70254663,13.14201641,"Hulk Hogan",250,"code9"],
[13.14201641,13.86199881,"Ric Flair",235,"code15"],
[13.86199881,15.2552115,"Randy Savage",240,"code11"],
[15.2552115,15.63857875,"Ric Flair",240,"code15"],
[15.63857875,17.26555196,"Bret Hart",235,"code16"],
[17.26555196,17.26555196,"Yokozuna",235,"code17"],
[17.26555196,17.92008141,"Hulk Hogan",255,"code9"],
[17.92008141,20.53819923,"Yokozuna",240,"code17"],
[20.53819923,22.85710358,"Bret Hart",240,"code16"],
[22.85710358,22.88515484,"Bob Backlund",240,"code7"],
[22.88515484,26.23260548,"Diesel",235,"code18"],
[26.23260548,27.47621144,"Bret Hart",245,"code16"],
[27.47621144,29.63615864,"Shawn Michaels",235,"code19"],
[29.63615864,30.22523515,"Sid",235,"code20"],
[30.22523515,30.48704693,"Shawn Michaels",240,"code19"],
[30.48704693,30.49639735,"Bret Hart",250,"code16"],
[30.49639735,30.81431166,"Sid",240,"code20"],
[30.81431166,32.05791762,"Undertaker",240,"code14"],
[32.05791762,32.97425886,"Bret Hart",255,"code16"],
[32.97425886,34.28331777,"Shawn Michaels",245,"code19"],
[34.28331777,35.13420606,"Stone Cold",235,"code21"],
[35.13420606,35.14355648,"Kane",235,"code22"],
[35.14355648,36.44326497,"Stone Cold",240,"code21"],
[36.44326497,36.91078601,"The Rock",235,"code23"],
[36.91078601,37.09779443,"Mankind",235,"code24"],
[37.09779443,37.16324738,"The Rock",240,"code23"],
[37.16324738,37.30350369,"Mankind",240,"code24"],
[37.30350369,37.68687094,"The Rock",245,"code23"],
[37.68687094,38.2104945,"Stone Cold",245,"code21"],
[38.2104945,38.54710965,"Undertaker",245,"code14"],
[38.54710965,39.06138279,"Stone Cold",250,"code21"],
[39.06138279,39.07073321,"Mankind",245,"code24"],
[39.07073321,39.29514331,"Triple H",235,"code25"],
[39.29514331,39.38864752,"Mr. McMahon",235,"code26"],
[39.38864752,39.84681814,"Triple H",240,"code25"],
[39.84681814,40.31433918,"Big Show",235,"code27"],
[40.31433918,41.41768883,"Triple H",245,"code25"],
[41.41768883,41.61404767,"The Rock",250,"code23"],
[41.61404767,41.9413124,"Triple H",250,"code25"],
[41.9413124,43.05401247,"The Rock",255,"code23"],
[43.05401247,44.23216549,"Kurt Angle",235,"code28"],
[44.23216549,44.55943022,"The Rock",260,"code23"],
[44.55943022,46.19575385,"Stone Cold",255,"code21"],
[46.19575385,46.33601016,"Kurt Angle",240,"code28"],
[46.33601016,46.91573625,"Stone Cold",260,"code21"],
[46.91573625,47.83207749,"Chris Jericho",235,"code29"],
[47.83207749,48.15934222,"Triple H",255,"code25"],
[48.15934222,48.421154,"Hollywood Hogan",235,"code30"],
[48.421154,49.01023051,"Undertaker",250,"code14"],
[49.01023051,49.33749524,"The Rock",265,"code23"],
[49.33749524,50.12293058,"Brock Lesnar",235,"code31"],
[50.12293058,50.38474236,"Big Show",240,"code27"],
[50.38474236,51.36653654,"Kurt Angle",245,"code28"],
[51.36653654,52.47923661,"Brock Lesnar",240,"code31"],
[52.47923661,52.97480891,"Kurt Angle",250,"code28"],
[52.97480891,54.37737203,"Brock Lesnar",245,"code31"],
[54.37737203,55.62097799,"Eddie Guerrero",235,"code32"],
[55.62097799,58.23909581,"JBL",235,"code33"],
[58.23909581,60.85721363,"John Cena",235,"code34"],
[60.85721363,61.05357247,"Edge",235,"code35"],
[61.05357247,62.29717843,"John Cena",240,"code34"],
[62.29717843,62.50288769,"Rob Van Dam",235,"code36"],
[62.50288769,63.21351967,"Edge",240,"code35"],
[63.21351967,66.81343167,"John Cena",245,"code34"],
[66.81343167,66.81343167,"Randy Orton",235,"code37"],
[66.81343167,66.81343167,"Triple H",260,"code25"],
[66.81343167,68.71156709,"Randy Orton",240,"code37"],
[68.71156709,70.67515545,"Triple H",265,"code25"],
[70.67515545,70.87151429,"Edge",245,"code35"],
[70.87151429,71.26423196,"Jeff Hardy",235,"code38"],
[71.26423196,71.4605908,"Edge",250,"code35"],
[71.4605908,72.11512025,"Triple H",270,"code25"],
[72.11512025,72.50783792,"Randy Orton",245,"code37"],
[72.50783792,72.58264129,"Batista",235,"code39"],
[72.58264129,73.42417916,"Randy Orton",250,"code37"],
[73.42417916,73.620538,"John Cena",250,"code34"],
[73.620538,73.81689684,"Randy Orton",255,"code37"],
[73.81689684,74.27506746,"John Cena",255,"code34"],
[74.27506746,74.92959691,"Sheamus",235,"code40"],
[74.92959691,74.92959691,"John Cena",260,"code34"],
[74.92959691,75.25686164,"Batista",240,"code39"],
[75.25686164,76.04229698,"John Cena",265,"code34"],
[76.04229698,76.89318527,"Sheamus",240,"code40"],
[76.89318527,77.4916122,"Randy Orton",260,"code37"],
[77.4916122,78.98767952,"The Miz",235,"code41"],
[78.98767952,79.70766192,"John Cena",270,"code34"],
[79.70766192,79.78246529,"CM Punk",235,"code42"],
[79.78246529,79.78246529,"Rey Mysterio",235,"code43"],
[79.78246529,79.96947371,"John Cena",275,"code34"],
[79.96947371,80.29673844,"Alberto Del Rio",235,"code44"],
[80.29673844,80.42764433,"John Cena",280,"code34"],
[80.42764433,80.88581495,"Alberto Del Rio",240,"code44"],
[80.88581495,84.94389756,"CM Punk",240,"code42"],
[84.94389756,85.00000008,"The Rock",270,"code23"]

];
var series2 = [
[-95,-98.86363636,"Buddy Rogers",235,"code1"],
[-98.86363636,-102.72727273,"Bruno Sammartino",240,"code2"],
[-102.72727273,-106.59090909,"Ivan Koloff",235,"code3"],
[-106.59090909,-110.45454545,"Pedro Morales",235,"code4"],
[-110.45454545,-114.31818182,"Stan Stasiak",235,"code5"],
[-114.31818182,-118.18181818,"Superstar Billy Graham",235,"code6"],
[-118.18181818,-122.04545455,"Bob Backlund",240,"code7"],
[-122.04545455,-125.90909091,"The Iron Sheik",235,"code8"],
[-125.90909091,-129.77272727,"Hulk Hogan",255,"code9"],
[-129.77272727,-133.63636364,"Andre the Giant",235,"code10"],
[-133.63636364,-137.5,"Randy Savage",240,"code11"],
[-137.5,-141.36363636,"Ultimate Warrior",235,"code12"],
[-141.36363636,-145.22727273,"Sgt. Slaughter",235,"code13"],
[-145.22727273,-149.09090909,"Undertaker",250,"code14"],
[-149.09090909,-152.95454545,"Ric Flair",240,"code15"],
[-152.95454545,-156.81818182,"Bret Hart",255,"code16"],
[-156.81818182,-160.68181818,"Yokozuna",240,"code17"],
[-160.68181818,-164.54545455,"Diesel",235,"code18"],
[-164.54545455,-168.40909091,"Shawn Michaels",245,"code19"],
[-168.40909091,-172.27272727,"Sid",240,"code20"],
[-172.27272727,-176.13636364,"Stone Cold",260,"code21"],
[-176.13636364,-180,"Kane",235,"code22"],
[-180,-183.86363636,"The Rock",270,"code23"],
[-183.86363636,-187.72727273,"Mankind",245,"code24"],
[-187.72727273,-191.59090909,"Triple H",270,"code25"],
[-191.59090909,-195.45454545,"Mr. McMahon",235,"code26"],
[-195.45454545,-199.31818182,"Big Show",240,"code27"],
[-199.31818182,-203.18181818,"Kurt Angle",250,"code28"],
[-203.18181818,-207.04545455,"Chris Jericho",235,"code29"],
[-207.04545455,-210.90909091,"Hollywood Hogan",235,"code30"],
[-210.90909091,-214.77272727,"Brock Lesnar",245,"code31"],
[-214.77272727,-218.63636364,"Eddie Guerrero",235,"code32"],
[-218.63636364,-222.5,"JBL",235,"code33"],
[-222.5,-226.36363636,"John Cena",280,"code34"],
[-226.36363636,-230.22727273,"Edge",250,"code35"],
[-230.22727273,-234.09090909,"Rob Van Dam",235,"code36"],
[-234.09090909,-237.95454545,"Randy Orton",260,"code37"],
[-237.95454545,-241.81818182,"Jeff Hardy",235,"code38"],
[-241.81818182,-245.68181818,"Batista",240,"code39"],
[-245.68181818,-249.54545455,"Sheamus",240,"code40"],
[-249.54545455,-253.40909091,"The Miz",235,"code41"],
[-253.40909091,-257.27272727,"CM Punk",240,"code42"],
[-257.27272727,-261.13636364,"Rey Mysterio",235,"code43"],
[-261.13636364,-265,"Alberto Del Rio",240,"code44"]
];




var series3 = [
[-85,-62.15692206,"1960s",300,"#6699FF","xx1"],
[-62.15692206,-28.00918541,"1970s",300,"#B8B8FF","xx2"],
[-28.00918541,6.147901656,"1980s",300,"#6699FF","xx3"],

[6.147901656,40.2956383,"1990s",300,"#B8B8FF","xx4"],
[40.2956383,74.45272537,"2000s",300,"#6699FF","xx5"],
[74.45272537,85,"2010s",300,"#B8B8FF","xx6"]

];

var series4 = [
[-85,-28,"World Wide Wrestling Federation",310,"#B84DFF","xxy1","World Wide Wrestling Federation"],
[-28,15,"Golden Era",310,"gold","xxy2","Golden Era"],
[15,35,"",310,"red","xxy3","New Generation Era"],
[35,50,"",310,"green","xxy4","Attitude Era"],
[50,85,"Modern Era",310,"orange","xxy5","Modern Era"]
];


	vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",320)
	
	
	
	vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",280)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)
	
										vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",275)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)
										vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",270)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)
	
										vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",265)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)
	
	
	
	
	
	
									vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",260)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)	
	
	
								vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",255)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)	

	

	
	
							vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",250)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)	
						vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",245)
	.attr("fill","black")
	.style("stroke","grey")
		.style("stroke-width",0.5)
					vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",240)
	.attr("fill","black")
	.style("stroke","grey")
		.style("stroke-width",0.5)
				vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",235)
	.attr("fill","black")
	.style("stroke","grey")
	.style("stroke-width",0.5)	
	
	var gradient = vis.append("svg:defs")
  .append("svg:radialGradient")
    .attr("id", "gradient")
    .attr("cx", "50%")
    .attr("cy", "50%")
    .attr("r", "50%")
    .attr("fx", "50%")
	.attr("fy", "50%")
    .attr("spreadMethod", "pad");

gradient.append("svg:stop")
    .attr("offset", "0%")
    .attr("stop-color", "grey")
    .attr("stop-opacity", 1);

gradient.append("svg:stop")
    .attr("offset", "100%")
    .attr("stop-color", "black")
    .attr("stop-opacity", 1);
	

	
		vis
	.append("circle")
	.attr("cx",600)
	.attr("cy",330)
	.attr("r",230)
	.attr("fill","url(#gradient)")
	
	



var arc = d3.svg.arc()
    .innerRadius(230)
    .outerRadius(235)
    .startAngle(function(d) { return d[0] * (pi/180); }) 
    .endAngle(function(d) { return d[1] * (pi/180); }) //just radians
 
var arc2 = d3.svg.arc()
    .innerRadius(230)
    .outerRadius(function(d) { return d[3] ; })
    .startAngle(function(d) { return d[0] * (pi/180); }) 
    .endAngle(function(d) { return d[1] * (pi/180); }) //just radians

	
	var arc3 = d3.svg.arc()
    .innerRadius(287.5)
    .outerRadius(function(d) { return d[3] ; })
    .startAngle(function(d) { return d[0] * (pi/180); }) 
    .endAngle(function(d) { return d[1] * (pi/180); }) //just radians
	
		var arc4 = d3.svg.arc()
    .innerRadius(300)
    .outerRadius(function(d) { return d[3] ; })
    .startAngle(function(d) { return d[0] * (pi/180); }) 
    .endAngle(function(d) { return d[1] * (pi/180); }) //just radians

vis.selectAll(".line")
.data(series)
.enter()
.append("path")
.attr("class", function(d) { return d[4] + " " +"line"; })
    .attr("d", arc)
    .attr("transform", "translate(600,330)")
    .attr("fill",function(d) { return p(d[2]); })
.transition()
.duration(2000)
.ease("linear")
    .attr("d", arc2)


	
	//now make lower arcs

vis.selectAll(".lline")
.data(series2)
.enter()
.append("path")
.attr("class", "lline")
.attr("id",function(d) { return d[4]; })
    .attr("d", arc)
    .attr("transform", "translate(600,330)")
    .attr("fill",function(d) { return p(d[2]); })
.transition()
.duration(2000)
.ease("linear")
.attr("d", arc2)

		//now make decades

vis.selectAll(".decades")
.data(series3)
.enter()
.append("path")
.attr("class", "decades")
.attr("id", function(d){return d[5];})
.attr("d", arc3)
 .attr("transform", "translate(600,330)")
 .attr("fill","none")
.transition()
.delay(function(d,i){return i*250;})
 .attr("fill",function(d) { return d[4]; })
 
 
 		//now make eras

vis.selectAll(".eras")
.data(series4)
.enter()
.append("path")
.attr("class", "eras")
.attr("id", function(d){return d[5];})
.attr("d", arc4)
 .attr("transform", "translate(600,330)")
 .attr("fill","none")
.transition()
.delay(function(d,i){return i*250;})
 .attr("fill",function(d) { return d[4]; })


	
	//add mouse over title to top arcs
	
	vis.selectAll(".line")
        .append("title")
        .text(function(d) {
			   		return d[2];
			   });	
	
	
	vis.selectAll(".lline")
        .append("title")
        .text(function(d) {
			   		return d[2];
			   });	
			   
			   
		vis.selectAll(".eras")
        .append("title")
        .text(function(d) {
			   		return d[6];
			   });			   
			   
			   

//fade in or out


d3.select("#code1")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code1")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code1")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	  
	
	d3.select("#code2")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code2")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code2")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	

	
	d3.select("#code3")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code3")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code3")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code4")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code4")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code4")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code5")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code5")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code5")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code6")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code6")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code6")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code7")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code7")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code7")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code8")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code8")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code8")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code9")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code9")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code9")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code10")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code10")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code10")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code11")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code11")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code11")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code12")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code12")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code12")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code13")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code13")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code13")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code14")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code14")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code14")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code15")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code15")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code15")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code16")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code16")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code16")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code17")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code17")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code17")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
	d3.select("#code18")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code18")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code18")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
	d3.select("#code19")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code19")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code19")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
	d3.select("#code20")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code20")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code20")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code21")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code21")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code21")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code22")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code22")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code22")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
	d3.select("#code23")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code23")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code23")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code24")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code24")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code24")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code25")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code25")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code25")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code26")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code26")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code26")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
	d3.select("#code27")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code27")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code27")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	d3.select("#code28")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code28")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code28")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
	d3.select("#code29")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code29")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code29")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	d3.select("#code30")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code30")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code30")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
		
	d3.select("#code31")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code31")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code31")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
		
	d3.select("#code32")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code32")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code32")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		
	d3.select("#code33")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code33")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code33")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
		
	d3.select("#code34")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code34")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code34")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		
		
	d3.select("#code35")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code35")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code35")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		
		
	d3.select("#code36")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code36")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code36")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		
		
	d3.select("#code37")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code37")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code37")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		
		
	d3.select("#code38")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code38")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code38")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		
		
	d3.select("#code39")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code39")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code39")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
		
		
	d3.select("#code40")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code40")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code40")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		d3.select("#code41")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code41")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code41")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		d3.select("#code42")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code42")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code42")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
	
	d3.select("#code43")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code43")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code43")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	
	
		d3.select("#code44")
	.on("mouseover",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",0.1)
	vis.selectAll(".code44")
	.transition()
	.attr("opacity",1)
	});	  
	d3.select("#code44")
	.on("mouseout",function() {
		vis.selectAll(".line")
	.transition()
	.attr("opacity",1)
	});	
	


vis.selectAll(".names")
.data(series3)
.enter()
.append("svg:text")
.attr("class", "names")
.attr("x",20)
.attr("dy",10)
.append("svg:textPath")
.attr("startOffset",function(d) { return 0 })
.attr("xlink:href",function(d) { return "#"+d[5]; })
.text(function(d) { return d[2] })
.style("font-family","calibri")
.style("font-size","11px")
.style("font-weight",100)
.attr("fill","black")

	vis.selectAll(".enames")
.data(series4)
.enter()
.append("svg:text")
.attr("class", "enames")
.attr("x",20)
.attr("dy",8.5)
.append("svg:textPath")
.attr("startOffset",function(d) { return 0 })
.attr("xlink:href",function(d) { return "#"+d[5]; })
.text(function(d) { return d[2] })
.style("font-family","calibri")
.style("font-size","11px")
.style("font-weight",100)
.attr("fill","black")
	
	
  
</script>

<object id="logo" data="https://upload.wikimedia.org/wikipedia/en/9/91/WWELogo2014.svg" type="image/svg+xml"></object>


  
</body>



</html><!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400italic,600italic,700italic,200,300,400,600,700,900">
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 1em;
  color: #333;
  font-weight: 400;
}

#content {
  margin: 5px;
  padding: 20px;
  width: 805px;
  border: 1px solid #ccc;
}

#map {
  margin: 10px 0px 0px 0px;
  padding: 0px;
}

h1, h2 {
  line-height: 1em;
  font-size: 1.75em;
  font-weight: 900;
  color: #000;
}

h2.year {
  margin: 10px 0px 0px 0px;
  font-size: 1.3em;
  font-weight: 700;
}

p {
  margin: 10px 0px 0px 0px;
}

.county {
  fill: #fff;
}

.states {
  fill: none;
  stroke: #fff;
  stroke-linejoin: round;
}

input {
  display: block;
  width: 200px;
  margin: 10px 0px 0px 0px;
}

#legend text {
  font-size: 0.9em;
  color: #333;
  font-weight: 400;
}

.tooltip {
  position: absolute;
  padding: 7px;
  font-size: 0.9em;
  pointer-events: none;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;

  -moz-box-shadow:    3px 3px 10px 0px rgba(0, 0, 0, 0.25);
  -webkit-box-shadow: 3px 3px 10px 0px rgba(0, 0, 0, 0.25);
  box-shadow:         3px 3px 10px 0px rgba(0, 0, 0, 0.25);
}

.tooltip p {
  margin: 0;
  padding: 0;
}

.tooltip table {
  margin: 0;
  padding: 0;
  border-collapse: collapse;
}

.wide {
  width: 140px;
}

</style>

</head>

<body>

<div id="content">
	<h1>U.S. Daily Cigarette Smoking Rate, 1996-2012</h1>
	<h2 class="year"></h2>
	<div class="slider"></div>
	<div id="map"></div>
	<p>Source: Institute for Health Metrics and Evaluation.</p>
</div>

<script type="text/javascript" src="map.js"></script>

</body>
</html>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html;charset=utf-8">
    <title>Lines using D3.js</title>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
	<script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	<style type="text/css">

@font-face{font-family:danx;src:url('http://www.24-the-movie.com/Barclays Premier League.ttf')}

body {background-color:#ffffff;}
.year.label {
  font-family: danx;

}

h1 {
  font-family: 'Helvetica Neue';
  position:absolute;
  top:2px;
  right:2px;
  }
h3 {
  font-family: 'Helvetica Neue';
  position:absolute;
  top:26px;
  right:2px;
  }

  
   body {font-size:62.5%;}  /* Set the size of 1em to 10px in all browsers */

  body.extraWide {font-size:85%;}
  body.wide {font-size:75%;}

  body.narrow {font-size:50%;}
  body.extraNarrow {font-size:40%;}
  
  
  
</style>


</head> 
<body>   

<h1>Passing the ball animation made using d3.js - my first ever d3.js visual April 2012</h1>


<script type="text/javascript">
/*Select the DIV container "D3line" and add an SVG element to it*/

$(function(){
  var viewPortWidth = $(window).width();

  if (viewPortWidth > 1900) {$('body').addClass('extraWide')}
  else if (viewPortWidth > 1400) {$('body').addClass('wide')}
  else if (viewPortWidth > 1000) {$('body').addClass('standard')}
  else if (viewPortWidth > 700) {$('body').addClass('narrow')}
  else {$('body').addClass('extraNarrow')}

});






var color = d3.scale.linear()
    .domain([0,94])
    .range(["#99CCFF","#2E3D4C"]);




var x = ($(window).width() / 100);
var y = ($(window).height() / 100);
	var xScale = d3.scale.linear().domain([-100, 100]).range([-(x*12.5),(x*12.5)]);
	var yScale = d3.scale.linear().domain([-100, 100]).range([-(y*12.5),(y*12.5)]);
	
	
var svg = d3.select("body").append("svg");
var dataset = [ 
[-18.7,10.4,0,37.5,37.5],
[-26.5,7.5,0,12.5,37.5],
[12.3,45.9,0,12.5,62.5],
[-0.9,2.3,0,37.5,12.5],
[27.4,-19.2,0,12.5,37.5],
[-17.4,0.9,0,37.5,62.5],
[6.4,-8.8,11,62.5,62.5],
[-12.7,3.4,11,12.5,37.5],
[4.9,-7.8,12,37.5,12.5],
[10.8,0.7,12,12.5,37.5],
[-3.9,-4.6,12,62.5,37.5],
[23.3,-0.4,12,12.5,37.5],
[-21.7,-2.9,12,37.5,37.5],
[4.3,2.5,12,12.5,62.5],
[-16.6,10.4,12,37.5,37.5],
[13.4,6.6,12,37.5,12.5],
[0.7,-7.7,12,87.5,37.5],
[17.2,7.5,12,12.5,62.5],
[19.4,-4.1,12,37.5,37.5],
[22,14.5,12,12.5,37.5],
[16.2,12.6,13,37.5,62.5],
[0.5,-11.6,13,87.5,37.5],
[12.9,3.5,13,37.5,62.5],
[-19.3,9.9,13,87.5,37.5],
[-11.8,-2.5,13,37.5,12.5],
[10.1,-4.3,14,12.5,37.5],
[-46.4,-2.2,14,62.5,37.5],
[23.4,-0.5,14,12.5,62.5],
[-11.2,6.5,14,37.5,37.5],
[-18.7,-6.3,14,12.5,37.5],
[-8.1,15.2,14,62.5,62.5],
[10.9,-10.7,14,12.5,62.5],
[-12.8,-5.6,14,37.5,37.5],
[9.4,23.2,14,62.5,62.5],
[-4.9,-15.3,14,37.5,12.5],
[20.9,-2.1,14,62.5,62.5],
[12.3,17.7,14,37.5,37.5],
[-2.8,6.2,14,87.5,37.5],
[12.9,22.1,14,12.5,37.5],
[-20.2,1.1,14,87.5,62.5],
[-10.9,7.9,14,50,87.5],
[9.8,0.9,14,62.5,62.5],
[10.5,-22.2,15,37.5,37.5],
[-29.3,15.3,15,50,87.5],
[35.1,2.4,15,62.5,62.5],
[-27.7,0.1,15,37.5,37.5],
[-13.4,2.6,15,62.5,62.5],
[12.4,3.6,15,62.5,37.5],
[29.3,3.5,15,12.5,37.5],
[-18.8,-8.5,15,37.5,12.5],
[-2,-12.3,15,37.5,37.5],
[0.2,11.5,15,62.5,62.5],
[24.9,-11.7,15,37.5,37.5],
[-17.8,21.9,15,37.5,62.5],
[-15.7,1.9,15,12.5,37.5],
[1.6,-7.1,16,12.5,62.5],
[6.6,14.8,16,62.5,37.5],
[7.8,-1.7,16,62.5,12.5],
[-10.9,-10.8,16,87.5,62.5],
[-27.7,5.4,16,50,87.5],
[-1.6,16.5,17,62.5,62.5],
[-22.8,1.7,17,12.5,37.5],
[21.4,-1.3,17,12.5,62.5],
[15.7,-5.3,17,12.5,37.5],
[47.8,-0.1,17,62.5,12.5],
[-29.9,11.3,17,87.5,37.5],
[29,-0.6,17,62.5,12.5],
[47.3,12.8,19,50,87.5],
[-7.8,-4.5,19,87.5,37.5],
[0.6,29.6,19,62.5,37.5],
[-34.7,26.3,19,87.5,37.5],
[-54.5,24.6,19,50,87.5],
[3.2,4.2,19,62.5,62.5],
[-20.4,-4.6,19,37.5,37.5],
[36.6,-21.1,19,62.5,62.5],
[30.9,5.2,19,50,87.5],
[-22.9,7.6,20,37.5,62.5],
[21.5,-0.9,20,37.5,37.5],
[2.3,16.5,20,62.5,37.5],
[1.2,-11.6,20,87.5,37.5],
[-29.9,-4.2,20,62.5,37.5],
[-21.6,1,20,37.5,62.5],
[20.1,-2.1,20,62.5,62.5],
[-13.8,8,20,37.5,62.5],
[13.2,-11.9,20,37.5,37.5],
[-3.6,23.6,20,37.5,62.5],
[7.4,16.5,20,62.5,37.5],
[50.2,-4.9,22,37.5,37.5],
[-0.2,13.2,22,37.5,62.5],
[-2.2,-16.4,22,87.5,37.5],
[22.1,7.4,22,37.5,62.5],
[-7.2,11.2,22,87.5,37.5],
[-1.9,-15,22,62.5,12.5],
[-26.8,-7.8,22,37.5,62.5],
[39.7,3.7,22,62.5,62.5],
[10.6,9.4,22,37.5,62.5],
[-17.7,-30.4,23,37.5,62.5],
[-9.9,-14.4,23,62.5,62.5],
[-1.4,17.9,23,50,87.5],
[-13.4,12.5,23,37.5,37.5],
[14.3,-11.1,23,12.5,37.5],
[-19,-3.4,23,37.5,37.5],
[9.2,16.2,23,62.5,62.5],
[35.6,-0.3,23,37.5,37.5],
[0.7,14.4,23,37.5,62.5],
[-14.6,-10.7,23,87.5,37.5],
[-8.8,-23.5,23,62.5,37.5],
[-0.9,9.9,24,62.5,62.5],
[3.6,-16.2,24,37.5,37.5],
[18.9,4.2,24,62.5,62.5],
[-16.8,-1.8,24,62.5,37.5],
[-36.6,10.9,24,62.5,12.5],
[10.8,9.7,25,12.5,62.5],
[-2,-6.8,25,87.5,37.5],
[10.9,-9.8,25,12.5,62.5],
[35.5,6.2,26,50,87.5],
[-23.8,-16.9,26,87.5,37.5],
[-27.4,-3.9,26,87.5,62.5],
[-21.7,-2.5,26,37.5,62.5],
[-0.3,5.3,26,62.5,62.5],
[-37.7,59.3,27,37.5,37.5],
[22.6,-8.3,27,12.5,37.5],
[-0.3,-6.6,28,62.5,37.5],
[-10.9,20.9,28,62.5,62.5],
[15.6,4.2,28,50,87.5],
[-49.6,2.9,28,87.5,62.5],
[-30.9,13.2,28,62.5,62.5],
[11.7,-9.5,28,12.5,62.5],
[31.1,-6.5,29,37.5,12.5],
[-11.7,-5.7,29,87.5,62.5],
[-20.7,3.6,29,62.5,37.5],
[20.1,-6.1,29,12.5,37.5],
[3.9,18,29,62.5,37.5],
[1.4,-5.4,29,37.5,12.5],
[26.3,17,29,12.5,37.5],
[-17.6,-1.4,29,62.5,37.5],
[-35.1,1,29,62.5,37.5],
[-20.9,19.8,3,87.5,37.5],
[-19.8,10.6,3,62.5,12.5],
[-3.8,22.2,3,37.5,62.5],
[-23.2,9.4,31,50,87.5],
[-0.8,9,31,62.5,62.5],
[2.2,-8.1,31,37.5,37.5],
[21.5,-8.7,31,37.5,62.5],
[7.1,0.3,32,12.5,37.5],
[-7.9,23.1,32,37.5,37.5],
[-3,-13.3,32,37.5,12.5],
[-19.6,41.1,32,37.5,37.5],
[9.1,-8.4,32,12.5,37.5],
[-14.9,-5.1,32,37.5,37.5],
[19,-0.3,32,12.5,62.5],
[10.3,4.6,32,37.5,37.5],
[18,1.4,32,12.5,37.5],
[-14,13.4,32,62.5,37.5],
[-10.6,-0.2,32,87.5,37.5],
[-10.7,3.6,32,37.5,37.5],
[9.5,-3.5,32,37.5,12.5],
[-7.4,8.2,32,87.5,37.5],
[0.6,-6.1,32,37.5,37.5],
[-9.2,3,33,37.5,62.5],
[-21,-8.9,33,87.5,62.5],
[7.3,9.1,34,62.5,62.5],
[10.2,1.1,34,37.5,37.5],
[21.2,4.1,34,62.5,37.5],
[-30.3,16.3,34,87.5,62.5],
[1.2,-14.2,34,62.5,62.5],
[-2.2,7.8,34,37.5,37.5],
[6.2,5.2,34,87.5,37.5],
[-30.2,-2.7,34,62.5,12.5],
[-10.4,-1.3,35,62.5,37.5],
[35.1,5.6,35,37.5,37.5],
[7.8,5.8,35,37.5,12.5],
[-17.3,11,35,12.5,37.5],
[19.3,17.1,36,37.5,12.5],
[0.6,9.6,36,37.5,62.5],
[16.2,-3.1,36,37.5,37.5],
[-16.7,32.4,36,87.5,37.5],
[0,-9.9,36,12.5,62.5],
[41.6,-25.5,36,87.5,37.5],
[-1.5,2.5,39,62.5,12.5],
[-2.2,-18.4,39,37.5,12.5],
[-33.5,-2.1,39,62.5,37.5],
[12.1,-6.8,39,12.5,62.5],
[15.6,-16.5,39,62.5,62.5],
[-35.1,-3.7,4,87.5,62.5],
[-47.4,-2.9,4,37.5,37.5],
[18.2,-1.7,4,12.5,62.5],
[-2.5,-20.1,4,37.5,37.5],
[41.9,-3.3,4,62.5,62.5],
[-18.9,7.8,4,37.5,62.5],
[20.5,5.3,4,37.5,37.5],
[-15.7,-2.8,4,37.5,62.5],
[31,6.5,4,37.5,37.5],
[-12.2,14.5,4,62.5,37.5],
[38.2,42.8,40,12.5,62.5],
[-16.8,-3,43,62.5,37.5],
[2.6,14.5,43,37.5,37.5],
[10.6,26.4,45,12.5,62.5],
[-3.2,-8.5,46,12.5,37.5],
[15.9,16.8,46,12.5,62.5],
[53.1,7.3,46,87.5,37.5],
[10.7,11.7,46,37.5,37.5],
[-17.5,12.5,46,87.5,37.5],
[5.6,12.3,48,37.5,62.5],
[5,14.2,48,87.5,37.5],
[16.7,1.3,48,37.5,12.5],
[-13.8,16.2,48,62.5,37.5],
[-6.1,-4.2,48,12.5,37.5],
[8.6,6.7,48,37.5,12.5],
[4.4,-8.3,48,62.5,37.5],
[3.1,12.7,48,37.5,62.5],
[2.3,7.8,48,87.5,62.5],
[-7.7,28.7,48,12.5,37.5],
[9.3,4.5,48,37.5,37.5],
[-8.2,-2.3,49,62.5,37.5],
[1.4,17.2,49,37.5,37.5],
[8.6,-7.6,49,37.5,12.5],
[24.4,2.7,49,12.5,37.5],
[8.3,10.2,49,12.5,62.5],
[-59.8,-0.4,5,87.5,62.5],
[3.5,-21.2,5,12.5,62.5],
[-3.1,57.9,5,50,87.5],
[-21.5,0.5,5,62.5,12.5],
[-19.6,21.2,5,12.5,37.5],
[-6.4,-6.2,50,62.5,12.5],
[18.7,2.3,50,12.5,62.5],
[-3.1,-2.3,50,12.5,37.5],
[53.1,-4.4,50,62.5,12.5],
[-30.8,13.4,50,87.5,62.5],
[11.3,13,50,62.5,37.5],
[17.5,1.3,50,87.5,37.5],
[16.4,1,51,12.5,62.5],
[18.7,-3.1,52,62.5,37.5],
[-6,-1.9,52,87.5,37.5],
[-5.6,16.7,52,37.5,37.5],
[-5.8,2.2,52,62.5,12.5],
[0,4.4,53,62.5,37.5],
[-8.8,-0.3,53,87.5,37.5],
[-10.6,3.1,53,12.5,37.5],
[19.1,19.2,53,87.5,37.5],
[24,2.5,53,62.5,37.5],
[6.2,-0.1,53,12.5,37.5],
[10,4.6,54,37.5,12.5],
[0.3,25.7,54,12.5,37.5],
[-6,18.6,56,37.5,37.5],
[36,22.3,57,12.5,37.5],
[0.1,4.3,57,62.5,37.5],
[-53.8,-15.2,57,87.5,62.5],
[36.7,3.7,57,62.5,62.5],
[17.3,7.8,57,37.5,62.5],
[-10.1,21,58,87.5,62.5],
[7.5,-5.7,58,62.5,12.5],
[-12,19.2,58,87.5,37.5],
[-19.1,-7.7,58,12.5,37.5],
[13.2,-0.1,58,87.5,37.5],
[-1.4,-8.1,58,12.5,37.5],
[-29.1,12.3,58,87.5,37.5],
[-14.9,6.5,59,62.5,62.5],
[8.2,10.8,59,37.5,37.5],
[0,17.9,59,87.5,37.5],
[3.9,-6.7,6,12.5,37.5],
[-0.1,-5.5,6,37.5,37.5],
[17.9,-1.4,6,12.5,37.5],
[14.8,21.3,6,62.5,62.5],
[-5.8,26.8,6,12.5,37.5],
[10.8,-3.7,6,12.5,37.5],
[-4.5,-3.5,6,37.5,37.5],
[7.2,5.9,6,12.5,62.5],
[-5.8,2,6,62.5,37.5],
[4.7,-3.2,60,12.5,37.5],
[-3.6,-2.8,61,12.5,37.5],
[0.6,-7.5,61,87.5,37.5],
[-20.1,2.3,61,12.5,37.5],
[0,-5.4,61,87.5,62.5],
[-6.7,-17.6,61,12.5,37.5],
[-26.7,1.8,61,87.5,37.5],
[4.3,20.1,61,62.5,37.5],
[-12.1,-3.1,61,12.5,37.5],
[1.6,2.4,62,62.5,12.5],
[-2.5,-18.6,62,37.5,12.5],
[11.5,-0.6,64,87.5,37.5],
[-9,0.4,64,37.5,37.5],
[17,0.9,64,12.5,37.5],
[13.6,18.1,64,12.5,62.5],
[7.7,-4.2,64,62.5,12.5],
[-7.2,-5.7,64,37.5,37.5],
[19,21.3,64,12.5,62.5],
[-8.9,14.4,65,87.5,37.5],
[-5,-3.4,65,12.5,37.5],
[33.3,-1.6,65,87.5,37.5],
[-10.1,0.2,66,87.5,37.5],
[0.4,7.4,66,12.5,37.5],
[19.8,-0.5,66,37.5,12.5],
[28,2.9,66,87.5,37.5],
[-14.5,7.3,66,62.5,12.5],
[6.2,20.3,66,87.5,37.5],
[-5.3,-0.6,67,62.5,12.5],
[-14,-14,67,12.5,37.5],
[5.2,16.4,68,12.5,62.5],
[1.4,13.4,68,87.5,37.5],
[-2.8,-5,68,87.5,37.5],
[-0.1,9.4,68,87.5,62.5],
[-15.1,-0.2,68,87.5,37.5],
[-9.5,-14.7,68,62.5,12.5],
[11.4,-15.5,68,62.5,62.5],
[-15,-6.7,69,87.5,62.5],
[-1.4,12.3,7,62.5,62.5],
[8.1,21.3,7,12.5,37.5],
[13.3,-17.6,7,37.5,12.5],
[41.9,15.8,7,62.5,37.5],
[-3.3,-5.2,7,87.5,37.5],
[-14.9,3.8,7,62.5,37.5],
[10.3,11.1,71,87.5,37.5],
[28.5,10.5,71,12.5,37.5],
[12,20.2,72,87.5,62.5],
[-25.5,-7.2,72,87.5,37.5],
[-22.1,1,72,37.5,37.5],
[24.3,10.7,72,62.5,37.5],
[-6.7,4.6,72,37.5,62.5],
[-50.4,-7.5,72,37.5,37.5],
[-4.4,14.5,72,12.5,62.5],
[27.8,4.8,72,12.5,37.5],
[-25.1,54.2,74,50,87.5],
[20.5,3.5,74,37.5,37.5],
[-1,-12.3,74,62.5,12.5],
[-27.4,13.2,74,62.5,37.5],
[11.2,-3.6,74,12.5,37.5],
[26.3,-4.6,74,37.5,37.5],
[31.7,7.5,74,62.5,37.5],
[-9.8,0.1,75,87.5,62.5],
[-18.8,9.1,75,87.5,37.5],
[21.3,2.3,76,62.5,62.5],
[9.5,16.6,76,62.5,37.5],
[-14,-2.3,76,87.5,37.5],
[19.1,-11.6,76,37.5,37.5],
[28.5,6.1,76,37.5,62.5],
[-17,-6.1,76,87.5,62.5],
[14.8,4,76,37.5,62.5],
[-26.6,0,76,87.5,62.5],
[1.2,-14.5,76,37.5,37.5],
[-12.8,-13.4,76,37.5,62.5],
[21.7,10.3,76,50,87.5],
[14.6,-8.6,77,62.5,62.5],
[-10,-14.3,77,87.5,62.5],
[-11.2,11.8,8,87.5,62.5],
[4.7,-7.3,8,62.5,37.5],
[-21.5,5.4,8,62.5,37.5],
[-23.8,4.5,8,37.5,12.5],
[16.5,56.9,8,50,87.5],
[-10.9,2.5,8,62.5,12.5],
[6.4,5.7,80,37.5,62.5],
[-36.7,-12.8,80,87.5,62.5],
[-2.9,-15.1,80,62.5,62.5],
[15.6,4.4,81,12.5,62.5],
[-7.6,-5.1,81,12.5,37.5],
[16.7,-0.6,81,12.5,62.5],
[41.1,-6,81,37.5,37.5],
[-13.9,6.7,81,87.5,62.5],
[13.9,5,81,12.5,37.5],
[-8.4,-5.9,81,87.5,37.5],
[6.8,8.3,81,12.5,37.5],
[-2.4,-6.3,81,87.5,37.5],
[-15.3,3,81,87.5,62.5],
[13.5,-1.5,81,12.5,37.5],
[-2.4,5.5,81,87.5,62.5],
[-15.1,2.8,82,87.5,62.5],
[-17.5,6.3,82,87.5,62.5],
[10.7,1.4,82,12.5,37.5],
[-5,9,82,87.5,37.5],
[-2.8,-15.3,82,87.5,37.5],
[-10.1,-3.2,82,12.5,37.5],
[-31,-7.4,82,87.5,62.5],
[-24.7,10.3,82,62.5,62.5],
[17,11.1,82,87.5,62.5],
[7.5,-8.9,84,12.5,37.5],
[40.3,-0.9,84,37.5,37.5],
[-9.7,8,84,87.5,62.5],
[9.7,6.8,84,87.5,62.5],
[20.6,7.3,85,37.5,37.5],
[21,0.2,85,12.5,37.5],
[-0.6,13.1,85,87.5,37.5],
[0.1,-9.7,85,12.5,37.5],
[-0.8,-13,85,87.5,37.5],
[-2.8,16.3,85,87.5,62.5],
[-3.6,-3.4,85,62.5,37.5],
[10,2.3,85,87.5,37.5],
[-4.9,18.5,85,62.5,37.5],
[-31.8,-7.7,85,12.5,37.5],
[10.1,16.9,86,87.5,62.5],
[-4.2,3.9,87,87.5,62.5],
[-14.5,4.1,88,87.5,62.5],
[-22.4,-1.3,89,87.5,37.5],
[15.4,2.6,89,87.5,37.5],
[8.7,-4.4,9,12.5,37.5],
[-25.3,12.2,9,37.5,37.5],
[11.4,-0.1,9,37.5,12.5],
[13.6,-2.8,91,62.5,37.5],
[-14.5,2.2,91,87.5,37.5],
[17.5,9.7,91,37.5,37.5],
[-10.9,6,91,62.5,37.5],
[-4.5,10.3,92,37.5,37.5],
[21.4,-18.1,92,62.5,37.5],
[13.9,9.5,92,50,87.5],
[18.5,12.4,92,87.5,62.5],
[-25.8,10.5,92,87.5,37.5],
[14,12.7,92,37.5,37.5],
[-18.1,5.6,93,62.5,62.5],
[11.6,28.6,93,12.5,62.5],
[-8.2,-0.6,93,37.5,37.5]
];
svg.selectAll("line")
.data(dataset)
.enter().append("line")
    .attr("x1", function(d) {return (x*d[3]);})
    .attr("y1", function(d) {return (y*d[4]) ;})
    .attr("x2",  function(d) {return (x*d[3]);})
    .attr("y2", function(d) {return (y*d[4]) ;})
	.attr("opacity", 1)
	.on("mouseover", function(){d3.select(this).style("stroke", "#FFD700");})
	.on("mouseout", function(){d3.select(this).style("stroke", function(d) {return color(d[2]) ;});})
	.transition()
	.delay(function(d) { return (d[2])*200 })
	.attr("x2",  function(d) {return (xScale(d[0])) + (x*d[3]);})
    .attr("y2", function(d) {return (y*d[4])-yScale((d[1])) ;})
	.style("stroke", function(d) {return color(d[2]) ;})
	.style("stroke-width", "2");
	
	mins = 
	[
	"1",
"2",
"3",
"4",
"5",
"6",
"7",
"8",
"9",
"10",
"11",
"12",
"13",
"14",
"15",
"16",
"17",
"18",
"19",
"20",
"21",
"22",
"23",
"24",
"25",
"26",
"GOAL",
"27",
"28",
"29",
"30",
"31",
"32",
"33",
"34",
"35",
"36",
"37",
"GOAL",
"38",
"39",
"GOAL",
"40",
"41",
"42",
"43",
"44",
"45",
"46",
"47",
"GOAL",
"48",
"49",
"50",
"51",
"52",
"53",
"54",
"55",
"56",
"57",
"58",
"59",
"60",
"61",
"62",
"63",
"GOAL",
"64",
"65",
"66",
"67",
"68",
"69",
"70",
"71",
"72",
"73",
"74",
"75",
"76",
"77",
"78",
"79",
"80",
"81",
"82",
"83",
"84",
"85",
"86",
"87",
"88",
"89",
"90",
"91",
"92",
"93",
"94"

	]
;
	
	
// Add the minute label; the value is set on transition.
svg.selectAll("text")
.data(mins)
.enter().append("text")
    .attr("class", "year label")
    .attr("y", (x*6.25))
    .attr("x", 0)
	.attr("fill","#2E3D4C")
	.attr("font-size",(x*6.25)+ "px")
	.transition()
	.attr("fill","#FFFFFF")
	.delay(function(d,i) { return i*(18800/94) })
	.text(function(d) {return (d) ;});
	


	
	
	
	
</script>


</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<title>MCFC Analytics with d3.js</title>
<style>

@import url(style.css);

@font-face{font-family:danx;src:url('http://www.24-the-movie.com/Barclays Premier League.ttf')}

#circle circle {
  fill: none;
  pointer-events: all;
}

.group path {
  fill-opacity: .2;
}

path.chord {
  stroke: #000;
  stroke-width: .25px;
}

#circle:hover path.fade {
  display: none;
}

</style>

<header>
  <a href="http://bost.ocks.org/mike/uberdata/" rel="author">Based on previous work by Mike Bostock</a>
</header>

<h1>Passing Analysis using d3.js</h1>

 
<script src="http://d3js.org/d3.v2.min.js"></script>
<script>

var width = 720,
    height = 720,
    outerRadius = Math.min(width, height) / 2 - 10,
    innerRadius = outerRadius - 24;

var formatPercent = d3.format(".1%");

var arc = d3.svg.arc()
    .innerRadius(innerRadius)
    .outerRadius(outerRadius);

var layout = d3.layout.chord()
    .padding(.04)
    .sortSubgroups(d3.descending)
    .sortChords(d3.ascending);

var path = d3.svg.chord()
    .radius(innerRadius);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("id", "circle")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

svg.append("circle")
    .attr("r", outerRadius);

d3.csv("cities.csv", function(cities) {
  d3.json("matrix.json", function(matrix) {

    // Compute the chord layout.
    layout.matrix(matrix);

    // Add a group per neighborhood.
    var group = svg.selectAll(".group")
        .data(layout.groups)
      .enter().append("g")
        .attr("class", "group")
        .on("mouseover", mouseover);

    // Add a mouseover title.
    group.append("title").text(function(d, i) {
      return cities[i].name + ": " + formatPercent(d.value) + " of passes";
    });

    // Add the group arc.
    var groupPath = group.append("path")
        .attr("id", function(d, i) { return "group" + i; })
        .attr("d", arc)
        .style("fill", function(d, i) { return cities[i].color; });

    // Add a text label.
    var groupText = group.append("text")
        .attr("x", 6)
        .attr("dy", 15);

    groupText.append("textPath")
        .attr("xlink:href", function(d, i) { return "#group" + i; })
        .text(function(d, i) { return cities[i].name; });

    // Remove the labels that don't fit. :(
    groupText.filter(function(d, i) { return groupPath[0][i].getTotalLength() / 2 - 16 < this.getComputedTextLength(); })
        .remove();

    // Add the chords.
    var chord = svg.selectAll(".chord")
        .data(layout.chords)
      .enter().append("path")
        .attr("class", "chord")
        .style("fill", function(d) { return cities[d.source.index].color; })
        .attr("d", path);

    // Add an elaborate mouseover title for each chod.
    chord.append("title").text(function(d) {
      return cities[d.source.index].name
          + " to " + cities[d.target.index].name
          + ": " + formatPercent(d.source.value)
          + "\n" + cities[d.target.index].name
          + " to " + cities[d.source.index].name
          + ": " + formatPercent(d.target.value);
    });

    function mouseover(d, i) {
      chord.classed("fade", function(p) {
        return p.source.index != i
            && p.target.index != i;
      });
    }
  });
});

</script>



<footer>
  <aside>Sept 16 2012</aside>
  Dan J Harrington - @danjharrington
</footer>
</br>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Crazy Rhythms History</title>
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<style type="text/css">
			body {
			  font: 10px sans-serif;
			}
			.axis {
			  font: 10px sans-serif;
			  fill: #a0a0a0;
			}
			.axis path,
			.axis line {
			  fill: none;
			  stroke: #a0a0a0;
			  shape-rendering: crispEdges;
			}
			.x.axis path {
			  display: none;
			}
			.line {
			  fill: none;
			  stroke-width: 2px;
			}
			#tooltip {
			  font: 14px sans-serif;
			}

		</style>
	</head>
	<body>
		<div id="container">
				<script type="text/javascript">
				//Javascript here
				
				//Conventional Margins start
				var margin = {top: 30, right: 160, bottom: 30, left: 40};
					width = 1000 - margin.left - margin.right,
					height = 500 - margin.top - margin.bottom;
	
				var svg = d3.select("#container").append("svg")
					.attr("width", width + margin.left + margin.right)
					.attr("height", height + margin.top + margin.bottom)
					.append("g")
					.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
				//Conventional Margins end
				
				var parseDate = d3.time.format("%Y").parse;
				
				//Scales
				var x = d3.time.scale()
					.range([0, width]);
					
				var y = d3.scale.linear()
					.range([height, 0]);
					
				//Color
				var color = d3.scale.category10();
				
				//Axes
				var xAxis = d3.svg.axis()
					.scale(x)
					.orient('bottom')
					.ticks(5);
					
				var yAxis = d3.svg.axis()
					.scale(y)
					.orient('left');
				
				//Lines
				var line = d3.svg.line()
					.x(function(d) { return x(d.Year); })
					.y(function(d) { return y(d.Record); });

				//Converts to 3-digit decimal
				var converted = d3.format(".3r");
					
				//Data load and two console logs, before and after the data.map
				d3.csv('../winPercentage.csv', function(error, data) {
				
					//Check it.				
					console.log(data)
					
					//Splits into 10 colors by owner
					color.domain(d3.keys(data[0]).filter(function(key) { return key !== 'Year'; }));
					
					data.forEach(function(d) {
						d.Year = parseDate(d.Year);
					  });
				
				var owners = color.domain().map(function(name) {
					return {
						name: name,
						values: data.map(function(d) {
							return {Year: d.Year, Record: +d[name]};
							})
						};
					});
				
				//Check it.
				console.log(owners);
				
				//x-Domain corresponds to Years 
				x.domain(d3.extent(data, function(d) {return d.Year; }));
				
				//y-Domain to min/max of winPct's
				y.domain([
					d3.min(owners, function(c) { return d3.min(c.values, function(v) { return v.Record; }); }),
					d3.max(owners, function(c) { return d3.max(c.values, function(v) { return v.Record; }); })
				])
				
				svg.append('g')
					.attr('class', 'x axis')
					.attr('transform', 'translate(0,' + height + ')')
					.call(xAxis)
					
				svg.append('g')
					.attr("class", "y axis")
					.call(yAxis)
    				.append("text")
      				.attr("transform", "rotate(-90)")
      				.attr("y", 6)
      				.attr("dy", ".71em")
      				.style("text-anchor", "end")
      				.text("Win Percentage");
      			
      			//Selects .owner class (none exist at first) and creates them as needed	
      			var owner = svg.selectAll('.owner')
      				.data(owners)
      				.enter().append('g')
      				.attr('class', 'owner');
      			
      			//Assigns each owner a line and a unique color for it	
      			owner.append('path')
      				.attr('class', 'line')
      				.attr('d', function(d) { return line(d.values); })
      				.style('stroke', function(d) { return color(d.name); });
				
				//Adds a circle to each data node
      			owner.append('g').selectAll('circle')
      				.data(function(d) {return d.values; })
      				.enter().append('circle')
      				.attr('r', 6)
      				.attr('cx', function(c) { return x(c.Year); })
      				.attr('cy', function(c) { return y(c.Record); })
      				.attr('fill', function(d) { return color(this.parentNode.__data__.name); })
      				.on('mouseover', function(d) {
      					var xTip = parseFloat(d3.select(this).attr('cx'));
      					var yTip = parseFloat(d3.select(this).attr('cy'));
      					
      					svg.append('text')
      						.attr('id', 'tooltip')
							.attr('x', xTip + 5) 
							.attr('y', yTip - 10)
							.attr('fill', 'black')
							.text(converted(d.Record));
						})
						
					.on('mouseout', function() {
      					d3.select('#tooltip').remove()
      				});
      			
      			//Adds the names at the end
      			owner.append("text")
					.datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
					.attr("transform", function(d) { return "translate(" + x(d.value.Year) + "," + y(d.value.Record) + ")"; })
					.attr('class', 'labels')
					.attr("x", 5)
					.attr("dy", 15)
					.attr('fill', function(d) { return color(this.parentNode.__data__.name); })
					.text(function(d) { return d.name; });

				});
				</script>
		</div>
	</body>
</html>

<!DOCTYPE html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
		<title>Media Plan</title>
				<script type="text/javascript" src="http://mbostock.github.com/d3/d3.v2.js"></script>
		<style type="text/css">
		@font-face{font-family:danx;src:url('http://www.24-the-movie.com/dandelion in the spring.ttf')}
		
		
		h1 {
font-size: 22px;
font-family:'lucida sans',verdana, geneva, lucida, 'lucida grande', arial, helvetica, sans-serif;
display: inline;
margin-left:200px;
color:#4169E1;
}
		
		p {
		 font-size: 11px;
font-family:'lucida sans',verdana, geneva, lucida, 'lucida grande', arial, helvetica, sans-serif;
margin-left:200px;
}
		
		
		.chart {
			shape-rendering: crispEdges;
		}

		.mini text {
			font: 9px 'lucida sans',tahoma,sans-serif;	
		}

		.main text {
			font: 12px 'lucida sans',tahoma,sans-serif;	
		}

		.miniItem0 {
			fill: lawngreen;
			stroke-width: 6;	
		}

		.miniItem1 {
			fill: magenta;
			fill-opacity: .7;
			stroke-width: 6;	
		}

		.miniItem2 {
			fill: dodgerblue;
			fill-opacity: .7;
			stroke-width: 6;	
		}
		
		.miniItem3 {
			fill: gold;
			fill-opacity: .7;
			stroke-width: 6;	
		}
		
		
		.miniItem4 {
			fill: skyblue;
			fill-opacity: .7;
			stroke-width: 6;	
		}
		
			.miniItem5 {
			fill: yellowgreen;
			fill-opacity: .7;
			stroke-width: 6;	
		}
		
		
			.miniItem6 {
			fill: deepskyblue;
			fill-opacity: .7;
			stroke-width: 6;	
		}
		
		
		
			.miniItem7 {
			fill: pink;
			fill-opacity: .7;
			stroke-width: 6;	
		}
		
		
		
		
		
		
		
		
		
		

		.brush .extent {
			stroke: gray;
			fill: dodgerblue;
			fill-opacity: .365;
		}
		</style>
	</head>
	<body>
	<h1 >Proposed Media Plan</h1>
	<p>The below visual shows a proposed media plan.  Use the small chart at the very point (that shows everything) to make zoomed in selections on the top visual.  <b>This won't work in Internet Explorer versions 8 and below.</b><em>  Click on the mini visual at the bottom to get started...</em></p>
		<script type="text/javascript">
		//data
		var lanes = ["TV","Press","OOH","Radio","Digital","Mobile","Cinema","VoD"],
			laneLength = lanes.length,
			items = [{"lane": 0, "id": "£16m", "start": 2, "end": 25},
			         {"lane": 1, "id": "£566k", "start": 5, "end": 7},
					{"lane": 2, "id": "£386k", "start": 4, "end": 7},
					{"lane": 3, "id": "£4.4m", "start": 2, "end": 25},
					{"lane": 4, "id": "£1.9m", "start": 2, "end": 25},
					{"lane": 5, "id": "£506k", "start": 2, "end": 25},
					{"lane": 6, "id": "£254k", "start": 4, "end": 5},
					{"lane": 7, "id": "£819k", "start": 2, "end": 25}
				
					
					
					
					]
			timeBegin = 0,
			timeEnd = 25;
		</script>
		<script type="text/javascript">
		var m = [50, 15, 15, 200], //top right bottom left
			w = 1100 - m[1] - m[3],
			h = 700 - m[0] - m[2],
			miniHeight = laneLength * 12 + 50,
			mainHeight = h - miniHeight - 50;
			padding = 10;

		//scales
		var x = d3.scale.linear()
				.domain([timeBegin, timeEnd])
				.range([0, w]);
		var x1 = d3.scale.linear()
				.range([0, w]);
		var y1 = d3.scale.linear()
				.domain([0, laneLength])
				.range([0, mainHeight]);
		var y2 = d3.scale.linear()
				.domain([0, laneLength])
				.range([0, miniHeight]);

		var chart = d3.select("body")
					.append("svg")
					.attr("width", w + m[1] + m[3])
					.attr("height", h + m[0] + m[2])
					.attr("class", "chart");
		
		chart.append("defs").append("clipPath")
			.attr("id", "clip")
			.append("rect")
			.attr("width", w)
			.attr("height", mainHeight);

		var main = chart.append("g")
					.attr("transform", "translate(" + m[3] + "," + m[0] + ")")
					.attr("width", w)
					.attr("height", mainHeight)
					.attr("class", "main");

		var mini = chart.append("g")
					.attr("transform", "translate(" + m[3] + "," + (mainHeight + m[0]) + ")")
					.attr("width", w)
					.attr("height", miniHeight)
					.attr("class", "mini");
		
		//main lanes and texts
		main.append("g").selectAll(".laneLines")
			.data(items)
			.enter().append("line")
			.attr("x1", m[1])
			.attr("y1", function(d) {return y1(d.lane);})
			.attr("x2", w)
			.attr("y2", function(d) {return y1(d.lane);})
			.attr("stroke", "lightgray")

		main.append("g").selectAll(".laneText")
			.data(lanes)
			.enter().append("text")
			.text(function(d) {return d;})
			.attr("x", -m[1])
			.attr("y", function(d, i) {return y1(i + .5);})
			.attr("dy", ".5ex")
			.attr("text-anchor", "end")
			.attr("class", "laneText");
		
		//mini lanes and texts
		mini.append("g").selectAll(".laneLines")
			.data(items)
			.enter().append("line")
			.attr("x1", m[1])
			.attr("y1", function(d) {return y2(d.lane);})
			.attr("x2", w)
			.attr("y2", function(d) {return y2(d.lane);})
			.attr("stroke", "lightgray");

		mini.append("g").selectAll(".laneText")
			.data(lanes)
			.enter().append("text")
			.text(function(d) {return d;})
			.attr("x", -m[1])
			.attr("y", function(d, i) {return y2(i + .5);})
			.attr("dy", ".5ex")
			.attr("text-anchor", "end")
			.attr("class", "laneText");

		var itemRects = main.append("g")
							.attr("clip-path", "url(#clip)");
		
		//mini item rects
		mini.append("g").selectAll("miniItems")
			.data(items)
			.enter().append("rect")
			.attr("class", function(d) {return "miniItem" + d.lane;})
			.attr("x", function(d) {return x(d.start);})
			.attr("y", function(d) {return y2(d.lane + .5) - 5;})
			.attr("width", function(d) {return x(d.end - d.start);})
			.attr("height", 10);

		//mini labels
		mini.append("g").selectAll(".miniLabels")
			.data(items)
			.enter().append("text")
			.text(function(d) {return d.id;})
			.attr("x", function(d) {return x(d.start);})
			.attr("y", function(d) {return y2(d.lane + .5);})
			.attr("dy", ".5ex");

		//brush
		var brush = d3.svg.brush()
							.x(x)
							.on("brush", display);

		mini.append("g")
			.attr("class", "x brush")
			.call(brush)
			.selectAll("rect")
			.attr("y", 1)
			.attr("height", miniHeight - 1);

		display();
		
		function display() {
			var rects, labels,
				minExtent = brush.extent()[0],
				maxExtent = brush.extent()[1],
				visItems = items.filter(function(d) {return d.start < maxExtent && d.end > minExtent;});

			mini.select(".brush")
				.call(brush.extent([minExtent, maxExtent]));

			x1.domain([minExtent, maxExtent]);

			//update main item rects
			rects = itemRects.selectAll("rect")
			        .data(visItems, function(d) { return d.id; })
				.attr("x", function(d) {return x1(d.start);})
				.attr("width", function(d) {return x1(d.end) - x1(d.start);});
			
			rects.enter().append("rect")
				.attr("class", function(d) {return "miniItem" + d.lane;})
				.attr("x", function(d) {return x1(d.start);})
				.attr("y", function(d) {return y1(d.lane) + 10;})
				.attr("width", function(d) {return x1(d.end) - x1(d.start);})
				.attr("height", function(d) {return .8 * y1(1);});

			rects.exit().remove();

			//update the item labels
			labels = itemRects.selectAll("text")
				.data(visItems, function (d) { return d.id; })
				.attr("x", function(d) {return x1(Math.max(d.start, minExtent) + 2);});

			labels.enter().append("text")
				.text(function(d) {return d.id;})
				.attr("x", function(d) {return x1(Math.max(d.start, minExtent));})
				.attr("y", function(d) {return y1(d.lane + .5);})
				.attr("text-anchor", "start");

			labels.exit().remove();
			
	//Define X axis
			var xAxis = d3.svg.axis()
							  .scale(x1)
							  .orient("bottom");
							  
							  
				//Create X axis
			svg.append("g")
				.call(xAxis);			  
							  

		}
		
		</script>
	</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

/*
.x.axis path {
  display: none;
}
*/

.line {
  stroke: black;
  fill: none;
  stroke-width: 0.75px;
}

.line.line0 {
  stroke: steelblue;
}

.line.line1 {
  stroke: indianred;
}

.overlay {
  fill: none;
  pointer-events: all;
}

.focus circle {
  fill: none;
}

.focus circle.y0 {
  stroke: blue;
}

.focus circle.y1 {
  stroke: red;
}

.focus line {
  stroke: purple;
  shape-rendering: crispEdges;
}

.focus line.y0 {
  stroke: steelblue;
  stroke-dasharray: 3 3;
  opacity: .5;
}

.focus line.y1 {
  stroke: indianred;
  stroke-dasharray: 3 3;
  opacity: .5;
}

.brush .extent {
  stroke: #fff;
  fill-opacity: .125;
  shape-rendering: crispEdges;
}
</style>
<body>
<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
<script>

var main_margin = {top: 20, right: 80, bottom: 100, left: 40},
    mini_margin = {top: 430, right: 80, bottom: 20, left: 40},
    main_width = 960 - main_margin.left - main_margin.right,
    main_height = 500 - main_margin.top - main_margin.bottom,
    mini_height = 500 - mini_margin.top - mini_margin.bottom;

var formatDate = d3.time.format("%H:%M"),
    parseDate = formatDate.parse,
    bisectDate = d3.bisector(function(d) { return d.Uhrzeit; }).left,
    formatOutput0 = function(d) { return formatDate(d.Uhrzeit) + " - " + d.Durchschn + " ms"; },
    formatOutput1 = function(d) { return formatDate(d.Uhrzeit) + " - " + d.Anz; };

var main_x = d3.time.scale()
    .range([0, main_width]),
    mini_x = d3.time.scale()
    .range([0, main_width]);

var main_y0 = d3.scale.sqrt()
    .range([main_height, 0]),
    main_y1 = d3.scale.sqrt()
    .range([main_height, 0]),
    mini_y0 = d3.scale.sqrt()
    .range([mini_height, 0]),
    mini_y1 = d3.scale.sqrt()
    .range([mini_height, 0]);

var main_xAxis = d3.svg.axis()
    .scale(main_x)
    .tickFormat(d3.time.format("%H:%M"))
    .orient("bottom"),
    mini_xAxis = d3.svg.axis()
    .scale(mini_x)
    .tickFormat(d3.time.format("%H:%M"))
    .orient("bottom");

var main_yAxisLeft = d3.svg.axis()
    .scale(main_y0)
    .orient("left");
    main_yAxisRight = d3.svg.axis()
    .scale(main_y1)
    .orient("right");

var brush = d3.svg.brush()
    .x(mini_x)
    .on("brush", brush);

var main_line0 = d3.svg.line()
    .interpolate("cardinal")
    .x(function(d) { return main_x(d.Uhrzeit); })
    .y(function(d) { return main_y0(d.Durchschn); });

var main_line1 = d3.svg.line()
    .interpolate("cardinal")
    .x(function(d) { return main_x(d.Uhrzeit); })
    .y(function(d) { return main_y1(d.Anz); });

var mini_line0 = d3.svg.line()
    .x(function(d) { return mini_x(d.Uhrzeit); })
    .y(function(d) { return mini_y0(d.Durchschn); });

var mini_line1 = d3.svg.line()
    .x(function(d) { return mini_x(d.Uhrzeit); })
    .y(function(d) { return mini_y1(d.Anz); });

var svg = d3.select("body").append("svg")
    .attr("width", main_width + main_margin.left + main_margin.right)
    .attr("height", main_height + main_margin.top + main_margin.bottom);

svg.append("defs").append("clipPath")
    .attr("id", "clip")
  .append("rect")
    .attr("width", main_width)
    .attr("height", main_height);

var main = svg.append("g")
    .attr("transform", "translate(" + main_margin.left + "," + main_margin.top + ")");

var mini = svg.append("g")
    .attr("transform", "translate(" + mini_margin.left + "," + mini_margin.top + ")");

d3.csv("data.txt", function(error, data) {
  data.forEach(function(d) {
    d.Uhrzeit = parseDate(d.Uhrzeit);
    d.Durchschn = +d.Durchschn;
    d.Anz = +d.Anz;
  });

  data.sort(function(a, b) {
    return a.Uhrzeit - b.Uhrzeit;
  });

  main_x.domain([data[0].Uhrzeit, data[data.length - 1].Uhrzeit]);
  main_y0.domain(d3.extent(data, function(d) { return d.Durchschn; }));
  //main_y0.domain([0.1, d3.max(data, function(d) { return d.Durchschn; })]);
  main_y1.domain(d3.extent(data, function(d) { return d.Anz; }));
  mini_x.domain(main_x.domain());
  mini_y0.domain(main_y0.domain());
  mini_y1.domain(main_y1.domain());

  main.append("path")
      .datum(data)
      .attr("clip-path", "url(#clip)")
      .attr("class", "line line0")
      .attr("d", main_line0);

  main.append("path")
      .datum(data)
      .attr("clip-path", "url(#clip)")
      .attr("class", "line line1")
      .attr("d", main_line1);

  main.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + main_height + ")")
      .call(main_xAxis);

  main.append("g")
      .attr("class", "y axis axisLeft")
      .call(main_yAxisLeft)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Ã˜ AWZ (ms)");

  main.append("g")
      .attr("class", "y axis axisRight")
      .attr("transform", "translate(" + main_width + ", 0)")
      .call(main_yAxisRight)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", -12)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Anzahl");

  mini.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + mini_height + ")")
      .call(main_xAxis);

  mini.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", mini_line0);

  mini.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", mini_line1);

  mini.append("g")
      .attr("class", "x brush")
      .call(brush)
    .selectAll("rect")
      .attr("y", -6)
      .attr("height", mini_height + 7);

  var focus = main.append("g")
      .attr("class", "focus")
      .style("display", "none");

  // Anzeige auf der Zeitleiste
  focus.append("line")
      .attr("class", "x")
      .attr("y1", main_y0(0) - 6)
      .attr("y2", main_y0(0) + 6)

  // Anzeige auf der linken Leiste
  focus.append("line")
      .attr("class", "y0")
      .attr("x1", main_width - 6) // nach links
      .attr("x2", main_width + 6); // nach rechts

  // Anzeige auf der rechten Leiste
  focus.append("line")
      .attr("class", "y1")
      .attr("x1", main_width - 6)
      .attr("x2", main_width + 6);

  focus.append("circle")
      .attr("class", "y0")
      .attr("r", 4);

  focus.append("text")
      .attr("class", "y0")
      .attr("dy", "-1em");

  focus.append("circle")
      .attr("class", "y1")
      .attr("r", 4);

  focus.append("text")
      .attr("class", "y1")
      .attr("dy", "-1em");

  main.append("rect")
      .attr("class", "overlay")
      .attr("width", main_width)
      .attr("height", main_height)
      .on("mouseover", function() { focus.style("display", null); })
      .on("mouseout", function() { focus.style("display", "none"); })
      .on("mousemove", mousemove);

  function mousemove() {
    var x0 = main_x.invert(d3.mouse(this)[0]),
        i = bisectDate(data, x0, 1),
        d0 = data[i - 1],
        d1 = data[i],
        d = x0 - d0.Uhrzeit > d1.Uhrzeit - x0 ? d1 : d0;
    focus.select("circle.y0").attr("transform", "translate(" + main_x(d.Uhrzeit) + "," + main_y0(d.Durchschn) + ")");
    focus.select("text.y0").attr("transform", "translate(" + main_x(d.Uhrzeit) + "," + main_y0(d.Durchschn) + ")").text(formatOutput0(d));
    focus.select("circle.y1").attr("transform", "translate(" + main_x(d.Uhrzeit) + "," + main_y1(d.Anz) + ")");
    focus.select("text.y1").attr("transform", "translate(" + main_x(d.Uhrzeit) + "," + main_y1(d.Anz) + ")").text(formatOutput1(d));
    focus.select(".x").attr("transform", "translate(" + main_x(d.Uhrzeit) + ",0)");
    focus.select(".y0").attr("transform", "translate(" + main_width * -1 + ", " + main_y0(d.Durchschn) + ")").attr("x2", main_width + main_x(d.Uhrzeit));
    focus.select(".y1").attr("transform", "translate(0, " + main_y1(d.Anz) + ")").attr("x1", main_x(d.Uhrzeit));
  }
});

function brush() {
  main_x.domain(brush.empty() ? mini_x.domain() : brush.extent());
  main.select(".line0").attr("d", main_line0);
  main.select(".line1").attr("d", main_line1);
  main.select(".x.axis").call(main_xAxis);
}
</script>
<!DOCTYPE html>
<meta charset="utf-8">
<title>Web site visitors</title>
<style>
@import url(d3.parsets.css);

body {
  font-family: sans-serif;
  font-size: 16px;
  width: 960px;
  margin: 1em auto;
  position: relative;
}
h1, h2, .dimension text {
  text-align: center;
  font-family: "lucida sans","PT Sans", Helvetica;
  font-weight: 300;
}
h1 {
  font-size: 2em;
  margin: .5em 0 0 0;
}
h2 {
  font-size: 2em;
  margin: 1em 0 0.5em;
  border-bottom: solid #ccc 1px;
}
p.meta, p.footer {
  font-size: 13px;
  color: #333;
}
p.meta {
  text-align: center;
}

text.icicle { pointer-events: none; }

.options { font-size: 12px; text-align: center; padding: 5px 0; }
.curves { float: left; }
.source { float: right; }
pre, code { font-family: "Menlo", monospace; }

.html .value,
.javascript .string,
.javascript .regexp {
  color: #756bb1;
}

.html .tag,
.css .tag,
.javascript .keyword {
  color: #3182bd;
}

.comment {
  color: #636363;
}

.html .doctype,
.javascript .number {
  color: #31a354;
}

.html .attribute,
.css .attribute,
.javascript .class,
.javascript .special {
  color: #e6550d;
}
</style>

<body>
<h1>Web Site visitors</h1>
<p class="meta">A visualisation technique for multidimensional categorical data.
<div id="vis"><noscript></noscript></div>





<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="d3.parsets.js"></script>
<script src="http://www.tips-for-excel.com/d3test/Titanic/highlight.min.js"></script>
<script>
var chart = d3.parsets()
    .dimensions(["Continent", "Type", "Medium", "Browser"]);

var vis = d3.select("#vis").append("svg")
    .attr("width", chart.width())
    .attr("height", chart.height());

var partition = d3.layout.partition()
    .sort(null)
    .size([chart.width(), chart.height() * 5 / 4])
    .children(function(d) { return d.children ? d3.values(d.children) : null; })
    .value(function(d) { return d.count; });

var ice = false;

function curves() {
  var t = vis.transition().duration(500);
  if (ice) {
    t.delay(1000);
    icicle();
  }
  t.call(chart.tension(this.checked ? .5 : 1));
}

d3.csv("data.csv", function(csv) {
  vis.datum(csv).call(chart);

  window.icicle = function() {
    var newIce = this.checked,
        tension = chart.tension();
    if (newIce === ice) return;
    if (ice = newIce) {
      var dimensions = [];
      vis.selectAll("g.dimension")
         .each(function(d) { dimensions.push(d); });
      dimensions.sort(function(a, b) { return a.y - b.y; });
      var root = d3.parsets.tree({children: {}}, csv, dimensions.map(function(d) { return d.name; }), function() { return 1; }),
          nodes = partition(root),
          nodesByPath = {};
      nodes.forEach(function(d) {
        var path = d.data.name,
            p = d;
        while ((p = p.parent) && p.data.name) {
          path = p.data.name + "\0" + path;
        }
        if (path) nodesByPath[path] = d;
      });
      var data = [];
      vis.on("mousedown.icicle", stopClick, true)
        .select(".ribbon").selectAll("path")
          .each(function(d) {
            var node = nodesByPath[d.path],
                s = d.source,
                t = d.target;
            s.node.x0 = t.node.x0 = 0;
            s.x0 = t.x0 = node.x;
            s.dx0 = s.dx;
            t.dx0 = t.dx;
            s.dx = t.dx = node.dx;
            data.push(d);
          });
      iceTransition(vis.selectAll("path"))
          .attr("d", function(d) {
            var s = d.source,
                t = d.target;
            return ribbonPath(s, t, tension);
          })
          .style("stroke-opacity", 1);
      iceTransition(vis.selectAll("text.icicle")
          .data(data)
        .enter().append("text")
          .attr("class", "icicle")
          .attr("text-anchor", "middle")
          .attr("dy", ".3em")
          .attr("transform", function(d) {
            return "translate(" + [d.source.x0 + d.source.dx / 2, d.source.dimension.y0 + d.target.dimension.y0 >> 1] + ")rotate(90)";
          })
          .text(function(d) { return d.source.dx > 15 ? d.node.name : null; })
          .style("opacity", 1e-6))
          .style("opacity", 1);
      iceTransition(vis.selectAll("g.dimension rect, g.category")
          .style("opacity", 1))
          .style("opacity", 1e-6)
          .each("end", function() { d3.select(this).attr("visibility", "hidden"); });
      iceTransition(vis.selectAll("text.dimension"))
          .attr("transform", "translate(0,-5)");
      vis.selectAll("tspan.sort").style("visibility", "hidden");
    } else {
      vis.on("mousedown.icicle", null)
        .select(".ribbon").selectAll("path")
          .each(function(d) {
            var s = d.source,
                t = d.target;
            s.node.x0 = s.node.x;
            s.x0 = s.x;
            s.dx = s.dx0;
            t.node.x0 = t.node.x;
            t.x0 = t.x;
            t.dx = t.dx0;
          });
      iceTransition(vis.selectAll("path"))
          .attr("d", function(d) {
            var s = d.source,
                t = d.target;
            return ribbonPath(s, t, tension);
          })
          .style("stroke-opacity", null);
      iceTransition(vis.selectAll("text.icicle"))
          .style("opacity", 1e-6).remove();
      iceTransition(vis.selectAll("g.dimension rect, g.category")
          .attr("visibility", null)
          .style("opacity", 1e-6))
          .style("opacity", 1);
      iceTransition(vis.selectAll("text.dimension"))
          .attr("transform", "translate(0,-25)");
      vis.selectAll("tspan.sort").style("visibility", null);
    }
  };
  d3.select("#icicle")
      .on("change", icicle)
      .each(icicle);
});

function iceTransition(g) {
  return g.transition().duration(1000);
}

function ribbonPath(s, t, tension) {
  var sx = s.node.x0 + s.x0,
      tx = t.node.x0 + t.x0,
      sy = s.dimension.y0,
      ty = t.dimension.y0;
  return (tension === 1 ? [
      "M", [sx, sy],
      "L", [tx, ty],
      "h", t.dx,
      "L", [sx + s.dx, sy],
      "Z"]
   : ["M", [sx, sy],
      "C", [sx, m0 = tension * sy + (1 - tension) * ty], " ",
           [tx, m1 = tension * ty + (1 - tension) * sy], " ", [tx, ty],
      "h", t.dx,
      "C", [tx + t.dx, m1], " ", [sx + s.dx, m0], " ", [sx + s.dx, sy],
      "Z"]).join("");
}

function stopClick() { d3.event.stopPropagation(); }

// Given a text function and width function, truncates the text if necessary to
// fit within the given width.
function truncateText(text, width) {
  return function(d, i) {
    var t = this.textContent = text(d, i),
        w = width(d, i);
    if (this.getComputedTextLength() < w) return t;
    this.textContent = "…" + t;
    var lo = 0,
        hi = t.length + 1,
        x;
    while (lo < hi) {
      var mid = lo + hi >> 1;
      if ((x = this.getSubStringLength(0, mid)) < w) lo = mid + 1;
      else hi = mid;
    }
    return lo > 1 ? t.substr(0, lo - 2) + "…" : "";
  };
}

d3.select("#file").on("change", function() {
  var file = this.files[0],
      reader = new FileReader;
  reader.onloadend = function() {
    var csv = d3.csv.parse(reader.result);
    vis.datum(csv).call(chart
        .value(csv[0].hasOwnProperty("Number") ? function(d) { return +d.Number; } : 1)
        .dimensions(function(d) { return d3.keys(d[0]).filter(function(d) { return d !== "Number"; }).sort(); }));
  };
  reader.readAsText(file);
});
</script>

<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html;charset=utf-8">
    <title>Social Dashboard</title>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.v2.js"></script>
	<script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	<link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300' rel='stylesheet' type='text/css'>

 <style type="text/css"> 



p {


font-family: 'Open Sans Condensed', cursive;
font-size: 40px;


}

 h1 {


font-family: 'Open Sans Condensed', 'arial' ,cursive;
font-size: 26px;


} 


 p.SMD {
font-size:22px;
color:black;}
  




p.right {
    text-align: right;
    position: fixed;
    max-width: 200px;
    top: 200px;
    left:800px; 
	font-size:18px;
} 



button {
   border-top: 1px solid #96d1f8;
   background: #65a9d7;
   background: -webkit-gradient(linear, left top, left bottom, from(#3e779d), to(#65a9d7));
   background: -webkit-linear-gradient(top, #3e779d, #65a9d7);
   background: -moz-linear-gradient(top, #3e779d, #65a9d7);
   background: -ms-linear-gradient(top, #3e779d, #65a9d7);
   background: -o-linear-gradient(top, #3e779d, #65a9d7);
   padding: 5px 10px;
   -webkit-border-radius: 0px;
   -moz-border-radius: 0px;
   border-radius: 0px;
   -webkit-box-shadow: rgba(0,0,0,1) 0 1px 0;
   -moz-box-shadow: rgba(0,0,0,1) 0 1px 0;
   box-shadow: rgba(0,0,0,1) 0 1px 0;
   text-shadow: rgba(0,0,0,.4) 0 1px 0;
   color: white;
   font-size: 18px;
   font-family: 'Open Sans Condensed',Georgia, serif;
   text-decoration: none;
   vertical-align: middle;
   }
button:hover {
   border-top-color: #28597a;
   background: #28597a;
   color: #ccc;
   }
button:active {
   border-top-color: #1b435e;
   background: #1b435e;
   }
   
  #bimps {
   
   position: fixed;
    top: 80px;
    left:60px; }
	
	
	  #bclicks {
   
   position: fixed;
    top: 80px;
    left:180px; }
	
	
		  #bconvs {
   
   position: fixed;
    top: 80px;
    left:255px; }
	
  
</style> 
</head> 
<body>   
<div id="banner">
    <p class = "SMD">Day Parting Test - Artemis</p>
  </div>


	<button id="bimps" onclick="myImps()">Impressions</button>
	<button id="bclicks" onclick="myClicks()">Clicks</button>
	<button id="bconvs" onclick="myConvs()">Conversions</button>

<script type="text/javascript">




function myImps()
{
svg.selectAll("rect.pos1")
        .transition()
		.duration(2000)
        .attr("fill",function(d) {
			   		return p1icolor(d[2]);
			   })
			   
	svg.selectAll("rect.pos2")
        .transition()
		.duration(2000)
        .attr("fill",function(d) {
			   		return p2icolor(d[2]);
			   })		   
			   
		
}







function myClicks()
{
svg.selectAll("rect.pos1")
        .transition()
		.duration(2000)
        .attr("fill",function(d) {
			   		return p1ccolor(d[3]);
			   })
			   
	svg.selectAll("rect.pos2")
        .transition()
		.duration(2000)
        .attr("fill",function(d) {
			   		return p2ccolor(d[3]);
			   })		   
			   
 
			   


}





function myConvs()
{
svg.selectAll("rect.pos1")
        .transition()
		.duration(2000)
        .attr("fill",function(d) {
			   		return p1scolor(d[4]);
			   })
			   
	svg.selectAll("rect.pos2")
        .transition()
		.duration(2000)
        .attr("fill",function(d) {
			   		return p2scolor(d[4]);
			   })		   
			   
		
}




//Width and height
			var w = 1000;
			var h = 1000;
			
			//click color scales
			var p1ccolor = d3.scale.linear()
    .domain([0,140000])
    .range(["white","blue"]);
	
	
				var p2ccolor = d3.scale.linear()
    .domain([0,600])
    .range(["white","blue"]);
	
		
	
	//sales color scales
			var p1scolor = d3.scale.linear()
    .domain([0,11000])
    .range(["white","red"]);
	
	
				var p2scolor = d3.scale.linear()
    .domain([0,1500])
    .range(["white","red"]);
	
		

		//imps color scales
			var p1icolor = d3.scale.linear()
    .domain([0,0])
    .range(["white","green"]);
	
	
				var p2icolor = d3.scale.linear()
    .domain([0,2200000])
    .range(["white","green"]);
	
	
	
	
	
	
	
	
	
	
	
	
	
				

	
			//Create SVG element
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			svg.selectAll("pos1")
			   .data([

			   
			   
			  [100,95,0,26,6],
[100,115,0,18,12],
[100,135,0,74,13],
[100,155,0,99,11],
[100,175,0,29,15],
[100,195,0,39,2],
[100,215,0,35,16],
[120,95,0,2994,22],
[120,115,0,2973,35],
[120,135,0,5981,61],
[120,155,0,13356,62],
[120,175,0,4356,77],
[120,195,0,4305,30],
[120,215,0,3783,31],
[140,95,0,7073,40],
[140,115,0,6739,110],
[140,135,0,11042,141],
[140,155,0,23068,151],
[140,175,0,9148,245],
[140,195,0,10465,140],
[140,215,0,10090,91],
[160,95,0,10347,94],
[160,115,0,9466,231],
[160,135,0,12203,220],
[160,155,0,23910,215],
[160,175,0,12537,452],
[160,195,0,15527,208],
[160,215,0,17890,152],
[180,95,0,12363,179],
[180,115,0,10734,321],
[180,135,0,13115,279],
[180,155,0,21322,297],
[180,175,0,14913,618],
[180,195,0,17816,306],
[180,215,0,22376,246],
[200,95,0,11846,220],
[200,115,0,11258,412],
[200,135,0,24122,396],
[200,155,0,17815,380],
[200,175,0,16763,798],
[200,195,0,15199,321],
[200,215,0,22858,220],
[220,95,0,31875,609],
[220,115,0,29257,853],
[220,135,0,48509,932],
[220,155,0,41063,778],
[220,175,0,37914,1452],
[220,195,0,57317,1091],
[220,215,0,68666,669],
[240,95,0,30705,670],
[240,115,0,30951,1123],
[240,135,0,45313,1096],
[240,155,0,38773,795],
[240,175,0,39353,1604],
[240,195,0,50508,1212],
[240,215,0,55191,608],
[260,95,0,30010,686],
[260,115,0,33573,1319],
[260,135,0,45943,1211],
[260,155,0,37335,838],
[260,175,0,44394,2024],
[260,195,0,44434,1216],
[260,215,0,43996,548],
[280,95,0,27035,692],
[280,115,0,31782,1353],
[280,135,0,41293,1267],
[280,155,0,33453,824],
[280,175,0,45374,2460],
[280,195,0,41083,1397],
[280,215,0,39110,616],
[300,95,0,26452,699],
[300,115,0,33163,1591],
[300,135,0,41491,1341],
[300,155,0,32183,863],
[300,175,0,51619,2775],
[300,195,0,41301,1637],
[300,215,0,38370,604],
[320,95,0,28605,759],
[320,115,0,41093,1960],
[320,135,0,51284,1745],
[320,155,0,35602,916],
[320,175,0,69579,4091],
[320,195,0,48392,2238],
[320,215,0,39222,701],
[340,95,0,29522,761],
[340,115,0,54129,2704],
[340,135,0,62840,2254],
[340,155,0,38798,908],
[340,175,0,96388,6142],
[340,195,0,67996,3403],
[340,215,0,38969,665],
[360,95,0,31442,812],
[360,115,0,81391,4605],
[360,135,0,80061,3132],
[360,155,0,41355,1078],
[360,175,0,137988,10642],
[360,195,0,87019,5118],
[360,215,0,39346,631],
[380,95,0,34816,888],
[380,115,0,64050,3662],
[380,135,0,53337,2069],
[380,155,0,41951,1112],
[380,175,0,8668,1831],
[380,195,0,43478,2488],
[380,215,0,40365,693],
[400,95,0,38476,1030],
[400,115,0,33087,1181],
[400,135,0,36887,962],
[400,155,0,44167,1242],
[400,175,0,458,214],
[400,195,0,26914,650],
[400,215,0,41167,720],
[420,95,0,35282,963],
[420,115,0,40142,1095],
[420,135,0,41876,976],
[420,155,0,43547,1187],
[420,175,0,451,225],
[420,195,0,75727,896],
[420,215,0,34656,597],
[440,95,0,27815,704],
[440,115,0,52356,1057],
[440,135,0,56631,915],
[440,155,0,35397,992],
[440,175,0,541,211],
[440,195,0,53523,627],
[440,215,0,26212,502],
[460,95,0,8509,300],
[460,115,0,18345,382],
[460,135,0,28762,467],
[460,155,0,11006,380],
[460,175,0,276,187],
[460,195,0,19616,288],
[460,215,0,8343,186],
[480,95,0,33,33],
[480,115,0,65,46],
[480,135,0,146,97],
[480,155,0,59,52],
[480,175,0,100,92],
[480,195,0,138,88],
[480,215,0,61,30],
[500,95,0,18,19],
[500,115,0,33,13],
[500,135,0,55,29],
[500,155,0,27,34],
[500,175,0,44,48],
[500,195,0,74,0],
[500,215,0,29,1],
[520,95,0,12,0],
[520,115,0,21,0],
[520,135,0,27,1],
[520,155,0,15,0],
[520,175,0,18,0],
[520,195,0,45,0],
[520,215,0,16,0],
[540,95,0,5,0],
[540,115,0,15,0],
[540,135,0,751,0],
[540,155,0,10,0],
[540,175,0,25,0],
[540,195,0,27,0],
[540,215,0,8,0],
[560,95,0,9,0],
[560,115,0,26,0],
[560,135,0,46,0],
[560,155,0,16,0],
[560,175,0,22,0],
[560,195,0,11,0],
[560,215,0,8,0]
			   
			   
			   
			   
			   
			   
			   
			   
			   ])
			   .enter()
			   .append("rect")
			   .attr("x", function(d) {
			   		return d[0];
			   })
			   .attr("y", function(d) {
			   		return d[1];
			   })
			  .attr("height", 20)
              .attr("width", 20)
			  .style("stroke","black")
			  .style("stroke-width",0.1)
			  .attr("class", "pos1")
			   .attr("fill","white")
			   .transition()
			   .duration(1000)
			   	.attr("fill",function(d) {
			   		return p1ccolor(d[3]);
			   })

			  
			  
			  
			  		svg.selectAll("pos2")
			   .data([
		
		[100,315,0,0,14],
[100,335,0,0,15],
[100,355,0,0,12],
[100,375,0,0,19],
[100,395,0,0,3],
[100,415,0,0,20],
[120,295,243743,31,15],
[120,315,411778,60,36],
[120,335,461568,80,52],
[120,355,314242,24,64],
[120,375,574182,64,39],
[120,395,416648,43,67],
[120,415,226718,24,55],
[140,295,421237,35,58],
[140,315,722034,49,55],
[140,335,783423,58,123],
[140,355,515246,47,148],
[140,375,1163359,210,124],
[140,395,856740,84,170],
[140,415,416483,38,164],
[160,295,542680,41,99],
[160,315,997587,105,92],
[160,335,964957,65,185],
[160,355,593948,38,203],
[160,375,1669731,291,184],
[160,395,1274996,82,326],
[160,415,621055,42,285],
[180,295,610977,43,125],
[180,315,1123816,91,139],
[180,335,1088883,77,232],
[180,355,599444,35,269],
[180,375,2019351,353,244],
[180,395,1312673,92,448],
[180,415,656495,44,429],
[200,295,512840,24,135],
[200,315,1072919,99,162],
[200,335,1135946,69,268],
[200,355,579154,31,276],
[200,375,2031996,353,337],
[200,395,1317992,81,425],
[200,415,573290,55,396],
[220,295,466557,34,160],
[220,315,999926,96,177],
[220,335,1032164,67,252],
[220,355,497832,32,273],
[220,375,1996784,360,301],
[220,395,1235118,101,446],
[220,415,559306,49,391],
[240,295,481205,33,176],
[240,315,1018198,89,209],
[240,335,1050281,67,264],
[240,355,495213,36,213],
[240,375,2015906,331,323],
[240,395,1164825,96,412],
[240,415,556147,58,312],
[260,295,485944,37,123],
[260,315,1046613,86,215],
[260,335,1068578,63,204],
[260,355,531140,47,207],
[260,375,2083494,399,402],
[260,395,1191741,78,406],
[260,415,561866,61,287],
[280,295,465609,30,172],
[280,315,974151,93,222],
[280,335,957289,69,254],
[280,355,472732,27,206],
[280,375,2013523,413,428],
[280,395,1184956,106,472],
[280,415,565353,57,283],
[300,295,447512,45,193],
[300,315,1130735,103,269],
[300,335,993116,70,282],
[300,355,493181,45,212],
[300,375,1980518,424,469],
[300,395,1218515,117,499],
[300,415,612356,75,217],
[320,295,512566,56,188],
[320,315,1310281,130,365],
[320,335,1142119,81,367],
[320,355,495579,42,226],
[320,375,2180938,469,652],
[320,395,1266855,116,604],
[320,415,658887,95,256],
[340,295,493911,57,171],
[340,315,1364282,160,406],
[340,335,1094728,91,421],
[340,355,496405,37,201],
[340,375,2194516,544,905],
[340,395,1314245,150,977],
[340,415,722634,107,266],
[360,295,527488,77,183],
[360,315,1524692,166,656],
[360,335,1247827,100,720],
[360,355,564485,51,246],
[360,375,2243403,567,1424],
[360,395,1312019,133,1365],
[360,415,732574,120,267],
[380,295,615667,98,213],
[380,315,1918368,250,546],
[380,335,1456088,113,520],
[380,355,627966,84,248],
[380,375,2116066,240,1428],
[380,395,1392015,155,1005],
[380,415,731389,144,283],
[400,295,735478,154,204],
[400,315,1922541,336,268],
[400,335,1694065,155,250],
[400,355,771891,136,241],
[400,375,2283339,230,388],
[400,395,1368401,139,362],
[400,415,705295,132,260],
[420,295,707839,120,209],
[420,315,1952217,282,251],
[420,335,1689103,200,335],
[420,355,723603,96,235],
[420,375,2272418,293,469],
[420,395,1353250,125,614],
[420,415,711746,117,215],
[440,295,571214,95,157],
[440,315,1633012,240,302],
[440,335,1366803,147,402],
[440,355,601422,94,223],
[440,375,1853095,279,469],
[440,395,1147316,129,544],
[440,415,586649,103,182],
[460,295,395570,69,107],
[460,315,953318,122,179],
[460,335,908931,101,321],
[460,355,419091,54,104],
[460,375,1194244,163,329],
[460,395,909443,97,371],
[460,415,477724,65,103],
[480,295,847057,117,56],
[480,315,674680,45,120],
[480,335,392753,33,116],
[480,355,1168895,91,94],
[480,375,914333,74,181],
[480,395,302330,29,212],
[480,415,304956,28,54],
[500,295,427274,51,40],
[500,315,324172,21,54],
[500,335,255907,19,59],
[500,355,626936,41,50],
[500,375,484833,33,89],
[500,395,263470,18,17],
[500,415,243116,18,5],
[520,295,0,4,0],
[520,315,0,1,1],
[520,335,1,0,0],
[520,355,6,0,0],
[520,375,1,0,0],
[520,395,1,0,0],
[520,415,3,0,0],
[540,375,0,1,0],
[560,375,0,1,0]
		
			   ])
			   .enter()
			   .append("rect")
			   .attr("x", function(d) {
			   		return d[0];
			   })
			   .attr("y", function(d) {
			   		return d[1];
			   })
			  .attr("height", 20)
              .attr("width", 20)
			  .style("stroke","black")
			  .style("stroke-width",0.1)
			  .attr("class", "pos2")
			   .attr("fill","white")
			   .transition()
			   .duration(1000)
			   			   .attr("fill",function(d) {
			   		return p2ccolor(d[3]);
			   })
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   		   			  		svg.selectAll("labels1")
			   .data(["M","Tu","W","Th","Fr","Sa","Su"]
			)
			   .enter()
			   .append("text")
			   .attr("x", function(d,i) {
			   		return 70;
			   })
			   .attr("y", function(d,i) {
			   		return 115+(20*i);
			   })
			  .text(function(d) {
			   		return d;
			   })
			   .style("font-family","calibri")
			   .style("fill","grey")
			   .style("font-size","12px")
			   
			   			   		   			  		svg.selectAll("labels2")
			   .data(["06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","00","01","02","03","04","05"]
			)
			   .enter()
			   .append("text")
			   .attr("x", function(d,i) {
			   		return 105+(20*i);
			   })
			   .attr("y", function(d,i) {
			   		return 90;
			   })
			  .text(function(d) {
			   		return d;
			   })
			   .style("font-family","calibri")
			   .style("fill","grey")
			   .style("font-size","12px")

			   
			   
			
</script>









</body>
</html>

<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    
    <title>quick brain demo</title>
    

	<script src="http://mbostock.github.com/d3/d3.v2.js"></script>


	
</head> 

<body>   


<script>
var vis = d3.select("body").append("svg").attr("width",1000).attr("height",700)

var xscale = d3.scale.linear()
                    .domain([0, 2])
                    .range([10, 750]);
					
	var yscale = d3.scale.linear()
                    .domain([51, 52])
                    .range([690, 10]);		


var xscale2 = d3.scale.linear()
                    .domain([0, 2])
                    .range([10, 1500]);
					
	var yscale2 = d3.scale.linear()
                    .domain([51, 52])
                    .range([1380, 10]);						
					
					

 
 
 
 
				 
//This is the accessor function we talked about above
 var lineFunction = d3.svg.line()
                          .x(function(d) { return xscale(d.x); })
                          .y(function(d) { return yscale(d.y); })
                         .interpolate("linear");
						 
						 
						 
						 
						 
						 
    
							vis.append("path")
                            .attr("d", "M179.355,343.904c-10.077-2.866-21.94-1.063-34.984,3.801   c-18.508,6.902-36.351-4.063-53.9-9.366c-31.396-9.486-52.283-33.535-71.618-57.789C6.871,265.516,0.266,246.924,3.442,226.027   c1.383-9.101-1.152-18.807-2.039-28.227c-0.152-1.62-1.659-3.323-1.365-4.745c3.983-19.36,3.722-39.736,12.167-57.944   c2.24-4.83,1.177-10.198,3.774-13.989c10.593-15.457,15.094-33.767,24.101-50.147c9.865-17.941,25.539-28.315,39.635-39.533   c16.964-13.501,36.466-28.919,61.97-20.011c4.675,1.633,6.89-0.758,9.215-4.022c4.003-5.619,10.395-9.011,16.262-6.648   c13.246,5.332,26.941,11.17,40.056,14.969c22.085,6.396,33.049,23.9,48.77,36.613c6.882,5.565,11.055,12.525,14.832,20.857   c7.817,17.24,13.72,35.36,19.856,52.931c6.763,19.353,14.766,40.079,10.542,61.94c-0.521,2.688-0.543,4.905,1.152,6.982   c7.95,9.745,6.276,20.741,2.336,30.864c-10.762,27.647-18.394,56.744-36.2,81.284c-2.725,3.757-5.172,7.905-9.772,9.278   c-16.109,4.803-29.558,14.941-44.619,21.782C204.154,342.788,193.297,343.955,179.355,343.904z")
                            .attr("stroke-width", 1)
                           .attr("fill", "black")
							.attr("transform", "translate(400,100)")




							
							vis.append("path")
                            .attr("d", 
							"M296.197,172.911c2.533,11.409,0.278,19.617-8.614,25.349   c-3.664,2.365-5.528,5.768-7.236,9.762c-6.337,14.824-28.39,22.305-42.643,14.932c-8.118-4.201,3.479-4.688,0.877-8.389   c-7.81,0.063-14.423,3.635-20.099,9.252c-8.04,7.956-17.367,14.25-26.357,21.012c-7.583,5.707-15.64,6.078-23.528,2.341   c-8.289-3.929-9.225-12.558-9.115-20.434c0.151-11.057,3.689-21.259,11.15-29.8c2.941-3.369,5.775-6.826,9.207-10.894   c-15.923,2.59-20.216-0.726-22.277-15.705c-2.274-16.49,3.093-29.455,17.86-38.274c-3.744-3.576-6.867-1.142-9.02,0.509   c-9.921,7.606-10.868,0.834-11.489-6.796c-0.098-1.244-0.337-2.576-0.026-3.738c2.904-10.895,3.926-20.926-1.889-32.066   c-4.284-8.213,1.067-16.544,10.131-21.073c-14.516,3.142-20.82,12.892-18.641,28.069c0.59,4.112,1.973,8.115,2.471,12.231   c1.511,12.469-1.318,15.399-13.873,16.039c-8.569,0.436-17.478,0.368-24.503,7.447c8.074,0,15.629-0.501,23.091,0.115   c11.591,0.957,16.393,6.992,15.624,18.087c-0.773,11.143-6.738,15.332-17.559,13.919c-5.8-0.758-11.645-0.407-17.354,1.215   c-11.821,3.359-22.657,0.445-28.195-10.104c-5.442-10.363-4.296-21.904,4.734-31.167c1.423-1.459,2.814-2.948,4.499-4.717   c-12.523-0.975-16.252-7.49-11.384-18.389c3.917-8.771,13.083-12.597,19.275-21.107c-9.437-1.07-12.121-7.126-11.915-15.214   c0.229-9.001,6.496-12.966,13.505-16.23c4.046-1.883,10.878,0.275,8.339-9.269c-1.103-4.146,7.386-5.286,11.706-7.526   c2.695-1.397,5.381-3.663,3.228-6.858c-2.188-3.248-4.112,0.081-6.018,1.267c-4.487,2.795-10.124,2.793-14.372,7.539   c-3.587-13.864,7.078-13.27,13.427-16.31c8.33-3.988,16.178-2.714,23.199,3.33c0.304,0.263,0.703,0.954,0.699,0.958   c-12.54,9.234,12.915,17.875,0.49,28.29c-2.085,1.747,6.579,9.266,6.315,16.226c7.312-6.804,13.241-12.321,19.485-18.132   c-15.466,1.439-17.416-1.627-11.284-16.454c1.251-3.017,5.844-6.558,0.772-9.42c-5.621-3.174-5.436-6.844-2.512-11.236   c3.325-4.996,8.614-8.186,13.891-4.972c9.323,5.675,19.398,8.636,29.563,12.023c6.896,2.297,9.036,7.899,1.072,13.411   c6.679,3.312,17.609,6.453,14.909,13.003c-3.476,8.43,2.048,12.299,2.744,18.207c1.08,9.16,5.535,12.139,13.441,14.262   c8.692,2.335,11.12,10.472,13.536,18.149c2.427,7.703-5.309,5.493-8.689,8.784c8.707,5.648,18.164,4.71,30.558,6.229   c-8.941-6.57-16.693-11.04-13.285-22.118c5.47,6.042,11.213,11.038,17.633,15.362c4.828,3.252,8.604,8.615,5.98,15.007   c-2.496,6.081-8.276,5.796-13.93,5.495c-13.627-0.724-28.119,6.834-32.494,16.523c-0.851,1.884-2.323,3.762-0.098,5.511   c2.276,1.789,3.911,0.016,5.182-1.559c9.449-11.707,20.091-19.008,35.499-10.337c1.933,1.087,4.126,0.957,5.162-1.505   c1.231-2.919,1.458-7.327,5.993-6.009c1.585,0.462,2.743,3.988,3.222,6.297c0.836,4.031-1.065,7.27-4.307,9.708   c-0.33,0.248-0.691,0.628-1.048,0.64c-18.348,0.619-32.658,11.363-48.196,19.066c-4.271,2.117-8.907,2.889-12.859-0.721   c-4.056-3.708-3.44-8.583-1.366-12.738c6.892-13.807,3.794-25.837-5.875-36.782c-7.603-8.603-3.978-12.883,5.294-15.918   c3.039-0.994,9.186-1.019,6.945-6.317c-1.729-4.081-5.902-0.417-8.611,0.802c-5.852,2.631-8.603-0.376-10.49-5.157   c-1.065-2.702-3.018-5.93-2.353-8.3c5.849-20.88-11.092-33.842-17.502-52.09c-3.621,10.514,0.122,18.015,5.57,24.663   c2.403,2.932,5.77,5.11,4.925,9.357c-3.127,15.733,0.164,31.311,6.352,44.909c8.126,17.859,14.81,34.138,6.904,54.107   c-2.147,5.428,6.308,12.473,4.856,20.916c-1.065,6.212-2.57,10.321-7.793,14.226c-10.495,7.842-17.39,18.229-18.024,32.775   c4.842-2.272,4.988-6.481,6.906-9.479c8.24-12.884,19.575-24.647,34.788-23.047c23.644,2.487,40.786-11.196,60.589-18.342   C292.481,174.997,293.859,174.099,296.197,172.911z"
							)
                            .attr("stroke-width", 1)
                           .attr("fill", "pink")
							.attr("transform", "translate(400,100)")
							.transition()
							.duration(3000)
							.attr("fill", "green")
							
							
							
														vis.append("path")
                            .attr("d", 
"M16.661,234.68c16.065-5.787,28.855,2.692,34.26,13.632   c4.834,9.787,2.125,19.329,12.739,3.758c1.894-2.78,7.642-0.635,9.686,2.814c9.883,16.676,25.583,22.529,43.51,23.418   c2.155-10.976-3.599-10.793-13.291-9.786c-13.389,1.39-25.482-13.441-24.263-27c0.312-3.454,2.833-8.561-1.665-9.906   c-4.786-1.435-3.839,4.321-4.727,6.999c-2.69,8.101-8.252,6.953-13.994,4.684c-8.812-3.484-13.06-11.128-16.633-19.264   c-1.389-3.161-1.411-7.236-6.811-9.843c0.959,14.533-6.878,13.854-16.206,10.962c-7.328-2.272-9.317-8.102-9.232-14.517   c0.097-7.229,6.488-4.856,10.506-5.382c12.128-1.58,23.769-7.693,36.674-2.426c5.771,2.351,9.85,3.654,4.455,11.027   c19.305-6.01,24.073-4.082,33.212,12.56c5.591,10.181,12.947,17.873,24.547,21.646c11.74,3.818,18.534,15.701,31.126,19.531   c5.731,1.742,0.013,21.938-7.33,25.024c-13.626,5.729-26.707,4.683-38.869-4.171c-2.13-1.554-4.455-5.191-6.826-0.645   c-4.441,8.517-5.337,8.707-13.907,3.825c-4.977-2.833-7.769-7.23-10.318-12.01c-11.745,9.489-31.797,2.028-36.048-13.349   c-1.114-4.03,0.336-6.815-7.088-5.022c-9.598,2.321-12.224-8.609-18.571-18.342c12.425,7.188,22.572,10.759,35.239,9.903   C38.19,242.986,21.75,248.146,16.661,234.68z"
							)
                            .attr("stroke-width", 1)
                           .attr("fill", "pink")
							.attr("transform", "translate(400,100)")
							.transition()
							.duration(3000)
							.attr("fill", "blue")
							
							
																					vis.append("path")
                            .attr("d", 
"M43.76,174.221c17.829-21.058,22.331-21.551,42.22-7.473   c10.569,7.48,22.471,4.016,33.912,3.684c16.317-0.474,24.683,4.644,29.928,18.75c1.793,4.822,3.368,10.104,0.165,14.301   c-3.093,4.051-7.634-1.072-14.011,0.367c19.642,9.234,21.367,25.52,20.859,42.83c-0.309,10.446-6.34,15.059-13.859,8.155   c-13.158-12.088-33.521-14.492-41.189-34.627c-4.798-12.599-17.002-21.094-32.389-21.953c-15.078-0.846-29.728-6.103-45.265,0.581   c-9.574,4.122-17.116-2.564-18.262-12.781c-1.179-10.508,3.843-15.89,15.038-15.742c5.557,0.073,10.842-1.043,15.585-3.66   C42.249,163.478,45.128,164.354,43.76,174.221z"
							)
                            .attr("stroke-width", 1)
                           .attr("fill", "pink")
							.attr("transform", "translate(400,100)")
							.transition()
							.duration(3000)
							.attr("fill", "yellow")
							
							
							vis.append("path")
                            .attr("d", 
"M74.027,75.959c-1.218-0.408-2.266-0.996-3.353-1.081   c-4.287-0.341-12.222,1.384-11.246-3.589c1.23-6.269-4.528-15.312,4.455-19.056c9.645-4.02,16.036-10.975,22.161-18.981   c2.391-3.125,8.509-7.76,11.329-4.102c2.557,3.316,5.134,10.439-1.403,15.322c-11.217,8.382-17.233,19.039-12.5,33.567   c1.329,4.078-0.683,6.741-3.513,9.764c-10.673,11.399-11.664,20.956-4.415,34.891c2.821,5.421,2.821,5.421-5.52,6.327   c-0.713,3.565,2.702,4.785,4.08,7.142c4.967,8.5,2.389,13.884-7.169,13.065c-13.536-1.161-23.605,7.011-35.086,11.373   c-5.488,2.085-10.931,2.383-15.198-1.699c-3.91-3.74-4.327-8.736-0.743-14.381c1.643,3.144,3.05,5.836,5.507,10.541   C24.588,139.39,35.066,140.705,45.7,141c-6.622-2.664-14.106-4.167-19.651-8.28c-7.253-5.382-3.077-13.628,0.25-19.042   c6.513-10.595,14.728-5.001,21.97,0.255c2.073-2.613,0.889-5.061,0.606-7.475c-1.519-12.957,2.643-19.119,15.233-22.163   C68.764,83.17,72.728,81.526,74.027,75.959z"
							)
                            .attr("stroke-width", 1)
                           .attr("fill", "pink")
							.attr("transform", "translate(400,100)")
							.transition()
							.duration(3000)
							.attr("fill", "grey")
							
							
							vis.append("path")
                            .attr("d", 
"M264.643,273.475c-7.103,13.495-18.059,15.447-35.692,3.816   c6.127,18.625-5.937,26.619-18.533,33.342c-14.413,7.695-28.988,4.734-42.947-2.311c-1.393-0.704-3.45-2.463-3.313-3.475   c1.51-10.944-4.614-20.79-4.773-30.977c-0.137-8.663,4.075-17.629,16.833-16.896c9.056,0.523,16.526-4.419,23.032-10.808   c14.729-14.463,32.14-24.605,52.368-15.068c10.129,4.773,14.702-0.566,21.137-3.738c6.537-3.222,14.289-5.372,13.026-16.162   c-0.626-5.307,4.988-11.121,10.219-10.547c5.355,0.589,5.827,7.498,5.509,12.501c-0.752,11.746-6.801,21.176-14.228,29.795   c-8.543,9.913-18.704,17.78-30.968,22.505c-13.227,5.096-17.834,1.363-16.124-12.553c0.982-7.99-0.225-10.211-9.823-16.51   c1.64,8.858,6.787,17.16-0.643,24.592c-6.098,6.098-14.025,8.797-21.61,12.115c-8.722,3.813-17.492,7.487-24.948,14.626   C209.765,277.511,236.248,266.801,264.643,273.475z"
							)
                            .attr("stroke-width", 1)
                           .attr("fill", "pink")
							.attr("transform", "translate(400,100)")
							.transition()
							.duration(3000)
							.attr("fill", "orange")
							
							
							vis.append("path")
                            .attr("d", 
"M155.75,292.682c-0.999,2.602-1.147,3.486-1.619,4.141   c-11.497,15.971-55.137,28.254-70.106,16.659c-12.645-9.797-25.677-15.799-40.362-20.971c-9.656-3.4-18.726-10.749-22.969-21.875   c5.496-1.52,8.98,1.241,12.005,4.857c6.461,7.725,14.908,11.873,24.601,13.632c8.493,1.539,17.255,2.208,23.046,10.006   c0.668,0.899,2.109,1.295,3.26,1.755C97.53,306.44,142.13,301.851,155.75,292.682z"
							)
                            .attr("stroke-width", 1)
                           .attr("fill", "pink")
							.attr("transform", "translate(400,100)")
							.transition()
							.duration(3000)
							.attr("fill", "red")
  
</script>


</body>



</html>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Sequences sunburst</title>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <link rel="stylesheet" type="text/css"
      href="https://fonts.googleapis.com/css?family=Open+Sans:400,600">
    <link rel="stylesheet" type="text/css" href="style.css"/>
  </head>
  <body>
    <div id="main">
      <div id="sequence"></div>
      <div id="chart">
        <div id="explanation" style="visibility: hidden;">
          <span id="percentage"></span><br/>
          of registrations begin with this sequence of exposures
        </div>
      </div>
    </div>
    <div id="sidebar">
      <input type="checkbox" id="togglelegend"> Legend<br/>
      <div id="legend" style="visibility: hidden;"></div>
    </div>
    <script type="text/javascript" src="viz.js"></script>
    <script type="text/javascript">
      // Hack for bl.ocks.org
      d3.select(self.frameElement).style("height", "700px");
  </script> 
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script type="text/javascript" src="tabletop.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  var gData
  // https://docs.google.com/spreadsheets/d/1Whyq_IPIWrm7L6qTeu4IuSQ2RWnwtfwWiVwhA-jGEtQ/pubhtml
  var key = 'https://docs.google.com/spreadsheet/pub?key=0AmhWglGO45rldFBiek84a1FHRmhPQjZaVzRSRGJZbXc&output=html'
  Tabletop.init({
    key: key,
    callback: loaded
  });
});

var games = [],
    players = [],
    gameDateFormat = d3.time.format('%Y-%m-%d');


function loaded(data, tabletop) {
  models = data;

  for (var key in models) {
    if (models.hasOwnProperty(key) && key !== 'Template') {

      var date = gameDateFormat.parse(key.slice(0, 10));
      var gameNumberString = (key.length > 10) ? key.slice(10): 1;

      var game = {
        "Date": date,
        "GameNumber": gameNumberString,
        "Players": models[key].elements,
        "TotalPoints": models[key].elements.reduce(function(prev, curr) {
          return prev + +curr.total; 
        }, 0)
      };

      players = players.concat(models[key].elements);
      games.push(game);
    }
  }
  
  d3.select('body').append('p').text("We have " + games.length + " games.");
}
</script>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html;charset=utf-8">
    <title>Artemis Path Analysis</title>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
	<script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	<link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300' rel='stylesheet' type='text/css'>

 <style type="text/css"> 



p {


font-family: 'Open Sans Condensed', cursive;
font-size: 40px;


}

 h1 {


font-family: 'Open Sans Condensed', 'arial' ,cursive;
font-size: 30px;


} 



 h4 {


font-family: 'Open Sans Condensed', 'arial' ,cursive;
font-size: 18px;


} 

p.start{
position:absolute;
left:220px;
top:140px;}

p.middle{
position:absolute;
left:650px;
top:140px;}


p.end{
position:absolute;
left:1100px;
top:140px;}



img.home{
position:absolute;
left:20px;
top:250px;}


img.used{
position:absolute;
left:20px;
top:350px;}

img.brochure{
position:absolute;
left:20px;
top:450px;}


img.dealer{
position:absolute;
left:20px;
top:550px;}

img.mouse{
position:absolute;
left:380px;
top:70px;}


p.HP{
position:absolute;
left:110px;
top:270px;
font-size:12px;}


p.RP{
position:absolute;
left:110px;
top:370px;
font-size:12px;}


p.BP{
position:absolute;
left:110px;
top:470px;
font-size:12px;}


p.GP{
position:absolute;
left:110px;
top:570px;
font-size:12px;}


  
</style> 
</head> 
<body>   
<h1>Where do events occur in the user journey on the site?</h1>
<h4>Hover over the tags to see their presence in the paths</h4>
<p class="start">start</p>
<p class="middle">middle</p>
<p class="end">end</p>

<p class="HP">Home Page</p>
<p class="RP">Reviews</p>
<p class="BP">Brochure</p>
<p class="GP">Galleries</p>




<script type="text/javascript">
//Width and height
			var w = 4000;
			var h = 8000;
			
			var dataset = [
			
[200,100,142.85714286,"GP"],
[342.85714286,100,142.85714286,"GP"],
[485.71428571,100,142.85714286,"GP"],
[628.57142857,100,142.85714286,"GP"],
[771.42857143,100,142.85714286,"NP"],
[914.28571429,100,142.85714286,"NP"],
[1057.1428571,100,142.85714286,"NP"],
[200,105,125,"NP"],
[325,105,125,"NP"],
[450,105,125,"NP"],
[575,105,125,"NP"],
[700,105,125,"NP"],
[825,105,125,"RP"],
[950,105,125,"NP"],
[1075,105,125,"NP"],
[200,110,62.5,"BP"],
[262.5,110,62.5,"GP"],
[325,110,62.5,"NP"],
[387.5,110,62.5,"NP"],
[450,110,62.5,"NP"],
[512.5,110,62.5,"NP"],
[575,110,62.5,"NP"],
[637.5,110,62.5,"NP"],
[700,110,62.5,"NP"],
[762.5,110,62.5,"NP"],
[825,110,62.5,"NP"],
[887.5,110,62.5,"NP"],
[950,110,62.5,"NP"],
[1012.5,110,62.5,"NP"],
[1075,110,62.5,"NP"],
[1137.5,110,62.5,"NP"],
[200,115,142.85714286,"NP"],
[342.85714286,115,142.85714286,"NP"],
[485.71428571,115,142.85714286,"NP"],
[628.57142857,115,142.85714286,"NP"],
[771.42857143,115,142.85714286,"NP"],
[914.28571429,115,142.85714286,"NP"],
[1057.1428571,115,142.85714286,"NP"],
[200,120,142.85714286,"NP"],
[342.85714286,120,142.85714286,"NP"],
[485.71428571,120,142.85714286,"NP"],
[628.57142857,120,142.85714286,"NP"],
[771.42857143,120,142.85714286,"NP"],
[914.28571429,120,142.85714286,"NP"],
[1057.1428571,120,142.85714286,"NP"],
[200,125,142.85714286,"NP"],
[342.85714286,125,142.85714286,"NP"],
[485.71428571,125,142.85714286,"NP"],
[628.57142857,125,142.85714286,"NP"],
[771.42857143,125,142.85714286,"NP"],
[914.28571429,125,142.85714286,"NP"],
[1057.1428571,125,142.85714286,"NP"],
[200,130,166.66666667,"NP"],
[366.66666667,130,166.66666667,"NP"],
[533.33333333,130,166.66666667,"NP"],
[700,130,166.66666667,"NP"],
[866.66666667,130,166.66666667,"NP"],
[1033.3333333,130,166.66666667,"NP"],
[200,135,30.303030303,"BP"],
[230.3030303,135,30.303030303,"BP"],
[260.60606061,135,30.303030303,"BP"],
[290.90909091,135,30.303030303,"BP"],
[321.21212121,135,30.303030303,"GP"],
[351.51515152,135,30.303030303,"NP"],
[381.81818182,135,30.303030303,"NP"],
[412.12121212,135,30.303030303,"NP"],
[442.42424242,135,30.303030303,"NP"],
[472.72727273,135,30.303030303,"NP"],
[503.03030303,135,30.303030303,"NP"],
[533.33333333,135,30.303030303,"NP"],
[563.63636364,135,30.303030303,"NP"],
[593.93939394,135,30.303030303,"NP"],
[624.24242424,135,30.303030303,"NP"],
[654.54545455,135,30.303030303,"NP"],
[684.84848485,135,30.303030303,"NP"],
[715.15151515,135,30.303030303,"NP"],
[745.45454545,135,30.303030303,"NP"],
[775.75757576,135,30.303030303,"NP"],
[806.06060606,135,30.303030303,"NP"],
[836.36363636,135,30.303030303,"NP"],
[866.66666667,135,30.303030303,"NP"],
[896.96969697,135,30.303030303,"NP"],
[927.27272727,135,30.303030303,"NP"],
[957.57575758,135,30.303030303,"NP"],
[987.87878788,135,30.303030303,"NP"],
[1018.1818182,135,30.303030303,"NP"],
[1048.4848485,135,30.303030303,"NP"],
[1078.7878788,135,30.303030303,"NP"],
[1109.0909091,135,30.303030303,"NP"],
[1139.3939394,135,30.303030303,"NP"],
[1169.6969697,135,30.303030303,"NP"],
[200,140,125,"NP"],
[325,140,125,"NP"],
[450,140,125,"NP"],
[575,140,125,"NP"],
[700,140,125,"NP"],
[825,140,125,"NP"],
[950,140,125,"NP"],
[1075,140,125,"NP"],
[200,145,166.66666667,"BP"],
[366.66666667,145,166.66666667,"BP"],
[533.33333333,145,166.66666667,"GP"],
[700,145,166.66666667,"GP"],
[866.66666667,145,166.66666667,"NP"],
[1033.3333333,145,166.66666667,"NP"],
[200,150,166.66666667,"NP"],
[366.66666667,150,166.66666667,"NP"],
[533.33333333,150,166.66666667,"NP"],
[700,150,166.66666667,"RP"],
[866.66666667,150,166.66666667,"NP"],
[1033.3333333,150,166.66666667,"NP"],
[200,155,34.482758621,"BP"],
[234.48275862,155,34.482758621,"BP"],
[268.96551724,155,34.482758621,"BP"],
[303.44827586,155,34.482758621,"GP"],
[337.93103448,155,34.482758621,"GP"],
[372.4137931,155,34.482758621,"GP"],
[406.89655172,155,34.482758621,"GP"],
[441.37931034,155,34.482758621,"NP"],
[475.86206897,155,34.482758621,"NP"],
[510.34482759,155,34.482758621,"NP"],
[544.82758621,155,34.482758621,"NP"],
[579.31034483,155,34.482758621,"NP"],
[613.79310345,155,34.482758621,"NP"],
[648.27586207,155,34.482758621,"NP"],
[682.75862069,155,34.482758621,"NP"],
[717.24137931,155,34.482758621,"NP"],
[751.72413793,155,34.482758621,"NP"],
[786.20689655,155,34.482758621,"NP"],
[820.68965517,155,34.482758621,"NP"],
[855.17241379,155,34.482758621,"NP"],
[889.65517241,155,34.482758621,"NP"],
[924.13793103,155,34.482758621,"NP"],
[958.62068966,155,34.482758621,"RP"],
[993.10344828,155,34.482758621,"RP"],
[1027.5862069,155,34.482758621,"RP"],
[1062.0689655,155,34.482758621,"RP"],
[1096.5517241,155,34.482758621,"NP"],
[1131.0344828,155,34.482758621,"NP"],
[1165.5172414,155,34.482758621,"NP"],
[200,160,166.66666667,"NP"],
[366.66666667,160,166.66666667,"NP"],
[533.33333333,160,166.66666667,"NP"],
[700,160,166.66666667,"NP"],
[866.66666667,160,166.66666667,"NP"],
[1033.3333333,160,166.66666667,"NP"],
[200,165,33.333333333,"BP"],
[233.33333333,165,33.333333333,"GP"],
[266.66666667,165,33.333333333,"GP"],
[300,165,33.333333333,"GP"],
[333.33333333,165,33.333333333,"GP"],
[366.66666667,165,33.333333333,"GP"],
[400,165,33.333333333,"NP"],
[433.33333333,165,33.333333333,"NP"],
[466.66666667,165,33.333333333,"NP"],
[500,165,33.333333333,"NP"],
[533.33333333,165,33.333333333,"NP"],
[566.66666667,165,33.333333333,"NP"],
[600,165,33.333333333,"NP"],
[633.33333333,165,33.333333333,"NP"],
[666.66666667,165,33.333333333,"NP"],
[700,165,33.333333333,"NP"],
[733.33333333,165,33.333333333,"NP"],
[766.66666667,165,33.333333333,"NP"],
[800,165,33.333333333,"NP"],
[833.33333333,165,33.333333333,"NP"],
[866.66666667,165,33.333333333,"RP"],
[900,165,33.333333333,"RP"],
[933.33333333,165,33.333333333,"RP"],
[966.66666667,165,33.333333333,"RP"],
[1000,165,33.333333333,"RP"],
[1033.3333333,165,33.333333333,"RP"],
[1066.6666667,165,33.333333333,"RP"],
[1100,165,33.333333333,"NP"],
[1133.3333333,165,33.333333333,"NP"],
[1166.6666667,165,33.333333333,"NP"],
[200,170,111.11111111,"GP"],
[311.11111111,170,111.11111111,"GP"],
[422.22222222,170,111.11111111,"GP"],
[533.33333333,170,111.11111111,"NP"],
[644.44444444,170,111.11111111,"NP"],
[755.55555556,170,111.11111111,"NP"],
[866.66666667,170,111.11111111,"NP"],
[977.77777778,170,111.11111111,"NP"],
[1088.8888889,170,111.11111111,"NP"],
[200,175,142.85714286,"NP"],
[342.85714286,175,142.85714286,"NP"],
[485.71428571,175,142.85714286,"NP"],
[628.57142857,175,142.85714286,"NP"],
[771.42857143,175,142.85714286,"NP"],
[914.28571429,175,142.85714286,"NP"],
[1057.1428571,175,142.85714286,"NP"],
[200,180,62.5,"BP"],
[262.5,180,62.5,"BP"],
[325,180,62.5,"BP"],
[387.5,180,62.5,"BP"],
[450,180,62.5,"BP"],
[512.5,180,62.5,"GP"],
[575,180,62.5,"GP"],
[637.5,180,62.5,"GP"],
[700,180,62.5,"NP"],
[762.5,180,62.5,"NP"],
[825,180,62.5,"NP"],
[887.5,180,62.5,"NP"],
[950,180,62.5,"NP"],
[1012.5,180,62.5,"NP"],
[1075,180,62.5,"RP"],
[1137.5,180,62.5,"NP"],
[200,185,76.923076923,"NP"],
[276.92307692,185,76.923076923,"RP"],
[353.84615385,185,76.923076923,"RP"],
[430.76923077,185,76.923076923,"RP"],
[507.69230769,185,76.923076923,"RP"],
[584.61538462,185,76.923076923,"RP"],
[661.53846154,185,76.923076923,"RP"],
[738.46153846,185,76.923076923,"RP"],
[815.38461538,185,76.923076923,"RP"],
[892.30769231,185,76.923076923,"RP"],
[969.23076923,185,76.923076923,"RP"],
[1046.1538462,185,76.923076923,"RP"],
[1123.0769231,185,76.923076923,"RP"],
[200,190,34.482758621,"NP"],
[234.48275862,190,34.482758621,"NP"],
[268.96551724,190,34.482758621,"NP"],
[303.44827586,190,34.482758621,"NP"],
[337.93103448,190,34.482758621,"NP"],
[372.4137931,190,34.482758621,"NP"],
[406.89655172,190,34.482758621,"NP"],
[441.37931034,190,34.482758621,"NP"],
[475.86206897,190,34.482758621,"NP"],
[510.34482759,190,34.482758621,"NP"],
[544.82758621,190,34.482758621,"NP"],
[579.31034483,190,34.482758621,"NP"],
[613.79310345,190,34.482758621,"RP"],
[648.27586207,190,34.482758621,"RP"],
[682.75862069,190,34.482758621,"RP"],
[717.24137931,190,34.482758621,"RP"],
[751.72413793,190,34.482758621,"RP"],
[786.20689655,190,34.482758621,"RP"],
[820.68965517,190,34.482758621,"RP"],
[855.17241379,190,34.482758621,"RP"],
[889.65517241,190,34.482758621,"RP"],
[924.13793103,190,34.482758621,"RP"],
[958.62068966,190,34.482758621,"RP"],
[993.10344828,190,34.482758621,"RP"],
[1027.5862069,190,34.482758621,"NP"],
[1062.0689655,190,34.482758621,"NP"],
[1096.5517241,190,34.482758621,"NP"],
[1131.0344828,190,34.482758621,"NP"],
[1165.5172414,190,34.482758621,"NP"],
[200,195,142.85714286,"NP"],
[342.85714286,195,142.85714286,"NP"],
[485.71428571,195,142.85714286,"NP"],
[628.57142857,195,142.85714286,"NP"],
[771.42857143,195,142.85714286,"NP"],
[914.28571429,195,142.85714286,"NP"],
[1057.1428571,195,142.85714286,"NP"],
[200,200,142.85714286,"NP"],
[342.85714286,200,142.85714286,"NP"],
[485.71428571,200,142.85714286,"NP"],
[628.57142857,200,142.85714286,"NP"],
[771.42857143,200,142.85714286,"NP"],
[914.28571429,200,142.85714286,"RP"],
[1057.1428571,200,142.85714286,"NP"],
[200,205,166.66666667,"GP"],
[366.66666667,205,166.66666667,"GP"],
[533.33333333,205,166.66666667,"NP"],
[700,205,166.66666667,"NP"],
[866.66666667,205,166.66666667,"NP"],
[1033.3333333,205,166.66666667,"NP"],
[200,210,16.129032258,"BP"],
[216.12903226,210,16.129032258,"BP"],
[232.25806452,210,16.129032258,"BP"],
[248.38709677,210,16.129032258,"BP"],
[264.51612903,210,16.129032258,"BP"],
[280.64516129,210,16.129032258,"GP"],
[296.77419355,210,16.129032258,"GP"],
[312.90322581,210,16.129032258,"GP"],
[329.03225806,210,16.129032258,"GP"],
[345.16129032,210,16.129032258,"GP"],
[361.29032258,210,16.129032258,"GP"],
[377.41935484,210,16.129032258,"GP"],
[393.5483871,210,16.129032258,"GP"],
[409.67741935,210,16.129032258,"NP"],
[425.80645161,210,16.129032258,"NP"],
[441.93548387,210,16.129032258,"NP"],
[458.06451613,210,16.129032258,"NP"],
[474.19354839,210,16.129032258,"NP"],
[490.32258065,210,16.129032258,"NP"],
[506.4516129,210,16.129032258,"NP"],
[522.58064516,210,16.129032258,"NP"],
[538.70967742,210,16.129032258,"NP"],
[554.83870968,210,16.129032258,"NP"],
[570.96774194,210,16.129032258,"NP"],
[587.09677419,210,16.129032258,"NP"],
[603.22580645,210,16.129032258,"NP"],
[619.35483871,210,16.129032258,"NP"],
[635.48387097,210,16.129032258,"NP"],
[651.61290323,210,16.129032258,"NP"],
[667.74193548,210,16.129032258,"NP"],
[683.87096774,210,16.129032258,"NP"],
[700,210,16.129032258,"NP"],
[716.12903226,210,16.129032258,"NP"],
[732.25806452,210,16.129032258,"NP"],
[748.38709677,210,16.129032258,"NP"],
[764.51612903,210,16.129032258,"NP"],
[780.64516129,210,16.129032258,"NP"],
[796.77419355,210,16.129032258,"NP"],
[812.90322581,210,16.129032258,"NP"],
[829.03225806,210,16.129032258,"NP"],
[845.16129032,210,16.129032258,"NP"],
[861.29032258,210,16.129032258,"NP"],
[877.41935484,210,16.129032258,"NP"],
[893.5483871,210,16.129032258,"RP"],
[909.67741935,210,16.129032258,"RP"],
[925.80645161,210,16.129032258,"RP"],
[941.93548387,210,16.129032258,"RP"],
[958.06451613,210,16.129032258,"RP"],
[974.19354839,210,16.129032258,"RP"],
[990.32258065,210,16.129032258,"RP"],
[1006.4516129,210,16.129032258,"RP"],
[1022.5806452,210,16.129032258,"NP"],
[1038.7096774,210,16.129032258,"NP"],
[1054.8387097,210,16.129032258,"NP"],
[1070.9677419,210,16.129032258,"NP"],
[1087.0967742,210,16.129032258,"NP"],
[1103.2258065,210,16.129032258,"NP"],
[1119.3548387,210,16.129032258,"NP"],
[1135.483871,210,16.129032258,"NP"],
[1151.6129032,210,16.129032258,"NP"],
[1167.7419355,210,16.129032258,"NP"],
[1183.8709677,210,16.129032258,"NP"],
[200,215,166.66666667,"NP"],
[366.66666667,215,166.66666667,"NP"],
[533.33333333,215,166.66666667,"NP"],
[700,215,166.66666667,"RP"],
[866.66666667,215,166.66666667,"RP"],
[1033.3333333,215,166.66666667,"NP"],
[200,220,111.11111111,"NP"],
[311.11111111,220,111.11111111,"NP"],
[422.22222222,220,111.11111111,"NP"],
[533.33333333,220,111.11111111,"NP"],
[644.44444444,220,111.11111111,"NP"],
[755.55555556,220,111.11111111,"NP"],
[866.66666667,220,111.11111111,"NP"],
[977.77777778,220,111.11111111,"RP"],
[1088.8888889,220,111.11111111,"RP"],
[200,225,142.85714286,"BP"],
[342.85714286,225,142.85714286,"GP"],
[485.71428571,225,142.85714286,"NP"],
[628.57142857,225,142.85714286,"NP"],
[771.42857143,225,142.85714286,"NP"],
[914.28571429,225,142.85714286,"RP"],
[1057.1428571,225,142.85714286,"RP"],
[200,230,47.619047619,"GP"],
[247.61904762,230,47.619047619,"GP"],
[295.23809524,230,47.619047619,"NP"],
[342.85714286,230,47.619047619,"NP"],
[390.47619048,230,47.619047619,"NP"],
[438.0952381,230,47.619047619,"NP"],
[485.71428571,230,47.619047619,"NP"],
[533.33333333,230,47.619047619,"NP"],
[580.95238095,230,47.619047619,"NP"],
[628.57142857,230,47.619047619,"NP"],
[676.19047619,230,47.619047619,"NP"],
[723.80952381,230,47.619047619,"NP"],
[771.42857143,230,47.619047619,"NP"],
[819.04761905,230,47.619047619,"NP"],
[866.66666667,230,47.619047619,"NP"],
[914.28571429,230,47.619047619,"RP"],
[961.9047619,230,47.619047619,"RP"],
[1009.5238095,230,47.619047619,"RP"],
[1057.1428571,230,47.619047619,"NP"],
[1104.7619048,230,47.619047619,"NP"],
[1152.3809524,230,47.619047619,"NP"],
[200,235,142.85714286,"BP"],
[342.85714286,235,142.85714286,"BP"],
[485.71428571,235,142.85714286,"BP"],
[628.57142857,235,142.85714286,"GP"],
[771.42857143,235,142.85714286,"GP"],
[914.28571429,235,142.85714286,"GP"],
[1057.1428571,235,142.85714286,"NP"],
[200,240,125,"BP"],
[325,240,125,"BP"],
[450,240,125,"BP"],
[575,240,125,"GP"],
[700,240,125,"GP"],
[825,240,125,"GP"],
[950,240,125,"GP"],
[1075,240,125,"GP"],
[200,245,166.66666667,"NP"],
[366.66666667,245,166.66666667,"NP"],
[533.33333333,245,166.66666667,"NP"],
[700,245,166.66666667,"NP"],
[866.66666667,245,166.66666667,"NP"],
[1033.3333333,245,166.66666667,"NP"],
[200,250,38.461538462,"GP"],
[238.46153846,250,38.461538462,"GP"],
[276.92307692,250,38.461538462,"GP"],
[315.38461538,250,38.461538462,"GP"],
[353.84615385,250,38.461538462,"NP"],
[392.30769231,250,38.461538462,"NP"],
[430.76923077,250,38.461538462,"NP"],
[469.23076923,250,38.461538462,"NP"],
[507.69230769,250,38.461538462,"NP"],
[546.15384615,250,38.461538462,"NP"],
[584.61538462,250,38.461538462,"NP"],
[623.07692308,250,38.461538462,"NP"],
[661.53846154,250,38.461538462,"NP"],
[700,250,38.461538462,"NP"],
[738.46153846,250,38.461538462,"NP"],
[776.92307692,250,38.461538462,"RP"],
[815.38461538,250,38.461538462,"RP"],
[853.84615385,250,38.461538462,"RP"],
[892.30769231,250,38.461538462,"RP"],
[930.76923077,250,38.461538462,"RP"],
[969.23076923,250,38.461538462,"RP"],
[1007.6923077,250,38.461538462,"RP"],
[1046.1538462,250,38.461538462,"RP"],
[1084.6153846,250,38.461538462,"RP"],
[1123.0769231,250,38.461538462,"NP"],
[1161.5384615,250,38.461538462,"NP"],
[200,255,83.333333333,"GP"],
[283.33333333,255,83.333333333,"GP"],
[366.66666667,255,83.333333333,"NP"],
[450,255,83.333333333,"NP"],
[533.33333333,255,83.333333333,"NP"],
[616.66666667,255,83.333333333,"NP"],
[700,255,83.333333333,"NP"],
[783.33333333,255,83.333333333,"NP"],
[866.66666667,255,83.333333333,"RP"],
[950,255,83.333333333,"RP"],
[1033.3333333,255,83.333333333,"RP"],
[1116.6666667,255,83.333333333,"NP"],
[200,260,40,"BP"],
[240,260,40,"BP"],
[280,260,40,"BP"],
[320,260,40,"BP"],
[360,260,40,"GP"],
[400,260,40,"GP"],
[440,260,40,"GP"],
[480,260,40,"GP"],
[520,260,40,"GP"],
[560,260,40,"GP"],
[600,260,40,"GP"],
[640,260,40,"GP"],
[680,260,40,"GP"],
[720,260,40,"GP"],
[760,260,40,"GP"],
[800,260,40,"NP"],
[840,260,40,"NP"],
[880,260,40,"NP"],
[920,260,40,"NP"],
[960,260,40,"NP"],
[1000,260,40,"NP"],
[1040,260,40,"NP"],
[1080,260,40,"NP"],
[1120,260,40,"RP"],
[1160,260,40,"RP"],
[200,265,125,"NP"],
[325,265,125,"NP"],
[450,265,125,"NP"],
[575,265,125,"NP"],
[700,265,125,"RP"],
[825,265,125,"RP"],
[950,265,125,"RP"],
[1075,265,125,"RP"],
[200,270,166.66666667,"NP"],
[366.66666667,270,166.66666667,"NP"],
[533.33333333,270,166.66666667,"NP"],
[700,270,166.66666667,"NP"],
[866.66666667,270,166.66666667,"RP"],
[1033.3333333,270,166.66666667,"RP"],
[200,275,166.66666667,"NP"],
[366.66666667,275,166.66666667,"NP"],
[533.33333333,275,166.66666667,"NP"],
[700,275,166.66666667,"RP"],
[866.66666667,275,166.66666667,"NP"],
[1033.3333333,275,166.66666667,"NP"],
[200,280,166.66666667,"BP"],
[366.66666667,280,166.66666667,"BP"],
[533.33333333,280,166.66666667,"GP"],
[700,280,166.66666667,"NP"],
[866.66666667,280,166.66666667,"NP"],
[1033.3333333,280,166.66666667,"NP"],
[200,285,166.66666667,"GP"],
[366.66666667,285,166.66666667,"NP"],
[533.33333333,285,166.66666667,"NP"],
[700,285,166.66666667,"NP"],
[866.66666667,285,166.66666667,"NP"],
[1033.3333333,285,166.66666667,"NP"],
[200,290,142.85714286,"BP"],
[342.85714286,290,142.85714286,"GP"],
[485.71428571,290,142.85714286,"GP"],
[628.57142857,290,142.85714286,"GP"],
[771.42857143,290,142.85714286,"NP"],
[914.28571429,290,142.85714286,"NP"],
[1057.1428571,290,142.85714286,"NP"],
[200,295,166.66666667,"NP"],
[366.66666667,295,166.66666667,"NP"],
[533.33333333,295,166.66666667,"NP"],
[700,295,166.66666667,"NP"],
[866.66666667,295,166.66666667,"NP"],
[1033.3333333,295,166.66666667,"RP"],
[200,300,142.85714286,"NP"],
[342.85714286,300,142.85714286,"NP"],
[485.71428571,300,142.85714286,"NP"],
[628.57142857,300,142.85714286,"NP"],
[771.42857143,300,142.85714286,"NP"],
[914.28571429,300,142.85714286,"NP"],
[1057.1428571,300,142.85714286,"NP"],
[200,305,166.66666667,"RP"],
[366.66666667,305,166.66666667,"NP"],
[533.33333333,305,166.66666667,"NP"],
[700,305,166.66666667,"NP"],
[866.66666667,305,166.66666667,"NP"],
[1033.3333333,305,166.66666667,"NP"],
[200,310,47.619047619,"BP"],
[247.61904762,310,47.619047619,"BP"],
[295.23809524,310,47.619047619,"BP"],
[342.85714286,310,47.619047619,"GP"],
[390.47619048,310,47.619047619,"GP"],
[438.0952381,310,47.619047619,"NP"],
[485.71428571,310,47.619047619,"NP"],
[533.33333333,310,47.619047619,"NP"],
[580.95238095,310,47.619047619,"NP"],
[628.57142857,310,47.619047619,"NP"],
[676.19047619,310,47.619047619,"NP"],
[723.80952381,310,47.619047619,"NP"],
[771.42857143,310,47.619047619,"NP"],
[819.04761905,310,47.619047619,"RP"],
[866.66666667,310,47.619047619,"RP"],
[914.28571429,310,47.619047619,"NP"],
[961.9047619,310,47.619047619,"NP"],
[1009.5238095,310,47.619047619,"NP"],
[1057.1428571,310,47.619047619,"NP"],
[1104.7619048,310,47.619047619,"NP"],
[1152.3809524,310,47.619047619,"NP"],
[200,315,111.11111111,"NP"],
[311.11111111,315,111.11111111,"NP"],
[422.22222222,315,111.11111111,"NP"],
[533.33333333,315,111.11111111,"NP"],
[644.44444444,315,111.11111111,"NP"],
[755.55555556,315,111.11111111,"NP"],
[866.66666667,315,111.11111111,"NP"],
[977.77777778,315,111.11111111,"RP"],
[1088.8888889,315,111.11111111,"RP"],
[200,320,71.428571429,"RP"],
[271.42857143,320,71.428571429,"RP"],
[342.85714286,320,71.428571429,"RP"],
[414.28571429,320,71.428571429,"RP"],
[485.71428571,320,71.428571429,"RP"],
[557.14285714,320,71.428571429,"RP"],
[628.57142857,320,71.428571429,"RP"],
[700,320,71.428571429,"RP"],
[771.42857143,320,71.428571429,"NP"],
[842.85714286,320,71.428571429,"NP"],
[914.28571429,320,71.428571429,"NP"],
[985.71428571,320,71.428571429,"NP"],
[1057.1428571,320,71.428571429,"NP"],
[1128.5714286,320,71.428571429,"NP"],
[200,325,125,"NP"],
[325,325,125,"NP"],
[450,325,125,"NP"],
[575,325,125,"NP"],
[700,325,125,"NP"],
[825,325,125,"NP"],
[950,325,125,"NP"],
[1075,325,125,"NP"],
[200,330,90.909090909,"NP"],
[290.90909091,330,90.909090909,"NP"],
[381.81818182,330,90.909090909,"NP"],
[472.72727273,330,90.909090909,"RP"],
[563.63636364,330,90.909090909,"RP"],
[654.54545455,330,90.909090909,"RP"],
[745.45454545,330,90.909090909,"NP"],
[836.36363636,330,90.909090909,"NP"],
[927.27272727,330,90.909090909,"NP"],
[1018.1818182,330,90.909090909,"NP"],
[1109.0909091,330,90.909090909,"NP"],
[200,335,50,"BP"],
[250,335,50,"BP"],
[300,335,50,"GP"],
[350,335,50,"GP"],
[400,335,50,"GP"],
[450,335,50,"GP"],
[500,335,50,"GP"],
[550,335,50,"NP"],
[600,335,50,"NP"],
[650,335,50,"NP"],
[700,335,50,"NP"],
[750,335,50,"NP"],
[800,335,50,"NP"],
[850,335,50,"NP"],
[900,335,50,"NP"],
[950,335,50,"NP"],
[1000,335,50,"NP"],
[1050,335,50,"RP"],
[1100,335,50,"RP"],
[1150,335,50,"NP"],
[200,340,90.909090909,"NP"],
[290.90909091,340,90.909090909,"NP"],
[381.81818182,340,90.909090909,"NP"],
[472.72727273,340,90.909090909,"NP"],
[563.63636364,340,90.909090909,"NP"],
[654.54545455,340,90.909090909,"NP"],
[745.45454545,340,90.909090909,"NP"],
[836.36363636,340,90.909090909,"NP"],
[927.27272727,340,90.909090909,"NP"],
[1018.1818182,340,90.909090909,"NP"],
[1109.0909091,340,90.909090909,"NP"],
[200,345,142.85714286,"NP"],
[342.85714286,345,142.85714286,"NP"],
[485.71428571,345,142.85714286,"NP"],
[628.57142857,345,142.85714286,"NP"],
[771.42857143,345,142.85714286,"NP"],
[914.28571429,345,142.85714286,"NP"],
[1057.1428571,345,142.85714286,"NP"],
[200,350,166.66666667,"GP"],
[366.66666667,350,166.66666667,"NP"],
[533.33333333,350,166.66666667,"NP"],
[700,350,166.66666667,"NP"],
[866.66666667,350,166.66666667,"NP"],
[1033.3333333,350,166.66666667,"RP"],
[200,355,13.513513514,"GP"],
[213.51351351,355,13.513513514,"NP"],
[227.02702703,355,13.513513514,"NP"],
[240.54054054,355,13.513513514,"NP"],
[254.05405405,355,13.513513514,"NP"],
[267.56756757,355,13.513513514,"NP"],
[281.08108108,355,13.513513514,"NP"],
[294.59459459,355,13.513513514,"NP"],
[308.10810811,355,13.513513514,"NP"],
[321.62162162,355,13.513513514,"NP"],
[335.13513514,355,13.513513514,"NP"],
[348.64864865,355,13.513513514,"NP"],
[362.16216216,355,13.513513514,"NP"],
[375.67567568,355,13.513513514,"NP"],
[389.18918919,355,13.513513514,"NP"],
[402.7027027,355,13.513513514,"NP"],
[416.21621622,355,13.513513514,"NP"],
[429.72972973,355,13.513513514,"NP"],
[443.24324324,355,13.513513514,"NP"],
[456.75675676,355,13.513513514,"NP"],
[470.27027027,355,13.513513514,"NP"],
[483.78378378,355,13.513513514,"NP"],
[497.2972973,355,13.513513514,"NP"],
[510.81081081,355,13.513513514,"NP"],
[524.32432432,355,13.513513514,"NP"],
[537.83783784,355,13.513513514,"NP"],
[551.35135135,355,13.513513514,"NP"],
[564.86486486,355,13.513513514,"NP"],
[578.37837838,355,13.513513514,"NP"],
[591.89189189,355,13.513513514,"NP"],
[605.40540541,355,13.513513514,"NP"],
[618.91891892,355,13.513513514,"NP"],
[632.43243243,355,13.513513514,"NP"],
[645.94594595,355,13.513513514,"NP"],
[659.45945946,355,13.513513514,"NP"],
[672.97297297,355,13.513513514,"NP"],
[686.48648649,355,13.513513514,"NP"],
[700,355,13.513513514,"NP"],
[713.51351351,355,13.513513514,"RP"],
[727.02702703,355,13.513513514,"RP"],
[740.54054054,355,13.513513514,"RP"],
[754.05405405,355,13.513513514,"RP"],
[767.56756757,355,13.513513514,"RP"],
[781.08108108,355,13.513513514,"RP"],
[794.59459459,355,13.513513514,"RP"],
[808.10810811,355,13.513513514,"RP"],
[821.62162162,355,13.513513514,"RP"],
[835.13513514,355,13.513513514,"RP"],
[848.64864865,355,13.513513514,"RP"],
[862.16216216,355,13.513513514,"RP"],
[875.67567568,355,13.513513514,"RP"],
[889.18918919,355,13.513513514,"RP"],
[902.7027027,355,13.513513514,"RP"],
[916.21621622,355,13.513513514,"RP"],
[929.72972973,355,13.513513514,"RP"],
[943.24324324,355,13.513513514,"RP"],
[956.75675676,355,13.513513514,"NP"],
[970.27027027,355,13.513513514,"NP"],
[983.78378378,355,13.513513514,"NP"],
[997.2972973,355,13.513513514,"NP"],
[1010.8108108,355,13.513513514,"NP"],
[1024.3243243,355,13.513513514,"NP"],
[1037.8378378,355,13.513513514,"NP"],
[1051.3513514,355,13.513513514,"NP"],
[1064.8648649,355,13.513513514,"NP"],
[1078.3783784,355,13.513513514,"NP"],
[1091.8918919,355,13.513513514,"NP"],
[1105.4054054,355,13.513513514,"NP"],
[1118.9189189,355,13.513513514,"NP"],
[1132.4324324,355,13.513513514,"NP"],
[1145.9459459,355,13.513513514,"NP"],
[1159.4594595,355,13.513513514,"NP"],
[1172.972973,355,13.513513514,"NP"],
[1186.4864865,355,13.513513514,"NP"],
[200,360,76.923076923,"BP"],
[276.92307692,360,76.923076923,"BP"],
[353.84615385,360,76.923076923,"BP"],
[430.76923077,360,76.923076923,"BP"],
[507.69230769,360,76.923076923,"NP"],
[584.61538462,360,76.923076923,"NP"],
[661.53846154,360,76.923076923,"NP"],
[738.46153846,360,76.923076923,"NP"],
[815.38461538,360,76.923076923,"NP"],
[892.30769231,360,76.923076923,"RP"],
[969.23076923,360,76.923076923,"NP"],
[1046.1538462,360,76.923076923,"NP"],
[1123.0769231,360,76.923076923,"NP"],
[200,365,166.66666667,"BP"],
[366.66666667,365,166.66666667,"BP"],
[533.33333333,365,166.66666667,"GP"],
[700,365,166.66666667,"NP"],
[866.66666667,365,166.66666667,"NP"],
[1033.3333333,365,166.66666667,"NP"],
[200,370,55.555555556,"NP"],
[255.55555556,370,55.555555556,"NP"],
[311.11111111,370,55.555555556,"NP"],
[366.66666667,370,55.555555556,"NP"],
[422.22222222,370,55.555555556,"NP"],
[477.77777778,370,55.555555556,"NP"],
[533.33333333,370,55.555555556,"NP"],
[588.88888889,370,55.555555556,"NP"],
[644.44444444,370,55.555555556,"NP"],
[700,370,55.555555556,"NP"],
[755.55555556,370,55.555555556,"NP"],
[811.11111111,370,55.555555556,"NP"],
[866.66666667,370,55.555555556,"RP"],
[922.22222222,370,55.555555556,"RP"],
[977.77777778,370,55.555555556,"RP"],
[1033.3333333,370,55.555555556,"RP"],
[1088.8888889,370,55.555555556,"RP"],
[1144.4444444,370,55.555555556,"RP"],
[200,375,71.428571429,"NP"],
[271.42857143,375,71.428571429,"NP"],
[342.85714286,375,71.428571429,"NP"],
[414.28571429,375,71.428571429,"NP"],
[485.71428571,375,71.428571429,"NP"],
[557.14285714,375,71.428571429,"NP"],
[628.57142857,375,71.428571429,"NP"],
[700,375,71.428571429,"NP"],
[771.42857143,375,71.428571429,"NP"],
[842.85714286,375,71.428571429,"NP"],
[914.28571429,375,71.428571429,"NP"],
[985.71428571,375,71.428571429,"NP"],
[1057.1428571,375,71.428571429,"NP"],
[1128.5714286,375,71.428571429,"NP"],
[200,380,125,"BP"],
[325,380,125,"BP"],
[450,380,125,"BP"],
[575,380,125,"BP"],
[700,380,125,"BP"],
[825,380,125,"GP"],
[950,380,125,"GP"],
[1075,380,125,"GP"],
[200,385,83.333333333,"BP"],
[283.33333333,385,83.333333333,"NP"],
[366.66666667,385,83.333333333,"NP"],
[450,385,83.333333333,"NP"],
[533.33333333,385,83.333333333,"NP"],
[616.66666667,385,83.333333333,"NP"],
[700,385,83.333333333,"NP"],
[783.33333333,385,83.333333333,"NP"],
[866.66666667,385,83.333333333,"NP"],
[950,385,83.333333333,"NP"],
[1033.3333333,385,83.333333333,"NP"],
[1116.6666667,385,83.333333333,"NP"],
[200,390,100,"NP"],
[300,390,100,"NP"],
[400,390,100,"RP"],
[500,390,100,"RP"],
[600,390,100,"RP"],
[700,390,100,"NP"],
[800,390,100,"NP"],
[900,390,100,"NP"],
[1000,390,100,"NP"],
[1100,390,100,"NP"],
[200,395,166.66666667,"NP"],
[366.66666667,395,166.66666667,"NP"],
[533.33333333,395,166.66666667,"NP"],
[700,395,166.66666667,"NP"],
[866.66666667,395,166.66666667,"NP"],
[1033.3333333,395,166.66666667,"NP"],
[200,400,166.66666667,"NP"],
[366.66666667,400,166.66666667,"NP"],
[533.33333333,400,166.66666667,"NP"],
[700,400,166.66666667,"NP"],
[866.66666667,400,166.66666667,"NP"],
[1033.3333333,400,166.66666667,"RP"],
[200,405,90.909090909,"NP"],
[290.90909091,405,90.909090909,"NP"],
[381.81818182,405,90.909090909,"NP"],
[472.72727273,405,90.909090909,"NP"],
[563.63636364,405,90.909090909,"NP"],
[654.54545455,405,90.909090909,"NP"],
[745.45454545,405,90.909090909,"NP"],
[836.36363636,405,90.909090909,"NP"],
[927.27272727,405,90.909090909,"NP"],
[1018.1818182,405,90.909090909,"RP"],
[1109.0909091,405,90.909090909,"RP"],
[200,410,62.5,"BP"],
[262.5,410,62.5,"GP"],
[325,410,62.5,"NP"],
[387.5,410,62.5,"NP"],
[450,410,62.5,"NP"],
[512.5,410,62.5,"NP"],
[575,410,62.5,"NP"],
[637.5,410,62.5,"NP"],
[700,410,62.5,"NP"],
[762.5,410,62.5,"NP"],
[825,410,62.5,"NP"],
[887.5,410,62.5,"NP"],
[950,410,62.5,"NP"],
[1012.5,410,62.5,"NP"],
[1075,410,62.5,"NP"],
[1137.5,410,62.5,"NP"],
[200,415,125,"NP"],
[325,415,125,"NP"],
[450,415,125,"NP"],
[575,415,125,"NP"],
[700,415,125,"RP"],
[825,415,125,"RP"],
[950,415,125,"NP"],
[1075,415,125,"NP"],
[200,420,100,"BP"],
[300,420,100,"NP"],
[400,420,100,"NP"],
[500,420,100,"NP"],
[600,420,100,"NP"],
[700,420,100,"RP"],
[800,420,100,"RP"],
[900,420,100,"RP"],
[1000,420,100,"RP"],
[1100,420,100,"NP"],
[200,425,142.85714286,"NP"],
[342.85714286,425,142.85714286,"NP"],
[485.71428571,425,142.85714286,"NP"],
[628.57142857,425,142.85714286,"RP"],
[771.42857143,425,142.85714286,"RP"],
[914.28571429,425,142.85714286,"RP"],
[1057.1428571,425,142.85714286,"NP"],
[200,430,41.666666667,"BP"],
[241.66666667,430,41.666666667,"BP"],
[283.33333333,430,41.666666667,"BP"],
[325,430,41.666666667,"BP"],
[366.66666667,430,41.666666667,"BP"],
[408.33333333,430,41.666666667,"GP"],
[450,430,41.666666667,"GP"],
[491.66666667,430,41.666666667,"GP"],
[533.33333333,430,41.666666667,"NP"],
[575,430,41.666666667,"NP"],
[616.66666667,430,41.666666667,"NP"],
[658.33333333,430,41.666666667,"NP"],
[700,430,41.666666667,"NP"],
[741.66666667,430,41.666666667,"NP"],
[783.33333333,430,41.666666667,"NP"],
[825,430,41.666666667,"NP"],
[866.66666667,430,41.666666667,"NP"],
[908.33333333,430,41.666666667,"NP"],
[950,430,41.666666667,"NP"],
[991.66666667,430,41.666666667,"NP"],
[1033.3333333,430,41.666666667,"NP"],
[1075,430,41.666666667,"NP"],
[1116.6666667,430,41.666666667,"NP"],
[1158.3333333,430,41.666666667,"RP"],
[200,435,100,"RP"],
[300,435,100,"RP"],
[400,435,100,"NP"],
[500,435,100,"NP"],
[600,435,100,"NP"],
[700,435,100,"NP"],
[800,435,100,"NP"],
[900,435,100,"NP"],
[1000,435,100,"NP"],
[1100,435,100,"NP"],
[200,440,27.777777778,"BP"],
[227.77777778,440,27.777777778,"BP"],
[255.55555556,440,27.777777778,"GP"],
[283.33333333,440,27.777777778,"GP"],
[311.11111111,440,27.777777778,"NP"],
[338.88888889,440,27.777777778,"NP"],
[366.66666667,440,27.777777778,"NP"],
[394.44444444,440,27.777777778,"NP"],
[422.22222222,440,27.777777778,"NP"],
[450,440,27.777777778,"NP"],
[477.77777778,440,27.777777778,"NP"],
[505.55555556,440,27.777777778,"NP"],
[533.33333333,440,27.777777778,"NP"],
[561.11111111,440,27.777777778,"NP"],
[588.88888889,440,27.777777778,"NP"],
[616.66666667,440,27.777777778,"NP"],
[644.44444444,440,27.777777778,"NP"],
[672.22222222,440,27.777777778,"NP"],
[700,440,27.777777778,"NP"],
[727.77777778,440,27.777777778,"NP"],
[755.55555556,440,27.777777778,"NP"],
[783.33333333,440,27.777777778,"NP"],
[811.11111111,440,27.777777778,"NP"],
[838.88888889,440,27.777777778,"NP"],
[866.66666667,440,27.777777778,"NP"],
[894.44444444,440,27.777777778,"NP"],
[922.22222222,440,27.777777778,"NP"],
[950,440,27.777777778,"NP"],
[977.77777778,440,27.777777778,"NP"],
[1005.5555556,440,27.777777778,"NP"],
[1033.3333333,440,27.777777778,"RP"],
[1061.1111111,440,27.777777778,"NP"],
[1088.8888889,440,27.777777778,"NP"],
[1116.6666667,440,27.777777778,"NP"],
[1144.4444444,440,27.777777778,"NP"],
[1172.2222222,440,27.777777778,"NP"],
[200,445,142.85714286,"NP"],
[342.85714286,445,142.85714286,"NP"],
[485.71428571,445,142.85714286,"NP"],
[628.57142857,445,142.85714286,"NP"],
[771.42857143,445,142.85714286,"RP"],
[914.28571429,445,142.85714286,"RP"],
[1057.1428571,445,142.85714286,"NP"],
[200,450,43.47826087,"BP"],
[243.47826087,450,43.47826087,"BP"],
[286.95652174,450,43.47826087,"GP"],
[330.43478261,450,43.47826087,"GP"],
[373.91304348,450,43.47826087,"GP"],
[417.39130435,450,43.47826087,"NP"],
[460.86956522,450,43.47826087,"NP"],
[504.34782609,450,43.47826087,"NP"],
[547.82608696,450,43.47826087,"NP"],
[591.30434783,450,43.47826087,"NP"],
[634.7826087,450,43.47826087,"NP"],
[678.26086957,450,43.47826087,"NP"],
[721.73913043,450,43.47826087,"NP"],
[765.2173913,450,43.47826087,"NP"],
[808.69565217,450,43.47826087,"NP"],
[852.17391304,450,43.47826087,"NP"],
[895.65217391,450,43.47826087,"RP"],
[939.13043478,450,43.47826087,"RP"],
[982.60869565,450,43.47826087,"RP"],
[1026.0869565,450,43.47826087,"NP"],
[1069.5652174,450,43.47826087,"NP"],
[1113.0434783,450,43.47826087,"NP"],
[1156.5217391,450,43.47826087,"NP"],
[200,455,166.66666667,"NP"],
[366.66666667,455,166.66666667,"NP"],
[533.33333333,455,166.66666667,"RP"],
[700,455,166.66666667,"RP"],
[866.66666667,455,166.66666667,"RP"],
[1033.3333333,455,166.66666667,"RP"],
[200,460,166.66666667,"NP"],
[366.66666667,460,166.66666667,"RP"],
[533.33333333,460,166.66666667,"RP"],
[700,460,166.66666667,"RP"],
[866.66666667,460,166.66666667,"NP"],
[1033.3333333,460,166.66666667,"NP"],
[200,465,90.909090909,"BP"],
[290.90909091,465,90.909090909,"BP"],
[381.81818182,465,90.909090909,"BP"],
[472.72727273,465,90.909090909,"BP"],
[563.63636364,465,90.909090909,"BP"],
[654.54545455,465,90.909090909,"BP"],
[745.45454545,465,90.909090909,"BP"],
[836.36363636,465,90.909090909,"GP"],
[927.27272727,465,90.909090909,"GP"],
[1018.1818182,465,90.909090909,"GP"],
[1109.0909091,465,90.909090909,"NP"],
[200,470,142.85714286,"BP"],
[342.85714286,470,142.85714286,"BP"],
[485.71428571,470,142.85714286,"BP"],
[628.57142857,470,142.85714286,"BP"],
[771.42857143,470,142.85714286,"GP"],
[914.28571429,470,142.85714286,"GP"],
[1057.1428571,470,142.85714286,"GP"],
[200,475,83.333333333,"BP"],
[283.33333333,475,83.333333333,"NP"],
[366.66666667,475,83.333333333,"NP"],
[450,475,83.333333333,"NP"],
[533.33333333,475,83.333333333,"NP"],
[616.66666667,475,83.333333333,"NP"],
[700,475,83.333333333,"NP"],
[783.33333333,475,83.333333333,"NP"],
[866.66666667,475,83.333333333,"NP"],
[950,475,83.333333333,"NP"],
[1033.3333333,475,83.333333333,"NP"],
[1116.6666667,475,83.333333333,"NP"],
[200,480,66.666666667,"RP"],
[266.66666667,480,66.666666667,"RP"],
[333.33333333,480,66.666666667,"RP"],
[400,480,66.666666667,"NP"],
[466.66666667,480,66.666666667,"NP"],
[533.33333333,480,66.666666667,"NP"],
[600,480,66.666666667,"NP"],
[666.66666667,480,66.666666667,"NP"],
[733.33333333,480,66.666666667,"NP"],
[800,480,66.666666667,"NP"],
[866.66666667,480,66.666666667,"NP"],
[933.33333333,480,66.666666667,"NP"],
[1000,480,66.666666667,"NP"],
[1066.6666667,480,66.666666667,"NP"],
[1133.3333333,480,66.666666667,"NP"],
[200,485,66.666666667,"GP"],
[266.66666667,485,66.666666667,"NP"],
[333.33333333,485,66.666666667,"NP"],
[400,485,66.666666667,"NP"],
[466.66666667,485,66.666666667,"NP"],
[533.33333333,485,66.666666667,"NP"],
[600,485,66.666666667,"NP"],
[666.66666667,485,66.666666667,"NP"],
[733.33333333,485,66.666666667,"NP"],
[800,485,66.666666667,"NP"],
[866.66666667,485,66.666666667,"NP"],
[933.33333333,485,66.666666667,"NP"],
[1000,485,66.666666667,"NP"],
[1066.6666667,485,66.666666667,"NP"],
[1133.3333333,485,66.666666667,"NP"],
[200,490,100,"NP"],
[300,490,100,"NP"],
[400,490,100,"NP"],
[500,490,100,"NP"],
[600,490,100,"NP"],
[700,490,100,"NP"],
[800,490,100,"NP"],
[900,490,100,"NP"],
[1000,490,100,"NP"],
[1100,490,100,"NP"],
[200,495,47.619047619,"BP"],
[247.61904762,495,47.619047619,"BP"],
[295.23809524,495,47.619047619,"BP"],
[342.85714286,495,47.619047619,"BP"],
[390.47619048,495,47.619047619,"BP"],
[438.0952381,495,47.619047619,"BP"],
[485.71428571,495,47.619047619,"GP"],
[533.33333333,495,47.619047619,"GP"],
[580.95238095,495,47.619047619,"GP"],
[628.57142857,495,47.619047619,"GP"],
[676.19047619,495,47.619047619,"NP"],
[723.80952381,495,47.619047619,"NP"],
[771.42857143,495,47.619047619,"NP"],
[819.04761905,495,47.619047619,"NP"],
[866.66666667,495,47.619047619,"NP"],
[914.28571429,495,47.619047619,"NP"],
[961.9047619,495,47.619047619,"NP"],
[1009.5238095,495,47.619047619,"RP"],
[1057.1428571,495,47.619047619,"RP"],
[1104.7619048,495,47.619047619,"NP"],
[1152.3809524,495,47.619047619,"NP"],
[200,500,125,"NP"],
[325,500,125,"NP"],
[450,500,125,"NP"],
[575,500,125,"NP"],
[700,500,125,"NP"],
[825,500,125,"NP"],
[950,500,125,"NP"],
[1075,500,125,"RP"],
[200,505,166.66666667,"GP"],
[366.66666667,505,166.66666667,"GP"],
[533.33333333,505,166.66666667,"NP"],
[700,505,166.66666667,"NP"],
[866.66666667,505,166.66666667,"NP"],
[1033.3333333,505,166.66666667,"NP"],
[200,510,100,"NP"],
[300,510,100,"NP"],
[400,510,100,"NP"],
[500,510,100,"NP"],
[600,510,100,"NP"],
[700,510,100,"NP"],
[800,510,100,"NP"],
[900,510,100,"NP"],
[1000,510,100,"NP"],
[1100,510,100,"NP"],
[200,515,111.11111111,"BP"],
[311.11111111,515,111.11111111,"GP"],
[422.22222222,515,111.11111111,"GP"],
[533.33333333,515,111.11111111,"GP"],
[644.44444444,515,111.11111111,"NP"],
[755.55555556,515,111.11111111,"NP"],
[866.66666667,515,111.11111111,"NP"],
[977.77777778,515,111.11111111,"NP"],
[1088.8888889,515,111.11111111,"NP"],
[200,520,142.85714286,"BP"],
[342.85714286,520,142.85714286,"NP"],
[485.71428571,520,142.85714286,"NP"],
[628.57142857,520,142.85714286,"RP"],
[771.42857143,520,142.85714286,"RP"],
[914.28571429,520,142.85714286,"NP"],
[1057.1428571,520,142.85714286,"NP"],
[200,525,90.909090909,"GP"],
[290.90909091,525,90.909090909,"NP"],
[381.81818182,525,90.909090909,"NP"],
[472.72727273,525,90.909090909,"NP"],
[563.63636364,525,90.909090909,"NP"],
[654.54545455,525,90.909090909,"NP"],
[745.45454545,525,90.909090909,"NP"],
[836.36363636,525,90.909090909,"NP"],
[927.27272727,525,90.909090909,"NP"],
[1018.1818182,525,90.909090909,"NP"],
[1109.0909091,525,90.909090909,"NP"],
[200,530,100,"BP"],
[300,530,100,"BP"],
[400,530,100,"GP"],
[500,530,100,"GP"],
[600,530,100,"GP"],
[700,530,100,"GP"],
[800,530,100,"RP"],
[900,530,100,"RP"],
[1000,530,100,"RP"],
[1100,530,100,"NP"],
[200,535,166.66666667,"NP"],
[366.66666667,535,166.66666667,"NP"],
[533.33333333,535,166.66666667,"NP"],
[700,535,166.66666667,"NP"],
[866.66666667,535,166.66666667,"NP"],
[1033.3333333,535,166.66666667,"RP"],
[200,540,111.11111111,"GP"],
[311.11111111,540,111.11111111,"GP"],
[422.22222222,540,111.11111111,"GP"],
[533.33333333,540,111.11111111,"NP"],
[644.44444444,540,111.11111111,"NP"],
[755.55555556,540,111.11111111,"NP"],
[866.66666667,540,111.11111111,"NP"],
[977.77777778,540,111.11111111,"RP"],
[1088.8888889,540,111.11111111,"RP"],
[200,545,166.66666667,"NP"],
[366.66666667,545,166.66666667,"NP"],
[533.33333333,545,166.66666667,"NP"],
[700,545,166.66666667,"NP"],
[866.66666667,545,166.66666667,"RP"],
[1033.3333333,545,166.66666667,"NP"],
[200,550,142.85714286,"GP"],
[342.85714286,550,142.85714286,"NP"],
[485.71428571,550,142.85714286,"NP"],
[628.57142857,550,142.85714286,"NP"],
[771.42857143,550,142.85714286,"NP"],
[914.28571429,550,142.85714286,"NP"],
[1057.1428571,550,142.85714286,"NP"],
[200,555,11.363636364,"BP"],
[211.36363636,555,11.363636364,"BP"],
[222.72727273,555,11.363636364,"BP"],
[234.09090909,555,11.363636364,"BP"],
[245.45454545,555,11.363636364,"BP"],
[256.81818182,555,11.363636364,"BP"],
[268.18181818,555,11.363636364,"BP"],
[279.54545455,555,11.363636364,"BP"],
[290.90909091,555,11.363636364,"GP"],
[302.27272727,555,11.363636364,"GP"],
[313.63636364,555,11.363636364,"GP"],
[325,555,11.363636364,"GP"],
[336.36363636,555,11.363636364,"GP"],
[347.72727273,555,11.363636364,"GP"],
[359.09090909,555,11.363636364,"GP"],
[370.45454545,555,11.363636364,"NP"],
[381.81818182,555,11.363636364,"NP"],
[393.18181818,555,11.363636364,"NP"],
[404.54545455,555,11.363636364,"NP"],
[415.90909091,555,11.363636364,"NP"],
[427.27272727,555,11.363636364,"NP"],
[438.63636364,555,11.363636364,"NP"],
[450,555,11.363636364,"NP"],
[461.36363636,555,11.363636364,"NP"],
[472.72727273,555,11.363636364,"NP"],
[484.09090909,555,11.363636364,"NP"],
[495.45454545,555,11.363636364,"NP"],
[506.81818182,555,11.363636364,"NP"],
[518.18181818,555,11.363636364,"NP"],
[529.54545455,555,11.363636364,"NP"],
[540.90909091,555,11.363636364,"NP"],
[552.27272727,555,11.363636364,"NP"],
[563.63636364,555,11.363636364,"NP"],
[575,555,11.363636364,"NP"],
[586.36363636,555,11.363636364,"NP"],
[597.72727273,555,11.363636364,"NP"],
[609.09090909,555,11.363636364,"NP"],
[620.45454545,555,11.363636364,"NP"],
[631.81818182,555,11.363636364,"NP"],
[643.18181818,555,11.363636364,"NP"],
[654.54545455,555,11.363636364,"NP"],
[665.90909091,555,11.363636364,"NP"],
[677.27272727,555,11.363636364,"NP"],
[688.63636364,555,11.363636364,"NP"],
[700,555,11.363636364,"NP"],
[711.36363636,555,11.363636364,"NP"],
[722.72727273,555,11.363636364,"NP"],
[734.09090909,555,11.363636364,"NP"],
[745.45454545,555,11.363636364,"NP"],
[756.81818182,555,11.363636364,"NP"],
[768.18181818,555,11.363636364,"NP"],
[779.54545455,555,11.363636364,"NP"],
[790.90909091,555,11.363636364,"NP"],
[802.27272727,555,11.363636364,"RP"],
[813.63636364,555,11.363636364,"RP"],
[825,555,11.363636364,"RP"],
[836.36363636,555,11.363636364,"RP"],
[847.72727273,555,11.363636364,"RP"],
[859.09090909,555,11.363636364,"RP"],
[870.45454545,555,11.363636364,"RP"],
[881.81818182,555,11.363636364,"RP"],
[893.18181818,555,11.363636364,"RP"],
[904.54545455,555,11.363636364,"RP"],
[915.90909091,555,11.363636364,"RP"],
[927.27272727,555,11.363636364,"NP"],
[938.63636364,555,11.363636364,"NP"],
[950,555,11.363636364,"NP"],
[961.36363636,555,11.363636364,"NP"],
[972.72727273,555,11.363636364,"NP"],
[984.09090909,555,11.363636364,"NP"],
[995.45454545,555,11.363636364,"NP"],
[1006.8181818,555,11.363636364,"NP"],
[1018.1818182,555,11.363636364,"NP"],
[1029.5454545,555,11.363636364,"NP"],
[1040.9090909,555,11.363636364,"NP"],
[1052.2727273,555,11.363636364,"NP"],
[1063.6363636,555,11.363636364,"NP"],
[1075,555,11.363636364,"NP"],
[1086.3636364,555,11.363636364,"NP"],
[1097.7272727,555,11.363636364,"NP"],
[1109.0909091,555,11.363636364,"NP"],
[1120.4545455,555,11.363636364,"NP"],
[1131.8181818,555,11.363636364,"NP"],
[1143.1818182,555,11.363636364,"NP"],
[1154.5454545,555,11.363636364,"NP"],
[1165.9090909,555,11.363636364,"NP"],
[1177.2727273,555,11.363636364,"NP"],
[1188.6363636,555,11.363636364,"NP"],
[200,560,166.66666667,"NP"],
[366.66666667,560,166.66666667,"NP"],
[533.33333333,560,166.66666667,"NP"],
[700,560,166.66666667,"NP"],
[866.66666667,560,166.66666667,"NP"],
[1033.3333333,560,166.66666667,"RP"],
[200,565,166.66666667,"NP"],
[366.66666667,565,166.66666667,"NP"],
[533.33333333,565,166.66666667,"NP"],
[700,565,166.66666667,"NP"],
[866.66666667,565,166.66666667,"NP"],
[1033.3333333,565,166.66666667,"NP"],
[200,570,111.11111111,"GP"],
[311.11111111,570,111.11111111,"NP"],
[422.22222222,570,111.11111111,"NP"],
[533.33333333,570,111.11111111,"NP"],
[644.44444444,570,111.11111111,"NP"],
[755.55555556,570,111.11111111,"NP"],
[866.66666667,570,111.11111111,"NP"],
[977.77777778,570,111.11111111,"RP"],
[1088.8888889,570,111.11111111,"NP"],
[200,575,142.85714286,"GP"],
[342.85714286,575,142.85714286,"NP"],
[485.71428571,575,142.85714286,"NP"],
[628.57142857,575,142.85714286,"NP"],
[771.42857143,575,142.85714286,"NP"],
[914.28571429,575,142.85714286,"NP"],
[1057.1428571,575,142.85714286,"NP"],
[200,580,142.85714286,"GP"],
[342.85714286,580,142.85714286,"NP"],
[485.71428571,580,142.85714286,"NP"],
[628.57142857,580,142.85714286,"NP"],
[771.42857143,580,142.85714286,"NP"],
[914.28571429,580,142.85714286,"NP"],
[1057.1428571,580,142.85714286,"NP"],
[200,585,15.625,"GP"],
[215.625,585,15.625,"GP"],
[231.25,585,15.625,"GP"],
[246.875,585,15.625,"GP"],
[262.5,585,15.625,"GP"],
[278.125,585,15.625,"GP"],
[293.75,585,15.625,"GP"],
[309.375,585,15.625,"GP"],
[325,585,15.625,"GP"],
[340.625,585,15.625,"GP"],
[356.25,585,15.625,"GP"],
[371.875,585,15.625,"NP"],
[387.5,585,15.625,"NP"],
[403.125,585,15.625,"NP"],
[418.75,585,15.625,"NP"],
[434.375,585,15.625,"NP"],
[450,585,15.625,"NP"],
[465.625,585,15.625,"NP"],
[481.25,585,15.625,"NP"],
[496.875,585,15.625,"NP"],
[512.5,585,15.625,"NP"],
[528.125,585,15.625,"NP"],
[543.75,585,15.625,"NP"],
[559.375,585,15.625,"NP"],
[575,585,15.625,"NP"],
[590.625,585,15.625,"NP"],
[606.25,585,15.625,"NP"],
[621.875,585,15.625,"NP"],
[637.5,585,15.625,"NP"],
[653.125,585,15.625,"NP"],
[668.75,585,15.625,"NP"],
[684.375,585,15.625,"NP"],
[700,585,15.625,"NP"],
[715.625,585,15.625,"NP"],
[731.25,585,15.625,"NP"],
[746.875,585,15.625,"RP"],
[762.5,585,15.625,"RP"],
[778.125,585,15.625,"RP"],
[793.75,585,15.625,"NP"],
[809.375,585,15.625,"NP"],
[825,585,15.625,"NP"],
[840.625,585,15.625,"NP"],
[856.25,585,15.625,"NP"],
[871.875,585,15.625,"NP"],
[887.5,585,15.625,"NP"],
[903.125,585,15.625,"NP"],
[918.75,585,15.625,"NP"],
[934.375,585,15.625,"NP"],
[950,585,15.625,"NP"],
[965.625,585,15.625,"NP"],
[981.25,585,15.625,"NP"],
[996.875,585,15.625,"NP"],
[1012.5,585,15.625,"NP"],
[1028.125,585,15.625,"NP"],
[1043.75,585,15.625,"NP"],
[1059.375,585,15.625,"NP"],
[1075,585,15.625,"NP"],
[1090.625,585,15.625,"NP"],
[1106.25,585,15.625,"NP"],
[1121.875,585,15.625,"NP"],
[1137.5,585,15.625,"NP"],
[1153.125,585,15.625,"NP"],
[1168.75,585,15.625,"NP"],
[1184.375,585,15.625,"NP"],
[200,590,166.66666667,"NP"],
[366.66666667,590,166.66666667,"NP"],
[533.33333333,590,166.66666667,"NP"],
[700,590,166.66666667,"NP"],
[866.66666667,590,166.66666667,"NP"],
[1033.3333333,590,166.66666667,"NP"],
[200,595,166.66666667,"BP"],
[366.66666667,595,166.66666667,"GP"],
[533.33333333,595,166.66666667,"GP"],
[700,595,166.66666667,"GP"],
[866.66666667,595,166.66666667,"GP"],
[1033.3333333,595,166.66666667,"GP"],
[200,600,142.85714286,"BP"],
[342.85714286,600,142.85714286,"NP"],
[485.71428571,600,142.85714286,"NP"],
[628.57142857,600,142.85714286,"NP"],
[771.42857143,600,142.85714286,"NP"],
[914.28571429,600,142.85714286,"NP"],
[1057.1428571,600,142.85714286,"NP"],
[200,605,166.66666667,"BP"],
[366.66666667,605,166.66666667,"GP"],
[533.33333333,605,166.66666667,"GP"],
[700,605,166.66666667,"GP"],
[866.66666667,605,166.66666667,"NP"],
[1033.3333333,605,166.66666667,"NP"],
[200,610,125,"NP"],
[325,610,125,"NP"],
[450,610,125,"NP"],
[575,610,125,"NP"],
[700,610,125,"NP"],
[825,610,125,"NP"],
[950,610,125,"NP"],
[1075,610,125,"NP"],
[200,615,142.85714286,"BP"],
[342.85714286,615,142.85714286,"GP"],
[485.71428571,615,142.85714286,"NP"],
[628.57142857,615,142.85714286,"NP"],
[771.42857143,615,142.85714286,"NP"],
[914.28571429,615,142.85714286,"NP"],
[1057.1428571,615,142.85714286,"RP"],
[200,620,142.85714286,"BP"],
[342.85714286,620,142.85714286,"GP"],
[485.71428571,620,142.85714286,"NP"],
[628.57142857,620,142.85714286,"NP"],
[771.42857143,620,142.85714286,"RP"],
[914.28571429,620,142.85714286,"RP"],
[1057.1428571,620,142.85714286,"RP"],
[200,625,166.66666667,"NP"],
[366.66666667,625,166.66666667,"NP"],
[533.33333333,625,166.66666667,"NP"],
[700,625,166.66666667,"RP"],
[866.66666667,625,166.66666667,"NP"],
[1033.3333333,625,166.66666667,"NP"],
[200,630,142.85714286,"NP"],
[342.85714286,630,142.85714286,"NP"],
[485.71428571,630,142.85714286,"NP"],
[628.57142857,630,142.85714286,"NP"],
[771.42857143,630,142.85714286,"NP"],
[914.28571429,630,142.85714286,"RP"],
[1057.1428571,630,142.85714286,"RP"],
[200,635,166.66666667,"BP"],
[366.66666667,635,166.66666667,"BP"],
[533.33333333,635,166.66666667,"NP"],
[700,635,166.66666667,"NP"],
[866.66666667,635,166.66666667,"NP"],
[1033.3333333,635,166.66666667,"RP"],
[200,640,166.66666667,"BP"],
[366.66666667,640,166.66666667,"BP"],
[533.33333333,640,166.66666667,"BP"],
[700,640,166.66666667,"GP"],
[866.66666667,640,166.66666667,"GP"],
[1033.3333333,640,166.66666667,"GP"],
[200,645,125,"RP"],
[325,645,125,"RP"],
[450,645,125,"RP"],
[575,645,125,"RP"],
[700,645,125,"RP"],
[825,645,125,"RP"],
[950,645,125,"NP"],
[1075,645,125,"NP"],
[200,650,166.66666667,"BP"],
[366.66666667,650,166.66666667,"GP"],
[533.33333333,650,166.66666667,"GP"],
[700,650,166.66666667,"NP"],
[866.66666667,650,166.66666667,"RP"],
[1033.3333333,650,166.66666667,"NP"],
[200,655,166.66666667,"BP"],
[366.66666667,655,166.66666667,"GP"],
[533.33333333,655,166.66666667,"GP"],
[700,655,166.66666667,"GP"],
[866.66666667,655,166.66666667,"GP"],
[1033.3333333,655,166.66666667,"NP"],
[200,660,166.66666667,"BP"],
[366.66666667,660,166.66666667,"BP"],
[533.33333333,660,166.66666667,"GP"],
[700,660,166.66666667,"GP"],
[866.66666667,660,166.66666667,"NP"],
[1033.3333333,660,166.66666667,"NP"],
[200,665,166.66666667,"NP"],
[366.66666667,665,166.66666667,"NP"],
[533.33333333,665,166.66666667,"NP"],
[700,665,166.66666667,"NP"],
[866.66666667,665,166.66666667,"NP"],
[1033.3333333,665,166.66666667,"NP"],
[200,670,166.66666667,"NP"],
[366.66666667,670,166.66666667,"NP"],
[533.33333333,670,166.66666667,"NP"],
[700,670,166.66666667,"NP"],
[866.66666667,670,166.66666667,"RP"],
[1033.3333333,670,166.66666667,"NP"],
[200,675,125,"BP"],
[325,675,125,"GP"],
[450,675,125,"GP"],
[575,675,125,"GP"],
[700,675,125,"NP"],
[825,675,125,"NP"],
[950,675,125,"NP"],
[1075,675,125,"NP"],
[200,680,125,"GP"],
[325,680,125,"NP"],
[450,680,125,"NP"],
[575,680,125,"NP"],
[700,680,125,"NP"],
[825,680,125,"NP"],
[950,680,125,"NP"],
[1075,680,125,"NP"],
[200,685,13.698630137,"GP"],
[213.69863014,685,13.698630137,"GP"],
[227.39726027,685,13.698630137,"GP"],
[241.09589041,685,13.698630137,"NP"],
[254.79452055,685,13.698630137,"NP"],
[268.49315068,685,13.698630137,"NP"],
[282.19178082,685,13.698630137,"NP"],
[295.89041096,685,13.698630137,"NP"],
[309.5890411,685,13.698630137,"NP"],
[323.28767123,685,13.698630137,"NP"],
[336.98630137,685,13.698630137,"NP"],
[350.68493151,685,13.698630137,"NP"],
[364.38356164,685,13.698630137,"NP"],
[378.08219178,685,13.698630137,"NP"],
[391.78082192,685,13.698630137,"NP"],
[405.47945205,685,13.698630137,"NP"],
[419.17808219,685,13.698630137,"NP"],
[432.87671233,685,13.698630137,"NP"],
[446.57534247,685,13.698630137,"NP"],
[460.2739726,685,13.698630137,"NP"],
[473.97260274,685,13.698630137,"NP"],
[487.67123288,685,13.698630137,"NP"],
[501.36986301,685,13.698630137,"NP"],
[515.06849315,685,13.698630137,"NP"],
[528.76712329,685,13.698630137,"NP"],
[542.46575342,685,13.698630137,"NP"],
[556.16438356,685,13.698630137,"NP"],
[569.8630137,685,13.698630137,"NP"],
[583.56164384,685,13.698630137,"NP"],
[597.26027397,685,13.698630137,"NP"],
[610.95890411,685,13.698630137,"NP"],
[624.65753425,685,13.698630137,"NP"],
[638.35616438,685,13.698630137,"NP"],
[652.05479452,685,13.698630137,"NP"],
[665.75342466,685,13.698630137,"NP"],
[679.45205479,685,13.698630137,"NP"],
[693.15068493,685,13.698630137,"NP"],
[706.84931507,685,13.698630137,"NP"],
[720.54794521,685,13.698630137,"NP"],
[734.24657534,685,13.698630137,"NP"],
[747.94520548,685,13.698630137,"NP"],
[761.64383562,685,13.698630137,"NP"],
[775.34246575,685,13.698630137,"NP"],
[789.04109589,685,13.698630137,"NP"],
[802.73972603,685,13.698630137,"NP"],
[816.43835616,685,13.698630137,"NP"],
[830.1369863,685,13.698630137,"NP"],
[843.83561644,685,13.698630137,"NP"],
[857.53424658,685,13.698630137,"NP"],
[871.23287671,685,13.698630137,"NP"],
[884.93150685,685,13.698630137,"RP"],
[898.63013699,685,13.698630137,"RP"],
[912.32876712,685,13.698630137,"RP"],
[926.02739726,685,13.698630137,"RP"],
[939.7260274,685,13.698630137,"RP"],
[953.42465753,685,13.698630137,"RP"],
[967.12328767,685,13.698630137,"RP"],
[980.82191781,685,13.698630137,"RP"],
[994.52054795,685,13.698630137,"RP"],
[1008.2191781,685,13.698630137,"RP"],
[1021.9178082,685,13.698630137,"RP"],
[1035.6164384,685,13.698630137,"RP"],
[1049.3150685,685,13.698630137,"NP"],
[1063.0136986,685,13.698630137,"NP"],
[1076.7123288,685,13.698630137,"NP"],
[1090.4109589,685,13.698630137,"NP"],
[1104.109589,685,13.698630137,"NP"],
[1117.8082192,685,13.698630137,"NP"],
[1131.5068493,685,13.698630137,"NP"],
[1145.2054795,685,13.698630137,"NP"],
[1158.9041096,685,13.698630137,"NP"],
[1172.6027397,685,13.698630137,"NP"],
[1186.3013699,685,13.698630137,"NP"]	
							
							
							
						  ];
	
			//Create SVG element
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			svg.selectAll("rect")
			   .data(dataset)
			   .enter()
			   .append("rect")
			   .attr("x", function(d) {
			   		return d[0];
			   })
			   .attr("y", function(d) {
			   		return d[1];
			   })
			  .attr("height", 5)
              .attr("width", function(d) {return d[2];})
			   .attr("class", function(d) {return d[3];})
			   .attr("fill","#E6EEF5")
			  .attr("stroke","grey")
			  .attr("stroke-width", 0.1) 
			  
			  
			  
svg.append("rect")
.data(dataset)
   .attr("x", 100)
			   .attr("y", 150)
			  .attr("height", 20)
              .attr("width", 80)
			  .attr("fill","white")
			  .attr("stroke","black")
			  .attr("stroke-width", 0.2) 
			  .on("mouseover", function() {
      svg.selectAll("rect.NP")
        .transition()
        .attr("fill","blue")

    })
	.on("mouseout", function() {
      svg.selectAll("rect.NP")
        .transition()
        .attr("fill","#E6EEF5")

    })
	
	svg.append("rect")
.data(dataset)
   .attr("x", 100)
			   .attr("y", 250)
			  .attr("height", 20)
              .attr("width", 80)
			  .attr("fill","white")
			  .attr("stroke","black")
			  .attr("stroke-width", 0.2) 
			  .on("mouseover", function() {
      svg.selectAll("rect.BP")
        .transition()
        .attr("fill","orange")

    })
	.on("mouseout", function() {
      svg.selectAll("rect.BP")
        .transition()
        .attr("fill","#E6EEF5")

    })
	
	
	svg.append("rect")
.data(dataset)
   .attr("x", 100)
			   .attr("y", 350)
			  .attr("height", 20)
              .attr("width", 80)
			  .attr("fill","white")
			  .attr("stroke","black")
			  .attr("stroke-width", 0.2) 
			  .on("mouseover", function() {
      svg.selectAll("rect.RP")
        .transition()
        .attr("fill","red")

    })
	.on("mouseout", function() {
      svg.selectAll("rect.RP")
        .transition()
        .attr("fill","#E6EEF5")

    })
	
	
	
	svg.append("rect")
.data(dataset)
   .attr("x", 100)
			   .attr("y", 450)
			  .attr("height", 20)
              .attr("width", 80)
			  .attr("fill","white")
			  .attr("stroke","black")
			  .attr("stroke-width", 0.2) 
			  .on("mouseover", function() {
      svg.selectAll("rect.GP")
        .transition()
        .attr("fill","purple")

    })
	.on("mouseout", function() {
      svg.selectAll("rect.GP")
        .transition()
        .attr("fill","#E6EEF5")

    })
	
</script>



</body>
</html><!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    
    <title>Which UK postal areas have most customers etc.</title>
    
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	<script type="text/javascript" src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    
	
</head> 

<body>   


<script type="text/javascript">

//Width and height
			var w = 1500;
			var h = 6500;

		var xScale = d3.scale.linear().domain([1, 6]).range([100, 1300]);
		var yScale = d3.scale.linear().domain([1, 22]).range([100, 4500]);
		var custScale = d3.scale.linear().domain([0, 15000]).range([0, 5]);
		
		

			//Create SVG element
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

						
						
					xyz = [

["AB",5600,1675,1,1,207957],
["AL",9297,2048,2,1,96839],
["B",62167,13049,3,1,739079],
["BA",44372,5183,4,1,182163],
["BB",12583,3458,5,1,197646],
["BD",16567,3978,6,1,213614],
["BH",14080,4606,1,2,229598],
["BL",11088,2920,2,2,155710],
["BN",137674,14904,3,2,351013],
["BR",45275,4196,4,2,126182],
["BS",128922,12978,5,2,379617],
["BT",0,0,6,2,668709],
["CA",13292,3031,1,3,137999],
["CB",14701,3375,2,3,162050],
["CF",17222,5130,3,3,404900],
["CH",13849,3903,4,3,279328],
["CM",32328,6423,5,3,261699],
["CO",18792,3895,6,3,176454],
["CR",62632,4652,1,4,159988],
["CT",73671,6867,2,4,197566],
["CV",30393,6847,3,4,334007],
["CW",8213,2194,4,4,127531],
["DA",63419,5350,5,4,168485],
["DD",2971,1053,6,4,123670],
["DE",23268,5970,1,5,299479],
["DG",2040,735,2,5,66605],
["DH",16374,3017,3,5,128487],
["DL",17731,3075,4,5,151872],
["DN",30919,7062,5,5,311334],
["DT",12673,2067,6,5,92623],
["DY",12246,3309,1,6,167525],
["E",151588,7552,2,6,342879],
["EC",12017,537,3,6,17946],
["EH",14019,4897,4,6,372765],
["EN",16481,2270,5,6,135643],
["EX",108604,10684,6,6,233829],
["FK",3651,1360,1,7,116687],
["FY",7719,2232,2,7,128080],
["G",18168,5597,3,7,521729],
["GL",23701,5872,4,7,251132],
["GU",45418,7348,5,7,282862],
["HA",22890,2980,6,7,164097],
["HD",9611,2585,1,8,106847],
["HG",6175,1436,2,8,58627],
["HP",20195,4434,3,8,186675],
["HR",5972,1440,4,8,74965],
["HS",252,30,5,8,11506],
["HU",15585,3826,6,8,186568],
["HX",5310,1324,1,9,65280],
["IG",46420,3051,2,9,118305],
["IP",27469,6214,3,9,241930],
["IV",2393,714,4,9,91622],
["KA",4765,1839,5,9,161523],
["KT",79669,7598,6,9,214193],
["KW",542,111,1,10,22778],
["KY",4826,1882,2,10,156064],
["L",13778,3693,3,10,360589],
["LA",9774,3177,4,10,142657],
["LD",905,235,5,10,21781],
["LE",29415,7264,6,10,377589],
["LL",9665,2645,1,11,231846],
["LN",10352,2721,2,11,122580],
["LS",28238,7257,3,11,321109],
["LU",17073,2702,4,11,126244],
["M",34539,7751,5,11,468971],
["ME",84998,8065,6,11,235741],
["MK",19824,4519,1,12,197525],
["ML",5252,1624,2,12,160915],
["N",86501,5921,3,12,324437],
["NE",58915,10323,4,12,499131],
["NG",33650,8584,5,12,482241],
["NN",21859,5154,6,12,262830],
["NP",7130,2267,1,13,203149],
["NR",33137,7511,2,13,309258],
["NW",88247,4787,3,13,219171],
["OL",11670,2824,4,13,185705],
["OX",18945,4629,5,13,240115],
["PA",3849,1302,6,13,145075],
["PE",31920,7399,1,14,359411],
["PH",1866,562,2,14,70087],
["PL",102301,9318,3,14,228836],
["PO",21962,6090,4,14,345362],
["PR",14782,4246,5,14,213722],
["RG",23683,6453,6,14,300688],
["RH",76009,8284,1,15,208326],
["RM",33787,3676,2,15,203839],
["S",36390,9817,3,15,561727],
["SA",11946,3598,4,15,307807],
["SE",182939,9073,5,15,393659],
["SG",16456,3678,6,15,163373],
["SK",20980,5723,1,16,257554],
["SL",10143,2253,2,16,135441],
["SM",33948,2926,3,16,89446],
["SN",17058,3827,4,16,176476],
["SO",18211,5071,5,16,267975],
["SP",5573,1392,6,16,93767],
["SR",16144,2986,1,17,109423],
["SS",25551,4490,2,17,214249],
["ST",16981,4658,3,17,266028],
["SW",175675,10402,4,17,385445],
["SY",8542,2254,5,17,141274],
["TA",64785,6466,6,17,138995],
["TD",2441,729,1,18,49641],
["TF",6377,1747,2,18,86696],
["TN",123976,12214,3,18,273874],
["TQ",56023,5149,4,18,127262],
["TR",67167,5730,5,18,127710],
["TS",31397,5031,6,18,254531],
["TW",39004,4330,1,19,185527],
["UB",10672,1514,2,19,126324],
["W",78652,4881,3,19,240973],
["WA",17187,4324,4,19,250278],
["WC",10737,430,5,19,17153],
["WD",12395,1991,6,19,98153],
["WF",18057,4236,1,20,209349],
["WN",8540,2287,2,20,128077],
["WR",9450,2484,3,20,120477],
["WS",15068,3317,4,20,173666],
["WV",11497,2727,5,20,158199],
["YO",24179,5578,6,20,233973],
["ZE",116,26,1,21,9465]

];

					
						
		function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}				
						
						
						
						
						
						
						

			   svg.selectAll("bubb")
			   .data(xyz)
			   .enter()
			   .append("circle")
			   .attr("cx", function(d) {
			   		return xScale(d[3])
			   })
			   .attr("cy", function(d) {
			   		return yScale(d[4])
			   })
			  .attr("r", function(d) {
			   		return custScale(d[1])
			   })
			   .style("opacity",0.5)
			  .attr("fill","#FF9933")
			  
			  
			  			   svg.selectAll("bubb2")
			   .data(xyz)
			   .enter()
			   .append("circle")
			   .attr("cx", function(d) {
			   		return xScale(d[3])
			   })
			   .attr("cy", function(d) {
			   		return yScale(d[4])
			   })
			  .attr("r", function(d) {
			   		return custScale(d[2])
			   })
			  .attr("fill","blue")
			  
			  
			  			  			   svg.selectAll("bubb4")
			   .data(xyz)
			   .enter()
			   .append("circle")
			   .attr("cx", function(d) {
			   		return xScale(d[3])
			   })
			   .attr("cy", function(d) {
			   		return yScale(d[4])
			   })
			  .attr("r", function(d) {
			   		return custScale(d[5])
			   })
			  .attr("fill","#666699")
			  .style("opacity",0.1)
			  
			  
			  			   svg.selectAll("bubb3")
			   .data(xyz)
			   .enter()
			   .append("text")
			   .attr("x", function(d) {
			   		return xScale(d[3]) - 5
			   })
			   .attr("y", function(d) {
			   		return yScale(d[4]) -50
			   })
			   .text(function(d) {
			   		return d[0];
			   })
			   .style("font-family","tahoma")
			   .style("fill","grey")
			   .style("font-size","13px")	
			   .style("font-weight","bold")	
			   
			   
			   
			   			  			   svg.selectAll("cust")
			   .data(xyz)
			   .enter()
			   .append("text")
			   .attr("x", function(d) {
			   		return xScale(d[3]) +25
			   })
			   .attr("y", function(d) {
			   		return yScale(d[4])-35
			   })
			   .text(function(d) {
			   		return numberWithCommas(d[1]);
			   })
			   .style("font-family","tahoma")
			   .style("fill","orange")
			   .style("font-size","12px")	
			   
			   
			   		   			  			   svg.selectAll("hh")
			   .data(xyz)
			   .enter()
			   .append("text")
			   .attr("x", function(d) {
			   		return xScale(d[3]) +25
			   })
			   .attr("y", function(d) {
			   		return yScale(d[4])-50
			   })
			   .text(function(d) {
			   		return numberWithCommas(d[5]);
			   })
			   .style("font-family","tahoma")
			   .style("fill","grey")
			   .style("font-size","12px")	
			   
			   
			   			   		   			  			   svg.selectAll("blue")
			   .data(xyz)
			   .enter()
			   .append("text")
			   .attr("x", function(d) {
			   		return xScale(d[3]) +25
			   })
			   .attr("y", function(d) {
			   		return yScale(d[4])-20
			   })
			   .text(function(d) {
			   		return numberWithCommas(d[2]);
			   })
			   .style("font-family","tahoma")
			   .style("fill","blue")
			   .style("font-size","12px")	
			  
			   
</script>

</body>
</html><!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    
    <title>Misleading quotes</title>
    
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	<script type="text/javascript" src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
	<script src="http://d3js.org/d3.v3.min.js"></script>


    
	
	 <style type="text/css"> 
	
	body {
	margin:50px 250px; padding:0px;
	text-align:center;
	}
	
	
#x
{
opacity:0.1;
filter:alpha(opacity=10); /* For IE8 and earlier */
font-family:"HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
font-size:24px;
}
#x:hover
{
opacity:1.0;
filter:alpha(opacity=100); /* For IE8 and earlier */
font-family:"HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
font-size:24px;

}


#c
{
opacity:1;
filter:alpha(opacity=40); /* For IE8 and earlier */
font-family:"HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
font-size:24px;
}

	</style>
	


	
	
	
</head> 

<body>   

<img src="http://static.guim.co.uk/sys-images/Guardian/About/General/2012/5/8/1336497298362/Critics-quote-for-Rock-of-008.jpg" width="230" height="138" alt="Critic's quote for Rock of Ages" >


<p><span id="x" >It's a very peculiar show indeed, with an unvarying and unpleasant tone of careless sexualisation. </span><span id="c"> Rock'n'roll debauchery</span><span id="x" > is presented as the pure and innocent way of dreamers.</span></p>
<hr>
<p><span id="x" >The action in this fast-paced,  </span><span id="c">hysterically</span><span id="x" > overproduced and surprisingly </span><span id="c">entertaining</span><span id="x" >  film is as realistic as a Road Runner cartoon.</span></p>
<hr>
</body>



</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

svg {
  font: 10px sans-serif;
}

.area {
  fill: steelblue;
  clip-path: url(#clip);
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.brush .extent {
  stroke: #fff;
  fill-opacity: .125;
  shape-rendering: crispEdges;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 10, right: 10, bottom: 100, left: 40},
    margin2 = {top: 430, right: 10, bottom: 20, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom,
    height2 = 500 - margin2.top - margin2.bottom;

var parseDate = d3.time.format("%b %Y").parse;

var x = d3.time.scale().range([0, width]),
    x2 = d3.time.scale().range([0, width]),
    y = d3.scale.linear().range([height, 0]),
    y2 = d3.scale.linear().range([height2, 0]);

var xAxis = d3.svg.axis().scale(x).orient("bottom"),
    xAxis2 = d3.svg.axis().scale(x2).orient("bottom"),
    yAxis = d3.svg.axis().scale(y).orient("left");

var brush = d3.svg.brush()
    .x(x2)
    .on("brush", brushed);

var area = d3.svg.area()
    .interpolate("monotone")
    .x(function(d) { return x(d.date); })
    .y0(height)
    .y1(function(d) { return y(d.price); });

var area2 = d3.svg.area()
    .interpolate("monotone")
    .x(function(d) { return x2(d.date); })
    .y0(height2)
    .y1(function(d) { return y2(d.price); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom);

svg.append("defs").append("clipPath")
    .attr("id", "clip")
  .append("rect")
    .attr("width", width)
    .attr("height", height);

var focus = svg.append("g")
    .attr("class", "focus")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var context = svg.append("g")
    .attr("class", "context")
    .attr("transform", "translate(" + margin2.left + "," + margin2.top + ")");

d3.csv("sp500.csv", type, function(error, data) {
  x.domain(d3.extent(data.map(function(d) { return d.date; })));
  y.domain([0, d3.max(data.map(function(d) { return d.price; }))]);
  x2.domain(x.domain());
  y2.domain(y.domain());

  focus.append("path")
      .datum(data)
      .attr("class", "area")
      .attr("d", area);

  focus.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  focus.append("g")
      .attr("class", "y axis")
      .call(yAxis);

  context.append("path")
      .datum(data)
      .attr("class", "area")
      .attr("d", area2);

  context.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height2 + ")")
      .call(xAxis2);

  context.append("g")
      .attr("class", "x brush")
      .call(brush)
    .selectAll("rect")
      .attr("y", -6)
      .attr("height", height2 + 7);
});

function brushed() {
  x.domain(brush.empty() ? x2.domain() : brush.extent());
  focus.select(".area").attr("d", area);
  focus.select(".x.axis").call(xAxis);
}

function type(d) {
  d.date = parseDate(d.date);
  d.price = +d.price;
  return d;
}

</script>
<!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://nvd3.org/assets/css/nv.d3.css'>
    
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js' type='text/javascript'></script>
    <script src='http://nvd3.org/assets/lib/fisheye.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart1c8d700ddd29' class = 'rChart nvd3'></div>    
    <script type='text/javascript'>
 $(document).ready(function(){
      drawchart1c8d700ddd29()
    });
    function drawchart1c8d700ddd29(){  
      var opts = {
 "dom": "chart1c8d700ddd29",
"width":    800,
"height":    400,
"process_data": true,
"x": "Hair",
"y": "Freq",
"group": "Eye",
"type": "multiBarChart",
"id": "chart1c8d700ddd29" 
},
        data = [
 {
 "Hair": "Black",
"Eye": "Brown",
"Sex": "Male",
"Freq":             32 
},
{
 "Hair": "Brown",
"Eye": "Brown",
"Sex": "Male",
"Freq":             53 
},
{
 "Hair": "Red",
"Eye": "Brown",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Brown",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Black",
"Eye": "Blue",
"Sex": "Male",
"Freq":             11 
},
{
 "Hair": "Brown",
"Eye": "Blue",
"Sex": "Male",
"Freq":             50 
},
{
 "Hair": "Red",
"Eye": "Blue",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Blue",
"Sex": "Male",
"Freq":             30 
},
{
 "Hair": "Black",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Brown",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             25 
},
{
 "Hair": "Red",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              5 
},
{
 "Hair": "Black",
"Eye": "Green",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Brown",
"Eye": "Green",
"Sex": "Male",
"Freq":             15 
},
{
 "Hair": "Red",
"Eye": "Green",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Green",
"Sex": "Male",
"Freq":              8 
} 
]
  
      if(!(opts.type==="pieChart" || opts.type==="sparklinePlus" || opts.type==="bulletChart")) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? 'main' : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .width(opts.width)
          .height(opts.height)
          
        if (opts.type != "bulletChart"){
          chart
            .x(function(d) { return d[opts.x] })
            .y(function(d) { return d[opts.y] })
        }
          
         
        
          
        

        
        
        
      
       d3.select("#" + opts.id)
        .append('svg')
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
    };
</script>
    
    <script></script>    
  </body>
  <script>
  function getURLParameter(name) {
    return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null
  }
  console.log(getURLParameter("viewer_pane"))
  if (getURLParameter("viewer_pane") === "1"){
    document.write("<style>.rChart { width: 100% }</style>");
  }
  </script>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://nvd3.org/assets/css/nv.d3.css'>
    
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js' type='text/javascript'></script>
    <script src='http://nvd3.org/assets/lib/fisheye.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart1c8d202bc405' class = 'rChart nvd3'></div>    
    <script type='text/javascript'>
 $(document).ready(function(){
      drawchart1c8d202bc405()
    });
    function drawchart1c8d202bc405(){  
      var opts = {
 "dom": "chart1c8d202bc405",
"width":    800,
"height":    400,
"process_data": true,
"x": "Hair",
"y": "Freq",
"group": "Eye",
"type": "multiBarChart",
"id": "chart1c8d202bc405" 
},
        data = [
 {
 "Hair": "Black",
"Eye": "Brown",
"Sex": "Male",
"Freq":             32 
},
{
 "Hair": "Brown",
"Eye": "Brown",
"Sex": "Male",
"Freq":             53 
},
{
 "Hair": "Red",
"Eye": "Brown",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Brown",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Black",
"Eye": "Blue",
"Sex": "Male",
"Freq":             11 
},
{
 "Hair": "Brown",
"Eye": "Blue",
"Sex": "Male",
"Freq":             50 
},
{
 "Hair": "Red",
"Eye": "Blue",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Blond",
"Eye": "Blue",
"Sex": "Male",
"Freq":             30 
},
{
 "Hair": "Black",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             10 
},
{
 "Hair": "Brown",
"Eye": "Hazel",
"Sex": "Male",
"Freq":             25 
},
{
 "Hair": "Red",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Hazel",
"Sex": "Male",
"Freq":              5 
},
{
 "Hair": "Black",
"Eye": "Green",
"Sex": "Male",
"Freq":              3 
},
{
 "Hair": "Brown",
"Eye": "Green",
"Sex": "Male",
"Freq":             15 
},
{
 "Hair": "Red",
"Eye": "Green",
"Sex": "Male",
"Freq":              7 
},
{
 "Hair": "Blond",
"Eye": "Green",
"Sex": "Male",
"Freq":              8 
} 
]
  
      if(!(opts.type==="pieChart" || opts.type==="sparklinePlus" || opts.type==="bulletChart")) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? 'main' : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .width(opts.width)
          .height(opts.height)
          
        if (opts.type != "bulletChart"){
          chart
            .x(function(d) { return d[opts.x] })
            .y(function(d) { return d[opts.y] })
        }
          
         
        
          
        

        
        
        
      
       d3.select("#" + opts.id)
        .append('svg')
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
    };
</script>
    
    <script></script>    
  </body>
  <script>
  function getURLParameter(name) {
    return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null
  }
  console.log(getURLParameter("viewer_pane"))
  if (getURLParameter("viewer_pane") === "1"){
    document.write("<style>.rChart { width: 100% }</style>");
  }
  </script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
  <!-- CDN IMPORTS -->
  <link href='http://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'>
  <!-- LOCAL IMPORTS -->

  <!-- IN GIST -->
  <link rel="stylesheet/less" type="text/css" href="style.less">

  </head>
  <body>
    <label><input type="checkbox"> Sort values</label>
    <!-- CDN IMPORTS -->
    <!-- // <script src="http://cdnjs.cloudflare.com/ajax/libs/less.js/1.7.0/less.min.js"></script> -->
    <!-- // <script src="http://d3js.org/d3.v3.min.js"></script> -->
    <!-- LOCAL IMPORTS -->
    <script src="/milroc/raw/9842284/d3.v3.min.js"></script>
    <script src="/milroc/raw/9842284/less.min.js"></script>
    <!-- IN GIST -->
    <script src="src.js"></script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

#countdown {
  font: 100px/500px Menlo;
  text-align: center;
  width: 960px;
}

</style>
<div id="countdown"></div>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var formatTime = d3.time.format("T-%X"),
    countdown = d3.select("#countdown"),
    today = d3.time.day(new Date);

// 9 AM tomorrow
var deadline = d3.time.day.offset(today, 1);
deadline.setHours(9);

(function tick() {
  var now = new Date;
  countdown.text(formatTime(new Date(+today + +deadline - d3.time.second(now))));
  setTimeout(tick, 1000 - now % 1000);
})();

</script>
<html>
<head>
    <title>D3 Orthographic Projection with TopoJSON</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.4/d3.min.js" charset="utf-8"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/topojson/1.1.0/topojson.min.js" charset="utf-8"></script>
</head>
<body>

    <div id="map-container"></div>

    <script>

        var width = 500,
            height = 500;

        d3.json('land.topojson', function(error, data) {

            if (error) { return error; }

            // Transform the TopoJSON data to GeoJSON
            var geojson = topojson.feature(data, data.objects.land);

            var div = d3.select('#map-container'),
                svg = div.selectAll('#map-container').data([geojson]);

            // Create the SVG container
            svg.enter().append('svg')
                .attr('width', width)
                .attr('height', height);

            // Create and configure the projection
             var projection = d3.geo.orthographic()
                .scale(width / 2)
                .translate([width / 2, height / 2])
                .clipAngle(90);

            // Create and configure the geo path generator
            var path = d3.geo.path()
                .projection(projection);

            // Globe
            var globe = svg.append('path').datum({type: 'Sphere'})
                .attr('d', path)
                .attr('class', 'globe')
                .attr('fill', '#6D9BB9');

            var land = svg.selectAll('path.feature').data([geojson])
                .enter()
                .append('path')
                .attr('d', path)
                .attr('class', 'feature')
                .attr('fill', '#DEE1CB');
        });
    </script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
  <!-- CDN IMPORTS -->
  <link href='http://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'>
  <!-- LOCAL IMPORTS -->

  <!-- IN GIST -->
  <link rel="stylesheet/less" type="text/css" href="style.less">

  </head>
  <body>
    <label><input type="checkbox"> Sort values</label>
    <!-- CDN IMPORTS -->
    <!-- // <script src="http://cdnjs.cloudflare.com/ajax/libs/less.js/1.7.0/less.min.js"></script> -->
    <!-- // <script src="http://d3js.org/d3.v3.min.js"></script> -->
    <!-- LOCAL IMPORTS -->
    <script src="/milroc/raw/9842284/d3.v3.min.js"></script>
    <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.min.js"></script>
    <script src="/milroc/raw/9842284/less.min.js"></script>
    <!-- IN GIST -->
    <script src="src.js"></script>
  </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Simple Wrestling Bar Chart</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: #ddddff;
			}

			svg {
				background-color: white;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 300)
						.attr("height", 2500);



			d3.csv("Wrestling.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(a.winPercentage, b.winPercentage);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 0)
					.attr("y", function(d, i) {
						return i * 10;
					})
					.attr("width", function(d) {
						return d.winPercentage * 300;
					})
					.attr("height", 8)
					.append("title")
					.text(function(d) {
						return d.Name + " won " + (d.winPercentage * 100) + "% of their matches";
					});

			});


		</script>

	</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Pulse</title>
<script src="http://d3js.org/d3.v3.min.js"></script>
<style>

body {
  font: 10px sans-serif;
}

.pulse line {
  stroke: #5e3c99;
  shape-rendering: crispEdges;
}

</style>
</head>
<body>
<script type="text/javascript">

var width = 960,
    height = 500;
    
line = d3.svg.line();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var launcher = svg.append("g")
    .attr("transform", "translate( 50," + height / 5 + ")")
    .attr("cursor", "pointer")
    .on("click", function() { sendpulse(); });

launcher.append("circle")
    .attr("cx", "30")
    .attr("cy", "0")
    .attr("r", "28")
    .attr("fill", "#e66101");
    
launcher.append("text")
    .attr("x", "13")
    .attr("y", "5")
    .attr("fill", "#f7f7f7")
    .attr("font-weight", "bold")
    .attr("font-size", "14px")
    .text("Press");

var g = svg.append("g")
    .attr("class", "pulse")
    .attr("transform", "translate( 50," + height / 3 + ")");
    
g.append("line")
    .attr("x1", "0")
    .attr("y1", "0")
    .attr("x2", "400")
    .attr("y2", "0")
    .attr("stroke-width", "24");

sendpulse = function() {

    // make a circle, move it, remove it on exit
    svg.append("circle")
        .attr("cx", "40")
        .attr("cy", height / 3)
        .attr("r", "12")
        .attr("fill", "white")
      .transition()
        .attr("cx", "500")
        .duration(1500)
        .remove();
}

</script>
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Plumbing</title>
<script src="http://d3js.org/d3.v3.min.js"></script>
<style>

body {
  font: 10px sans-serif;
}

rect {
    stroke: none;
    fill: #bbb;
}

path {
    stroke: #fb8702;
    fill: none;
}


</style>
</head>
<body>
<script type="text/javascript">

var width = 960,
    height = 500;
    
var rw = 100,
    rh = 24;
    
var ut = height / 4,
    lt = height * 3 / 4;
    
var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("g")
    .attr("transform", "translate( 50," + ut + ")")
  .append("rect")
    .attr("x", "0")
    .attr("y", "0")
    .attr("width", rw)
    .attr("height", rh);
    
svg.append("g")
    .attr("transform", "translate( 50," + lt + ")")
  .append("rect")
    .attr("x", "0")
    .attr("y", "0")
    .attr("width", rw)
    .attr("height", rh);

svg.append("path")
    .attr("d", "M 125 "+ut+" L 125 "+(ut-50)+" L 275 "+(ut-50)+" L 275 "+(lt+rh+50)+" L 125 "+(lt+rh+50)+" L 125 "+(lt+rh))
    .attr("stroke-width", "50");
    
</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Participants vs. Clients</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white
			}

			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

		</style>
	</head>
	<body>

		<h1>Program participants vs. Clients by Program</h1>

        <p>Comparison between program participants and clients served </p>

		<script type="text/javascript">		


			var w = 700;
			var h = 600;
			var padding = [ 20, 10, 50, 100 ];  //Top, right, bottom, left


			var dateFormat = d3.time.format("%Y");


			var xScale = d3.time.scale()
								.range([ padding[3], w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);


			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(15)
							.tickFormat(function(d) {
								return dateFormat(d);
							});

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left");


			var line = d3.svg.line()
				.x(function(d) {
					return xScale(dateFormat.parse(d.year));
				})
				.y(function(d) {
					return yScale(d.expenses);
				});


			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);


			d3.csv("ParticipantsServed.csv", function(participantsData) {

                
				d3.csv("ClientsServed.csv", function(clientsData) {

					
					var mergedData = participantsData.concat(clientsData);
					
					xScale.domain([ 
						d3.min(mergedData, function(d) {
							return dateFormat.parse(d.year);
						}),
						d3.max(mergedData, function(d) {
							return dateFormat.parse(d.year);
						})
					]);

					yScale.domain([ 
						d3.max(mergedData, function(d) {
							return +d.participantsserved;
						}),
						0
					]);


					svg.data([ participantsData ])
						.append("path")
						.attr("class", "line participants")
						.attr("d", line)
						.attr("fill", "none")
						.attr("stroke", "red")
						.attr("stroke-width", 2);

					svg.data([ clientsData ])
						.append("path")
						.attr("class", "line clients")
						.attr("d", line)
						.attr("fill", "none")
						.attr("stroke", "red")
						.attr("stroke-width", 2);
                      

					svg.append("g")
						.attr("class", "x axis")
						.attr("transform", "translate(0," + (h - padding[2]) + ")")
						.call(xAxis);

					svg.append("g")
						.attr("class", "y axis")
						.attr("transform", "translate(" + (padding[3]) + ",0)")
						.call(yAxis);

				});

			});


		</script>

	</body>
</html>L<html>

<head>
    <script src="three.min.js"></script>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <style type="text/css">
    body {
        margin: 0px;
        padding: 0px;
    }
    #container {
        width:960px;
        height:500px;
    }
    </style>

</head>

<body>

<!--div id="container"></div-->
    <script>
    // <!--

    function createTextCanvas(text, color, font, size) {
        size = size || 16;
        var canvas = document.createElement('canvas');
        var ctx = canvas.getContext('2d');
        var fontStr = (size + 'px ') + (font || 'Arial');
        ctx.font = fontStr;
        var w = ctx.measureText(text).width;
        var h = Math.ceil(size);
        canvas.width = w;
        canvas.height = h;
        ctx.font = fontStr;
        ctx.fillStyle = color || 'black';
        ctx.fillText(text, 0, Math.ceil(size * 0.8));
        return canvas;
    }

    function createText2D(text, color, font, size, segW, segH) {
        var canvas = createTextCanvas(text, color, font, size);
        var plane = new THREE.PlaneGeometry(canvas.width, canvas.height, segW, segH);
        var tex = new THREE.Texture(canvas);
        tex.needsUpdate = true;
        var planeMat = new THREE.MeshBasicMaterial({
            map: tex,
            color: 0xffffff,
            transparent: true
        });
        var mesh = new THREE.Mesh(plane, planeMat);
        mesh.scale.set(0.5, 0.5, 0.5);
        mesh.doubleSided = true;
        return mesh;
    }

    // from http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb
    function hexToRgb(hex) { //TODO rewrite with vector output
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }

    var renderer = new THREE.WebGLRenderer({
        antialias: true
    });
    var w = 960;
    var h = 500;
    renderer.setSize(w, h);
    document.body.appendChild(renderer.domElement);

    renderer.setClearColorHex(0xEEEEEE, 1.0);

    var camera = new THREE.PerspectiveCamera(45, w / h, 1, 10000);
    camera.position.z = 200;
    camera.position.x = -100;
    camera.position.y = 100;

    var scene = new THREE.Scene();

    var scatterPlot = new THREE.Object3D();
    scene.add(scatterPlot);

    scatterPlot.rotation.y = 0;

    function v(x, y, z) {
        return new THREE.Vector3(x, y, z);
    }

    var unfiltered = [],
        lowPass = [],
        highPass = [];

    var format = d3.format("+.3f");

    var data = d3.csv("defaultData.csv", function (d) {
        
        d.forEach(function (d,i) {
            unfiltered[i] = {
                x: +d.x,
                y: +d.y,
                z: +d.z
            };
            lowPass[i] = {
                x: +d.lp_x,
                y: +d.lp_y,
                z: +d.lp_z
            };
            highPass[i] = {
                x: +d.hp_x,
                y: +d.hp_y,
                z: +d.hp_z
            }
        })

    var xExent = d3.extent(unfiltered, function (d) {return d.x; }),
        yExent = d3.extent(unfiltered, function (d) {return d.y; }),
        zExent = d3.extent(unfiltered, function (d) {return d.z; });

    var vpts = {
        xMax: xExent[1],
        xCen: (xExent[1] + xExent[0]) / 2,
        xMin: xExent[0],
        yMax: yExent[1],
        yCen: (yExent[1] + yExent[0]) / 2,
        yMin: yExent[0],
        zMax: zExent[1],
        zCen: (zExent[1] + zExent[0]) / 2,
        zMin: zExent[0]
    }

    var colour = d3.scale.category20c();

    var xScale = d3.scale.linear()
                  .domain(xExent)
                  .range([-50,50]);
    var yScale = d3.scale.linear()
                  .domain(yExent)
                  .range([-50,50]);                  
    var zScale = d3.scale.linear()
                  .domain(zExent)
                  .range([-50,50]);

    var lineGeo = new THREE.Geometry();
    lineGeo.vertices.push(
        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zCen)),
        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zCen)),
        v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMin)),

        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),
        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)),
        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),
        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),

        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),
        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)),
        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),
        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)),

        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),
        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)),
        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),
        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),

        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMax)),
        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),
        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),
        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)),

        v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),
        v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),
        v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),
        v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)),

        v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)),
        v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),
        v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),
        v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax))

    );
    var lineMat = new THREE.LineBasicMaterial({
        color: 0x000000,
        lineWidth: 1
    });
    var line = new THREE.Line(lineGeo, lineMat);
    line.type = THREE.Lines;
    scatterPlot.add(line);

    var titleX = createText2D('-X');
    titleX.position.x = xScale(vpts.xMin) - 12,
    titleX.position.y = 5;
    scatterPlot.add(titleX);

    var valueX = createText2D(format(xExent[0]));
    valueX.position.x = xScale(vpts.xMin) - 12,
    valueX.position.y = -5;
    scatterPlot.add(valueX);

    var titleX = createText2D('X');
    titleX.position.x = xScale(vpts.xMax) + 12;
    titleX.position.y = 5;
    scatterPlot.add(titleX);

    var valueX = createText2D(format(xExent[1]));
    valueX.position.x = xScale(vpts.xMax) + 12,
    valueX.position.y = -5;
    scatterPlot.add(valueX);

    var titleY = createText2D('-Y');
    titleY.position.y = yScale(vpts.yMin) - 5;
    scatterPlot.add(titleY);

    var valueY = createText2D(format(yExent[0]));
    valueY.position.y = yScale(vpts.yMin) - 15,
    scatterPlot.add(valueY);

    var titleY = createText2D('Y');
    titleY.position.y = yScale(vpts.yMax) + 15;
    scatterPlot.add(titleY);

    var valueY = createText2D(format(yExent[1]));
    valueY.position.y = yScale(vpts.yMax) + 5,
    scatterPlot.add(valueY);

    var titleZ = createText2D('-Z ' + format(zExent[0]));
    titleZ.position.z = zScale(vpts.zMin) + 2;
    scatterPlot.add(titleZ);

    var titleZ = createText2D('Z ' + format(zExent[1]));
    titleZ.position.z = zScale(vpts.zMax) + 2;
    scatterPlot.add(titleZ);

    var mat = new THREE.ParticleBasicMaterial({
        vertexColors: true,
        size: 10
    });

    var pointCount = unfiltered.length;
    var pointGeo = new THREE.Geometry();
    for (var i = 0; i < pointCount; i ++) {
        var x = xScale(unfiltered[i].x);
        var y = yScale(unfiltered[i].y);
        var z = zScale(unfiltered[i].z);

        pointGeo.vertices.push(new THREE.Vector3(x, y, z));
        console.log(pointGeo.vertices);
        //pointGeo.vertices[i].angle = Math.atan2(z, x);
        //pointGeo.vertices[i].radius = Math.sqrt(x * x + z * z);
        //pointGeo.vertices[i].speed = (z / 100) * (x / 100);
        pointGeo.colors.push(new THREE.Color().setRGB(
          hexToRgb(colour(i)).r / 255, hexToRgb(colour(i)).g / 255, hexToRgb(colour(i)).b / 255 
        ));

    }
    var points = new THREE.ParticleSystem(pointGeo, mat);
    scatterPlot.add(points);

    renderer.render(scene, camera);
    var paused = false;
    var last = new Date().getTime();
    var down = false;
    var sx = 0,
        sy = 0;
        
    window.onmousedown = function(ev) {
        down = true;
        sx = ev.clientX;
        sy = ev.clientY;
    };
    window.onmouseup = function() {
        down = false;
    };
    window.onmousemove = function(ev) {
        if (down) {
            var dx = ev.clientX - sx;
            var dy = ev.clientY - sy;
            scatterPlot.rotation.y += dx * 0.01;
            camera.position.y += dy;
            sx += dx;
            sy += dy;
        }
    }
    var animating = false;
    window.ondblclick = function() {
        animating = !animating;
    };

    function animate(t) {
        if (!paused) {
            last = t;
            if (animating) {
                var v = pointGeo.vertices;
                for (var i = 0; i < v.length; i++) {
                    var u = v[i];
                    console.log(u)
                    u.angle += u.speed * 0.01;
                    u.x = Math.cos(u.angle) * u.radius;
                    u.z = Math.sin(u.angle) * u.radius;
                }
                pointGeo.__dirtyVertices = true;
            }
            renderer.clear();
            camera.lookAt(scene.position);
            renderer.render(scene, camera);
        }
        window.requestAnimationFrame(animate, renderer.domElement);
    };
    animate(new Date().getTime());
    onmessage = function(ev) {
        paused = (ev.data == 'pause');
    };

    })
    //-->
    </script>
</body>

</html>
<!doctype html>
<meta charset="utf-8">

<style>
	h1 {
		color: #ccc;
	}

	.axis path,
	.axis line {
		fill: none;
		stroke: #ccc;
		shape-rendering: crispEdges;
	}

	.label,
	text {
		fill: #ccc;
	}

.taxis {
    font: 10px sans-serif;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

.taxis .domain {
    fill: none;
    stroke: #fff;
    stroke-opacity: .3;
    stroke-width: 10px;
    stroke-linecap: round;
}

,taxis .halo {
    fill: none;
    stroke: #ddd;
    stroke-width: 8px;
    stroke-linecap: round;
}

.slider .handle {
    fill: #fff;
    stroke: #ccc;
    stroke-opacity: .5;
    stroke-width: 1.25px;
    pointer-events: none;
}



	circle {
		opacity: 0.8;
		stroke: #301060;
	}

	body {
		background: black;
	}

	h1 {
		text-align: center;
	}

	.viz {
		float: left;
	}

	.legend {
		float: right;
	}


	dt, dd {
		float: left;
	}

	dt {
		clear: both;
	}

	dd {
		float: right;
	}

	dd.text-left {
		color: #ccc;
	}
</style>

<div class="content">
<div class="viz"><h1 class="date-display"></h1></div>
<div class="legend"></div>
</div><!-- .content -->

<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>
var margin = {top:40, right: 20, bottom: 30, left: 50},
	width = 960 - margin.left - margin.right,
	height = 600 - margin.top - margin.bottom;

var dev = getParameterByName("dev");
var cycle = 750; // # of milliseconds per frame

var anim = { fwd: true, pause: false, index: 0 };


// SCALES
var x = d3.scale.log()
		.range([margin.left * 1.5, width - margin.right])
		.clamp(true);

var x0 = d3.scale.ordinal()
		.domain([0])
		.range([margin.left]);

var y = d3.scale.log()
		.range([height - margin.bottom * 4, margin.top])
		.clamp(true);

var y0 = d3.scale.ordinal()
		.domain([0])
		.range([height - margin.bottom * 2]);

var r = d3.scale.ordinal()
		.domain(["join", "part", "you", "active", "contributor", "retired"])
		.range([8, 8, 6, 4, 4, 3]);

var t = d3.time.scale()
		.rangeRound([margin.left, width - margin.right])
		.clamp(true);

var color = d3.scale.ordinal()
			.domain(["contributor", "active", "retired", "you"])
			.range(["#00dd00", "#e5dff0", "#6048a8", "#dd4814"]);

var xAxis = d3.svg.axis()
			.scale(x)
			.ticks(16, d3.format("s"))
			.tickSize(8,0)
			.orient("bottom");

var x0Axis = d3.svg.axis()
			.scale(x0)
			.orient("bottom");

var yAxis = d3.svg.axis()
			.scale(y)
			.ticks(16, d3.format("s"))
			.tickSize(6,0)
			.orient("left");

var y0Axis = d3.svg.axis()
			.scale(y0)
			.orient("left");

var tAxis = d3.svg.axis()
			.scale(t)
			.orient("top");

var brush, handle;  // needs to be defined in this scope to be accessible below

var ldifDate    = d3.time.format("%Y/%m/%d"),
	titleDate   = d3.time.format("%b %Y"),
	monthDate   = d3.time.format("%Y%m"),
	tooltipDate = d3.time.format("%d %b %Y");


d3.tsv("developers.tsv", function(error, developers){
	developers.forEach(function(d) {
		d.join = ldifDate.parse(d.join);
		d.retire = ldifDate.parse(d.retire);
	});

	d3.csv("activity.csv", function(error, gentoo) {
		gentoo.forEach(function(d) {
			d.total_commits = +d.total_commits;
			d.total_bugs = +d.total_bugs;
			d.date = +d.date;
			//d.date = monthDate.parse(d.date);
		});

		/*
		 * Retrieves the initial activity for every active developer.
		 */
		var rollcall = d3.nest()
						.key(function(d) { return d.developer; })
						.map(developers, d3.map);

		var activity = d3.nest()
					.key(function(d) { return d.date; })
					.sortKeys(d3.ascending)
					.map(gentoo, d3.map);

		var months = activity.keys()
					.map(function(d) { return d; })
					.sort(d3.ascending);

		var bydev = d3.nest()
					.key(function(d) { return d.developer; })
					.entries(gentoo);

		x.domain([1, d3.max(gentoo.map(function(d) { return d.total_commits; }))]);
		y.domain([1, d3.max(gentoo.map(function(d) { return d.total_bugs; }))]);

		t.domain(d3.extent(months.map(function(d) {
			return monthDate.parse(d);
		})));

		window.t = t;
		window.gentoo = gentoo;
		window.bydev = bydev;
		window.activity = activity;
		window.months = months;

		/*
		 * Draw the graph
		 */
		var svg = d3.select(".viz").append("svg")
				.attr("width", width + margin.left + margin.right)
				.attr("height", height + margin.top + margin.bottom)
			  .append("g")
				.attr("transform", "translate(" +
							margin.left + "," + margin.top +
						")"
				);


		/*
		 * Controller (a brush slider with t-axis) lies above the graph
		 */
		brush = d3.svg.brush()
					.x(t)
					.extent([months[0],months[0]])
					.on("brush", brushed);
	
		flux = svg.append("g")
			.attr("class", "control")

		flux.append("g")
			.attr("class", "taxis")
			.call(tAxis)
		  .select(".domain")
	  	  .select(function() {
				return this.parentNode.appendChild(this.cloneNode(true));
			})
			.attr("class", "halo");
		
		var slider = flux.append("g")
			.attr("class", "slider")
			.call(brush);

		slider.selectAll(".extent.resize")
			.remove();

		slider.select(".background")
			.attr("height", margin.top);


		handle = slider.append("circle")
				.attr("class", "handle")
				.attr("r", 9);

		slider.call(brush.event)
		  	  .transition()
				.call(brush.extent([t.invert(233), t.invert(233)]))
				.call(brush.event);

		/*
		 * The actual graph.
		 */
		var graph = svg.append("g").attr("class", "graph");

		/*
		 * The graph's axes (2 x-axes, 2 y-axes and a time axis)
		 */
		x_axis = graph.append("g")
			.attr("class", "x-axis")
			.attr("transform", "translate(0," + (height - margin.bottom) + ")");

		x_axis.append("g")
			.attr("class", "x axis")
			.call(xAxis);

		x_axis.append("g")
			.attr("class", "xzero axis")
			.call(x0Axis);

		x_axis.selectAll("text")
			.attr("y", 20)
			.attr("x", 9)
			.attr("dy", ".35em")
			.attr("transform", "rotate(-30)")
			.style("text-anchor", "end");

		svg.append("text")
			.attr("class", "x label")
			.attr("x", width/2)
			.attr("y", height - margin.top * 2)
			.style("text-anchor", "end")
			.text("commits");

		y_axis = graph.append("g")
			.attr("class", "y-axis")
			.attr("transform", "translate(" +
					(margin.left * .8) + "," + margin.top +
				")");

		y_axis.append("g")
			.attr("class", "y axis")
			.call(yAxis);


		y_axis.append("g")
			.attr("class", "yzero axis")
			.call(y0Axis);

		var ylabel = svg.append("text")
			.attr("class", "y label")
			.attr("transform", "translate(" + 0 + "," + (height/2) +
				") rotate(-90)")
			.style("text-anchor", "middle")
			.text("bugs RESOLVED");

		// ylabel.attr("transform", "rotate(-90)");

		var legend = d3.select(".legend").append("dl")
			.selectAll("dt")
			.data(color.domain())
		  .enter().append("dt")
			.attr("class", "key");

		legend.append("svg")
			.attr("height", 20)
			.attr("width", 20)
			.attr("transform", "translate(0,0)")
		.append("circle")
			.attr("cx", 10)
			.attr("cy", 10)
			.attr("r", function(d) { return r(d.hr); })
			.style("fill", function(d) { if(d !== "you") return color(d); })
			.style("stroke", function(d) { if(d === "you") return color(d); })
			.style("stroke-width", function(d) { return d === "you" ? 2 : 1; });

		legend.append("dd")
			.attr("class", "text-left")
			.text(function(d) {
					return (d === "you" && dev !== null) ? dev : d;
				});

		d3.select("#pause").on("click", function() { pause() });
		d3.select("#play").on("click", function() { anim.fwd = true; play(); });
		d3.select("#yalp").on("click", function() { anim.fwd = false; play(); });

		/* Initialize the graph */
		d3.select(".graph").selectAll("circle")
			.data(bydev.map(function(b) { return b.values[0]; }),
					function(d) { return d.developer; }
			)
		  .enter().append("circle")
			.attr("class", "contributor")
			.attr("cx", function(d) {
				return d.total_commits > 0 ? x(d.total_commits) : x0(0);
			})
			.attr("cy", function(d) {
				return d.total_bugs > 0 ? y(d.total_bugs) : y0(0);
			})
			.attr("r", function(d) { return r("contributor"); })
			.style("fill", function(d) {
				return color(d3.select(this).attr("class"));
			})
			.style("stroke", "#301060")
			.style("stroke-width", function(d) {
					return d.developer === dev? 2 : 1;
				})
			.style("visibility", "hidden")
		  .append("title")
			.text(function(d) {
				dev = rollcall.get(d.developer);
				return dev[0].fullname +
					" (" + dev[0].developer +
					(dev[0].alias? "/" + dev[0].alias : "") + ")\n" +
					"Tenure: " + tenureToString(dev);
			});

		  return true;

		// Start the Animation
//		var interval = setInterval(animate, cycle);

		function animate() {
			if (anim.pause) return true; // abort and stop

			var value = brush.extent()[0];
			var next = monthDate.parse((parseInt(value) + 1).toString());

			slider.transition()
				.call(brush.extent([next, next]))
				.call(brush.event);


			anim.index = next;

			if(anim.index === months.length - 1)
			return true;


			/*
			d3.select(".date-display").transition().duration(cycle)
				.text(function(d) {
					return titleDate(
						monthDate.parse(months[anim.index].toString())
					);
				});
			*/
		}; // animate()



		// Callback for brush slider
		function brushed() {
			var value = brush.extent()[0];
			console.log("all: " + value);

			if(d3.event.sourceEvent) { // not a programmatic event
				value = t.invert(d3.mouse(this)[0]);
				brush.extent([value, value]);
				console.log("mousy: " + value);
			}

			console.log("before parse: " + value);
			value = parseInt(value) ?
					value :
					value.getFullYear() + ("0" + (value.getMonth() + 1)).slice(-2);

			handle.attr("cx", t(value));


			console.log("after parse: " + value);

			progress(value);
			anim.index = value;
		};

		
		function progress(index) {
			if(index === months.length -1) return;
			var circle = d3.select(".graph").selectAll("circle")
				.data(activity.get(index), function(d) {
					return d.developer;
				})
			  .transition().duration(cycle)
				.attr("r", function(d) {
					return r(d.hr);
				})
				.attr("class", function(d) { return d.hr; })
				.attr("cx", function(d) {
					return d.total_commits === 0 ? x0(0) : x(d.total_commits);
				})
				.attr("cy", function(d) {
					return d.total_bugs === 0 ? y0(0) : y(d.total_bugs);
				})
				.attr("r", function(d) {
					switch(d.hr) {
						case "join":
							return r(anim.fwd? "active" : "contributor");
						case "part":
							return r(anim.fwd? "retired": "active");
						default:
							return r(d.hr);
					}
				})
				.style("fill", function(d) {
					switch(d.hr) {
						case "join":
							return color(anim.fwd? "active" : "contributor");
						case "part":
							return color(anim.fwd? "retired": "active");
						default:
							return color(d.hr);
					}
				})
				.style("visibility", "visible");
		}; // progress()



		/*
		 * CALLBACKS
		 */
		// Callback for both play buttons
		function play() {
			anim.pause = false;
			interval = setInterval(animate, cycle);
		}; // play()

		// Callback for pause button
		function pause() {
			anim.pause = true;
			clearInterval(interval);
		}


		function tenureToString(dev) {
			var tenures = d3.zip(
				dev.map(function(t) { return t.join; }),
				dev.map(function(t) { return t.retire; })
			);

			return tenures.map(function(d) {
				return titleDate(d[0]) +
					" to " +
					(d[1] == null ? "present" : titleDate(d[1]));
			}).join(" and ");
		}
	});
});


// Capture URL query param
function getParameterByName(name) {
var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);
	return match && decodeURIComponent(
		match[1].replace(/\+/g, ' ').replace(/\//g, '')
	);
}
</script>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>Rotation Circle</title>
    <link rel="stylesheet" href="style.css" />
</head>
<body>
    <div id="wrapper">
        <div class="circle-container">
            <div class="circle"></div>
            <div class="circle"></div>
            <div class="circle"></div>
            <div class="circle"></div>
            <div class="circle"></div>
        </div>
    </div>
</body>
</html><!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title>show data from CSV</title>
<script src="http://d3js.org/d3.v3.min.js"></script>
</head>

<script type="text/javascript">


var dataset;  //Declare global var

var svg = d3.select("body")
            .append("svg")
            .attr("width", 200)
            .attr("height", 500);


d3.csv("data.csv", function(data) {
        //Hand CSV data off to global variable so it's accessible later.
        dataset = data;
        //Call some other functions that
        //generate your visualization, e.g.:
        showdata();

});






function showdata() {

       d3.select("body").selectAll("p")
        .data(dataset)
        .enter()
        .append("p")
        .text(function(d) {return d.name +", "+d.age;});

  };


</script>


<body>
</body>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://nvd3.org/assets/css/nv.d3.css'>
    
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js' type='text/javascript'></script>
    <script src='http://nvd3.org/assets/lib/fisheye.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 600px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart268404a816e' class = 'rChart nvd3'></div>    
    <script type='text/javascript'>
 $(document).ready(function(){
      drawchart268404a816e()
    });
    function drawchart268404a816e(){  
      var opts = {
 "dom": "chart268404a816e",
"width":    600,
"height":    400,
"process_data": true,
"x": "wt",
"y": "mpg",
"type": "scatterChart",
"group": "gear",
"id": "chart268404a816e" 
},
        data = [
 {
 "mpg":             21,
"cyl":              6,
"disp":            160,
"hp":            110,
"drat":            3.9,
"wt":           2.62,
"qsec":          16.46,
"vs":              0,
"am":              1,
"gear":              4,
"carb":              4 
},
{
 "mpg":             21,
"cyl":              6,
"disp":            160,
"hp":            110,
"drat":            3.9,
"wt":          2.875,
"qsec":          17.02,
"vs":              0,
"am":              1,
"gear":              4,
"carb":              4 
},
{
 "mpg":           22.8,
"cyl":              4,
"disp":            108,
"hp":             93,
"drat":           3.85,
"wt":           2.32,
"qsec":          18.61,
"vs":              1,
"am":              1,
"gear":              4,
"carb":              1 
},
{
 "mpg":           21.4,
"cyl":              6,
"disp":            258,
"hp":            110,
"drat":           3.08,
"wt":          3.215,
"qsec":          19.44,
"vs":              1,
"am":              0,
"gear":              3,
"carb":              1 
},
{
 "mpg":           18.7,
"cyl":              8,
"disp":            360,
"hp":            175,
"drat":           3.15,
"wt":           3.44,
"qsec":          17.02,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              2 
},
{
 "mpg":           18.1,
"cyl":              6,
"disp":            225,
"hp":            105,
"drat":           2.76,
"wt":           3.46,
"qsec":          20.22,
"vs":              1,
"am":              0,
"gear":              3,
"carb":              1 
},
{
 "mpg":           14.3,
"cyl":              8,
"disp":            360,
"hp":            245,
"drat":           3.21,
"wt":           3.57,
"qsec":          15.84,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              4 
},
{
 "mpg":           24.4,
"cyl":              4,
"disp":          146.7,
"hp":             62,
"drat":           3.69,
"wt":           3.19,
"qsec":             20,
"vs":              1,
"am":              0,
"gear":              4,
"carb":              2 
},
{
 "mpg":           22.8,
"cyl":              4,
"disp":          140.8,
"hp":             95,
"drat":           3.92,
"wt":           3.15,
"qsec":           22.9,
"vs":              1,
"am":              0,
"gear":              4,
"carb":              2 
},
{
 "mpg":           19.2,
"cyl":              6,
"disp":          167.6,
"hp":            123,
"drat":           3.92,
"wt":           3.44,
"qsec":           18.3,
"vs":              1,
"am":              0,
"gear":              4,
"carb":              4 
},
{
 "mpg":           17.8,
"cyl":              6,
"disp":          167.6,
"hp":            123,
"drat":           3.92,
"wt":           3.44,
"qsec":           18.9,
"vs":              1,
"am":              0,
"gear":              4,
"carb":              4 
},
{
 "mpg":           16.4,
"cyl":              8,
"disp":          275.8,
"hp":            180,
"drat":           3.07,
"wt":           4.07,
"qsec":           17.4,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              3 
},
{
 "mpg":           17.3,
"cyl":              8,
"disp":          275.8,
"hp":            180,
"drat":           3.07,
"wt":           3.73,
"qsec":           17.6,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              3 
},
{
 "mpg":           15.2,
"cyl":              8,
"disp":          275.8,
"hp":            180,
"drat":           3.07,
"wt":           3.78,
"qsec":             18,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              3 
},
{
 "mpg":           10.4,
"cyl":              8,
"disp":            472,
"hp":            205,
"drat":           2.93,
"wt":           5.25,
"qsec":          17.98,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              4 
},
{
 "mpg":           10.4,
"cyl":              8,
"disp":            460,
"hp":            215,
"drat":              3,
"wt":          5.424,
"qsec":          17.82,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              4 
},
{
 "mpg":           14.7,
"cyl":              8,
"disp":            440,
"hp":            230,
"drat":           3.23,
"wt":          5.345,
"qsec":          17.42,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              4 
},
{
 "mpg":           32.4,
"cyl":              4,
"disp":           78.7,
"hp":             66,
"drat":           4.08,
"wt":            2.2,
"qsec":          19.47,
"vs":              1,
"am":              1,
"gear":              4,
"carb":              1 
},
{
 "mpg":           30.4,
"cyl":              4,
"disp":           75.7,
"hp":             52,
"drat":           4.93,
"wt":          1.615,
"qsec":          18.52,
"vs":              1,
"am":              1,
"gear":              4,
"carb":              2 
},
{
 "mpg":           33.9,
"cyl":              4,
"disp":           71.1,
"hp":             65,
"drat":           4.22,
"wt":          1.835,
"qsec":           19.9,
"vs":              1,
"am":              1,
"gear":              4,
"carb":              1 
},
{
 "mpg":           21.5,
"cyl":              4,
"disp":          120.1,
"hp":             97,
"drat":            3.7,
"wt":          2.465,
"qsec":          20.01,
"vs":              1,
"am":              0,
"gear":              3,
"carb":              1 
},
{
 "mpg":           15.5,
"cyl":              8,
"disp":            318,
"hp":            150,
"drat":           2.76,
"wt":           3.52,
"qsec":          16.87,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              2 
},
{
 "mpg":           15.2,
"cyl":              8,
"disp":            304,
"hp":            150,
"drat":           3.15,
"wt":          3.435,
"qsec":           17.3,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              2 
},
{
 "mpg":           13.3,
"cyl":              8,
"disp":            350,
"hp":            245,
"drat":           3.73,
"wt":           3.84,
"qsec":          15.41,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              4 
},
{
 "mpg":           19.2,
"cyl":              8,
"disp":            400,
"hp":            175,
"drat":           3.08,
"wt":          3.845,
"qsec":          17.05,
"vs":              0,
"am":              0,
"gear":              3,
"carb":              2 
},
{
 "mpg":           27.3,
"cyl":              4,
"disp":             79,
"hp":             66,
"drat":           4.08,
"wt":          1.935,
"qsec":           18.9,
"vs":              1,
"am":              1,
"gear":              4,
"carb":              1 
},
{
 "mpg":             26,
"cyl":              4,
"disp":          120.3,
"hp":             91,
"drat":           4.43,
"wt":           2.14,
"qsec":           16.7,
"vs":              0,
"am":              1,
"gear":              5,
"carb":              2 
},
{
 "mpg":           30.4,
"cyl":              4,
"disp":           95.1,
"hp":            113,
"drat":           3.77,
"wt":          1.513,
"qsec":           16.9,
"vs":              1,
"am":              1,
"gear":              5,
"carb":              2 
},
{
 "mpg":           15.8,
"cyl":              8,
"disp":            351,
"hp":            264,
"drat":           4.22,
"wt":           3.17,
"qsec":           14.5,
"vs":              0,
"am":              1,
"gear":              5,
"carb":              4 
},
{
 "mpg":           19.7,
"cyl":              6,
"disp":            145,
"hp":            175,
"drat":           3.62,
"wt":           2.77,
"qsec":           15.5,
"vs":              0,
"am":              1,
"gear":              5,
"carb":              6 
},
{
 "mpg":             15,
"cyl":              8,
"disp":            301,
"hp":            335,
"drat":           3.54,
"wt":           3.57,
"qsec":           14.6,
"vs":              0,
"am":              1,
"gear":              5,
"carb":              8 
},
{
 "mpg":           21.4,
"cyl":              4,
"disp":            121,
"hp":            109,
"drat":           4.11,
"wt":           2.78,
"qsec":           18.6,
"vs":              1,
"am":              1,
"gear":              4,
"carb":              2 
} 
]
  
      if(!(opts.type==="pieChart" || opts.type==="sparklinePlus" || opts.type==="bulletChart")) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? 'main' : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .width(opts.width)
          .height(opts.height)
          
        if (opts.type != "bulletChart"){
          chart
            .x(function(d) { return d[opts.x] })
            .y(function(d) { return d[opts.y] })
        }
          
         
        
          
        

        
        
        
      
       d3.select("#" + opts.id)
        .append('svg')
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
    };
</script>
    
    <script></script>    
  </body>
  <script>
  function getURLParameter(name) {
    return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null
  }
  console.log(getURLParameter("viewer_pane"))
  if (getURLParameter("viewer_pane") === "1"){
    document.write("<style>.rChart { width: 100% }</style>");
  }
  </script>
</html><!DOCTYPE html>
<html>
<head>
  <title>Centigrade to Fahrenheit</title>
  <meta charset="UTF-8">
  <style type="text/css">
    body {
      margin: 0;
    }

    .axis text {
      font: 12px sans-serif;
    }

    .axis line,

    .axis path {
      fill: none;
      stroke: #000;
      shape-rendering: crispEdges;
    }

    .band {
      fill: #eee;
      stroke: #ccc;
    }

    .band:hover {
      fill: #ddd;
    }

  </style>
</head>
<body>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <script type="text/javascript">
    'use strict';

    var width = 960, height = 480,
        margin = { top: 40, bottom: 40, left: 20, right: 20 },
        start = -60, finish = 110,
        interval = 10

    var c2f = d3.scale.linear()
        .domain([-40, 0])
        .range([-40, 32]);

    var values = d3.range(start, finish, interval)

    var color = d3.scale.linear()
        .domain([start, 0, finish])
        .range(['#00f', '#fff', '#f00'])

    var svg = d3.select('body').append('svg')
        .attr('width', width)
        .attr('height', height)
        .append('g')
          .attr('transform', 'translate(' + [margin.left, margin.top] + ')');

    width -= margin.left + margin.right;
    height -= margin.top + margin.bottom;

    var scale = d3.scale.linear()
        .domain([
          c2f(d3.min(values)),
          c2f(d3.max(values)+interval)
        ])
        .range([0, width]);

    var cband = scale(interval) - scale(0);
    var fband = scale(c2f(interval)) - scale(c2f(0));

    var axis = d3.svg.axis()
      .scale(scale)
      .orient('top')
      .ticks(20)
      .tickFormat(function(d) { return d + '°C'});

    svg.append('g')
        .attr('class', 'axis')
        .attr('transform', 'translate(0 ' + -1 + ')')
        .call(axis);

    axis
        .orient('bottom')
        .tickFormat(function(d) { return d + '°F'});

    svg.append('g')
        .attr('class', 'axis')
        .attr('transform', 'translate(0 ' + height + ')')
        .call(axis);

    svg.selectAll('.band')
      .data(values)
      .enter()
      .append('path')
        .attr('class', 'band')
        // .style('fill', color)
        .attr('d', function(d) {
          return [
            'M', scale(d), 0,
            ' h', cband,
            ' L', scale(c2f(d)) + fband, height,
            ' h', -fband,
            ' z'
          ].join(' ')
        })

  </script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>D3: Mercator projection applied to stuff</title>
	<script src="http://d3js.org/d3.v3.min.js"></script>
  <script src="http://d3js.org/topojson.v1.min.js"></script>
		<style type="text/css">
			/* No style rules here yet */
		</style>
	</head>
	<body>
		<script type="text/javascript">


			//Width and height
			var w = 500;
			var h = 300;

			//Define map projection
			var projection = d3.geo.mercator()
								   .translate([w/2, h/2])
								   .scale([78900])
									 .center([ -122.43198394775389,37.76365837331252])
									;

			//Define path generator
			var path = d3.geo.path()
							 .projection(projection);

			//Create SVG element
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			//Load in GeoJSON data
			d3.json("sfBOScle.geojson", function(json) {

				//Bind data and create one path per GeoJSON feature
				svg.selectAll("path")
				   .data(json.features)
				   .enter()
				   .append("path")
				   .attr("d", path)
				   .style("fill", "purple");


console.dir(json.features)

			});

		</script>
	</body>
</html>
<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title>show an axis from loaded CSV</title>
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>
.axis path,
    .axis line {
        fill: none;
        stroke: black;
        shape-rendering: crispEdges;
}
    .axis text {
        font-family: sans-serif;
        font-size: 11px;
}


</style>
</head>
<body>
<script type="text/javascript">


var dataset;  //Declare global var



d3.csv("data.csv", function(x) {
        //Hand CSV data off to global variable so it's accessible later.
        dataset = x;
        //Call some other functions that
        //generate your visualization, e.g.:
        axis();
        
});
          
            
function axis() {
                    
                    
     var x = d3.scale.linear()
    .domain([0,60])
    .range([0,400]);


var xAxis = d3.svg.axis()
    .scale(x)
    .orient('bottom')
    .tickPadding(8);

var svg = d3.select('body').append('svg')
    .attr('class', 'chart')
    .attr('width', 500)
    .attr('height', 500);



svg.append('g')
  .attr('class', 'x axis')
   .attr('transform', 'translate(80,80)')
  .call(xAxis);               
        
  };  
            


</script>


</body>
</html><!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title>show an axis from loaded CSV</title>
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>
.axis path,
    .axis line {
        fill: none;
        stroke: black;
        shape-rendering: crispEdges;
}
    .axis text {
        font-family: sans-serif;
        font-size: 11px;
}


</style>
</head>
<body>
<script type="text/javascript">


var dataset;  //Declare global var

var svg = d3.select("body")
            .append("svg")
            .attr("width", 1000)   
            .attr("height", 1000); 


var dataset = [];
    for (var i = 0; i < 1000; i++) {
        var newNumber = Math.random() * 900;
        dataset.push(newNumber);
        
}
    
           


svg.append("clipPath")
    .attr("id", "chart-area")
    .append("circle")
    .attr("cx", 500)
    .attr("cy", 500)
    .attr("r", 200);
    
    
    svg.append("g")
   .attr("id", "circles")
   .attr("clip-path", "url(#chart-area)")
   .selectAll(".circles")
        .data(dataset)
        .enter()
        .append("circle")
        .classed("circles",true)
        .attr("cx",function(d,i) { return d;})
        .attr("cy",function(d,i){return i;})
        .attr("r",15)
        .style("opacity",0.4)
     
        ;         
          
        
 


</script>


</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.dot {
  stroke: #000;
}

.h1 {
  font-size: 30;
  font-family: "Futura";
  color: red;
  text-align: center;
}

</style>
<body>
<center><h1>Look and Say 25</h1></center>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data3.tsv", function(error, data) {
  data.forEach(function(d) {
    d.Xco = +d.Xco;
    d.Yco = +d.Yco;
  });

  x.domain(d3.extent(data, function(d) { return d.Xco; })).nice();
  y.domain(d3.extent(data, function(d) { return d.Yco; })).nice();


  svg.selectAll(".dot")
      .data(data)
    .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 3.5)
      .attr("cx", function(d) { return x(d.Xco); })
      .attr("cy", function(d) { return y(d.Yco); });

});

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<title>Ukrainian Parliament 2012-2014/03</title>

<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">

<style>

#chart {
  height: 500px;
}

.node rect {
  cursor: move;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}

.node text {
  pointer-events: none;
  text-shadow: 0 1px 0 #fff;
}

.link {
  fill: none;
  stroke: #000;
  stroke-opacity: .2;
}

.link:hover {
  stroke-opacity: .5;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
.tick {
  display: none;
}
.axis text {
  font-size: 30px;
  color: #bbb;
  font-family: sans-serif;
  font-weight: bold;
}
h1 {
    margin-bottom: 5px;
    margin-top: 5px;
    font-size: 1em;
}

</style>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#"><h1>Changes in Parliamentary groups in Ukrainian Parliament (Verkhovna Rada/Верховна Рада) (through 03/2014)</h1></a>
        </div>
      </div>
    </div>
<h1>Changes in Parliamentary groups in Ukrainian Parliament (through 03/2014)</h1>
<div style="position:relative;top:35px;z-index:1000;">
  <div class="alert alert-info" >
  How Ukraninian MPs were changing political groups, particularly during the beginning of 2014.<br/>
  The former majority (through 2013) had Party of Regions (Партія регіонів) and Communist Party (Компартія України)
  </div>
</div>
<p id="chart"></p>


<script src="http://d3js.org/d3.v2.min.js?2.9.1"></script>
<script src="sankey.js"></script>
<script>

var margin = {top: 20, right: 1, bottom: 60, left: 1},
    width = 960 - margin.left - margin.right,
    height = 450 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),
    format = function(d) { return formatNumber(d); },
    color = function(d){ return d.color; };//d3.scale.category20();

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var sankey = d3.sankey()
    .nodeWidth(15)
    .nodePadding(10)
    .size([width, height]);

var path = sankey.link();

d3.json("sankey.json", function(energy) {

  sankey
      .nodes(energy.nodes)
      .links(energy.links)
      .layout(32);

  var link = svg.append("g").selectAll(".link")
      .data(energy.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", path)
      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      .sort(function(a, b) { return b.dy - a.dy; });

  link.append("title")
      .text(function(d) { return d.source.name + " → " + d.target.name + "\n" + format(d.value); });

  var node = svg.append("g").selectAll(".node")
      .data(energy.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { this.parentNode.appendChild(this); })
      .on("drag", dragmove));

  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankey.nodeWidth())
      .style("fill", function(d) { return d.color; })
      .style("stroke", function(d) { return d3.rgb(d.color).darker(2); })
    .append("title")
      .text(function(d) { return d.name + "\n" + format(d.value); });

  node.append("text")
      .attr("x", -6)
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "end")
      .attr("transform", null)
      .text(function(d) { 
        if (d.x > 900) return d.name; else return ''; 
      })
    .filter(function(d) { return d.x < width / 2; })
      .attr("x", 6 + sankey.nodeWidth())
      .attr("text-anchor", "start");

  function dragmove(d) {
    d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
    sankey.relayout();
    link.attr("d", path);
  }
  
  
names = ['12/2012','01/2013','01/2014','04/2014'];
var x3 = d3.scale.ordinal()
    .rangeRoundBands([-width/4/2+50, width+width/4/2-50])
    .domain(names);
    
  var xAxis3 = d3.svg.axis()
    .scale(x3)
    .orient("top");
  
  bot = height + 2*margin.bottom/3;
    
svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0,"+bot+")")
      .call(xAxis3);    
});

</script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-8592359-13', 'ocks.org');
      ga('send', 'pageview');

    </script>
<!DOCTYPE html>
<html>
  <head>
    <title>Slovak presidential election 2014 - 2nd round</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
	<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	
	
	<script>
	  // see http://leafletjs.com/reference.html
	  L_PREFER_CANVAS = true;
	</script>

	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
		 <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>

    <style type="text/css">

		html, body, #map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}
		.leaflet-tile-pane {
		  opacity: .3
		}
		.leaflet-container {
          background-color: #fff;
        }

    </style>
  </head>
  <body>
  
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Slovak presidential election 2014 - 2nd round - "Volebné obvody"</a>
        </div>
      </div>
    </div>
    
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >The <strong>size</strong> of bubbles represents number of voters, the <strong>color</strong> represents the winner and <strong>opacity</strong> margin of victory. <strong><span style="color:#00f">Kiska</span></strong> vs. <strong><span style="color:#f00">Fico</span></strong></div>
    </div>

    <div id="map" style="margin-top:40px;"></div>
    <script type="text/javascript">


		// Create the map
		var map = L.map('map',{zoomControl: false}).setView([48.695493,19.467773], 8);
		map.addControl( L.control.zoom({position: 'topright'}) );
		
		// add an OpenStreetMap tile layer
		// also see http://wiki.openstreetmap.org/wiki/Tiles
		//L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);
		
		//add circles
		$.getJSON( "sk_president_2014_2_fico_kiska_obvody.json", function (data) {
		    $.each(data.votes, function (index, value) {
		        
		        description = "<strong>" + value.town + "</strong><br>";
		        
		        tuples = [];
		        for (var key in value.votes) {
		          tuples.push([key,parseInt(value.votes[key])]);
		        }
		        
		        tuples.sort(function(a, b) {
                    a = a[1];
                    b = b[1];
                    return a < b ? 1 : (a > b ? -1 : 0);
                });
                for (i = 0; i <= 1; i++) {
                  tmp = Math.round(parseInt(tuples[i][1]) / parseInt(value.population) * 100);
                  description += data.people[tuples[i][0]] + ": " +  tmp + "% (" + tuples[i][1].toLocaleString()  +")<br>";
                }
		    
		    
				circle = L.circle([value.lat, value.lng], Math.sqrt(parseInt(value.population)*2000), {
					color: data.colors[value.winner_class],
					fillColor: data.colors[value.winner_class],
					fillOpacity: 
					  2.86*(Math.max(parseInt(value.votes[0]),parseInt(value.votes[1])) / value.population - 0.5),
					weight: 2,
				}).addTo(map);
				

				circle.bindPopup(description);
		  });
		});

	</script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  stroke-linejoin: round;
  stroke-linecap: round;
}

.land {
  fill: #bbb;
}

.border {
  fill: none;
}

.border--static {
  stroke: #fff;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  var delay = 0;

  svg.append("path")
      .datum(topojson.merge(us, us.objects.counties.geometries))
      .attr("class", "land")
      .attr("d", path);

  var gStatic = svg.append("g")
      .attr("class", "border border--static");

  var gAnimate = svg.append("g")
      .attr("class", "border border--animate");

  gAnimate.selectAll("path")
      .data(d3.nest()
        .key(function(d) { return d.id / 1000 | 0; })
        .sortKeys(function(a, b) { return a - b; })
        .entries(us.objects.counties.geometries))
    .enter().append("path")
      .attr("d", function(d) { return path(topojson.merge(us, d.values)); })
      .each(function(d) { d.duration = (d.length = this.getTotalLength()) * 3; })
      .style("stroke-width", "1.5px")
      .style("stroke-dasharray", function(d) { return "0," + d.length; })
    .transition()
      .delay(function(d, i) { var delay1 = delay; delay += d.duration; return delay1; })
      .duration(function(d) { return d.duration; })
      .ease("linear")
      .each("start", function() { this.style.stroke = "#000"; })
      .style("stroke-dasharray", function(d) { return d.length + "," + d.length; })
      .each("end", function(d) {
        var id = +d.key;
        gStatic.append("path")
            .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a.id / 1000 ^ b.id / 1000 && ((a.id / 1000 | 0) === id || (b.id / 1000 | 0) === id); }))
            .attr("d", path);
      })
    .transition()
      .duration(750)
      .style("stroke-opacity", 0)
      .remove();
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<div class="container">
  <div class="page-header">
  <h1>Indian Birds Description Database <small>Colors and Shapes</small></h1>
</div>
  <div class="row">
    <div class="col-md-6">
      <h3>+2 birds</h3>
      <div>The plateform have been crafted with love byt <span class="text-danger">The Ghoomakad Team</span>, feets of Himalayan, India. The current +2 entries database is provided by Sojaina & Pria for its core, assisted by other local volunteers. We cherish this asset and jumped in to valorize it with state of the art <span class="text-danger">web 2.0</span> and <span class="text-danger">mobile technologies</span>.</div>
    </div>
    <div class="col-md-6">
       <hr class="visible-sm visible-xs">
      <h3>————</h3>
      <b>Features:</b>
        <ul>
          <li>Core database of +2 birds!</li>
          <li>Missing birds can be added by dynamic users.</li>
          <li>Descriptions are instantly pooled and reuse look up.</li>
          <li>Data licensed under CC-by-sa-nc so world kids & citizens get full benefit of it!</li>
        </ul>
    </div>
  </div>
  
    <div class="row">
    <div class="col-md-6">    
      <h3>Add new birds</h3>
      <div>Building a bird description database is a massive effort made of hundreds tiny contributions. As of 2014, our collaborative effort use the <span class="text-danger">collaborative online input & review approach</span> to expand the size and increase the quality of the core data. A well structured form guide users to add new birds descriptions and their relevant informations. Try this demo:</div>
      <form action="https://docs.google.com/spreadsheet/formResponse?formkey=0AlV-xjX1b68AdHFueGVfV20wVm92Z2ZFUFhUZFR4N3c&ifq" method="POST" class="form-horizontal add-entry" role="form">
        
        <div class="form-group">
          <label for="ort" class="col-xs-3 control-label">English name:</label>
          <div class="col-xs-9"><input type="text" id="ort" name="entry.696988261" class="form-control" placeholder="Common English name..." value="Bird"></div>
        </div>        
        <div class="form-group">
          <label for="ortx1" class="col-xs-3 control-label">Scientific name:</label>
          <div class="col-xs-9"><input type="text" name="save" id="ortx1" class="form-control" placeholder="Scientific name..." value="Lupus Lupus"></div>
        </div>
        <div class="form-group">
          <label for="def" class="col-xs-3 col-sm-3 control-label">Bodypart:</label>
          <div class="col-xs-9 col-sm-9">
<select name="save" class="form-control input-sm" id="pos"  placeholder="PoS…" >
	<option value="Black" style="background:Black">Black</option>
<option value="Grey" style="background:Grey">Grey</option>
	<option value="White" style="background:White">White</option>
	<option value="Pink" style="background:Pink">Pink</option>
	<option value="Red" style="background:Red">Red</option>
	<option value="Orange" style="background:Orange">Orange</option>
	<option value="Golden" style="background:Gold">Golden</option>
	<option value="Yellow" style="background:Yellow">Yellow</option>
	<option value="Green" style="background:Green">Green</option>
	<option value="Blue" style="background:Blue">Blue</option>
	<option value="Purple" style="background:Purple">Purple</option>
	<option value="Brown" style="background:Brown">Brown</option>
	<option value="Maroon" style="background:Maroon">Maroon</option>
	<option value="Rufous" style="background:Rufous">Rufous</option>
	<option value="Unknown" style="background:none">Unknown</option>
</select>
          </div>
        </div>
         Fig. 5: Interface to add new bird.
        <div class="form-group">
          <div class="col-sm-3"></div>
          <div class="col-sm-9"><input type="submit" name="submit" id="save" class="input btn btn-primary pull-right">save</input></div>
        </div>
       </form>
      
      <h3>Reuse</h3>
      <div>After being saved, all the communauty can then view and reuse these birds descriptions (thanks to our server and <code>API</code>) to enhance their bird watching.</div>
       </div>
    <div class="col-md-6">
       <hr class="visible-sm visible-xs">
      <h3>————</h3>
      <b>Features:</b>
        <ul>
          <li>You can add birds descriptions.</li>
          <li>Click "Save": the bird description is instanlly polled.</li>
        </ul>
      <b>Everything tested and worked on:</b>
      <ul>
        <li>Google Chrome +30 on Mac OS X, Win7, Linux</li>
        <li>Mozilla Firefox +24 on Mac OS X, Win7, Linux</li>
        <li>IE9, IE10 on Win7</li>
      </ul>
    </div>
  </div>
</div><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="description" content="">
    <meta name="author" content="jm3">
    <title>d3 audio waveforms</title>
    <!-- build:css stylesheets/app.min.css-->
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Roboto:400,100|Raleway:400,200|Amatic+SC">
    <link rel="stylesheet" type="text/css" href="waveform.css">
    <!-- endbuild-->
  </head>
  <body>
    <div class="page">
      <h1>d3 audio waveforms &middot;<a href="http://www.jm3.net/">john manoogian III</a></h1>
      <div class="waveform">
        <h2>divs:</h2>
        <div></div>
        <h2>SVG:</h2>
        <div class="svg">
          <!-- h2 Audio:-->
        </div>
      </div>
      <iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/141102884&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_artwork=true" class="soundcloud_embed"></iframe>
    </div>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="waveform.js"></script>
    <!-- endbuild-->
  </body>
</html>

<!DOCTYPE html>
<meta charset="utf-8">
<title>playButton</title>
<style> 
#messageText{
  font-size: 60px;
  text-anchor: middle;
}
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

// ----------------------------------------------------------------------

var width = 960, 
    height = 500;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var messageText = svg.append("text")
  .attr("id", "messageText")
  .attr("x", width/2)
  .attr("y", 200);

write("click the play button");
var fnList = [
  function() { write("again"); },
  function() { write("and again"); },
  function() { write("see?"); },
  function() { write("you cannot click any more"); }
]
playButton(svg, fnList, width/2 -25 , 300);

function write(text) { messageText.attr("class", text).text(text) }

function playButton(svg, fnList, x, y) {
  var i = 0;
  
  var button = svg.append("g")
      .attr("transform", "translate("+ x +","+ y +")");

  button
    .append("rect")
      .attr("width", 50)
      .attr("height", 50)
      .attr("rx", 4)
      .style("fill", "steelblue");

  button
    .append("path")
      .attr("d", "M15 10 L15 40 L35 25 Z")
      .style("fill", "white");

  button
    .append("title")
      .text(String(fnList[0]));
      
  button
      .on("mousedown", function() {
        d3.select(this).select("rect")
            .style("fill","white")
            .transition().style("fill","steelblue");
        fnList[i]();
        i++;
        d3.select(this).select("title").text(String(fnList[i]));
        if (i == fnList.length) d3.select(this).remove();
      });
}

</script><!DOCTYPE html>
<meta charset="utf-8">
<title>General Update Pattern with playButton</title>
<style>
#messageText{
  font-size: 100px;
  text-anchor: middle;
}
.numero{
  font-size: 50px;
}
.join{
  fill: lightgray;
}
.update{
  fill: steelblue;
}
.enter{
  fill: limegreen;
}
.exit{
  fill: red;
}
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

var width = 960,
    height = 500;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("text")
  .attr("id", "messageText")
  .attr("x", width/2)
  .attr("y", 140);

var numerosg = svg.append("g")
    .attr("transform", "translate(0, 400)")

var data    = [1,2,3,4,5,6];
var newdata =     [3,4,5,6,7,8,9];

// Create svgs for data
numerosg.selectAll(".numero")
    .data(data)
  .enter().append("text")
    .classed("numero", true)
    .attr("transform", pos)
    .text(function(d) { return d });

// ----------------------------------------------------------------------

write("join");
// Join new data with old elements.
var svgNumeros = numerosg.selectAll(".numero")
  .data(newdata, function(d) { return d });

var fnList = [
  function() { write("update"); update(); },
  function() { write("enter"); enter(); },
  function() { write("enterAndUpdate"); enterAndUpdate(); },
  function() { write("exit"); exit(); }
]

playButton(svg, fnList, width/2 -25, 220);

// ----------------------------------------------------------------------

function pos(d) {return "translate("+ (250 + 50 * d) +", 0)"}

function write(text) { d3.select("#messageText").attr("class", text).text(text) }

// ----------------------------------------------------------------------

// Update old elements as needed.
function update () {
  svgNumeros.classed("update", true);
}

// Create new elements as needed.
function enter () {
  svgNumeros
    .enter().append("text")
      .classed({"numero": true, "enter": true})
      .text(function(d) { return d })
      .attr("transform", pos);
}

// Appending to the enter selection expands the update selection to include
// entering elements; so, operations on the update selection after appending to
// the enter selection will apply to both entering and updating nodes.
function enterAndUpdate () {
  svgNumeros.transition().ease("bounce").duration(1000).style("font-size", 120);
}

// Remove old elements as needed.
function exit () {
  svgNumeros
    .exit()
      .classed("exit", true)
      .transition().duration(800).style("opacity", 0)
      .remove();
}

// ----------------------------------------------------------------------

function playButton(svg, fnList, x, y) {
  var i = 0;

  var button = svg.append("g")
      .attr("transform", "translate("+ x +","+ y +")");

  button
    .append("rect")
      .attr("width", 50)
      .attr("height", 50)
      .attr("rx", 4)
      .style("fill", "steelblue");

  button
    .append("path")
      .attr("d", "M15 10 L15 40 L35 25 Z")
      .style("fill", "white");

  button
    .append("title")
      .text(String(fnList[0]));

  button
      .on("mousedown", function() {
        d3.select(this).select("rect")
            .style("fill", "white")
            .transition().style("fill", "steelblue");
        fnList[i]();
        i++;
        d3.select(this).select("title").text(String(fnList[i]));
        if (i == fnList.length) d3.select(this).remove();
      });
}

</script>
<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title>show an axis from loaded CSV</title>
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body {
background-color: black;
}

 
.area {
    fill: #af111c;
    stroke-width: 0;
}




</style>
</head>
<body>
<script type="text/javascript">

var svg = d3.select("body")
            .append("svg")
            .attr("width", 1000)   
            .attr("height", 1000); 


var dataset = [];
for (i=0;i<25;i++) {
var newnumber = Math.round(Math.random()*100);
dataset.push(newnumber);
}


var area = d3.svg.area()
	.interpolate("cardinal")
    .x(function(d,i) { return i*50; })
    .y0(function(d) { return 0; })
    .y1(function(d) { return d+450; })
    .tension(0.5);
    
             

    
    svg.selectAll(".circles")
        .data([
        
        ["white",150,2,0],
         ["white",300,4,0],
         ["white",450,6,0],
         ["white",600,8,0],
         ["white",750,10,1]
         
         
        
        
        
               
         ])
        .enter()
        .append("circle")
        .classed("circles",true)
        .attr("cx",function(d,i) { return 0;})
        .attr("cy",function(d,i){return 200;})
        .attr("r",70)
        .attr("fill",function(d) {return "white";})
        .style("opacity",1.0)
        .transition()
        .ease("linear")
        .delay(500)
        .duration(function(d,i) {return d[2]*200;})
        .attr("cx",function(d,i) { return d[1];})
   .each("end", function() {
    d3.select(this)
    .transition()
    .delay(300)
    .duration(500)
      .style("opacity", function(d) {return d[3];})
      .each("end",function() { d3.select(this).transition().duration(1500).ease("linear").attr("r",160).attr("cx",450);})
      
      ; 
      })
      
      
      ;

//select final circle
//nested each end?
//make bigger, move to centre
//show bond shooting
//show blood
      
  
  svg.append("svg:path")
        .attr("class", "area")
        .attr("d", area(dataset))
        .attr("transform","translate(0,-900)")
        .attr("opacity",0.8);
    
      
      
    d3.select("path.area")
        .transition()
        .delay(3500)
        .ease("linear")
        .duration(4000)
        .attr("transform","translate(0,0)");
    
      
     
        
 

    

</script>


</body>
</html>
<!DOCTYPE html>

<head>
  <title>Line Chart</title>
</head>
<meta charset="utf-8">
<style>

svg{
  background-color: #eee;
  margin-top: 20px;
}

path.domain {
  fill: none;
}

g.tick > line {
  stroke: white;
  stroke-width: 1px;
}

g.tick > text {
  text-anchor: middle;
  fill: #606060;
}

</style>
<body>
<div id="viz"></div>
<div>Data From: <a href="http://www.presidency.ucsb.edu/data/popularity.php">http://www.presidency.ucsb.edu/data/popularity.php</a></div>
</body>


<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js" type="text/JavaScript"></script>
<script>

var width = 500,
    height = 500;

xScale = d3.scale.linear().domain([0,10]).range([40,760]);
yScale = d3.scale.linear().domain([0,10]).range([60,830]);

svg = d3.select('#viz')
    .append('svg')
    .attr({width: 1500, height: height});

var chartPoints = 100;

    queue()
    .defer(d3.csv, "bush_popularity.csv")
    .defer(d3.csv, "obama_popularity.csv")
    .await(function(error, file1, file2) { createChart(file1, file2,"undecided", d3.select("svg").append("g")); });

function createChart(bush, obama, type, linechart) {

  bush.forEach(function (d) {
    d.datestamp = new Date(d.start);
  })

  obama.forEach(function (d) {
    d.datestamp = new Date(d.start);
  })

  var bushExtent = d3.extent(bush.map(function (d) {return d.datestamp}))

  var obamaExtent = d3.extent(obama.map(function (d) {return d.datestamp}))

  var fullExtent = [Math.min(bushExtent[0], obamaExtent[0]),Math.max(bushExtent[1], obamaExtent[1])]

  var xScale = d3.time.scale().domain(fullExtent).range([0,500])

  var chartExtent = [0,90];

  var yScale = d3.scale.linear().domain(chartExtent).range([480,20]);

  var axis = d3.svg.axis().scale(yScale)
    .orient("right")
    .ticks(8)
    .tickSize(-480)
    .tickSubdivide(true);

  var line = d3.svg.line()
  .x(function(d) {return xScale(new Date(d.datestamp))})
  .y(function(d) {return yScale(d["approval"])})
  .interpolate("linear");

  linechart.append("g").attr("transform", "translate(480,0)").call(axis);

  linechart.append("path")
  .style("fill", "none")
  .style("stroke-width", "2px")
  .style("stroke", "darkred")
  .attr("class", "line")
  .attr("d", line(bush))

  linechart.append("path")
  .style("fill", "none")
  .style("stroke-width", "2px")
  .style("stroke", "darkblue")
  .attr("class", "line")
  .attr("d", line(obama))
}

</script><!DOCTYPE html>
<html>
  <head>
    <title>Slovak presidential election 2014 - 2nd round</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
	<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
	
	
	<script>
	  // see http://leafletjs.com/reference.html
	  L_PREFER_CANVAS = true;
	</script>

	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
	 <!--[if lte IE 8]>
		 <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
	 <![endif]-->
    <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>

    <style type="text/css">

		html, body, #map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}
		.leaflet-tile-pane {
		  opacity: .3
		}
		.leaflet-container {
          background-color: #fff;
        }

    </style>
  </head>
  <body>
 
  
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">Slovak presidential election 2014 - 2nd round</a>
        </div>
      </div>
    </div>
    
    <div style="position:fixed;top:50px;z-index:1000;">
      <div class="alert alert-info" >The <strong>size</strong> of bubbles represents number of voters, the <strong>color</strong> represents the winner and <strong>opacity</strong> margin of victory. <strong><span style="color:#00f">Kiska</span></strong> vs. <strong><span style="color:#f00">Fico</span></strong></div>
    </div>


    <div id="map" style="margin-top:40px;"></div>
    <script type="text/javascript">


		// Create the map
		var map = L.map('map',{zoomControl: false}).setView([48.695493,19.467773], 8);
		map.addControl( L.control.zoom({position: 'topright'}) );
		
		// add an OpenStreetMap tile layer
		// also see http://wiki.openstreetmap.org/wiki/Tiles
		//L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
		L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);
		
		//add circles
		$.getJSON( "sk_president_2014_2_fico_kiska_short.json", function (data) {
		    $.each(data.votes, function (index, value) {
		    
		        if (value.winner_class == 'kiska') color = "#00f";
		        else color = "#f00";
		        
		        value.population = 0;
		        for (k=0;k<value.votes.length;k++)
		          value.population = value.population+parseFloat(value.votes[k]);
		        
		        description = "<strong>" + value.town + "</strong><br>";
		        
		        tuples = [];
		        for (var key in value.votes) {
		          tuples.push([key,parseInt(value.votes[key])]);
		        }
		        
		        tuples.sort(function(a, b) {
                    a = a[1];
                    b = b[1];
                    return a < b ? 1 : (a > b ? -1 : 0);
                });
                for (i = 0; i <= 1; i++) {
                  tmp = Math.round(parseInt(tuples[i][1]) / parseInt(value.population) * 100);
                  description += data.people[tuples[i][0]] + ": " +  tmp + "% (" + tuples[i][1].toLocaleString()  +")<br>";
                }
		    
		        //weight
		        if (value.population > 20000) weight = 2;
		        else if (value.population > 3000) weight = 1;
		        else weight = 0.5;
				circle = L.circle([value.lat, value.lng], Math.sqrt(parseInt(value.population)*2000), {
					color: color,
					fillColor: color,
					fillOpacity: 
					  2.86*(Math.max(parseInt(value.votes[0]),parseInt(value.votes[1])) / value.population - 0.5),
					weight: weight,
				}).addTo(map);
				

				circle.bindPopup(description);
		  });
		});

	</script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.land {
  fill: #bbb;
  stroke: #000;
  stroke-linejoin: round;
  stroke-linecap: round;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  svg.append("path")
      .datum(topojson.merge(us, us.objects.counties.geometries))
      .attr("class", "land")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Burlington Geographic - Physical Maps</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />
<link href="//netdna.bootstrapcdn.com/bootswatch/3.1.1/yeti/bootstrap.min.css" rel="stylesheet">

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
  .leaflet-top-pane {
    pointer-events: none;
  }
</style>
</head>
<body>


<style>
#map-ui {
    position: absolute;
    top: 15px;
    right: 10px;
    margin: 0;
    padding: 0;
    z-index: 100;
    background: #fff;
}
#layerControls {
    padding: 10px;
}
</style>

<div id='map-ui'>
    <div id='layerControls' class="btn-group-vertical" ></div>
</div>
<div id='map'></div>

<!--<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script> 
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>-->
<script src='http://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<script src="http://d3js.org/topojson.v1.min.js"></script> 

<script>
var map = L.map('map').setView([44.475, -73.212], 10);

var baseLayer = new L.mapbox.tileLayer('landplanner.hl6099hm').addTo(map);

var ui = document.getElementById('layerControls');

// Define the layers for the map
addLayer(L.mapbox.tileLayer('vanhoesenj.VTBedrock'), 'Bedrock Geology', 1);
addLayer(L.mapbox.tileLayer('vanhoesenj.VtSurfGeo'), 'Surficial Geology', 2);
addLayer(L.mapbox.tileLayer('landplanner.hli55fb7'), 'Soil Types', 3);
addLayer(L.tileLayer('https://s3.amazonaws.com/geosprocket/btvgeographic/{z}/{x}/{y}.png'), 'Elevation Contours', 4);

function addLayer(layer, name, zIndex) {
    layer
        .setZIndex(zIndex);

    // Create a simple layer switcher that toggles layers on
    // and off.
    var link = document.createElement('button');

    // Define button element properties
    link.href = '#';
    link.className = 'btn btn-primary';
    link.type = 'button';
    link.innerHTML = name;

    // Update map and element properties by selected layer
    link.onclick = function(e) {
        e.preventDefault();
        e.stopPropagation();

        if (map.hasLayer(layer)) {
            map.removeLayer(layer);
            this.className = 'btn btn-primary';
        } else {
            map.addLayer(layer);
            this.className = 'active btn btn-primary';
        }
    };

    ui.appendChild(link);
}

// Add a reference overlay
var topPane = map._createPane('leaflet-top-pane', map.getPanes().mapPane);
var topLayer = new L.mapbox.tileLayer('landplanner.hl60jemk', {
  maxZoom: 18
}).addTo(map);
topPane.appendChild(topLayer.getContainer());
topLayer.setZIndex(7);
</script>


</body>
</html><!DOCTYPE html>
<html lang="en" ng-app="app">
<meta charset="UTF-8">
<meta name="viewport" content="initial-scale=1"/>
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0-rc5/angular-material.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic">
<body layout="column" ng-controller="AppController as vm" style="max-width: 960px; padding: 8px;">
<md-card ng-repeat="(k, v) in vm.themes" class="md-whiteframe-12dp">
    <md-card-title>
        <md-card-title-text>
            <span class="md-display-1" style="margin-right: 24px;">{{k}}</span>
        </md-card-title-text>
        <md-card-title-media>
            <div class="md-whiteframe-2dp" style="display: inline-block;">
                <span ng-repeat="(k, v) in v"
                      style="min-width: 48px; min-height: 48px; display: inline-block; text-align: center; line-height: 48px"
                      ng-style="{'background-color': 'rgba('+v.value[0]+','+v.value[1]+','+v.value[2]+','+(v.value[3] || 1)+')', color: 'rgba('+v.contrast[0]+','+v.contrast[1]+','+v.contrast[2]+','+(v.contrast[3] || 1)+')'}">{{k}}</span>
            </div>
        </md-card-title-media>
    </md-card-title>
    <md-divider></md-divider>
    <md-card-content>
        <div md-theme="{{k}}">
            <div layout="row" layout-align="space-between center">
                <div>
                    <md-toolbar>
                        <div class="md-toolbar-tools">primary</div>
                    </md-toolbar>
                    <md-toolbar class="md-hue-1">
                        <div class="md-toolbar-tools">hue 1</div>
                    </md-toolbar>
                    <md-toolbar class="md-hue-2">
                        <div class="md-toolbar-tools">hue 2</div>
                    </md-toolbar>
                    <md-toolbar class="md-hue-3">
                        <div class="md-toolbar-tools">hue 3</div>
                    </md-toolbar>
                </div>
                <div style="min-height: 256px;" layout="column" layout-align="space-between start">
                    <md-button class="md-raised md-primary">primary</md-button>
                    <md-button class="md-raised md-primary md-hue-1">hue 1</md-button>
                    <md-button class="md-raised md-primary md-hue-2">hue 2</md-button>
                    <md-button class="md-raised md-primary md-hue-3">hue 3</md-button>
                </div>
                <div style="min-height: 256px;" layout="column" layout-align="space-between start">
                    <md-switch class="md-primary" ng-model="vm.switch" style="margin: 0 0 8px 0">primary</md-switch>
                    <md-switch class="md-primary md-hue-1" ng-model="vm.switch" style="margin: 0 0 8px 0">hue 1
                    </md-switch>
                    <md-switch class="md-primary md-hue-2" ng-model="vm.switch" style="margin: 0 0 8px 0">hue 2
                    </md-switch>
                    <md-switch class="md-primary md-hue-3" ng-model="vm.switch" style="margin: 0 0 8px 0">hue 3
                    </md-switch>
                </div>
                <div style="min-height: 256px;" layout="column" layout-align="space-between start">
                    <md-checkbox class="md-primary" ng-model="vm.switch">primary</md-checkbox>
                    <md-checkbox class="md-primary md-hue-1" ng-model="vm.switch">hue 1</md-checkbox>
                    <md-checkbox class="md-primary md-hue-2" ng-model="vm.switch">hue 2</md-checkbox>
                    <md-checkbox class="md-primary md-hue-3" ng-model="vm.switch">hue 3</md-checkbox>
                </div>
                <div style="min-height: 256px;" layout="column" layout-align="space-between start">
                    <md-radio-group ng-model="vm.switch">
                        <md-radio-button class="md-primary" ng-value="true">primary</md-radio-button>
                    </md-radio-group>
                    <md-radio-group ng-model="vm.switch">
                        <md-radio-button class="md-primary md-hue-1" ng-value="true">hue 1</md-radio-button>
                    </md-radio-group>
                    <md-radio-group ng-model="vm.switch">
                        <md-radio-button class="md-primary md-hue-2" ng-value="true">hue 2</md-radio-button>
                    </md-radio-group>
                    <md-radio-group ng-model="vm.switch">
                        <md-radio-button class="md-primary md-hue-3" ng-value="true">hue 3</md-radio-button>
                    </md-radio-group>
                </div>
                <div style="min-height: 256px;" layout="column" layout-align="space-between center">
                    <md-progress-circular class="md-primary" md-mode="determinate"
                                          value="100"></md-progress-circular>
                    <md-progress-circular class="md-primary md-hue-1" md-mode="determinate"
                                          value="100"></md-progress-circular>
                    <md-progress-circular class="md-primary md-hue-2" md-mode="determinate"
                                          value="100"></md-progress-circular>
                    <md-progress-circular class="md-primary md-hue-3" md-mode="determinate"
                                          value="100"></md-progress-circular>
                </div>
            </div>
        </div>
    </md-card-content>
</md-card>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular-animate.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular-aria.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0-rc5/angular-material.min.js"></script>
<script>
    angular.module('app', ['ngMaterial'])
            .config(function ($mdThemingProvider, $mdColorPalette) {
                $mdThemingProvider.alwaysWatchTheme(true);
                var keys = Object.keys($mdColorPalette);
                angular.forEach($mdColorPalette, function (v, k) {
                    $mdThemingProvider.theme(k).primaryPalette(k).accentPalette(keys[(keys.indexOf(k) + 1) % keys.length]);
                });
            })
            .controller('AppController', function ($window, $scope, $mdColorPalette) {
                var vm = this;
                vm.themes = $mdColorPalette;
                vm.switch = true;

                console.log($mdColorPalette);

                if ($window.frameElement) {
                    $window.frameElement.style.height = ((369 + 8 * 2) * Object.keys($mdColorPalette).length + 8 * 2) + 'px';
                }
            });
</script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Assignment 3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
				background-color: gray;
			}

			svg {
				background-color: yellow;
			}

		</style>
	</head>
	<body>

		<script type="text/javascript">		


			var svg = d3.select("body")
						.append("svg")
						.attr("width", 1400)
						.attr("height", 800);



			d3.csv("AFOLCopy.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.MINIFIGS, +b.MINIFIGS);

					//If your numeric values aren't sorting properly,
					//try commenting out the line above, and instead using:
					//
					//return d3.descending(+a.lifeSatisfaction, +b.lifeSatisfaction);
					//
					//Data coming in from the CSV is saved as strings (text),
					//so the + signs here force JavaScript to treat those
					//strings instead as numeric values, thereby fixing the
					//sort order (hopefully!).
				});
												

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", 50)
					.attr("y", function(d, i) {
						return i * 15 + 25;
					})
					.attr("width", function(d) {
						return d.MINIFIGS * 15;
					})
					.attr("height", 12)
					.attr("fill", "orange")
					.append("title")
					.text(function(d) {
						return d.THEME + " had " + d.MINIFIGS + " sets in 2014.";
					});

			});


		</script>

	</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.state {
  fill: #ccc;
}

.state-boundary {
  fill: none;
  stroke: #fff;
}

.state.selected {
  fill: orange;
  stroke: #000;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="topojson.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var selected = {
  "9": 1, "10": 1, "12": 1, "13": 1, "19": 1, "17": 1, "18": 1
};

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  svg.append("path")
      .datum(topojson.feature(us, us.objects.states))
      .attr("class", "state")
      .attr("d", path);

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "state-boundary")
      .attr("d", path);

  svg.append("path")
      .datum(topojson.merge(us, us.objects.states.geometries.filter(function(d) { return d.id in selected; })))
      .attr("class", "state selected")
      .attr("d", path);
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Burlington Geographic - Physical Maps</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />
<link href="//netdna.bootstrapcdn.com/bootswatch/3.1.1/yeti/bootstrap.min.css" rel="stylesheet">

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
  .leaflet-top-pane {
    pointer-events: none;
  }
</style>
</head>
<body>


<style>
#map-ui {
    position: absolute;
    top: 15px;
    right: 10px;
    margin: 0;
    padding: 0;
    z-index: 100;
    background: #fff;
}
#layerControls {
    padding: 10px;
}
</style>

<div id='map-ui'>
    <div id='layerControls' class="btn-group-vertical" ></div>
</div>
<div id='map'></div>

<script src='http://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<script src="http://d3js.org/topojson.v1.min.js"></script> 

<script>
var map = L.map('map').setView([44.475, -73.212], 10);

var baseLayer = new L.mapbox.tileLayer('landplanner.hl6099hm').addTo(map);

var ui = document.getElementById('layerControls');

// Define the layers for the map
addLayer(L.mapbox.tileLayer('vanhoesenj.VTBedrock'), 'Bedrock Geology', 1);
addLayer(L.mapbox.tileLayer('vanhoesenj.VtSurfGeo'), 'Surficial Geology', 2);
addLayer(L.mapbox.tileLayer('landplanner.hli55fb7'), 'Soil Types', 3);
addLayer(L.tileLayer('https://s3.amazonaws.com/geosprocket/btvgeographic/{z}/{x}/{y}.png'), 'Elevation Contours', 4);

function addLayer(layer, name, zIndex) {
    layer
        .setZIndex(zIndex);

    // Create a simple layer switcher that toggles layers on
    // and off.
    var link = document.createElement('a');

    // Define button element properties
    link.href = '#';
    link.className = 'btn btn-primary';
    link.type = 'button';
    link.innerHTML = name;

    // Update map and element properties by selected layer
    link.onclick = function(e) {
        e.preventDefault();
        e.stopPropagation();

        if (map.hasLayer(layer)) {
            map.removeLayer(layer);
            this.className = 'btn btn-primary';
        } else {
            map.addLayer(layer);
            this.className = 'active btn btn-primary';
        }
    };

    ui.appendChild(link);
}

// Add a reference overlay
var topPane = map._createPane('leaflet-top-pane', map.getPanes().mapPane);
var topLayer = new L.mapbox.tileLayer('landplanner.hl60jemk', {
  maxZoom: 18
}).addTo(map);
topPane.appendChild(topLayer.getContainer());
topLayer.setZIndex(7);
</script>


</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.land {
  fill: #eee;
}

.border--counties {
  fill: none;
  stroke: #fff;
}

.land--counties {
  fill-opacity: .2;
  stroke-linejoin: round;
  stroke-linecap: round;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var color = d3.scale.category10();

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  svg.append("path")
      .datum(topojson.feature(us, us.objects.land))
      .attr("class", "land")
      .attr("d", path);

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.counties, function(a, b) { return a !== b; }))
      .attr("class", "border border--counties")
      .attr("d", path);

  (function transition() {
    var g = svg.append("g")
        .datum(topojson.merge(us, us.objects.counties.geometries.filter(function() { return Math.random() > .5; })))
        .attr("class", "land--counties")
        .style("opacity", 0);

    g.selectAll("path")
        .data(function(d) { return d.coordinates; })
      .enter().append("path")
        .datum(function(d) { return {type: "Polygon", coordinates: d}; })
        .style("fill", function(d, i) { return color(i); })
        .style("stroke", function(d, i) { return d3.lab(color(i)).darker(); })
        .attr("d", path);

    g.transition()
        .duration(750)
        .style("opacity", 1)
      .transition()
        .duration(2500)
      .transition()
        .duration(750)
        .style("opacity", 0)
        .each("end", transition)
        .remove();
  })();
});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<head>
	<meta charset="utf-8">
	<title>Open Weather Map Thermometer</title>
	<script src="d3.v3.js"></script>
	<link rel="stylesheet" href="style.css">
</head>
<body>
	
	

<h1>Search for a city</h1>
<form id="cityInputForm">
  <label for="cityInput">City name:</label>
  <input id="cityInput" name="name" value="London, GB">
  <input type="submit" value="Search">
</form>
<br/>
<section>
<article class="therm">
</article>
</section>
<script src="vis.js"></script>
</body>
<!DOCTYPE html>
<html>
<head>
	<title>Leaflet.draw drawing and editing tools</title>
    <link 
        rel="stylesheet" 
        href="http://cdn.leafletjs.com/leaflet-0.7/leaflet.css"
    />
    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css" />
    <link 
        rel="stylesheet" 
        href="http://leaflet.github.io/Leaflet.draw/leaflet.draw.css"
    />

    <script src="http://libs.cartocdn.com/cartodb.js/v3/cartodb.js"></script>
    <script
        src="http://leaflet.github.io/Leaflet.draw/leaflet.draw.js">
    </script>
    <!-- include cartodb.js library -->


</head>
<body>
	<div id="map" style="width: 800px; height: 600px; border: 1px solid #ccc"></div>
	<button id="changeColor">Rectangle -> Blue</button>
	<script>

        var map = new L.Map('map', {
          zoomControl: false,
          center: [43, 0],
          zoom: 3
        });

        L.tileLayer('http://tile.stamen.com/toner/{z}/{x}/{y}.png', {
          attribution: 'Stamen'
        }).addTo(map);

			L.drawLocal.draw.toolbar.buttons.polygon = 'Draw a sexy polygon!';

			var drawControl = new L.Control.Draw({
				position: 'topright',
				draw: {
					polyline: false,
					polygon: {
						allowIntersection: false,
						showArea: true,
						drawError: {
							color: '#b00b00',
							timeout: 1000
						},
						shapeOptions: {
							color: '#bada55'
						}
					},
					circle: false,
					marker: false
				}
			});
			map.addControl(drawControl);



		function updateLayer(query, layer){
			// Run a query to get new Max / Min of layer
		    var sql = cartodb.SQL({ user: 'andrew' });
		        sql.execute("select min(pop_max) min, max(pop_max) max from ("+query+") a").done(function(data) {
		        // Generate a new CartoCSS to apply
		        var limit = (data.rows[0].min+(data.rows[0].max-data.rows[0].min)/10); // something
		    	var cartocss = "#ne_10m_populated_places_simple_3{ marker-fill: #000; marker-fill-opacity: 0.9; marker-line-color: #fff; marker-line-width: 0.5; marker-line-opacity: 1; marker-placement: point; marker-type: ellipse; marker-width: 8; marker-allow-overlap: true; [pop_max < "+limit+"]{ marker-fill: red;}}";
		    	// Set our query to filter the layer
      			layer.setSQL(query);
      			// Set our new Style
		    	layer.setCartoCSS(cartocss)

		     });
		}



        cartodb.createLayer(map, 'http://andrew.cartodb.com/api/v2/viz/32e5207e-fb95-11e3-9e94-0edbca4b5057/viz.json')
        .addTo(map)
        .on('done', function(layer) {

        	// Keep track of all draw objects
			var drawnItems = new L.FeatureGroup();
			map.addLayer(drawnItems);

			// // Set the title to show on the polygon button

			map.on('draw:created', function (e) {
				var type = e.layerType,
					draw_layer = e.layer;

				// Show the polygon on the map
				drawnItems.addLayer(draw_layer);

				// Get the coordinates of the polygon we just drew
				var poly = draw_layer.getLatLngs();
				var sql_poly = [];
				for (i in poly){

					sql_poly.push("CDB_LatLng("+poly[i].lat+","+poly[i].lng+")")
				}
				//SQL polygon must be a CLOSED loop
				sql_poly.push("CDB_LatLng("+poly[0].lat+","+poly[0].lng+")")


				// Join our coordinates and a SQL query
				var query = "SELECT * FROM ne_10m_populated_places_simple_3 WHERE ST_Intersects(the_geom, ST_MakePolygon(ST_MakeLine(Array["+sql_poly.join()+"])))";
				// Run our function to update SQL and Style
      			updateLayer(query, layer.getSubLayer(0))
			});
        })
        .on('error', function(err) {
          alert("some error occurred: " + err);
        });

	</script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <title>Data Layer: Styling</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
      #legend-container {
        font-family: Arial, sans-serif;
        background: #fff;
        padding: 10px;
        margin: 10px;
        border: 3px solid #000;
      }
      #legend-container h3 {
        margin-top: 0;
      }
      .legend-color-box {
      	height:20px;
		width:20px;
		border-radius:3px;
		float:left;
		border:1px solid black;
		margin-right:6px;        	
      }
      
    </style>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script>
		var map,
			cachedGeoJson,
			colorValues = [
	
				"red", //1
				"blue", //2
				"green", //3
				"brown", //4
				"purple", //5
				"pink" //6
			],
			invertedColorValues = [
		
				"pink", //1
				"purple", //2
				"brown", //3
				"green", //4
				"blue", //5
				"red"//6         
			],
			infoWindow = new google.maps.InfoWindow({
		      content: ""
		  	});

		google.maps.event.addDomListener(window, 'load', function initialize() {
			//create the map
			map = new google.maps.Map(document.getElementById('map-canvas'), {
			  zoom: 6,
			  center: {lat: 37.5, lng: -119.0},
			  scrollwheel: false
			});
			
			// Load GeoJSON.
			var promise = $.getJSON("california_nad83_zones_min.geojson"); //same as map.data.loadGeoJson();
			promise.then(function(data){
				cachedGeoJson = data; //save the geojson in case we want to update its values
				map.data.addGeoJson(cachedGeoJson,{idPropertyName:"id"});  
			});
		
			//style fucntions
			var setColorStyleFn = function(feature) {
			  	return {
				      fillColor: colorValues[feature.getProperty('value')],
				      strokeWeight: 1
				    };
				},
				//an inverted style fn
				setInvertedColorStyleFn = function(feature) {
			  		return {
				      fillColor: invertedColorValues[feature.getProperty('value')],
				      strokeWeight: 1
				    };
				};
			
			// Set the stroke width, and fill color for each polygon, with default colors at first
			map.data.setStyle(setColorStyleFn);
		  			
			//get the legend container, create a legend, add a legend renderer fn
			var $legendContainer = $('#legend-container'),
				$legend = $('<div id="legend">').appendTo($legendContainer),
				renderLegend = function(colorValuesArray){
					$legend.empty();
		        	$.each(colorValuesArray,function(index, val){
			        	var $div = $('<div style="height:25px;">').append($('<div class="legend-color-box">').css({
				       		backgroundColor:val,
				        })).append($("<span>").css("lineHeight","23px").html("Zone " + index));
				          
				        $legend.append($div);
			        });	
				}
	        
			//make a legend for the first time
	        renderLegend(colorValues);
	        
	        //make a toggle button for color values
	        var $toggleColorsButton = $("<button>").html("Toggle Colors").click(function(){
	        	if(map.data.getStyle() === setColorStyleFn){
	        		map.data.setStyle(setInvertedColorStyleFn);
	        		renderLegend(invertedColorValues);
	        	} else {
	        		map.data.setStyle(setColorStyleFn);
	        		renderLegend(colorValues);
	        	}
	        });
	        
	        //add it to the legend
	        $legendContainer.append($toggleColorsButton);
	        
			//add the legend to the map
	        map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push($legendContainer[0]);
		 
	      	//listen for click events
			map.data.addListener('click', function(event) {
				//show an infowindow on click   
				infoWindow.setContent('<div style="line-height:1.35;overflow:hidden;white-space:nowrap;"> Feature id = '+
											event.feature.getId() +"<br/>Feature Value = Zone " + event.feature.getProperty("value") + "</div>");
				var anchor = new google.maps.MVCObject();
				anchor.set("position",event.latLng);
				infoWindow.open(map,anchor);
			});
		});
    </script>
  </head>
  <body>
    <div id="map-canvas"></div>
    <div id="legend-container"><h3>Legend</h3></div>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Loading CSV Data with D3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	<!-- 	// <script type="text/javascript" src="/../js/d3.min.js"></script> -->
		<style>
		h1 {
			border-bottom: 2px solid green;
			width: auto;
		}
/*		.axis line {
			stroke: #000;
			stroke-width: .1;
		}
		.axis path {
			display:none;
		}
		.axis text {
			font-size: 14px;
		}*/
		
		</style>

	</head>
	<body>
		<div class="allContent">
			<div class="barGraph-title"></div>
			<div class="playAll">
					<div class="switch"></div>
			</div>
			<div class="buttonContainer"></div>
			<div class="clearfix"></div>
			<div class="lineGraph"></div>
			<div class="source"
				<span>Source:</span><a href="https://data.oecd.org/energy/renewable-energy.htm#indicator-chart">https://data.oecd.org/energy</a>
			</div>
		</div>

		
		<script type="text/javascript">		

			var margin = {top:50,right:80,bottom:50,left:40};
			var width = 300 - margin.left - margin.right;
			var height = 200- margin.top - margin.bottom;

		  var color = d3.scale.linear().range(['#B8B800','#296629'])

 			var tempColor, playInterval, worldTotal;
 			var activeCircle,innerCircle,tooltipcolor,oldColor;
 			var years = ["2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012"]
 			//var years = d3.range(2002, 2012+1)
 			var currentYear = 2002;	
 			var dateFormat = d3.time.format("%Y")
 			// var testdate = dateFormat.parse(currentYear)
 			// console.log(testdate)

 			var source = d3.select("body")
			var svg = d3.select("body").append("svg")
				.attr("width", width + margin.left + margin.right)
				.attr("height", height + margin.top + margin.bottom)		
				.append("g").attr("transform","translate(90,30)")
			var dateFormat = d3.time.format("%Y")

			//Define Y
			var yScale = d3.scale.linear().range(height,0)//.domain([100,0])
			var yAxis = d3.svg.axis().orient("left").scale(yScale)

			//Define X
			var xScale = d3.time.scale().range([0,width])//.domain([0,100])	
			var xAxis = d3.svg.axis().orient("bottom").scale(xScale)
				.tickFormat(function(d) { return dateFormat(d) } ) //.tickFormat(dateFormat)

			//svg.append("g").attr("class", "y axis").call(yAxis)
			svg.append("g").attr("class", "x axis").call(xAxis)//.attr("transform","translate(0,100)")

			//valueLine
			var valueLine = d3.svg.line()
				.x(function(d) { console.log( dateFormat.parse(d.year)); return xScale(dateFormat.parse(d.year)) })
				.y(function(d) { return yScale(+d.amount)})
		
			// barGraphTitle.insert("h2").text("Renewable Energy (%) of Total Energy Generation")
			// barGraphTitle.insert("h2").attr("class", "worldTotal").text("World Total: " )
			var dataNest =[];
			var dataset = [];

			d3.csv("data.csv", function(error,data) {

				for(i = 0; i < data.length; i++) {
					dataset[i] = { country: data[i].Location,
					years: []
					}

					for(j = 0; j < years.length; j++) {
						dataset[i].years.push({ 
							year: years[j],
							amount: data[i][years[j]]
						})
					}
				}
					console.log(dataset)

				xScale.domain([2002,2012])
				// .domain([
				// 		d3.min(years, function(d) { return dateFormat.parse(d)}),
				// 		d3.max(years, function(d) { return dateFormat.parse(d)} )
				//])
				yScale.domain([
					d3.max(dataset, function(d) { 
						return d3.max(d.years, function(d) { 
						return +d.amount 
							})
					})
				])

				var groups = svg.selectAll("g").data(dataset).enter().append("g")

				groups.append("title").text(function(d) { return d.country })

				groups.selectAll("path").data(function(d) {  return [d.years] })
					.enter()
					.append("path")
					.attr("class", "line")
					.attr("d", valueLine)
					.attr("fill", "none")
					.attr("stroke", "#981E32")
					.attr("stroke-width", 2);

			svg.append("g").attr("class", "x axis").attr("transform","translate(0," + width + ")").call(xAxis)
			svg.append("g").attr("class", "y axis").call(yAxis)

			})
	
		</script>
	</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="ISO-8859-1">
		<title>Loading CSV Data with D3</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
	</head>

	<body bgcolor=lightgray>
		<h1> Loading CSV data with D3</h1>
		<p style="color:red">Not much to see on the web page; try looking in the console!</p>

		<script type="text/javascript">		


			//Load in contents of CSV file
			d3.csv("food_court.csv", function(data) {

				//Using this CSV contents have been transformed into an array.

				//In order to view the CSV data, enter the following command in the console, for verification.
				console.log(data);

			});
		</script>
	</body>
</html><!DOCTYPE html>
<html>
<head>
  <title>Canvas Layer!</title>
  <meta charset="utf-8">

  <link rel="stylesheet" type="text/css" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css">
  <link rel="stylesheet" type="text/css" href="main.css">
</head>
<body>

<div id="map"></div>

<script src="https://cdn.rawgit.com/jondavidjohn/hidpi-canvas-polyfill/master/dist/hidpi-canvas.js"></script>
<script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
<script src="http://d3js.org/d3.v3.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>

<script src="fancyCanvas.js"></script>
<script src="layer.js"></script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>D3: Map of Texas</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
		
      @import url(http://fonts.googleapis.com/css?family=Oswald:700,400);
      
			body {
				font-family: oswald, arial, sans-serif;
	      color: #d3d3d3;
			}
			#container {
				width: 900px;
				margin-left: auto;
				margin-right: auto;
				margin-top: 50px;
				margin-bottom: 50px;
				padding: 20px 50px;
				background: #333;
				box-shadow: 0 0 5px #999999;
			}
			#container h1 {
				text-align: center;
			}
			svg {
				background: #333;
			}

		</style>
	</head>
	<body>
		<div id="container">
			<h1>The State of Texas</h1>
		</div>
		<script type="text/javascript">

			//Width and height
			var w = 900,
			    h = 500;

      //Define projection
			var projection = d3.geo.mercator()
				 .center([ -99.43,31.47 ])
				 .translate([ w/2, h/2 ])
				 .scale([ 2000 ]);

			//Define path generator
			var path = d3.geo.path()
							 .projection(projection);

			//Create SVG
			var svg = d3.select("#container")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			//Load in GeoJSON data
			d3.json("texas.json", function(json) {

				//Bind data and create one path per GeoJSON feature
				svg.selectAll("path")
				   .data(json.features)
				   .enter()
				   .append("path")
				   .attr("d", path)
					 .attr("fill","#d3d3d3");

			});

		</script>
	</body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Canadian population by immigrant status</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Georgia, serif;
			}

			h1 {
				font-size: 24px;
				margin: 0px 0 20px 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 10px 0;
			}

			svg {
				background-color: white;
			}

			rect:hover {
				fill: #cc0000;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>

		<h1>Immigrant population of Canadian provinces</h1>

		<p>Immigrants are persons who are, or have ever been, landed immigrants in Canada. A landed immigrant is a person who has been granted the right to live in Canada permanently by immigration authorities. Some immigrants have resided in Canada for a number of years, while others are more recent arrivals. Most immigrants are born outside Canada, but a small number were born in Canada.</p>

		<script type="text/javascript">		


			var w = 700;
			var h = 300;
			var padding = [ 20, 10, 30, 150 ];  //Top, right, bottom, left



			var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);



			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("population-immigrant-status-and-period_2006_canada.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.ImmigrantPopulation, +b.ImmigrantPopulation);
				});

				widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.ImmigrantPopulation;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.GeographicName; } ));

				var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");

				rects.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.GeographicName);
					})
					.attr("width", function(d) {
						return widthScale(d.ImmigrantPopulation);
					})
					.attr("height", heightScale.rangeBand())
					.attr("fill", "#E67D23")
					.append("title")
					.text(function(d) {
						return d.GeographicName + "'s immigrant population is " + d.ImmigrantPopulation;
					});

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});
            
		</script>
        
		<p>2006 counts, for Canada, provinces and territories. <br>
Source: <a href="http://www12.statcan.ca/census-recensement/2006/dp-pd/hlt/97-557/T403-eng.cfm?Lang=E&T=403&GH=4&SC=1&S=99&O=A">Statistics Canada</a>, 2006</p>

	</body>
</html><!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="charset=utf-8"/>
<style type="text/css">
    body {
      font: 10px sans-serif;
    }

    .background path {
      fill: none;
      stroke: #ccc;
      stroke-opacity: .4;
      shape-rendering: crispEdges;
    }

    .brush .extent {
      fill: #000;
      fill-opacity: .2;
      stroke: #666;
      shape-rendering: crispEdges;
    }

    .axis line, .axis path {
      fill: none;
      stroke: #AAA;
      shape-rendering: crispEdges;
    }

    #firstChild .axis .tick  {
      display: none;
    }
</style>
<title></title>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="http://d3js.org/queue.v1.min.js" charset="utf-8"></script>
<script>

    /* --------------------
      Variables
    -------------------- */
    var margin = {top: 65, right: 30, bottom: 10, left: 300},
        width = 1200 - margin.left - margin.right,
        height = 900 - margin.top - margin.bottom;

    var x = d3.scale.ordinal().rangePoints([0, width], 1),
        y = {},
        dragging = {},
        background,
        foreground,
        letterground;

    var yposArray = new Array();
    var lScale = d3.scale.linear().range([height, 0]);

    var line = d3.svg.line();
    var axis = d3.svg.axis().orient("left");


    /* --------------------
      Color variables based
      on their logo colors
    -------------------- */
    var providerArray = new Array();
    //明治, 森永, 雪印メグミルク, 日本ルナ, オハヨー乳業, 小岩井乳業, メイトー, グリコ乳業
    var colorArray = ["#ff0000", "#8d1231", "#0037ad", "#e60012", "#0275be", "#f7d000", "#e60012", "#f90f00"];
    var colorScale = d3.scale.ordinal()
        .range( colorArray );

    var svg = d3.select("body").append("svg:svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("svg:g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


    /* --------------------
      Load external data
    -------------------- */
    queue()
        .defer(d3.tsv, "data/yogurt.tsv")
        .await(loadReady);


    /* --------------------
      Drawing
    -------------------- */

    function loadReady(_error, _data) {

          /* make the list of provider */
          for (var i=0; i<_data.length; i++) {
              providerArray[i] = _data[i]["provider"];
          }
          colorScale.domain(d3.extent(providerArray));

          /* delete providers from dataset */
          for (var k=0; k<_data.length; k++) {
              delete _data[k]["provider"];
          }

          /* make the list of dimensions */
          x.domain(dimensions = d3.keys(_data[0]).filter(function(d) {
            return d != "name" && (y[d] = d3.scale.linear()
                .domain(d3.extent(_data, function(p) { return +p[d]; }))
                .range([height, 0]));
          }));

          /* scale position */
          for (var j=0; j<_data.length; j++) {
              yposArray[j] = parseInt(_data[j]["indexid"]);
          }
          lScale.domain(d3.extent(yposArray));

          /* lines for every data */
          background = svg.append("svg:g")
              .attr("class", "background")
            .selectAll("path")
              .data(_data)
            .enter().append("svg:path")
              .attr("d", path);

          /* lines for filtered data */
          foreground = svg.append("svg:g")
              .attr("class", "foreground")
            .selectAll("path")
              .data(_data)
            .enter().append("svg:path")
              .attr("stroke", function(d,i){
                  return colorScale( providerArray[i] );
              })
              .attr("stroke-opacity", 0.6)
              .attr("stroke-width", 0.3) 
              .attr("fill", "none")
              .attr("d", path)
              .attr("id", function(d){
                return d.name;
              });

          /* list of the products */
          letterground = svg.append("svg:g")
              .attr("class", "letterground")
            .selectAll(".letters")
              .data(_data)
            .enter().append("text")
              .attr("x", 20)
              .attr("y", function(d,i){
                return lScale( d["indexid"] );
              })
              .attr("text-anchor", "end")
              .attr("font-family", "sans-serif")
              .attr("font-size", "10px")
              .text( function(d){
                return d.name;
              });

          /* Add a group element for each dimension. */
          var g = svg.selectAll(".dimension")
              .data(dimensions)
            .enter().append("svg:g")
              .attr("class", "dimension")
              .attr("id", function(d,i) {
                if (i==0){ return "firstChild" };
              })
              .attr("transform", function(d) { return "translate(" + x(d) + ")"; });

          /* Add an axis and title. */
          g.append("svg:g")
              .attr("class", "axis")
              .each(function(d) {
                d3.select(this).call( axis.scale(y[d]) );
              })
            .append("svg:text")
              .attr("text-anchor", "start")
              .attr("font-family", "sans-serif")
              .attr("font-size", "9px")
              .attr("y", -9)
              .attr("transform", function(d) {
                    return "rotate(-30)" 
              })
              .text(function(d,i) {
                    if (i != 0) { return dimensions[i];
                    } else { return "";}
              });

          /* Add and store a brush for each axis. */
          g.append("svg:g")
              .attr("class", "brush")
              .each(function(d) { d3.select(this).call( y[d].brush = d3.svg.brush().y(y[d]).on("brush", brush)); })
            .selectAll("rect")
              .attr("x", -8)
              .attr("width", 16);

    };


    /* --------------------
      functions
    -------------------- */

    function position(d) {
      var v = dragging[d];
      return v == null ? x(d) : v;
    }

    function transition(g) {
      return g.transition().duration(500);
    }

    function path(d) {
      return line( dimensions.map(function(p) { return [position(p), y[p](d[p])]; }) );
    }

    function brush() {

      var actives = dimensions.filter(function(p) { return !y[p].brush.empty(); }),
          extents = actives.map(function(p) { return y[p].brush.extent(); });

      foreground.style("display", function(d) {
        return actives.every(function(p, i) {
          return extents[i][0] <= d[p] && d[p] <= extents[i][1];
        }) ? null : "none";
      });

      letterground.style("display", function(d) {
        return actives.every(function(p, i) {
          return extents[i][0] <= d[p] && d[p] <= extents[i][1];
        }) ? null : "none";
      });

    }

</script>
</body>
</html><!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title></title>
    <link rel="stylesheet" href="style.css">
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  </head>
  <body>

<h4>Via svg, pattern, and <a href="http://jsfiddle.net/jwrmwxzt/7/">path</a></h4>

<svg width="120" height="120" viewBox="0 0 120 120" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink">
    <defs>
        <pattern id="Triangle" width="10" height="10" patternUnits="userSpaceOnUse">
            <path fill="black" d="M5,0 10,10 0,10 Z" />
        </pattern>
    </defs>
    <circle cx="60" cy="60" r="50" fill="url(#Triangle)" />
</svg>
        
<h4>Via svg, pattern, and rectangles</h4>

<svg width="120" height="120" viewBox="0 0 120 120" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink">
    <defs>
        <pattern id="hash4_4" width="8" height="8" patternUnits="userSpaceOnUse" patternTransform="rotate(45)">
            <rect width="4" height="8" transform="translate(0,0)" fill="orange"></rect>
        </pattern>
    </defs>
    <circle cx="60" cy="60" r="50" fill="url(#hash4_4)" />
</svg>
        
<h4>Via svg, pattern, and d3</h4>

 </body>
<script>
// SVG injection:
var svg = d3.select("body").append("svg").attr("id", "d3svg")
    .attr("width", 120)
    .attr("height", 120);
//Pattern injection
var pattern = svg.append("defs")
	.append("pattern")
		.attr({ id:"hash4_4", width:"8", height:"8", patternUnits:"userSpaceOnUse", patternTransform:"rotate(60)"})
	.append("rect")
		.attr({ width:"4", height:"8", transform:"translate(0,0)", fill:"#88AAEE" });

//Shape design
svg.append("g").attr("id","shape")
    .append("circle")
.attr({cx:"60",cy:"60",r:"50", fill:"url(#hash4_4)" })
</script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<head><link rel='stylesheet' type='text/css' href='style.css'></head>
<body>
<div id='head'></div>
<div id='container'>
    <span id='left'></span>
    <span id='right'></span>
</div>
<script src='http://d3js.org/d3.v3.js'></script>
<script src='http://d3js.org/topojson.v1.min.js'></script>
<script src="tabletop.js"></script>
<script src='script.js'></script><html>
<head>
  <title>horizontal boxplot</title>
  <meta charset="utf-8" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js" type="text/JavaScript"></script>
</head>
<style>
svg {
  border: 1px solid gray;
}

line {
  shape-rendering: crispEdges;
  stroke: #000000;
}

line.minor  {
  stroke: #777777;
  stroke-dasharray: 2,2;
}

path.domain {
  fill: none;
  stroke: black;
}

</style>
<body>
</body>
    
<script>
d3.csv("data.csv", boxplot)

function boxplot(data){

  var h = 500,
      w = 500;

  var margin = {
    'top': 20,
    'bottom': 20,
    'left': 20,
    'right': 30 
  }

  d3.select("body").append("svg")
    .attr("height", h)
    .attr("width", w);


  xScale = d3.scale.linear()
    .domain([0,100]) // 0% to 100%
    .range([
      margin.left,
      w - margin.right
    ]);

  yScale = d3.scale.linear()
    .domain([
      Number(d3.max(data, function(d){ return d.day })) + 1,
      Number(d3.min(data, function(d){ return d.day })) - 1
    ])    
    .range([
      h - margin.bottom,
      margin.top
    ]);

  console.log(data);

  xAxis = d3.svg.axis()
    .scale(xScale)
    .orient("bottom")
    .ticks(10)
    .tickSize(-470)
    .tickSubdivide(true); // deprecated, I know

  d3.select("svg").append("g")
    .attr("transform", "translate(0,480)")
    .attr("id", "xAxisG")
    .call(xAxis);

  var days = data.map(function(d){return Number(d.day)});

  yAxis = d3.svg.axis()
    .scale(yScale)
    .orient("right")
    .tickSize(-470)
    .tickValues(days);
    

  d3.select("svg").append("g")
    .attr("transform", "translate(470,0)")
    .attr("id", "yAxisG")
    .call(yAxis);

  d3.select("svg").selectAll("circle.median")
    .data(data)
    .enter()
    .append("circle")
    .attr("class", "tweets")
    .attr("r", 5)
    .attr("cx", function(d) {return xScale(d.median)})
    .attr("cy", function(d) {return yScale(d.day)})
    .style("fill", "none");

  d3.select("svg").selectAll("g.box")
    .data(data)
    .enter()
    .append("g")
    .attr("class", "box")
    .attr("transform", function(d){
      return "translate(" + xScale(d.median) + "," + 
        yScale(d.day) + ")"
    })
    .each(function(d,i){
      
      d3.select(this)
        .append("line")
        .attr("class", "range")
        .attr("x1", xScale(d.max) - xScale(d.median))
        .attr("x2", xScale(d.min) - xScale(d.median))
        .attr("y1", 0)
        .attr("y2", 0)
        .style("stroke", "black")
        .style("stroke-width", "4px");

      d3.select(this)
        .append("line")
        .attr("class", "max")
        .attr("x1", xScale(d.max) - xScale(d.median))
        .attr("x2", xScale(d.max) - xScale(d.median))
        .attr("y1", -10)
        .attr("y2", 10)
        .style("stroke", "black")
        .style("stroke-width", "4px");

      d3.select(this)
        .append("line")
        .attr("class", "min")
        .attr("x1", xScale(d.min) - xScale(d.median))
        .attr("x2", xScale(d.min) - xScale(d.median))
        .attr("y1", -10)
        .attr("y2", 10)
        .style("stroke", "black")
        .style("stroke-width", "4px");        

      d3.select(this)
        .append("rect")
        .attr("class", "range")
        .attr("x", xScale(d.q1) - xScale(d.median))
        .attr("y", -10)
        .attr("height", 20)
        .attr("width", xScale(d.q3) - xScale(d.q1))
        .style("fill", "white")
        .style("stroke", "black")
        .style("stroke-width", "2px");

      d3.select(this)
        .append("line")
        .attr("x1", 0)
        .attr("x2", 0)
        .attr("y1", -10)
        .attr("y2", 10)
        .style("stroke", "darkgray")
        .style("stroke-width", "4px");
        
    })
}

</script>
  </footer>

</html><!DOCTYPE html>
  <head>
    <meta charset="utf-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <style>
  
       * {
			margin: 0;
			padding: 0;
		}


		#container {
			width: 800px;
			margin: 25px auto 25px auto;
			padding: 50px 50px 50px 50px;
			background-color: white;
		}
      
      .chartContainer {
			display: inline-block;
			width: 99%;
		}
       
      body {
				 margin:0;position:fixed;top:0;right:0;bottom:0;left:0; 
         font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
         font-size: 20px;
         font-style: bold;
			}

      h1 {
        margin-bottom: 25px;
  			 font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
         font-size: 28px;
         font-style: bold;
			}

			svg {
				background-color: white;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}
      
  circle {
      stroke-width: 4;
      fill: white;
      }
  
     circle.circles2b {
      stroke: white;
      stroke-width: 3;
      fill: white;
      }

      circle.circles1b {
      stroke: white;
      stroke-width: 3;
      fill: white;
      }
  
      .axis path,
		.axis line {
			fill: none;
			stroke: black;
			stroke-width: 2;
      shape-rendering: crispEdges;
		}
		
		.axis text {
         font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
         font-size: 18px;
         font-style: bold;
		}
      
      
    g.lines.highlight {
			opacity: 0.95;
  	}  

    g.lines.highlight circle {
	    fill: #ff0000;
      stroke: #ff0000;
		}  

    g.lines.highlight line {
	    stroke: #ff0000;
		}  
    
   /* Button styles  */

button {
		padding: 15px;
    display: inline-block;
    white-space: nowrap;
    background-color: #ccc;
    background-image: linear-gradient(top, #1c1c1c, #ccc);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#eeeeee', EndColorStr='#cccccc');
    border: 1px solid #777;
    padding: 0 1.5em;
    margin: 0.5em;
    font: bold 1em/2em Arial, Helvetica;
    text-decoration: none;
    color: #333;
    text-shadow: 0 1px 0 rgba(255,255,255,.8);
    border-radius: .2em;
    box-shadow: 0 0 1px 1px rgba(255,255,255,.8) inset, 0 1px 0 rgba(0,0,0,.3);
}

button:hover {
    background-color: #ddd;        
    background-image: linear-gradient(top, #fafafa, #ddd);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#fafafa', EndColorStr='#dddddd');        
}
 
      
      
    </style>
  </head>

  <body>
    
     <div id="container">

		<h1>Transitioning Slope Chart</h1>
		
       
<div id="buttonContainer">
		<button id="sortfreq">Frequency</button>
    <button id="sortpct">Percentages</button>
  </div>
       
       
  <div class="chartContainer" id="slopeChartContainer">
   	</div>
	
    </div> 
    
    <script>
     
      
      
      
      //Width, height, padding
	var w = 700;
	var h = 700;
	var padding = 40;
		
		 //data
  var dataset = [{"first":3.1,"second":5,"group":"up","delta":-1.9,"firstpct":0.1476,"secondpct":0.2381},{"first":5.3,"second":6,"group":"up","delta":-0.7,"firstpct":0.3533,"secondpct":0.4},{"first":1.7,"second":3.2,"group":"up","delta":-1.5,"firstpct":0.0944,"secondpct":0.1778},{"first":3.3,"second":7.3,"group":"up","delta":-4,"firstpct":0.1833,"secondpct":0.4056},{"first":2.4,"second":5.4,"group":"up","delta":-3,"firstpct":0.1043,"secondpct":0.2348},{"first":3.6,"second":8.5,"group":"up","delta":-4.9,"firstpct":0.2118,"secondpct":0.5},{"first":4.3,"second":9.1,"group":"up","delta":-4.8,"firstpct":0.1955,"secondpct":0.4136},{"first":1.1,"second":11.1,"group":"up","delta":-10,"firstpct":0.0458,"secondpct":0.4625},{"first":5.2,"second":15.7,"group":"up","delta":-10.5,"firstpct":0.208,"secondpct":0.628},{"first":4.9,"second":4.5,"group":"down","delta":0.4,"firstpct":0.3267,"secondpct":0.3},{"first":7,"second":2.6,"group":"down","delta":4.4,"firstpct":0.3043,"secondpct":0.113},{"first":3,"second":1.2,"group":"down","delta":1.8,"firstpct":0.1667,"secondpct":0.0667}]   ;

      
 //Set button state     
//Default action for button will be to plot by Frequency

      
 //Get values for plotting
var mydataset = []; // store their names within a local array

   for(var i = 0; i < dataset.length; i++){
      mydataset.push(
        [dataset[i].first, dataset[i].second, dataset[i].delta]
       )        
       }      
  



//Find max values & Create scale functions
      var xMax = d3.max(mydataset, function(d) { return d[0]; })
      var yMax = d3.max(mydataset, function(d) { return d[1]; })
      var max = Math.max(yMax, xMax);  // highest value in dataset
   
			var yScale = d3.scale.linear()
								 .domain([0, max])
								 .range([h - padding, padding])
                 .nice() 
                 ;
   
      var rad = 6 // radius of circle 
      var radback = rad * 1.3
  
//Configure y axis 
		var yAxis = d3.svg.axis()
						.scale(yScale)
						.orient("left")
						.ticks(6)
            ; 
      
      
//Create SVG element
			var svg = d3.select("#slopeChartContainer")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
 

//Create groups
		var groups = svg.selectAll("g")
						.data(mydataset)  // bind data to the group
						.enter()
						.append("g")
						.attr("class", "lines") // give each 'g' a bar class
						
   // .attr("transform", function(d, i) {return "translate(" + yScale(i) + ",0)";})

    .on("mouseover", function(d) {d3.select(this).classed("highlight", true);})
		.on("mouseout", function() {d3.select(this).classed("highlight", false);});
      
      
       
 // join paths
  groups.append("line")
			   .attr("x1", (w/4))
         .attr("x2", (w/1.4))
         .attr("y1", function(d) {return yScale(d[0])})
         .attr("y2", function(d) {return yScale(d[1])})
         .style("stroke-width", 4)        
         .attr("stroke",  function(d) {
               if (d[2] <= -10) {return "#000c60";}
                else if (d[2] >=0) {return "#569ffe";} 
                else  {return "#001bea";}
                 })
         .style("opacity", 1)
          ;  

      
//Create first background circles
			groups.append("circle")
         .attr("class", "circles1b")
         .attr("r", radback)
         .attr("cx", (w/4))
         .attr("cy", function(d) {return yScale(d[0])})
          ;      
      
  //Create first circles
	groups.append("circle")
			   .attr("class", "circle1")
         .attr("r", rad)
         .attr("cx", (w/4))
         .attr("cy", function(d) {return yScale(d[0])})
         .attr("stroke",  function(d) {
               if (d[2] <= -10) {return "#000c60";}
                else if (d[2] >=0) {return "#569ffe";} 
                else  {return "#001bea";}
                 })
      .style("opacity", 1)      
          ;
  
//Create second background circles
			groups.append("circle")
         .attr("class", "circles2b")
        .attr("r", radback)
         .attr("cx", (w/1.4))
         .attr("cy", function(d) {return yScale(d[1])})
          ;      
      
      
    
  //Create second circles
   groups.append("circle")
			   .attr("class", "circle2")
         .attr("r", rad) 
         .attr("cx", (w/1.4))
         .attr("cy", function(d) {return yScale(d[1])})
         .attr("stroke",  function(d) {
               if (d[2] <= -10) {return "#000c60";}
                else if (d[2] >=0) {return "#569ffe";} 
                else  {return "#001bea";}
                 })
      .style("opacity", 1) 
          ;    
      
  // First text
       svg.append("text")
          .attr("x", (w/4))
          .attr("y", h-(padding/2))
          .style("text-anchor","middle") 
          .text("Before");

  // Second text
       svg.append("text")
          .attr("x", (w/1.4))
          .attr("y", h-(padding/2))
         .style("text-anchor","middle") 
          .text("After");
  
  
  //Create y axis
		svg.append("g")
			.attr("class", "axis")
			.attr("transform", "translate(" + (padding*1.5) + ",0)")
			.call(yAxis);
  
    
 // Add the text label for the Y axis
    svg.append("text")
        .attr("class", "ytext")
        .attr("transform", "rotate(-90)")
        .attr("y", (padding/100))
        .attr("x",0 - (h / 2))
        .attr("dy", "1em")
        .style("text-anchor", "middle")
        .text("Frequency");
   
      
 
      

      
// Sort By Percentages
      
d3.select("#sortpct")
			.on("click", function() {
   
      //update data
var mydataset = [];       
for(var i = 0; i < dataset.length; i++){
      mydataset.push(
        [dataset[i].firstpct*100, dataset[i].secondpct*100, dataset[i].delta]
       )        
       }  
        
      var xMax = d3.max(mydataset, function(d) { return d[0]; })
      var yMax = d3.max(mydataset, function(d) { return d[1]; })
      var max = Math.max(yMax, xMax);  // highest value in dataset
   

        var yScale = d3.scale.linear()
								 .domain([0, max])
								 .range([h - padding, padding])
                 .nice() 
                 ;
  
    
  
 //Update Y axis   
var yAxis = d3.svg.axis()
							  .scale(yScale)
							  .orient("left")
							  .ticks(6); 
    
    svg.select("g.axis")
   				.transition()
					.duration(2000)
      .attr("class", "axis")
			.attr("transform", "translate(" + (padding*1.5) + ",0)")
			.call(yAxis);  			
         
    
    svg.append("text")
        .attr("class", "newytext2")
        .transition()
        .duration(2000)
        .attr("transform", "rotate(-90)")
        .attr("y", (padding/100))
        .attr("x",0 - (h / 2))
        .attr("dy", "1em")
        .style("text-anchor", "middle")
        .text("Percentage");

 // Remove old Y axis     
    svg.selectAll("text.ytext").remove();
    svg.selectAll("text.newytext").remove();
   
   
//Set-up Transition
   
 var groups = svg.selectAll("g")
	    					.data(mydataset)  // bind data to the group
			    			.transition()
                .duration(2000);
   
 // update join paths
  groups.select("line")
			   .attr("y1", function(d) {return yScale(d[0])})
         .attr("y2", function(d) {return yScale(d[1])})
          ;  
  //update first background circles
	groups.select(".circles1b")
         .attr("cy", function(d) {return yScale(d[0])})
          ;      
 
  //update first circles
	groups.select(".circle1")
			   .attr("cy", function(d) {return yScale(d[0])})
          ; 

  //update second background circles
	groups.select(".circles2b")
         .attr("cy", function(d) {return yScale(d[1])})
          ;      
       
  //update second circles
   groups.select(".circle2")
         .attr("cy", function(d) {return yScale(d[1])})
         ;  
    
   
 });
      

      
// Sort By Frequencies
      
d3.select("#sortfreq")
			.on("click", function() {
   
  
//update data
var mydataset = [];       
for(var i = 0; i < dataset.length; i++){
      mydataset.push(
        [dataset[i].first, dataset[i].second, dataset[i].delta]
       )        
       }  
        
      var xMax = d3.max(mydataset, function(d) { return d[0]; })
      var yMax = d3.max(mydataset, function(d) { return d[1]; })
      var max = Math.max(yMax, xMax);  // highest value in dataset
   

        var yScale = d3.scale.linear()
								 .domain([0, max])
								 .range([h - padding, padding])
                 .nice() 
                 ;
        
        
  //Update Y axis   
var yAxis = d3.svg.axis()
							  .scale(yScale)
							  .orient("left")
							  .ticks(6); 
    
    svg.select("g.axis")
						.transition()
						.duration(2000)
      .attr("class", "axis")
			.attr("transform", "translate(" + (padding*1.5) + ",0)")
			.call(yAxis);  			
         
  
  
    svg.append("text")
    .attr("class", "newytext")
        .transition()
        .duration(2000)
        .attr("transform", "rotate(-90)")
        .attr("y", (padding/100))
        .attr("x",0 - (h / 2))
        .attr("dy", "1em")
        .style("text-anchor", "middle")
        .text("Frequency");

    svg.selectAll("text.ytext").remove();   
    svg.selectAll("text.newytext2").remove();
   
   
//Set-up Transition
   
 var groups = svg.selectAll("g")
	    					.data(mydataset)  // bind data to the group
			    			.transition()
                .duration(2000);
   
 // update join paths
  groups.select("line")
			   .attr("y1", function(d) {return yScale(d[0])})
         .attr("y2", function(d) {return yScale(d[1])})
          ;  
  //update first background circles
	groups.select(".circles1b")
         .attr("cy", function(d) {return yScale(d[0])})
          ;      
 
  //update first circles
	groups.select(".circle1")
			   .attr("cy", function(d) {return yScale(d[0])})
          ; 

  //update second background circles
	groups.select(".circles2b")
         .attr("cy", function(d) {return yScale(d[1])})
          ;      
       
  //update second circles
   groups.select(".circle2")
         .attr("cy", function(d) {return yScale(d[1])})
         ;  
    
   
 });
      
      
      
    </script>
  </body>
  



<!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0px;
  padding: 0px;
  font-family: Arial, sans-serif;
  font-size: 14px;
  line-height: 1.5em;
  color: #4a4a4a;
}

#content {
  margin: 5px;
  padding: 0px 0px 150px 0px;
  width: 575px;
  text-align: left;
}

#container {
  padding: 15px;
  border: 1px solid #ccc;
  height: 550px;
  clear: both;
}

#header h1 {
  margin: 0px 0px 0px 10px;
  padding: 4px 0px 0px 7px;
  font-family: Georgia, "Times New Roman", serif;
  font-size: 18px;
  font-weight: normal;
  color: #fff;
}

p {
  margin: 0px;
  padding: 0px 0px 15px 0px;
  color: #4a4a4a;
  font-weight: normal;
  line-height: 1.5rem;
}

p.body {
  padding: 15px 0px 15px 0px;
}

#slides {
  margin: 0px;
  padding: 0px;
  background: #fff;
  height: 400px;
  width: 300px;
  float: right;
}

#slides p {
  margin: 0px;
  padding: 0px 0px 13px 0px;
  color: #4a4a4a;
  font-weight: normal;
}

g.y.axis path.domain {
  stroke-width: 0px;
}

g.x.axis path.domain, g.x.axis g.tick.major line, g.x.axis g.tick line {
  stroke: #333;
  stroke-width: 1px;
  shape-rendering: crispEdges;
}

.axis path, .axis line {
  fill: none;
  shape-rendering: crispEdges;
  border-width: 2px;
}

.axis line {
  stroke: #eee;
  stroke-width: 1;
  shape-rendering: crispEdges;
}

g.group text, g.tick text, .x.axis text {
  color: #4a4a4a;
  font-size: 12px;
}

#buttons, #countrybuttons {
  margin: 0px 0px 0px 5px;
  padding: 0px;
}

#countrybuttons{
  margin: 5px 0px 0px 5px;
  padding: 0px;
}

.button {
  display: inline-block;
  margin: 0px 0px 3px 0px;
  padding: 4px 6px;
  line-height: 20px;
  background:#ff0000;
  min-width: 70px;
  border-radius: 3px;
  text-align: center;
  color: #fff;
  font-family: Arial, sans-serif;
  font-size: 12px;
  font-weight: bold;
  text-transform: uppercase;
}

#countrybuttons .button {
  min-width: 0px;
  background:#f4f4f4;
  color: #747474;
}

#countrybuttons .selected {
  background:#ff0000;
  color: #fff;
}

.button:hover {
  background:#e3120b;
  color: #fff;
  cursor: pointer;
}

.button span {
  margin: 0px;
  padding: 0px 3px;
}

#play {
  float: left;
}

.regLine {
  fill: none;
  stroke: #00a1ce;
  stroke-width: 2.5;
  opacity: 0;
}

#header {
  margin: 0px;
  padding: 0px;
  height: 34px;
  background: #747474;
}

#block {
  float: left;
  margin: 0px;
  padding: 0px;
  height: 100%;
  width: 10px;
  background: #ff0000;
}

.left.label {
  font-size: 12px;
  fill: #4a4a4a;
}

.right.label {
  font-size: 12px;
  fill: #772210;
}

#source {
  margin: 0px 0px 20px 0px;
  padding: 0px;
  font-size: 11px;
}

g.group text {
  opacity: 0;
}

circle {
  fill: #00a1ce;
  stroke: #fff;
  stroke-width: 1.5;
}

.scatter {
  opacity: 0.6;
}

.timerCircle {
  stroke: #ccc;
  stroke-width: 2;
  fill: #fff;
}

rect {
  fill: #ccc;
}

#year {
  font-family: Arial, sans-serif;
  font-size: 14px;
  color: #4a4a4a;
  font-weight: bold;
}

div.tooltip {
  position: absolute;
  pointer-events: none;
  margin: 0px;
  padding: 7px;
  width: 255px;
  height: 75px;
  background: #fff;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
  border: 1px solid #ccc;
  opacity: 0;
}

div.tooltip p {
  margin: 0px;
  padding: 0px;
  line-height: 1.2rem;
  color: #4a4a4a;
  text-align: left;
}

.legend circle {
  fill: none;
  stroke: #ccc;
  stroke-width: 1;
}

.legend text {
  fill: #747474;
  font: 10px Arial, sans-serif;
  text-anchor: middle;
}



</style>

</head>

<body>

<div id="content">

	<div id="header">
		<div id="block"></div>
		<h1>CO<sub>2</sub> emissions and GDP per capita</h1>
	</div>

	<div id="container">

	<div id="buttons">
	<div class="button" id="play">Play<span class="fa fa-caret-right"></span></div>
	</div>

	<div id="slider"></div>

	<div id="countrybuttons">
	<div class="button selected" id="africa">Africa</span></div>
	<div class="button selected" id="asia">Asia</span></div>
	<div class="button selected" id="europe">Europe</span></div>
	<div class="button selected" id="latam">Latin America</span></div>
	<div class="button selected" id="mena">MENA</span></div>
	<div class="button selected" id="northamerica">North America</span></div>
	</div>


	<div id="chart"></div>

		<p id="source">Source: World Bank, IMF</p>

	</div>

</div>

<script type="text/javascript" src="chart.js"></script>

</body>
</html><head>
  <title>County Treemap</title>
</head>
<meta charset="utf-8">
<style>

svg {
  height: 500px;
  width: 1000px;
}

</style>
<body>
<div id="viz">
<svg></svg>
</div>
</body>


<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

  d3.select("svg")
  .append("circle")
  .attr("r", 25)
  .attr("cx", 50)
  .attr("cy", 50)
  .style("fill", "red")
  
  var smallArray = d3.range(10);
  console.log(smallArray);
  d3.select("svg")
  	.selectAll("circle.new")
  	.data(smallArray, function (d) {return d})
  	.enter()
  .append("circle")
  .attr("class", "new")
  .attr("r", 5)
  .attr("cy", 40)
  .attr("cx", function (d) {return d * 50})
  .transition("move")
  .duration(8001)
  .attr("cy", function (d) {return d * 50})
  
  d3.select("svg").selectAll("circle")
  .on("mouseover", function () {
    d3.select(this)
      .transition("over")
      .duration(1000).style("fill", "yellow") 
  })
  .on("mouseout", function () {
    d3.select(this)
      .transition()
    	.delay(1000)
      .style("fill", "red")
  		.transition("out")
  		.duration(1000)
  		.attr("r", 100)})
  
  d3.selectAll("circle")
  .data([2,4,5,8,9], function (d) {return d})
  .exit()
  .style("fill", "pink")
  
  console.log(d3.selectAll("circle").data())
  
  d3.selectAll("circle").filter(function (d) {
    return d%2 === 0}).attr("r", 10)
  
</script><!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
    <title>Transitions</title>
	
   <script src="http://d3js.org/d3.v3.min.js"></script>

  </head>
<body>
 <script type="text/javascript">
 
 var circleData = [
 {"cx":"25", "cy":"25", "r":"5"},
 {"cx":"50", "cy":"50", "r":"5"},
 {"cx":"75", "cy":"75", "r":"5"},
 ];
 
 d3.select("body").append("svg");
 
 d3.select("svg")
 .selectAll("circle")
 .data(circleData)
 .enter()
 .append("circle");
 
 d3.selectAll("circle")
 .attr(("cx"),function(d,i){return (i*25)+25;})
 .attr(("cy"),function(d,i){return (i*25)+25;})
 .attr(("r"),function(d,i){return 5});
 
 function crazyFunction (d,i){
 	 d3.select(this)
	 .transition().attr("r","25").attr("fill","yellow")
	 .transition().attr("r","5").attr("fill","black")
	 .transition().attr("cx","100")
	 .transition().attr("cy","100")
	 .transition()
	 .attr("cx",function(d,i){return d.cx})
	  .attr("cy",function(d,i){return d.cx})
	   .attr("fill","blue")
	   .transition()
	   .attr("stroke-width", "2")
	   .attr("stroke", "red")
 };
 //call function
 d3.selectAll("circle").on("mouseover", crazyFunction);
 
 
 </script>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <style>
        body {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        }

        .demo .canvas .background {
            fill: #F3F3F3;
            stroke: #333333;
        }
        .demo .wrapper.outer > .background {
            fill: #000000;
        }
        .demo .wrapper.inner > .background {
            fill: #DDDDDD;
        }

        rect.selection {
            stroke          : #111111;
            stroke-dasharray: 2px;
            stroke-opacity  : 0.75;
            fill            : transparent;
        }


        /* SHAPES */
        .demo .shape .background {
            fill: #0078E7;
            stroke: #333333;
            stroke-width: 0.5;
        }
        .demo .shape.selected > .background {
            stroke-dasharray: 2px;
            stroke-width  : 3;
            stroke: #000000;
            filter: "";
        }
        .demo .shape .label {
            font                : 12px sans-serif;
            pointer-events      : none;
            fill: #FFFFFF;
        }


        .demo .container .containerGroup .background,
        .demo .flowbox > .background {
            fill: #FFFFFF;
            stroke: #999999;
        }

        .demo .flowbox .node > .background {
            fill: #2ECC71;
            stroke: #333333;
            stroke-width: 0.5;
        }
        .demo .flowbox .node > .label {
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            font-size: 11px;
            fill: #000000;
            stroke-width: 0;
        }

        .demo .clippath .background {
            fill: #FFFFFF;
        }

        /* HANDLES */
        .demo .handle .background {
            fill: #F1C40F;
            stroke: #333333;
            stroke-width: 1;
        }
        .demo .handle .vertical {
            cursor: ns-resize;
        }
        .demo .handle .horizontal {
            cursor: ew-resize;
        }


        /* SVG */
        svg *::selection {
            background: transparent;
        }

        svg *::-moz-selection {
            background: transparent;
        }

        svg *::-webkit-selection {
            background: transparent;
        }

        /* HTML */
        body {
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            font-size: 12px;
        }

        .pure-button {
            font-family: inherit;
            font-size: 100%;
            *font-size: 90%; /*IE 6/7 - To reduce IE's oversized button text*/
            *overflow: visible; /*IE 6/7 - Because of IE's overly large left/right padding on buttons */
            padding: 0.5em 1em;
            color: #444; /* rgba not supported (IE 8) */
            color: rgba(0, 0, 0, 0.80); /* rgba supported */
            *color: #444; /* IE 6 & 7 */
            border: 1px solid #999;  /*IE 6/7/8*/
            border: none rgba(0, 0, 0, 0);  /*IE9 + everything else*/
            background-color: #E6E6E6;
            text-decoration: none;
            border-radius: 2px;
            margin: 0 5px;
        }

        .pure-button-hover,
        .pure-button:hover,
        .pure-button:focus {
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#1a000000',GradientType=0);
            background-image: -webkit-gradient(linear, 0 0, 0 100%, from(transparent), color-stop(40%, rgba(0,0,0, 0.05)), to(rgba(0,0,0, 0.10)));
            background-image: -webkit-linear-gradient(transparent, rgba(0,0,0, 0.05) 40%, rgba(0,0,0, 0.10));
            background-image: -moz-linear-gradient(top, rgba(0,0,0, 0.05) 0%, rgba(0,0,0, 0.10));
            background-image: -o-linear-gradient(transparent, rgba(0,0,0, 0.05) 40%, rgba(0,0,0, 0.10));
            background-image: linear-gradient(transparent, rgba(0,0,0, 0.05) 40%, rgba(0,0,0, 0.10));
        }
        .pure-button:focus {
            outline: 0;
        }
        .pure-button-active,
        .pure-button:active {
            box-shadow: 0 0 0 1px rgba(0,0,0, 0.15) inset, 0 0 6px rgba(0,0,0, 0.20) inset;
        }

        /* Firefox: Get rid of the inner focus border */
        .pure-button::-moz-focus-inner{
            padding: 0;
            border: 0;
        }

        .pure-button-primary,
        .pure-button-selected,
        a.pure-button-primary,
        a.pure-button-selected {
            background-color: rgb(0, 120, 231);
            color: #fff;
        }

        ul {
            margin-top: 4px;
        }
    </style>
    <script src="http://d3js.org/d3.v3.min.js" type="text/javascript"></script>
    <script src="demo.base.js"></script>
    <script src="demo.util.js"></script>
    <script src="demo.shape.js"></script>
    <script src="demo.container.js"></script>
    <script src="demo.handle.js"></script>
    <script src="demo.layout.flow.js"></script>
    <script src="demo.flowbox.js"></script>
</head>

<body>
<ul>
    <li>Use resize handles to change width of shapes and reflow children</li>
    <li>Drag containers around and drag on the background to use selection rectangle</li>
    <li>Add additional container using the link provided</li>
</ul></h5>
<button id="addContainer" class="pure-button pure-button-primary">Add Container</button>
<p/>
<div id="demo"></div>
<script type="text/javascript">
    var lastXY = 10;
    var canvasWidth = 800;
    var demo = d3.demo.app().width(600).height(600);
    d3.select("#demo").call(demo);

    d3.select("#addContainer").on("click", function() {
        addContainer("Container").x(lastXY).y(lastXY).width(200).height(350);
        lastXY += 10;
    });

    function addContainer(titleArg) {
        var container = d3.demo.container();
        demo.addShape(container
                        .label(titleArg)
                        .children([{id:1,name:"child1"},   {id:2,name:"child2"},   {id:3,name:"child3"},
                                   {id:4,name:"child4"},   {id:5,name:"child5"},   {id:6,name:"child6"},
                                   {id:7,name:"child7"},   {id:8,name:"child8"},   {id:9,name:"child9"},
                                   {id:10,name:"child10"}, {id:11,name:"child11"}, {id:12,name:"child12"},
                                   {id:13,name:"child13"}, {id:14,name:"child14"}, {id:15,name:"child15"}]));
        return container;
    }

    addContainer("RESIZE ME").x(20).y(10).width(200).height(475);
    addContainer("RESIZE ME").x(300).y(10).width(210).height(400);
</script>
</body>
</html><!DOCTYPE html>
  <head>
    <meta charset="utf-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
    <style>
      body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
      svg { width: 100%; height: 100%; }
    </style>
  </head>

  <body>
    <div class="container"></div>
    <script>
        /* =======================================
      Attributes
     ======================================= */
  var w = $(window).width() - 200;
  var h = 200;

  // Padding
  var textPadding = 10;
  var rightEdgePadding = 40;
  var leftViewButtonPadding = 5;
  var rightViewButtonPadding = 10;

  // Text Line Height
  var lineHeight = 8;

  // Label Value Formatter
  var valueFormatter = d3.format('.2s');

  // Element Widths
  var yAxisLabelWidth = 100;
  var viewButtonWidth = 75;

  // Start Position for Bars
  var startBars = viewButtonWidth + yAxisLabelWidth;

  // End Position for Y Axis Labels
  var endYAxisLabels = viewButtonWidth + yAxisLabelWidth - textPadding;

  // Color of Selected Group
  var selectedColor = '150,222,136';

  // Find Start Position for Bar Label
  function startBarLabelPosition(d) {
    return viewButtonWidth + yAxisLabelWidth + xScale(d) + textPadding;
  }

  /* =======================================
      Data
     ======================================= */
  var dataset = {
    data: [{
      value: 934,
      category: '10+ Page Views',
      color: '186, 38, 43'
    }, {
      value: 6000,
      category: '5-9 Page Views',
      color: '212, 80, 51'
    }, {
      value: 12000,
      category: '2-4 Page Views',
      color: '246, 142, 53'
    }, {
      value: 48000,
      category: '1 Page View',
      color: '255,190,55'
    }, {
      value: 64000,
      category: 'All',
      color: '35,80,116'
    }],
    // data: [934, 6000, 12000, 48000, 64000],
    // categories: ['10+ Page Views', '5-9 Page Views', '2-4 Page Views', '1 Page View', 'All'],
    // colors: ['186, 38, 43', '212,80,51', '246,142,53', '255,190,55', '35,80,116', '150,222,136'],
    selected: 0
  };

  /* =======================================
      Scales
     ======================================= */

  // Max Range for width of bars
  var maxRange = w - viewButtonWidth - yAxisLabelWidth - rightEdgePadding;
  var xScale = d3.scale.linear()
    .domain([0, d3.max(dataset.data, function(d) {
      return d.value;
    })])
    .range([10, maxRange]);

  var yScale = d3.scale.ordinal()
    .domain(d3.range(dataset.data.length))
    .rangeRoundBands([0, h], 0.2);

  /* =======================================
      SVG Element
     ======================================= */
  var svg = d3.select('.container')
    .append('svg')
    .attr('width', w)
    .attr('height', h);
    // .style('border', '1px solid black');

  // Create Chart
  createChart();

  /* =======================================
      Event Handlers
     ======================================= */

  // Mouse Events
  function createBarEvents() {
    svg.selectAll('.bar')
      .on('mouseover', function(d, i) {
        d3.select(this)
          .attr('fill', function(d) {
            var index = dataset.data.indexOf(d);
            return 'rgba(' + dataset.data[index].color + ', 0.4)';
          });
      })
      .on('mouseout', function(d, i) {
        d3.select(this)
          .attr('fill', function(d, i) {
            var index = dataset.data.indexOf(d);
            return 'rgb(' + dataset.data[index].color + ')';
          });
      });
  }

  function createViewButtonEvents() {
    svg.selectAll('.view-button-group')
      .on('mouseover', function(d, i) {
        d3.select(this).select('rect')
          .attr('fill', function(d) {
            return 'rgba(' + dataset.data[2].color + ', 0.4)';
          });
        d3.select(this).select('text')
          .attr('fill', 'black');
      })
      .on('mouseout', function(d, i) {
        d3.select(this).select('rect')
          .attr('fill', function(d) {
            return 'rgb(' + dataset.data[2].color + ')';
          });
        d3.select(this).select('text')
          .attr('fill', 'white');
      })
      .on('click', function(d, i) {
        event.preventDefault();
        console.log(d);
        // remove view button
        // insert new selected bar group
        // insert view button in previously selected bar group
      });
  }

  // On Window Resize
  window.onresize = function(event) {
    // Update Width
    w = $(window).width() - 200;

    // Update Max Range
    maxRange = w - viewButtonWidth - yAxisLabelWidth - rightEdgePadding;

    // Update xScale
    xScale = d3.scale.linear()
      .domain([0, d3.max(dataset.data, function(d) {
        return d.value;
      })])
      .range([10, maxRange]);

    // Resize SVG
    svg.attr('width', w);

    // Resize Bar Labels
    svg.selectAll(".bar-label")
      .data(dataset.data)
      .transition()
      .delay(function(d, i) {
        return i / dataset.data.length * 1000;
      })
      .duration(150)
      .attr("x", function(d, i) {
        return startBarLabelPosition(d.value);
      });

    // Resize Bars
    svg.selectAll('.bar')
      .data(dataset.data)
      .transition()
      .delay(function(d, i) {
        return i / dataset.data.length * 1000;
      })
      .duration(200)
      .ease('linear')
      .attr('width', function(d) {
        return xScale(d.value);
      });
  };

  /* =======================================
      Chart Generation Functions
     ======================================= */

  function createChart() {
    selectedBarGroup();
    createBarGroups();
    createBarEvents();
    createViewButtonEvents();
    selectedBarGroup();
  }

  function createBarGroups() {
    var barGroups = svg.selectAll('.bar-group')
      .data(dataset.data)
      .enter()
      .append("g")
      .classed("bar-group", true);

    createBar(barGroups);
    createYAxisLabel(barGroups);
    createBarLabel(barGroups);
    createViewButton(barGroups);
    removeViewButton(barGroups);
  }

  // Create Bar
  function createBar(groupSelector) {
    groupSelector.append('rect')
      .classed('bar', true)
      .attr('x', viewButtonWidth + yAxisLabelWidth)
      .attr('y', function(d, i) {
        return yScale(i);
      })
      .attr('width', function(d) {
        return xScale(d.value);
      })
      .attr('height', yScale.rangeBand())
      .attr('fill', function(d, i) {
        return 'rgb(' + d.color + ')';
      });
  }

  // Create yAxis Labels
  function createYAxisLabel(groupSelector) {
    groupSelector.append("text")
      .classed('xAxis-label', true)
      .text(function(d, i) {
        return d.category;
      })
      .attr("x", 90 + viewButtonWidth)
      .attr("y", function(d, i) {
        return yScale(i) + (lineHeight / 2) + (yScale.rangeBand() / 2);
      })
      .attr("font-family", "sans-serif")
      .attr("font-size", "12px")
      .attr("fill", "black")
      .style({
        "text-anchor": "end"
      });
  }

  // Create Bar Labels
  function createBarLabel(groupSelector) {
    groupSelector.append("text")
      .classed('bar-label', true)
      .text(function(d, i) {
        return valueFormatter(d.value);
      })
      .attr("x", function(d, i) {
        return startBarLabelPosition(d.value);
      })
      .attr("y", function(d, i) {
        return yScale(i) + (lineHeight / 2) + (yScale.rangeBand() / 2);
      })
      .attr("font-family", "sans-serif")
      .attr("font-size", "12px")
      .attr("font-weight", 600)
      .attr("fill", "black");
  }

  // View Buttons
  function createViewButton(groupSelector) {
    var viewButtonGroup = groupSelector.append("g")
      .classed("view-button-group", true)
      .style({
        'cursor': 'pointer'
      });

    // View Button Rectangle
    viewButtonGroup.append("rect")
      .classed('view-button', true)
      .attr("x", leftViewButtonPadding)
      .attr("y", function(d, i) {
        return yScale(i);
      })
      .attr("width", viewButtonWidth - rightViewButtonPadding)
      .attr("height", yScale.rangeBand())
      .attr("rx", 5)
      .attr("ry", 5)
      .attr("fill", function(d) {
        return 'rgb(' + dataset.data[2].color + ')';
      });

    // View Button Text
    viewButtonGroup.append("text")
      .classed('view-text', true)
      .text('View')
      .attr("x", (leftViewButtonPadding + (viewButtonWidth - rightViewButtonPadding)) / 2)
      .attr("y", function(d, i) {
        return yScale(i) + (lineHeight / 2) + (yScale.rangeBand() / 2);
      })
      .attr("font-family", "sans-serif")
      .attr("font-size", "12px")
      .attr("fill", "white")
      .attr("text-anchor", "middle");
  }

  // Remove Selected View Button
  function removeViewButton(groupSelector) {
    groupSelector.each(function(d, i) {
      if (i === dataset.selected) {
        d3.select(this).select('.view-button-group').remove();
      }
    })
  }

  // Selected Bar Group Rectangle
  function selectedBarGroup() {
    var selectedBarGroup = svg.selectAll('.selected-bar-group')
      .data([dataset.selected])
      .enter()
      .append("g")
      .classed("selected-bar-group", true)

    selectedBarGroup.append("rect")
      .classed('selected-bar-overlay', true)
      .attr("x", leftViewButtonPadding)
      .attr("y", function(d, i) {
        return yScale(d);
      })
      .attr("width", viewButtonWidth + yAxisLabelWidth - rightViewButtonPadding)
      .attr("height", yScale.rangeBand())
      .attr("rx", 5)
      .attr("ry", 5)
      .attr("fill", function(d) {
        return 'rgb(' + selectedColor + ')';
      });
  }
    </script>
  </body>
  <!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.chord path {
  fill-opacity: .67;
  stroke: #000;
  stroke-width: .5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

// From http://mkweb.bcgsc.ca/circos/guide/tables/
var matrix = [
  [11975,  5871, 8916, 2868],
  [ 1951, 10048, 2060, 6171],
  [ 8010, 16145, 8090, 8045],
  [ 1013,   990,  940, 6907]
];

var chord = d3.layout.chord()
    .padding(.05)
    .sortSubgroups(d3.descending)
    .matrix(matrix);

var width = 960,
    height = 500,
    innerRadius = Math.min(width, height) * .41,
    outerRadius = innerRadius * 1.1;

var fill = d3.scale.ordinal()
    .domain(d3.range(4))
    .range(["#00aeef", "#e1f4fd", "#000000", "#96999b", "#5d6263", "#e1d8ad", "#cf5c42", "#00447c", "#f4d5e3"]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

svg.append("g").selectAll("path")
    .data(chord.groups)
  .enter().append("path")
    .style("fill", function(d) { return fill(d.index); })
    .style("stroke", function(d) { return fill(d.index); })
    .attr("d", d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius))
    .on("mouseover", fade(.1))
    .on("mouseout", fade(1));

var ticks = svg.append("g").selectAll("g")
    .data(chord.groups)
  .enter().append("g").selectAll("g")
    .data(groupTicks)
  .enter().append("g")
    .attr("transform", function(d) {
      return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
          + "translate(" + outerRadius + ",0)";
    });

ticks.append("line")
    .attr("x1", 1)
    .attr("y1", 0)
    .attr("x2", 5)
    .attr("y2", 0)
    .style("stroke", "#000");

ticks.append("text")
    .attr("x", 8)
    .attr("dy", ".35em")
    .attr("transform", function(d) { return d.angle > Math.PI ? "rotate(180)translate(-16)" : null; })
    .style("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
    .text(function(d) { return d.label; });

svg.append("g")
    .attr("class", "chord")
  .selectAll("path")
    .data(chord.chords)
  .enter().append("path")
    .attr("d", d3.svg.chord().radius(innerRadius))
    .style("fill", function(d) { return fill(d.target.index); })
    .style("opacity", 1);

// Returns an array of tick angles and labels, given a group.
function groupTicks(d) {
  var k = (d.endAngle - d.startAngle) / d.value;
  return d3.range(0, d.value, 1000).map(function(v, i) {
    return {
      angle: v * k + d.startAngle,
      label: i % 5 ? null : v / 1000 + "k"
    };
  });
}

// Returns an event handler for fading a given chord group.
function fade(opacity) {
  return function(g, i) {
    svg.selectAll(".chord path")
        .filter(function(d) { return d.source.index != i && d.target.index != i; })
      .transition()
        .style("opacity", opacity);
  };
}

</script>
<!DOCTYPE html>
<html>
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <style>
  html, body{
    width: 100%;
    height: 100%;
    font-size: 1em;
  }
  .sl {
    display: inline-block;
    width: 10em;
    vertical-align: middle;
    stroke: black;
    stroke-width: 1;
  }
  .sl path{
    fill: none;
  }
  .sl circle{
    fill: red;
  }
  .large{
    margin: 0;
    font-size: 3em;
  }
  </style>
</head>
<body ng-app="app">
  <p>so this is a spark line <sl style="stroke: red; width: 2em">[10,40,20,50,80]</sl>. Pretty cool, right?</p>
  <p>here's another <sl r="1" style="stroke:blue; width: 2em">[10,20,30]</sl></p>
  <p>here's a longer example <sl r="1" style="stroke:blue; width:3em">[20,24,20,27,29,50,90]</sl></p>
  <p>an even longer example <sl r="1" style="stroke:green;">[20,24,20,500,29,50,90, 20, 10, 40]</sl></p>
  <p> lets look at a few in a row. </p>
  <p>
    <sl r="1" style="stroke:green">[20,24,20,500,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green">[20,24,30,400,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green">[20,24,25,300,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green">[20,24,21,200,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green">[20,24,23,100,29,50,90, 20, 10, 40]</sl>
  </p>
  <p> here's the same data but with consistent scales. </p>
  <p>
    <sl r="1" style="stroke:green" min="0" max="500">[20,24,20,500,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green" min="0" max="500">[20,24,30,400,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green" min="0" max="500">[20,24,25,300,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green" min="0" max="500">[20,24,21,200,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1" style="stroke:green" min="0" max="500">[20,24,23,100,29,50,90, 20, 10, 40]</sl>
  </p>
  <p class="large">
    "But what if my font is big?"<sl style="stroke-width:2px; width:2em">[1, 2, 3, 5, 6, 9, 20, 30, 40, 20, 10]</sl> you ask?
  </p>
</body>
<script>
var app = angular.module('app', []);

app.directive('sl', function(){
  function link(scope, el, attr){
    el = d3.select(el[0]);
    var svg = el;
    var data = JSON.parse(el.text());
    var min = attr.min !== undefined ? +attr.min : d3.min(data);
    var max = attr.max !== undefined ? +attr.max : d3.max(data);
    el.text(''); // remove the original data text
    var r = attr.r || 0;
    var m = r;
    var w = svg.node().clientWidth;
    var h = +getComputedStyle(el.node())['font-size'].replace('px','');
    svg.attr({width: w, height: h});
    var x = d3.scale.linear().domain([0, data.length - 1]).range([m, w - m]);
    var y = d3.scale.linear().domain([min, max]).range([h - m, m]);
    var lines = svg.append('path').data(data)
      .attr('d', 'M' + data.map(function(d, i){ return [x(i),y(d)] }).join('L'));
    var circles = svg.selectAll('circle').data(data).enter().append('circle')
      .attr('r', r)
      .attr('cx', function(d, i){ return x(i) })
      .attr('cy', function(d){ return y(d) });
  }
  return {
      link: link
    , restrict: 'E'
    , replace: true
    , template: '<svg ng-transclude class="sl"></svg>'
    , transclude: true
  };
});
</script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

circle,
path {
  cursor: pointer;
}

circle {
  fill: none;
  pointer-events: all;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 350, right: 480, bottom: 350, left: 480},
    radius = Math.min(margin.top, margin.right, margin.bottom, margin.left) - 10;

var hue = d3.scale.category10();

var luminance = d3.scale.sqrt()
    .domain([0, 1e6])
    .clamp(true)
    .range([90, 20]);

var svg = d3.select("body").append("svg")
    .attr("width", margin.left + margin.right)
    .attr("height", margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var partition = d3.layout.partition()
    .sort(function(a, b) { return d3.ascending(a.name, b.name); })
    .size([2 * Math.PI, radius]);

var arc = d3.svg.arc()
    .startAngle(function(d) { return d.x; })
    .endAngle(function(d) { return d.x + d.dx - .01 / (d.depth + .5); })
    .innerRadius(function(d) { return radius / 3 * d.depth; })
    .outerRadius(function(d) { return radius / 3 * (d.depth + 1) - 1; });

d3.json("/mbostock/raw/4063550/flare.json", function(error, root) {

  // Compute the initial layout on the entire tree to sum sizes.
  // Also compute the full name and fill color for each node,
  // and stash the children so they can be restored as we descend.
  partition
      .value(function(d) { return d.size; })
      .nodes(root)
      .forEach(function(d) {
        d._children = d.children;
        d.sum = d.value;
        d.key = key(d);
        d.fill = fill(d);
      });

  // Now redefine the value function to use the previously-computed sum.
  partition
      .children(function(d, depth) { return depth < 2 ? d._children : null; })
      .value(function(d) { return d.sum; });

  var center = svg.append("circle")
      .attr("r", radius / 3)
      .on("click", zoomOut);

  center.append("title")
      .text("zoom out");

  var path = svg.selectAll("path")
      .data(partition.nodes(root).slice(1))
    .enter().append("path")
      .attr("d", arc)
      .style("fill", function(d) { return d.fill; })
      .each(function(d) { this._current = updateArc(d); })
      .on("click", zoomIn);

  function zoomIn(p) {
    if (p.depth > 1) p = p.parent;
    if (!p.children) return;
    zoom(p, p);
  }

  function zoomOut(p) {
    if (!p.parent) return;
    zoom(p.parent, p);
  }

  // Zoom to the specified new root.
  function zoom(root, p) {
    if (document.documentElement.__transition__) return;

    // Rescale outside angles to match the new layout.
    var enterArc,
        exitArc,
        outsideAngle = d3.scale.linear().domain([0, 2 * Math.PI]);

    function insideArc(d) {
      return p.key > d.key
          ? {depth: d.depth - 1, x: 0, dx: 0} : p.key < d.key
          ? {depth: d.depth - 1, x: 2 * Math.PI, dx: 0}
          : {depth: 0, x: 0, dx: 2 * Math.PI};
    }

    function outsideArc(d) {
      return {depth: d.depth + 1, x: outsideAngle(d.x), dx: outsideAngle(d.x + d.dx) - outsideAngle(d.x)};
    }

    center.datum(root);

    // When zooming in, arcs enter from the outside and exit to the inside.
    // Entering outside arcs start from the old layout.
    if (root === p) enterArc = outsideArc, exitArc = insideArc, outsideAngle.range([p.x, p.x + p.dx]);

    path = path.data(partition.nodes(root).slice(1), function(d) { return d.key; });

    // When zooming out, arcs enter from the inside and exit to the outside.
    // Exiting outside arcs transition to the new layout.
    if (root !== p) enterArc = insideArc, exitArc = outsideArc, outsideAngle.range([p.x, p.x + p.dx]);

    d3.transition().duration(d3.event.altKey ? 7500 : 750).each(function() {
      path.exit().transition()
          .style("fill-opacity", function(d) { return d.depth === 1 + (root === p) ? 1 : 0; })
          .attrTween("d", function(d) { return arcTween.call(this, exitArc(d)); })
          .remove();

      path.enter().append("path")
          .style("fill-opacity", function(d) { return d.depth === 2 - (root === p) ? 1 : 0; })
          .style("fill", function(d) { return d.fill; })
          .on("click", zoomIn)
          .each(function(d) { this._current = enterArc(d); });

      path.transition()
          .style("fill-opacity", 1)
          .attrTween("d", function(d) { return arcTween.call(this, updateArc(d)); });
    });
  }
});

function key(d) {
  var k = [], p = d;
  while (p.depth) k.push(p.name), p = p.parent;
  return k.reverse().join(".");
}

function fill(d) {
  var p = d;
  while (p.depth > 1) p = p.parent;
  var c = d3.lab(hue(p.name));
  c.l = luminance(d.sum);
  return c;
}

function arcTween(b) {
  var i = d3.interpolate(this._current, b);
  this._current = i(0);
  return function(t) {
    return arc(i(t));
  };
}

function updateArc(d) {
  return {depth: d.depth, x: d.x, dx: d.dx};
}

d3.select(self.frameElement).style("height", margin.top + margin.bottom + "px");

</script>
<!DOCTYPE html>
<html>
<head>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <style>
  html, body{
    width: 100%;
    height: 100%;
    font-size: 1.2em;
    font-family: helvetica;
  }
  sl {
    display: inline-block;
    width: 10em;
    vertical-align: middle;
    stroke: black;
    stroke-width: 1;
  }
  sl path{
    fill: none;
  }
  sl circle{
    fill: red;
  }
  .large{
    margin: 0;
    font-size: 3em;
  }
  </style>
</head>
<body ng-app="app">
  <p>so this is a spark line <sl style="width:2em">[10,20,30,40,20,50,80]</sl>. Pretty cool, right?</p>
  <p>here's another <sl style="width:2em" r="1">[10,20,30]</sl></p>
  <p>here's a longer example <sl r="1" style="width:5em">[20,24,20,27,29,50,90]</sl></p>
  <p>an even longer example <sl r="1">[20,24,20,500,29,50,90, 20, 10, 40]</sl></p>
  <p> lets look at a few in a row.</p>
  <p>
    <sl r="1">[20,24,20,500,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1">[20,24,30,400,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1">[20,24,25,300,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1">[20,24,21,200,29,50,90, 20, 10, 40]</sl><br>
    <sl r="1">[20,24,23,100,29,50,90, 20, 10, 40]</sl>
  </p>
</body>
<script>
var app = angular.module('app', []);

app.directive('sl', function(){
  function link(scope, el, attr){
    el = d3.select(el[0]);
    var data = JSON.parse(el.text());
    el.text(''); // remove the data text
    var svg = el.append('svg');
    var min = attr.min !== undefined ? +attr.min : d3.min(data);
    var max = attr.max !== undefined ? +attr.max : d3.max(data);
    var r = attr.r || 0;
    var m = r;
    var w = el.node().clientWidth;
    var h = +getComputedStyle(el.node())['font-size'].replace('px','');
    svg.attr({width: w, height: h});
    var x = d3.scale.linear().domain([0, data.length - 1]).range([m, w - m]);
    var y = d3.scale.linear().domain([min, max]).range([h - m, m]);
    var lines = svg.append('path').data(data)
      .attr('d', 'M' + data.map(function(d, i){ return [x(i),y(d)] }).join('L'));
    var circles = svg.selectAll('circle').data(data).enter().append('circle')
      .attr('r', r)
      .attr('cx', function(d, i){ return x(i) })
      .attr('cy', function(d){ return y(d) });
  }
  return { link: link, restrict: 'E' };
});
</script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
<style>

.node {
  font: 300 10px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  fill: #bbb;
}

.node:hover {
  fill: #000;
}

.link {
  stroke: #00aeef;
  stroke-opacity: .4;
  fill: none;
  pointer-events: none;
}

.node:hover,
.node--source,
.node--target {
  font-weight: 700;
}

.node--source {
  fill: #e1d8ad;
}

.node--target {
  fill: #cf5c42;
}

.link--source,
.link--target {
  stroke-opacity: 1;
  stroke-width: 2px;
}

.link--source {
  stroke: #cf5c42;
}

.link--target {
  stroke: #e1d8ad;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var diameter = 960,
    radius = diameter / 2,
    innerRadius = radius - 120;

var cluster = d3.layout.cluster()
    .size([360, innerRadius])
    .sort(null)
    .value(function(d) { return d.size; });

var bundle = d3.layout.bundle();

var line = d3.svg.line.radial()
    .interpolate("bundle")
    .tension(.85)
    .radius(function(d) { return d.y; })
    .angle(function(d) { return d.x / 180 * Math.PI; });

var svg = d3.select("body").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
  .append("g")
    .attr("transform", "translate(" + radius + "," + radius + ")");

var link = svg.append("g").selectAll(".link"),
    node = svg.append("g").selectAll(".node");

d3.json("readme-flare-imports.json", function(error, classes) {
  var nodes = cluster.nodes(packageHierarchy(classes)),
      links = packageImports(nodes);

  link = link
      .data(bundle(links))
    .enter().append("path")
      .each(function(d) { d.source = d[0], d.target = d[d.length - 1]; })
      .attr("class", "link")
      .attr("d", line);

  node = node
      .data(nodes.filter(function(n) { return !n.children; }))
    .enter().append("text")
      .attr("class", "node")
      .attr("dx", function(d) { return d.x < 180 ? 8 : -8; })
      .attr("dy", ".31em")
      .attr("transform", function(d) { return "rotate(" + (d.x - 90) + ")translate(" + d.y + ")" + (d.x < 180 ? "" : "rotate(180)"); })
      .style("text-anchor", function(d) { return d.x < 180 ? "start" : "end"; })
      .text(function(d) { return d.key; })
      .on("mouseover", mouseovered)
      .on("mouseout", mouseouted);
});

function mouseovered(d) {
  node
      .each(function(n) { n.target = n.source = false; });

  link
      .classed("link--target", function(l) { if (l.target === d) return l.source.source = true; })
      .classed("link--source", function(l) { if (l.source === d) return l.target.target = true; })
    .filter(function(l) { return l.target === d || l.source === d; })
      .each(function() { this.parentNode.appendChild(this); });

  node
      .classed("node--target", function(n) { return n.target; })
      .classed("node--source", function(n) { return n.source; });
}

function mouseouted(d) {
  link
      .classed("link--target", false)
      .classed("link--source", false);

  node
      .classed("node--target", false)
      .classed("node--source", false);
}

d3.select(self.frameElement).style("height", diameter + "px");

// Lazily construct the package hierarchy from class names.
function packageHierarchy(classes) {
  var map = {};

  function find(name, data) {
    var node = map[name], i;
    if (!node) {
      node = map[name] = data || {name: name, children: []};
      if (name.length) {
        node.parent = find(name.substring(0, i = name.lastIndexOf(".")));
        node.parent.children.push(node);
        node.key = name.substring(i + 1);
      }
    }
    return node;
  }

  classes.forEach(function(d) {
    find(d.name, d);
  });

  return map[""];
}

// Return a list of imports for the given array of nodes.
function packageImports(nodes) {
  var map = {},
      imports = [];

  // Compute a map from name to node.
  nodes.forEach(function(d) {
    map[d.name] = d;
  });

  // For each import, construct a link from the source to target node.
  nodes.forEach(function(d) {
    if (d.imports) d.imports.forEach(function(i) {
      imports.push({source: map[d.name], target: map[i]});
    });
  });

  return imports;
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
<style>

body {
  font: 300 11px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: auto;
  position: relative;
  width: 960px;
}

form {
  position: absolute;
  right: 10px;
  top: 10px;
}

.node {
  border: solid 1px white;
  font: 300 10px "Open Sans", sans-serif;
  line-height: 12px;
  overflow: hidden;
  position: absolute;
  text-indent: 2px;
}

</style>
<form>
  <label><input type="radio" name="mode" value="size" checked> Size</label>
  <label><input type="radio" name="mode" value="count"> Count</label>
</form>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 40, right: 10, bottom: 10, left: 10},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var color = d3.scale.category20c();

var treemap = d3.layout.treemap()
    .size([width, height])
    .sticky(true)
    .value(function(d) { return d.size; });

var div = d3.select("body").append("div")
    .style("position", "relative")
    .style("width", (width + margin.left + margin.right) + "px")
    .style("height", (height + margin.top + margin.bottom) + "px")
    .style("left", margin.left + "px")
    .style("top", margin.top + "px");

d3.json("flare.json", function(error, root) {
  var node = div.datum(root).selectAll(".node")
      .data(treemap.nodes)
    .enter().append("div")
      .attr("class", "node")
      .call(position)
      .style("background", function(d) { return d.children ? color(d.name) : null; })
      .text(function(d) { return d.children ? null : d.name; });

  d3.selectAll("input").on("change", function change() {
    var value = this.value === "count"
        ? function() { return 1; }
        : function(d) { return d.size; };

    node
        .data(treemap.value(value).nodes)
      .transition()
        .duration(1500)
        .call(position);
  });
});

function position() {
  this.style("left", function(d) { return d.x + "px"; })
      .style("top", function(d) { return d.y + "px"; })
      .style("width", function(d) { return Math.max(0, d.dx - 1) + "px"; })
      .style("height", function(d) { return Math.max(0, d.dy - 1) + "px"; });
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
<style>

.node {
  cursor: pointer;
}

.node:hover {
  stroke: #000;
  stroke-width: 1.5px;
}

.node--root {
  stroke: #777;
  stroke-width: 2px;
}

.node--leaf {
  fill: white;
}

.label {
  font: 11px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  text-anchor: middle;
  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff, 0 -1px 0 #fff;
}

.label,
.node--root,
.node--leaf {
  pointer-events: none;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = 10,
    outerDiameter = 960,
    innerDiameter = outerDiameter - margin - margin;

var x = d3.scale.linear()
    .range([0, innerDiameter]);

var y = d3.scale.linear()
    .range([0, innerDiameter]);

var color = d3.scale.linear()
    .domain([-1, 5])
    .range(["#e1f4fd", "#00aeef"])
    .interpolate(d3.interpolateHcl);

var pack = d3.layout.pack()
    .padding(2)
    .size([innerDiameter, innerDiameter])
    .value(function(d) { return d.size; })

var svg = d3.select("body").append("svg")
    .attr("width", outerDiameter)
    .attr("height", outerDiameter)
  .append("g")
    .attr("transform", "translate(" + margin + "," + margin + ")");

d3.json("flare.json", function(error, root) {
  var focus = root,
      nodes = pack.nodes(root);

  svg.append("g").selectAll("circle")
      .data(nodes)
    .enter().append("circle")
      .attr("class", function(d) { return d.parent ? d.children ? "node" : "node node--leaf" : "node node--root"; })
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return d.children ? color(d.depth) : null; })
      .on("click", function(d) { return zoom(focus == d ? root : d); });

  svg.append("g").selectAll("text")
      .data(nodes)
    .enter().append("text")
      .attr("class", "label")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
      .style("fill-opacity", function(d) { return d.parent === root ? 1 : 0; })
      .style("display", function(d) { return d.parent === root ? null : "none"; })
      .text(function(d) { return d.name; });

  d3.select(window)
      .on("click", function() { zoom(root); });

  function zoom(d, i) {
    var focus0 = focus;
    focus = d;

    var k = innerDiameter / d.r / 2;
    x.domain([d.x - d.r, d.x + d.r]);
    y.domain([d.y - d.r, d.y + d.r]);
    d3.event.stopPropagation();

    var transition = d3.selectAll("text,circle").transition()
        .duration(d3.event.altKey ? 7500 : 750)
        .attr("transform", function(d) { return "translate(" + x(d.x) + "," + y(d.y) + ")"; });

    transition.filter("circle")
        .attr("r", function(d) { return k * d.r; });

    transition.filter("text")
      .filter(function(d) { return d.parent === focus || d.parent === focus0; })
        .style("fill-opacity", function(d) { return d.parent === focus ? 1 : 0; })
        .each("start", function(d) { if (d.parent === focus) this.style.display = "inline"; })
        .each("end", function(d) { if (d.parent !== focus) this.style.display = "none"; });
  }
});

d3.select(self.frameElement).style("height", outerDiameter + "px");

</script><!DOCTYPE html>
<meta charset="utf-8">
<link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300' rel='stylesheet' type='text/css'>

<style>

body {
  font: 300 10px "Open Sans", Arial, sans-serif;
  font-color: #96999b;
}

.axis path, .axis line {
  fill: none;
  stroke: #96999b;
  stroke-width: 1px;
  shape-rendering: crispEdges;
}

.tick {
  fill: #96999b;
}

button {
  position: absolute;
  right: 50px;
  top: 10px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>


<div class="chart">
</div>

<script>

chart("sep2013.csv", "globalpulse");

var datearray = [];
var colorrange = [];


function chart(csvpath, color) {

if (color == "globalpulse") {
  colorrange = ["#00aeef", "#e1f4fd", "#96999b", "#e1d8ad", "#cf5c42", "#00447c", "#f4d5e3"];
}
else if (color == "blue") {
  colorrange = ["#045A8D", "#2B8CBE", "#74A9CF", "#A6BDDB", "#D0D1E6", "#F1EEF6"];
}
else if (color == "pink") {
  colorrange = ["#980043", "#DD1C77", "#DF65B0", "#C994C7", "#D4B9DA", "#F1EEF6"];
}
else if (color == "orange") {
  colorrange = ["#B30000", "#E34A33", "#FC8D59", "#FDBB84", "#FDD49E", "#FEF0D9"];
}
strokecolor = colorrange[0];

var format = d3.time.format("%m/%d/%y");

var margin = {top: 20, right: 60, bottom: 30, left: 30};
var width = document.body.clientWidth - margin.left - margin.right;
var height = 600 - margin.top - margin.bottom;

var tooltip = d3.select("body")
    .append("div")
    .attr("class", "remove")
    .style("position", "absolute")
    .style("z-index", "20")
    .style("visibility", "hidden")
    .style("top", "30px")
    .style("left", "30px");

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height-10, 0]);

var z = d3.scale.ordinal()
    .range(colorrange);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(d3.time.days);

var yAxis = d3.svg.axis()
    .scale(y);

var yAxisr = d3.svg.axis()
    .scale(y);

var stack = d3.layout.stack()
    .offset("silhouette")
    .values(function(d) { return d.values; })
    .x(function(d) { return d.date; })
    .y(function(d) { return d.value; });

var nest = d3.nest()
    .key(function(d) { return d.key; });

var area = d3.svg.area()
    .interpolate("cardinal")
    .x(function(d) { return x(d.date); })
    .y0(function(d) { return y(d.y0); })
    .y1(function(d) { return y(d.y0 + d.y); });

var svg = d3.select(".chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var graph = d3.csv(csvpath, function(data) {
  data.forEach(function(d) {
    d.date = format.parse(d.date);
    d.value = +d.value;
  });

  var layers = stack(nest.entries(data));

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);

  svg.selectAll(".layer")
      .data(layers)
    .enter().append("path")
      .attr("class", "layer")
      .attr("d", function(d) { return area(d.values); })
      .style("fill", function(d, i) { return z(i); });


  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .attr("transform", "translate(" + width + ", 0)")
      .call(yAxis.orient("right"));

//  svg.append("g")
//      .attr("class", "y axis")
//      .call(yAxis.orient("left"));

  svg.selectAll(".layer")
    .attr("opacity", 1)
    .on("mouseover", function(d, i) {
      svg.selectAll(".layer").transition()
      .duration(250)
      .attr("opacity", function(d, j) {
        return j != i ? 0.6 : 1;
    })})

    .on("mousemove", function(d, i) {
      mousex = d3.mouse(this);
      mousex = mousex[0];
      var invertedx = x.invert(mousex);
      invertedx = invertedx.getMonth() + invertedx.getDate();
      var selected = (d.values);
      for (var k = 0; k < selected.length; k++) {
        datearray[k] = selected[k].date
        datearray[k] = datearray[k].getMonth() + datearray[k].getDate();
      }

      mousedate = datearray.indexOf(invertedx);
      pro = d.values[mousedate].value;

      d3.select(this)
      .classed("hover", true)
      .attr("stroke", strokecolor)
      .attr("stroke-width", ".5px"), 
      tooltip.html( d.key + ": " + pro )
      	.style("visibility", "visible")
      	.style("color", "#FFF")
      	.style("font-size", "40px")
      	.style("background", function(d, i) { return z(i); });
      
    })
    .on("mouseout", function(d, i) {
     svg.selectAll(".layer")
      .transition()
      .duration(250)
      .attr("opacity", "1");
      d3.select(this)
      .classed("hover", false)
      .attr("stroke-width", "0px"), tooltip.html( "<p>" + d.key + "<br>" + pro + "</p>" ).style("visibility", "hidden");
  })
    
  var vertical = d3.select(".chart")
        .append("div")
        .attr("class", "remove")
        .style("position", "absolute")
        .style("z-index", "19")
        .style("width", "3px")
        .style("height", "600px")
        .style("top", "10px")
        .style("bottom", "30px")
        .style("left", "0px")
        .style("background", "#00aeef");

  d3.select(".chart")
      .on("mousemove", function(){  
         mousex = d3.mouse(this);
         mousex = mousex[0] + 5;
         vertical.style("left", mousex + "px" )})
      .on("mouseover", function(){  
         mousex = d3.mouse(this);
         mousex = mousex[0] + 5;
         vertical.style("left", mousex + "px")});
});
}
</script><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.area.above {
  fill: rgb(252,141,89);
}

.area.below {
  fill: rgb(145,207,96);
}

.line {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.area()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d["New York"]); });

var area = d3.svg.area()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y1(function(d) { return y(d["New York"]); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("data.tsv", function(error, data) {
  data.forEach(function(d) {
    d.date = parseDate(d.date);
    d["New York"]= +d["New York"];
    d["San Francisco"] = +d["San Francisco"];
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(data, function(d) { return Math.min(d["New York"], d["San Francisco"]); }),
    d3.max(data, function(d) { return Math.max(d["New York"], d["San Francisco"]); })
  ]);

  svg.datum(data);

  svg.append("clipPath")
      .attr("id", "clip-below")
    .append("path")
      .attr("d", area.y0(height));

  svg.append("clipPath")
      .attr("id", "clip-above")
    .append("path")
      .attr("d", area.y0(0));

  svg.append("path")
      .attr("class", "area above")
      .attr("clip-path", "url(#clip-above)")
      .attr("d", area.y0(function(d) { return y(d["San Francisco"]); }));

  svg.append("path")
      .attr("class", "area below")
      .attr("clip-path", "url(#clip-below)")
      .attr("d", area);

  svg.append("path")
      .attr("class", "line")
      .attr("d", line);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (ºF)");
});

</script><!DOCTYPE html>
<meta charset="utf-8">
<link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
<style type="text/css">

table {
  border-collapse: collapse;
  font: 300 10px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  width: 720px;
}

th {
  text-align: right;
  padding-right: 6px;
  min-width: 43px;
}

thead td {
  cursor: s-resize;
}

tbody tr:first-child td {
  padding-top: 2px;
}

tbody td {
  padding: 0;
  border-left: solid 1px #000;
}

tbody rect {
  fill: #00aeef;
}

tbody tr:hover rect {
  fill: #00447c;
}

</style>

<table>
  <thead>
    <tr>
      <th>State</th>
      <td><5</td>
      <td>5-13</td>
      <td>14-17</td>
      <td>18-24</td>
      <td>≥16</td>
      <td>≥18</td>
      <td>15-44</td>
      <td>45-64</td>
      <td>≥65</td>
      <td>≥85</td>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>

<script src="http://d3js.org/d3.v2.min.js"></script>
<script>

d3.csv("readme-states-age.csv", function(states) {
  var ages = d3.keys(states[0]).filter(function(key) {
    return key != "State" && key != "Total";
  });

  d3.selectAll("thead td").data(ages).on("click", function(k) {
    tr.sort(function(a, b) { return (b[k] / b.Total) - (a[k] / a.Total); });
  });

  var tr = d3.select("tbody").selectAll("tr")
      .data(states)
    .enter().append("tr");

  tr.append("th")
      .text(function(d) { return d.State; });

  tr.selectAll("td")
      .data(function(d) { return ages.map(function(k) { return d[k] / d.Total; }); })
    .enter().append("td").append("svg")
      .attr("width", 71)
      .attr("height", 12)
    .append("rect")
      .attr("height", 12)
      .attr("width", function(d) { return d * 71; });
});

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<link href='http://fonts.googleapis.com/css?family=Oswald:400,700,300' rel='stylesheet' type='text/css'>
<style>

.node {
  stroke: none;
  stroke-width: 1px;
  fill: #00aeef;
}

.link {
  stroke: #5d6263;
  stroke-opacity: .5;
}

.label {
  fill: #00447c;
  font-family: Oswald;
  cursor: default;
  stroke: #ffffff;
  stroke-width: 0.7;
  font-weight: 700;
  text-anchor: middle;
  alignment-baseline: middle;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var width = 600,
height = 600;

// var color = d3.scale.category20();

var force = d3.layout.force()
.charge(-120)
.linkDistance(350)
.size([width, height]);

var svg = d3.select("body").append("svg")
.attr("width", width)
.attr("height", height);

d3.json("data.json", function(error, graph) {
  force
  .nodes(graph.nodes)
  .links(graph.links)
  .start();

  var link = svg.selectAll(".link")
  .data(graph.links)
  .enter().append("line")
  .attr("class", "link")
  .style("stroke-width", function(d) { return Math.sqrt(d.weight); });

  // Create the groups under svg
  var gnodes = svg.selectAll('g.gnode')
  .data(graph.nodes)
  .enter()
  .append('g')
  .classed('gnode', true)
  .on("mouseover", mouseover)
  .on("mouseout", mouseout)
  .call(force.drag);

  var node = gnodes.append("circle")
  .attr("class", "node")
  .attr("r", 15)
  //.style("fill", function(d) { return color(d.group); })
  ;

  // Append the labels to each group
  var labels = gnodes.append("text")
  .text(function(d) { return d.id; })
  .attr("class", "label");

  // node.append("title")
  // .text(function(d) { return d.id; });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
    .attr("y1", function(d) { return d.source.y; })
    .attr("x2", function(d) { return d.target.x; })
    .attr("y2", function(d) { return d.target.y; });

    // Translate the groups
    gnodes.attr("transform", function(d) {
      return 'translate(' + [d.x, d.y] + ')';
    });

    gnodes.attr("cx", function(d) { return d.x; })
    .attr("cy", function(d) { return d.y; });
  });


});

function mouseover() {
  d3.select(this).select("circle").transition()
  .duration(350)
  .attr("r", 20);
}

function mouseout() {
  d3.select(this).select("circle").transition()
  .duration(350)
  .attr("r" , 15);
}

</script><!DOCTYPE html>
<meta charset="utf-8">
<style>

.node {
  cursor: pointer;
}

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node text {
  font: 10px sans-serif;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 120, bottom: 20, left: 120},
    width = 960 - margin.right - margin.left,
    height = 800 - margin.top - margin.bottom;
    
var i = 0,
    duration = 750,
    root;

var tree = d3.layout.tree()
    .size([height, width]);

var diagonal = d3.svg.diagonal()
    .projection(function(d) { return [d.y, d.x]; });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.right + margin.left)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.json("/d/4063550/flare.json", function(error, flare) {
  root = flare;
  root.x0 = height / 2;
  root.y0 = 0;

  function collapse(d) {
    if (d.children) {
      d._children = d.children;
      d._children.forEach(collapse);
      d.children = null;
    }
  }

  root.children.forEach(collapse);
  update(root);
});

d3.select(self.frameElement).style("height", "800px");

function update(source) {

  // Compute the new tree layout.
  var nodes = tree.nodes(root).reverse(),
      links = tree.links(nodes);

  // Normalize for fixed-depth.
  nodes.forEach(function(d) { d.y = d.depth * 180; });

  // Update the nodes…
  var node = svg.selectAll("g.node")
      .data(nodes, function(d) { return d.id || (d.id = ++i); });

  // Enter any new nodes at the parent's previous position.
  var nodeEnter = node.enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + source.y0 + "," + source.x0 + ")"; })
      .on("click", click);

  nodeEnter.append("circle")
      .attr("r", 1e-6)
      .style("fill", function(d) { return d._children ? "lightsteelblue" : "#fff"; });

  nodeEnter.append("text")
      .attr("x", function(d) { return d.children || d._children ? -10 : 10; })
      .attr("dy", ".35em")
      .attr("text-anchor", function(d) { return d.children || d._children ? "end" : "start"; })
      .text(function(d) { return d.name; })
      .style("fill-opacity", 1e-6);

  // Transition nodes to their new position.
  var nodeUpdate = node.transition()
      .duration(duration)
      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; });

  nodeUpdate.select("circle")
      .attr("r", 4.5)
      .style("fill", function(d) { return d._children ? "lightsteelblue" : "#fff"; });

  nodeUpdate.select("text")
      .style("fill-opacity", 1);

  // Transition exiting nodes to the parent's new position.
  var nodeExit = node.exit().transition()
      .duration(duration)
      .attr("transform", function(d) { return "translate(" + source.y + "," + source.x + ")"; })
      .remove();

  nodeExit.select("circle")
      .attr("r", 1e-6);

  nodeExit.select("text")
      .style("fill-opacity", 1e-6);

  // Update the links…
  var link = svg.selectAll("path.link")
      .data(links, function(d) { return d.target.id; });

  // Enter any new links at the parent's previous position.
  link.enter().insert("path", "g")
      .attr("class", "link")
      .attr("d", function(d) {
        var o = {x: source.x0, y: source.y0};
        return diagonal({source: o, target: o});
      });

  // Transition links to their new position.
  link.transition()
      .duration(duration)
      .attr("d", diagonal);

  // Transition exiting nodes to the parent's new position.
  link.exit().transition()
      .duration(duration)
      .attr("d", function(d) {
        var o = {x: source.x, y: source.y};
        return diagonal({source: o, target: o});
      })
      .remove();

  // Stash the old positions for transition.
  nodes.forEach(function(d) {
    d.x0 = d.x;
    d.y0 = d.y;
  });
}

// Toggle children on click.
function click(d) {
  if (d.children) {
    d._children = d.children;
    d.children = null;
  } else {
    d.children = d._children;
    d._children = null;
  }
  update(d);
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500;

var sampler = poissonDiscSampler(width, height, 30),
    samples = [],
    sample;

while (sample = sampler()) samples.push(sample);

var voronoi = d3.geom.voronoi()
    .clipExtent([[-1, -1], [width + 1, height + 1]]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.selectAll("path")
    .data(voronoi(samples))
  .enter().append("path")
    .attr("d", function(d) { return "M" + d.join("L") + "Z"; })
    .style("fill", function(d) { return color(d.point); })
    .style("stroke", function(d) { return color(d.point); });

function color(d) {
  var dx = d[0] - width / 2,
      dy = d[1] - height / 2;
  return d3.lab(100 - (dx * dx + dy * dy) / 5000, dx / 10, dy / 10);
}

// Based on https://www.jasondavies.com/poisson-disc/
function poissonDiscSampler(width, height, radius) {
  var k = 30, // maximum number of samples before rejection
      radius2 = radius * radius,
      R = 3 * radius2,
      cellSize = radius * Math.SQRT1_2,
      gridWidth = Math.ceil(width / cellSize),
      gridHeight = Math.ceil(height / cellSize),
      grid = new Array(gridWidth * gridHeight),
      queue = [],
      queueSize = 0,
      sampleSize = 0;

  return function() {
    if (!sampleSize) return sample(Math.random() * width, Math.random() * height);

    // Pick a random existing sample and remove it from the queue.
    while (queueSize) {
      var i = Math.random() * queueSize | 0,
          s = queue[i];

      // Make a new candidate between [radius, 2 * radius] from the existing sample.
      for (var j = 0; j < k; ++j) {
        var a = 2 * Math.PI * Math.random(),
            r = Math.sqrt(Math.random() * R + radius2),
            x = s[0] + r * Math.cos(a),
            y = s[1] + r * Math.sin(a);

        // Reject candidates that are outside the allowed extent,
        // or closer than 2 * radius to any existing sample.
        if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y);
      }

      queue[i] = queue[--queueSize];
      queue.length = queueSize;
    }
  };

  function far(x, y) {
    var i = x / cellSize | 0,
        j = y / cellSize | 0,
        i0 = Math.max(i - 2, 0),
        j0 = Math.max(j - 2, 0),
        i1 = Math.min(i + 3, gridWidth),
        j1 = Math.min(j + 3, gridHeight);

    for (j = j0; j < j1; ++j) {
      var o = j * gridWidth;
      for (i = i0; i < i1; ++i) {
        if (s = grid[o + i]) {
          var s,
              dx = s[0] - x,
              dy = s[1] - y;
          if (dx * dx + dy * dy < radius2) return false;
        }
      }
    }

    return true;
  }

  function sample(x, y) {
    var s = [x, y];
    queue.push(s);
    grid[gridWidth * (y / cellSize | 0) + (x / cellSize | 0)] = s;
    ++sampleSize;
    ++queueSize;
    return s;
  }
}

</script>
<!DOCTYPE HTML>
<meta charset="utf-8">
<html>
<head>

<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:400italic,600italic,700italic,200,300,400,600,700,900">
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

body, h1, h2, h3, p {
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 1em;
  color: #333;
  font-weight: 400;
}

#content {
  margin: 5px;
  padding: 20px;
  width: 805px;
  border: 1px solid #ccc;
}

#map {
  margin: 10px 0px 0px 0px;
  padding: 0px;
}

h1, h2 {
  line-height: 1em;
  font-size: 1.75em;
  font-weight: 900;
  color: #000;
}

h2.year, h2.count {
  margin: 5px 0px 0px 0px;
  font-size: 1.3em;
  font-weight: 700;
}

p {
  margin: 10px 0px 0px 0px;
}

input {
  display: block;
  width: 200px;
  margin: 10px 0px 0px 0px;
}

.states {
  fill: #f5eede;
  stroke: #fff;
  stroke-width: 2;
  stroke-linejoin: round;
}

.openings {
  fill: #f5eede;
  stroke: #8D0600;
  stroke-width: 2;
}

.openings:hover {
  fill: #8D0600;
}

.locations{
  fill: #f5eede;
  stroke: #C0392B;
  stroke-width: 1;
  opacity: 0.7;
}

.tooltip {
  position: absolute;
  padding: 7px;
  font-size: 0.9em;
  pointer-events: none;
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;

  -moz-box-shadow:    3px 3px 10px 0px rgba(0, 0, 0, 0.25);
  -webkit-box-shadow: 3px 3px 10px 0px rgba(0, 0, 0, 0.25);
  box-shadow:         3px 3px 10px 0px rgba(0, 0, 0, 0.25);
}

.tooltip p {
  margin: 0;
  padding: 0;
}

</style>
</head>

<body>
<div id="content">
	<h1>Walmart Store Openings, 1962-2013</h1>
	<h2 class="year"></h2>
	<h2 class="count"></h2>
	<input id="menu" type="range" min="1962" max="2013" step="1" value ="1962"/>
	<div id="map"></div>
	<script type="text/javascript" src="map.js"></script>
</div>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  stroke-linejoin: round;
  stroke-linecap: round;
}

.background {
  fill: none;
  stroke: #ddd;
}

.foreground {
  fill: none;
  pointer-events: all;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var color = d3.scale.category10().domain(d3.range(9)),
    selectedColor = 0,
    dragColor;

var components = color.domain().map(function() { return []; });

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var legend = svg.append("g")
    .attr("class", "legend")
    .attr("transform", "translate(" + ((width - color.domain().length * 24) / 2) + ",10)")
    .style("cursor", "pointer")
  .selectAll("rect")
    .data(color.domain())
  .enter().append("rect")
    .attr("x", function(d) { return d * 24; })
    .attr("width", 24 - 3)
    .attr("height", 24 - 3)
    .style("stroke", function(d) { return d ? null : "#000"; })
    .style("fill", color)
    .on("click", clicklegend);

d3.select(self)
    .on("keydown", keydown)
    .node().focus();

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  var bisectId = d3.bisector(function(d) { return d.id; }).left;

  var features = topojson.feature(us, us.objects.states).features;

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states))
      .attr("class", "background")
      .attr("d", path);

  var merge = svg.append("g")
      .attr("class", "merge")
    .selectAll("path")
      .data(components)
    .enter().append("path")
      .style("fill", function(d, i) { return color(i); })
      .style("stroke", function(d, i) { return d3.lab(color(i)).darker(); });

  svg.append("g")
      .attr("class", "foreground")
      .style("cursor", "pointer")
      .style("stroke-opacity", .5)
    .selectAll("path")
      .data(features)
    .enter().append("path")
      .attr("d", function(d) { d.color = null; return path(d); })
      .on("mouseover", function() { this.style.stroke = "black"; })
      .on("mouseout", function() { this.style.stroke = "none"; })
      .call(d3.behavior.drag()
        .on("dragstart", dragstart)
        .on("drag", drag));

  top.location.hash.split("").slice(1, features.length).forEach(function(c, i) {
    if ((c = +c) >= 0 && c < 10) assign(features[i], c ? c - 1 : null);
  });

  redraw();

  function dragstart() {
    var feature = d3.event.sourceEvent.target.__data__;
    if (assign(feature, dragColor = feature.color === selectedColor ? null : selectedColor)) redraw();
  }

  function drag() {
    var feature = d3.event.sourceEvent.target.__data__;
    if (feature && assign(feature, dragColor)) redraw();
  }

  function assign(feature, color) {
    if (feature.color === color) return false;
    if (feature.color !== null) {
      var component = components[feature.color];
      component.splice(bisectId(component, feature.id), 1);
      feature.color = null;
    }
    if (color !== null) {
      var component = components[color];
      component.splice(bisectId(component, feature.id), 0, feature);
      feature.color = color;
    }
    return true;
  }

  function redraw() {
    merge.data(components).attr("d", function(d) { return path({type: "FeatureCollection", features: d}) || "M0,0"; });
    top.history.replaceState(null, null, "#" + features.map(function(d) { return d.color === null ? "0" : d.color + 1; }).join(""));
  }
});

function clicklegend(d) {
  legend[0][selectedColor].style.stroke = null;
  legend[0][selectedColor = d].style.stroke = "#000";
}

function keydown() {
  if (d3.event.keyCode >= 48 && d3.event.keyCode < 58) {
    var i = d3.event.keyCode - 49;
    if (i < 0) i = 10;
    clicklegend(i);
  }
}

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<body onload="vorToTopo()">
  <svg style="height:1000px;width:1000px;"c height="1000" width="1000">
  </svg>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script src="vorpoly.js"></script>
<script>
 
function vorToTopo() {
topoCollection = {type: "Topology", objects: {voronoi: {type: "GeometryCollection", geometries: []}},arcs:[]};
  arcHash = {};
  topoArcs = [];
  geomHash = {};
  
  function RN(num) {
    return Math.floor(num * 10) / 10;
  }
  for (x in vorPolys) {
    geomHash[x] = [];
    var polyObject = {type: "Polygon", properties: {id: x},id: parseInt(x), arcs: []};
    for (y in vorPolys[x]) {
      var hashVal = "0-0-0-0";
      var reverseVal = "0-0-0-0";
      var nextVal = parseInt(y) + 1;
      if (nextVal == vorPolys[x].length) {
	nextVal = 0;
      }
      
      hashVal = RN(vorPolys[x][y][0]) + "-" + RN(vorPolys[x][y][1]) + "-" + RN(vorPolys[x][nextVal][0]) + "-" + RN(vorPolys[x][nextVal][1])
      reverseVal = RN(vorPolys[x][nextVal][0]) + "-" + RN(vorPolys[x][nextVal][1]) + "-" + RN(vorPolys[x][y][0]) + "-" + RN(vorPolys[x][y][1])

      if (!arcHash[hashVal] && !arcHash[reverseVal]) {
	arcHash[hashVal] = topoArcs.length;
	arcHash[reverseVal] = topoArcs.length;
	topoArcs.push([[RN(vorPolys[x][nextVal][0]),RN(vorPolys[x][nextVal][1])],[RN(vorPolys[x][y][0]),RN(vorPolys[x][y][1])]]);
    }
    else {
	console.log("old");      
    }
    if (geomHash[x].indexOf(arcHash[hashVal]) == -1 && geomHash[x].indexOf(arcHash[reverseVal]) == -1) {
      	geomHash[x].push(arcHash[hashVal] || arcHash[reverseVal]);
    }
      if (nextVal == 0) {
	break;
      }

    }
    polyObject.arcs = [geomHash[x]];
    topoCollection.objects.voronoi.geometries.push(polyObject);
  }
  topoCollection.arcs = topoArcs;
  topoFeatures = topojson.feature(topoCollection, topoCollection.objects.voronoi).features;  

  d3.select("svg").insert("g", "#sitesG").attr("id", "voronoiG")
//        .datum(topojson.merge(topoCollection, topoCollection.objects.voronoi.geometries))
        .datum(topojson.merge(topoCollection, topoCollection.objects.voronoi.geometries.filter(function(d,i) { return i < 300})))
	.selectAll("path.voronoi")
	.data(function(d) {return d.coordinates})
      .enter().append("path")
        .style("fill", "red")
        .style("stroke", "black")
        .style("stroke-width", "1px")
        .attr("d", function (d) {return "M" + d.join("L") + "Z";})

}

 
</script>
</body><!DOCTYPE html>
<html>
<head>
  <script src="keen-3.0.0.track.min.js"></script>
  <script src="keen-reporter.js"></script>
  <script>
  !function(){
    var keen = new Keen({
      projectId: "",
      writeKey: "",
      requestType: "beacon",
      js_reporter: true
    });
  }();
  </script>
  <script src="trigger-error.js"></script>
</head>
<body></body>
</html><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Input text with D3</title> <!-- adapted from http://javadude.wordpress.com/2012/05/17/d3-js-with-dynamic-data/ -->
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js"></script>

    <style>
        body {font-family: monospace; line-height: 160%; font-size: 18px; }
        ul {list-style: none; margin: 0; padding: 0;}
        li {display: inline-block; min-width: 80px; padding: 10px; background-color: #eee; margin: 0;}
        input {border: 1px dotted #ccc; background: white; font-family: monospace; padding: 10px 20px; font-size: 18px; margin: 20px 10px 20px 0; color: red;}
        input:focus { background-color:yellow; outline: none;}
    </style>
</head>
    <body>

        <form name="myform" onSubmit="return handleClick()">
            <input name="Submit"  type="submit" value="Add to list" >
            <input type="text" id="myVal" placeholder="Add some text&hellip;">
        </form>

        <ul></ul>
 
        <script>
 
            var dataset = [];
 
 
            function handleClick(event){
                console.log(document.getElementById("myVal").value)
                draw(document.getElementById("myVal").value)
                return false;
            }
 
            function draw(val){
                d3.select("body").select("ul").append("li");
                dataset.push(val);
                var p = d3.select("body").selectAll("li")
                .data(dataset)
                .text(function(d,i){return i + ": " + d;})
            }
 
        </script>


    </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<title>waitAndEval</title>
<style>
#messageText{
  font-size: 60px;
  text-anchor: middle;
}
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

// ----------------------------------------------------------------------

var width = 960,
    height = 500;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var messageText = svg.append("text")
    .attr("id", "messageText")
    .attr("x", width/2)
    .attr("y", height/2);

var waitAndEval = newWaitAndEval();
write("this text will stay here 8 secs");
waitAndEval(function() { write("8 seconds have passed"); }, 8000);
waitAndEval(function() { write("4 more seconds have passed"); }, 4000);
waitAndEval(function() { write("2 more seconds have passed"); }, 2000);

function write (text) { messageText.attr("class", text).text(text) }

function newWaitAndEval () {
  var t = 0;
  return function (foo, dur) {
    t += dur
    setTimeout(foo, t)
  };
}

</script>
<html>
<head>
    <script src="three.min.js"></script>
    <script src="d3.v3.min.js" charset="utf-8"></script>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <style type="text/css">
    body {
        margin: 0px;
        padding: 0px;
    }
    #container {
        width:960px;
        height:500px;
    }
    </style>

</head>
<div id="wrapper">
    <p>
        <input id="uploader" name="uploader" type="file" />
    </p>
    <div id="container"></div>
</div>

<body>

    <!--div id="container"></div-->
    <script>
    // <!--

    function createTextCanvas(text, color, font, size) {
        size = size || 16;
        var canvas = document.createElement('canvas');
        var ctx = canvas.getContext('2d');
        var fontStr = (size + 'px ') + (font || 'Arial');
        ctx.font = fontStr;
        var w = ctx.measureText(text).width;
        var h = Math.ceil(size);
        canvas.width = w;
        canvas.height = h;
        ctx.font = fontStr;
        ctx.fillStyle = color || 'black';
        ctx.fillText(text, 0, Math.ceil(size * 0.8));
        return canvas;
    }

    function createText2D(text, color, font, size, segW, segH) {
        var canvas = createTextCanvas(text, color, font, size);
        var plane = new THREE.PlaneGeometry(canvas.width, canvas.height, segW, segH);
        var tex = new THREE.Texture(canvas);
        tex.needsUpdate = true;
        var planeMat = new THREE.MeshBasicMaterial({
            map: tex,
            color: 0xffffff,
            transparent: true
        });
        var mesh = new THREE.Mesh(plane, planeMat);
        mesh.scale.set(0.5, 0.5, 0.5);
        mesh.doubleSided = true;
        return mesh;
    }

    // from http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb

    function hexToRgb(hex) { //TODO rewrite with vector output
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }

    function sq(x) {
        var s = Math.pow(x, 2);
        return s;
    }

    function getPts(x) {
        //console.log(x)
        var unfiltered = [],
            lowPass = [],
            highPass = [];

        x.forEach(function(d, i) {

            var line = d.split(",");

            unfiltered[i] = {
                x: +line[0],
                y: +line[1],
                z: +line[2]
            };
            lowPass[i] = {
                x: +line[4],
                y: +line[5],
                z: +line[6]
            };
            highPass[i] = {
                x: +line[7],
                y: +line[8],
                z: +line[9]
            };
        })
        var xyzData = {
            unfiltered: unfiltered,
            lowPass: lowPass,
            highPass: highPass
        }
        return xyzData;
    }

    var uploader = document.getElementById("uploader");
    var reader = new FileReader();
    var data;

    reader.onload = function(e) {
        var contents = e.target.result;
        var rawData = contents.split(/\n/);
        var tempData = rawData.slice(2, rawData.length);
        data = getPts(tempData);
        scatter(data);

        // remove button after loading file
        uploader.parentNode.removeChild(uploader);
    };

    uploader.addEventListener("change", handleFiles, false);

    function handleFiles() {
        var file = this.files[0];
        reader.readAsText(file);
    };

    var renderer = new THREE.WebGLRenderer({
        antialias: true
    });
    var w = 960;
    var h = 500;

    renderer.setSize(w, h);
    document.getElementById("container").appendChild(renderer.domElement);

    renderer.setClearColorHex(0xEEEEEE, 1.0);

    var camera = new THREE.PerspectiveCamera(45, w / h, 1, 10000);
    camera.position.z = 200;
    camera.position.x = -100;
    camera.position.y = 100;

    var scene = new THREE.Scene();

    var scatterPlot = new THREE.Object3D();
    scene.add(scatterPlot);

    scatterPlot.rotation.y = 0;

    function v(x, y, z) {
        return new THREE.Vector3(x, y, z);
    }

    var format = d3.format("+.3f");

    function scatter(data) {

        var temp = data.unfiltered;
        var xExent = d3.extent(temp, function(d) {
                return d.x;
            }),
            yExent = d3.extent(data.unfiltered, function(d) {
                return d.y;
            }),
            zExent = d3.extent(data.unfiltered, function(d) {
                return d.z;
            });

        var vpts = {
            xMax: xExent[1],
            xCen: (xExent[1] + xExent[0]) / 2,
            xMin: xExent[0],
            yMax: yExent[1],
            yCen: (yExent[1] + yExent[0]) / 2,
            yMin: yExent[0],
            zMax: zExent[1],
            zCen: (zExent[1] + zExent[0]) / 2,
            zMin: zExent[0]
        }

        var colour = d3.scale.category20c();

        var xScale = d3.scale.linear()
            .domain(xExent)
            .range([-50, 50]);
        var yScale = d3.scale.linear()
            .domain(yExent)
            .range([-50, 50]);
        var zScale = d3.scale.linear()
            .domain(zExent)
            .range([-50, 50]);

        var lineGeo = new THREE.Geometry();
        lineGeo.vertices.push(
            v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zCen)),
            v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zCen)),
            v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yCen), zScale(vpts.zMin)),

            v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),
            v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)),
            v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),
            v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),

            v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),
            v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)),
            v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),
            v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)),

            v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)),
            v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)),
            v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),
            v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),

            v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMax)),
            v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),
            v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zCen)),
            v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zCen)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zCen)),

            v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMax), zScale(vpts.zMax)),
            v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yMin), zScale(vpts.zMax)),
            v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMax), zScale(vpts.zMax)),
            v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yMin), zScale(vpts.zMax)),

            v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMin), yScale(vpts.yCen), zScale(vpts.zMax)),
            v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMin)), v(xScale(vpts.xMax), yScale(vpts.yCen), zScale(vpts.zMax)),
            v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMax), zScale(vpts.zMin)),
            v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMin)), v(xScale(vpts.xCen), yScale(vpts.yMin), zScale(vpts.zMax))

        );
        var lineMat = new THREE.LineBasicMaterial({
            color: 0x000000,
            lineWidth: 1
        });
        var line = new THREE.Line(lineGeo, lineMat);
        line.type = THREE.Lines;
        scatterPlot.add(line);

        var titleX = createText2D('-X');
        titleX.position.x = xScale(vpts.xMin) - 12,
        titleX.position.y = 5;
        scatterPlot.add(titleX);

        var valueX = createText2D(format(xExent[0]));
        valueX.position.x = xScale(vpts.xMin) - 12,
        valueX.position.y = -5;
        scatterPlot.add(valueX);

        var titleX = createText2D('X');
        titleX.position.x = xScale(vpts.xMax) + 12;
        titleX.position.y = 5;
        scatterPlot.add(titleX);

        var valueX = createText2D(format(xExent[1]));
        valueX.position.x = xScale(vpts.xMax) + 12,
        valueX.position.y = -5;
        scatterPlot.add(valueX);

        var titleY = createText2D('-Y');
        titleY.position.y = yScale(vpts.yMin) - 5;
        scatterPlot.add(titleY);

        var valueY = createText2D(format(yExent[0]));
        valueY.position.y = yScale(vpts.yMin) - 15,
        scatterPlot.add(valueY);

        var titleY = createText2D('Y');
        titleY.position.y = yScale(vpts.yMax) + 15;
        scatterPlot.add(titleY);

        var valueY = createText2D(format(yExent[1]));
        valueY.position.y = yScale(vpts.yMax) + 5,
        scatterPlot.add(valueY);

        var titleZ = createText2D('-Z ' + format(zExent[0]));
        titleZ.position.z = zScale(vpts.zMin) + 2;
        scatterPlot.add(titleZ);

        var titleZ = createText2D('Z ' + format(zExent[1]));
        titleZ.position.z = zScale(vpts.zMax) + 2;
        scatterPlot.add(titleZ);

        var mat = new THREE.ParticleBasicMaterial({
            vertexColors: true,
            size: 10
        });

        var pointCount = data.unfiltered.length;
        var pointGeo = new THREE.Geometry();
        for (var i = 0; i < pointCount; i++) {
            var x = xScale(data.unfiltered[i].x);
            var y = yScale(data.unfiltered[i].y);
            var z = zScale(data.unfiltered[i].z);

            pointGeo.vertices.push(new THREE.Vector3(x, y, z));
            pointGeo.colors.push(new THREE.Color().setRGB(
                hexToRgb(colour(i)).r / 255, hexToRgb(colour(i)).g / 255, hexToRgb(colour(i)).b / 255
            ));

        }
        var points = new THREE.ParticleSystem(pointGeo, mat);
        scatterPlot.add(points);

        renderer.render(scene, camera);
        var paused = false;
        var last = new Date().getTime();
        var down = false;
        var sx = 0,
            sy = 0;

        window.onmousedown = function(ev) {
            down = true;
            sx = ev.clientX;
            sy = ev.clientY;
        };
        window.onmouseup = function() {
            down = false;
        };
        window.onmousemove = function(ev) {
            if (down) {
                var dx = ev.clientX - sx;
                var dy = ev.clientY - sy;
                var dist = Math.sqrt(sq(camera.position.x) + sq(camera.position.y) + sq(camera.position.z));

                scatterPlot.rotation.y += dx * 0.01;
                scatterPlot.rotation.x += dy * 0.01;

                sx += dx;
                sy += dy;
            }
        }
        var animating = false;
        window.ondblclick = function() {
            animating = !animating;
        };

        function animate(t) {
            if (!paused) {
                last = t;
                renderer.clear();
                camera.lookAt(scene.position);
                renderer.render(scene, camera);
            }
            window.requestAnimationFrame(animate, renderer.domElement);
        };
        animate(new Date().getTime());
        onmessage = function(ev) {
            paused = (ev.data == 'pause');
        };

    }

    </script>
</body>

</html>
<!DOCTYPE html>
<meta charset="utf-8">
<title>waitAndEval II</title>
<style>
#messageText{
  font-size: 60px;
  text-anchor: middle;
}
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

// ----------------------------------------------------------------------

var width = 960,
    height = 500;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var messageText = svg.append("text")
    .attr("id", "messageText")
    .attr("x", width/2)
    .attr("y", height/2);

var waitAndEval = newWaitAndEval();

d3.range(100).forEach(function(i) {
  waitAndEval(function() { write(i); }, 1000);
})

function write (text) { messageText.attr("class", text).text(text) }

function newWaitAndEval () {
  var t = 0;
  return function (foo, dur) {
    t += dur
    setTimeout(foo, t)
  };
}

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Philadelphia Weather History</title>
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<style type="text/css">
		body {
		}
		.bar {
		  	fill: steelblue;
		  	opacity: .6;
		}
		.overlay {
			fill: white;
			opacity: .5;
		}
		.overlay:hover {
			opacity: 0;
		}
		.labels {
			font: 12px sans-serif;
			fill: black;
		}
		.axis path,
		.axis line {
		  	fill: none;
		  	stroke: #e0e0e0;
		  	shape-rendering: crispEdges;
		}
		.x.axis {
			font: 10px sans-serif;
			fill: #c0c0c0;
		}
		.y.axis {
			font: 10px sans-serif;
			fill: #c0c0c0;
		}
		.x.axis path {
		  	display: none;
		}
		.area {
		  	fill: #a0a0a0;
		  	opacity: .7;
		  	
		}
		.line {
		  	fill: none;
		  	stroke: white;
		}
		</style>
	</head>
	<body>
		<div id="container">
				<script type="text/javascript">
				//conventional margins
				var margin = {top: 40, right: 160, bottom: 40, left: 40};
				
				var width = 960 - margin.left - margin.right,
					height = 500 - margin.top - margin.bottom;
					
				var svg = d3.select('#container').append('svg')
					.attr('width', width + margin.left + margin.right)
					.attr('height', height + margin.top + margin.bottom)
					.append('g')
					.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
				//conventional margins end
				
				var parseDate = d3.time.format('%Y').parse;
				
				//scales
				var xA = d3.time.scale()
					.range([0,width]);
				
				var xB = d3.scale.ordinal()
					.rangeBands([0, width], .25, .25);
					
				var yA = d3.scale.linear()
					.range([height, 0]);
					
				var yB = d3.scale.linear()
					.range([height, 0]);
					
				//axes
				var xAxis = d3.svg.axis()
					.scale(xA)
					.orient('bottom')
					.ticks(10);
				
				var yAxisA = d3.svg.axis()
					.scale(yA)
					.orient('left');
				
				var yAxisB = d3.svg.axis()
					.scale(yB)
					.orient('right');				
				
				//area chart
				var area = d3.svg.area()
					.x(function(d) { return xA(d.Year); })
					.y0(function(d) { return yA(d.DecJanFeb); })
					.y1(function(d) { return yA(d.JunJulAug); });
				
				//line chart	
				var line = d3.svg.line()
					.x(function(d) { return xA(d.Year); })
					.y(function(d) { return yA(d.Mean); });
					
				//data
				d3.csv('temps.csv', function(error, data) {
					data.forEach(function(d) {
						d.Year = parseDate(d.Year);
						d.Mean = +d.Mean;
						d.DecJanFeb = +d.DecJanFeb;
						d.JunJulAug = +d.JunJulAug;
						d.Snowfall = +d.Snowfall;
					});
					
					//domains for the scales
					xA.domain(d3.extent(data, function(d) { return d.Year; }));
					xB.domain(data.map(function(d) { return d.Year; }));
					yA.domain([0,100]);
					yB.domain([0,100]);

					svg.append('path')
						.datum(data)
						.attr('class', 'area')
						.attr('d', area);
							
					svg.selectAll('.bar')
						.data(data)
						.enter().append("rect")
						.attr("class", "bar")
						.attr("x", function(d) { return xB(d.Year); })
						.attr("width", xB.rangeBand())
						.attr("y", function(d) { return yB(d.Snowfall); })
						.attr("height", function(d) { return height - yB(d.Snowfall); });
					
					svg.append('path')
						.datum(data)
						.attr('class', 'line')
						.attr('d', line);
					
					svg.selectAll('.overlay')
						.data(data)
						.enter().append("rect")
						.attr("class", "overlay")
						.attr("x", function(d) { return xB(d.Year); })
						.attr("width", xB.rangeBand())
						.attr("y", 0)
						.attr("height", height)
						.on('mouseover', function(d) {
								xTip = parseFloat(d3.select(this).attr('x'));
								
							svg.append('text')
								.data(data)
								.attr('class', 'labels')
								.attr('id', 'tooltip0')
								.attr('x', xTip - 35)
								.attr('y', yB(d.Snowfall) - 5)
								.text(d.Snowfall + 'in');
								
							svg.append('text')
								.data(data)
								.attr('class', 'labels')
								.attr('id', 'tooltip1')
								.attr('x', xTip + 5)
								.attr('y', yB(d.Mean) - 5)
								.text(' Average ' + d.Mean + 'º');
								
							svg.append('text')
								.data(data)
								.attr('class', 'labels')
								.attr('id', 'tooltip2')
								.attr('x', xTip + 5)
								.attr('y', yB(d.JunJulAug) - 5)
								.text(' Jun-Jul-Aug average: ' + d.JunJulAug + 'º');
								
							svg.append('text')
								.data(data)
								.attr('class', 'labels')
								.attr('id', 'tooltip3')
								.attr('x', xTip + 5)
								.attr('y', yB(d.DecJanFeb) - 5)
								.text(' Dec-Jan-Feb average: ' + d.DecJanFeb + 'º');
							})
						.on('mouseout', function() {
							d3.select('#tooltip0').remove()
							d3.select('#tooltip1').remove()
							d3.select('#tooltip2').remove()
							d3.select('#tooltip3').remove();
							});
							
											
					svg.append('g')
						.attr('class', 'x axis')
						.call(xAxis)
						.append('text')
						.attr('x', width - 100)
						.attr('y', -16)
						.attr("dy", ".71em")
						.text("source: Franklin Institute");
						
					svg.append("g")
						.attr("class", "y axis")
						.call(yAxisA)
						.append("text")
						.attr("transform", "rotate(-90)")
						.attr("y", 6)
						.attr("dy", ".71em")
						.style("text-anchor", "end")
						.text("Temp.(ºF) 1875-1990");
						
					svg.append("g")
						.attr("class", "y axis")
						.attr("transform", "translate(" + width + ", 0)")
						.call(yAxisB)
						.append("text")
						.attr("x", -110)
						.attr("y", height + 10)
						.attr("dy", ".71em")
						.style("text-anchor", "start")
						.text("Snowfall(in.) 1875-1990");
									
				});
				</script>
		</div>
	</body>
</html><html>
<head>
  <title>Clustering, betweenness centrality and eigenvector centrality</title>
  <meta charset="utf-8" />
<script src="http://d3js.org/d3.v3.min.js" type="text/JavaScript"></script>
<script src="jsnetworkx.js" type="text/JavaScript"></script>
</head>
<style>
  svg {
    height: 500px;
    width: 500px;
    border: 1px solid gray;
  }
</style>
<body>

<div id="viz">
  <svg class="main">
  </svg>
</div>
</body>
  <footer>
<script>

d3.csv("firm.csv",function(error,data) {createNetwork(data)});

function onlyUnique(value, index, self) {
  return self.indexOf(value) === index;
}

function createNetwork(edgelist) {
  var nodeHash = {};
  var edgeHash = {};
  var nodes = [];
  var edges = [];

  edgelist.forEach(function (edge) {
    if (!nodeHash[edge.source]) {
      nodeHash[edge.source] = {id: edge.source, label: edge.source};
      nodes.push(nodeHash[edge.source]);
    }
    if (!nodeHash[edge.target]) {
      nodeHash[edge.target] = {id: edge.target, label: edge.target};
      nodes.push(nodeHash[edge.target]);
    }
    if (edge.weight == 5) {
      edges.push({id: nodeHash[edge.source].id + "-" + nodeHash[edge.target].id, source: nodeHash[edge.source], target: nodeHash[edge.target], weight: edge.weight});
    }
  });
  createForceNetwork(nodes, edges);
}

function createForceNetwork(nodes, edges) {

//create a network from an edgelist

var node_data = nodes.map(function (d) {return d.id});
var edge_data = edges.map(function (d) {return [d.source.id, d.target.id]; });

//var G = new jsnx.cycleGraph();
var G = new jsnx.Graph();
G.addNodesFrom(node_data);
G.addEdgesFrom(edge_data);

var betweenness = jsnx.betweennessCentrality(G);
var eigenvector = jsnx.eigenvectorCentrality(G);
var clustering = jsnx.clustering(G);
//var shortestPath = jsnx.shortestPath(G, {source: 28, target: 31})

//console.log(shortestPath);

var evExtent = d3.extent(d3.values(eigenvector._stringValues));
var bwExtent = d3.extent(d3.values(betweenness._stringValues));
var clExtent = d3.extent(d3.values(clustering._stringValues));

var colorScale = d3.scale.linear().domain([0,1]).range(["#ffff99", "#ff6600"]);
var sizeScale = d3.scale.linear().domain([0,1]).range([4,10]);

function byEV() {
  sizeScale.domain(clExtent);
  colorScale.domain(evExtent);
  d3.selectAll("circle")
    .transition()
    .duration(1000)
    .style("fill", function (d) {return colorScale(eigenvector._stringValues[d.id])})
    .attr("r", function (d) {return sizeScale(clustering._stringValues[d.id])})
    .transition()
    .delay(2000)
    .each("end", function() {
      byBW();
    })
}

function byBW() {
  sizeScale.domain(evExtent);
  colorScale.domain(bwExtent);
  d3.selectAll("circle")
    .transition()
    .duration(1000)
    .style("fill", function (d) {return colorScale(betweenness._stringValues[d.id])})
    .attr("r", function (d) {return sizeScale(eigenvector._stringValues[d.id])})
    .transition()
    .delay(2000)
    .each("end", function() {
      byCL();
    })

}

function byCL() {
  sizeScale.domain(bwExtent);
  colorScale.domain(clExtent);
  d3.selectAll("circle")
    .transition()
    .duration(1000)
    .style("fill", function (d) {return colorScale(clustering._stringValues[d.id])})
    .attr("r", function (d) {return sizeScale(betweenness._stringValues[d.id])})
    .transition()
    .delay(2000)
    .each("end", function() {
      byEV();
    })

}

  var force = d3.layout.force().nodes(nodes).links(edges)
  .size([500,500])
  .charge(-300)
  .chargeDistance(100)
  .gravity(0.05)
  .on("tick", updateNetwork);

var drag = force.drag();

  var edgeEnter = d3.select("svg.main").selectAll("g.edge")
  .data(edges, function (d) {return d.id})
  .enter()
  .append("g")
  .attr("class", "edge");

  edgeEnter
  .append("line")
  .style("stroke-width", function (d) {return d.border ? "3px" : "1px"})
  .style("stroke", "black")
  .style("pointer-events", "none");

  var nodeEnter = d3.select("svg.main").selectAll("g.node")
  .data(nodes, function (d) {return d.id})
  .enter()
  .append("g")
  .attr("class", "node")
  .call(drag);

  nodeEnter.append("circle")
  .attr("r", 8)
  .attr("class", "foreground")
//  .style("fill", function (d) {return colors(d.module)})
  .style("stroke", "black")
  .style("stroke-width", function (d) {return d.border ? "3px" : "1px"})

  nodeEnter.append("text")
  .style("text-anchor", "middle")
  .attr("y", 3)
  .style("stroke-width", "1px")
  .style("stroke-opacity", 0.75)
  .style("stroke", "white")
  .style("font-size", "8px")
  .text(function (d) {return d.id})
  .style("pointer-events", "none")

  nodeEnter.append("text")
  .style("text-anchor", "middle")
  .attr("y", 3)
  .style("font-size", "8px")
  .text(function (d) {return d.id})
  .style("pointer-events", "none")

  force.start();

  byEV();

  function updateNetwork(e) {

    d3.select("svg.main").selectAll("line")
    .attr("x1", function (d) {return d.source.x})
    .attr("y1", function (d) {return d.source.y})
    .attr("x2", function (d) {return d.target.x})
    .attr("y2", function (d) {return d.target.y});

    d3.select("svg.main").selectAll("g.node")
      .attr("transform", function (d) {return "translate(" + d.x + "," + d.y + ")"});

  }

}
</script>
  </footer>

</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  stroke-linejoin: round;
  stroke-linecap: round;
}

.background {
  fill: none;
  stroke: #ddd;
}

.foreground {
  fill: none;
  pointer-events: all;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var color = d3.scale.ordinal().domain(d3.range(9)).range(["#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd"]),
    selectedColor = 0,
    dragColor;

var components = color.domain().map(function() { return []; });

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var legend = svg.append("g")
    .attr("class", "legend")
    .attr("transform", "translate(" + ((width - color.domain().length * 24) / 2) + ",10)")
    .style("cursor", "pointer")
  .selectAll("rect")
    .data(color.domain())
  .enter().append("rect")
    .attr("x", function(d) { return d * 24; })
    .attr("width", 24 - 3)
    .attr("height", 24 - 3)
    .style("stroke", function(d) { return d ? null : "#000"; })
    .style("fill", color)
    .on("click", clicklegend);

d3.select(self)
    .on("keydown", keydown)
    .node().focus();

d3.json("/mbostock/raw/4090846/us.json", function(error, us) {
  if (error) throw error;

  var bisectId = d3.bisector(function(d) { return d.id; }).left;

  var features = topojson.feature(us, us.objects.counties).features;

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.counties))
      .attr("class", "background")
      .attr("d", path);

  var merge = svg.append("g")
      .attr("class", "merge")
    .selectAll("path")
      .data(components)
    .enter().append("path")
      .style("fill", function(d, i) { return color(i); })
      .style("stroke", function(d, i) { return d3.lab(color(i)).darker(); });

  svg.append("g")
      .attr("class", "foreground")
      .style("cursor", "pointer")
      .style("stroke-opacity", .5)
    .selectAll("path")
      .data(features)
    .enter().append("path")
      .attr("d", function(d) { d.color = null; return path(d); })
      .on("mouseover", function() { this.style.stroke = "black"; })
      .on("mouseout", function() { this.style.stroke = "none"; })
      .call(d3.behavior.drag()
        .on("dragstart", dragstart)
        .on("drag", drag));

  top.location.hash.split("").slice(1, features.length).forEach(function(c, i) {
    if ((c = +c) >= 0 && c < 10) assign(features[i], c ? c - 1 : null);
  });

  redraw();

  function dragstart() {
    var feature = d3.event.sourceEvent.target.__data__;
    if (assign(feature, dragColor = feature.color === selectedColor ? null : selectedColor)) redraw();
  }

  function drag() {
    var feature = d3.event.sourceEvent.target.__data__;
    if (feature && assign(feature, dragColor)) redraw();
  }

  function assign(feature, color) {
    if (feature.color === color) return false;
    if (feature.color !== null) {
      var component = components[feature.color];
      component.splice(bisectId(component, feature.id), 1);
      feature.color = null;
    }
    if (color !== null) {
      var component = components[color];
      component.splice(bisectId(component, feature.id), 0, feature);
      feature.color = color;
    }
    return true;
  }

  function redraw() {
    merge.data(components).attr("d", function(d) { return path({type: "FeatureCollection", features: d}) || "M0,0"; });
    top.history.replaceState(null, null, "#" + features.map(function(d) { return d.color === null ? "0" : d.color + 1; }).join(""));
  }
});

function clicklegend(d) {
  legend[0][selectedColor].style.stroke = null;
  legend[0][selectedColor = d].style.stroke = "#000";
}

function keydown() {
  if (d3.event.keyCode >= 48 && d3.event.keyCode < 58) {
    var i = d3.event.keyCode - 49;
    if (i < 0) i = 10;
    clicklegend(i);
  }
}

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8">
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="http://d3js.org/topojson.v1.min.js"></script>
    <title>人口マップ</title>
  </head>
  <body>
    <div class="container"></div>

<script type="text/javascript">

var mapfilepath = '/sugi2000/raw/560f664f9b32a17b2c4e/japan.topojson';
//var mapfilepath = 'japan.topojson';
var csvpath = 'aaa.csv';
var jinkouData;
var years;
var currentYear;

var zoom = d3.behavior.zoom()
    .scaleExtent([1, 8])
    .on("zoom", zoomed);

var w = 960;
var h = 960;
var container = d3.select('.container');
var svg = container.append('svg')
    .attr('width', w)
    .attr('height', h)
    .append("g");

var g = svg.append("g");

svg.call(zoom)
    .call(zoom.event);

// データの数値から色に変換する関数
var color = d3.scale.linear()
    .domain([0,500,1000, 2000,3000, 4000,5000, 6000,7000, 8000,9000,10000,11000,12000,13000,14000])
    .range(['#0000FF','#0066FF', '#0099FF', '#00FFFF','#00FF99', '#00FF66', '#00FF00','#66FF00','#99FF00','#CCFF00','#FFFF00','#FFCC00','#FF9900','#FF6600','#FF3300','#FF0000']);

// 全国の都道府県の色を更新する関数
var updateColor = function() {

  // 年ラベルの色を更新する
  svg.selectAll('text.year')
    .transition()
    .duration(300)
    .style('fill', function() {
      var self = d3.select(this);
      if (currentYear === self.attr('year')) {
        return 'red';
      } else {
        return 'black';
      }
    });

  // 都道府県の色を更新する
  g.selectAll('path')
    .transition()
    .duration(300)
    .style('fill', function() {
      return color(d3.select(this).attr('year-' + currentYear));
    });
};

// 凡例を追加
svg.selectAll('rect.legend')
  .data([0,500,1000, 2000,3000, 4000,5000, 6000,7000, 8000,9000,10000,11000,12000,13000,14000])
  .enter()
  .append('rect')
  .attr('class', 'legend')
  .attr('x', 40)
  .attr('y', function(d, i) { return 40 + 20 * i; })
  .attr('width', 20)
  .attr('height', 20)
  .attr('fill', function(d) { return color(d); });

svg.selectAll('text.legend')
  .data([0,500,1000, 2000,3000, 4000,5000, 6000,7000, 8000,9000,10000,11000,12000,13000,14000])
  .enter()
  .append('text')
  .attr('x', 62)
  .attr('y', function(d, i) { return 40 + 20 * i + 12; })
  .attr('font-size', 9)
  .text(function(d) { return d + '千人'; });

// csvファイルの読み込み
d3.csv(csvpath, function(error, dataset) {
	// 背景色
  g.append('rect')
	    .attr('class', 'background')
      .attr('x', - w * 2)
      .attr('y', - h * 2)
	    .attr('width', w * 4)
	    .attr('height', h * 4)
	    .attr('fill', 'gray');

	console.log(dataset);
	jinkouData = dataset;

	// 年ラベルの設定
	years = Object.keys(dataset[0]);
	years.some(function(v, i){
		if (v === 'ken') { years.splice(i, 1); }
	});
	svg.selectAll('text.year')
		.data(years)
		.enter()
		.append('text')
		.attr('class', 'year')
		.attr('x', function(d, i){return (i + 0.5) * w / years.length;})
		.attr('y', 20)
		.attr('text-anchor', 'middle')
		.attr('font-size', 9)
		.attr('font-family', 'Helvetica')
		.attr('font-weight', 'bold')
		.attr('year', function(d){return d;})
		.style('cursor', 'pointer')
		.text(function(d){return d + '年';});

  // クリックイベントの設定
	d3.selectAll('text.year').on('click', function(){
    currentYear = this.getAttribute('year');
		updateColor();
	});

  // csvファイルを読み込んだ後にmapファイルを読み込み
  d3.json(mapfilepath, loadmapCallback);
});

// mapファイル読み込みのコールバック関数（読み込み終了後に呼び出される）
var loadmapCallback = function(error, collection) {
		if (error) {
			return console.warn(error);
		}

    var japan = topojson.feature(collection, collection.objects.japan).features;

    // setup map
    var projection = d3.geo.mercator()
                       .scale(1500)
                       .center([137, 34])
                       //.center(d3.geo.centroid(collection))
                       .translate([w / 2, h / 2 - 50]);

    var path = d3.geo.path().projection(projection);

    g.selectAll('path')
      .data(japan)
      .enter()
      .append('path')
      .attr('d', path)
      .attr('ken', function(d) {
        return d.properties.name_local;
      })
      //.attr('KENCODE', function(d, i) {
      //  return i;
		  //})
      .style('fill', function(d, i) {
        return 'lightgray';
      })
      .style('cursor', 'pointer')
      .on('mouseover', function(){
      	var self = d3.select(this);
      	self.style('fill', 'red');
      })
      .on('mouseout', function(d, i){
      	var self = d3.select(this);
      	self.transition()
      	  .duration(300)
          .style('fill', function(d, i) {
            return color(self.attr('year-' + currentYear));
          });
      })
      ;

      // jinkouDataの各年のデータをpathの属性に追加する
      svg.selectAll('path')
        .each(function() {
          var p = d3.select(this);
          var ds = jinkouData.filter(function(d){
            //console.log('ken', d['ken']);
            return (d['ken'] === p.attr('ken'));
          });
          if (ds.length > 0) {
            var d = ds[0];
            for (var year of years) {
              p.attr('year-' + year, d[year]);
            }
          }
        })

      // 最初の年で色を更新する
      currentYear = years[0];
      updateColor();
};

function zoomed() {
  g.attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");
}

d3.select(self.frameElement).style("height", h + "px");

</script>

 </body>
</html>
<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title>basic line example</title>
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

 path {
 stroke:red;
 stroke-width:2;
 fill:none;
 }

</style>
</head>
<body>
<script type="text/javascript">

var margin = {top: 20, right: 20, bottom: 20, left: 40},
    width = 1400 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;



var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    
    svg.append("defs")
    .append("clipPath")
    .attr("id","clip")
    .append("rect")
    .attr("width",width)
    .attr("height",height);
    
  
  
   

var dataset = [];
    for (var i = 0; i < 55; i++) {
        var newNumber = Math.random();
        dataset.push(newNumber);
        
}

var xScale = d3.scale.linear().domain([0,54]).range([0,width]);
var yScale = d3.scale.linear().domain([0,1]).range([height,0]);




var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d,i) { return xScale(i); })
    .y(function(d) { return yScale(d); });
    
 

    
    
    
var path =  svg.append("g")
.attr("clip-path","url(#clip)")
.append("svg:path")
 .attr("transform","translate(" + xScale(0) + ")")
        .attr("d", line(dataset));
        
        
        

        
        
     
  function animate() {
  svg.selectAll("path")
  .attr("transform","translate(" + xScale(1) + ")")
  .attr("d",line(dataset))
  .transition()
  .ease("linear")
  .duration(3000)
  .attr("transform","translate(" + xScale(0) + ")");
  };
        
        
    
    
 setInterval(function() {
 dataset.push(Math.random());
 animate();
dataset.shift();}, 1500)
    
    
</script>


</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>A Simple Map</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
</style>
</head>
<body>
<div id='map'></div>
<script>
var mapID = 'aaizemberg.hm795fk1';
var map = L.mapbox.map('map', mapID)
           .setView([-34.62, -58.44], 11)
           .addControl(L.mapbox.geocoderControl(mapID));
 
var geocoder = L.mapbox.geocoder(mapID);
geocoder.query('Lugones, Buenos Aires, Argentina', showMap);
function showMap(err, data) {
     map.fitBounds(data.lbounds);
}
</script>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.voronoi-cell {
  fill: red;
  fill-opacity: .1;
  stroke: red;
  stroke-width: 1.5px;
}

.voronoi-mesh {
  fill: none;
  stroke: black;
  stroke-dasharray: 1,2;
  stroke-opacity: .5;
}

</style>
<body>
<script src="d3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var points = d3.range(100).map(function() {
  return [
    Math.random() * width,
    Math.random() * height
  ]
});

var voronoi = d3.geom.voronoi()
    .clipExtent([[-1, -1], [width + 1, height + 1]]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var topology = voronoi.topology(points);

svg.append("path")
    .datum(topojson.mesh(topology, topology.objects.voronoi, function(a, b) { return a !== b; }))
    .attr("class", "voronoi-mesh")
    .attr("d", d3.geo.path().projection(null));

svg.append("path")
    .datum(topojson.merge(topology, topology.objects.voronoi.geometries.filter(function(d, i) { return i & 1; })))
    .attr("class", "voronoi-cell")
    .attr("d", d3.geo.path().projection(null));

svg.append("g")
    .attr("class", "voronoi-site")
  .selectAll("circle")
    .data(points)
  .enter().append("circle")
    .attr("r", 2.5)
    .attr("transform", function(d) { return "translate(" + d + ")"; });

</script>
<!doctype html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<title>Easing Test</title>
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body>
	<script>
		var dataset = ["linear", "quad", "cubic", "sin", "exp", "circle", "elastic", "back", "bounce"]
			width = 960,
			height = 500,
			xPadding = 300,
			yPadding = 30,
			r = 20;

		var svg = d3.select("body").append("svg")
					.attr({
						width: width,
						height: height
					});

		svg.selectAll("text")
			.data(dataset)
			.enter()
			.append("text")
			.attr({
				x: xPadding,
				y: function(d, i){ return i * (height/dataset.length) + yPadding; },
				dx: -100,
				dy: 5,
				"font-size": 18
			})
			.style("text-anchor", "middle")
			.text(function(d){ return d; });

		svg.selectAll("line")
			.data(dataset)
			.enter()
			.append("line")
			.attr({
				x1: xPadding,
				y1: function(d, i){ return i * (height/dataset.length) + yPadding; },
				x2: width-xPadding,
				y2: function(d, i){ return i * (height/dataset.length) + yPadding; },
				stroke: "darkorange"
			})

		svg.selectAll("circle")
			.data(dataset)
			.enter()
			.append("circle")
			.attr("class", function(d){ return d; })
			.attr({
				cx: xPadding,
				cy: function(d, i){ return i * (height/dataset.length) + yPadding; },
				r: r,
				fill: "orange"
			})
			.on("mouseover", function(d){
				d3.select(this).attr("fill", "green");
			})
			.on("mouseout", function(d){
				d3.select(this).attr("fill", "orange");
			})
			.on("click", function(d){
				d3.select(this)
					.transition()
					.duration(1000)
					.ease(d)
					.attr("cx", width-xPadding)
					.each("end", function(){
						d3.select(this)
							.transition()
							.delay(500)
							.duration(500)
							.attr({
								cx: xPadding
							})
					})
			})

	</script>
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.voronoi-cell {
  fill: red;
  fill-opacity: .1;
  stroke: red;
  stroke-width: 1.5px;
}

.voronoi-mesh {
  fill: none;
  stroke: black;
  stroke-dasharray: 1,2;
  stroke-opacity: .5;
}

</style>
<body>
<script src="d3.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500;

var points = [[699.0050809085369,2.8436569264158607],[888.4805839508772,252.35402339603752],[610.3699017316103,447.0974076539278],[512.4963408708572,90.31530807260424],[563.3260828256607,250.2160455333069],[451.8548485636711,370.0483979191631],[619.8999966681004,237.06898477394134],[70.67834883928299,89.23503302503377],[138.53186666965485,443.46650049556047],[917.2623766958714,319.6419858140871],[835.7108900696039,178.92579676117748],[210.92742137610912,442.21618899609894],[239.4169557094574,171.82791873347014],[443.057961165905,201.0283146519214],[824.0466497093439,34.55296310130507],[723.5897192358971,40.55694455746561],[152.5887919217348,125.93188707251102],[298.39050337672234,356.05113685596734],[228.68067003786564,458.85977998841554],[354.60156485438347,372.44048540014774],[161.4455945044756,62.68311955500394],[829.1228798031807,371.91431783139706],[64.45855692029,16.175256459973752],[120.28321623802185,215.83681867923588],[923.2550290971994,275.6506217410788],[166.98800884187222,233.4072421072051],[102.34884694218636,136.21137070003897],[837.0920314639807,232.50216874293983],[116.36271581053734,413.76394394319504],[200.60938104987144,222.28361363522708],[567.5606162846088,77.06040609627962],[274.3246353417635,288.63093559630215],[254.2430106550455,213.86781835462898],[61.5095479041338,450.31107729300857],[36.59178413450718,237.1440433198586],[397.0605605095625,465.7969877589494],[834.3986919522285,172.6005991222337],[71.38201497495174,402.4498404469341],[672.1282913535833,249.62360912468284],[723.8617077469826,109.93840522132814],[751.8036069720984,68.9414587104693],[643.8624858856201,231.02924472186714],[242.00463496148586,149.44113383535296],[377.3637116700411,432.3011935921386],[793.6652635037899,458.6987466318533],[651.0418575257063,151.54773206450045],[448.5811297595501,253.67002771236002],[714.7731401771307,175.67026254255325],[121.73133283853531,62.08953191526234],[99.72131609916687,494.2970742704347],[449.95703659951687,453.9595516398549],[411.578684002161,183.46862692851573],[956.8594899773598,77.59027509018779],[612.1715218573809,46.03325598873198],[309.21511866152287,359.19026599731296],[804.4456478208303,45.493391109630466],[558.1986904889345,443.54945467785],[830.9829823672771,183.42329608276486],[427.7726800739765,158.21698831859976],[90.69512911140919,143.3550559449941],[813.8003895431757,69.5274363970384],[151.80836029350758,245.17876107711345],[314.3148458003998,430.0678597064689],[108.50703679025173,244.0565814031288],[46.95579819381237,383.270486141555],[8.339212462306023,432.2571096708998],[44.74743872880936,384.55081381835043],[548.7627111375332,256.79942849092185],[87.77389168739319,427.86694888491184],[716.1201567202806,50.134150544181466],[345.1531735807657,337.79136021621525],[717.5939214974642,466.216848581098],[285.67323312163353,301.9707479979843],[626.1467834562063,107.57232340984046],[306.58400796353817,282.19709394034],[216.67073495686054,120.48410973511636],[239.25122492015362,409.17698142584413],[644.6622573584318,354.13541609887034],[339.8401886969805,316.0193932708353],[251.0326612740755,190.29593898449093],[477.54173554480076,381.8539628991857],[261.6209629923105,364.0610105358064],[952.8780794888735,207.89624622557312],[910.0024218857288,105.64764111768454],[132.66220562160015,43.867148575372994],[956.9832441955805,293.3712595840916],[588.2194550335407,167.6968086976558],[690.3582617640495,252.01775517780334],[297.60200947523117,362.96630650758743],[818.3018396794796,430.22627115715295],[110.11742725968361,79.41011129878461],[29.421293288469315,461.2957357894629],[246.06291487812996,330.74483775999397],[349.722168892622,412.55073656793684],[905.9935462474823,103.25026756618172],[562.8941137343645,71.470781811513],[870.2599487453699,343.04971096571535],[276.9190192222595,38.70887157972902],[531.6803616285324,106.0691709863022],[349.0783931314945,215.77980741858482]];

var voronoi = d3.geom.voronoi()
    .clipExtent([[-1, -1], [width + 1, height + 1]]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(50,50)");

var topology = voronoi.topology(points);

svg.append("path")
    .datum(topojson.mesh(topology, topology.objects.voronoi, function(a, b) { return a !== b; }))
    .attr("class", "voronoi-mesh")
    .attr("d", d3.geo.path().projection(null));

svg.append("path")
    .datum(topojson.merge(topology, topology.objects.voronoi.geometries.filter(function(d, i) { return i & 1; })))
    .attr("class", "voronoi-cell")
    .attr("d", d3.geo.path().projection(null));

svg.append("g")
    .attr("class", "voronoi-site")
  .selectAll("circle")
    .data(points)
  .enter().append("circle")
    .attr("r", 2.5)
    .attr("transform", function(d) { return "translate(" + d + ")"; });

</script>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Planets</title>
        <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

        <style>
        body {font-family: monospace; line-height: 160%; font-size: 18px; max-width: 80%; margin: 0;}
        ul {display: block; position: fixed; left: 10px; top: 10px;}
        </style>

    </head>
    <body>
        <script type="text/javascript">

        var dataset = // embedded json , data from http://www.enchantedlearning.com/subjects/astronomy/age.shtml
        [
            { "planet": "Mercury", "age" : 87.96, "colour" : "grey" },
            { "planet": "Venus", "age" : 224.68, "colour" : "purple" },
            { "planet": "Earth", "age" : 365.26, "colour" : "blue" },
            { "planet": "Mars", "age" : 686.98, "colour" : "red" },
            { "planet": "Jupiter", "age" : 4332.7141, "colour" : "green" },
            { "planet": "Saturn", "age" : 10759.0986, "colour" : "red" },
            { "planet": "Uranus", "age" : 30707.4082, "colour" : "white" },
            { "planet": "Neptune", "age" : 60198.5006, "colour" : "yellow" },
        ];

        var list = d3.select("body").append("ul").selectAll("ul")
                     .data(dataset)
                     .enter()
                     .append("li")
                     .text(function (d) {
                        return d["planet"] + " is :" + d["age"];
                     });



        // width and height
            var w = 900;
            var h = 500;

            var x = d3.scale.linear()
                            .domain([0, d3.max(dataset, function(d) { return d.age; })])
                            .range([0, h]);

            var svg = d3.select("body")
                        .append("svg")
                        .attr("width", w)
                        .attr("height", h)

            var circles = svg.selectAll("circle")
                            .data(dataset)
                            .enter()
                            .append("circle");

 // ************ just to move the circles on mouse over ************                          

            // d3.selection.prototype.moveToFront = function() {
            //   return this.each(function(){
            //   this.parentNode.appendChild(this);
            //   });
            // };

            d3.selection.prototype.moveToBack = function() { 
                return this.each(function() { 
                    var firstChild = this.parentNode.firstChild; 
                    if (firstChild) { this.parentNode.insertBefore(this, firstChild); } }); 
            };

 // ************ end circles on mouse over ************   



            circles.attr("cx", function(d, i) {
                        return (i * 88) + 10;
                    })
                   .attr("cy", h/2 +10)
                   .attr('fill-opacity', 0.8)
                   .attr("r", function(d, i) {
                        return x(d.age) /2.2;
                   })
                   .style("fill", function(d) { 
                        return d.colour; 
                   });

            circles.on("mouseover",function(){ // trigger mouse circles
                          var sel = d3.select(this)
                          sel.moveToBack();
                        });

    </script>



    </body>
</html><!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Json</title>
        <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

        <style>
        body {font-family: monospace; line-height: 160%; font-size: 16px; max-width: 90%; margin: 10px auto;}

        </style>

    </head>
    <body>

    <h3>Earth days to orbit our sun</h3>

    <script>

        var dataset = // embedded json , data from http://www.enchantedlearning.com/subjects/astronomy/age.shtml
        [
            { "planet": "Mercury", "age" : 87.96, "colour" : "grey" },
            { "planet": "Venus", "age" : 224.68, "colour" : "purple" },
            { "planet": "Earth", "age" : 365.26, "colour" : "blue" },
            { "planet": "Mars", "age" : 686.98, "colour" : "red" },
            { "planet": "Jupiter", "age" : 4332.7141, "colour" : "green" },
            { "planet": "Saturn", "age" : 10759.0986, "colour" : "yellow" },
            { "planet": "Uranus", "age" : 30707.4082, "colour" : "pink" },
            { "planet": "Neptune", "age" : 60198.5006, "colour" : "black" },
        ];

        // width and height
        var w = 900;
        var h = 500;

        var x = d3.scale.linear()
                        .domain([0, d3.max(dataset, function(d) { return d.age; })])
                        .range([0, h]);


        var theCanvas = d3.select("body")
                    .append("svg")
                    .attr("width", w)
                    .attr("height", h);

        var bars = theCanvas.selectAll("rect")
                    .data(dataset)
                    .enter()
                    .append("rect")
                        .attr("width", function(d) {
                            return x(d.age);
                        })
                        .attr("fill", function(d) {
                            if (d["age"] <= 366) { 
                                return "red"; 
                                } else {
                                return "black";
                                }
                        })
                        .attr("height", 16)
                        .attr("y", function (d, i) {
                            return i * 25;
                        });

//Add the SVG Text Element to the svgContainer
        var text = theCanvas.selectAll("text")
                    .data(dataset)
                    .enter()
                    .append("text");

//Add SVG Text Element Attributes
        var textLabels = text
                    .attr("x", function(d) { return x(d.age) + 10; })
                    .attr("y", function (d, i) {
                            return i * 25 + 14;
                        })
                    .text( function (d) { return d["planet"] + " takes " + d["age"]; })
                    .attr("font-family", "monospace")
                    .attr("font-size", "14px")
                    .attr("fill", "black");



    </script>




    </body>
</html><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Input to create SVG shape</title>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js"></script>

    <style>
        body {font-family: monospace; line-height: 160%; font-size: 18px; }
        input {border: 1px dotted #ccc; background: white; font-family: monospace; padding: 10px 20px; font-size: 18px; margin: 20px 10px 20px 0; color: red;}
        input:focus { background-color:yellow; outline: none;}
        #myRadius {max-width: 35px}
        form {display: block; position: fixed; left: 10px; top: 10px; background: transparent; ;}
    </style>
</head>
    <body>



    <form name="myform" onSubmit="return handleClick()">
        <input name="Submit"  type="submit" value="Radius" />
        <input type="text" id="myRadius" maxlength="" />
    </form>


    <script>
        
        
        // width and height
        var w = 900;
        var h = 500;


        var mySVG = d3.select("body")
            .append("svg:svg")
            .attr("width", w)
            .attr("height", h);

        function handleClick(event){
            console.log(document.getElementById("myRadius").value)
            draw(document.getElementById("myRadius").value)
            return false;
        }

        function draw(rad){
            mySVG.append("svg:circle")
            .style("fill", "red")
            .attr("opacity", 0.4)
            .attr("r", rad)
            .attr("cx", Math.round(Math.random()*w))
            .attr("cy", Math.round(Math.random()*h))
        }

    </script>


    </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
	body {
		font: 10px sans-serif;
		shape-rendering: crispEdges;
	}
  
	.grid-background {
		fill: #ddd;
	}

	.grid line {
		stroke: #fff;
	}

	.grid .minor line {
		stroke-opacity: .5;
		stroke: red;
	}

	.grid .minor-minor line {
		stroke-opacity: .5;
		stroke: blue;
	}

	.grid text {
		display: none;
	}

	.axis line {
		stroke: #fff;
	}

	.axis text {
		fill: #000;
	}

	.axis path,
	.grid path {
		display: none;
	}
</style>
<body>
	<input type="range" min="20" max="1000" value="80" onchange="sliderChange()"/>
	<label></label>
</body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>
	function sliderChange() {
		var v = d3.select('input')[0][0].value;

		d3.select('label').text(v);

		x.domain([1, v]);
		redraw();
	}

	function redraw() {
		fakeAxisGroup
				.attr("class", "grid")
				.attr("transform", "translate(0," + height + ")")
				.call(d3.svg.axis().orient('bottom').scale(x).ticks(12))
				.selectAll(".tick")
				.select('line')
				.attr('y1', function (d, i) {
					if ((i + 1) % 4)
						return -25;
					else
						return 0;
				})
				.attr('y2', function (d, i) {
					if ((i + 1) % 2)
						return -18;
					if ((i + 1) % 4)
						return 10;
					else
						return 0;
				});

		realAxisGroup
				.attr("class", "axis")
				.attr("transform", "translate(0,0)")
				.call(d3.svg.axis().orient('bottom').scale(x).ticks(4).tickSize(18));
	}

	var margin = {top: 0, right: 10, bottom: 25, left: 10},
			width = 960 - margin.right - margin.left,
			height = 50 - margin.top - margin.bottom;

	var x = d3.scale.linear()
			.domain([1, d3.select('input')[0][0].value])
			.range([0, width]);

	var y = d3.scale.linear()
			.range([0, height]);

	var svg = d3.select("body").append("svg")
			.attr("width", width + margin.right + margin.left)
			.attr("height", height + margin.top + margin.bottom)
			.append("g")
			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

	svg.append("rect")
			.attr("class", "grid-background")
			.attr('y', 0)
			.attr("width", width)
			.attr("height", height + 20);

	var fakeAxisGroup = svg.append("g");
	var realAxisGroup = svg.append("g");
	sliderChange();
</script><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Making a table from matrix</title> <!-- based on http://bost.ocks.org/mike/nest/ -->
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

    <style>
    body {font-family: monospace; line-height: 160%; font-size: 18px; margin: 0;}
    table {
      border-collapse: collapse;
      border-spacing: 0;
    }
    th, td {
  padding: 1rem;
  text-align: right;
  border: 1px dotted #ccc;
}
    </style>

</head>

<body>

    <script>

    var matrix = [
      [ 0,  1,  2,  3],
      [ 4,  5,  6,  7],
      [ 8,  9, 10, 11],
      [12, 13, 14, 15],
      [16, 17, 18, 19, 20],
      [21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
    ];

    // selecting the body
    var body = d3.select("body");

    // append a table element to the body
    var table = body.append("table");

    // append entering rows to the table via data-join (Since selectAll is called on the selected table element, it establishes a new parent node of table instead of the default html)
    var tr = table.selectAll("tr")
            .data(matrix)
            .enter()
            .append("tr");

    // append entering cells to each row
    var td = tr.selectAll("td")
            .data(function(d) { return d; })
            .enter()
            .append("td");


    // add content from the dataset
    var content = td.text(function(d) { return d; });

    // manipulate colour of specific cells and rows: j is row ,and i is column
    td.style("color", function(d, i, j) { return (j<2 && i<2 ) ? null : "red"; });

        
    </script>

</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Interactive Scatterplot</title>
    
    <!-- Load the Chiasm stack. -->
    <script src="http://curran.github.io/model/cdn/model-v0.2.4.js"></script>
    <script src="http://chiasm-project.github.io/chiasm-component/chiasm-component-v0.2.3.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
    <script src="http://chiasm-project.github.io/chiasm/chiasm-v0.3.0.js"></script>
    <script src="http://chiasm-project.github.io/chiasm-layout/chiasm-layout-v0.2.2.js"></script>
    <script src="http://chiasm-project.github.io/chiasm-dataset-loader/chiasm-dataset-loader-v0.3.1.js"></script>
    <script src="http://chiasm-project.github.io/chiasm-links/chiasm-links-v0.2.1.js"></script>
    <script src="http://chiasm-project.github.io/chiasm-charts/chiasm-charts-v0.1.0.js"></script>
        
    <!-- Make the container fill the page and have a 20px black border. -->
    <style>

      body {
        background-color: black;
      }

      #chiasm-container {
        background-color: white;
        position: fixed;
        left: 20px;
        right: 20px;
        top: 20px;
        bottom: 20px;
      }

      .axis {
        font: 0.8em sans-serif;
      }

      .axis path,
      .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
      }

      /* Custom CSS for axis labels. */
      .axis-label {
        text-anchor: middle;
        font-size: 2em;
      } 
    </style>
  </head>
  <body>

    <!-- Chiasm component DOM elements will be injected into this div. -->
    <div id="chiasm-container"></div>
    
    <!-- Define a custom Chaism component for selecting columns. -->
    <script>
      function ColumnSelector() {

        var my = ChiasmComponent();

        var div = my.initDIV();
        var select = d3.select(div).append("select");

        var supportedTypes = [{
          type: "number",
          interval: false
        }];

        my.when(["dataset", "selected"], function (dataset, selected){

          var columns = dataset.metadata.columns.filter(function (column){
            return supportedTypes.some(function (supported){
              return (
                (supported.type === column.type)
                &&
                ((!!supported.interval) === (!!column.interval))
              );
            });
          });

          var options = select.selectAll(".column-option").data(columns);
          options.enter().append("option").attr("class", "column-option");
          options.exit().remove();
          options
            .attr("value", function (d){ return d.name; })
            .text(function (d){ return d.label; });

          select.node().value = selected;

          // TODO get rid of this hack.
          // https://github.com/chiasm-project/chiasm-charts/issues/13
          my.selectedLabel = dataset.metadata.columns.filter(function (d){
            return d.name === selected;
          })[0].label;
        });

        select.on("change", function (){
          my.selected = this.value;
          console.log("d");
        });
        

        return my;
      }
      

    </script>
    
    <!-- This is the main program that sets up the Chiasm application. -->
    <script>

      // Create a new Chiasm instance.
      var chiasm = new Chiasm();

      // Register plugins that the configuration can access.
      chiasm.plugins.layout = ChiasmLayout;
      chiasm.plugins.links = ChiasmLinks;
      chiasm.plugins.datasetLoader = ChiasmDatasetLoader;
      chiasm.plugins.scatterPlot = ChiasmCharts.components.scatterPlot;
      chiasm.plugins.columnSelector = ColumnSelector;

      // Set the Chaism configuration.
      chiasm.setConfig({
        "layout": {
          "plugin": "layout",
          "state": {
            "containerSelector": "#chiasm-container",
            "layout": {
              "orientation": "vertical",
              "children": [
                {
                  "orientation": "horizontal",
                  "size": "15px",
                  "children": [
                    "yColumnSelector",
                    "xColumnSelector"
                  ]
                },
                "vis"
              ]
            }
          }
        },
        "loader": {
          "plugin": "datasetLoader",
          "state": {
            "path": "auto-mpg"
          }
        },
        "vis": {
          "plugin": "scatterPlot",
          "state": {
            "xColumn": "mpg",
            "yColumn": "weight",
            "xAxisLabelTextOffset": 40,
            "yAxisLabelTextOffset": 50,
            "margin": { top: 10, right: 10, bottom: 50, left: 80 },

            // TODO get rid of this hack.
            // https://github.com/chiasm-project/chiasm-charts/issues/13
            "xAxisLabelText": "Sepal Length",
            "yAxisLabelText": "Petal Length"
          }
        },
        "xColumnSelector": { "plugin": "columnSelector" },
        "yColumnSelector": { "plugin": "columnSelector" },
        "myLinks": {
          "plugin": "links",
          "state": {
            "bindings": [
              "loader.dataset -> vis.dataset",
              "loader.dataset -> xColumnSelector.dataset",
              "loader.dataset -> yColumnSelector.dataset",

              "vis.xColumn <-> xColumnSelector.selected",
              "vis.yColumn <-> yColumnSelector.selected",

              // TODO get rid of this hack.
              // https://github.com/chiasm-project/chiasm-charts/issues/13
              "xColumnSelector.selectedLabel -> vis.xAxisLabelText",
              "yColumnSelector.selectedLabel -> vis.yAxisLabelText"
            ]
          }
        }
      }); 
      
      chiasm.getComponent("myScatterPlot").then(function (scatterPlotDataLoader){
        console.log(scatterPlotDataLoader)
        scatterPlotDataLoader.when("dataset", function(dataset){
          console.log(dataset)
        });
      });

    </script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
 
svg {
  font: 10px sans-serif;
}
 
.line {
  fill: none;
  stroke: #0066FF;
  stroke-width: 3.5px;
}
 
.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

h1 {
font-family:helvetica neue;
}


 .y.axis { font-family: sans-serif; font-size: 20px; }
 
</style>
<body>
<h1>135,330,120 clicks on our client's campaigns in 2013</h1>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
var data = [553672,
626023,
404467,
325756,
399585,
374168,
311477,
320624,
337161,
321094,
280684,
390855,
422791,
433126,
327826,
344636,
346588,
378701,
437265,
427807,
350518,
332586,
342963,
320510,
305064,
390883,
394665,
358944,
387024,
393851,
379535,
344658,
409317,
437981,
386410,
363412,
384581,
374330,
348301,
366788,
403753,
402186,
368865,
381656,
352761,
346346,
363903,
390527,
386553,
356947,
428834,
386484,
351992,
400338,
415884,
398865,
370020,
377716,
372311,
332145,
395260,
423626,
375384,
362238,
408824,
374577,
367980,
449482,
440343,
381030,
394610,
408472,
377185,
379824,
450156,
444622,
388900,
408993,
416397,
425468,
534608,
664390,
487976,
437760,
572469,
522363,
462161,
509417,
534952,
391387,
374928,
427847,
406659,
386792,
367014,
413266,
391036,
374139,
388989,
389857,
375995,
331435,
349055,
338909,
335862,
339799,
359215,
333682,
303893,
302075,
331758,
347650,
364729,
351807,
333804,
307639,
309811,
280235,
334660,
319503,
284878,
265599,
281121,
268209,
210400,
255311,
312294,
327881,
312064,
300020,
289839,
277386,
322488,
379337,
382207,
343395,
344619,
290653,
256312,
327460,
342382,
327399,
320065,
380907,
338654,
234937,
324303,
489880,
374908,
352615,
353000,
302337,
262511,
305803,
305377,
337485,
321456,
390367,
368307,
248425,
340259,
451888,
406020,
354665,
404715,
493970,
276839,
336747,
354305,
441169,
411875,
537974,
537293,
350743,
389662,
667656,
345471,
339260,
349611,
294183,
264862,
335111,
284468,
271463,
252800,
222487,
198833,
186985,
235237,
234448,
238546,
218376,
211837,
185890,
196842,
280810,
273202,
262798,
260802,
308091,
347038,
242954,
290846,
340715,
348313,
474915,
659873,
592323,
326646,
415194,
403143,
386907,
337069,
349042,
395350,
317796,
361224,
445624,
329891,
266778,
265539,
285109,
289905,
332994,
316084,
322227,
315827,
309502,
264222,
250117,
324060,
334377,
337006,
328770,
302502,
302602,
237099,
258146,
396282,
413520,
409280,
371714,
330254,
309700,
395745,
378305,
358494,
323715,
410982,
317182,
302088,
378839,
378098,
346152,
334683,
387387,
336086,
304004,
327321,
347458,
346633,
338474,
346852,
345079,
294086,
352127,
353864,
411440,
395464,
395360,
420169,
418291,
511183,
436275,
445209,
656392,
575337,
1207107,
577985,
590220,
442073,
537787,
542609,
756159,
1194606,
744050,
627419,
445659,
429204,
395684,
398105,
486457,
501008,
533887,
472853,
473385,
426022,
461803,
500456,
451213,
468435,
440903,
467996,
357939,
353162,
433483,
317172,
335177,
374969,
395053,
394465,
426082,
399839,
347983,
337600,
375561,
414266,
380393,
474926,
441650,
359324,
344692,
401966,
396800,
342165,
295551,
315111,
313151,
305143,
322248,
313584,
285907,
304275,
321269,
293012,
286201,
319631,
336180,
366503,
283462,
291153,
258760,
252357,
274358,
267071,
229167,
242720,
283566,
254186,
243463,
267161,
300014,
255528,
269258,
303232,
233235,
285130,
296931,
277288,
371855,
434418,
437144,
392856,
379740,
474902];
 

 
var margin = {top: 20, right: 60, bottom: 20, left: 120},
    width = 1200 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;
 
 
 var mindate = new Date(2013,0,1),
            maxdate = new Date(2013,10,31);
 
 
   var x = d3.scale.linear()
    .domain([0, 364])
    .range([0, width*4]);
    
  var x2 = d3.time.scale()
    .domain([mindate, maxdate])
    .range([0, width*4]);
    
      
    
 
var y = d3.scale.linear()
    .domain([0, 1200000])
    .range([height, 0]);
 
var line = d3.svg.line()
.interpolate("basis")
    .x(function(d, i) { return x(i); })
    .y(function(d, i) { return y(d); });
 
var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
 
svg.append("defs").append("clipPath")
    .attr("id", "clip")
  .append("rect")
    .attr("width", width)
    .attr("height", height);
 
 
svg.append("g")
    .attr("class", "y axis")
    .call(d3.svg.axis().scale(y).orient("left").ticks(8));
    
    
    
var xaxis = svg.append("g")
    .attr("class", "x axis")
    .call(d3.svg.axis().scale(x2).orient("bottom").ticks(52))
    .attr("transform", "translate(0," + height + ")");
 
var path = svg.append("g")
    .attr("clip-path", "url(#clip)")
  .append("path")
    .datum(data)
    .attr("class", "line")
    .attr("d", line)
    .attr("transform", "translate(" + x2(mindate)  +  ",0)");
 

 

 
// redraw the line, and slide it to the left
  path
    .transition()
      .duration(40000)
      .ease("linear")
      .attr("transform", "translate("  +((800-(width*4)))  +  ",0)");
     
 
xaxis.transition()
.duration(40000)
.ease("linear")
.attr("transform", "translate(" + x(-293)+ "," + height + ")");
     
 
</script>
<!DOCTYPE html> 
<script>
top.location = "http://bl.ocks.org/3048450";
</script>
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Leaflet Image</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
  #snap {position: absolute; bottom: 10px; left: 10px; z-index: 99;}
</style>
</head>
<body>


    <script src='//api.tiles.mapbox.com/mapbox.js/plugins/leaflet-image/v0.0.3/leaflet-image.js'></script>

    <button id='snap'>Map Snapshot</button>
    <div id='images' style='float: right;'></div>
    <div id='map' style='width: 70%;'></div>

    <script type="text/javascript">
        var map = L.mapbox.map('map', 'faraday2.hi7p6kfl', {
            center: [44.5, -73.2],
            zoom: 12
        });

        document.getElementById('snap').addEventListener('click', function() {
            leafletImage(map, doImage);
        });

        //var box2d = map.getBounds();

        function doImage(err, canvas) {
            var img = document.createElement('img');
            var dimensions = map.getSize();
            imgRatio = dimensions.x / dimensions.y;
            img.width = 300;
            img.height = 300 / imgRatio;
            img.src = canvas.toDataURL();
            document.getElementById('images').innerHTML = '';
            document.getElementById('images').appendChild(img);
        }
    </script>


</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Leaflet Image</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
  #snap {position: absolute; bottom: 10px; left: 10px; z-index: 99;}
  #extentMap {width:300px;height:200px;position:absolute;z-index:98;top:10px;right:10px;}
</style>
</head>
<body>


    <script src='//api.tiles.mapbox.com/mapbox.js/plugins/leaflet-image/v0.0.3/leaflet-image.js'></script>

    <button id='snap' onClick='doImage()'>Map Snapshot</button>
    <div id='map' style='width: 70%;'></div>
    <div id='extentMap'></div>

    <script type="text/javascript">
        var map = L.mapbox.map('map', 'faraday2.hi7p6kfl', {
            center: [44.5, -73.2],
            zoom: 12
        });

        function doImage() {
            var extentMap = L.mapbox.map('extentMap', 'faraday2.hi7p6kfl', {
                zoomControl: false,
                infoControl: false,
                keyboard: false,
                center: map.getCenter(),
                zoom: map.getZoom() - 2
            });

            extentMap.dragging.disable();
            extentMap.touchZoom.disable();
            extentMap.doubleClickZoom.disable();
            extentMap.scrollWheelZoom.disable();
            if (extentMap.tap) extentMap.tap.disable();
            console.log(map.getBounds()._northEast.lat);
            var extentPoly = {
                "type": "Feature",
                "properties": {
                    "name": "viewport"
                },
                "geometry": {
                    "type": "Polygon",
                    "coordinates": [[
                        [ map.getBounds()._northEast.lng, map.getBounds()._northEast.lat ],
                        [ map.getBounds()._northEast.lng, map.getBounds()._southWest.lat ],
                        [ map.getBounds()._southWest.lng, map.getBounds()._southWest.lat ],
                        [ map.getBounds()._southWest.lng, map.getBounds()._northEast.lat ],
                        [ map.getBounds()._northEast.lng, map.getBounds()._northEast.lat ]
                    ]]
                }
            };
            console.log(extentPoly);
            L.geoJson(extentPoly, {
                style: function (feature) {
                    return {
                      color: '#49ada6',
                      weight: 3,
                      fillColor: '#e9d362',
                      opacity: 0.8,
                      fillOpacity: 0.3,
                      clickable: false
                    };
                }
            }).addTo(extentMap);
        }
    </script>


</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Leaflet Image</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
  #snap {position: absolute; bottom: 10px; left: 10px; z-index: 99;}
  #extentMap {width:300px;height:200px;position:absolute;z-index:98;top:10px;right:10px;}
</style>
</head>
<body>


    <script src='//api.tiles.mapbox.com/mapbox.js/plugins/leaflet-image/v0.0.3/leaflet-image.js'></script>

    <button id='snap' onClick='doImage()'>Map Snapshot</button>
    <div id='map' style='width: 70%;'></div>
    <div id='extentMap'></div>

    <script type="text/javascript">
    // the main map
        var map = L.mapbox.map('map', 'faraday2.hi7p6kfl', {
            center: [44.5, -73.2],
            zoom: 12
        });

        function doImage() {
            // build a new map
            var extentMap = L.mapbox.map('extentMap', 'faraday2.hi7p6kfl', {
                zoomControl: false,
                infoControl: false,
                keyboard: false
            });

            // make it a de facto static image
            extentMap.dragging.disable();
            extentMap.touchZoom.disable();
            extentMap.doubleClickZoom.disable();
            extentMap.scrollWheelZoom.disable();
            if (extentMap.tap) extentMap.tap.disable();
            console.log(map.getBounds()._northEast.lat);

            // This is a dummy geojson polygon - see below for actual use
            var extentPoly = {
              "type": "Feature",
              "properties": {
                "name": "South End"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      -73.21244650194815,
                      44.47368741905497
                    ],
                    [
                      -73.2121871806626,
                      44.47368741905497
                    ],
                    [
                      -73.2116685380915,
                      44.47368741905497
                    ],
                    [
                      -73.21140921680595,
                      44.47368741905497
                    ],
                    [
                      -73.2085566826649,
                      44.47272589183224
                    ],
                    [
                      -73.20816770073658,
                      44.468719357881255
                    ],
                    [
                      -73.2066117730233,
                      44.46807828692569
                    ],
                    [
                      -73.2066117730233,
                      44.46647557873272
                    ],
                    [
                      -73.20777871880827,
                      44.464712548893786
                    ],
                    [
                      -73.20790837945104,
                      44.46327003032951
                    ],
                    [
                      -73.20816770073658,
                      44.45942313989569
                    ],
                    [
                      -73.20829736137937,
                      44.45862167248458
                    ],
                    [
                      -73.20868634330768,
                      44.45525538922287
                    ],
                    [
                      -73.20868634330768,
                      44.45365232898502
                    ],
                    [
                      -73.20894566459323,
                      44.4526904717197
                    ],
                    [
                      -73.20907532523601,
                      44.450606393298244
                    ],
                    [
                      -73.20946430716432,
                      44.44627768510204
                    ],
                    [
                      -73.21516937544641,
                      44.44627768510204
                    ],
                    [
                      -73.21841089151577,
                      44.44675866852127
                    ],
                    [
                      -73.22528290558282,
                      44.44691899544759
                    ],
                    [
                      -73.23085831322213,
                      44.447720623478354
                    ],
                    [
                      -73.2304693312938,
                      44.45301109256836
                    ],
                    [
                      -73.22463460236894,
                      44.457018704658225
                    ],
                    [
                      -73.22178206822791,
                      44.46086575351217
                    ],
                    [
                      -73.21841089151577,
                      44.46278918288705
                    ],
                    [
                      -73.21841089151577,
                      44.4653536568142
                    ],
                    [
                      -73.21685496380249,
                      44.466635851532274
                    ],
                    [
                      -73.21685496380249,
                      44.46887962452
                    ],
                    [
                      -73.21568801801752,
                      44.47128357129413
                    ],
                    [
                      -73.21685496380249,
                      44.47272589183224
                    ],
                    [
                      -73.21516937544641,
                      44.473527165617995
                    ],
                    [
                      -73.21244650194815,
                      44.47368741905497
                    ]
                  ]
                ]
              }
            };

            //style the polygon for overlay and add it
            var poly = L.geoJson(extentPoly, {
                style: function (feature) {
                    return {
                      color: '#49ada6',
                      weight: 3,
                      fillColor: '#e9d362',
                      opacity: 0.8,
                      fillOpacity: 0.3,
                      clickable: false
                    };
                }
            }).addTo(extentMap);

            // fit the map to the rough extent of the polygon
            // to get the active polygon, better to use something like:
            // map.fitBounds(e.target.getBounds());
            extentMap.fitBounds(poly.getBounds());
        }
    </script>


</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

.land {
  fill: #ddd;
}

.border {
  fill: none;
  stroke: #fff;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.bubble {
  fill: brown;
  fill-opacity: .5;
  stroke: #fff;
  stroke-width: .5px;
}

.bubble :hover {
  stroke: #000;
}

.legend circle {
  fill: none;
  stroke: #ccc;
}

.legend text {
  fill: #777;
  font: 10px sans-serif;
  text-anchor: middle;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var formatNumber = d3.format(",.0f");

var path = d3.geo.path()
    .projection(null);

var radius = d3.scale.sqrt()
    .domain([0, 1e6])
    .range([0, 15]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var legend = svg.append("g")
    .attr("class", "legend")
    .attr("transform", "translate(" + (width - 50) + "," + (height - 20) + ")")
  .selectAll("g")
    .data([1e6, 5e6, 1e7])
  .enter().append("g");

legend.append("circle")
    .attr("cy", function(d) { return -radius(d); })
    .attr("r", radius);

legend.append("text")
    .attr("y", function(d) { return -2 * radius(d); })
    .attr("dy", "1.3em")
    .text(d3.format(".1s"));

d3.json("us.json", function(error, us) {
  if (error) throw error;

  svg.append("path")
      .datum(topojson.feature(us, us.objects.nation))
      .attr("class", "land")
      .attr("d", path);

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "border border--state")
      .attr("d", path);

  svg.append("g")
      .attr("class", "bubble")
    .selectAll("circle")
      .data(topojson.feature(us, us.objects.counties).features
        .sort(function(a, b) { return b.properties.population - a.properties.population; }))
    .enter().append("circle")
      .attr("transform", function(d) { return "translate(" + path.centroid(d) + ")"; })
      .attr("r", function(d) { return radius(d.properties.population); })
    .append("title")
      .text(function(d) {
        return d.properties.name
            + "\nPopulation " + formatNumber(d.properties.population);
      });
});

d3.select(self.frameElement).style("height", height + "px");

</script>

<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Uranium Ores & Concentrates </title>
	<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
</head>
<body>
<hr>
	<h1>Uranium Ores & Concentrates: USA production in metric tons by year (2000-2010).</h1>
<hr>
	<svg width="1100" height="210">
		<circle cx="100" cy="100" r="100" fill="gold" />
		<circle cx="100" cy="100" r="50" fill="pink" />
		<circle cx="310" cy="100" r="100" fill="pink" />
		<circle cx="310" cy="100" r="50" fill="gold" />
		<circle cx="520" cy="100" r="100" fill="gold" />
		<circle cx="520" cy="100" r="50" fill="pink" />
		<circle cx="730" cy="100" r="100" fill="pink" />
		<circle cx="730" cy="100" r="50" fill="gold" />
		<circle cx="940" cy="100" r="100" fill="gold" />
		<circle cx="940" cy="100" r="50" fill="pink" />
	</svg>
	<hr>
	<script type="text/javascript">		

		// Define our working SVG area of the page
		var currSVG = d3.select("body")
						.append("svg")
						.attr("width",1100)
						.attr("height",400)
						.attr("background", "pink");

			//Load in contents of CSV file
		d3.csv("uranium_production_metric_tons.csv", function(data) {

				//Now CSV contents have been transformed into
				//an array of JSON objects.

				//Log 'data' to the console, for verification.
				// console.log(data);

			var rects = currSVG.selectAll("rect")
					.data(data) // data gets bound
					.enter() // data enters the stage
					.append("rect") //what we are drawing with
				
				rects.attr("fill","gold")
					.attr("x",0) // each bar starts at same x position
					.attr("y", function(d, i){ //"d" here is a single data point, while "i" is the index
					   		return i * 20;
					   		}) // y position set to index time 10 pixel units.
					.attr("width", function(d){
					   		return d.USA/2; // Divide by 2 to make bars fit on screen ... responsive design, ha!
					   		})
					.attr("height",10)
					   .append("title")
					   .text(function(d) {
						return d.USA + " metric tons of uranium ore & concentrate production in " + d.Year;
					   });
		});
	</script>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Leaflet Image</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
  #snap {position: absolute; bottom: 10px; left: 10px; z-index: 99;}
  #extentMap {width:300px;height:200px;position:absolute;z-index:98;top:10px;right:10px;}
</style>
</head>
<body>


    <script src='//api.tiles.mapbox.com/mapbox.js/plugins/leaflet-image/v0.0.3/leaflet-image.js'></script>

    <button id='snap' onClick='doImage()'>Map Snapshot</button>
    <div id='map' style='width: 70%;'></div>
    <div id='extentMap'></div>

    <script type="text/javascript">
    // the main map
        var map = L.mapbox.map('map', 'faraday2.hi7p6kfl', {
            center: [44.5, -73.2],
            zoom: 12
        });

        function doImage() {
            // build a new map
            var extentMap = L.mapbox.map('extentMap', 'faraday2.hi7p6kfl', {
                zoomControl: false,
                infoControl: false,
                keyboard: false
            });

            // make it a de facto static image
            extentMap.dragging.disable();
            extentMap.touchZoom.disable();
            extentMap.doubleClickZoom.disable();
            extentMap.scrollWheelZoom.disable();
            if (extentMap.tap) extentMap.tap.disable();
            console.log(map.getBounds()._northEast.lat);

            // This is a dummy geojson polygon - see below for actual use
            var extentPoly = {"type":"GeometryCollection","geometries":[{"type":"MultiPolygon","coordinates":[[[[-120.62389373779297,34.64110565185547],[-120.62222290039062,35.14305114746094],[-121.26583862304688,35.69248962402344],[-121.47416687011719,36],[-121.86416625976562,36.308326721191406],[-121.94666290283203,36.579994201660156],[-121.76390075683594,36.81249237060547],[-121.90778350830078,36.981101989746094],[-122.15278625488281,36.99860382080078],[-122.37666320800781,37.19554138183594],[-122.48554992675781,37.79083251953125],[-122.91889953613281,38.07321548461914],[-123.10472106933594,38.46110534667969],[-123.30915832519531,38.56999206542969],[-123.71640014648438,38.962493896484375],[-123.79444885253906,39.34748840332031],[-123.73638916015625,39.559715270996094],[-123.86749267578125,39.86915588378906],[-124.32140350341797,40.25444030761719],[-124.37581634521484,40.451934814453125],[-124.14306640625,40.81193542480469],[-124.04415893554688,41.454994201660156],[-124.33944702148438,42.12499237060547],[-124.39666748046875,42.67332458496094],[-124.52194213867188,42.82860565185547],[-124.37777709960938,43.323326110839844],[-124.19695281982422,43.45610046386719],[-124.03916931152344,44.73027038574219],[-123.94444274902344,45.16443634033203],[-123.9091567993164,46.026939392089844],[-124,46.3236083984375],[-123.88249206542969,46.56749725341797],[-124.29804992675781,47.36693572998047],[-124.36221313476562,47.67555236816406],[-124.65471649169922,47.99415588378906],[-124.71278381347656,48.39888000488281],[-124.040283203125,48.19304656982422],[-122.77806091308594,48.09027099609375],[-122.45556640625,47.780548095703125],[-122.60472106933594,47.70054626464844],[-122.5413818359375,47.29777526855469],[-122.3127670288086,47.36998748779297],[-122.41832733154297,47.672218322753906],[-122.28943634033203,47.960548400878906],[-122.4760971069336,48.459434509277344],[-122.49749755859375,48.74054718017578],[-122.76029968261719,48.99943542480469],[-120.53472900390625,48.99943542480469],[-117.86749267578125,48.99943542480469],[-116.04833984375,48.999717712402344],[-113.23416137695312,48.99943542480469],[-111.36833190917969,48.99943542480469],[-110.10138702392578,48.99943542480469],[-108.16887664794922,48.99943542480469],[-106.73554992675781,48.99943542480469],[-104.83500671386719,48.99943542480469],[-102.33556365966797,48.99943542480469],[-100.501953125,48.999717712402344],[-98.50222778320312,48.99943542480469],[-97.21994018554688,48.999717712402344],[-95.1541748046875,48.99943542480469],[-95.15278625488281,49.37665557861328],[-94.82194519042969,49.312767028808594],[-94.7066650390625,48.790550231933594],[-94.52389526367188,48.701934814453125],[-93.84249877929688,48.62360382080078],[-93.79306030273438,48.51776885986328],[-93.2449951171875,48.64054870605469],[-91.4183349609375,48.041107177734375],[-90.89805603027344,48.236656188964844],[-90.74082946777344,48.09082794189453],[-90.15638732910156,48.12248992919922],[-89.90388488769531,47.989158630371094],[-89.35665893554688,47.979713439941406],[-88.69166564941406,48.25555419921875],[-88.36805725097656,48.31221008300781],[-86.0513916015625,47.39888000488281],[-84.85694885253906,46.90221405029297],[-84.56500244140625,46.46638488769531],[-84.19276428222656,46.546661376953125],[-83.96278381347656,46.07555389404297],[-83.59611511230469,46.114158630371094],[-83.44776916503906,46.011940002441406],[-83.5977783203125,45.82721710205078],[-82.54306030273438,45.35582733154297],[-82.13027954101562,43.58526611328125],[-82.41877746582031,43.018638610839844],[-82.51333618164062,42.636383056640625],[-83.05194091796875,42.32471466064453],[-83.16860961914062,42.046104431152344],[-83.07194519042969,41.859718322753906],[-82.6966552734375,41.683876037597656],[-82.42527770996094,41.67555236816406],[-81.24916076660156,42.22499084472656],[-80.09695434570312,42.396385192871094],[-78.9869384765625,42.81999206542969],[-79.18472290039062,43.465545654296875],[-78.72471618652344,43.629432678222656],[-76.80194091796875,43.63360595703125],[-76.43472290039062,44.104713439941406],[-75.87998962402344,44.39332580566406],[-75.31777954101562,44.83721160888672],[-74.85028076171875,45.01666259765625],[-74.24916076660156,44.992218017578125],[-71.49415588378906,45.020545959472656],[-71.28056335449219,45.30193328857422],[-70.88612365722656,45.23804473876953],[-70.63194274902344,45.627769470214844],[-70.26333618164062,45.90277099609375],[-70.28778076171875,46.20304870605469],[-70.05055236816406,46.4385986328125],[-70.00917053222656,46.69804382324219],[-69.23249816894531,47.47137451171875],[-68.88778686523438,47.18804168701172],[-68.32305908203125,47.36582946777344],[-67.79499816894531,47.06999206542969],[-67.79110717773438,45.69304656982422],[-67.45388793945312,45.61249542236328],[-67.46501159667969,45.281105041503906],[-67.15943908691406,45.166664123535156],[-66.96888732910156,44.83110809326172],[-67.18693542480469,44.66193389892578],[-67.56527709960938,44.550270080566406],[-68.32115173339844,44.46588134765625],[-68.54750061035156,44.317771911621094],[-68.98500061035156,44.43971252441406],[-69.0675048828125,44.063323974609375],[-69.50306701660156,43.848876953125],[-69.81855010986328,43.90277099609375],[-70.17250061035156,43.780548095703125],[-70.18916320800781,43.575828552246094],[-70.52278137207031,43.350830078125],[-70.78860473632812,42.941375732421875],[-70.85665893554688,42.546104431152344],[-71.04306030273438,42.36998748779297],[-70.713623046875,42.209991455078125],[-70.41082763671875,41.63860321044922],[-70.9263916015625,41.55387878417969],[-71.50527954101562,41.36693572998047],[-72.25167846679688,41.28777313232422],[-72.90638732910156,41.286109924316406],[-73.56221008300781,41.01471710205078],[-74.1986083984375,40.64276885986328],[-74.2691650390625,40.474708557128906],[-73.97610473632812,40.44776916503906],[-73.95222473144531,40.29999542236328],[-74.15306091308594,39.70054626464844],[-74.40556335449219,39.51610565185547],[-74.42027282714844,39.35193634033203],[-74.92388916015625,39.18971252441406],[-75.39666748046875,39.25110626220703],[-75.38833618164062,39.07555389404297],[-75.06388854980469,38.586936950683594],[-75.06806945800781,38.33387756347656],[-75.35499572753906,38.084991455078125],[-75.64639282226562,37.49916076660156],[-75.86805725097656,37.21693420410156],[-76.01806640625,37.2672119140625],[-75.91694641113281,37.60832977294922],[-75.66250610351562,37.840545654296875],[-76.32305908203125,38.492218017578125],[-76.10333251953125,38.8074951171875],[-76.258056640625,39.161376953125],[-75.977783203125,39.389991760253906],[-76.07444763183594,39.55943298339844],[-76.4808349609375,39.298606872558594],[-76.39250183105469,39.010826110839844],[-76.52362060546875,38.854713439941406],[-76.5050048828125,38.531105041503906],[-76.37554931640625,38.37416076660156],[-76.22833251953125,37.87721252441406],[-76.33750915527344,37.62665557861328],[-76.24526977539062,37.495269775390625],[-76.26139831542969,36.958885192871094],[-75.98306274414062,36.907493591308594],[-76.01167297363281,36.183326721191406],[-75.85360717773438,35.97499084472656],[-75.74333190917969,35.61388397216797],[-76.149169921875,35.336936950683594],[-76.45944213867188,35.37165832519531],[-76.64750671386719,34.97804260253906],[-76.32749938964844,34.968048095703125],[-76.50334167480469,34.73304748535156],[-76.6905517578125,34.79999542236328],[-77.08612060546875,34.67610168457031],[-77.68222045898438,34.36554718017578],[-78.01362609863281,33.891937255859375],[-78.60055541992188,33.870826721191406],[-79.13333129882812,33.42193603515625],[-79.20584106445312,33.16554260253906],[-79.52610778808594,33.035552978515625],[-79.98777770996094,32.618324279785156],[-80.2227783203125,32.54083251953125],[-80.46722412109375,32.315826416015625],[-80.8255615234375,32.156654357910156],[-80.85472106933594,31.971939086914062],[-81.12193298339844,31.728607177734375],[-81.26695251464844,31.259719848632812],[-81.53388977050781,30.85055160522461],[-81.25527954101562,29.79666519165039],[-80.96611022949219,29.15304946899414],[-80.60417175292969,28.609718322753906],[-80.75889587402344,28.425552368164062],[-80.38555908203125,27.66860580444336],[-80.0333251953125,26.786663055419922],[-80.13612365722656,25.90555191040039],[-80.30999755859375,25.610828399658203],[-80.42582702636719,25.241104125976562],[-81.08805847167969,25.115550994873047],[-81.1253890991211,25.376941680908203],[-81.336669921875,25.804996490478516],[-81.73658752441406,25.959442138671875],[-81.87527465820312,26.44832992553711],[-82.06416320800781,26.544998168945312],[-82.01722717285156,26.964717864990234],[-82.288330078125,26.828330993652344],[-82.39527893066406,26.95999526977539],[-82.61610412597656,27.553607940673828],[-82.38833618164062,27.825275421142578],[-82.85333251953125,27.855274200439453],[-82.66305541992188,28.43999481201172],[-82.6280517578125,28.846942901611328],[-82.80278015136719,29.15499496459961],[-83.07167053222656,29.224437713623047],[-83.39472961425781,29.520832061767578],[-83.6260986328125,29.869441986083984],[-84.0050048828125,30.09527587890625],[-84.26972961425781,30.09499740600586],[-84.86555480957031,29.73749542236328],[-85.29527282714844,29.688884735107422],[-85.35916137695312,29.894161224365234],[-86.08583068847656,30.303607940673828],[-86.12527465820312,30.43054962158203],[-86.43804931640625,30.496105194091797],[-86.59111022949219,30.415828704833984],[-87.16250610351562,30.519718170166016],[-87.40888977050781,30.452774047851562],[-87.73361206054688,30.23499298095703],[-87.91250610351562,30.414161682128906],[-88.33833312988281,30.403606414794922],[-88.45278930664062,30.319717407226562],[-88.83250427246094,30.41305160522461],[-89.31332397460938,30.308330535888672],[-89.602783203125,30.15471649169922],[-90.20639038085938,30.389163970947266],[-90.40805053710938,30.09305191040039],[-90.1744384765625,30.023887634277344],[-89.81193542480469,30.099163055419922],[-89.81388854980469,29.941940307617188],[-89.3336181640625,29.876384735107422],[-89.75334167480469,29.630828857421875],[-89.46417236328125,29.40304946899414],[-89.01028442382812,29.198604583740234],[-89.15388488769531,29.039997100830078],[-89.47860717773438,29.233604431152344],[-90.02639770507812,29.422496795654297],[-90.06582641601562,29.183330535888672],[-90.44444274902344,29.326107025146484],[-90.70472717285156,29.11471939086914],[-91.27305603027344,29.252777099609375],[-91.26722717285156,29.466938018798828],[-91.5433349609375,29.542774200439453],[-91.62998962402344,29.73916244506836],[-91.899169921875,29.836109161376953],[-92.14862060546875,29.76888656616211],[-92.26722717285156,29.542221069335938],[-92.68777465820312,29.60027313232422],[-93.11833190917969,29.76361083984375],[-93.74276733398438,29.7530517578125],[-94.53472900390625,29.518054962158203],[-94.73167419433594,29.610553741455078],[-95.01583862304688,29.5655517578125],[-94.90278625488281,29.314441680908203],[-95.14083862304688,29.057498931884766],[-95.61361694335938,28.757774353027344],[-96.1280517578125,28.603885650634766],[-96.44194030761719,28.76361083984375],[-96.4022216796875,28.43277359008789],[-96.78083801269531,28.241382598876953],[-97.02305603027344,28.030277252197266],[-97.27972412109375,27.656105041503906],[-97.47500610351562,27.03083038330078],[-97.56471252441406,26.99694061279297],[-97.40194702148438,26.369441986083984],[-97.25279235839844,25.984718322753906],[-97.36723327636719,25.83944320678711],[-97.64805603027344,26.029441833496094],[-98.06639099121094,26.038330078125],[-98.44473266601562,26.22610855102539],[-99.104736328125,26.43499755859375],[-99.26806640625,26.857498168945312],[-99.4586181640625,27.04694366455078],[-99.50279235839844,27.56583023071289],[-99.83555603027344,27.77527618408203],[-100.07139587402344,28.151107788085938],[-100.2791748046875,28.277496337890625],[-100.6683349609375,29.113330841064453],[-101.40501403808594,29.772777557373047],[-102.05473327636719,29.797775268554688],[-102.31111145019531,29.887218475341797],[-102.6702880859375,29.742774963378906],[-102.89584350585938,29.254165649414062],[-103.1541748046875,28.981388092041016],[-104.02362060546875,29.321109771728516],[-104.54362487792969,29.674720764160156],[-104.68028259277344,29.945552825927734],[-104.67500305175781,30.167774200439453],[-104.90055847167969,30.572776794433594],[-105.39306640625,30.865833282470703],[-106.00862121582031,31.39444351196289],[-106.21444702148438,31.475276947021484],[-106.52288055419922,31.78075408935547],[-108.2086181640625,31.78333282470703],[-108.20834350585938,31.333053588867188],[-109.51222229003906,31.333332061767578],[-111.04583740234375,31.333053588867188],[-111.94638061523438,31.623607635498047],[-113.69200897216797,32.16757583618164],[-114.80982971191406,32.506988525390625],[-114.7190933227539,32.71845626831055],[-117.12237548828125,32.53533172607422],[-117.31973266601562,33.10527038574219],[-117.49500274658203,33.34221649169922],[-118.10028076171875,33.7530517578125],[-118.30526733398438,33.71720886230469],[-118.54695129394531,34.05554962158203],[-119.1291732788086,34.11388397216797],[-119.54167175292969,34.414154052734375],[-120.12332153320312,34.47887420654297],[-120.44695281982422,34.45360565185547],[-120.62389373779297,34.64110565185547]]],[[[-74.0050048828125,40.67999267578125],[-73.58944702148438,40.92054748535156],[-72.64723205566406,40.979713439941406],[-72.54277038574219,40.82555389404297],[-73.56111145019531,40.64527130126953],[-74.0050048828125,40.67999267578125]]]]}]};

            //style the polygon for overlay and add it
            var poly = L.geoJson(extentPoly, {
                style: function (feature) {
                    return {
                      color: '#49ada6',
                      weight: 3,
                      fillColor: '#e9d362',
                      opacity: 0.8,
                      fillOpacity: 0.3,
                      clickable: false
                    };
                }
            }).addTo(extentMap);

            // fit the map to the rough extent of the polygon
            // to get the active polygon, better to use something like:
            // map.fitBounds(e.target.getBounds());
            extentMap.fitBounds(poly.getBounds());
        }
    </script>


</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
    <link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300,300italic,700&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
    <meta charset="utf-8" />
    <title>Canadian Cacao?</title>
    <style>
        body {
            background-color: ivory;
            font-family: helvetica, sans-serif;
        }
        
        svg {
            margin: 12px 0 12px 12px;
        }
        
        
        .graphBlock {
            position: absolute;
            top: 110px;
        }
        
        
       #textBlock {
            position: absolute;
            top: 145px;
            left: 590px;
            border-left: 1px solid sienna;
            padding: 0px 12px 0px 16px;
        }
        
        .hangingindent {
            padding-left: 1px ;
            text-indent: -8px ;
        }
        
        .bar {
            fill: sienna;
        }
        
        h1 {
        	margin: 24px 0 0 32px;
        	padding-bottom: 2px;
        	font-weight: bold;
        	font-size: 30px;
        	border-bottom: 4px solid sienna;
        	color: sienna;
        }
        
        
        h2 {
        	margin: 24px 0 0 32px;
        	font-weight: bold;
        	font-size: 20px;
        	color: sienna;
        	min-width: 600px;
        }
        
        h3 {
            color:sienna;
            font-size: 16px;
            margin-bottom: -6px;
            margin-top: 0px;
            padding-top: 3px;  
        }
        
        .intro {
            padding: 0;
            margin: 4px 0 0px 32px;
            font-size: 13px;
            color: black;
            min-width: 600px;
        }
        
        .sidenote {
            line-height: 120%;
            font-size:13px;
            margin-top: 10px;
        }
          
        .source {
            padding: 0;
            margin: 0px 0px 0px 32px;
            font-size: 11px;
            color: black;
            font-style: italic;
            position: absolute;
            top: 380px;
        }
    
        a {
            text-decoration: none;
            color: sienna;
        }

        .axis path,
			.axis line {
				fill: none;
				stroke: #ccc;
				shape-rendering: crispEdges;
			}
			
		.axis text {
				font-family: sans-serif;
				font-size: 10px;
		}

		.y.axis path,
		.y.axis line {
				opacity: 0;
		}
			
		.y.axis text {
			 fill: black;
			 font-size: 12px;
		}
        
    </style>
    <script type="text/javascript" src="d3.v3.js"></script>
</head>

<body>
    <header>
        <h1>Canadian Cacao?</h1>
    </header>
    
    <div id="textBlock">
        <h3 class="hangingindent">&ldquo;Chocolate&rdquo; defined</h3>
        <p class="sidenote">For this dataset, &ldquo;chocolate&rdquo; comprises preparations with sugar, milk, or other fats in bulk form (block, slab, or bar); and sweetened cocoa powder. </p>
        <h3>The power of NAFTA</h3>
        <p class="sidenote">The US Department of Agriculture says that &ldquo;North American Free Trade Agreement partners Canada and Mexico are not only the main destinations for US exports but also the main suppliers of chocolate candy to the US market.&rdquo;  </p>
<p class="sidenote">But that doesn't necessarily mean that Canada's and Mexico's strong presence is <em>because</em> of NAFTA &mdash; does it? </p>
    </div>
    
    <script>
    
        /* 
        The addCommas function is from http://www.mredkj.com/javascript/nfbasic.html. It's used to format the dollar amounts in the titles/tooltips.
        */
        function addCommas(nStr) {
	        nStr += '';
	        x = nStr.split('.');
	        x1 = x[0];
	        x2 = x.length > 1 ? '.' + x[1] : '';
	        var rgx = /(\d+)(\d{3})/;
	        while (rgx.test(x1)) {
		        x1 = x1.replace(rgx, '$1' + ',' + '$2');
	        }
	        return x1 + x2;
        }


        var w = 600;
		var h = 250;
		var padding = [ 15, 60, 25, 110 ];  //Top, right, bottom, left
		
		var widthScale = d3.scale.linear()
					.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
					.rangeRoundBands([ padding[0], h - padding[2] ], 0.15);
					
					
			var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");
        
        d3.select("body").append("h2").attr("style","intro").text("US chocolate imports, 2013, in millions of dollars");
        
        d3.select("body").append("p").attr("class", "intro").text("Import values of chocolate entering US ports and their origin of shipment");

        var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h)
						.attr("class", "graphBlock");
    	
    
        d3.csv("cocoa2_3-final.csv", function(data) {
            
            data.sort(function(a,b) {
                // thank you for the hint about forcing the strings!
                return d3.ascending(+a["2013"], +b["2013"]);
            });
            
            
            widthScale.domain([ 0, d3.max(data, function(d) {
					return +d[2013];
				}) ]);
            
            heightScale.domain(data.map(function(d) { return d.Source; } ));
            
            var rects = svg.selectAll("rect")
								.data(data)
								.enter()
								.append("rect");
								
			rects.attr("x", padding[3])
					.attr("y", function(d) {
						return heightScale(d.Source);
					})
					.attr("width", function(d) {
						return widthScale(d[2013]);
					})
					.attr("height", heightScale.rangeBand())
					.attr("class", "bar")
					.append("title")
					.text(function (d) {
                    var dollarAmount = d[2013] * 1000000;
                    dollarAmount = addCommas(dollarAmount);
                    return  "$" + dollarAmount + " worth of chocolate was imported from " + d["Source"] + ".";
					});					
								
								
				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});				
								
								

	
		 // source line under chart
    // the commented-out lines were part of an aborted attempt
    // to try to add a link to the SVG text
    d3.select("body")
     	.append("p")
     	.attr("class", "source")
     	//.append("a")
     	//.attr("xmlns", "http://www.w3.org/2000/svg")
     	//.attr(":xlink", "http://www.w3.org/1999/xlink")
     	//.attr("version","1.1")
     	.text("Source: USDA, ")
     	.append("a")
     	.attr("href", "http://www.fas.usda.gov/gats")
     	.append("span")
     	.text("www.fas.usda.gov/gats"); 	
            
            
    </script>
</body>
</html>
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8" />
    <title>Kami_Fubuki</title>
    <link rel="stylesheet" href="style.css" />
    <!--[if lt IE 9]>
    <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
</head>
<body>
    <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
    <script src="event.js"></script>
</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSON into tree layout</title> <!-- http://bl.ocks.org/anotherjavadude/2964485 -->
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

    <style>

    body {font-family: monospace; line-height: 160%; font-size: 18px; }

    svg {     
      font: 14px monospace;
      fill       : #333;
    }
    .link {
        fill: none;
        stroke: #eee;
        stroke-width: 1.5px;
    }
    button {border: 1px dotted #ccc; background: white; font-family: monospace; padding: 10px 20px; font-size: 18px; margin: 20px 10px 20px 0; color: red;}
    button:focus { background-color:yellow; outline: none;}
    nav {display: block; position: fixed; left: 10px; top: 10px; background: transparent; ;}
  
    </style>

</head>

<body>

  <nav>
    <button id="tree">Tree</button>
    <button id="cluster">Cluster</button>
  </nav>

  <div id="viz"></div>

  <script type="text/javascript">

      //JSON object with the data
      var treeData = {"name" : "ROOT", "info" : "test", "children" : [
              {"name" : "A", "children" : [ 
                      {"name" : "A 01" }, 
                      {"name" : "A 02" }, 
                      {"name" : "A 03" }, 
                      {"name" : "A 04" }, 
                      {"name" : "A 05" }
                  ] }, 
              {"name" : "B", "children" : [ 
                      {"name" : "B 01" }, 
                      {"name" : "B 02", "children" : [ 
                              {"name" : "B 02.1" }, 
                              {"name" : "B 02.2" }, 
                              {"name" : "B 02.3" }, 
                              {"name" : "B 02.4" }
                          ]}, 
                      {"name" : "B 03" }, 
                      {"name" : "B 04" }, 
                      {"name" : "B 05" }] }, 
              {"name" : "C", "children": [
                      {"name" : "C 01", "children" :[
                              {"name" : "C 01.1" }, 
                              {"name" : "C 01.2" },
                              {"name" : "C 01.3" },
                              {"name" : "C 01.4" },
                              {"name" : "C 01.5" }
                          ]}] },
              {"name" : "D", "children" : [ 
                      {"name" : "D 01" }, 
                      {"name" : "D 02" }, 
                      {"name" : "D 03", "children" : [ 
                              {"name" : "D 03.1" }, 
                              {"name" : "D 03.2" }
                          ]},  
                      {"name" : "D 04" }
                  ] }
          ]};

      // width and height
      var w = 900;
      var h = 500;

      update(2);

      d3.select("#tree")
      .on("click", function(d,i) {
          update(2)});
      d3.select("#cluster")
      .on("click", function(d,i) {
          update(1)});


      function update(type) {
      
          d3.select("svg")
          .remove();

          // Create a svg canvas
          var vis = d3.select("#viz").append("svg:svg")
          .attr("width", w)
          .attr("height", h)
          .append("svg:g")
          .attr("transform", "translate(60, 0)"); 


          if (type==1) 
              var layout = d3.layout.cluster().size([h,w-100]);
          else
              var layout = d3.layout.tree().size([h,w-100]);

          var diagonal = d3.svg.diagonal()
          // change x and y (for the left to right tree)
          .projection(function(d) { return [d.y, d.x]; });

          // Preparing the data for the tree layout, convert data into an array of nodes
          var nodes = layout.nodes(treeData);
          // Create an array with all the links
          var links = layout.links(nodes);

          var link = vis.selectAll("pathlink")
          .data(links)
          .enter().append("svg:path")
          .attr("class", "link")
          .attr("d", diagonal)

          var node = vis.selectAll("g.node")
          .data(nodes)
          .enter().append("svg:g")
          .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })

          // Add the dot at every node
          node.append("svg:circle")
          .attr("r", 1.5);

          // place the name attribute left or right depending if children
          node.append("svg:text")
          .attr("dx", function(d) { return d.children ? -8 : 8; })
          .attr("dy", 3)
          .attr("text-anchor", function(d) { return d.children ? "end" : "start"; })
          .text(function(d) { return d.name; });
      }

  </script>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://d3js.org/topojson.v1.js"></script>
    <script src="http://d3js.org/queue.v1.min.js"></script>
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js'></script>

    <style type="text/css">

      body {
        font-family: Arial, sans-serif;
      }

      .pc {
        fill: #bdbdbd;
        stroke: #fff;
        stroke-width: 0.5px;
      }

      .state {
        fill: none;
        stroke: #636363;
        stroke-width: 1px;
        stroke-linejoin: round;
      }

      #container {
        margin:2%;
        padding:20px;
        border:2px solid #d0d0d0;
        border-radius: 5px;
      }
 
      div.tooltip {
        position: absolute;
        text-align: center;
        padding: 0.5em;
        font-size: 10px;
        color: #222;
        background: #FFF;
        border-radius: 2px;
        pointer-events: none;
        box-shadow: 0px 0px 2px 0px #a6a6a6;
        text-shadow:#f5f5f5 0 1px 0;
      }

      .legend .legend-title {
        text-align: left;
        margin-bottom: 5px;
        font-weight: bold;
        font-size: 90%;
      }
      .legend .legend-scale ul {
        margin: 0;
        margin-bottom: 5px;
        padding: 0;
        float: left;
        list-style: none;
      }
      .legend .legend-scale ul li {
        font-size: 80%;
        list-style: none;
        margin-left: 0;
        line-height: 18px;
        margin-bottom: 2px;
        }
      .legend ul.legend-labels li span {
        display: block;
        float: left;
        height: 20px;
        width: 20px;
        margin-right: 5px;
        margin-left: 0;
      }
      .legend .legend-source {
        font-size: 70%;
        color: #999;
        clear: both;
      }

    </style>
  </head>
  <body onload="sizeChange()">
  
    <div id="container">
      <h1>Parliamentary Constituencies, 2014</h1>
      <div class='legend'>
        <div class='legend-title'>Reservation Status</div>
        <div class='legend-scale'>
        </div>
        <div class='legend-source'>Source: <a href="#link to source">Name of source</a></div>
      </div>
    </div>

      <script type="text/javascript">

        d3.select(window).on("resize", sizeChange);

        //Set d3 scale
        var color_domain = ['GEN','SC','ST'];
        var legend_labels = ['GEN','SC','ST'];
        var color = d3.scale.threshold()
          .domain(color_domain)
          .range(["", "#b2df8a", "#1f78b4","#a6cee3"]);

        //Set tooltip
        var div = d3.select("body").append("div")
         .attr("class", "tooltip")
         .style("opacity", 0);

        //Set d3 projection, path and svg
        var projection = d3.geo.mercator()
            .center([78, 27])
            .scale(1200);

        var path = d3.geo.path()
            .projection(projection);

        var svg = d3.select("#container")
          .append("svg")
          .attr("width", "100%")
          .attr("height","100%")
          .append("g");

        //Wait for data files to download before drawing
        queue()
          .defer(d3.json, "india_pc_2014_simplified.topojson")
          .defer(d3.json, "india_state_2014_simplified.topojson")
          .defer(d3.csv, "results.csv") //sample data
          .await(ready);

        function ready(error, pc, state, data) {

          //Set up for visualizing sample data
          var pairResultWithId = {};
          var pairNameWithId = {};
          data.forEach(function(d) {
            pairResultWithId[d.ST_CODE + d.PC_CODE] = d.Res;
            pairNameWithId[d.ST_CODE + d.PC_CODE] = d.PC_NAME;
          });

          //Drawing pc boundaries
          var pc_geojson = topojson.feature(pc, pc.objects.india_pc_2014);
          svg.selectAll(".pc")
              .data(pc_geojson.features)
              .enter().append("path")
              .attr("class", "pc")
              .attr("d", path)
              .style ( "fill" , function (d) {
                var result = pairResultWithId[d.properties.ST_CODE + d.properties.PC_CODE];
                if (result!='') {return color(result);}
                
              })
              .style("opacity", 0.8)
              .on("mouseover", function(d) {
                 d3.select(this).transition().duration(300).style("opacity", 1);
                 div.transition().duration(300)
                 .style("opacity", 1)
                 div.text(pairNameWithId[d.properties.ST_CODE + d.properties.PC_CODE] + " : " + pairResultWithId[d.properties.ST_CODE + d.properties.PC_CODE])
                 .style("left", (d3.event.pageX) + "px")
                 .style("top", (d3.event.pageY -30) + "px");
              })
              .on("mouseout", function() {
                 d3.select(this)
                 .transition().duration(300)
                 .style("opacity", 0.8);
                 div.transition().duration(300)
                 .style("opacity", 0);
              })
          ;

          //Drawing state boundaries          
          var state_geojson = topojson.feature(state, state.objects.india_state_2014);
          svg.selectAll(".state")
              .data(state_geojson.features)
              .enter().append("path")
              .attr("class", "state")
              .attr("d", path);

        }

        //Set up for drawing html legend elements
        var legend = d3.select('.legend-scale')
          .append('ul')
          .attr('class', 'legend-labels');

        var keys = legend.selectAll('li')
          .data(color_domain);

        keys.enter().append('li')
          .text(function(d, i){ return legend_labels[i];})
          .append('span')
          .style('background', function(d) { return color(d); })
          ;


        //Function called when window is resized
        function sizeChange() {
          d3.select("g").attr("transform", "scale(" + $("#container").width()/1000 + ")");
          $("svg").height($("#container").width()*0.75);
        }



      </script>
  </body>
</html>
<!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://nvd3.org/assets/css/nv.d3.css'>
    
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js' type='text/javascript'></script>
    <script src='http://nvd3.org/assets/lib/fisheye.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 600px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body>
    <div id='chart1ac827533ba' class='rChart nvd3'></div>  
    
    <script type='text/javascript'>
 $(document).ready(function(){
      drawchart1ac827533ba()
    });
    function drawchart1ac827533ba(){  
      var opts = {
 "dom": "chart1ac827533ba",
"width":    600,
"height":    400,
"x": "firstdate",
"y": "numpkg",
"type": "lineChart",
"id": "chart1ac827533ba" 
},
        data = [
 {
 "pkg": "akima",
"firstdate":          10458,
"curdate": "2013-09-16",
"numpkg": 1,
"datechar": "1998-08-20" 
},
{
 "pkg": "tripack",
"firstdate":          10458,
"curdate": "2013-09-16",
"numpkg": 2,
"datechar": "1998-08-20" 
},
{
 "pkg": "ash",
"firstdate":          10702,
"curdate": "2013-02-11",
"numpkg": 3,
"datechar": "1999-04-21" 
},
{
 "pkg": "sgeostat",
"firstdate":          10702,
"curdate": "2013-03-01",
"numpkg": 4,
"datechar": "1999-04-21" 
},
{
 "pkg": "nlme",
"firstdate":          10918,
"curdate": "2014-03-31",
"numpkg": 5,
"datechar": "1999-11-23" 
},
{
 "pkg": "splancs",
"firstdate":          11266,
"curdate": "2013-09-01",
"numpkg": 6,
"datechar": "2000-11-05" 
},
{
 "pkg": "RArcInfo",
"firstdate":          11445,
"curdate": "2011-11-07",
"numpkg": 7,
"datechar": "2001-05-03" 
},
{
 "pkg": "geoR",
"firstdate":          11470,
"curdate": "2012-07-05",
"numpkg": 8,
"datechar": "2001-05-28" 
},
{
 "pkg": "RandomFields",
"firstdate":          11474,
"curdate": "2014-01-21",
"numpkg": 9,
"datechar": "2001-06-01" 
},
{
 "pkg": "fields",
"firstdate":          11530,
"curdate": "2013-12-20",
"numpkg": 10,
"datechar": "2001-07-27" 
},
{
 "pkg": "vegan",
"firstdate":          11571,
"curdate": "2013-12-12",
"numpkg": 11,
"datechar": "2001-09-06" 
},
{
 "pkg": "spatstat",
"firstdate":          11708,
"curdate": "2014-02-18",
"numpkg": 12,
"datechar": "2002-01-21" 
},
{
 "pkg": "pastecs",
"firstdate":          11718,
"curdate": "2014-03-02",
"numpkg": 13,
"datechar": "2002-01-31" 
},
{
 "pkg": "geoRglm",
"firstdate":          11731,
"curdate": "2013-12-13",
"numpkg": 14,
"datechar": "2002-02-13" 
},
{
 "pkg": "deldir",
"firstdate":          11742,
"curdate": "2014-02-02",
"numpkg": 15,
"datechar": "2002-02-24" 
},
{
 "pkg": "spdep",
"firstdate":          11766,
"curdate": "2014-01-31",
"numpkg": 16,
"datechar": "2002-03-20" 
},
{
 "pkg": "RColorBrewer",
"firstdate":          11991,
"curdate": "2011-06-17",
"numpkg": 17,
"datechar": "2002-10-31" 
},
{
 "pkg": "ade4",
"firstdate":          12031,
"curdate": "2013-11-20",
"numpkg": 18,
"datechar": "2002-12-10" 
},
{
 "pkg": "gstat",
"firstdate":          12102,
"curdate": "2014-04-02",
"numpkg": 19,
"datechar": "2003-02-19" 
},
{
 "pkg": "shapefiles",
"firstdate":          12217,
"curdate": "2013-01-26",
"numpkg": 20,
"datechar": "2003-06-14" 
},
{
 "pkg": "maptools",
"firstdate":          12276,
"curdate": "2014-02-19",
"numpkg": 21,
"datechar": "2003-08-12" 
},
{
 "pkg": "mapdata",
"firstdate":          12332,
"curdate": "2013-03-01",
"numpkg": 22,
"datechar": "2003-10-07" 
},
{
 "pkg": "maps",
"firstdate":          12332,
"curdate": "2013-09-06",
"numpkg": 23,
"datechar": "2003-10-07" 
},
{
 "pkg": "ncdf",
"firstdate":          12352,
"curdate": "2011-09-02",
"numpkg": 24,
"datechar": "2003-10-27" 
},
{
 "pkg": "rgdal",
"firstdate":          12382,
"curdate": "2014-02-07",
"numpkg": 25,
"datechar": "2003-11-26" 
},
{
 "pkg": "mapproj",
"firstdate":          12478,
"curdate": "2014-01-16",
"numpkg": 26,
"datechar": "2004-03-01" 
},
{
 "pkg": "spatialCovariance",
"firstdate":          12535,
"curdate": "2013-04-19",
"numpkg": 27,
"datechar": "2004-04-27" 
},
{
 "pkg": "DCluster",
"firstdate":          12551,
"curdate": "2013-01-06",
"numpkg": 28,
"datechar": "2004-05-13" 
},
{
 "pkg": "regress",
"firstdate":          12584,
"curdate": "2013-04-18",
"numpkg": 29,
"datechar": "2004-06-15" 
},
{
 "pkg": "adehabitat",
"firstdate":          12695,
"curdate": "2013-01-11",
"numpkg": 30,
"datechar": "2004-10-04" 
},
{
 "pkg": "Geneland",
"firstdate":          12761,
"curdate": "2014-03-24",
"numpkg": 31,
"datechar": "2004-12-09" 
},
{
 "pkg": "sp",
"firstdate":          12901,
"curdate": "2013-10-24",
"numpkg": 32,
"datechar": "2005-04-28" 
},
{
 "pkg": "MarkedPointProcess",
"firstdate":          12950,
"curdate": "2013-12-05",
"numpkg": 33,
"datechar": "2005-06-16" 
},
{
 "pkg": "gmt",
"firstdate":          13056,
"curdate": "2014-03-12",
"numpkg": 34,
"datechar": "2005-09-30" 
},
{
 "pkg": "tgp",
"firstdate":          13153,
"curdate": "2013-04-04",
"numpkg": 35,
"datechar": "2006-01-05" 
},
{
 "pkg": "spgwr",
"firstdate":          13157,
"curdate": "2013-09-16",
"numpkg": 36,
"datechar": "2006-01-09" 
},
{
 "pkg": "classInt",
"firstdate":          13217,
"curdate": "2013-09-01",
"numpkg": 37,
"datechar": "2006-03-10" 
},
{
 "pkg": "aspace",
"firstdate":          13298,
"curdate": "2012-08-14",
"numpkg": 38,
"datechar": "2006-05-30" 
},
{
 "pkg": "spatialkernel",
"firstdate":          13327,
"curdate": "2013-03-26",
"numpkg": 39,
"datechar": "2006-06-28" 
},
{
 "pkg": "MBA",
"firstdate":          13368,
"curdate": "2010-01-10",
"numpkg": 40,
"datechar": "2006-08-08" 
},
{
 "pkg": "PBSmodelling",
"firstdate":          13390,
"curdate": "2013-04-30",
"numpkg": 41,
"datechar": "2006-08-30" 
},
{
 "pkg": "spgrass6",
"firstdate":          13390,
"curdate": "2013-09-01",
"numpkg": 42,
"datechar": "2006-08-30" 
},
{
 "pkg": "spBayes",
"firstdate":          13422,
"curdate": "2013-11-16",
"numpkg": 43,
"datechar": "2006-10-01" 
},
{
 "pkg": "GeoXp",
"firstdate":          13444,
"curdate": "2013-08-22",
"numpkg": 44,
"datechar": "2006-10-23" 
},
{
 "pkg": "trip",
"firstdate":          13469,
"curdate": "2013-08-25",
"numpkg": 45,
"datechar": "2006-11-17" 
},
{
 "pkg": "spsurvey",
"firstdate":          13555,
"curdate": "2013-09-26",
"numpkg": 46,
"datechar": "2007-02-11" 
},
{
 "pkg": "spatgraphs",
"firstdate":          13573,
"curdate": "2012-09-26",
"numpkg": 47,
"datechar": "2007-03-01" 
},
{
 "pkg": "tripEstimation",
"firstdate":          13600,
"curdate": "2013-07-10",
"numpkg": 48,
"datechar": "2007-03-28" 
},
{
 "pkg": "ads",
"firstdate":          13602,
"curdate": "2014-01-07",
"numpkg": 49,
"datechar": "2007-03-30" 
},
{
 "pkg": "hdeco",
"firstdate":          13635,
"curdate": "2009-02-25",
"numpkg": 50,
"datechar": "2007-05-02" 
},
{
 "pkg": "FieldSim",
"firstdate":          13769,
"curdate": "2010-07-30",
"numpkg": 51,
"datechar": "2007-09-13" 
},
{
 "pkg": "ramps",
"firstdate":          13781,
"curdate": "2013-11-12",
"numpkg": 52,
"datechar": "2007-09-25" 
},
{
 "pkg": "vardiag",
"firstdate":          13807,
"curdate": "2013-05-02",
"numpkg": 53,
"datechar": "2007-10-21" 
},
{
 "pkg": "ecespa",
"firstdate":          13821,
"curdate": "2013-03-13",
"numpkg": 54,
"datechar": "2007-11-04" 
},
{
 "pkg": "GEOmap",
"firstdate":          13901,
"curdate": "2014-01-05",
"numpkg": 55,
"datechar": "2008-01-23" 
},
{
 "pkg": "geomapdata",
"firstdate":          13901,
"curdate": "2012-10-29",
"numpkg": 56,
"datechar": "2008-01-23" 
},
{
 "pkg": "ncf",
"firstdate":          13983,
"curdate": "2013-11-21",
"numpkg": 57,
"datechar": "2008-04-14" 
},
{
 "pkg": "RPyGeo",
"firstdate":          14004,
"curdate": "2012-10-29",
"numpkg": 58,
"datechar": "2008-05-05" 
},
{
 "pkg": "RSAGA",
"firstdate":          14004,
"curdate": "2013-07-24",
"numpkg": 59,
"datechar": "2008-05-05" 
},
{
 "pkg": "glmmBUGS",
"firstdate":          14131,
"curdate": "2014-01-02",
"numpkg": 60,
"datechar": "2008-09-09" 
},
{
 "pkg": "geonames",
"firstdate":          14168,
"curdate": "2009-02-28",
"numpkg": 61,
"datechar": "2008-10-16" 
},
{
 "pkg": "SpatialExtremes",
"firstdate":          14168,
"curdate": "2013-03-04",
"numpkg": 62,
"datechar": "2008-10-16" 
},
{
 "pkg": "RSurvey",
"firstdate":          14304,
"curdate": "2014-01-06",
"numpkg": 63,
"datechar": "2009-03-01" 
},
{
 "pkg": "spatialsegregation",
"firstdate":          14313,
"curdate": "2014-03-09",
"numpkg": 64,
"datechar": "2009-03-10" 
},
{
 "pkg": "spcosa",
"firstdate":          14316,
"curdate": "2013-05-02",
"numpkg": 65,
"datechar": "2009-03-13" 
},
{
 "pkg": "automap",
"firstdate":          14322,
"curdate": "2013-08-29",
"numpkg": 66,
"datechar": "2009-03-19" 
},
{
 "pkg": "ModelMap",
"firstdate":          14331,
"curdate": "2014-03-01",
"numpkg": 67,
"datechar": "2009-03-28" 
},
{
 "pkg": "DSpat",
"firstdate":          14370,
"curdate": "2012-11-07",
"numpkg": 68,
"datechar": "2009-05-06" 
},
{
 "pkg": "RgoogleMaps",
"firstdate":          14371,
"curdate": "2013-09-28",
"numpkg": 69,
"datechar": "2009-05-07" 
},
{
 "pkg": "spatial",
"firstdate":          14372,
"curdate": "2014-03-28",
"numpkg": 70,
"datechar": "2009-05-08" 
},
{
 "pkg": "spatcounts",
"firstdate":          14403,
"curdate": "2009-06-29",
"numpkg": 71,
"datechar": "2009-06-08" 
},
{
 "pkg": "cshapes",
"firstdate":          14469,
"curdate": "2013-05-07",
"numpkg": 72,
"datechar": "2009-08-13" 
},
{
 "pkg": "intamap",
"firstdate":          14515,
"curdate": "2013-11-25",
"numpkg": 73,
"datechar": "2009-09-28" 
},
{
 "pkg": "psgp",
"firstdate":          14516,
"curdate": "2014-02-12",
"numpkg": 74,
"datechar": "2009-09-29" 
},
{
 "pkg": "Guerry",
"firstdate":          14547,
"curdate": "2012-03-24",
"numpkg": 75,
"datechar": "2009-10-30" 
},
{
 "pkg": "UScensus2000cdp",
"firstdate":          14594,
"curdate": "2012-10-29",
"numpkg": 76,
"datechar": "2009-12-16" 
},
{
 "pkg": "UScensus2000tract",
"firstdate":          14594,
"curdate": "2012-10-29",
"numpkg": 77,
"datechar": "2009-12-16" 
},
{
 "pkg": "rworldmap",
"firstdate":          14615,
"curdate": "2013-12-12",
"numpkg": 78,
"datechar": "2010-01-06" 
},
{
 "pkg": "sphet",
"firstdate":          14643,
"curdate": "2013-12-11",
"numpkg": 79,
"datechar": "2010-02-03" 
},
{
 "pkg": "geosphere",
"firstdate":          14649,
"curdate": "2014-01-20",
"numpkg": 80,
"datechar": "2010-02-09" 
},
{
 "pkg": "rangeMapper",
"firstdate":          14651,
"curdate": "2014-02-07",
"numpkg": 81,
"datechar": "2010-02-11" 
},
{
 "pkg": "raster",
"firstdate":          14688,
"curdate": "2014-03-07",
"numpkg": 82,
"datechar": "2010-03-20" 
},
{
 "pkg": "sparr",
"firstdate":          14715,
"curdate": "2013-12-10",
"numpkg": 83,
"datechar": "2010-04-16" 
},
{
 "pkg": "CompRandFld",
"firstdate":          14785,
"curdate": "2013-05-22",
"numpkg": 84,
"datechar": "2010-06-25" 
},
{
 "pkg": "constrainedKriging",
"firstdate":          14819,
"curdate": "2013-10-02",
"numpkg": 85,
"datechar": "2010-07-29" 
},
{
 "pkg": "spacetime",
"firstdate":          14882,
"curdate": "2014-04-01",
"numpkg": 86,
"datechar": "2010-09-30" 
},
{
 "pkg": "plotGoogleMaps",
"firstdate":          14955,
"curdate": "2013-04-04",
"numpkg": 87,
"datechar": "2010-12-12" 
},
{
 "pkg": "gdistance",
"firstdate":          14983,
"curdate": "2014-02-18",
"numpkg": 88,
"datechar": "2011-01-09" 
},
{
 "pkg": "adehabitatHR",
"firstdate":          15012,
"curdate": "2014-03-08",
"numpkg": 89,
"datechar": "2011-02-07" 
},
{
 "pkg": "adehabitatHS",
"firstdate":          15012,
"curdate": "2014-03-08",
"numpkg": 90,
"datechar": "2011-02-07" 
},
{
 "pkg": "adehabitatLT",
"firstdate":          15012,
"curdate": "2013-09-23",
"numpkg": 91,
"datechar": "2011-02-07" 
},
{
 "pkg": "adehabitatMA",
"firstdate":          15012,
"curdate": "2013-09-23",
"numpkg": 92,
"datechar": "2011-02-07" 
},
{
 "pkg": "landsat",
"firstdate":          15030,
"curdate": "2012-10-22",
"numpkg": 93,
"datechar": "2011-02-25" 
},
{
 "pkg": "rgeos",
"firstdate":          15054,
"curdate": "2014-03-25",
"numpkg": 94,
"datechar": "2011-03-21" 
},
{
 "pkg": "seg",
"firstdate":          15103,
"curdate": "2013-12-30",
"numpkg": 95,
"datechar": "2011-05-09" 
},
{
 "pkg": "latticeDensity",
"firstdate":          15133,
"curdate": "2012-01-07",
"numpkg": 96,
"datechar": "2011-06-08" 
},
{
 "pkg": "rasterVis",
"firstdate":          15161,
"curdate": "2014-03-25",
"numpkg": 97,
"datechar": "2011-07-06" 
},
{
 "pkg": "gstudio",
"firstdate":          15198,
"curdate": "2014-01-04",
"numpkg": 98,
"datechar": "2011-08-12" 
},
{
 "pkg": "osmar",
"firstdate":          15247,
"curdate": "2013-11-21",
"numpkg": 99,
"datechar": "2011-09-30" 
},
{
 "pkg": "gwrr",
"firstdate":          15301,
"curdate": "2013-06-19",
"numpkg": 100,
"datechar": "2011-11-23" 
},
{
 "pkg": "ggmap",
"firstdate":          15308,
"curdate": "2013-04-13",
"numpkg": 101,
"datechar": "2011-11-30" 
},
{
 "pkg": "SpatialTools",
"firstdate":          15323,
"curdate": "2014-03-11",
"numpkg": 102,
"datechar": "2011-12-15" 
},
{
 "pkg": "McSpatial",
"firstdate":          15369,
"curdate": "2013-05-26",
"numpkg": 103,
"datechar": "2012-01-30" 
},
{
 "pkg": "spatialprobit",
"firstdate":          15389,
"curdate": "2013-06-03",
"numpkg": 104,
"datechar": "2012-02-19" 
},
{
 "pkg": "OpenStreetMap",
"firstdate":          15400,
"curdate": "2013-04-13",
"numpkg": 105,
"datechar": "2012-03-01" 
},
{
 "pkg": "taRifx",
"firstdate":          15422,
"curdate": "2012-11-10",
"numpkg": 106,
"datechar": "2012-03-23" 
},
{
 "pkg": "CARBayes",
"firstdate":          15426,
"curdate": "2013-12-04",
"numpkg": 107,
"datechar": "2012-03-27" 
},
{
 "pkg": "splm",
"firstdate":          15446,
"curdate": "2013-07-03",
"numpkg": 108,
"datechar": "2012-04-16" 
},
{
 "pkg": "geospt",
"firstdate":          15449,
"curdate": "2012-04-24",
"numpkg": 109,
"datechar": "2012-04-19" 
},
{
 "pkg": "geospt",
"firstdate":          15449,
"curdate": "2012-04-24",
"numpkg": 110,
"datechar": "2012-04-19" 
},
{
 "pkg": "vec2dtransf",
"firstdate":          15449,
"curdate": "2012-04-19",
"numpkg": 111,
"datechar": "2012-04-19" 
},
{
 "pkg": "Grid2Polygons",
"firstdate":          15487,
"curdate": "2013-08-31",
"numpkg": 112,
"datechar": "2012-05-27" 
},
{
 "pkg": "spTimer",
"firstdate":          15506,
"curdate": "2014-03-03",
"numpkg": 113,
"datechar": "2012-06-15" 
},
{
 "pkg": "plotKML",
"firstdate":          15511,
"curdate": "2014-04-02",
"numpkg": 114,
"datechar": "2012-06-20" 
},
{
 "pkg": "SpatialEpi",
"firstdate":          15512,
"curdate": "2013-01-05",
"numpkg": 115,
"datechar": "2012-06-21" 
},
{
 "pkg": "ngspatial",
"firstdate":          15527,
"curdate": "2013-12-07",
"numpkg": 116,
"datechar": "2012-07-06" 
},
{
 "pkg": "rworldxtra",
"firstdate":          15616,
"curdate": "2012-10-03",
"numpkg": 117,
"datechar": "2012-10-03" 
},
{
 "pkg": "Stem",
"firstdate":          15642,
"curdate": "2012-10-29",
"numpkg": 118,
"datechar": "2012-10-29" 
},
{
 "pkg": "UScensus2000blkgrp",
"firstdate":          15642,
"curdate": "2012-10-29",
"numpkg": 119,
"datechar": "2012-10-29" 
},
{
 "pkg": "dbmss",
"firstdate":          15659,
"curdate": "2014-03-19",
"numpkg": 120,
"datechar": "2012-11-15" 
},
{
 "pkg": "PBSmapping",
"firstdate":          15673,
"curdate": "2013-12-16",
"numpkg": 121,
"datechar": "2012-11-29" 
},
{
 "pkg": "micromap",
"firstdate":          15693,
"curdate": "2014-03-21",
"numpkg": 122,
"datechar": "2012-12-19" 
},
{
 "pkg": "spatial.tools",
"firstdate":          15760,
"curdate": "2014-03-20",
"numpkg": 123,
"datechar": "2013-02-24" 
},
{
 "pkg": "GriegSmith",
"firstdate":          15778,
"curdate": "2013-03-14",
"numpkg": 124,
"datechar": "2013-03-14" 
},
{
 "pkg": "marmap",
"firstdate":          15798,
"curdate": "2013-10-11",
"numpkg": 125,
"datechar": "2013-04-03" 
},
{
 "pkg": "rtop",
"firstdate":          15828,
"curdate": "2014-02-10",
"numpkg": 126,
"datechar": "2013-05-03" 
},
{
 "pkg": "GWmodel",
"firstdate":          15858,
"curdate": "2013-12-16",
"numpkg": 127,
"datechar": "2013-06-02" 
},
{
 "pkg": "georob",
"firstdate":          15876,
"curdate": "2014-03-05",
"numpkg": 128,
"datechar": "2013-06-20" 
},
{
 "pkg": "SSN",
"firstdate":          15910,
"curdate": "2014-01-21",
"numpkg": 129,
"datechar": "2013-07-24" 
},
{
 "pkg": "AMOEBA",
"firstdate":          16041,
"curdate": "2013-12-02",
"numpkg": 130,
"datechar": "2013-12-02" 
},
{
 "pkg": "leafletR",
"firstdate":          16090,
"curdate": "2014-03-13",
"numpkg": 131,
"datechar": "2014-01-20" 
} 
]
  
      if(!(opts.type==="pieChart" || opts.type==="sparklinePlus")) {
        var data = d3.nest()
          .key(function(d){
            //return opts.group === undefined ? 'main' : d[opts.group]
            //instead of main would think a better default is opts.x
            return opts.group === undefined ? opts.y : d[opts.group];
          })
          .entries(data);
      }
      
      if (opts.disabled != undefined){
        data.map(function(d, i){
          d.disabled = opts.disabled[i]
        })
      }
      
      nv.addGraph(function() {
        var chart = nv.models[opts.type]()
          .x(function(d) { return d[opts.x] })
          .y(function(d) { return d[opts.y] })
          .width(opts.width)
          .height(opts.height)
         
        chart
  .tooltipContent( function(key, x, y, e){ 
  return 'Package: ' + e.point.pkg
} )
          
        chart.xAxis
  .tickFormat(function(d) {return d3.time.format('%b %Y')(new Date( d * 86400000 ));})

        
        
        
      
       d3.select("#" + opts.id)
        .append('svg')
        .datum(data)
        .transition().duration(500)
        .call(chart);

       nv.utils.windowResize(chart.update);
       return chart;
      });
    };
</script>
    
  </body>
</html><!DOCTYPE html>
<html>
    <head>
        <title>Leaflet w/ geojson Polygons & addStyle()</title>
 <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
       <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
        <!--[if lte IE 8]><link rel="stylesheet" href="http://leaflet.cloudmade.com/dist/leaflet.ie.css" /><![endif]-->

        <script type="text/javascript" src="http://maps.stamen.com/js/tile.stamen.js?v1.2.3"></script>
<script type="text/javascript" src="./sfBOSleaf.geojson" ></script>
        <style type="text/css">
            #map {
                width: 90%;
                height: 600px;
                margin: 0 0 1em 0;
                margin-right:auto;
                margin-left:auto;
            }


        </style>
    </head>
    <body onload="initialize()">
        <div id="map" ></div>

        <script type="text/javascript">
            function initialize() {



                    var watercolor = new  L.StamenTileLayer("watercolor");
                    var terrain = new L.StamenTileLayer("terrain");
                    var toner= new  L.StamenTileLayer("toner");

                    var bases = {
                        "Watercolor":watercolor,
                        "Terrain":terrain,
                        "Toner":toner
                    }
                    var map = new L.Map('map', {
                                        center: [37.75, -122.45],
                                        zoom:12,
                                        layers:toner
                                        })


                    var bosBords = L.geoJson().addTo(map);
                    bosBords.addData(bords)
                    .setStyle(
                      {fillColor:'green',
                      color:'pink'}

                    );

            }


        </script>
    </body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <title>Force-Directed Layout</title>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.geom.js"></script>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.layout.js"></script>
  </head>
  <body>
    <div id="chart"></div>
    <ul style="display: none;" id="list">
      <li><a href="http://kenneth.kufluk.com/blog/">Kenneth</a>
        <ul>
          <li><a href="http://twitter.com/kennethkufluk" target="_blank" class="icon twitter">Twitter</a></li>
          <li><a href="http://www.linkedin.com/in/kennethkufluk" target="_blank" class="icon linkedin">LinkedIn</a></li>
          <li><a href="http://www.facebook.com/kenneth.kufluk" target="_blank" class="icon facebook">Facebook</a></li>
          <li><a href="http://feeds.feedburner.com/KennethKufluk" target="_blank" class="icon rss">RSS Feed</a></li>
          <li><a href="http://kenneth.kufluk.com/blog/">Blog categories</a>
            <ul>
              <li><a href="http://kenneth.kufluk.com/blog/blog/general/" title="View all posts filed under General">General</a></li>
              <li><a href="http://kenneth.kufluk.com/blog/blog/personal/" title="View all posts filed under Personal">Personal</a></li>
              <li><a href="http://kenneth.kufluk.com/blog/blog/physics/" title="View all posts filed under Physics &amp; Astronomy">Physics &amp; Astronomy</a></li>
              <li><a href="http://kenneth.kufluk.com/blog/blog/projects/" title="View all posts filed under Projects">Projects</a></li>
              <li><a href="http://kenneth.kufluk.com/blog/blog/rant/" title="View all posts filed under Ranting">Ranting</a></li>
              <li><a href="http://kenneth.kufluk.com/blog/blog/work/" title="View all posts filed under Work">Work</a></li>
            </ul>
          </li>
          <li><a href="http://kenneth.kufluk.com/blog/">Pages</a>
            <ul>
              <li><a href="http://kenneth.kufluk.com/blog/about/" title="About Kenneth">About Kenneth</a></li>
              <li><a href="http://kenneth.kufluk.com/blog/work/" title="Employment">Employment</a></li>
              <li><a href="http://kenneth.kufluk.com/blog/experiments/" title="Experiments">Experiments</a></li>
            </ul>
          </li>
          <li><a href="http://kenneth.kufluk.com/blog/">Friends</a>
            <ul>
              <li><a href="http://coderonfire.com/" title="Coder on Fire" rel="friend met co-worker colleague neighbor">Andrew Mason</a></li>
              <li><a href="http://www.wait-till-i.com" title="Wait till I come!" rel="met">Christian Heilmann</a></li>
              <li><a href="http://www.danwebb.net" rel="friend met" title="Godlike JavaScript Guru">Dan Webb</a></li>
              <li><a href="http://www.sitedaniel.com" rel="friend met co-worker colleague neighbor" title="Flash Whizz">Daniel Goldsworthy</a></li>
              <li><a href="http://dean.edwards.name" rel="friend met" title="Godlike JavaScript Guru">Dean Edwards</a></li>
              <li><a href="http://www.dotsonline.co.uk" title="My auntie&#8217;s music shop.">Dot&#8217;s Shop</a></li>
              <li><a href="http://simonwillison.net/" title="PHP, Python, CSS, XML and general web development.">Simon Willison</a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <script type="text/javascript">

var w = 960,
    h = 500,
    fill = d3.scale.category20();

var vis = d3.select("#chart").append("svg:svg")
    .attr("width", w)
    .attr("height", h);

var nodes = self.nodes = d3.selectAll("li")[0],
    links = self.links = nodes.slice(1).map(function(d) {
      return {source: d, target: d.parentNode.parentNode};
    });

var force = d3.layout.force()
    .charge(-120)
    .distance(30)
    .nodes(nodes)
    .links(links)
    .size([w, h])
    .start();

var link = vis.selectAll("line.link")
    .data(links)
  .enter().append("svg:line")
    .style("stroke", "#ccc")
    .attr("x1", function(d) { return d.source.x; })
    .attr("y1", function(d) { return d.source.y; })
    .attr("x2", function(d) { return d.target.x; })
    .attr("y2", function(d) { return d.target.y; });

var node = vis.selectAll("circle.node")
    .data(nodes)
  .enter().append("svg:circle")
    .style("fill", "#000")
    .style("stroke", "#fff")
    .attr("cx", function(d) { return d.x; })
    .attr("cy", function(d) { return d.y; })
    .attr("r", 5)
    .call(force.drag);

force.on("tick", function() {
  link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });

  node.attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });
});

    </script>
  </body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5px;
  stroke-opacity: .5;
}

.land {
  fill: #222;
}

.boundary {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 960;

var projection = d3.geo.gnomonic()
    .clipAngle(90 - 1e-3)
    .scale(150)
    .translate([width / 2, height / 2])
    .precision(.4)
    .rotate([12,36,180])


var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

d3.json("world-50m.json", function(error, world) {
  svg.insert("path", ".graticule")
      .datum(topojson.feature(world, world.objects.land))
      .attr("class", "land")
      .attr("d", path);

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
      .attr("class", "boundary")
      .attr("d", path);


      d3.selectAll('.land')
        .transition()
        .delay(2999)
        .duration(6999)
        .style("fill","lawngreen")

});

d3.select(self.frameElement).style("height", height + "px");

d3.select('svg')
  .style('background', 'green')
  .transition()
  .delay(4000)
  .duration(3000)
    .style('background', 'blue')

    d3.selectAll('path')
    .transition()
    .duration(5000)
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")scale(2)translate(" + -0 + "," + -0 + ")")
      .style("stroke-width", 4 + "px")
      .style("stroke", "pink");





</script>
<!DOCTYPE html>
<meta charset="utf-8">
<title>Quadtree 2</title>
<style>
    .point {
        fill: #999;
        stroke: #fff;
        pointer-events: none;
    }

    .brush .extent {
        stroke: #fff;
        fill-opacity: .125;
        shape-rendering: crispEdges;
    }
</style>
<body>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

        var width = 1800,
            height =1800;
        
        var data = d3.range(100000).map(function (i) {
            return  {
                      id   : i,
                      coord: [Math.random() * width, Math.random() * width]
                    }
        });

        var quadtree = d3.geom.quadtree(data.map(
                        function (v, i) {
                            return {
                                x: v.coord[0],
                                y: v.coord[1],
                                all: v
                            };
                        }
                        )
                  );



        var brush = d3.svg.brush()
            .x(d3.scale.identity().domain([0, width]))
            .y(d3.scale.identity().domain([0, height]))
            .extent([[100, 100], [200, 200]])
            .on("brush", brushed);

        var svg = d3.select("body").append("svg")
            .attr("width", width)
            .attr("height", height);
       
        svg.append("g")
            .attr("class", "brush")
            .call(brush);

        brushed();

        function brushed() {
            var extent = brush.extent();
            var  subset = search(quadtree, extent[0][0], extent[0][1], extent[1][0], extent[1][1]);
            var points = svg.selectAll(".point")
                         .data(subset, function (d) { return d.id; });

                points.enter().append("circle")
                            .attr("class", "point")
                            .attr("cx", function (d) { return d.coord[0]; })
                            .attr("cy", function (d) { return d.coord[1]; })
                            .attr("r", 4);

                points.exit().remove();


           
        }

        
       
        // Find the nodes within the specified rectangle.
        function search(quadtree, x0, y0, x3, y3) {
            var pts = [];
            quadtree.visit(function (node, x1, y1, x2, y2) {
                var p = node.point;
                if ((p) && (p.x >= x0) && (p.x < x3) && (p.y >= y0) && (p.y < y3)) {
                    pts.push(node.point.all);
                }
                return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;
            });

            return pts;

        }

    </script>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Manipulate SVG shape via input</title>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.2/d3.js"></script>

    <style>
        body {font-family: monospace; line-height: 160%; font-size: 18px; margin: 0;}
        input {border: 1px dotted #ccc; background: white; font-family: monospace; padding: 10px 20px; font-size: 18px; margin: 20px 10px 20px 20px; color: red; width: 120px;}
        input:focus { background-color:yellow; outline: none;}
        form {display: block; position: fixed; left: 10px; top: 10px; background: transparent; ;}
    </style>
</head>
    <body>



    <form name="myform" onSubmit="return handleClick()">
        <input name="Submit"  type="submit" value="trigger" />
        <input type="text" id="myRadius" maxlength="3" placeholder="radius" />
        <input type="text" id="myX" maxlength="3" placeholder="x value"/>
        <input type="text" id="myY" maxlength="3" placeholder="y value"/>
    </form>


    <script>
        
        
        // width and height
        var w = 960;
        var h = 500;


        var mySVG = d3.select("body")
            .append("svg:svg")
            .attr("width", w)
            .attr("height", h)

        var circle = mySVG.append("circle")
            .style("fill", "grey")
            .attr("r", 100)
            .attr("cx", w/2)
            .attr("cy", h/2);

        function handleClick(event){
            console.log(document.getElementById("myRadius").value)
            draw(document.getElementById("myRadius").value, document.getElementById("myX").value, document.getElementById("myY").value)
            return false;
        }

        function draw(rad, x, y){
            circle
            .style("fill", "red")
            .attr("r", rad)
            .attr("cx", x)
            .attr("cy", y)
        }

    </script>


    </body>
</html>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Sky II (HYG)</title>
        <link type="text/css" href="index.css" rel="stylesheet"/>
        <script src="http://d3js.org/d3.v3.min.js"></script>
    </head>
    <body>
        <svg width="960" height="500">
        </svg>
    </body>
    <script src="index.js"></script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  stroke-linejoin: round;
  stroke-linecap: round;
}

.land {
  fill: #ddd;
}

.border {
  fill: none;
  stroke: #fff;
}

.graph {
  fill: none;
  stroke: #000;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/queue.v1.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 600;

var projection = d3.geo.albersUsa()
    .scale(1280)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

queue()
    .defer(d3.json, "/mbostock/raw/4090846/us.json")
    .defer(d3.json, "/mbostock/raw/4090846/us-congress-113.json")
    .await(ready);

function ready(error, us, congress) {
  if (error) throw error;

  var geometryCollection = congress.objects.districts,
      featureCollection = topojson.feature(congress, geometryCollection),
      features = featureCollection.features,
      neighbors = topojson.neighbors(geometryCollection.geometries);

  features.forEach(function(feature, i) {
    feature.centroid = path.centroid(feature);
    if (feature.centroid.some(isNaN)) feature.centroid = null; // off the map
    feature.neighbors = feature.centroid ? neighbors[i]
        .filter(function(j) { return j < i && features[j].centroid; })
        .map(function(j) { return features[j]; }) : [];
  });

  svg.append("path")
      .attr("class", "land")
      .datum(topojson.feature(us, us.objects.land))
      .attr("d", path);

  svg.append("path")
      .attr("class", "border")
      .datum(topojson.mesh(congress, geometryCollection, function(a, b) { return a !== b; }))
      .attr("d", path);

  svg.append("path")
      .attr("class", "graph")
      .datum(d3.merge(features.map(function(a) { return a.neighbors.map(function(b) { return [a, b]; }); })))
      .attr("d", function(d) { return d.map(function(l) { return "M" + l[0].centroid + "L" + l[1].centroid; }).join(""); });
}

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>rectangulos en tematizados en CartoDB y MapBox</title>
</head>
<body>

  <!-- probando con iframe's -->
  
  <iframe width='100%' height='520' frameborder='0' src='http://aaizemberg.cartodb.com/viz/17f6c91c-c01b-11e3-a830-0e73339ffa50/embed_map?title=true&description=true&search=false&shareable=true&cartodb_logo=true&layer_selector=false&legends=true&scrollwheel=true&fullscreen=true&sublayer_options=1&sql=SELECT%20*%20FROM%20rect20c%20WHERE%20(cantidad%20%3E%3D%200%20AND%20cantidad%20%3C%3D%203204)&sw_lat=-50.28933925329178&sw_lon=-98.525390625&ne_lat=-21.69826549685252&ne_lon=-30.673828125' allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>

  <iframe width='100%' height='500px' frameBorder='0' src='http://a.tiles.mapbox.com/v3/aaizemberg.hn1ieamk/attribution,zoompan,zoomwheel,geocoder,share.html'></iframe>
  
  
</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style type="text/css">
  
	.node {
    cursor: pointer;
  }

  .overlay{
      background-color:#EEE;
  }
   
  .node circle {
    fill: #fff;
    stroke: steelblue;
    stroke-width: 1.5px;
  }
   
  .node text {
    font-size:10px; 
    font-family:sans-serif;
  }
   
  .link {
    fill: none;
    stroke: #ccc;
    stroke-width: 1.5px;
  }

  .templink {
    fill: none;
    stroke: red;
    stroke-width: 3px;
  }

  .ghostCircle.show{
      display:block;
  }

  .ghostCircle, .activeDrag .ghostCircle{
       display: none;
  }

</style>
<script src="http://code.jquery.com/jquery.min.js"></script>
<script src="http://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>
<script src="dndTree.js"></script>
<body>
    <div id="tree-container"></div>
</body>
</html><!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 orbit on planets</title>
        <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

        <style>
        body {font-family: monospace; line-height: 160%; font-size: 16px; max-width: 90%; margin: 10px auto;}
        input {border: 1px dotted #ccc; background: white; font-family: monospace; padding: 10px 20px; font-size: 18px; margin: 20px 10px 20px 0; color: red;}
        input:focus { background-color:yellow; outline: none;}
        /*form {display: block; position: fixed; left: 10px; top: 10px; background: transparent; ;}*/

        </style>

    </head>
    <body>

    <h3>Your age across the Milkyway</h3>


        <form name="myform" onSubmit="return handleClick()">
            <input type="text" id="myVal" placeholder="Add your Earth age">
            <input name="Submit"  type="submit" value="My orbit accross the Milkyway" >
        </form>


    <script>

        var dataset = // ow long it takes each planet to orbit the Sun
        [
            { "planet": "Mercury", "orbit" : 0.241 },
            { "planet": "Venus", "orbit" : 0.615},
            { "planet": "Earth", "orbit" : 1},
            { "planet": "Mars", "orbit" : 1.881},
            { "planet": "Jupiter", "orbit" : 11.86},
            { "planet": "Saturn", "orbit" : 29.46},
            { "planet": "Uranus", "orbit" : 84.01},
            { "planet": "Neptune", "orbit" : 164.8}
        ];
 
 
        function handleClick(event){
            console.log(document.getElementById("myVal").value)
            orbit(document.getElementById("myVal").value)
            return false;
        }

        myUl = d3.select("body")
                .append("ul")
                .selectAll("ul");
                

        myList = myUl
                .data(dataset)
                .enter()
                .append("li")
                .text(function (d) { 
                    return "need ya age to know" + " years on " + d["planet"];
                });

        function orbit(val){
            myList
            .text(function (d) { 
                return (val/d["orbit"]).toFixed(2) + " years on " + d["planet"]; //divide your age in Earth years by the length of the planet's year in Earth years to get you age in that planets years
            });
        };
 

    </script>


    </body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Home Ownership Rates by Metro Area, 2014</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}
            
            
            h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}
            
            
			svg {
				background-color: white;
			}

            rect:hover {
				fill: orange;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			.y.axis path,
			.y.axis line {
				opacity: 0;
			}
            
		</style>
	</head>
	<body>
        
        <hl><strong>Comparing Homeownership Rates Across Major Metro Areas in US</strong></hl>
        <p>Homeownership rates in 2014 for 75 largest Metropolitan
            Statistical Areas (MSAs) in the US.<br> Source: <a href="http://www.census.gov/housing/hvs/files/annual14/ann14t_16.xls">US Census Bureau</a>.</p>

		<script type="text/javascript">	
            
            var w = 1000;
            var h = 1200;
            var padding = [ 20, 10, 30, 250 ];  //Top, right, bottom, left
            
         var widthScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var heightScale = d3.scale.ordinal()
								.rangeRoundBands([ padding[0], h - padding[2] ], 0.1);   
      
            
            
            var xAxis = d3.svg.axis()
							.scale(widthScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(heightScale)
							.orient("left");

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);
            
			d3.csv("home_ownership_MSA.csv", function(data) {
				console.log(data);
                
                data.sort(function(a, b) {
					return d3.descending(+a.ownership2014, 
+b.ownership2014); 
                });
                
                widthScale.domain([ 0, d3.max(data, function(d) {
					return +d.ownership2014;
				}) ]);

				heightScale.domain(data.map(function(d) { return d.MSA; } ));
                
                
var rects = svg.selectAll("rect")
.data(data)
.enter()
.append("rect");

rects.attr("x", padding[3])
.attr("y", function(d) {
						return
heightScale(d.MSA);
					})                
					.attr("width", function(d) {
						return 
widthScale(d.ownership2014);
					})
					.attr("height", heightScale.rangeBand())
                    .attr("fill", "red")
                    .append("title")
					.text(function(d) {
						return d.MSA + ": " +  d.ownership2014;		
			});
                
                svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});

		</script>

	</body>
</html><html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>topojson import into force directed network</title>
  <meta charset="utf-8" />
</head>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<style>

</style>
<body onload="forceDirected();">

<div id="vizcontainer">
<svg style="width:500px;height:500px;border:1px lightgray solid;" />
</div>
<div id="controls">
</div>

  <footer>
<script>

  function forceDirected() {
    d3.json("world.json", createForceLayout)

    function createForceLayout(world) {
        var nodes = topojson.feature(world, world.objects.countries).features;
        var neighbors = topojson.neighbors(world.objects.countries.geometries);
        var edges = [];
        console.log(nodes);
      var nodeHash = {};
      for (x in nodes) {
        nodeHash[x] = nodes[x];
      }
      for (x in neighbors) {
        for (y in neighbors[x]) {
            var newEdge = {source: nodeHash[x], target: nodeHash[neighbors[x][y]]};
            edges.push(newEdge);
        }
      }
      
      force = d3.layout.force()
      .charge(-20)
      .gravity(.05)
      .linkDistance(10)
      .size([500,500]).nodes(nodes)
      .links(edges).on("tick", forceTick);

      d3.select("svg").selectAll("line.link").data(edges).enter()
      .append("line")
      .attr("class", "link")
      .style("stroke", "black")
      .style("opacity", .5)
      .style("stroke-width", 1);
      
      var nodeEnter = d3.select("svg").selectAll("g.node").data(nodes).enter()
      .append("g")
      .attr("class", "node")
      .call(force.drag())
      .on("click", fixNode);
      
      function fixNode(d) {
        d3.select(this).select("circle").style("stroke-width", 4);
        d.fixed = true;
      }
      
      nodeEnter.append("circle")
      .attr("r", 1)
      .style("fill", "lightgray")
      .style("stroke", "black")
      .style("stroke-width", "1px");

      nodeEnter.append("text")
      .style("text-anchor", "middle")
      .attr("y", 15)
//      The topojson data file I'm using doesn't have names...
//      .text(function(d) {return d.properites.name})

      force.start();

      function forceTick() {
      d3.selectAll("line.link")
      .attr("x1", function (d) {return d.source.x})
      .attr("x2", function (d) {return d.target.x})
      .attr("y1", function (d) {return d.source.y})
      .attr("y2", function (d) {return d.target.y});
      
      d3.selectAll("g.node")
      .attr("transform", function (d) {return "translate("+d.x+","+d.y+")"})
      }


    function sizeByDegree() {
      force.stop();
      d3.selectAll("circle")
      .attr("r", function(d) {return d.weight * .2})
      }
   d3.select("#controls").append("button").on("click", sizeByDegree).html("Degree Size");
   
   
    }
  }


</script>
  </footer>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Choropleth</title>

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.2/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
</style>
</head>
<body>

<div id='map'></div>
<style>
.map-legend .swatch {
  width:20px;
  height:20px;
  float:left;
  margin-right:10px;
  }
.leaflet-popup-close-button {
  display: none;
  }
.leaflet-popup-content-wrapper {
  pointer-events: none;
  }
</style>

<!--  <script src='http://www.mapbox.com/mapbox.js/assets/data/us-states.js'></script> -->
<script src='http://bl.ocks.org/aaizemberg/raw/9982456/rect.js'></script>

<script>
  var mapdataviz = L.mapbox.map('map', 'examples.map-9ijuk24y')
    .setView([-38, -65], 5);

  var popup = new L.Popup({ autoPan: false });

// statesData comes from the 'us-states.js' script included above
// rect es un GeoJSON que viene de 'rect.js'

//var statesLayer = L.geoJson(statesData,  {
  var statesLayer = L.geoJson(rect,  {
      style: getStyle,
      onEachFeature: onEachFeature
  }).addTo(mapdataviz);

  function getStyle(feature) {
      return {
          weight: 2,
          opacity: 0.1,
          color: 'black',
          fillOpacity: 0.7,
          fillColor: getColor(feature.properties.size)
      };
  }
  
  function getColor(d) {
      return d <= 143 ? '#ffffb2' :
          d <= 379  ? '#FECC5C' :
          d <= 866 ? '#FD8D3C' :
          d <= 2664  ? '#F03B20' :
          d <= 3204  ? '#BD0026' :
          '#0000ff';
  }

  function onEachFeature(feature, layer) {
      layer.on({
          mousemove: mousemove,
          mouseout: mouseout,
          click: zoomToFeature
      });
  }

  var closeTooltip;

  function mousemove(e) {
      var layer = e.target;

      popup.setLatLng(e.latlng);
      popup.setContent('<div class="marker-title">' + layer.feature.properties.name + '</div>' + layer.feature.properties.size);

      if (!popup._map) popup.openOn(mapdataviz);
      window.clearTimeout(closeTooltip);

      // highlight feature
      layer.setStyle({
          weight: 3,
          opacity: 0.3,
          fillOpacity: 0.9
      });

      if (!L.Browser.ie && !L.Browser.opera) {
          layer.bringToFront();
      }
  }

  function mouseout(e) {
      statesLayer.resetStyle(e.target);
      closeTooltip = window.setTimeout(function() {
          mapdataviz.closePopup();
      }, 100);
  }

  function zoomToFeature(e) {
      mapdataviz.fitBounds(e.target.getBounds());
  }

  mapdataviz.legendControl.addLegend(getLegendHTML());

  function getLegendHTML() {
    var grades = [0, 143, 379, 866, 2664, 3204],
    labels = [],
    from, to;

    for (var i = 0; i < grades.length-1; i++) {
      from = grades[i];
      to = grades[i + 1];

      labels.push(
        '<li><span class="swatch" style="background:' 
        + getColor(from + 1) + '"></span> ' +
        from + (to ? '&ndash;' + to : '+')) + '</li>';
    }

    return '<span>referencias</span>' + labels.join('');
  }
</script>

</body>
</html><!DOCTYPE html>
<html>
    <head>
        <title>Leaflet w/ geojson Polygons & addStyle()</title>
 <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
       <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
        <!--[if lte IE 8]><link rel="stylesheet" href="http://leaflet.cloudmade.com/dist/leaflet.ie.css" /><![endif]-->

        <script type="text/javascript" src="http://maps.stamen.com/js/tile.stamen.js?v1.2.3"></script>
<script type="text/javascript" src="http://bl.ocks.org/mpmckenna8/raw/9959871/sfBOSleaf.geojson" ></script>
<script src="http://leaflet.github.io/Leaflet.label/leaflet.label.js"></script>
<link rel="stylesheet" href="http://leaflet.github.io/Leaflet.label/leaflet.label.css" />
<script type="text/javascript" src="./labelSFbos.geojson" ></script>

         <style type="text/css">
            #map {
                width: 600px;
                height: 400px;
                margin: 0 0 1em 0;
                margin-right:auto;
                margin-left:auto;
            }

            .distPoly {
              opacity:1;
              fill:purple;
            }
            .leaflet-label {
              background:none;
               left: -22px;
              border:none;
              background-clip:none;
            }
            .leaflet-label:before {
	border-right: 0px solid black;
	border-right-color: inherit;
	left: -10px;
}
        </style>
    </head>
    <body onload="initialize()">
        <div id="map" ></div>

        <script type="text/javascript">
            function initialize() {



                    var watercolor = new  L.StamenTileLayer("watercolor");
                    var terrain = new L.StamenTileLayer("terrain");
                    var toner= new  L.StamenTileLayer("toner");

                    var bases = {
                        "Watercolor":watercolor,
                        "Terrain":terrain,
                        "Toner":toner
                    }
                    var map = new L.Map('map', {
                                        center: [37.75, -122.45],
                                        zoom:11,
                                        layers:toner
                                        })

function onEachFeature(feat){
  return console.log(feat.properties)
}

                    var bosBords = L.geoJson(bords,{onEachFeature:onEachFeature}).addTo(map);

                    bosBords.addData(bords,{onEachFeature:onEachFeature})
                    .setStyle(function(feat){

                      console.log(feat.properties.DISTRICT)
                    //  console.log(feat.properties.DISTRICT);
                      if(feat.properties.DISTRICT === "01"){
                return      {fillColor:'green',
                      color:'pink',fillOpacity:.65}}
                      else if(feat.properties.DISTRICT === "02"){
                return      {fillColor:'blue',
                      color:'pink',fillOpacity:.65}}
                      else if(feat.properties.DISTRICT === "03"){
                return      {fillColor:'purple',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "04"){
                return      {fillColor:'#cab2d6',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "05"){
                return      {fillColor:'#ff7f00',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "06"){
                return      {fillColor:'#fdbf6f',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "07"){
                return      {fillColor:'#e31a1c',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "08"){
                return      {fillColor:'pink',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "09"){
                return      {fillColor:'#a6cee3',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "10"){
                return      {fillColor:'#ffff99',
                      color:'pink',fillOpacity:.7}}
                      else if(feat.properties.DISTRICT === "11"){
                return      {fillColor:'#b2df8a',
                      color:'pink',fillOpacity:.7}}

}
            )

//Add labels layer
var labelStyle = {
    color: 'pink',
    opacity: 0

};

var labelMarkerOptions = {
        opacity: 0,
        fillOpacity: 0,
        fillColor:'brown'
};

var labelLayer = L.geoJson(labs, {
        pointToLayer: function (feature, latlng) {
                return L.circleMarker(latlng, labelMarkerOptions);
        },
        onEachFeature: function (feature, layer) {
                layer.bindLabel(feature.properties.district, {noHide:true,direction:'right'});
        }
});
labelLayer.eachLayer(function(l) {l.showLabel();});
map.addLayer(labelLayer);
layerControl.addOverlay(labelLayer, 'boslab');
}

        </script>
    </body>
</html>
<!DOCTYPE html>
<html>
<head>
  <title>Leaflet (faja 1 a 7) Bounds</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="http://leafletjs.com/dist/leaflet.css" />
</head>
<body>
	<div id="map" style="width: 600px; height: 400px"></div>

	<script src="http://leafletjs.com/dist/leaflet.js"></script>
	<script>
	  var map = L.map('map').setView([-45, -63], 2);
      var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
      L.tileLayer(osmUrl, {
			maxZoom: 18,
			attribution: ''
      }).addTo(map);


L.rectangle([[-52, -73.62], [-36.15, -70.5]], {color: '#ff7800', weight: 1}).addTo(map);
L.rectangle([[-54.95, -70.5], [-24.1, -67.5]], {color: '#ff78ff', weight: 1}).addTo(map);
L.rectangle([[-55.2, -67.5], [-21.8, -64.5]], {color: '#ff7800', weight: 1}).addTo(map);
L.rectangle([[-55, -64.5], [-22, -61.5]], {color: '#ff78ff', weight: 1}).addTo(map);
L.rectangle([[-39.2, -61.5], [-23.4, -58.5]], {color: '#ff7800', weight: 1}).addTo(map);
L.rectangle([[-38.5, -58.5], [-25.1, -55.5]], {color: '#ff78ff', weight: 1}).addTo(map);
L.rectangle([[-27.9, -55.5], [-25.5, -53.5]], {color: '#ff7800', weight: 1}).addTo(map);

	</script>
</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width:100%; height: 100% }
  </style>
</head>

<body>
  <script>
    // Feel free to change or delete any of the code you see!
    var svg = d3.select("body").append("svg")
    svg.append("rect")
      .attr({x: 100, y: 10, width: 700, height: 480})
      .style({ fill: "#a72d1a"})
      .transition().duration(3000).ease("bounce")
      .style({ fill: "#5db9e3"})

    console.log("you are now rocking with d3", d3);
  </script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

/*.x.axis path {
  display: none;
}*/

</style>
<body>
<h1>Distribution of Mean Temperature for Lake Toxoway, NC</h1>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
var f = function(property){
 return function(obj){ return obj[property]; };
}

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.linear()


var y = d3.scale.linear()

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");
    // .ticks(10,"0.0%");

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var barPadding=2;

d3.tsv("toxdatadist.txt", function(error, data) {

    data.forEach(function(d){
      d.density=+d.Density;
      d.mids=+d.MidPoints;
      d.count = +d.Count;
    })


  var mindens = d3.min(data, f('density'))
  var maxdens = d3.max(data, f('density'))

  // var x = d3.scale.linear()
  //  .domain([minSepalWidth, maxSepalWidth])
  //  .range([0, width])
  y.domain([0,maxdens])
  y.range([height, 0])

  x.domain([15,70])
  x.range([0, width])

 

  svg.selectAll('.bar')
    .data(data).enter()
    .append("rect")
    .attr("width", 80)
    .attr("y",function(d){ return y(d.density);})
    .attr("x",function(d){ return x(d.mids);})
    .attr("height", function(d){ return height-y(d.density);})
    .attr("fill", 'steelblue')
    .style("opacity", .5)
    .classed('bar',true)
   
   // svg.selectAll('text') 
   //  .data(data).enter()
   //  .append("text")
   //    .text(function(d) { return d.mids; })
   //    .attr("y",function(d){ return y(d.density) ;})
   //    .attr("x",function(d){ return x(d.mids);})
   //    .attr('text-anchor','middle')
   //    .attr('dy','-.5em')
 
   svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .append("text")
      .attr("class", "label")
      .attr("x", width)
      .attr("y", -6)
      .style("text-anchor", "end")
     
    svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
      .append("text")
      .attr("class", "label")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Density");

  debugger;
  });


</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  background: #333;
}

</style>
<canvas width="960" height="500"></canvas>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var canvas = document.querySelector("canvas"),
    context = canvas.getContext("2d"),
    width = canvas.width,
    height = canvas.height;

var n = 200,
    tau = 2 * Math.PI,
    nodes = d3.range(n).map(function() { return {radius: Math.random() * 8 + 2}; });

var force = d3.layout.force()
    .charge(0.5)
    .gravity(0)
    .friction(1)
    .nodes(nodes)
    .size([width, height])
    .start();

context.fillStyle = "#fff";

force.on("tick", function(e) {
  context.clearRect(0, 0, width, height);

  var q = d3.geom.quadtree(nodes), node, i;
  for (i = 1; i < n; ++i) q.visit(collide(nodes[i]));

  for (i = 1; i < n; ++i) {
    node = nodes[i];
    context.beginPath();
    context.arc(node.x, node.y, node.radius, 0, tau);
    context.fill();
  }

  force.resume();
});

function collide(node) {
  var r = node.radius + 16,
      nx1 = node.x - r,
      nx2 = node.x + r,
      ny1 = node.y - r,
      ny2 = node.y + r;
  return function(quad, x1, y1, x2, y2) {
    if (quad.point && (quad.point !== node)) {
      var x = node.x - quad.point.x,
          y = node.y - quad.point.y,
          l = Math.sqrt(x * x + y * y),
          r = node.radius + quad.point.radius;
      if (l < r) {
        l = (l - r) / (l * 2);
        node.x -= x *= l;
        node.y -= y *= l;
        quad.point.x += x;
        quad.point.y += y;
      }
    }
    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
  }
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

/*.x.axis path {
  display: none;
}*/

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}



</style>
<body>
<h1>Average Monthly Temperature of Lake Toxoway, NC</h1>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var f = function(property){
 return function(obj){ return obj[property]; };
}
var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;


var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
     .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");



d3.tsv("toxdata2.txt", function(error, data) {
  data.forEach(function(d){
    d.dateformat=d3.time.format('%d-%b-%Y').parse(d.DateFormat);
    d.month=+d.dateformat.getMonth()+1;
    d.temp=+d.MeanTemp/10*9/5+32;
    d.precip=+d.Precip/10*0.0393701;
  })


/*  var mintemp = d3.min(data, f('temp'))
  var maxtemp = d3.max(data, f('temp'))
  var mindate = d3.min(data, f('dateformat'))
  var maxdate = d3.max(data, f('dateformat'))*/

  var x = d3.time.scale()
   .domain(d3.extent(data, f('dateformat')))
   .range([0, width])

  var y = d3.time.scale()
   .domain(d3.extent(data, f('temp')))
   .range([height, 0])
  
  var formatAsNumber = d3.format(".1");

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");


  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left")
      .tickFormat(formatAsNumber);


  svg.selectAll('circle')
    .data(data).enter()
    .append('circle')
      .attr('r',2)
      .attr('cx', function(d){ return x(d.dateformat); })
      .attr('cy', function(d){ return y(d.temp);}) 
      .attr('opacity',.2)
  
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .append("text")
      .attr("class", "label")
      .attr("x", width)
      .attr("y", -6)
      .style("text-anchor", "end")
      .text("Year")
     
  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("class", "label")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Temperature (F)");
  line=d3.svg.line()
    .x(function(d){return x(d.dateformat);})
    .y(function(d){return y(d.temp);})

  svg.append('path')
    .datum(data)
    .attr('d',line)
    .style('fill','None')
    .style('stroke','blue')

debugger;
});

</script><!DOCTYPE html>
<meta charset="utf-8">
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var games;

d3.json('games.json', function(err, data) {
  if (err) return console.warn(err)

  games = data
  console.log(data)
})

</script>
<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title>line growing example d3js</title>
<script src="http://d3js.org/d3.v3.min.js"></script>

<style>

 
.line {
    fill: none;
    stroke-width: 1;
    stroke:#0099FF;
    opacity:0.9;
}


</style>
</head>
<body>
<script type="text/javascript">

var svg = d3.select("body")
            .append("svg")
            .attr("width", 1500)   
            .attr("height", 1500); 
var dataset = [[50.1,50],
[48.2,49.1],
[50.9,20],
[27.8,100],
[29.3,73],
[22.3,48.9],
[55.8,34.4],
[52.1,5.3],
[64.6,23.7],
[72,12.6],
[77.8,68.1],
[66.9,53.6],
[76.7,41.1],
[78.1,48.6],
[5.6,38.5],
[29.1,35.8],
[37.1,23.7],
[34.2,49.1],
[69.9,22.9],
[56.6,42.6],
[37.7,65.7],
[41.5,57.5],
[14.3,52],
[54.1,49.7],
[54.2,50.9],
[66.1,58.6],
[62.7,16.1],
[61,34.3],
[43,32.1],
[41,70.1],
[47.8,56.1],
[8.4,87.5],
[33.6,86.7],
[39,78],
[51.5,79.9],
[54.7,76],
[32.4,76.7],
[31.6,80.4],
[26.8,100],
[27.2,62.3],
[3.5,45.6],
[45,67.3],
[55.4,56],
[42.6,63.1],
[93.3,0],
[54.2,16.7],
[54,13.8],
[79.6,19.6],
[39.2,46.3],
[58.5,67.7],
[40.3,17.9],
[71.8,24.5],
[98.6,18.7],
[59.9,38.9],
[33.3,90],
[64.2,19.6],
[56.6,34.4],
[58.7,15.4],
[71.5,16.9],
[70.7,17.6],
[32.8,40.9],
[30.8,58.7],
[57,21.5],
[77,2.6],
[92,5.3],
[76,25.1],
[99.5,0.5],
[63.5,46.1],
[79.9,73.7],
[55.6,46.4],
[59.1,48.9],
[46.1,57.8],
[54.6,77.7],
[43,51.7],
[79.8,59],
[99.7,99.7],
[9.3,100],
[57.7,96],
[34.3,69.7],
[76.5,30.7],
[37.9,66.8],
[43.7,86.1],
[40,63.7],
[58.3,32.7],
[30,40.6],
[65.1,27.4],
[63.4,21.7],
[69.6,9.2],
[55.9,38],
[44,47.5],
[54.4,94.5],
[60.4,82.2],
[20.3,67.4],
[13.4,50],
[67.7,25],
[42,28.2],
[69.3,31.9],
[68.5,14.2],
[45,53.2],
[10.9,51.4],
[41.5,67.6],
[60.6,20.7],
[63.9,8],
[56.1,12.9],
[56.9,23.7],
[52.3,19.8],
[29.5,41],
[47,13.3],
[43,13.8],
[51.5,14.3],
[58.3,34.5],
[63.6,39.1],
[66.3,49.2],
[66.6,51.6],
[62.8,51],
[67.7,76],
[72.4,96.6],
[34.3,72.7],
[5.7,39.1],
[24,78],
[49.9,55],
[25.4,94.5],
[10.1,63.2],
[24.7,53.8],
[32.3,33],
[13.6,100],
[34.3,97.8],
[36.2,43.3],
[43.9,60],
[36.6,48.8],
[38.3,21],
[39.2,41.9],
[72.5,15.6],
[41,9.8],
[37.3,42.2],
[46.1,47.8],
[42.1,45.3],
[60.4,6.9],
[45.1,2],
[46.3,35.1],
[64,47.4],
[72.8,59.8],
[95,72.7],
[41,31.6],
[67.7,49.5],
[87.1,75.4],
[46.2,57.3],
[25.7,16.5],
[31.5,24.6],
[10.3,33.7],
[28.3,8.7],
[43.3,50.2],
[46.8,35.4],
[41.2,51.8],
[56.6,66.8],
[59.8,86.3],
[65.3,73.2],
[59.8,56.2],
[48.2,35.3],
[43.9,86.3],
[74.6,65.9],
[37.7,29.9],
[65.5,11.7],
[45.1,41],
[82.9,19],
[26.8,88.2],
[10.4,59.8],
[14.3,56.5],
[26,50.7],
[30.8,37],
[40.2,4.2],
[37.4,23],
[37.9,25],
[52.3,9.5],
[74.6,54.2],
[92.9,25.2],
[4.1,73.7],
[56.7,94.4],
[37.7,69.3],
[46.6,95.7],
[40.7,77.5],
[57.9,90.8],
[19.3,34.3],
[2.1,73.8],
[52.4,24.7],
[36.4,23.2],
[31.8,2.8],
[12.9,40.6],
[42.9,45.8],
[53.9,42.5],
[57.2,59.4],
[62.9,66.9],
[58.6,62.7],
[57.5,52],
[39.2,32.7],
[39.8,53.1],
[47.7,39.3],
[38,58.1],
[51.6,45.7],
[57.2,62.1],
[20.7,27.4],
[33.4,38.2],
[37.3,41.1],
[42,30.1],
[27.3,38.3],
[46,23.2],
[25.1,54.2],
[59.3,50.4],
[45.4,71],
[62,41.6],
[70.3,42.1],
[48.4,68.4],
[40.6,41.4],
[44.3,81.1],
[66,91.1],
[9.3,73.4],
[41.3,89.7],
[29.5,65.3],
[15.5,53.3],
[46.7,47.4],
[59.2,34],
[48.2,49.8],
[47.9,39],
[41.1,38.3],
[41.4,39.5],
[35.3,57.7],
[77.7,83.9],
[67.6,69.1],
[52.9,36.8],
[61.9,50.6],
[56.6,53.7],
[56.6,53.6],
[94.8,93.4],
[39.8,100],
[53.1,74.1],
[25.6,84.4],
[10.3,63.1],
[84.9,0],
[93.6,4.2],
[59.7,36.9],
[44.4,42.5],
[15.5,53.7],
[19.1,89.4],
[15.5,79.1],
[28.8,81.4],
[37.8,90.8],
[35.8,78.4],
[28.3,70.2],
[33.9,40.5],
[70.7,37.6],
[54.5,97],
[69.2,47.1],
[64.8,50.2],
[60.4,66.9],
[57,72.1],
[42.5,65.4],
[23.2,71.8],
[44.1,60.9],
[5.3,77.2],
[14.8,45.5],
[25,28.7],
[33.3,8.1],
[28.6,15.7],
[52,0],
[66.2,39.9],
[32.4,54],
[57.1,62.1],
[62.5,36.5],
[56.7,65.6],
[51.4,74.5],
[53.6,83.4],
[88.2,93.7],
[52.3,90.6],
[55.7,83],
[24.2,65.9],
[30.7,63.1],
[41.4,32.1],
[61.8,27.9],
[52.3,52.2],
[45.9,55],
[36.7,80.5],
[46.9,94.1],
[24.8,75.8],
[40.9,69.2],
[45.1,74.5],
[41.7,70.6],
[21.5,61.4],
[29.9,83],
[12.7,91.3],
[37.4,94.2],
[29.2,80.7],
[29.4,73.2],
[25.7,78.3],
[42.2,69.9],
[51,57.3],
[43.3,50],
[54.8,37.8],
[59.2,65.2],
[61.1,58.2],
[68.2,83.8],
[56.8,57],
[57.7,50.5],
[59.1,68.5],
[52.9,63.6],
[71,36.1],
[74.6,26.8],
[60.6,44.9],
[66.5,43.1],
[71.6,33.9],
[34.7,7],
[70.4,26.6],
[47.6,55.3],
[33.9,32.2],
[59.1,16.5],
[55.1,48],
[29.7,76.6],
[14.1,26.5],
[28.9,45.9],
[24.3,49.1],
[35.5,41.1],
[40.2,43.2],
[40.3,96.2],
[56.7,65.7],
[28.5,46.3],
[13.5,50.2],
[35.9,86.4],
[46,63.7],
[63.1,47.7],
[32.4,46],
[95.5,77.9],
[35.9,65.1],
[43.6,65.3],
[59.7,92.3],
[52.6,80],
[47,71.8],
[62.4,90.6],
[73.1,95.1],
[49.7,59.4],
[56.8,53.7],
[74.6,37.9],
[71.8,38.6],
[67.2,92],
[90.6,54.1],
[78.5,84.9],
[58.4,59.7],
[82.5,97.3],
[66.6,56.1],
[71,50.7],
[96,21.2],
[86.1,21.2],
[97.4,25.6],
[99.7,0.5],
[40.2,100],
[63.9,90.8],
[68.1,95.3],
[5.8,59],
[54.3,34.1],
[69.3,26.5],
[52.6,47.7],
[38.1,38.2],
[32.1,11.7],
[48.5,37.2],
[9.8,33.8],
[5.7,60.7],
[65.5,64.8],
[68.6,57.2],
[46.7,44.9],
[59.6,21.2],
[48.8,12.3],
[99.6,0.6],
[13.5,38.6],
[45.5,50.2],
[35.6,71.6],
[53.7,62],
[47.1,53.3],
[60.3,96.7],
[5.7,39.3],
[56,15.4],
[64,4.7],
[64.4,82.4],
[61.4,65.6],
[73.7,80.5],
[5.6,61.8],
[41.8,53.5],
[63.2,26.7],
[65.9,49.7],
[63.6,25.5],
[88.6,8.7],
[97.1,62],
[29.8,0],
[18.1,29.3],
[27.3,33.3],
[43.4,17.2],
[6.5,15.9],
[64.5,35.7],
[75.1,35.6],
[70.3,0],
[46.8,40.1],
[64.4,25.2],
[46.2,45.7],
[74.1,9.4],
[44.1,88.6],
[42.6,79.1],
[43.9,95.9],
[60.1,82.1],
[62,75.1],
[93.4,94.4],
[65.9,88.6],
[23.9,82.1],
[39.3,85.2],
[52,89.5],
[38.8,58.4],
[35.2,69.2],
[41,59.5],
[34.5,95.8],
[65.8,56],
[58.2,55.6],
[54.8,34.9],
[71.9,27.1],
[64.8,3],
[68,16],
[69.2,45.3],
[67,44],
[57.4,29.1],
[57.7,86.3],
[36.7,24],
[55.6,35.2],
[65.9,38.4],
[64.5,33],
[64.9,31],
[30.4,41.5],
[63.4,64.3],
[68.5,92.8],
[73.5,48.8],
[72.4,49.7],
[76.1,97],
[62.8,72.9],
[61.5,49.6],
[66.7,57.4],
[54.1,60.1],
[38,57.8],
[28.2,69.8],
[27.5,58.3],
[28.2,47.4],
[49,67.6],
[36.6,58.9],
[47.1,64.6],
[51.9,54],
[60.9,88.2],
[63.5,81.2],
[71.4,46.8],
[55.4,32.4],
[57.6,35.7],
[99,90.8],
[28.2,31.8],
[21,20.2],
[65.5,10],
[46.5,8.9],
[39.4,33.5],
[71.4,60.7],
[60.7,60.5],
[74.5,51.2],
[73,42.2],
[81.2,72.4],
[91,75.5],
[67,92.1],
[73,20.6],
[61.8,21],
[52.5,51.4],
[80.4,27.3],
[43.2,48.5],
[38.7,25.4],
[42.4,78.7],
[51.7,96.3],
[60.1,79.6],
[54.2,69],
[43.3,62.3],
[70.7,58.7],
[44.7,59],
[87.6,98.9],
[82.9,79.3],
[81,89.6],
[79.7,86.3],
[86.8,84.1],
[8.3,51.7],
[35.3,97],
[28.1,52.8],
[28.9,39.3],
[66.7,36.3],
[34.4,51.1],
[45.2,59.3],
[55.7,93.9],
[87.4,87.2],
[52.4,31.9],
[36.3,71.5],
[97.8,30.2],
[99.7,99.4],
[96.9,95.8],
[61.6,91.8],
[60.9,86.9],
[62.7,45.8],
[87.8,87.1],
[49.6,48.5],
[42.7,51.8],
[80.3,55.1],
[45.6,55],
[62.8,93.1],
[31.6,87.2],
[31.3,47.1],
[52.2,52.2],
[33.8,49.7],
[38.4,9.3],
[86.7,26.5],
[61,100],
[45.9,86.7],
[41.3,24.5],
[59.2,15],
[72.7,11.2],
[78.3,13.6],
[95.2,3.1],
[96,11.9],
[83,27.6],
[32.4,10.3],
[44.4,8.6],
[35.2,40.3],
[58.9,5.6],
[54.7,13.3],
[49,6.1],
[69.9,25.1],
[58.3,65.9],
[72.7,57],
[72.8,57.6],
[74.8,86.4],
[5,58.1],
[5,37],
[59.8,68.7],
[54.3,82.9],
[48.9,66.1],
[56.7,59],
[43.5,48.7],
[46.4,66.5],
[64.2,76],
[45.5,97.8],
[52.8,83.3],
[85.6,89.1],
[82.4,79],
[54.8,95.6],
[30.7,27.4],
[32,4.1],
[66.9,47.4],
[42.4,83.6],
[82.8,69.8],
[72,55],
[76.9,34.4],
[85.3,100],
[80.3,97.3],
[96,89.7],
[97,73.4],
[91.9,22.9],
[17.9,27],
[32.1,37.6],
[54.5,36.3],
[53.3,70.7],
[34.7,53.9],
[76,43.5],
[29.1,45.2],
[27.5,0],
[57.2,0],
[59.5,14.3],
[61.7,0.6],
[59.1,0],
[50.5,35.8],
[45.2,43.2],
[59.7,4.9],
[30.1,15.3],
[34.2,34.4],
[10.9,76.6],
[40.4,96.7],
[33.8,65.7],
[23.1,51.8],
[35.6,76.2],
[31.7,69.8],
[25,62.5],
[18.7,31],
[51.7,29.8],
[69,58.3],
[50.9,72.7],
[66,58.1],
[19.3,54.8],
[18.2,43.3],
[67.8,17],
[16.3,82.5],
[62.4,22.6],
[65.9,43.1],
[53.5,42.1],
[37.6,40],
[73.5,20.7],
[70.1,32.7],
[65.3,65.9],
[73.2,94.8],
[75.1,87.8],
[28.3,27],
[30.5,32.3],
[25.8,0],
[56.6,0],
[41.3,17],
[43.9,54.7],
[54.9,56.1],
[51.9,48.8],
[40.2,68.2],
[43.1,95.6],
[39.3,81.6],
[43.1,94.7],
[40.6,74.6],
[25,75.4],
[11.6,62.6],
[22,86.6],
[29.7,62.8],
[19,76.3],
[4.7,66.3],
[44.3,79.7],
[9.4,61.5],
[30.4,83.5],
[35.9,89.5],
[22.2,52.6],
[7.1,49.7],
[62.1,0],
[66.8,9.8],
[61.7,2.2],
[62.2,26.6],
[65.7,70.4],
[71.4,61.4],
[67.1,84.4],
[72.1,98.3],
[66.2,89.9],
[70.4,98],
[63.5,95.5],
[65.5,100],
[68.5,84.6],
[67,98.3],
[73,100],
[70.2,95.5],
[73.6,98.6],
[80.5,87.1],
[80.4,97.3],
[98.1,75.7],
[99.5,99.5],
[78,88],
[74.8,77.7],
[64.1,76.2],
[58.6,31.9],
[65.6,18.7],
[60.9,61.5],
[72.5,67.4],
[22.2,0],
[40.3,10.3],
[43,23.7],
[34.1,31.2],
[43.4,67.6],
[52.1,62.9],
[58.7,88.9],
[65.5,98.6],
[34.2,37.5],
[53.9,74.1],
[53.7,96.7],
[76.7,97.2],
[68.1,95.8],
[55.1,95],
[70.1,91.7],
[66.7,88.1],
[69,98],
[94.7,89.1],
[8.1,83.5],
[23.3,95.8],
[70.2,100],
[66.8,97],
[99.3,99.5],
[95.5,98.6],
[34.3,62.3],
[41.5,64.3],
[44.1,79.7],
[15.3,68.1],
[33.3,57.8],
[48.3,81.1],
[45.5,93.6],
[47.7,79.1],
[57.4,96.2],
[58.1,19.6],
[68.2,15.6],
[75.3,15.4],
[29.1,34.7],
[28.4,43.5],
[10.3,64.9],
[19.8,78.8],
[32.7,96.2],
[55.6,65.7],
[36.7,32.7],
[44.4,13.3],
[60.2,16.1],
[66.2,15.7],
[70.1,2.8],
[28.6,27.6],
[34.4,9.1],
[62.4,20.7]];

var x = d3.scale.linear().domain([0,100]).range([40,400]);
var y = d3.scale.linear().domain([0,100]).range([60,600]);


 
var line = d3.svg.line()
		.interpolate("cardinal")
    .x(function(d,i) { return x(d[0]); })
    .y(function(d) { return y(d[1]); })
    .tension(0.5);
    
    
    
 var path=    
 svg.append("svg:path")
        .attr("class", "line")
        .attr("d", line(dataset));
        
 var totalLength = path.node().getTotalLength();   
 
 path
  .attr("stroke-dasharray", totalLength + " " + totalLength)
  .attr("stroke-dashoffset", totalLength)
  .transition()
    .duration(18000)
    .ease("linear")
    .attr("stroke-dashoffset", 0);
    
    
  
   
d3.select("svg").append("text")
.text(0)
.attr("class","xx")
.attr("font-size", "30px")
.attr("transform", "translate(25,25)")
.style("font-family","arial")
.style("opacity",0.8)
.transition()
.duration(18000)
.ease("linear")
.tween("text",function() {
var i = d3.interpolate(this.textContent,90);
return function(t) {
this.textContent = Math.round(i(t));
};

}

)

 

</script>


</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<title>7 Wonders players' streamgraphs</title>
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: auto;
  position: relative;
  width: 960px;
}

button {
  position: absolute;
  right: 10px;
  top: 10px;
}

</style>

<p>Select a player to see their scores
  <select id="players"></select>
</p>


<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

// To make my life easier for now...
var gameData;

d3.json('/jugglingnutcase/raw/9992169/games.json', function(err, games) {
  if (err) return console.error(err);

  // Save this for access anywhere
  gameData = games;

  // Set up all the players (with more than one game)
  var players = d3.nest()
    .key(function(player) { return player.name })
    .sortKeys(d3.ascending)
    .entries(games.sort(function(game1, game2) {
        var date1 = d3.time.format.iso.parse(game1.date);
        var date2 = d3.time.format.iso.parse(game2.date);
        return (date1 > date2) ? 1 : (date1 < date2) ? -1 : 0; 
      }).map(function(game) {
        return game.players
      }).reduce(function(a, b) {
        return a.concat(b)
      })
    )
    .filter(function(player) {
      return player.values.length > 1
    });

  d3.select('#players').selectAll('option')
    .data(players)
  .enter().append('option')
    .attr('value', function(d) { return d.key })
    .text(function(d) { return d.key })

  d3.select('#players')
    .on('change', stackThePlayer);

  // Try converting the data into something stackable
  var pointCategories = [
    'military',
    'coindebt',
    'wonder',
    'civic',
    'trade',
    'guilds',
    'science',
    'leaders'
  ];

  var colors = [
    'red',
    'brown',
    'gray',
    'blue',
    'yellow',
    'purple',
    'green',
    'pink'
  ];

  if (players.length > 0) {
    // Kick off the graph
    stackThePlayer();
  }

  function stackThePlayer() {
    var selectedPlayer = d3.select('option:checked').node().value;
    console.log('stacking ' + selectedPlayer);

    var playersGames = games.map(function(game) {
      return game.players.filter(function(player) {
        return player.name == selectedPlayer
      })
    }).reduce(function(a, b) {
      return a.concat(b)
    });

    var n = pointCategories.length, // number of layers: these should be point categories
        stack = d3.layout.stack().offset("wiggle"),
        gameLayers = stack(d3.range(pointCategories.length).map(function(cat) {
          // Return x:y pairs for each game for each point category
          return playersGames.map(function(game, i) {
            return {
              x: i,
              y: game.scores[pointCategories[cat]]
            }
          })
        }));

    var width = 960,
        height = 400;

    var x = d3.scale.linear()
        .domain([0, playersGames.length - 1])
        .range([0, width]);

    var y = d3.scale.linear()
        .domain([0, d3.max(gameLayers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); })])
        .range([height, 0]);

    var area = d3.svg.area()
        .x(function(d) { return x(d.x); })
        .y0(function(d) { return y(d.y0); })
        .y1(function(d) { return y(d.y0 + d.y); });

    // Remove the previous svg and replace it with every player switch
    if (!d3.select('svg').empty()) {
      d3.select('svg').remove()
    }

    var svg = d3.select('body').append('svg')
        .attr('width', width)
        .attr('height', height)

    var paths = svg.selectAll('path')
        .data(gameLayers)
      .enter().append('path')
        .attr('d', area)
        .style('fill', function(d, i) {
          return colors[i];
        })

  }
});

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.node {
  stroke: #fff;
  stroke-width: 2px;
}

.link {
  fill: none;
  stroke: #000;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>

var width = 960,
    height = 500;

var tree = d3.layout.tree()
    .size([width - 20, height - 20]);

var root = {},
    nodes = tree(root);

root.parent = root;
root.px = root.x;
root.py = root.y;

var diagonal = d3.svg.diagonal();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(10,10)");

var node = svg.selectAll(".node"),
    link = svg.selectAll(".link");

var duration = 750,
    timer = setInterval(update, duration);

function update() {
  if (nodes.length >= 500) return clearInterval(timer);

  // Add a new node to a random parent.
  var n = {id: nodes.length},
      p = nodes[Math.random() * nodes.length | 0];
  if (p.children) p.children.push(n); else p.children = [n];
  nodes.push(n);

  // Recompute the layout and data join.
  node = node.data(tree.nodes(root), function(d) { return d.id; });
  link = link.data(tree.links(nodes), function(d) { return d.source.id + "-" + d.target.id; });

  // Add entering nodes in the parent’s old position.
  node.enter().append("circle")
      .attr("class", "node")
      .attr("r", 4)
      .attr("cx", function(d) { return d.parent.px; })
      .attr("cy", function(d) { return d.parent.py; });

  // Add entering links in the parent’s old position.
  link.enter().insert("path", ".node")
      .attr("class", "link")
      .attr("d", function(d) {
        var o = {x: d.source.px, y: d.source.py};
        return diagonal({source: o, target: o});
      });

  // Transition nodes and links to their new positions.
  var t = svg.transition()
      .duration(duration);

  t.selectAll(".link")
      .attr("d", diagonal);

  t.selectAll(".node")
      .attr("cx", function(d) { return d.px = d.x; })
      .attr("cy", function(d) { return d.py = d.y; });
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  width: 960px;
  height: 500px;
  position: relative;
}
path.slice{
	stroke-width:2px;
}
polyline{
	opacity: .3;
	stroke: black;
	stroke-width: 2px;
	fill: none;
} 
svg text.percent{
	fill:white;
	text-anchor:middle;
	font-size:12px;
}

</style>
<body>
<button onClick="changeData()">Change Data</button>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="Donut3D.js"></script>
<script>

var salesData=[
	{label:"Basic", color:"#3366CC"},
	{label:"Plus", color:"#DC3912"},
	{label:"Lite", color:"#FF9900"},
	{label:"Elite", color:"#109618"},
	{label:"Delux", color:"#990099"}
];

var svg = d3.select("body").append("svg").attr("width",700).attr("height",300);

svg.append("g").attr("id","salesDonut");
svg.append("g").attr("id","quotesDonut");

Donut3D.draw("salesDonut", randomData(), 150, 150, 130, 100, 30, 0.4);
Donut3D.draw("quotesDonut", randomData(), 450, 150, 130, 100, 30, 0);
	
function changeData(){
	Donut3D.transition("salesDonut", randomData(), 130, 100, 30, 0.4);
	Donut3D.transition("quotesDonut", randomData(), 130, 100, 30, 0);
}

function randomData(){
	return salesData.map(function(d){ 
		return {label:d.label, value:1000*Math.random(), color:d.color};});
}
</script>
</body><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.css'>
    <link rel='stylesheet' href='http://www.liedman.net/leaflet-routing-machine/dist/leaflet-routing-machine.css'>
    
    <script src='http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.js' type='text/javascript'></script>
    <script src='https://rawgithub.com/leaflet-extras/leaflet-providers/gh-pages/leaflet-providers.js' type='text/javascript'></script>
    <script src='http://harrywood.co.uk/maps/examples/leaflet/leaflet-plugins/layer/vector/KML.js' type='text/javascript'></script>
    <script src='http://www.liedman.net/leaflet-routing-machine/dist/leaflet-routing-machine.min.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 1450px;
      height: 800px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart6d58205347ac' class = 'rChart leaflet'></div>    
    <script>
  var spec = {
 "dom": "chart6d58205347ac",
"width":           1450,
"height":            800,
"urlTemplate": "http://{s}.tile.osm.org/{z}/{x}/{y}.png",
"layerOpts": {
 "attribution": "Map data<a href=\"http://openstreetmap.org\">OpenStreetMap</a>\n         contributors, Imagery<a href=\"http://mapbox.com\">MapBox</a>" 
},
"center": [       40.73846,      -73.99413 ],
"zoom":             16,
"provider": "Stamen.TonerLite",
"id": "chart6d58205347ac" 
}

  var map = L.map(spec.dom, spec.mapOpts)
  
    map.setView(spec.center, spec.zoom);

    if (spec.provider){
      L.tileLayer.provider(spec.provider).addTo(map)    
    } else {
		  L.tileLayer(spec.urlTemplate, spec.layerOpts).addTo(map)
    }
     
    
    
    
    
    
    if (spec.circle2){
      for (var c in spec.circle2){
        var circle = L.circle(c.center, c.radius, c.opts)
         .addTo(map);
      }
    }
    
    
    
    
    
   
   
   
</script>
    
    
     <script>
     var mywaypoints = [
     [ 40.741, -73.993 ],
    [ 40.736, -73.993 ] 
    ]
     L.Routing.control({
      waypoints: [
        L.latLng.apply(null, mywaypoints[0]),
        L.latLng.apply(null, mywaypoints[1])
      ]
     }).addTo(map);
     </script>    
  </body>
  <script>
  function getURLParameter(name) {
    return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null
  }
  console.log(getURLParameter("viewer_pane"))
  if (getURLParameter("viewer_pane") === "1"){
    document.write("<style>.rChart { width: 100% }</style>");
  }
  </script>
</html><!DOCTYPE html>
<meta charset="utf-8">
<body>
<button onClick="changeData()">Change Data</button>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="gradientPie.js"></script>
<script>

var salesData=[
	{label:"Basic", color:"#3366CC"},
	{label:"Plus", color:"#DC3912"},
	{label:"Lite", color:"#FF9900"},
	{label:"Elite", color:"#109618"},
	{label:"Delux", color:"#990099"}
];

var svg = d3.select("body").append("svg").attr("width", 700).attr("height", 400);

svg.append("g").attr("id","salespie");
svg.append("g").attr("id","quotespie");
	
gradPie.draw("salespie", randomData(), 200, 200, 160);
gradPie.draw("quotespie", randomData(), 500, 200, 100);

function changeData(){
	gradPie.transition("salespie", randomData(), 160);
	gradPie.transition("quotespie", randomData(), 100);
}

function randomData(){
	return salesData.map(function(d){ 
		return {label:d.label, value:1000*Math.random(), color:d.color};});
}
</script>
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Nepal Topographic Contours</title>

    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
    <script type="text/javascript" src="http://d3js.org/topojson.v1.min.js"></script>

</head>

<body>

</body>
<script type="text/javascript">
var h = 500,
    w = 960;

// set-up unit projection and path
var projection = d3.geo.mercator()
    .scale(1)
    .translate([0, 0]);

var path = d3.geo.path()
    .projection(projection);

// set-up svg canvas
var svg = d3.select("body").append("svg")
    .attr("height", h)
    .attr("width", w);

// set-up scale for colour coding contours
var cScale = d3.scale.linear()
    .domain([0, 1]);

// read in topojson of Nepal
d3.json("z_contours_500_clipped.json", function(error, nepal) {

    // first variable is used to centre and scale map to viewport
    // could have used the bbox feature (see https://github.com/mbostock/topojson/issues/67) 
    var bTopo = topojson.feature(nepal, nepal.objects.contours_500_clipped),
        topo = bTopo.features;

    // calculate range for colours based on ELVE property 
    // Note when converting to topojon the default is to REMOVE all properties 
    // from the input file, you need to use the -p switch.
    var hRange = d3.extent(topo, function(d, i) {
        return d.properties.ELEV
    });

    cScale.domain(hRange);

    // calculate bounds, scale and transform 
    // see http://stackoverflow.com/questions/14492284/center-a-map-in-d3-given-a-geojson-object
    var b = path.bounds(bTopo),
        s = .95 / Math.max((b[1][0] - b[0][0]) / w, (b[1][1] - b[0][1]) / h),
        t = [(w - s * (b[1][0] + b[0][0])) / 2, (h - s * (b[1][1] + b[0][1])) / 2];

    projection.scale(s)
        .translate(t);

    svg.selectAll("path")
        .data(topo).enter()
        .append("path")
        .style("fill", "none")
        .style("stroke", function(d, i) {
            return interp(cScale(d.properties.ELEV));
        })
        .attr("d", path)        
        .on("mouseover", highlight) // just a little example of what's available in terms of interaction
        .on("mouseout", function (d,i) {unhighlight(this,d); 
        });

});

// function to interpolate between to colours
// see http://stackoverflow.com/questions/12217121/continuous-color-scale-from-discrete-domain-of-strings

function interp(x) {
    var ans = d3.interpolateLab("#ffffe5", "#004529")(x);
    return ans
}
// A simple highlight example
function highlight(x) {

    var s = d3.select(this);

    s.style("stroke", "red");

}
function unhighlight(x,y) {

    var old = y.properties.ELEV;
    var u = d3.select(x);

    u.style("stroke", function(d, i) {
            return interp(cScale(old));
        })
}
</script>

</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title></title>
</head>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tinycolor/1.1.2/tinycolor.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>

<script>
    function cSphere(ctx, x, y, radius, baseColor, highlightColor) {
        // Coloured radial gradient in circle shape

        baseColor = baseColor || "black";
        highlightColor = highlightColor || "white";

        var c = tinycolor(baseColor).toHsv(),
            stop1 = tinycolor({h: c.h, s: c.s + (255 - c.s)* 0.8, v: c.v * 0.6}),
            stop2 = tinycolor({
                h: c.h,
                s: c.s,
                v: c.v * 0.01 //0.65
            });

        var startAngle = 0;
        var endAngle = Math.PI * 2;
        var antiClockwise = false;

        var radialGradient = ctx.createRadialGradient(
            -0.5 * radius + x, -0.5 * radius + y,
            .0 * radius,
            x, y, 1.5 * radius
        );
        radialGradient.addColorStop(0, highlightColor);
        radialGradient.addColorStop(0.6, stop1.toHexString());
        radialGradient.addColorStop(0.9, stop2.toHexString());
        radialGradient.addColorStop(1, stop2.toHexString());

        ctx.fillStyle = radialGradient;

        ctx.beginPath();
        ctx.arc(x, y, radius, startAngle, endAngle);
        ctx.closePath();

        ctx.fill();
    }
    var ctx = canvas = d3.select("body").append("canvas").attr({width: 1200, height: 1000}).node().getContext("2d");
    ctx.shadowColor = "steelblue";
    ctx.shadowOffsetX = 10; ctx.shadowOffsetY = 10; ctx.shadowBlur = 10;
    var colors = d3.range(20).map(d3.scale.category20()).map(function(c, i) {
        var r = 50, columns = 5;
        cSphere(ctx, (i  % columns) * 2 * r + r, r + 2 * r * Math.floor(i/columns), r, c)
    });

</script>
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<script src="data:application/x-javascript,%28function%28%29%20%7B%0A%20%20%2F%2F%20If%20window%2EHTMLWidgets%20is%20already%20defined%2C%20then%20use%20it%3B%20otherwise%20create%20a%0A%20%20%2F%2F%20new%20object%2E%20This%20allows%20preceding%20code%20to%20set%20options%20that%20affect%20the%0A%20%20%2F%2F%20initialization%20process%20%28though%20none%20currently%20exist%29%2E%0A%20%20window%2EHTMLWidgets%20%3D%20window%2EHTMLWidgets%20%7C%7C%20%7B%7D%3B%0A%0A%20%20%2F%2F%20See%20if%20we%27re%20running%20in%20a%20viewer%20pane%2E%20If%20not%2C%20we%27re%20in%20a%20web%20browser%2E%0A%20%20var%20viewerMode%20%3D%20window%2EHTMLWidgets%2EviewerMode%20%3D%0A%20%20%20%20%20%20%2F%5Cbviewer%5Fpane%3D1%5Cb%2F%2Etest%28window%2Elocation%29%3B%0A%0A%20%20%2F%2F%20See%20if%20we%27re%20running%20in%20Shiny%20mode%2E%20If%20not%2C%20it%27s%20a%20static%20document%2E%0A%20%20%2F%2F%20Note%20that%20static%20widgets%20can%20appear%20in%20both%20Shiny%20and%20static%20modes%2C%20but%0A%20%20%2F%2F%20obviously%2C%20Shiny%20widgets%20can%20only%20appear%20in%20Shiny%20apps%2Fdocuments%2E%0A%20%20var%20shinyMode%20%3D%20window%2EHTMLWidgets%2EshinyMode%20%3D%0A%20%20%20%20%20%20typeof%28window%2EShiny%29%20%21%3D%3D%20%22undefined%22%20%26%26%20%21%21window%2EShiny%2EoutputBindings%3B%0A%0A%20%20%2F%2F%20We%20can%27t%20count%20on%20jQuery%20being%20available%2C%20so%20we%20implement%20our%20own%0A%20%20%2F%2F%20version%20if%20necessary%2E%0A%20%20function%20querySelectorAll%28scope%2C%20selector%29%20%7B%0A%20%20%20%20if%20%28typeof%28jQuery%29%20%21%3D%3D%20%22undefined%22%20%26%26%20scope%20instanceof%20jQuery%29%20%7B%0A%20%20%20%20%20%20return%20scope%2Efind%28selector%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28scope%2EquerySelectorAll%29%20%7B%0A%20%20%20%20%20%20return%20scope%2EquerySelectorAll%28selector%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20function%20asArray%28value%29%20%7B%0A%20%20%20%20if%20%28value%20%3D%3D%3D%20null%29%0A%20%20%20%20%20%20return%20%5B%5D%3B%0A%20%20%20%20if%20%28%24%2EisArray%28value%29%29%0A%20%20%20%20%20%20return%20value%3B%0A%20%20%20%20return%20%5Bvalue%5D%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Implement%20jQuery%27s%20extend%0A%20%20function%20extend%28target%20%2F%2A%2C%20%2E%2E%2E%20%2A%2F%29%20%7B%0A%20%20%20%20if%20%28arguments%2Elength%20%3D%3D%201%29%20%7B%0A%20%20%20%20%20%20return%20target%3B%0A%20%20%20%20%7D%0A%20%20%20%20for%20%28var%20i%20%3D%201%3B%20i%20%3C%20arguments%2Elength%3B%20i%2B%2B%29%20%7B%0A%20%20%20%20%20%20var%20source%20%3D%20arguments%5Bi%5D%3B%0A%20%20%20%20%20%20for%20%28var%20prop%20in%20source%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28source%2EhasOwnProperty%28prop%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20target%5Bprop%5D%20%3D%20source%5Bprop%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20return%20target%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20IE8%20doesn%27t%20support%20Array%2EforEach%2E%0A%20%20function%20forEach%28values%2C%20callback%2C%20thisArg%29%20%7B%0A%20%20%20%20if%20%28values%2EforEach%29%20%7B%0A%20%20%20%20%20%20values%2EforEach%28callback%2C%20thisArg%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20for%20%28var%20i%20%3D%200%3B%20i%20%3C%20values%2Elength%3B%20i%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20callback%2Ecall%28thisArg%2C%20values%5Bi%5D%2C%20i%2C%20values%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20Replaces%20the%20specified%20method%20with%20the%20return%20value%20of%20funcSource%2E%0A%20%20%2F%2F%0A%20%20%2F%2F%20Note%20that%20funcSource%20should%20not%20BE%20the%20new%20method%2C%20it%20should%20be%20a%20function%0A%20%20%2F%2F%20that%20RETURNS%20the%20new%20method%2E%20funcSource%20receives%20a%20single%20argument%20that%20is%0A%20%20%2F%2F%20the%20overridden%20method%2C%20it%20can%20be%20called%20from%20the%20new%20method%2E%20The%20overridden%0A%20%20%2F%2F%20method%20can%20be%20called%20like%20a%20regular%20function%2C%20it%20has%20the%20target%20permanently%0A%20%20%2F%2F%20bound%20to%20it%20so%20%22this%22%20will%20work%20correctly%2E%0A%20%20function%20overrideMethod%28target%2C%20methodName%2C%20funcSource%29%20%7B%0A%20%20%20%20var%20superFunc%20%3D%20target%5BmethodName%5D%20%7C%7C%20function%28%29%20%7B%7D%3B%0A%20%20%20%20var%20superFuncBound%20%3D%20function%28%29%20%7B%0A%20%20%20%20%20%20return%20superFunc%2Eapply%28target%2C%20arguments%29%3B%0A%20%20%20%20%7D%3B%0A%20%20%20%20target%5BmethodName%5D%20%3D%20funcSource%28superFuncBound%29%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Implement%20a%20vague%20facsimilie%20of%20jQuery%27s%20data%20method%0A%20%20function%20elementData%28el%2C%20name%2C%20value%29%20%7B%0A%20%20%20%20if%20%28arguments%2Elength%20%3D%3D%202%29%20%7B%0A%20%20%20%20%20%20return%20el%5B%22htmlwidget%5Fdata%5F%22%20%2B%20name%5D%3B%0A%20%20%20%20%7D%20else%20if%20%28arguments%2Elength%20%3D%3D%203%29%20%7B%0A%20%20%20%20%20%20el%5B%22htmlwidget%5Fdata%5F%22%20%2B%20name%5D%20%3D%20value%3B%0A%20%20%20%20%20%20return%20el%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Wrong%20number%20of%20arguments%20for%20elementData%3A%20%22%20%2B%0A%20%20%20%20%20%20%20%20arguments%2Elength%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20http%3A%2F%2Fstackoverflow%2Ecom%2Fquestions%2F3446170%2Fescape%2Dstring%2Dfor%2Duse%2Din%2Djavascript%2Dregex%0A%20%20function%20escapeRegExp%28str%29%20%7B%0A%20%20%20%20return%20str%2Ereplace%28%2F%5B%5C%2D%5C%5B%5C%5D%5C%2F%5C%7B%5C%7D%5C%28%5C%29%5C%2A%5C%2B%5C%3F%5C%2E%5C%5C%5C%5E%5C%24%5C%7C%5D%2Fg%2C%20%22%5C%5C%24%26%22%29%3B%0A%20%20%7D%0A%0A%20%20function%20hasClass%28el%2C%20className%29%20%7B%0A%20%20%20%20var%20re%20%3D%20new%20RegExp%28%22%5C%5Cb%22%20%2B%20escapeRegExp%28className%29%20%2B%20%22%5C%5Cb%22%29%3B%0A%20%20%20%20return%20re%2Etest%28el%2EclassName%29%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20elements%20%2D%20array%20%28or%20array%2Dlike%20object%29%20of%20HTML%20elements%0A%20%20%2F%2F%20className%20%2D%20class%20name%20to%20test%20for%0A%20%20%2F%2F%20include%20%2D%20if%20true%2C%20only%20return%20elements%20with%20given%20className%3B%0A%20%20%2F%2F%20%20%20if%20false%2C%20only%20return%20elements%20%2Awithout%2A%20given%20className%0A%20%20function%20filterByClass%28elements%2C%20className%2C%20include%29%20%7B%0A%20%20%20%20var%20results%20%3D%20%5B%5D%3B%0A%20%20%20%20for%20%28var%20i%20%3D%200%3B%20i%20%3C%20elements%2Elength%3B%20i%2B%2B%29%20%7B%0A%20%20%20%20%20%20if%20%28hasClass%28elements%5Bi%5D%2C%20className%29%20%3D%3D%20include%29%0A%20%20%20%20%20%20%20%20results%2Epush%28elements%5Bi%5D%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20results%3B%0A%20%20%7D%0A%0A%20%20function%20on%28obj%2C%20eventName%2C%20func%29%20%7B%0A%20%20%20%20if%20%28obj%2EaddEventListener%29%20%7B%0A%20%20%20%20%20%20obj%2EaddEventListener%28eventName%2C%20func%2C%20false%29%3B%0A%20%20%20%20%7D%20else%20if%20%28obj%2EattachEvent%29%20%7B%0A%20%20%20%20%20%20obj%2EattachEvent%28eventName%2C%20func%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20function%20off%28obj%2C%20eventName%2C%20func%29%20%7B%0A%20%20%20%20if%20%28obj%2EremoveEventListener%29%0A%20%20%20%20%20%20obj%2EremoveEventListener%28eventName%2C%20func%2C%20false%29%3B%0A%20%20%20%20else%20if%20%28obj%2EdetachEvent%29%20%7B%0A%20%20%20%20%20%20obj%2EdetachEvent%28eventName%2C%20func%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20Translate%20array%20of%20values%20to%20top%2Fright%2Fbottom%2Fleft%2C%20as%20usual%20with%0A%20%20%2F%2F%20the%20%22padding%22%20CSS%20property%0A%20%20%2F%2F%20https%3A%2F%2Fdeveloper%2Emozilla%2Eorg%2Fen%2DUS%2Fdocs%2FWeb%2FCSS%2Fpadding%0A%20%20function%20unpackPadding%28value%29%20%7B%0A%20%20%20%20if%20%28typeof%28value%29%20%3D%3D%3D%20%22number%22%29%0A%20%20%20%20%20%20value%20%3D%20%5Bvalue%5D%3B%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%201%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B0%5D%2C%20bottom%3A%20value%5B0%5D%2C%20left%3A%20value%5B0%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%202%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B1%5D%2C%20bottom%3A%20value%5B0%5D%2C%20left%3A%20value%5B1%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%203%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B1%5D%2C%20bottom%3A%20value%5B2%5D%2C%20left%3A%20value%5B1%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28value%2Elength%20%3D%3D%3D%204%29%20%7B%0A%20%20%20%20%20%20return%20%7Btop%3A%20value%5B0%5D%2C%20right%3A%20value%5B1%5D%2C%20bottom%3A%20value%5B2%5D%2C%20left%3A%20value%5B3%5D%7D%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20Convert%20an%20unpacked%20padding%20object%20to%20a%20CSS%20value%0A%20%20function%20paddingToCss%28paddingObj%29%20%7B%0A%20%20%20%20return%20paddingObj%2Etop%20%2B%20%22px%20%22%20%2B%20paddingObj%2Eright%20%2B%20%22px%20%22%20%2B%20paddingObj%2Ebottom%20%2B%20%22px%20%22%20%2B%20paddingObj%2Eleft%20%2B%20%22px%22%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Makes%20a%20number%20suitable%20for%20CSS%0A%20%20function%20px%28x%29%20%7B%0A%20%20%20%20if%20%28typeof%28x%29%20%3D%3D%3D%20%22number%22%29%0A%20%20%20%20%20%20return%20x%20%2B%20%22px%22%3B%0A%20%20%20%20else%0A%20%20%20%20%20%20return%20x%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Retrieves%20runtime%20widget%20sizing%20information%20for%20an%20element%2E%0A%20%20%2F%2F%20The%20return%20value%20is%20either%20null%2C%20or%20an%20object%20with%20fill%2C%20padding%2C%0A%20%20%2F%2F%20defaultWidth%2C%20defaultHeight%20fields%2E%0A%20%20function%20sizingPolicy%28el%29%20%7B%0A%20%20%20%20var%20sizingEl%20%3D%20document%2EquerySelector%28%22script%5Bdata%2Dfor%3D%27%22%20%2B%20el%2Eid%20%2B%20%22%27%5D%5Btype%3D%27application%2Fhtmlwidget%2Dsizing%27%5D%22%29%3B%0A%20%20%20%20if%20%28%21sizingEl%29%0A%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20var%20sp%20%3D%20JSON%2Eparse%28sizingEl%2EtextContent%20%7C%7C%20sizingEl%2Etext%20%7C%7C%20%22%7B%7D%22%29%3B%0A%20%20%20%20if%20%28viewerMode%29%20%7B%0A%20%20%20%20%20%20return%20sp%2Eviewer%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20return%20sp%2Ebrowser%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20function%20initSizing%28el%29%20%7B%0A%20%20%20%20var%20sizing%20%3D%20sizingPolicy%28el%29%3B%0A%20%20%20%20if%20%28%21sizing%29%0A%20%20%20%20%20%20return%3B%0A%0A%20%20%20%20var%20cel%20%3D%20document%2EgetElementById%28%22htmlwidget%5Fcontainer%22%29%3B%0A%20%20%20%20if%20%28%21cel%29%0A%20%20%20%20%20%20return%3B%0A%0A%20%20%20%20if%20%28typeof%28sizing%2Epadding%29%20%21%3D%3D%20%22undefined%22%29%20%7B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Emargin%20%3D%20%220%22%3B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Epadding%20%3D%20paddingToCss%28unpackPadding%28sizing%2Epadding%29%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20%28sizing%2Efill%29%20%7B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Eoverflow%20%3D%20%22hidden%22%3B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Ewidth%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20document%2Ebody%2Estyle%2Eheight%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20document%2EdocumentElement%2Estyle%2Ewidth%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20document%2EdocumentElement%2Estyle%2Eheight%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20if%20%28cel%29%20%7B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Eposition%20%3D%20%22absolute%22%3B%0A%20%20%20%20%20%20%20%20var%20pad%20%3D%20unpackPadding%28sizing%2Epadding%29%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Etop%20%3D%20pad%2Etop%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Eright%20%3D%20pad%2Eright%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Ebottom%20%3D%20pad%2Ebottom%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20cel%2Estyle%2Eleft%20%3D%20pad%2Eleft%20%2B%20%22px%22%3B%0A%20%20%20%20%20%20%20%20el%2Estyle%2Ewidth%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20%20%20el%2Estyle%2Eheight%20%3D%20%22100%25%22%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20getWidth%3A%20function%28%29%20%7B%20return%20cel%2EoffsetWidth%3B%20%7D%2C%0A%20%20%20%20%20%20%20%20getHeight%3A%20function%28%29%20%7B%20return%20cel%2EoffsetHeight%3B%20%7D%0A%20%20%20%20%20%20%7D%3B%0A%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20el%2Estyle%2Ewidth%20%3D%20px%28sizing%2Ewidth%29%3B%0A%20%20%20%20%20%20el%2Estyle%2Eheight%20%3D%20px%28sizing%2Eheight%29%3B%0A%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20getWidth%3A%20function%28%29%20%7B%20return%20el%2EoffsetWidth%3B%20%7D%2C%0A%20%20%20%20%20%20%20%20getHeight%3A%20function%28%29%20%7B%20return%20el%2EoffsetHeight%3B%20%7D%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20Default%20implementations%20for%20methods%0A%20%20var%20defaults%20%3D%20%7B%0A%20%20%20%20find%3A%20function%28scope%29%20%7B%0A%20%20%20%20%20%20return%20querySelectorAll%28scope%2C%20%22%2E%22%20%2B%20this%2Ename%29%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20renderError%3A%20function%28el%2C%20err%29%20%7B%0A%20%20%20%20%20%20var%20%24el%20%3D%20%24%28el%29%3B%0A%0A%20%20%20%20%20%20this%2EclearError%28el%29%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Add%20all%20these%20error%20classes%2C%20as%20Shiny%20does%0A%20%20%20%20%20%20var%20errClass%20%3D%20%22shiny%2Doutput%2Derror%22%3B%0A%20%20%20%20%20%20if%20%28err%2Etype%20%21%3D%3D%20null%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20use%20the%20classes%20of%20the%20error%20condition%20as%20CSS%20class%20names%0A%20%20%20%20%20%20%20%20errClass%20%3D%20errClass%20%2B%20%22%20%22%20%2B%20%24%2Emap%28asArray%28err%2Etype%29%2C%20function%28type%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20errClass%20%2B%20%22%2D%22%20%2B%20type%3B%0A%20%20%20%20%20%20%20%20%7D%29%2Ejoin%28%22%20%22%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20errClass%20%3D%20errClass%20%2B%20%22%20htmlwidgets%2Derror%22%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Is%20el%20inline%20or%20block%3F%20If%20inline%20or%20inline%2Dblock%2C%20just%20display%3Anone%20it%0A%20%20%20%20%20%20%2F%2F%20and%20add%20an%20inline%20error%2E%0A%20%20%20%20%20%20var%20display%20%3D%20%24el%2Ecss%28%22display%22%29%3B%0A%20%20%20%20%20%20%24el%2Edata%28%22restore%2Ddisplay%2Dmode%22%2C%20display%29%3B%0A%0A%20%20%20%20%20%20if%20%28display%20%3D%3D%3D%20%22inline%22%20%7C%7C%20display%20%3D%3D%3D%20%22inline%2Dblock%22%29%20%7B%0A%20%20%20%20%20%20%20%20%24el%2Ehide%28%29%3B%0A%20%20%20%20%20%20%20%20if%20%28err%2Emessage%20%21%3D%3D%20%22%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20errorSpan%20%3D%20%24%28%22%3Cspan%3E%22%29%2EaddClass%28errClass%29%3B%0A%20%20%20%20%20%20%20%20%20%20errorSpan%2Etext%28err%2Emessage%29%3B%0A%20%20%20%20%20%20%20%20%20%20%24el%2Eafter%28errorSpan%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%20else%20if%20%28display%20%3D%3D%3D%20%22block%22%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20block%2C%20add%20an%20error%20just%20after%20the%20el%2C%20set%20visibility%3Anone%20on%20the%0A%20%20%20%20%20%20%20%20%2F%2F%20el%2C%20and%20position%20the%20error%20to%20be%20on%20top%20of%20the%20el%2E%0A%20%20%20%20%20%20%20%20%2F%2F%20Mark%20it%20with%20a%20unique%20ID%20and%20CSS%20class%20so%20we%20can%20remove%20it%20later%2E%0A%20%20%20%20%20%20%20%20%24el%2Ecss%28%22visibility%22%2C%20%22hidden%22%29%3B%0A%20%20%20%20%20%20%20%20if%20%28err%2Emessage%20%21%3D%3D%20%22%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20errorDiv%20%3D%20%24%28%22%3Cdiv%3E%22%29%2EaddClass%28errClass%29%2Ecss%28%22position%22%2C%20%22absolute%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22top%22%2C%20el%2EoffsetTop%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22left%22%2C%20el%2EoffsetLeft%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20setting%20width%20can%20push%20out%20the%20page%20size%2C%20forcing%20otherwise%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20unnecessary%20scrollbars%20to%20appear%20and%20making%20it%20impossible%20for%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20element%20to%20shrink%3B%20so%20use%20max%2Dwidth%20instead%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22maxWidth%22%2C%20el%2EoffsetWidth%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22height%22%2C%20el%2EoffsetHeight%29%3B%0A%20%20%20%20%20%20%20%20%20%20errorDiv%2Etext%28err%2Emessage%29%3B%0A%20%20%20%20%20%20%20%20%20%20%24el%2Eafter%28errorDiv%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Really%20dumb%20way%20to%20keep%20the%20size%2Fposition%20of%20the%20error%20in%20sync%20with%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20parent%20element%20as%20the%20window%20is%20resized%20or%20whatever%2E%0A%20%20%20%20%20%20%20%20%20%20var%20intId%20%3D%20setInterval%28function%28%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28%21errorDiv%5B0%5D%2EparentElement%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20clearInterval%28intId%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20errorDiv%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22top%22%2C%20el%2EoffsetTop%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22left%22%2C%20el%2EoffsetLeft%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22maxWidth%22%2C%20el%2EoffsetWidth%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ecss%28%22height%22%2C%20el%2EoffsetHeight%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%20500%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20clearError%3A%20function%28el%29%20%7B%0A%20%20%20%20%20%20var%20%24el%20%3D%20%24%28el%29%3B%0A%20%20%20%20%20%20var%20display%20%3D%20%24el%2Edata%28%22restore%2Ddisplay%2Dmode%22%29%3B%0A%20%20%20%20%20%20%24el%2Edata%28%22restore%2Ddisplay%2Dmode%22%2C%20null%29%3B%0A%0A%20%20%20%20%20%20if%20%28display%20%3D%3D%3D%20%22inline%22%20%7C%7C%20display%20%3D%3D%3D%20%22inline%2Dblock%22%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28display%29%0A%20%20%20%20%20%20%20%20%20%20%24el%2Ecss%28%22display%22%2C%20display%29%3B%0A%20%20%20%20%20%20%20%20%24%28el%2EnextSibling%29%2Efilter%28%22%2Ehtmlwidgets%2Derror%22%29%2Eremove%28%29%3B%0A%20%20%20%20%20%20%7D%20else%20if%20%28display%20%3D%3D%3D%20%22block%22%29%7B%0A%20%20%20%20%20%20%20%20%24el%2Ecss%28%22visibility%22%2C%20%22inherit%22%29%3B%0A%20%20%20%20%20%20%20%20%24%28el%2EnextSibling%29%2Efilter%28%22%2Ehtmlwidgets%2Derror%22%29%2Eremove%28%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20sizing%3A%20%7B%7D%0A%20%20%7D%3B%0A%0A%20%20%2F%2F%20Called%20by%20widget%20bindings%20to%20register%20a%20new%20type%20of%20widget%2E%20The%20definition%0A%20%20%2F%2F%20object%20can%20contain%20the%20following%20properties%3A%0A%20%20%2F%2F%20%2D%20name%20%28required%29%20%2D%20A%20string%20indicating%20the%20binding%20name%2C%20which%20will%20be%0A%20%20%2F%2F%20%20%20used%20by%20default%20as%20the%20CSS%20classname%20to%20look%20for%2E%0A%20%20%2F%2F%20%2D%20initialize%20%28optional%29%20%2D%20A%20function%28el%29%20that%20will%20be%20called%20once%20per%0A%20%20%2F%2F%20%20%20widget%20element%3B%20if%20a%20value%20is%20returned%2C%20it%20will%20be%20passed%20as%20the%20third%0A%20%20%2F%2F%20%20%20value%20to%20renderValue%2E%0A%20%20%2F%2F%20%2D%20renderValue%20%28required%29%20%2D%20A%20function%28el%2C%20data%2C%20initValue%29%20that%20will%20be%0A%20%20%2F%2F%20%20%20called%20with%20data%2E%20Static%20contexts%20will%20cause%20this%20to%20be%20called%20once%20per%0A%20%20%2F%2F%20%20%20element%3B%20Shiny%20apps%20will%20cause%20this%20to%20be%20called%20multiple%20times%20per%0A%20%20%2F%2F%20%20%20element%2C%20as%20the%20data%20changes%2E%0A%20%20window%2EHTMLWidgets%2Ewidget%20%3D%20function%28definition%29%20%7B%0A%20%20%20%20if%20%28%21definition%2Ename%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Widget%20must%20have%20a%20name%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28%21definition%2Etype%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Widget%20must%20have%20a%20type%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Currently%20we%20only%20support%20output%20widgets%0A%20%20%20%20if%20%28definition%2Etype%20%21%3D%3D%20%22output%22%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Unrecognized%20widget%20type%20%27%22%20%2B%20definition%2Etype%20%2B%20%22%27%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20TODO%3A%20Verify%20that%20%2Ename%20is%20a%20valid%20CSS%20classname%0A%20%20%20%20if%20%28%21definition%2ErenderValue%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Widget%20must%20have%20a%20renderValue%20function%22%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20For%20static%20rendering%20%28non%2DShiny%29%2C%20use%20a%20simple%20widget%20registration%0A%20%20%20%20%2F%2F%20scheme%2E%20We%20also%20use%20this%20scheme%20for%20Shiny%20apps%2Fdocuments%20that%20also%0A%20%20%20%20%2F%2F%20contain%20static%20widgets%2E%0A%20%20%20%20window%2EHTMLWidgets%2Ewidgets%20%3D%20window%2EHTMLWidgets%2Ewidgets%20%7C%7C%20%5B%5D%3B%0A%20%20%20%20%2F%2F%20Merge%20defaults%20into%20the%20definition%3B%20don%27t%20mutate%20the%20original%20definition%2E%0A%20%20%20%20var%20staticBinding%20%3D%20extend%28%7B%7D%2C%20defaults%2C%20definition%29%3B%0A%20%20%20%20overrideMethod%28staticBinding%2C%20%22find%22%2C%20function%28superfunc%29%20%7B%0A%20%20%20%20%20%20return%20function%28scope%29%20%7B%0A%20%20%20%20%20%20%20%20var%20results%20%3D%20superfunc%28scope%29%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20Filter%20out%20Shiny%20outputs%2C%20we%20only%20want%20the%20static%20kind%0A%20%20%20%20%20%20%20%20return%20filterByClass%28results%2C%20%22html%2Dwidget%2Doutput%22%2C%20false%29%3B%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%29%3B%0A%20%20%20%20window%2EHTMLWidgets%2Ewidgets%2Epush%28staticBinding%29%3B%0A%0A%20%20%20%20if%20%28shinyMode%29%20%7B%0A%20%20%20%20%20%20%2F%2F%20Shiny%20is%20running%2E%20Register%20the%20definition%20as%20an%20output%20binding%2E%0A%0A%20%20%20%20%20%20%2F%2F%20Merge%20defaults%20into%20the%20definition%3B%20don%27t%20mutate%20the%20original%20definition%2E%0A%20%20%20%20%20%20%2F%2F%20The%20base%20object%20is%20a%20Shiny%20output%20binding%20if%20we%27re%20running%20in%20Shiny%20mode%2C%0A%20%20%20%20%20%20%2F%2F%20or%20an%20empty%20object%20if%20we%27re%20not%2E%0A%20%20%20%20%20%20var%20shinyBinding%20%3D%20extend%28new%20Shiny%2EOutputBinding%28%29%2C%20defaults%2C%20definition%29%3B%0A%0A%20%20%20%20%20%20%2F%2F%20Wrap%20renderValue%20to%20handle%20initialization%2C%20which%20unfortunately%20isn%27t%0A%20%20%20%20%20%20%2F%2F%20supported%20natively%20by%20Shiny%20at%20the%20time%20of%20this%20writing%2E%0A%0A%20%20%20%20%20%20%2F%2F%20NB%3A%20shinyBinding%2Einitialize%20may%20be%20undefined%2C%20as%20it%27s%20optional%2E%0A%0A%20%20%20%20%20%20%2F%2F%20Rename%20initialize%20to%20make%20sure%20it%20isn%27t%20called%20by%20a%20future%20version%0A%20%20%20%20%20%20%2F%2F%20of%20Shiny%20that%20does%20support%20initialize%20directly%2E%0A%20%20%20%20%20%20shinyBinding%2E%5Fhtmlwidgets%5Finitialize%20%3D%20shinyBinding%2Einitialize%3B%0A%20%20%20%20%20%20delete%20shinyBinding%2Einitialize%3B%0A%0A%20%20%20%20%20%20overrideMethod%28shinyBinding%2C%20%22find%22%2C%20function%28superfunc%29%20%7B%0A%20%20%20%20%20%20%20%20return%20function%28scope%29%20%7B%0A%0A%20%20%20%20%20%20%20%20%20%20var%20results%20%3D%20superfunc%28scope%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Only%20return%20elements%20that%20are%20Shiny%20outputs%2C%20not%20static%20ones%0A%20%20%20%20%20%20%20%20%20%20var%20dynamicResults%20%3D%20results%2Efilter%28%22%2Ehtml%2Dwidget%2Doutput%22%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20It%27s%20possible%20that%20whatever%20caused%20Shiny%20to%20think%20there%20might%20be%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20new%20dynamic%20outputs%2C%20also%20caused%20there%20to%20be%20new%20static%20outputs%2E%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Since%20there%20might%20be%20lots%20of%20different%20htmlwidgets%20bindings%2C%20we%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20schedule%20execution%20for%20later%2D%2Dno%20need%20to%20staticRender%20multiple%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20times%2E%0A%20%20%20%20%20%20%20%20%20%20if%20%28results%2Elength%20%21%3D%3D%20dynamicResults%2Elength%29%0A%20%20%20%20%20%20%20%20%20%20%20%20scheduleStaticRender%28%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20return%20dynamicResults%3B%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20overrideMethod%28shinyBinding%2C%20%22renderValue%22%2C%20function%28superfunc%29%20%7B%0A%20%20%20%20%20%20%20%20return%20function%28el%2C%20data%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Resolve%20strings%20marked%20as%20javascript%20literals%20to%20objects%0A%20%20%20%20%20%20%20%20%20%20if%20%28%21%28data%2Eevals%20instanceof%20Array%29%29%20data%2Eevals%20%3D%20%5Bdata%2Eevals%5D%3B%0A%20%20%20%20%20%20%20%20%20%20for%20%28var%20i%20%3D%200%3B%20data%2Eevals%20%26%26%20i%20%3C%20data%2Eevals%2Elength%3B%20i%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20window%2EHTMLWidgets%2EevaluateStringMember%28data%2Ex%2C%20data%2Eevals%5Bi%5D%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20if%20%28%21this%2ErenderOnNullValue%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28data%2Ex%20%3D%3D%3D%20null%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20el%2Estyle%2Evisibility%20%3D%20%22hidden%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20el%2Estyle%2Evisibility%20%3D%20%22inherit%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20if%20%28%21elementData%28el%2C%20%22initialized%22%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20initSizing%28el%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20elementData%28el%2C%20%22initialized%22%2C%20true%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28this%2E%5Fhtmlwidgets%5Finitialize%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20result%20%3D%20this%2E%5Fhtmlwidgets%5Finitialize%28el%2C%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20el%2EoffsetHeight%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20elementData%28el%2C%20%22init%5Fresult%22%2C%20result%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20Shiny%2ErenderDependencies%28data%2Edeps%29%3B%0A%20%20%20%20%20%20%20%20%20%20superfunc%28el%2C%20data%2Ex%2C%20elementData%28el%2C%20%22init%5Fresult%22%29%29%3B%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20overrideMethod%28shinyBinding%2C%20%22resize%22%2C%20function%28superfunc%29%20%7B%0A%20%20%20%20%20%20%20%20return%20function%28el%2C%20width%2C%20height%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Shiny%20can%20call%20resize%20before%20initialize%2FrenderValue%20have%20been%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20called%2C%20which%20doesn%27t%20make%20sense%20for%20widgets%2E%0A%20%20%20%20%20%20%20%20%20%20if%20%28elementData%28el%2C%20%22initialized%22%29%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20superfunc%28el%2C%20width%2C%20height%2C%20elementData%28el%2C%20%22init%5Fresult%22%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20Shiny%2EoutputBindings%2Eregister%28shinyBinding%2C%20shinyBinding%2Ename%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%3B%0A%0A%20%20var%20scheduleStaticRenderTimerId%20%3D%20null%3B%0A%20%20function%20scheduleStaticRender%28%29%20%7B%0A%20%20%20%20if%20%28%21scheduleStaticRenderTimerId%29%20%7B%0A%20%20%20%20%20%20scheduleStaticRenderTimerId%20%3D%20setTimeout%28function%28%29%20%7B%0A%20%20%20%20%20%20%20%20scheduleStaticRenderTimerId%20%3D%20null%3B%0A%20%20%20%20%20%20%20%20window%2EHTMLWidgets%2EstaticRender%28%29%3B%0A%20%20%20%20%20%20%7D%2C%201%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20Render%20static%20widgets%20after%20the%20document%20finishes%20loading%0A%20%20%2F%2F%20Statically%20render%20all%20elements%20that%20are%20of%20this%20widget%27s%20class%0A%20%20window%2EHTMLWidgets%2EstaticRender%20%3D%20function%28%29%20%7B%0A%20%20%20%20var%20bindings%20%3D%20window%2EHTMLWidgets%2Ewidgets%20%7C%7C%20%5B%5D%3B%0A%20%20%20%20forEach%28bindings%2C%20function%28binding%29%20%7B%0A%20%20%20%20%20%20var%20matches%20%3D%20binding%2Efind%28document%2EdocumentElement%29%3B%0A%20%20%20%20%20%20forEach%28matches%2C%20function%28el%29%20%7B%0A%20%20%20%20%20%20%20%20var%20sizeObj%20%3D%20initSizing%28el%2C%20binding%29%3B%0A%0A%20%20%20%20%20%20%20%20if%20%28hasClass%28el%2C%20%22html%2Dwidget%2Dstatic%2Dbound%22%29%29%0A%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20el%2EclassName%20%3D%20el%2EclassName%20%2B%20%22%20html%2Dwidget%2Dstatic%2Dbound%22%3B%0A%0A%20%20%20%20%20%20%20%20var%20initResult%3B%0A%20%20%20%20%20%20%20%20if%20%28binding%2Einitialize%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20initResult%20%3D%20binding%2Einitialize%28el%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sizeObj%20%3F%20sizeObj%2EgetWidth%28%29%20%3A%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sizeObj%20%3F%20sizeObj%2EgetHeight%28%29%20%3A%20el%2EoffsetHeight%0A%20%20%20%20%20%20%20%20%20%20%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if%20%28binding%2Eresize%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20lastSize%20%3D%20%7B%7D%3B%0A%20%20%20%20%20%20%20%20%20%20var%20resizeHandler%20%3D%20function%28e%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20size%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20w%3A%20sizeObj%20%3F%20sizeObj%2EgetWidth%28%29%20%3A%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20h%3A%20sizeObj%20%3F%20sizeObj%2EgetHeight%28%29%20%3A%20el%2EoffsetHeight%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28size%2Ew%20%3D%3D%3D%200%20%26%26%20size%2Eh%20%3D%3D%3D%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28size%2Ew%20%3D%3D%3D%20lastSize%2Ew%20%26%26%20size%2Eh%20%3D%3D%3D%20lastSize%2Eh%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20lastSize%20%3D%20size%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20binding%2Eresize%28el%2C%20size%2Ew%2C%20size%2Eh%2C%20initResult%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%3B%0A%0A%20%20%20%20%20%20%20%20%20%20on%28window%2C%20%22resize%22%2C%20resizeHandler%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20is%20needed%20for%20cases%20where%20we%27re%20running%20in%20a%20Shiny%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20app%2C%20but%20the%20widget%20itself%20is%20not%20a%20Shiny%20output%2C%20but%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20rather%20a%20simple%20static%20widget%2E%20One%20example%20of%20this%20is%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20an%20rmarkdown%20document%20that%20has%20runtime%3Ashiny%20and%20widget%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20that%20isn%27t%20in%20a%20render%20function%2E%20Shiny%20only%20knows%20to%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20call%20resize%20handlers%20for%20Shiny%20outputs%2C%20not%20for%20static%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20widgets%2C%20so%20we%20do%20it%20ourselves%2E%0A%20%20%20%20%20%20%20%20%20%20if%20%28window%2EjQuery%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20window%2EjQuery%28document%29%2Eon%28%22shown%22%2C%20resizeHandler%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20window%2EjQuery%28document%29%2Eon%28%22hidden%22%2C%20resizeHandler%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20is%20needed%20for%20the%20specific%20case%20of%20ioslides%2C%20which%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20flips%20slides%20between%20display%3Anone%20and%20display%3Ablock%2E%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Ideally%20we%20would%20not%20have%20to%20have%20ioslide%2Dspecific%20code%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20here%2C%20but%20rather%20have%20ioslides%20raise%20a%20generic%20event%2C%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20but%20the%20rmarkdown%20package%20just%20went%20to%20CRAN%20so%20the%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20window%20to%20getting%20that%20fixed%20may%20be%20long%2E%0A%20%20%20%20%20%20%20%20%20%20if%20%28window%2EaddEventListener%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20It%27s%20OK%20to%20limit%20this%20to%20window%2EaddEventListener%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20browsers%20because%20ioslides%20itself%20only%20supports%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20such%20browsers%2E%0A%20%20%20%20%20%20%20%20%20%20%20%20on%28document%2C%20%22slideenter%22%2C%20resizeHandler%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20on%28document%2C%20%22slideleave%22%2C%20resizeHandler%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20var%20scriptData%20%3D%20document%2EquerySelector%28%22script%5Bdata%2Dfor%3D%27%22%20%2B%20el%2Eid%20%2B%20%22%27%5D%5Btype%3D%27application%2Fjson%27%5D%22%29%3B%0A%20%20%20%20%20%20%20%20if%20%28scriptData%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20data%20%3D%20JSON%2Eparse%28scriptData%2EtextContent%20%7C%7C%20scriptData%2Etext%29%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Resolve%20strings%20marked%20as%20javascript%20literals%20to%20objects%0A%20%20%20%20%20%20%20%20%20%20if%20%28%21%28data%2Eevals%20instanceof%20Array%29%29%20data%2Eevals%20%3D%20%5Bdata%2Eevals%5D%3B%0A%20%20%20%20%20%20%20%20%20%20for%20%28var%20k%20%3D%200%3B%20data%2Eevals%20%26%26%20k%20%3C%20data%2Eevals%2Elength%3B%20k%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20window%2EHTMLWidgets%2EevaluateStringMember%28data%2Ex%2C%20data%2Eevals%5Bk%5D%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20binding%2ErenderValue%28el%2C%20data%2Ex%2C%20initResult%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Wait%20until%20after%20the%20document%20has%20loaded%20to%20render%20the%20widgets%2E%0A%20%20if%20%28document%2EaddEventListener%29%20%7B%0A%20%20%20%20document%2EaddEventListener%28%22DOMContentLoaded%22%2C%20function%28%29%20%7B%0A%20%20%20%20%20%20document%2EremoveEventListener%28%22DOMContentLoaded%22%2C%20arguments%2Ecallee%2C%20false%29%3B%0A%20%20%20%20%20%20window%2EHTMLWidgets%2EstaticRender%28%29%3B%0A%20%20%20%20%7D%2C%20false%29%3B%0A%20%20%7D%20else%20if%20%28document%2EattachEvent%29%20%7B%0A%20%20%20%20document%2EattachEvent%28%22onreadystatechange%22%2C%20function%28%29%20%7B%0A%20%20%20%20%20%20if%20%28document%2EreadyState%20%3D%3D%3D%20%22complete%22%29%20%7B%0A%20%20%20%20%20%20%20%20document%2EdetachEvent%28%22onreadystatechange%22%2C%20arguments%2Ecallee%29%3B%0A%20%20%20%20%20%20%20%20window%2EHTMLWidgets%2EstaticRender%28%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%0A%0A%0A%20%20window%2EHTMLWidgets%2EgetAttachmentUrl%20%3D%20function%28depname%2C%20key%29%20%7B%0A%20%20%20%20%2F%2F%20If%20no%20key%2C%20default%20to%20the%20first%20item%0A%20%20%20%20if%20%28typeof%28key%29%20%3D%3D%3D%20%22undefined%22%29%0A%20%20%20%20%20%20key%20%3D%201%3B%0A%0A%20%20%20%20var%20link%20%3D%20document%2EgetElementById%28depname%20%2B%20%22%2D%22%20%2B%20key%20%2B%20%22%2Dattachment%22%29%3B%0A%20%20%20%20if%20%28%21link%29%20%7B%0A%20%20%20%20%20%20throw%20new%20Error%28%22Attachment%20%22%20%2B%20depname%20%2B%20%22%2F%22%20%2B%20key%20%2B%20%22%20not%20found%20in%20document%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20link%2EgetAttribute%28%22href%22%29%3B%0A%20%20%7D%3B%0A%0A%20%20window%2EHTMLWidgets%2EdataframeToD3%20%3D%20function%28df%29%20%7B%0A%20%20%20%20var%20names%20%3D%20%5B%5D%3B%0A%20%20%20%20var%20length%3B%0A%20%20%20%20for%20%28var%20name%20in%20df%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28df%2EhasOwnProperty%28name%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20names%2Epush%28name%29%3B%0A%20%20%20%20%20%20%20%20if%20%28typeof%28df%5Bname%5D%29%20%21%3D%3D%20%22object%22%20%7C%7C%20typeof%28df%5Bname%5D%2Elength%29%20%3D%3D%3D%20%22undefined%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error%28%22All%20fields%20must%20be%20arrays%22%29%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20%28typeof%28length%29%20%21%3D%3D%20%22undefined%22%20%26%26%20length%20%21%3D%3D%20df%5Bname%5D%2Elength%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error%28%22All%20fields%20must%20be%20arrays%20of%20the%20same%20length%22%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20length%20%3D%20df%5Bname%5D%2Elength%3B%0A%20%20%20%20%7D%0A%20%20%20%20var%20results%20%3D%20%5B%5D%3B%0A%20%20%20%20var%20item%3B%0A%20%20%20%20for%20%28var%20row%20%3D%200%3B%20row%20%3C%20length%3B%20row%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20item%20%3D%20%7B%7D%3B%0A%20%20%20%20%20%20%20%20for%20%28var%20col%20%3D%200%3B%20col%20%3C%20names%2Elength%3B%20col%2B%2B%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20item%5Bnames%5Bcol%5D%5D%20%3D%20df%5Bnames%5Bcol%5D%5D%5Brow%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20results%2Epush%28item%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20results%3B%0A%20%20%7D%3B%0A%0A%20%20window%2EHTMLWidgets%2EtransposeArray2D%20%3D%20function%28array%29%20%7B%0A%20%20%20%20%20%20var%20newArray%20%3D%20array%5B0%5D%2Emap%28function%28col%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20array%2Emap%28function%28row%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20row%5Bi%5D%0A%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%20%20return%20newArray%3B%0A%20%20%7D%3B%0A%20%20%2F%2F%20Split%20value%20at%20splitChar%2C%20but%20allow%20splitChar%20to%20be%20escaped%0A%20%20%2F%2F%20using%20escapeChar%2E%20Any%20other%20characters%20escaped%20by%20escapeChar%0A%20%20%2F%2F%20will%20be%20included%20as%20usual%20%28including%20escapeChar%20itself%29%2E%0A%20%20function%20splitWithEscape%28value%2C%20splitChar%2C%20escapeChar%29%20%7B%0A%20%20%20%20var%20results%20%3D%20%5B%5D%3B%0A%20%20%20%20var%20escapeMode%20%3D%20false%3B%0A%20%20%20%20var%20currentResult%20%3D%20%22%22%3B%0A%20%20%20%20for%20%28var%20pos%20%3D%200%3B%20pos%20%3C%20value%2Elength%3B%20pos%2B%2B%29%20%7B%0A%20%20%20%20%20%20if%20%28%21escapeMode%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28value%5Bpos%5D%20%3D%3D%3D%20splitChar%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20results%2Epush%28currentResult%29%3B%0A%20%20%20%20%20%20%20%20%20%20currentResult%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20%28value%5Bpos%5D%20%3D%3D%3D%20escapeChar%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20escapeMode%20%3D%20true%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20currentResult%20%2B%3D%20value%5Bpos%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20currentResult%20%2B%3D%20value%5Bpos%5D%3B%0A%20%20%20%20%20%20%20%20escapeMode%20%3D%20false%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20if%20%28currentResult%20%21%3D%3D%20%22%22%29%20%7B%0A%20%20%20%20%20%20results%2Epush%28currentResult%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20results%3B%0A%20%20%7D%0A%20%20%2F%2F%20Function%20authored%20by%20Yihui%2FJJ%20Allaire%0A%20%20window%2EHTMLWidgets%2EevaluateStringMember%20%3D%20function%28o%2C%20member%29%20%7B%0A%20%20%20%20var%20parts%20%3D%20splitWithEscape%28member%2C%20%27%2E%27%2C%20%27%5C%5C%27%29%3B%0A%20%20%20%20for%20%28var%20i%20%3D%200%2C%20l%20%3D%20parts%2Elength%3B%20i%20%3C%20l%3B%20i%2B%2B%29%20%7B%0A%20%20%20%20%20%20var%20part%20%3D%20parts%5Bi%5D%3B%0A%20%20%20%20%20%20%2F%2F%20part%20may%20be%20a%20character%20or%20%27numeric%27%20member%20name%0A%20%20%20%20%20%20if%20%28o%20%21%3D%3D%20null%20%26%26%20typeof%20o%20%3D%3D%3D%20%22object%22%20%26%26%20part%20in%20o%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28i%20%3D%3D%20%28l%20%2D%201%29%29%20%7B%20%2F%2F%20if%20we%20are%20at%20the%20end%20of%20the%20line%20then%20evalulate%0A%20%20%20%20%20%20%20%20%20%20if%20%28typeof%20o%5Bpart%5D%20%3D%3D%3D%20%22string%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20o%5Bpart%5D%20%3D%20eval%28%22%28%22%20%2B%20o%5Bpart%5D%20%2B%20%22%29%22%29%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%20%2F%2F%20otherwise%20continue%20to%20next%20embedded%20object%0A%20%20%20%20%20%20%20%20%20%20o%20%3D%20o%5Bpart%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%3B%0A%7D%29%28%29%3B%0A%0A"></script>
<script src="data:application/x-javascript,%21function%28%29%7Bfunction%20n%28n%29%7Breturn%20n%26%26%28n%2EownerDocument%7C%7Cn%2Edocument%7C%7Cn%29%2EdocumentElement%7Dfunction%20t%28n%29%7Breturn%20n%26%26%28n%2EownerDocument%26%26n%2EownerDocument%2EdefaultView%7C%7Cn%2Edocument%26%26n%7C%7Cn%2EdefaultView%29%7Dfunction%20e%28n%2Ct%29%7Breturn%20t%3En%3F%2D1%3An%3Et%3F1%3An%3E%3Dt%3F0%3A0%2F0%7Dfunction%20r%28n%29%7Breturn%20null%3D%3D%3Dn%3F0%2F0%3A%2Bn%7Dfunction%20u%28n%29%7Breturn%21isNaN%28n%29%7Dfunction%20i%28n%29%7Breturn%7Bleft%3Afunction%28t%2Ce%2Cr%2Cu%29%7Bfor%28arguments%2Elength%3C3%26%26%28r%3D0%29%2Carguments%2Elength%3C4%26%26%28u%3Dt%2Elength%29%3Bu%3Er%3B%29%7Bvar%20i%3Dr%2Bu%3E%3E%3E1%3Bn%28t%5Bi%5D%2Ce%29%3C0%3Fr%3Di%2B1%3Au%3Di%7Dreturn%20r%7D%2Cright%3Afunction%28t%2Ce%2Cr%2Cu%29%7Bfor%28arguments%2Elength%3C3%26%26%28r%3D0%29%2Carguments%2Elength%3C4%26%26%28u%3Dt%2Elength%29%3Bu%3Er%3B%29%7Bvar%20i%3Dr%2Bu%3E%3E%3E1%3Bn%28t%5Bi%5D%2Ce%29%3E0%3Fu%3Di%3Ar%3Di%2B1%7Dreturn%20r%7D%7D%7Dfunction%20o%28n%29%7Breturn%20n%2Elength%7Dfunction%20a%28n%29%7Bfor%28var%20t%3D1%3Bn%2At%251%3B%29t%2A%3D10%3Breturn%20t%7Dfunction%20c%28n%2Ct%29%7Bfor%28var%20e%20in%20t%29Object%2EdefineProperty%28n%2Eprototype%2Ce%2C%7Bvalue%3At%5Be%5D%2Cenumerable%3A%211%7D%29%7Dfunction%20l%28%29%7Bthis%2E%5F%3DObject%2Ecreate%28null%29%7Dfunction%20s%28n%29%7Breturn%28n%2B%3D%22%22%29%3D%3D%3Dpa%7C%7Cn%5B0%5D%3D%3D%3Dva%3Fva%2Bn%3An%7Dfunction%20f%28n%29%7Breturn%28n%2B%3D%22%22%29%5B0%5D%3D%3D%3Dva%3Fn%2Eslice%281%29%3An%7Dfunction%20h%28n%29%7Breturn%20s%28n%29in%20this%2E%5F%7Dfunction%20g%28n%29%7Breturn%28n%3Ds%28n%29%29in%20this%2E%5F%26%26delete%20this%2E%5F%5Bn%5D%7Dfunction%20p%28%29%7Bvar%20n%3D%5B%5D%3Bfor%28var%20t%20in%20this%2E%5F%29n%2Epush%28f%28t%29%29%3Breturn%20n%7Dfunction%20v%28%29%7Bvar%20n%3D0%3Bfor%28var%20t%20in%20this%2E%5F%29%2B%2Bn%3Breturn%20n%7Dfunction%20d%28%29%7Bfor%28var%20n%20in%20this%2E%5F%29return%211%3Breturn%210%7Dfunction%20m%28%29%7Bthis%2E%5F%3DObject%2Ecreate%28null%29%7Dfunction%20y%28n%29%7Breturn%20n%7Dfunction%20M%28n%2Ct%2Ce%29%7Breturn%20function%28%29%7Bvar%20r%3De%2Eapply%28t%2Carguments%29%3Breturn%20r%3D%3D%3Dt%3Fn%3Ar%7D%7Dfunction%20x%28n%2Ct%29%7Bif%28t%20in%20n%29return%20t%3Bt%3Dt%2EcharAt%280%29%2EtoUpperCase%28%29%2Bt%2Eslice%281%29%3Bfor%28var%20e%3D0%2Cr%3Dda%2Elength%3Br%3Ee%3B%2B%2Be%29%7Bvar%20u%3Dda%5Be%5D%2Bt%3Bif%28u%20in%20n%29return%20u%7D%7Dfunction%20b%28%29%7B%7Dfunction%20%5F%28%29%7B%7Dfunction%20w%28n%29%7Bfunction%20t%28%29%7Bfor%28var%20t%2Cr%3De%2Cu%3D%2D1%2Ci%3Dr%2Elength%3B%2B%2Bu%3Ci%3B%29%28t%3Dr%5Bu%5D%2Eon%29%26%26t%2Eapply%28this%2Carguments%29%3Breturn%20n%7Dvar%20e%3D%5B%5D%2Cr%3Dnew%20l%3Breturn%20t%2Eon%3Dfunction%28t%2Cu%29%7Bvar%20i%2Co%3Dr%2Eget%28t%29%3Breturn%20arguments%2Elength%3C2%3Fo%26%26o%2Eon%3A%28o%26%26%28o%2Eon%3Dnull%2Ce%3De%2Eslice%280%2Ci%3De%2EindexOf%28o%29%29%2Econcat%28e%2Eslice%28i%2B1%29%29%2Cr%2Eremove%28t%29%29%2Cu%26%26e%2Epush%28r%2Eset%28t%2C%7Bon%3Au%7D%29%29%2Cn%29%7D%2Ct%7Dfunction%20S%28%29%7Bta%2Eevent%2EpreventDefault%28%29%7Dfunction%20k%28%29%7Bfor%28var%20n%2Ct%3Dta%2Eevent%3Bn%3Dt%2EsourceEvent%3B%29t%3Dn%3Breturn%20t%7Dfunction%20E%28n%29%7Bfor%28var%20t%3Dnew%20%5F%2Ce%3D0%2Cr%3Darguments%2Elength%3B%2B%2Be%3Cr%3B%29t%5Barguments%5Be%5D%5D%3Dw%28t%29%3Breturn%20t%2Eof%3Dfunction%28e%2Cr%29%7Breturn%20function%28u%29%7Btry%7Bvar%20i%3Du%2EsourceEvent%3Dta%2Eevent%3Bu%2Etarget%3Dn%2Cta%2Eevent%3Du%2Ct%5Bu%2Etype%5D%2Eapply%28e%2Cr%29%7Dfinally%7Bta%2Eevent%3Di%7D%7D%7D%2Ct%7Dfunction%20A%28n%29%7Breturn%20ya%28n%2C%5Fa%29%2Cn%7Dfunction%20N%28n%29%7Breturn%22function%22%3D%3Dtypeof%20n%3Fn%3Afunction%28%29%7Breturn%20Ma%28n%2Cthis%29%7D%7Dfunction%20C%28n%29%7Breturn%22function%22%3D%3Dtypeof%20n%3Fn%3Afunction%28%29%7Breturn%20xa%28n%2Cthis%29%7D%7Dfunction%20z%28n%2Ct%29%7Bfunction%20e%28%29%7Bthis%2EremoveAttribute%28n%29%7Dfunction%20r%28%29%7Bthis%2EremoveAttributeNS%28n%2Espace%2Cn%2Elocal%29%7Dfunction%20u%28%29%7Bthis%2EsetAttribute%28n%2Ct%29%7Dfunction%20i%28%29%7Bthis%2EsetAttributeNS%28n%2Espace%2Cn%2Elocal%2Ct%29%7Dfunction%20o%28%29%7Bvar%20e%3Dt%2Eapply%28this%2Carguments%29%3Bnull%3D%3De%3Fthis%2EremoveAttribute%28n%29%3Athis%2EsetAttribute%28n%2Ce%29%7Dfunction%20a%28%29%7Bvar%20e%3Dt%2Eapply%28this%2Carguments%29%3Bnull%3D%3De%3Fthis%2EremoveAttributeNS%28n%2Espace%2Cn%2Elocal%29%3Athis%2EsetAttributeNS%28n%2Espace%2Cn%2Elocal%2Ce%29%7Dreturn%20n%3Dta%2Ens%2Equalify%28n%29%2Cnull%3D%3Dt%3Fn%2Elocal%3Fr%3Ae%3A%22function%22%3D%3Dtypeof%20t%3Fn%2Elocal%3Fa%3Ao%3An%2Elocal%3Fi%3Au%7Dfunction%20q%28n%29%7Breturn%20n%2Etrim%28%29%2Ereplace%28%2F%5Cs%2B%2Fg%2C%22%20%22%29%7Dfunction%20L%28n%29%7Breturn%20new%20RegExp%28%22%28%3F%3A%5E%7C%5C%5Cs%2B%29%22%2Bta%2Erequote%28n%29%2B%22%28%3F%3A%5C%5Cs%2B%7C%24%29%22%2C%22g%22%29%7Dfunction%20T%28n%29%7Breturn%28n%2B%22%22%29%2Etrim%28%29%2Esplit%28%2F%5E%7C%5Cs%2B%2F%29%7Dfunction%20R%28n%2Ct%29%7Bfunction%20e%28%29%7Bfor%28var%20e%3D%2D1%3B%2B%2Be%3Cu%3B%29n%5Be%5D%28this%2Ct%29%7Dfunction%20r%28%29%7Bfor%28var%20e%3D%2D1%2Cr%3Dt%2Eapply%28this%2Carguments%29%3B%2B%2Be%3Cu%3B%29n%5Be%5D%28this%2Cr%29%7Dn%3DT%28n%29%2Emap%28D%29%3Bvar%20u%3Dn%2Elength%3Breturn%22function%22%3D%3Dtypeof%20t%3Fr%3Ae%7Dfunction%20D%28n%29%7Bvar%20t%3DL%28n%29%3Breturn%20function%28e%2Cr%29%7Bif%28u%3De%2EclassList%29return%20r%3Fu%2Eadd%28n%29%3Au%2Eremove%28n%29%3Bvar%20u%3De%2EgetAttribute%28%22class%22%29%7C%7C%22%22%3Br%3F%28t%2ElastIndex%3D0%2Ct%2Etest%28u%29%7C%7Ce%2EsetAttribute%28%22class%22%2Cq%28u%2B%22%20%22%2Bn%29%29%29%3Ae%2EsetAttribute%28%22class%22%2Cq%28u%2Ereplace%28t%2C%22%20%22%29%29%29%7D%7Dfunction%20P%28n%2Ct%2Ce%29%7Bfunction%20r%28%29%7Bthis%2Estyle%2EremoveProperty%28n%29%7Dfunction%20u%28%29%7Bthis%2Estyle%2EsetProperty%28n%2Ct%2Ce%29%7Dfunction%20i%28%29%7Bvar%20r%3Dt%2Eapply%28this%2Carguments%29%3Bnull%3D%3Dr%3Fthis%2Estyle%2EremoveProperty%28n%29%3Athis%2Estyle%2EsetProperty%28n%2Cr%2Ce%29%7Dreturn%20null%3D%3Dt%3Fr%3A%22function%22%3D%3Dtypeof%20t%3Fi%3Au%7Dfunction%20U%28n%2Ct%29%7Bfunction%20e%28%29%7Bdelete%20this%5Bn%5D%7Dfunction%20r%28%29%7Bthis%5Bn%5D%3Dt%7Dfunction%20u%28%29%7Bvar%20e%3Dt%2Eapply%28this%2Carguments%29%3Bnull%3D%3De%3Fdelete%20this%5Bn%5D%3Athis%5Bn%5D%3De%7Dreturn%20null%3D%3Dt%3Fe%3A%22function%22%3D%3Dtypeof%20t%3Fu%3Ar%7Dfunction%20j%28n%29%7Bfunction%20t%28%29%7Bvar%20t%3Dthis%2EownerDocument%2Ce%3Dthis%2EnamespaceURI%3Breturn%20e%3Ft%2EcreateElementNS%28e%2Cn%29%3At%2EcreateElement%28n%29%7Dfunction%20e%28%29%7Breturn%20this%2EownerDocument%2EcreateElementNS%28n%2Espace%2Cn%2Elocal%29%7Dreturn%22function%22%3D%3Dtypeof%20n%3Fn%3A%28n%3Dta%2Ens%2Equalify%28n%29%29%2Elocal%3Fe%3At%7Dfunction%20F%28%29%7Bvar%20n%3Dthis%2EparentNode%3Bn%26%26n%2EremoveChild%28this%29%7Dfunction%20H%28n%29%7Breturn%7B%5F%5Fdata%5F%5F%3An%7D%7Dfunction%20O%28n%29%7Breturn%20function%28%29%7Breturn%20ba%28this%2Cn%29%7D%7Dfunction%20I%28n%29%7Breturn%20arguments%2Elength%7C%7C%28n%3De%29%2Cfunction%28t%2Ce%29%7Breturn%20t%26%26e%3Fn%28t%2E%5F%5Fdata%5F%5F%2Ce%2E%5F%5Fdata%5F%5F%29%3A%21t%2D%21e%7D%7Dfunction%20Y%28n%2Ct%29%7Bfor%28var%20e%3D0%2Cr%3Dn%2Elength%3Br%3Ee%3Be%2B%2B%29for%28var%20u%2Ci%3Dn%5Be%5D%2Co%3D0%2Ca%3Di%2Elength%3Ba%3Eo%3Bo%2B%2B%29%28u%3Di%5Bo%5D%29%26%26t%28u%2Co%2Ce%29%3Breturn%20n%7Dfunction%20Z%28n%29%7Breturn%20ya%28n%2CSa%29%2Cn%7Dfunction%20V%28n%29%7Bvar%20t%2Ce%3Breturn%20function%28r%2Cu%2Ci%29%7Bvar%20o%2Ca%3Dn%5Bi%5D%2Eupdate%2Cc%3Da%2Elength%3Bfor%28i%21%3De%26%26%28e%3Di%2Ct%3D0%29%2Cu%3E%3Dt%26%26%28t%3Du%2B1%29%3B%21%28o%3Da%5Bt%5D%29%26%26%2B%2Bt%3Cc%3B%29%3Breturn%20o%7D%7Dfunction%20X%28n%2Ct%2Ce%29%7Bfunction%20r%28%29%7Bvar%20t%3Dthis%5Bo%5D%3Bt%26%26%28this%2EremoveEventListener%28n%2Ct%2Ct%2E%24%29%2Cdelete%20this%5Bo%5D%29%7Dfunction%20u%28%29%7Bvar%20u%3Dc%28t%2Cra%28arguments%29%29%3Br%2Ecall%28this%29%2Cthis%2EaddEventListener%28n%2Cthis%5Bo%5D%3Du%2Cu%2E%24%3De%29%2Cu%2E%5F%3Dt%7Dfunction%20i%28%29%7Bvar%20t%2Ce%3Dnew%20RegExp%28%22%5E%5F%5Fon%28%5B%5E%2E%5D%2B%29%22%2Bta%2Erequote%28n%29%2B%22%24%22%29%3Bfor%28var%20r%20in%20this%29if%28t%3Dr%2Ematch%28e%29%29%7Bvar%20u%3Dthis%5Br%5D%3Bthis%2EremoveEventListener%28t%5B1%5D%2Cu%2Cu%2E%24%29%2Cdelete%20this%5Br%5D%7D%7Dvar%20o%3D%22%5F%5Fon%22%2Bn%2Ca%3Dn%2EindexOf%28%22%2E%22%29%2Cc%3D%24%3Ba%3E0%26%26%28n%3Dn%2Eslice%280%2Ca%29%29%3Bvar%20l%3Dka%2Eget%28n%29%3Breturn%20l%26%26%28n%3Dl%2Cc%3DB%29%2Ca%3Ft%3Fu%3Ar%3At%3Fb%3Ai%7Dfunction%20%24%28n%2Ct%29%7Breturn%20function%28e%29%7Bvar%20r%3Dta%2Eevent%3Bta%2Eevent%3De%2Ct%5B0%5D%3Dthis%2E%5F%5Fdata%5F%5F%3Btry%7Bn%2Eapply%28this%2Ct%29%7Dfinally%7Bta%2Eevent%3Dr%7D%7D%7Dfunction%20B%28n%2Ct%29%7Bvar%20e%3D%24%28n%2Ct%29%3Breturn%20function%28n%29%7Bvar%20t%3Dthis%2Cr%3Dn%2ErelatedTarget%3Br%26%26%28r%3D%3D%3Dt%7C%7C8%26r%2EcompareDocumentPosition%28t%29%29%7C%7Ce%2Ecall%28t%2Cn%29%7D%7Dfunction%20W%28e%29%7Bvar%20r%3D%22%2Edragsuppress%2D%22%2B%20%2B%2BAa%2Cu%3D%22click%22%2Br%2Ci%3Dta%2Eselect%28t%28e%29%29%2Eon%28%22touchmove%22%2Br%2CS%29%2Eon%28%22dragstart%22%2Br%2CS%29%2Eon%28%22selectstart%22%2Br%2CS%29%3Bif%28null%3D%3DEa%26%26%28Ea%3D%22onselectstart%22in%20e%3F%211%3Ax%28e%2Estyle%2C%22userSelect%22%29%29%2CEa%29%7Bvar%20o%3Dn%28e%29%2Estyle%2Ca%3Do%5BEa%5D%3Bo%5BEa%5D%3D%22none%22%7Dreturn%20function%28n%29%7Bif%28i%2Eon%28r%2Cnull%29%2CEa%26%26%28o%5BEa%5D%3Da%29%2Cn%29%7Bvar%20t%3Dfunction%28%29%7Bi%2Eon%28u%2Cnull%29%7D%3Bi%2Eon%28u%2Cfunction%28%29%7BS%28%29%2Ct%28%29%7D%2C%210%29%2CsetTimeout%28t%2C0%29%7D%7D%7Dfunction%20J%28n%2Ce%29%7Be%2EchangedTouches%26%26%28e%3De%2EchangedTouches%5B0%5D%29%3Bvar%20r%3Dn%2EownerSVGElement%7C%7Cn%3Bif%28r%2EcreateSVGPoint%29%7Bvar%20u%3Dr%2EcreateSVGPoint%28%29%3Bif%280%3ENa%29%7Bvar%20i%3Dt%28n%29%3Bif%28i%2EscrollX%7C%7Ci%2EscrollY%29%7Br%3Dta%2Eselect%28%22body%22%29%2Eappend%28%22svg%22%29%2Estyle%28%7Bposition%3A%22absolute%22%2Ctop%3A0%2Cleft%3A0%2Cmargin%3A0%2Cpadding%3A0%2Cborder%3A%22none%22%7D%2C%22important%22%29%3Bvar%20o%3Dr%5B0%5D%5B0%5D%2EgetScreenCTM%28%29%3BNa%3D%21%28o%2Ef%7C%7Co%2Ee%29%2Cr%2Eremove%28%29%7D%7Dreturn%20Na%3F%28u%2Ex%3De%2EpageX%2Cu%2Ey%3De%2EpageY%29%3A%28u%2Ex%3De%2EclientX%2Cu%2Ey%3De%2EclientY%29%2Cu%3Du%2EmatrixTransform%28n%2EgetScreenCTM%28%29%2Einverse%28%29%29%2C%5Bu%2Ex%2Cu%2Ey%5D%7Dvar%20a%3Dn%2EgetBoundingClientRect%28%29%3Breturn%5Be%2EclientX%2Da%2Eleft%2Dn%2EclientLeft%2Ce%2EclientY%2Da%2Etop%2Dn%2EclientTop%5D%7Dfunction%20G%28%29%7Breturn%20ta%2Eevent%2EchangedTouches%5B0%5D%2Eidentifier%7Dfunction%20K%28n%29%7Breturn%20n%3E0%3F1%3A0%3En%3F%2D1%3A0%7Dfunction%20Q%28n%2Ct%2Ce%29%7Breturn%28t%5B0%5D%2Dn%5B0%5D%29%2A%28e%5B1%5D%2Dn%5B1%5D%29%2D%28t%5B1%5D%2Dn%5B1%5D%29%2A%28e%5B0%5D%2Dn%5B0%5D%29%7Dfunction%20nt%28n%29%7Breturn%20n%3E1%3F0%3A%2D1%3En%3Fqa%3AMath%2Eacos%28n%29%7Dfunction%20tt%28n%29%7Breturn%20n%3E1%3FRa%3A%2D1%3En%3F%2DRa%3AMath%2Easin%28n%29%7Dfunction%20et%28n%29%7Breturn%28%28n%3DMath%2Eexp%28n%29%29%2D1%2Fn%29%2F2%7Dfunction%20rt%28n%29%7Breturn%28%28n%3DMath%2Eexp%28n%29%29%2B1%2Fn%29%2F2%7Dfunction%20ut%28n%29%7Breturn%28%28n%3DMath%2Eexp%282%2An%29%29%2D1%29%2F%28n%2B1%29%7Dfunction%20it%28n%29%7Breturn%28n%3DMath%2Esin%28n%2F2%29%29%2An%7Dfunction%20ot%28%29%7B%7Dfunction%20at%28n%2Ct%2Ce%29%7Breturn%20this%20instanceof%20at%3F%28this%2Eh%3D%2Bn%2Cthis%2Es%3D%2Bt%2Cvoid%28this%2El%3D%2Be%29%29%3Aarguments%2Elength%3C2%3Fn%20instanceof%20at%3Fnew%20at%28n%2Eh%2Cn%2Es%2Cn%2El%29%3Abt%28%22%22%2Bn%2C%5Ft%2Cat%29%3Anew%20at%28n%2Ct%2Ce%29%7Dfunction%20ct%28n%2Ct%2Ce%29%7Bfunction%20r%28n%29%7Breturn%20n%3E360%3Fn%2D%3D360%3A0%3En%26%26%28n%2B%3D360%29%2C60%3En%3Fi%2B%28o%2Di%29%2An%2F60%3A180%3En%3Fo%3A240%3En%3Fi%2B%28o%2Di%29%2A%28240%2Dn%29%2F60%3Ai%7Dfunction%20u%28n%29%7Breturn%20Math%2Eround%28255%2Ar%28n%29%29%7Dvar%20i%2Co%3Breturn%20n%3DisNaN%28n%29%3F0%3A%28n%25%3D360%29%3C0%3Fn%2B360%3An%2Ct%3DisNaN%28t%29%3F0%3A0%3Et%3F0%3At%3E1%3F1%3At%2Ce%3D0%3Ee%3F0%3Ae%3E1%3F1%3Ae%2Co%3D%2E5%3E%3De%3Fe%2A%281%2Bt%29%3Ae%2Bt%2De%2At%2Ci%3D2%2Ae%2Do%2Cnew%20mt%28u%28n%2B120%29%2Cu%28n%29%2Cu%28n%2D120%29%29%7Dfunction%20lt%28n%2Ct%2Ce%29%7Breturn%20this%20instanceof%20lt%3F%28this%2Eh%3D%2Bn%2Cthis%2Ec%3D%2Bt%2Cvoid%28this%2El%3D%2Be%29%29%3Aarguments%2Elength%3C2%3Fn%20instanceof%20lt%3Fnew%20lt%28n%2Eh%2Cn%2Ec%2Cn%2El%29%3An%20instanceof%20ft%3Fgt%28n%2El%2Cn%2Ea%2Cn%2Eb%29%3Agt%28%28n%3Dwt%28%28n%3Dta%2Ergb%28n%29%29%2Er%2Cn%2Eg%2Cn%2Eb%29%29%2El%2Cn%2Ea%2Cn%2Eb%29%3Anew%20lt%28n%2Ct%2Ce%29%7Dfunction%20st%28n%2Ct%2Ce%29%7Breturn%20isNaN%28n%29%26%26%28n%3D0%29%2CisNaN%28t%29%26%26%28t%3D0%29%2Cnew%20ft%28e%2CMath%2Ecos%28n%2A%3DDa%29%2At%2CMath%2Esin%28n%29%2At%29%7Dfunction%20ft%28n%2Ct%2Ce%29%7Breturn%20this%20instanceof%20ft%3F%28this%2El%3D%2Bn%2Cthis%2Ea%3D%2Bt%2Cvoid%28this%2Eb%3D%2Be%29%29%3Aarguments%2Elength%3C2%3Fn%20instanceof%20ft%3Fnew%20ft%28n%2El%2Cn%2Ea%2Cn%2Eb%29%3An%20instanceof%20lt%3Fst%28n%2Eh%2Cn%2Ec%2Cn%2El%29%3Awt%28%28n%3Dmt%28n%29%29%2Er%2Cn%2Eg%2Cn%2Eb%29%3Anew%20ft%28n%2Ct%2Ce%29%7Dfunction%20ht%28n%2Ct%2Ce%29%7Bvar%20r%3D%28n%2B16%29%2F116%2Cu%3Dr%2Bt%2F500%2Ci%3Dr%2De%2F200%3Breturn%20u%3Dpt%28u%29%2AXa%2Cr%3Dpt%28r%29%2A%24a%2Ci%3Dpt%28i%29%2ABa%2Cnew%20mt%28dt%283%2E2404542%2Au%2D1%2E5371385%2Ar%2D%2E4985314%2Ai%29%2Cdt%28%2D%2E969266%2Au%2B1%2E8760108%2Ar%2B%2E041556%2Ai%29%2Cdt%28%2E0556434%2Au%2D%2E2040259%2Ar%2B1%2E0572252%2Ai%29%29%7Dfunction%20gt%28n%2Ct%2Ce%29%7Breturn%20n%3E0%3Fnew%20lt%28Math%2Eatan2%28e%2Ct%29%2APa%2CMath%2Esqrt%28t%2At%2Be%2Ae%29%2Cn%29%3Anew%20lt%280%2F0%2C0%2F0%2Cn%29%7Dfunction%20pt%28n%29%7Breturn%20n%3E%2E206893034%3Fn%2An%2An%3A%28n%2D4%2F29%29%2F7%2E787037%7Dfunction%20vt%28n%29%7Breturn%20n%3E%2E008856%3FMath%2Epow%28n%2C1%2F3%29%3A7%2E787037%2An%2B4%2F29%7Dfunction%20dt%28n%29%7Breturn%20Math%2Eround%28255%2A%28%2E00304%3E%3Dn%3F12%2E92%2An%3A1%2E055%2AMath%2Epow%28n%2C1%2F2%2E4%29%2D%2E055%29%29%7Dfunction%20mt%28n%2Ct%2Ce%29%7Breturn%20this%20instanceof%20mt%3F%28this%2Er%3D%7E%7En%2Cthis%2Eg%3D%7E%7Et%2Cvoid%28this%2Eb%3D%7E%7Ee%29%29%3Aarguments%2Elength%3C2%3Fn%20instanceof%20mt%3Fnew%20mt%28n%2Er%2Cn%2Eg%2Cn%2Eb%29%3Abt%28%22%22%2Bn%2Cmt%2Cct%29%3Anew%20mt%28n%2Ct%2Ce%29%7Dfunction%20yt%28n%29%7Breturn%20new%20mt%28n%3E%3E16%2Cn%3E%3E8%26255%2C255%26n%29%7Dfunction%20Mt%28n%29%7Breturn%20yt%28n%29%2B%22%22%7Dfunction%20xt%28n%29%7Breturn%2016%3En%3F%220%22%2BMath%2Emax%280%2Cn%29%2EtoString%2816%29%3AMath%2Emin%28255%2Cn%29%2EtoString%2816%29%7Dfunction%20bt%28n%2Ct%2Ce%29%7Bvar%20r%2Cu%2Ci%2Co%3D0%2Ca%3D0%2Cc%3D0%3Bif%28r%3D%2F%28%5Ba%2Dz%5D%2B%29%5C%28%28%2E%2A%29%5C%29%2Fi%2Eexec%28n%29%29switch%28u%3Dr%5B2%5D%2Esplit%28%22%2C%22%29%2Cr%5B1%5D%29%7Bcase%22hsl%22%3Areturn%20e%28parseFloat%28u%5B0%5D%29%2CparseFloat%28u%5B1%5D%29%2F100%2CparseFloat%28u%5B2%5D%29%2F100%29%3Bcase%22rgb%22%3Areturn%20t%28kt%28u%5B0%5D%29%2Ckt%28u%5B1%5D%29%2Ckt%28u%5B2%5D%29%29%7Dreturn%28i%3DGa%2Eget%28n%2EtoLowerCase%28%29%29%29%3Ft%28i%2Er%2Ci%2Eg%2Ci%2Eb%29%3A%28null%3D%3Dn%7C%7C%22%23%22%21%3D%3Dn%2EcharAt%280%29%7C%7CisNaN%28i%3DparseInt%28n%2Eslice%281%29%2C16%29%29%7C%7C%284%3D%3D%3Dn%2Elength%3F%28o%3D%283840%26i%29%3E%3E4%2Co%3Do%3E%3E4%7Co%2Ca%3D240%26i%2Ca%3Da%3E%3E4%7Ca%2Cc%3D15%26i%2Cc%3Dc%3C%3C4%7Cc%29%3A7%3D%3D%3Dn%2Elength%26%26%28o%3D%2816711680%26i%29%3E%3E16%2Ca%3D%2865280%26i%29%3E%3E8%2Cc%3D255%26i%29%29%2Ct%28o%2Ca%2Cc%29%29%7Dfunction%20%5Ft%28n%2Ct%2Ce%29%7Bvar%20r%2Cu%2Ci%3DMath%2Emin%28n%2F%3D255%2Ct%2F%3D255%2Ce%2F%3D255%29%2Co%3DMath%2Emax%28n%2Ct%2Ce%29%2Ca%3Do%2Di%2Cc%3D%28o%2Bi%29%2F2%3Breturn%20a%3F%28u%3D%2E5%3Ec%3Fa%2F%28o%2Bi%29%3Aa%2F%282%2Do%2Di%29%2Cr%3Dn%3D%3Do%3F%28t%2De%29%2Fa%2B%28e%3Et%3F6%3A0%29%3At%3D%3Do%3F%28e%2Dn%29%2Fa%2B2%3A%28n%2Dt%29%2Fa%2B4%2Cr%2A%3D60%29%3A%28r%3D0%2F0%2Cu%3Dc%3E0%26%261%3Ec%3F0%3Ar%29%2Cnew%20at%28r%2Cu%2Cc%29%7Dfunction%20wt%28n%2Ct%2Ce%29%7Bn%3DSt%28n%29%2Ct%3DSt%28t%29%2Ce%3DSt%28e%29%3Bvar%20r%3Dvt%28%28%2E4124564%2An%2B%2E3575761%2At%2B%2E1804375%2Ae%29%2FXa%29%2Cu%3Dvt%28%28%2E2126729%2An%2B%2E7151522%2At%2B%2E072175%2Ae%29%2F%24a%29%2Ci%3Dvt%28%28%2E0193339%2An%2B%2E119192%2At%2B%2E9503041%2Ae%29%2FBa%29%3Breturn%20ft%28116%2Au%2D16%2C500%2A%28r%2Du%29%2C200%2A%28u%2Di%29%29%7Dfunction%20St%28n%29%7Breturn%28n%2F%3D255%29%3C%3D%2E04045%3Fn%2F12%2E92%3AMath%2Epow%28%28n%2B%2E055%29%2F1%2E055%2C2%2E4%29%7Dfunction%20kt%28n%29%7Bvar%20t%3DparseFloat%28n%29%3Breturn%22%25%22%3D%3D%3Dn%2EcharAt%28n%2Elength%2D1%29%3FMath%2Eround%282%2E55%2At%29%3At%7Dfunction%20Et%28n%29%7Breturn%22function%22%3D%3Dtypeof%20n%3Fn%3Afunction%28%29%7Breturn%20n%7D%7Dfunction%20At%28n%29%7Breturn%20function%28t%2Ce%2Cr%29%7Breturn%202%3D%3D%3Darguments%2Elength%26%26%22function%22%3D%3Dtypeof%20e%26%26%28r%3De%2Ce%3Dnull%29%2CNt%28t%2Ce%2Cn%2Cr%29%7D%7Dfunction%20Nt%28n%2Ct%2Ce%2Cr%29%7Bfunction%20u%28%29%7Bvar%20n%2Ct%3Dc%2Estatus%3Bif%28%21t%26%26zt%28c%29%7C%7Ct%3E%3D200%26%26300%3Et%7C%7C304%3D%3D%3Dt%29%7Btry%7Bn%3De%2Ecall%28i%2Cc%29%7Dcatch%28r%29%7Breturn%20void%20o%2Eerror%2Ecall%28i%2Cr%29%7Do%2Eload%2Ecall%28i%2Cn%29%7Delse%20o%2Eerror%2Ecall%28i%2Cc%29%7Dvar%20i%3D%7B%7D%2Co%3Dta%2Edispatch%28%22beforesend%22%2C%22progress%22%2C%22load%22%2C%22error%22%29%2Ca%3D%7B%7D%2Cc%3Dnew%20XMLHttpRequest%2Cl%3Dnull%3Breturn%21this%2EXDomainRequest%7C%7C%22withCredentials%22in%20c%7C%7C%21%2F%5E%28http%28s%29%3F%3A%29%3F%5C%2F%5C%2F%2F%2Etest%28n%29%7C%7C%28c%3Dnew%20XDomainRequest%29%2C%22onload%22in%20c%3Fc%2Eonload%3Dc%2Eonerror%3Du%3Ac%2Eonreadystatechange%3Dfunction%28%29%7Bc%2EreadyState%3E3%26%26u%28%29%7D%2Cc%2Eonprogress%3Dfunction%28n%29%7Bvar%20t%3Dta%2Eevent%3Bta%2Eevent%3Dn%3Btry%7Bo%2Eprogress%2Ecall%28i%2Cc%29%7Dfinally%7Bta%2Eevent%3Dt%7D%7D%2Ci%2Eheader%3Dfunction%28n%2Ct%29%7Breturn%20n%3D%28n%2B%22%22%29%2EtoLowerCase%28%29%2Carguments%2Elength%3C2%3Fa%5Bn%5D%3A%28null%3D%3Dt%3Fdelete%20a%5Bn%5D%3Aa%5Bn%5D%3Dt%2B%22%22%2Ci%29%7D%2Ci%2EmimeType%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28t%3Dnull%3D%3Dn%3Fnull%3An%2B%22%22%2Ci%29%3At%7D%2Ci%2EresponseType%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28l%3Dn%2Ci%29%3Al%7D%2Ci%2Eresponse%3Dfunction%28n%29%7Breturn%20e%3Dn%2Ci%7D%2C%5B%22get%22%2C%22post%22%5D%2EforEach%28function%28n%29%7Bi%5Bn%5D%3Dfunction%28%29%7Breturn%20i%2Esend%2Eapply%28i%2C%5Bn%5D%2Econcat%28ra%28arguments%29%29%29%7D%7D%29%2Ci%2Esend%3Dfunction%28e%2Cr%2Cu%29%7Bif%282%3D%3D%3Darguments%2Elength%26%26%22function%22%3D%3Dtypeof%20r%26%26%28u%3Dr%2Cr%3Dnull%29%2Cc%2Eopen%28e%2Cn%2C%210%29%2Cnull%3D%3Dt%7C%7C%22accept%22in%20a%7C%7C%28a%2Eaccept%3Dt%2B%22%2C%2A%2F%2A%22%29%2Cc%2EsetRequestHeader%29for%28var%20s%20in%20a%29c%2EsetRequestHeader%28s%2Ca%5Bs%5D%29%3Breturn%20null%21%3Dt%26%26c%2EoverrideMimeType%26%26c%2EoverrideMimeType%28t%29%2Cnull%21%3Dl%26%26%28c%2EresponseType%3Dl%29%2Cnull%21%3Du%26%26i%2Eon%28%22error%22%2Cu%29%2Eon%28%22load%22%2Cfunction%28n%29%7Bu%28null%2Cn%29%7D%29%2Co%2Ebeforesend%2Ecall%28i%2Cc%29%2Cc%2Esend%28null%3D%3Dr%3Fnull%3Ar%29%2Ci%7D%2Ci%2Eabort%3Dfunction%28%29%7Breturn%20c%2Eabort%28%29%2Ci%7D%2Cta%2Erebind%28i%2Co%2C%22on%22%29%2Cnull%3D%3Dr%3Fi%3Ai%2Eget%28Ct%28r%29%29%7Dfunction%20Ct%28n%29%7Breturn%201%3D%3D%3Dn%2Elength%3Ffunction%28t%2Ce%29%7Bn%28null%3D%3Dt%3Fe%3Anull%29%7D%3An%7Dfunction%20zt%28n%29%7Bvar%20t%3Dn%2EresponseType%3Breturn%20t%26%26%22text%22%21%3D%3Dt%3Fn%2Eresponse%3An%2EresponseText%7Dfunction%20qt%28%29%7Bvar%20n%3DLt%28%29%2Ct%3DTt%28%29%2Dn%3Bt%3E24%3F%28isFinite%28t%29%26%26%28clearTimeout%28tc%29%2Ctc%3DsetTimeout%28qt%2Ct%29%29%2Cnc%3D0%29%3A%28nc%3D1%2Crc%28qt%29%29%7Dfunction%20Lt%28%29%7Bvar%20n%3DDate%2Enow%28%29%3Bfor%28ec%3DKa%3Bec%3B%29n%3E%3Dec%2Et%26%26%28ec%2Ef%3Dec%2Ec%28n%2Dec%2Et%29%29%2Cec%3Dec%2En%3Breturn%20n%7Dfunction%20Tt%28%29%7Bfor%28var%20n%2Ct%3DKa%2Ce%3D1%2F0%3Bt%3B%29t%2Ef%3Ft%3Dn%3Fn%2En%3Dt%2En%3AKa%3Dt%2En%3A%28t%2Et%3Ce%26%26%28e%3Dt%2Et%29%2Ct%3D%28n%3Dt%29%2En%29%3Breturn%20Qa%3Dn%2Ce%7Dfunction%20Rt%28n%2Ct%29%7Breturn%20t%2D%28n%3FMath%2Eceil%28Math%2Elog%28n%29%2FMath%2ELN10%29%3A1%29%7Dfunction%20Dt%28n%2Ct%29%7Bvar%20e%3DMath%2Epow%2810%2C3%2Aga%288%2Dt%29%29%3Breturn%7Bscale%3At%3E8%3Ffunction%28n%29%7Breturn%20n%2Fe%7D%3Afunction%28n%29%7Breturn%20n%2Ae%7D%2Csymbol%3An%7D%7Dfunction%20Pt%28n%29%7Bvar%20t%3Dn%2Edecimal%2Ce%3Dn%2Ethousands%2Cr%3Dn%2Egrouping%2Cu%3Dn%2Ecurrency%2Ci%3Dr%26%26e%3Ffunction%28n%2Ct%29%7Bfor%28var%20u%3Dn%2Elength%2Ci%3D%5B%5D%2Co%3D0%2Ca%3Dr%5B0%5D%2Cc%3D0%3Bu%3E0%26%26a%3E0%26%26%28c%2Ba%2B1%3Et%26%26%28a%3DMath%2Emax%281%2Ct%2Dc%29%29%2Ci%2Epush%28n%2Esubstring%28u%2D%3Da%2Cu%2Ba%29%29%2C%21%28%28c%2B%3Da%2B1%29%3Et%29%29%3B%29a%3Dr%5Bo%3D%28o%2B1%29%25r%2Elength%5D%3Breturn%20i%2Ereverse%28%29%2Ejoin%28e%29%7D%3Ay%3Breturn%20function%28n%29%7Bvar%20e%3Dic%2Eexec%28n%29%2Cr%3De%5B1%5D%7C%7C%22%20%22%2Co%3De%5B2%5D%7C%7C%22%3E%22%2Ca%3De%5B3%5D%7C%7C%22%2D%22%2Cc%3De%5B4%5D%7C%7C%22%22%2Cl%3De%5B5%5D%2Cs%3D%2Be%5B6%5D%2Cf%3De%5B7%5D%2Ch%3De%5B8%5D%2Cg%3De%5B9%5D%2Cp%3D1%2Cv%3D%22%22%2Cd%3D%22%22%2Cm%3D%211%2Cy%3D%210%3Bswitch%28h%26%26%28h%3D%2Bh%2Esubstring%281%29%29%2C%28l%7C%7C%220%22%3D%3D%3Dr%26%26%22%3D%22%3D%3D%3Do%29%26%26%28l%3Dr%3D%220%22%2Co%3D%22%3D%22%29%2Cg%29%7Bcase%22n%22%3Af%3D%210%2Cg%3D%22g%22%3Bbreak%3Bcase%22%25%22%3Ap%3D100%2Cd%3D%22%25%22%2Cg%3D%22f%22%3Bbreak%3Bcase%22p%22%3Ap%3D100%2Cd%3D%22%25%22%2Cg%3D%22r%22%3Bbreak%3Bcase%22b%22%3Acase%22o%22%3Acase%22x%22%3Acase%22X%22%3A%22%23%22%3D%3D%3Dc%26%26%28v%3D%220%22%2Bg%2EtoLowerCase%28%29%29%3Bcase%22c%22%3Ay%3D%211%3Bcase%22d%22%3Am%3D%210%2Ch%3D0%3Bbreak%3Bcase%22s%22%3Ap%3D%2D1%2Cg%3D%22r%22%7D%22%24%22%3D%3D%3Dc%26%26%28v%3Du%5B0%5D%2Cd%3Du%5B1%5D%29%2C%22r%22%21%3Dg%7C%7Ch%7C%7C%28g%3D%22g%22%29%2Cnull%21%3Dh%26%26%28%22g%22%3D%3Dg%3Fh%3DMath%2Emax%281%2CMath%2Emin%2821%2Ch%29%29%3A%28%22e%22%3D%3Dg%7C%7C%22f%22%3D%3Dg%29%26%26%28h%3DMath%2Emax%280%2CMath%2Emin%2820%2Ch%29%29%29%29%2Cg%3Doc%2Eget%28g%29%7C%7CUt%3Bvar%20M%3Dl%26%26f%3Breturn%20function%28n%29%7Bvar%20e%3Dd%3Bif%28m%26%26n%251%29return%22%22%3Bvar%20u%3D0%3En%7C%7C0%3D%3D%3Dn%26%260%3E1%2Fn%3F%28n%3D%2Dn%2C%22%2D%22%29%3A%22%2D%22%3D%3D%3Da%3F%22%22%3Aa%3Bif%280%3Ep%29%7Bvar%20c%3Dta%2EformatPrefix%28n%2Ch%29%3Bn%3Dc%2Escale%28n%29%2Ce%3Dc%2Esymbol%2Bd%7Delse%20n%2A%3Dp%3Bn%3Dg%28n%2Ch%29%3Bvar%20x%2Cb%2C%5F%3Dn%2ElastIndexOf%28%22%2E%22%29%3Bif%280%3E%5F%29%7Bvar%20w%3Dy%3Fn%2ElastIndexOf%28%22e%22%29%3A%2D1%3B0%3Ew%3F%28x%3Dn%2Cb%3D%22%22%29%3A%28x%3Dn%2Esubstring%280%2Cw%29%2Cb%3Dn%2Esubstring%28w%29%29%7Delse%20x%3Dn%2Esubstring%280%2C%5F%29%2Cb%3Dt%2Bn%2Esubstring%28%5F%2B1%29%3B%21l%26%26f%26%26%28x%3Di%28x%2C1%2F0%29%29%3Bvar%20S%3Dv%2Elength%2Bx%2Elength%2Bb%2Elength%2B%28M%3F0%3Au%2Elength%29%2Ck%3Ds%3ES%3Fnew%20Array%28S%3Ds%2DS%2B1%29%2Ejoin%28r%29%3A%22%22%3Breturn%20M%26%26%28x%3Di%28k%2Bx%2Ck%2Elength%3Fs%2Db%2Elength%3A1%2F0%29%29%2Cu%2B%3Dv%2Cn%3Dx%2Bb%2C%28%22%3C%22%3D%3D%3Do%3Fu%2Bn%2Bk%3A%22%3E%22%3D%3D%3Do%3Fk%2Bu%2Bn%3A%22%5E%22%3D%3D%3Do%3Fk%2Esubstring%280%2CS%3E%3E%3D1%29%2Bu%2Bn%2Bk%2Esubstring%28S%29%3Au%2B%28M%3Fn%3Ak%2Bn%29%29%2Be%7D%7D%7Dfunction%20Ut%28n%29%7Breturn%20n%2B%22%22%7Dfunction%20jt%28%29%7Bthis%2E%5F%3Dnew%20Date%28arguments%2Elength%3E1%3FDate%2EUTC%2Eapply%28this%2Carguments%29%3Aarguments%5B0%5D%29%7Dfunction%20Ft%28n%2Ct%2Ce%29%7Bfunction%20r%28t%29%7Bvar%20e%3Dn%28t%29%2Cr%3Di%28e%2C1%29%3Breturn%20r%2Dt%3Et%2De%3Fe%3Ar%7Dfunction%20u%28e%29%7Breturn%20t%28e%3Dn%28new%20cc%28e%2D1%29%29%2C1%29%2Ce%7Dfunction%20i%28n%2Ce%29%7Breturn%20t%28n%3Dnew%20cc%28%2Bn%29%2Ce%29%2Cn%7Dfunction%20o%28n%2Cr%2Ci%29%7Bvar%20o%3Du%28n%29%2Ca%3D%5B%5D%3Bif%28i%3E1%29for%28%3Br%3Eo%3B%29e%28o%29%25i%7C%7Ca%2Epush%28new%20Date%28%2Bo%29%29%2Ct%28o%2C1%29%3Belse%20for%28%3Br%3Eo%3B%29a%2Epush%28new%20Date%28%2Bo%29%29%2Ct%28o%2C1%29%3Breturn%20a%7Dfunction%20a%28n%2Ct%2Ce%29%7Btry%7Bcc%3Djt%3Bvar%20r%3Dnew%20jt%3Breturn%20r%2E%5F%3Dn%2Co%28r%2Ct%2Ce%29%7Dfinally%7Bcc%3DDate%7D%7Dn%2Efloor%3Dn%2Cn%2Eround%3Dr%2Cn%2Eceil%3Du%2Cn%2Eoffset%3Di%2Cn%2Erange%3Do%3Bvar%20c%3Dn%2Eutc%3DHt%28n%29%3Breturn%20c%2Efloor%3Dc%2Cc%2Eround%3DHt%28r%29%2Cc%2Eceil%3DHt%28u%29%2Cc%2Eoffset%3DHt%28i%29%2Cc%2Erange%3Da%2Cn%7Dfunction%20Ht%28n%29%7Breturn%20function%28t%2Ce%29%7Btry%7Bcc%3Djt%3Bvar%20r%3Dnew%20jt%3Breturn%20r%2E%5F%3Dt%2Cn%28r%2Ce%29%2E%5F%7Dfinally%7Bcc%3DDate%7D%7D%7Dfunction%20Ot%28n%29%7Bfunction%20t%28n%29%7Bfunction%20t%28t%29%7Bfor%28var%20e%2Cu%2Ci%2Co%3D%5B%5D%2Ca%3D%2D1%2Cc%3D0%3B%2B%2Ba%3Cr%3B%2937%3D%3D%3Dn%2EcharCodeAt%28a%29%26%26%28o%2Epush%28n%2Eslice%28c%2Ca%29%29%2Cnull%21%3D%28u%3Dsc%5Be%3Dn%2EcharAt%28%2B%2Ba%29%5D%29%26%26%28e%3Dn%2EcharAt%28%2B%2Ba%29%29%2C%28i%3DN%5Be%5D%29%26%26%28e%3Di%28t%2Cnull%3D%3Du%3F%22e%22%3D%3D%3De%3F%22%20%22%3A%220%22%3Au%29%29%2Co%2Epush%28e%29%2Cc%3Da%2B1%29%3Breturn%20o%2Epush%28n%2Eslice%28c%2Ca%29%29%2Co%2Ejoin%28%22%22%29%7Dvar%20r%3Dn%2Elength%3Breturn%20t%2Eparse%3Dfunction%28t%29%7Bvar%20r%3D%7By%3A1900%2Cm%3A0%2Cd%3A1%2CH%3A0%2CM%3A0%2CS%3A0%2CL%3A0%2CZ%3Anull%7D%2Cu%3De%28r%2Cn%2Ct%2C0%29%3Bif%28u%21%3Dt%2Elength%29return%20null%3B%22p%22in%20r%26%26%28r%2EH%3Dr%2EH%2512%2B12%2Ar%2Ep%29%3Bvar%20i%3Dnull%21%3Dr%2EZ%26%26cc%21%3D%3Djt%2Co%3Dnew%28i%3Fjt%3Acc%29%3Breturn%22j%22in%20r%3Fo%2EsetFullYear%28r%2Ey%2C0%2Cr%2Ej%29%3A%22w%22in%20r%26%26%28%22W%22in%20r%7C%7C%22U%22in%20r%29%3F%28o%2EsetFullYear%28r%2Ey%2C0%2C1%29%2Co%2EsetFullYear%28r%2Ey%2C0%2C%22W%22in%20r%3F%28r%2Ew%2B6%29%257%2B7%2Ar%2EW%2D%28o%2EgetDay%28%29%2B5%29%257%3Ar%2Ew%2B7%2Ar%2EU%2D%28o%2EgetDay%28%29%2B6%29%257%29%29%3Ao%2EsetFullYear%28r%2Ey%2Cr%2Em%2Cr%2Ed%29%2Co%2EsetHours%28r%2EH%2B%28r%2EZ%2F100%7C0%29%2Cr%2EM%2Br%2EZ%25100%2Cr%2ES%2Cr%2EL%29%2Ci%3Fo%2E%5F%3Ao%7D%2Ct%2EtoString%3Dfunction%28%29%7Breturn%20n%7D%2Ct%7Dfunction%20e%28n%2Ct%2Ce%2Cr%29%7Bfor%28var%20u%2Ci%2Co%2Ca%3D0%2Cc%3Dt%2Elength%2Cl%3De%2Elength%3Bc%3Ea%3B%29%7Bif%28r%3E%3Dl%29return%2D1%3Bif%28u%3Dt%2EcharCodeAt%28a%2B%2B%29%2C37%3D%3D%3Du%29%7Bif%28o%3Dt%2EcharAt%28a%2B%2B%29%2Ci%3DC%5Bo%20in%20sc%3Ft%2EcharAt%28a%2B%2B%29%3Ao%5D%2C%21i%7C%7C%28r%3Di%28n%2Ce%2Cr%29%29%3C0%29return%2D1%7Delse%20if%28u%21%3De%2EcharCodeAt%28r%2B%2B%29%29return%2D1%7Dreturn%20r%7Dfunction%20r%28n%2Ct%2Ce%29%7B%5F%2ElastIndex%3D0%3Bvar%20r%3D%5F%2Eexec%28t%2Eslice%28e%29%29%3Breturn%20r%3F%28n%2Ew%3Dw%2Eget%28r%5B0%5D%2EtoLowerCase%28%29%29%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20u%28n%2Ct%2Ce%29%7Bx%2ElastIndex%3D0%3Bvar%20r%3Dx%2Eexec%28t%2Eslice%28e%29%29%3Breturn%20r%3F%28n%2Ew%3Db%2Eget%28r%5B0%5D%2EtoLowerCase%28%29%29%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20i%28n%2Ct%2Ce%29%7BE%2ElastIndex%3D0%3Bvar%20r%3DE%2Eexec%28t%2Eslice%28e%29%29%3Breturn%20r%3F%28n%2Em%3DA%2Eget%28r%5B0%5D%2EtoLowerCase%28%29%29%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20o%28n%2Ct%2Ce%29%7BS%2ElastIndex%3D0%3Bvar%20r%3DS%2Eexec%28t%2Eslice%28e%29%29%3Breturn%20r%3F%28n%2Em%3Dk%2Eget%28r%5B0%5D%2EtoLowerCase%28%29%29%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20a%28n%2Ct%2Cr%29%7Breturn%20e%28n%2CN%2Ec%2EtoString%28%29%2Ct%2Cr%29%7Dfunction%20c%28n%2Ct%2Cr%29%7Breturn%20e%28n%2CN%2Ex%2EtoString%28%29%2Ct%2Cr%29%7Dfunction%20l%28n%2Ct%2Cr%29%7Breturn%20e%28n%2CN%2EX%2EtoString%28%29%2Ct%2Cr%29%7Dfunction%20s%28n%2Ct%2Ce%29%7Bvar%20r%3DM%2Eget%28t%2Eslice%28e%2Ce%2B%3D2%29%2EtoLowerCase%28%29%29%3Breturn%20null%3D%3Dr%3F%2D1%3A%28n%2Ep%3Dr%2Ce%29%7Dvar%20f%3Dn%2EdateTime%2Ch%3Dn%2Edate%2Cg%3Dn%2Etime%2Cp%3Dn%2Eperiods%2Cv%3Dn%2Edays%2Cd%3Dn%2EshortDays%2Cm%3Dn%2Emonths%2Cy%3Dn%2EshortMonths%3Bt%2Eutc%3Dfunction%28n%29%7Bfunction%20e%28n%29%7Btry%7Bcc%3Djt%3Bvar%20t%3Dnew%20cc%3Breturn%20t%2E%5F%3Dn%2Cr%28t%29%7Dfinally%7Bcc%3DDate%7D%7Dvar%20r%3Dt%28n%29%3Breturn%20e%2Eparse%3Dfunction%28n%29%7Btry%7Bcc%3Djt%3Bvar%20t%3Dr%2Eparse%28n%29%3Breturn%20t%26%26t%2E%5F%7Dfinally%7Bcc%3DDate%7D%7D%2Ce%2EtoString%3Dr%2EtoString%2Ce%7D%2Ct%2Emulti%3Dt%2Eutc%2Emulti%3Dae%3Bvar%20M%3Dta%2Emap%28%29%2Cx%3DYt%28v%29%2Cb%3DZt%28v%29%2C%5F%3DYt%28d%29%2Cw%3DZt%28d%29%2CS%3DYt%28m%29%2Ck%3DZt%28m%29%2CE%3DYt%28y%29%2CA%3DZt%28y%29%3Bp%2EforEach%28function%28n%2Ct%29%7BM%2Eset%28n%2EtoLowerCase%28%29%2Ct%29%7D%29%3Bvar%20N%3D%7Ba%3Afunction%28n%29%7Breturn%20d%5Bn%2EgetDay%28%29%5D%7D%2CA%3Afunction%28n%29%7Breturn%20v%5Bn%2EgetDay%28%29%5D%7D%2Cb%3Afunction%28n%29%7Breturn%20y%5Bn%2EgetMonth%28%29%5D%7D%2CB%3Afunction%28n%29%7Breturn%20m%5Bn%2EgetMonth%28%29%5D%7D%2Cc%3At%28f%29%2Cd%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetDate%28%29%2Ct%2C2%29%7D%2Ce%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetDate%28%29%2Ct%2C2%29%7D%2CH%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetHours%28%29%2Ct%2C2%29%7D%2CI%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetHours%28%29%2512%7C%7C12%2Ct%2C2%29%7D%2Cj%3Afunction%28n%2Ct%29%7Breturn%20It%281%2Bac%2EdayOfYear%28n%29%2Ct%2C3%29%7D%2CL%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetMilliseconds%28%29%2Ct%2C3%29%7D%2Cm%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetMonth%28%29%2B1%2Ct%2C2%29%7D%2CM%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetMinutes%28%29%2Ct%2C2%29%7D%2Cp%3Afunction%28n%29%7Breturn%20p%5B%2B%28n%2EgetHours%28%29%3E%3D12%29%5D%7D%2CS%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetSeconds%28%29%2Ct%2C2%29%7D%2CU%3Afunction%28n%2Ct%29%7Breturn%20It%28ac%2EsundayOfYear%28n%29%2Ct%2C2%29%7D%2Cw%3Afunction%28n%29%7Breturn%20n%2EgetDay%28%29%7D%2CW%3Afunction%28n%2Ct%29%7Breturn%20It%28ac%2EmondayOfYear%28n%29%2Ct%2C2%29%7D%2Cx%3At%28h%29%2CX%3At%28g%29%2Cy%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetFullYear%28%29%25100%2Ct%2C2%29%7D%2CY%3Afunction%28n%2Ct%29%7Breturn%20It%28n%2EgetFullYear%28%29%251e4%2Ct%2C4%29%7D%2CZ%3Aie%2C%22%25%22%3Afunction%28%29%7Breturn%22%25%22%7D%7D%2CC%3D%7Ba%3Ar%2CA%3Au%2Cb%3Ai%2CB%3Ao%2Cc%3Aa%2Cd%3AQt%2Ce%3AQt%2CH%3Ate%2CI%3Ate%2Cj%3Ane%2CL%3Aue%2Cm%3AKt%2CM%3Aee%2Cp%3As%2CS%3Are%2CU%3AXt%2Cw%3AVt%2CW%3A%24t%2Cx%3Ac%2CX%3Al%2Cy%3AWt%2CY%3ABt%2CZ%3AJt%2C%22%25%22%3Aoe%7D%3Breturn%20t%7Dfunction%20It%28n%2Ct%2Ce%29%7Bvar%20r%3D0%3En%3F%22%2D%22%3A%22%22%2Cu%3D%28r%3F%2Dn%3An%29%2B%22%22%2Ci%3Du%2Elength%3Breturn%20r%2B%28e%3Ei%3Fnew%20Array%28e%2Di%2B1%29%2Ejoin%28t%29%2Bu%3Au%29%7Dfunction%20Yt%28n%29%7Breturn%20new%20RegExp%28%22%5E%28%3F%3A%22%2Bn%2Emap%28ta%2Erequote%29%2Ejoin%28%22%7C%22%29%2B%22%29%22%2C%22i%22%29%7Dfunction%20Zt%28n%29%7Bfor%28var%20t%3Dnew%20l%2Ce%3D%2D1%2Cr%3Dn%2Elength%3B%2B%2Be%3Cr%3B%29t%2Eset%28n%5Be%5D%2EtoLowerCase%28%29%2Ce%29%3Breturn%20t%7Dfunction%20Vt%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B1%29%29%3Breturn%20r%3F%28n%2Ew%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20Xt%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%29%29%3Breturn%20r%3F%28n%2EU%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20%24t%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%29%29%3Breturn%20r%3F%28n%2EW%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20Bt%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B4%29%29%3Breturn%20r%3F%28n%2Ey%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20Wt%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B2%29%29%3Breturn%20r%3F%28n%2Ey%3DGt%28%2Br%5B0%5D%29%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20Jt%28n%2Ct%2Ce%29%7Breturn%2F%5E%5B%2B%2D%5D%5Cd%7B4%7D%24%2F%2Etest%28t%3Dt%2Eslice%28e%2Ce%2B5%29%29%3F%28n%2EZ%3D%2Dt%2Ce%2B5%29%3A%2D1%7Dfunction%20Gt%28n%29%7Breturn%20n%2B%28n%3E68%3F1900%3A2e3%29%7Dfunction%20Kt%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B2%29%29%3Breturn%20r%3F%28n%2Em%3Dr%5B0%5D%2D1%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20Qt%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B2%29%29%3Breturn%20r%3F%28n%2Ed%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20ne%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B3%29%29%3Breturn%20r%3F%28n%2Ej%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20te%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B2%29%29%3Breturn%20r%3F%28n%2EH%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20ee%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B2%29%29%3Breturn%20r%3F%28n%2EM%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20re%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B2%29%29%3Breturn%20r%3F%28n%2ES%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20ue%28n%2Ct%2Ce%29%7Bfc%2ElastIndex%3D0%3Bvar%20r%3Dfc%2Eexec%28t%2Eslice%28e%2Ce%2B3%29%29%3Breturn%20r%3F%28n%2EL%3D%2Br%5B0%5D%2Ce%2Br%5B0%5D%2Elength%29%3A%2D1%7Dfunction%20ie%28n%29%7Bvar%20t%3Dn%2EgetTimezoneOffset%28%29%2Ce%3Dt%3E0%3F%22%2D%22%3A%22%2B%22%2Cr%3Dga%28t%29%2F60%7C0%2Cu%3Dga%28t%29%2560%3Breturn%20e%2BIt%28r%2C%220%22%2C2%29%2BIt%28u%2C%220%22%2C2%29%7Dfunction%20oe%28n%2Ct%2Ce%29%7Bhc%2ElastIndex%3D0%3Bvar%20r%3Dhc%2Eexec%28t%2Eslice%28e%2Ce%2B1%29%29%3Breturn%20r%3Fe%2Br%5B0%5D%2Elength%3A%2D1%7Dfunction%20ae%28n%29%7Bfor%28var%20t%3Dn%2Elength%2Ce%3D%2D1%3B%2B%2Be%3Ct%3B%29n%5Be%5D%5B0%5D%3Dthis%28n%5Be%5D%5B0%5D%29%3Breturn%20function%28t%29%7Bfor%28var%20e%3D0%2Cr%3Dn%5Be%5D%3B%21r%5B1%5D%28t%29%3B%29r%3Dn%5B%2B%2Be%5D%3Breturn%20r%5B0%5D%28t%29%7D%7Dfunction%20ce%28%29%7B%7Dfunction%20le%28n%2Ct%2Ce%29%7Bvar%20r%3De%2Es%3Dn%2Bt%2Cu%3Dr%2Dn%2Ci%3Dr%2Du%3Be%2Et%3Dn%2Di%2B%28t%2Du%29%7Dfunction%20se%28n%2Ct%29%7Bn%26%26dc%2EhasOwnProperty%28n%2Etype%29%26%26dc%5Bn%2Etype%5D%28n%2Ct%29%7Dfunction%20fe%28n%2Ct%2Ce%29%7Bvar%20r%2Cu%3D%2D1%2Ci%3Dn%2Elength%2De%3Bfor%28t%2ElineStart%28%29%3B%2B%2Bu%3Ci%3B%29r%3Dn%5Bu%5D%2Ct%2Epoint%28r%5B0%5D%2Cr%5B1%5D%2Cr%5B2%5D%29%3Bt%2ElineEnd%28%29%7Dfunction%20he%28n%2Ct%29%7Bvar%20e%3D%2D1%2Cr%3Dn%2Elength%3Bfor%28t%2EpolygonStart%28%29%3B%2B%2Be%3Cr%3B%29fe%28n%5Be%5D%2Ct%2C1%29%3Bt%2EpolygonEnd%28%29%7Dfunction%20ge%28%29%7Bfunction%20n%28n%2Ct%29%7Bn%2A%3DDa%2Ct%3Dt%2ADa%2F2%2Bqa%2F4%3Bvar%20e%3Dn%2Dr%2Co%3De%3E%3D0%3F1%3A%2D1%2Ca%3Do%2Ae%2Cc%3DMath%2Ecos%28t%29%2Cl%3DMath%2Esin%28t%29%2Cs%3Di%2Al%2Cf%3Du%2Ac%2Bs%2AMath%2Ecos%28a%29%2Ch%3Ds%2Ao%2AMath%2Esin%28a%29%3Byc%2Eadd%28Math%2Eatan2%28h%2Cf%29%29%2Cr%3Dn%2Cu%3Dc%2Ci%3Dl%7Dvar%20t%2Ce%2Cr%2Cu%2Ci%3BMc%2Epoint%3Dfunction%28o%2Ca%29%7BMc%2Epoint%3Dn%2Cr%3D%28t%3Do%29%2ADa%2Cu%3DMath%2Ecos%28a%3D%28e%3Da%29%2ADa%2F2%2Bqa%2F4%29%2Ci%3DMath%2Esin%28a%29%7D%2CMc%2ElineEnd%3Dfunction%28%29%7Bn%28t%2Ce%29%7D%7Dfunction%20pe%28n%29%7Bvar%20t%3Dn%5B0%5D%2Ce%3Dn%5B1%5D%2Cr%3DMath%2Ecos%28e%29%3Breturn%5Br%2AMath%2Ecos%28t%29%2Cr%2AMath%2Esin%28t%29%2CMath%2Esin%28e%29%5D%7Dfunction%20ve%28n%2Ct%29%7Breturn%20n%5B0%5D%2At%5B0%5D%2Bn%5B1%5D%2At%5B1%5D%2Bn%5B2%5D%2At%5B2%5D%7Dfunction%20de%28n%2Ct%29%7Breturn%5Bn%5B1%5D%2At%5B2%5D%2Dn%5B2%5D%2At%5B1%5D%2Cn%5B2%5D%2At%5B0%5D%2Dn%5B0%5D%2At%5B2%5D%2Cn%5B0%5D%2At%5B1%5D%2Dn%5B1%5D%2At%5B0%5D%5D%7Dfunction%20me%28n%2Ct%29%7Bn%5B0%5D%2B%3Dt%5B0%5D%2Cn%5B1%5D%2B%3Dt%5B1%5D%2Cn%5B2%5D%2B%3Dt%5B2%5D%7Dfunction%20ye%28n%2Ct%29%7Breturn%5Bn%5B0%5D%2At%2Cn%5B1%5D%2At%2Cn%5B2%5D%2At%5D%7Dfunction%20Me%28n%29%7Bvar%20t%3DMath%2Esqrt%28n%5B0%5D%2An%5B0%5D%2Bn%5B1%5D%2An%5B1%5D%2Bn%5B2%5D%2An%5B2%5D%29%3Bn%5B0%5D%2F%3Dt%2Cn%5B1%5D%2F%3Dt%2Cn%5B2%5D%2F%3Dt%7Dfunction%20xe%28n%29%7Breturn%5BMath%2Eatan2%28n%5B1%5D%2Cn%5B0%5D%29%2Ctt%28n%5B2%5D%29%5D%7Dfunction%20be%28n%2Ct%29%7Breturn%20ga%28n%5B0%5D%2Dt%5B0%5D%29%3CCa%26%26ga%28n%5B1%5D%2Dt%5B1%5D%29%3CCa%7Dfunction%20%5Fe%28n%2Ct%29%7Bn%2A%3DDa%3Bvar%20e%3DMath%2Ecos%28t%2A%3DDa%29%3Bwe%28e%2AMath%2Ecos%28n%29%2Ce%2AMath%2Esin%28n%29%2CMath%2Esin%28t%29%29%7Dfunction%20we%28n%2Ct%2Ce%29%7B%2B%2Bxc%2C%5Fc%2B%3D%28n%2D%5Fc%29%2Fxc%2Cwc%2B%3D%28t%2Dwc%29%2Fxc%2CSc%2B%3D%28e%2DSc%29%2Fxc%7Dfunction%20Se%28%29%7Bfunction%20n%28n%2Cu%29%7Bn%2A%3DDa%3Bvar%20i%3DMath%2Ecos%28u%2A%3DDa%29%2Co%3Di%2AMath%2Ecos%28n%29%2Ca%3Di%2AMath%2Esin%28n%29%2Cc%3DMath%2Esin%28u%29%2Cl%3DMath%2Eatan2%28Math%2Esqrt%28%28l%3De%2Ac%2Dr%2Aa%29%2Al%2B%28l%3Dr%2Ao%2Dt%2Ac%29%2Al%2B%28l%3Dt%2Aa%2De%2Ao%29%2Al%29%2Ct%2Ao%2Be%2Aa%2Br%2Ac%29%3Bbc%2B%3Dl%2Ckc%2B%3Dl%2A%28t%2B%28t%3Do%29%29%2CEc%2B%3Dl%2A%28e%2B%28e%3Da%29%29%2CAc%2B%3Dl%2A%28r%2B%28r%3Dc%29%29%2Cwe%28t%2Ce%2Cr%29%7Dvar%20t%2Ce%2Cr%3Bqc%2Epoint%3Dfunction%28u%2Ci%29%7Bu%2A%3DDa%3Bvar%20o%3DMath%2Ecos%28i%2A%3DDa%29%3Bt%3Do%2AMath%2Ecos%28u%29%2Ce%3Do%2AMath%2Esin%28u%29%2Cr%3DMath%2Esin%28i%29%2Cqc%2Epoint%3Dn%2Cwe%28t%2Ce%2Cr%29%7D%7Dfunction%20ke%28%29%7Bqc%2Epoint%3D%5Fe%7Dfunction%20Ee%28%29%7Bfunction%20n%28n%2Ct%29%7Bn%2A%3DDa%3Bvar%20e%3DMath%2Ecos%28t%2A%3DDa%29%2Co%3De%2AMath%2Ecos%28n%29%2Ca%3De%2AMath%2Esin%28n%29%2Cc%3DMath%2Esin%28t%29%2Cl%3Du%2Ac%2Di%2Aa%2Cs%3Di%2Ao%2Dr%2Ac%2Cf%3Dr%2Aa%2Du%2Ao%2Ch%3DMath%2Esqrt%28l%2Al%2Bs%2As%2Bf%2Af%29%2Cg%3Dr%2Ao%2Bu%2Aa%2Bi%2Ac%2Cp%3Dh%26%26%2Dnt%28g%29%2Fh%2Cv%3DMath%2Eatan2%28h%2Cg%29%3BNc%2B%3Dp%2Al%2CCc%2B%3Dp%2As%2Czc%2B%3Dp%2Af%2Cbc%2B%3Dv%2Ckc%2B%3Dv%2A%28r%2B%28r%3Do%29%29%2CEc%2B%3Dv%2A%28u%2B%28u%3Da%29%29%2CAc%2B%3Dv%2A%28i%2B%28i%3Dc%29%29%2Cwe%28r%2Cu%2Ci%29%7Dvar%20t%2Ce%2Cr%2Cu%2Ci%3Bqc%2Epoint%3Dfunction%28o%2Ca%29%7Bt%3Do%2Ce%3Da%2Cqc%2Epoint%3Dn%2Co%2A%3DDa%3Bvar%20c%3DMath%2Ecos%28a%2A%3DDa%29%3Br%3Dc%2AMath%2Ecos%28o%29%2Cu%3Dc%2AMath%2Esin%28o%29%2Ci%3DMath%2Esin%28a%29%2Cwe%28r%2Cu%2Ci%29%7D%2Cqc%2ElineEnd%3Dfunction%28%29%7Bn%28t%2Ce%29%2Cqc%2ElineEnd%3Dke%2Cqc%2Epoint%3D%5Fe%7D%7Dfunction%20Ae%28n%2Ct%29%7Bfunction%20e%28e%2Cr%29%7Breturn%20e%3Dn%28e%2Cr%29%2Ct%28e%5B0%5D%2Ce%5B1%5D%29%7Dreturn%20n%2Einvert%26%26t%2Einvert%26%26%28e%2Einvert%3Dfunction%28e%2Cr%29%7Breturn%20e%3Dt%2Einvert%28e%2Cr%29%2Ce%26%26n%2Einvert%28e%5B0%5D%2Ce%5B1%5D%29%7D%29%2Ce%7Dfunction%20Ne%28%29%7Breturn%210%7Dfunction%20Ce%28n%2Ct%2Ce%2Cr%2Cu%29%7Bvar%20i%3D%5B%5D%2Co%3D%5B%5D%3Bif%28n%2EforEach%28function%28n%29%7Bif%28%21%28%28t%3Dn%2Elength%2D1%29%3C%3D0%29%29%7Bvar%20t%2Ce%3Dn%5B0%5D%2Cr%3Dn%5Bt%5D%3Bif%28be%28e%2Cr%29%29%7Bu%2ElineStart%28%29%3Bfor%28var%20a%3D0%3Bt%3Ea%3B%2B%2Ba%29u%2Epoint%28%28e%3Dn%5Ba%5D%29%5B0%5D%2Ce%5B1%5D%29%3Breturn%20void%20u%2ElineEnd%28%29%7Dvar%20c%3Dnew%20qe%28e%2Cn%2Cnull%2C%210%29%2Cl%3Dnew%20qe%28e%2Cnull%2Cc%2C%211%29%3Bc%2Eo%3Dl%2Ci%2Epush%28c%29%2Co%2Epush%28l%29%2Cc%3Dnew%20qe%28r%2Cn%2Cnull%2C%211%29%2Cl%3Dnew%20qe%28r%2Cnull%2Cc%2C%210%29%2Cc%2Eo%3Dl%2Ci%2Epush%28c%29%2Co%2Epush%28l%29%7D%7D%29%2Co%2Esort%28t%29%2Cze%28i%29%2Cze%28o%29%2Ci%2Elength%29%7Bfor%28var%20a%3D0%2Cc%3De%2Cl%3Do%2Elength%3Bl%3Ea%3B%2B%2Ba%29o%5Ba%5D%2Ee%3Dc%3D%21c%3Bfor%28var%20s%2Cf%2Ch%3Di%5B0%5D%3B%3B%29%7Bfor%28var%20g%3Dh%2Cp%3D%210%3Bg%2Ev%3B%29if%28%28g%3Dg%2En%29%3D%3D%3Dh%29return%3Bs%3Dg%2Ez%2Cu%2ElineStart%28%29%3Bdo%7Bif%28g%2Ev%3Dg%2Eo%2Ev%3D%210%2Cg%2Ee%29%7Bif%28p%29for%28var%20a%3D0%2Cl%3Ds%2Elength%3Bl%3Ea%3B%2B%2Ba%29u%2Epoint%28%28f%3Ds%5Ba%5D%29%5B0%5D%2Cf%5B1%5D%29%3Belse%20r%28g%2Ex%2Cg%2En%2Ex%2C1%2Cu%29%3Bg%3Dg%2En%7Delse%7Bif%28p%29%7Bs%3Dg%2Ep%2Ez%3Bfor%28var%20a%3Ds%2Elength%2D1%3Ba%3E%3D0%3B%2D%2Da%29u%2Epoint%28%28f%3Ds%5Ba%5D%29%5B0%5D%2Cf%5B1%5D%29%7Delse%20r%28g%2Ex%2Cg%2Ep%2Ex%2C%2D1%2Cu%29%3Bg%3Dg%2Ep%7Dg%3Dg%2Eo%2Cs%3Dg%2Ez%2Cp%3D%21p%7Dwhile%28%21g%2Ev%29%3Bu%2ElineEnd%28%29%7D%7D%7Dfunction%20ze%28n%29%7Bif%28t%3Dn%2Elength%29%7Bfor%28var%20t%2Ce%2Cr%3D0%2Cu%3Dn%5B0%5D%3B%2B%2Br%3Ct%3B%29u%2En%3De%3Dn%5Br%5D%2Ce%2Ep%3Du%2Cu%3De%3Bu%2En%3De%3Dn%5B0%5D%2Ce%2Ep%3Du%7D%7Dfunction%20qe%28n%2Ct%2Ce%2Cr%29%7Bthis%2Ex%3Dn%2Cthis%2Ez%3Dt%2Cthis%2Eo%3De%2Cthis%2Ee%3Dr%2Cthis%2Ev%3D%211%2Cthis%2En%3Dthis%2Ep%3Dnull%7Dfunction%20Le%28n%2Ct%2Ce%2Cr%29%7Breturn%20function%28u%2Ci%29%7Bfunction%20o%28t%2Ce%29%7Bvar%20r%3Du%28t%2Ce%29%3Bn%28t%3Dr%5B0%5D%2Ce%3Dr%5B1%5D%29%26%26i%2Epoint%28t%2Ce%29%7Dfunction%20a%28n%2Ct%29%7Bvar%20e%3Du%28n%2Ct%29%3Bd%2Epoint%28e%5B0%5D%2Ce%5B1%5D%29%7Dfunction%20c%28%29%7By%2Epoint%3Da%2Cd%2ElineStart%28%29%7Dfunction%20l%28%29%7By%2Epoint%3Do%2Cd%2ElineEnd%28%29%7Dfunction%20s%28n%2Ct%29%7Bv%2Epush%28%5Bn%2Ct%5D%29%3Bvar%20e%3Du%28n%2Ct%29%3Bx%2Epoint%28e%5B0%5D%2Ce%5B1%5D%29%7Dfunction%20f%28%29%7Bx%2ElineStart%28%29%2Cv%3D%5B%5D%7Dfunction%20h%28%29%7Bs%28v%5B0%5D%5B0%5D%2Cv%5B0%5D%5B1%5D%29%2Cx%2ElineEnd%28%29%3Bvar%20n%2Ct%3Dx%2Eclean%28%29%2Ce%3DM%2Ebuffer%28%29%2Cr%3De%2Elength%3Bif%28v%2Epop%28%29%2Cp%2Epush%28v%29%2Cv%3Dnull%2Cr%29if%281%26t%29%7Bn%3De%5B0%5D%3Bvar%20u%2Cr%3Dn%2Elength%2D1%2Co%3D%2D1%3Bif%28r%3E0%29%7Bfor%28b%7C%7C%28i%2EpolygonStart%28%29%2Cb%3D%210%29%2Ci%2ElineStart%28%29%3B%2B%2Bo%3Cr%3B%29i%2Epoint%28%28u%3Dn%5Bo%5D%29%5B0%5D%2Cu%5B1%5D%29%3Bi%2ElineEnd%28%29%7D%7Delse%20r%3E1%26%262%26t%26%26e%2Epush%28e%2Epop%28%29%2Econcat%28e%2Eshift%28%29%29%29%2Cg%2Epush%28e%2Efilter%28Te%29%29%7Dvar%20g%2Cp%2Cv%2Cd%3Dt%28i%29%2Cm%3Du%2Einvert%28r%5B0%5D%2Cr%5B1%5D%29%2Cy%3D%7Bpoint%3Ao%2ClineStart%3Ac%2ClineEnd%3Al%2CpolygonStart%3Afunction%28%29%7By%2Epoint%3Ds%2Cy%2ElineStart%3Df%2Cy%2ElineEnd%3Dh%2Cg%3D%5B%5D%2Cp%3D%5B%5D%7D%2CpolygonEnd%3Afunction%28%29%7By%2Epoint%3Do%2Cy%2ElineStart%3Dc%2Cy%2ElineEnd%3Dl%2Cg%3Dta%2Emerge%28g%29%3Bvar%20n%3DFe%28m%2Cp%29%3Bg%2Elength%3F%28b%7C%7C%28i%2EpolygonStart%28%29%2Cb%3D%210%29%2CCe%28g%2CDe%2Cn%2Ce%2Ci%29%29%3An%26%26%28b%7C%7C%28i%2EpolygonStart%28%29%2Cb%3D%210%29%2Ci%2ElineStart%28%29%2Ce%28null%2Cnull%2C1%2Ci%29%2Ci%2ElineEnd%28%29%29%2Cb%26%26%28i%2EpolygonEnd%28%29%2Cb%3D%211%29%2Cg%3Dp%3Dnull%7D%2Csphere%3Afunction%28%29%7Bi%2EpolygonStart%28%29%2Ci%2ElineStart%28%29%2Ce%28null%2Cnull%2C1%2Ci%29%2Ci%2ElineEnd%28%29%2Ci%2EpolygonEnd%28%29%7D%7D%2CM%3DRe%28%29%2Cx%3Dt%28M%29%2Cb%3D%211%3Breturn%20y%7D%7Dfunction%20Te%28n%29%7Breturn%20n%2Elength%3E1%7Dfunction%20Re%28%29%7Bvar%20n%2Ct%3D%5B%5D%3Breturn%7BlineStart%3Afunction%28%29%7Bt%2Epush%28n%3D%5B%5D%29%7D%2Cpoint%3Afunction%28t%2Ce%29%7Bn%2Epush%28%5Bt%2Ce%5D%29%7D%2ClineEnd%3Ab%2Cbuffer%3Afunction%28%29%7Bvar%20e%3Dt%3Breturn%20t%3D%5B%5D%2Cn%3Dnull%2Ce%7D%2Crejoin%3Afunction%28%29%7Bt%2Elength%3E1%26%26t%2Epush%28t%2Epop%28%29%2Econcat%28t%2Eshift%28%29%29%29%7D%7D%7Dfunction%20De%28n%2Ct%29%7Breturn%28%28n%3Dn%2Ex%29%5B0%5D%3C0%3Fn%5B1%5D%2DRa%2DCa%3ARa%2Dn%5B1%5D%29%2D%28%28t%3Dt%2Ex%29%5B0%5D%3C0%3Ft%5B1%5D%2DRa%2DCa%3ARa%2Dt%5B1%5D%29%7Dfunction%20Pe%28n%29%7Bvar%20t%2Ce%3D0%2F0%2Cr%3D0%2F0%2Cu%3D0%2F0%3Breturn%7BlineStart%3Afunction%28%29%7Bn%2ElineStart%28%29%2Ct%3D1%7D%2Cpoint%3Afunction%28i%2Co%29%7Bvar%20a%3Di%3E0%3Fqa%3A%2Dqa%2Cc%3Dga%28i%2De%29%3Bga%28c%2Dqa%29%3CCa%3F%28n%2Epoint%28e%2Cr%3D%28r%2Bo%29%2F2%3E0%3FRa%3A%2DRa%29%2Cn%2Epoint%28u%2Cr%29%2Cn%2ElineEnd%28%29%2Cn%2ElineStart%28%29%2Cn%2Epoint%28a%2Cr%29%2Cn%2Epoint%28i%2Cr%29%2Ct%3D0%29%3Au%21%3D%3Da%26%26c%3E%3Dqa%26%26%28ga%28e%2Du%29%3CCa%26%26%28e%2D%3Du%2ACa%29%2Cga%28i%2Da%29%3CCa%26%26%28i%2D%3Da%2ACa%29%2Cr%3DUe%28e%2Cr%2Ci%2Co%29%2Cn%2Epoint%28u%2Cr%29%2Cn%2ElineEnd%28%29%2Cn%2ElineStart%28%29%2Cn%2Epoint%28a%2Cr%29%2Ct%3D0%29%2Cn%2Epoint%28e%3Di%2Cr%3Do%29%2Cu%3Da%7D%2ClineEnd%3Afunction%28%29%7Bn%2ElineEnd%28%29%2Ce%3Dr%3D0%2F0%7D%2Cclean%3Afunction%28%29%7Breturn%202%2Dt%7D%7D%7Dfunction%20Ue%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%2Ci%2Co%3DMath%2Esin%28n%2De%29%3Breturn%20ga%28o%29%3ECa%3FMath%2Eatan%28%28Math%2Esin%28t%29%2A%28i%3DMath%2Ecos%28r%29%29%2AMath%2Esin%28e%29%2DMath%2Esin%28r%29%2A%28u%3DMath%2Ecos%28t%29%29%2AMath%2Esin%28n%29%29%2F%28u%2Ai%2Ao%29%29%3A%28t%2Br%29%2F2%7Dfunction%20je%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3Bif%28null%3D%3Dn%29u%3De%2ARa%2Cr%2Epoint%28%2Dqa%2Cu%29%2Cr%2Epoint%280%2Cu%29%2Cr%2Epoint%28qa%2Cu%29%2Cr%2Epoint%28qa%2C0%29%2Cr%2Epoint%28qa%2C%2Du%29%2Cr%2Epoint%280%2C%2Du%29%2Cr%2Epoint%28%2Dqa%2C%2Du%29%2Cr%2Epoint%28%2Dqa%2C0%29%2Cr%2Epoint%28%2Dqa%2Cu%29%3Belse%20if%28ga%28n%5B0%5D%2Dt%5B0%5D%29%3ECa%29%7Bvar%20i%3Dn%5B0%5D%3Ct%5B0%5D%3Fqa%3A%2Dqa%3Bu%3De%2Ai%2F2%2Cr%2Epoint%28%2Di%2Cu%29%2Cr%2Epoint%280%2Cu%29%2Cr%2Epoint%28i%2Cu%29%7Delse%20r%2Epoint%28t%5B0%5D%2Ct%5B1%5D%29%7Dfunction%20Fe%28n%2Ct%29%7Bvar%20e%3Dn%5B0%5D%2Cr%3Dn%5B1%5D%2Cu%3D%5BMath%2Esin%28e%29%2C%2DMath%2Ecos%28e%29%2C0%5D%2Ci%3D0%2Co%3D0%3Byc%2Ereset%28%29%3Bfor%28var%20a%3D0%2Cc%3Dt%2Elength%3Bc%3Ea%3B%2B%2Ba%29%7Bvar%20l%3Dt%5Ba%5D%2Cs%3Dl%2Elength%3Bif%28s%29for%28var%20f%3Dl%5B0%5D%2Ch%3Df%5B0%5D%2Cg%3Df%5B1%5D%2F2%2Bqa%2F4%2Cp%3DMath%2Esin%28g%29%2Cv%3DMath%2Ecos%28g%29%2Cd%3D1%3B%3B%29%7Bd%3D%3D%3Ds%26%26%28d%3D0%29%2Cn%3Dl%5Bd%5D%3Bvar%20m%3Dn%5B0%5D%2Cy%3Dn%5B1%5D%2F2%2Bqa%2F4%2CM%3DMath%2Esin%28y%29%2Cx%3DMath%2Ecos%28y%29%2Cb%3Dm%2Dh%2C%5F%3Db%3E%3D0%3F1%3A%2D1%2Cw%3D%5F%2Ab%2CS%3Dw%3Eqa%2Ck%3Dp%2AM%3Bif%28yc%2Eadd%28Math%2Eatan2%28k%2A%5F%2AMath%2Esin%28w%29%2Cv%2Ax%2Bk%2AMath%2Ecos%28w%29%29%29%2Ci%2B%3DS%3Fb%2B%5F%2ALa%3Ab%2CS%5Eh%3E%3De%5Em%3E%3De%29%7Bvar%20E%3Dde%28pe%28f%29%2Cpe%28n%29%29%3BMe%28E%29%3Bvar%20A%3Dde%28u%2CE%29%3BMe%28A%29%3Bvar%20N%3D%28S%5Eb%3E%3D0%3F%2D1%3A1%29%2Att%28A%5B2%5D%29%3B%28r%3EN%7C%7Cr%3D%3D%3DN%26%26%28E%5B0%5D%7C%7CE%5B1%5D%29%29%26%26%28o%2B%3DS%5Eb%3E%3D0%3F1%3A%2D1%29%7Dif%28%21d%2B%2B%29break%3Bh%3Dm%2Cp%3DM%2Cv%3Dx%2Cf%3Dn%7D%7Dreturn%28%2DCa%3Ei%7C%7CCa%3Ei%26%260%3Eyc%29%5E1%26o%7Dfunction%20He%28n%29%7Bfunction%20t%28n%2Ct%29%7Breturn%20Math%2Ecos%28n%29%2AMath%2Ecos%28t%29%3Ei%7Dfunction%20e%28n%29%7Bvar%20e%2Ci%2Cc%2Cl%2Cs%3Breturn%7BlineStart%3Afunction%28%29%7Bl%3Dc%3D%211%2Cs%3D1%7D%2Cpoint%3Afunction%28f%2Ch%29%7Bvar%20g%2Cp%3D%5Bf%2Ch%5D%2Cv%3Dt%28f%2Ch%29%2Cd%3Do%3Fv%3F0%3Au%28f%2Ch%29%3Av%3Fu%28f%2B%280%3Ef%3Fqa%3A%2Dqa%29%2Ch%29%3A0%3Bif%28%21e%26%26%28l%3Dc%3Dv%29%26%26n%2ElineStart%28%29%2Cv%21%3D%3Dc%26%26%28g%3Dr%28e%2Cp%29%2C%28be%28e%2Cg%29%7C%7Cbe%28p%2Cg%29%29%26%26%28p%5B0%5D%2B%3DCa%2Cp%5B1%5D%2B%3DCa%2Cv%3Dt%28p%5B0%5D%2Cp%5B1%5D%29%29%29%2Cv%21%3D%3Dc%29s%3D0%2Cv%3F%28n%2ElineStart%28%29%2Cg%3Dr%28p%2Ce%29%2Cn%2Epoint%28g%5B0%5D%2Cg%5B1%5D%29%29%3A%28g%3Dr%28e%2Cp%29%2Cn%2Epoint%28g%5B0%5D%2Cg%5B1%5D%29%2Cn%2ElineEnd%28%29%29%2Ce%3Dg%3Belse%20if%28a%26%26e%26%26o%5Ev%29%7Bvar%20m%3Bd%26i%7C%7C%21%28m%3Dr%28p%2Ce%2C%210%29%29%7C%7C%28s%3D0%2Co%3F%28n%2ElineStart%28%29%2Cn%2Epoint%28m%5B0%5D%5B0%5D%2Cm%5B0%5D%5B1%5D%29%2Cn%2Epoint%28m%5B1%5D%5B0%5D%2Cm%5B1%5D%5B1%5D%29%2Cn%2ElineEnd%28%29%29%3A%28n%2Epoint%28m%5B1%5D%5B0%5D%2Cm%5B1%5D%5B1%5D%29%2Cn%2ElineEnd%28%29%2Cn%2ElineStart%28%29%2Cn%2Epoint%28m%5B0%5D%5B0%5D%2Cm%5B0%5D%5B1%5D%29%29%29%7D%21v%7C%7Ce%26%26be%28e%2Cp%29%7C%7Cn%2Epoint%28p%5B0%5D%2Cp%5B1%5D%29%2Ce%3Dp%2Cc%3Dv%2Ci%3Dd%7D%2ClineEnd%3Afunction%28%29%7Bc%26%26n%2ElineEnd%28%29%2Ce%3Dnull%7D%2Cclean%3Afunction%28%29%7Breturn%20s%7C%28l%26%26c%29%3C%3C1%7D%7D%7Dfunction%20r%28n%2Ct%2Ce%29%7Bvar%20r%3Dpe%28n%29%2Cu%3Dpe%28t%29%2Co%3D%5B1%2C0%2C0%5D%2Ca%3Dde%28r%2Cu%29%2Cc%3Dve%28a%2Ca%29%2Cl%3Da%5B0%5D%2Cs%3Dc%2Dl%2Al%3Bif%28%21s%29return%21e%26%26n%3Bvar%20f%3Di%2Ac%2Fs%2Ch%3D%2Di%2Al%2Fs%2Cg%3Dde%28o%2Ca%29%2Cp%3Dye%28o%2Cf%29%2Cv%3Dye%28a%2Ch%29%3Bme%28p%2Cv%29%3Bvar%20d%3Dg%2Cm%3Dve%28p%2Cd%29%2Cy%3Dve%28d%2Cd%29%2CM%3Dm%2Am%2Dy%2A%28ve%28p%2Cp%29%2D1%29%3Bif%28%21%280%3EM%29%29%7Bvar%20x%3DMath%2Esqrt%28M%29%2Cb%3Dye%28d%2C%28%2Dm%2Dx%29%2Fy%29%3Bif%28me%28b%2Cp%29%2Cb%3Dxe%28b%29%2C%21e%29return%20b%3Bvar%20%5F%2Cw%3Dn%5B0%5D%2CS%3Dt%5B0%5D%2Ck%3Dn%5B1%5D%2CE%3Dt%5B1%5D%3Bw%3ES%26%26%28%5F%3Dw%2Cw%3DS%2CS%3D%5F%29%3Bvar%20A%3DS%2Dw%2CN%3Dga%28A%2Dqa%29%3CCa%2CC%3DN%7C%7CCa%3EA%3Bif%28%21N%26%26k%3EE%26%26%28%5F%3Dk%2Ck%3DE%2CE%3D%5F%29%2CC%3FN%3Fk%2BE%3E0%5Eb%5B1%5D%3C%28ga%28b%5B0%5D%2Dw%29%3CCa%3Fk%3AE%29%3Ak%3C%3Db%5B1%5D%26%26b%5B1%5D%3C%3DE%3AA%3Eqa%5E%28w%3C%3Db%5B0%5D%26%26b%5B0%5D%3C%3DS%29%29%7Bvar%20z%3Dye%28d%2C%28%2Dm%2Bx%29%2Fy%29%3Breturn%20me%28z%2Cp%29%2C%5Bb%2Cxe%28z%29%5D%7D%7D%7Dfunction%20u%28t%2Ce%29%7Bvar%20r%3Do%3Fn%3Aqa%2Dn%2Cu%3D0%3Breturn%2Dr%3Et%3Fu%7C%3D1%3At%3Er%26%26%28u%7C%3D2%29%2C%2Dr%3Ee%3Fu%7C%3D4%3Ae%3Er%26%26%28u%7C%3D8%29%2Cu%7Dvar%20i%3DMath%2Ecos%28n%29%2Co%3Di%3E0%2Ca%3Dga%28i%29%3ECa%2Cc%3Dgr%28n%2C6%2ADa%29%3Breturn%20Le%28t%2Ce%2Cc%2Co%3F%5B0%2C%2Dn%5D%3A%5B%2Dqa%2Cn%2Dqa%5D%29%7Dfunction%20Oe%28n%2Ct%2Ce%2Cr%29%7Breturn%20function%28u%29%7Bvar%20i%2Co%3Du%2Ea%2Ca%3Du%2Eb%2Cc%3Do%2Ex%2Cl%3Do%2Ey%2Cs%3Da%2Ex%2Cf%3Da%2Ey%2Ch%3D0%2Cg%3D1%2Cp%3Ds%2Dc%2Cv%3Df%2Dl%3Bif%28i%3Dn%2Dc%2Cp%7C%7C%21%28i%3E0%29%29%7Bif%28i%2F%3Dp%2C0%3Ep%29%7Bif%28h%3Ei%29return%3Bg%3Ei%26%26%28g%3Di%29%7Delse%20if%28p%3E0%29%7Bif%28i%3Eg%29return%3Bi%3Eh%26%26%28h%3Di%29%7Dif%28i%3De%2Dc%2Cp%7C%7C%21%280%3Ei%29%29%7Bif%28i%2F%3Dp%2C0%3Ep%29%7Bif%28i%3Eg%29return%3Bi%3Eh%26%26%28h%3Di%29%7Delse%20if%28p%3E0%29%7Bif%28h%3Ei%29return%3Bg%3Ei%26%26%28g%3Di%29%7Dif%28i%3Dt%2Dl%2Cv%7C%7C%21%28i%3E0%29%29%7Bif%28i%2F%3Dv%2C0%3Ev%29%7Bif%28h%3Ei%29return%3Bg%3Ei%26%26%28g%3Di%29%7Delse%20if%28v%3E0%29%7Bif%28i%3Eg%29return%3Bi%3Eh%26%26%28h%3Di%29%7Dif%28i%3Dr%2Dl%2Cv%7C%7C%21%280%3Ei%29%29%7Bif%28i%2F%3Dv%2C0%3Ev%29%7Bif%28i%3Eg%29return%3Bi%3Eh%26%26%28h%3Di%29%7Delse%20if%28v%3E0%29%7Bif%28h%3Ei%29return%3Bg%3Ei%26%26%28g%3Di%29%7Dreturn%20h%3E0%26%26%28u%2Ea%3D%7Bx%3Ac%2Bh%2Ap%2Cy%3Al%2Bh%2Av%7D%29%2C1%3Eg%26%26%28u%2Eb%3D%7Bx%3Ac%2Bg%2Ap%2Cy%3Al%2Bg%2Av%7D%29%2Cu%7D%7D%7D%7D%7D%7Dfunction%20Ie%28n%2Ct%2Ce%2Cr%29%7Bfunction%20u%28r%2Cu%29%7Breturn%20ga%28r%5B0%5D%2Dn%29%3CCa%3Fu%3E0%3F0%3A3%3Aga%28r%5B0%5D%2De%29%3CCa%3Fu%3E0%3F2%3A1%3Aga%28r%5B1%5D%2Dt%29%3CCa%3Fu%3E0%3F1%3A0%3Au%3E0%3F3%3A2%7Dfunction%20i%28n%2Ct%29%7Breturn%20o%28n%2Ex%2Ct%2Ex%29%7Dfunction%20o%28n%2Ct%29%7Bvar%20e%3Du%28n%2C1%29%2Cr%3Du%28t%2C1%29%3Breturn%20e%21%3D%3Dr%3Fe%2Dr%3A0%3D%3D%3De%3Ft%5B1%5D%2Dn%5B1%5D%3A1%3D%3D%3De%3Fn%5B0%5D%2Dt%5B0%5D%3A2%3D%3D%3De%3Fn%5B1%5D%2Dt%5B1%5D%3At%5B0%5D%2Dn%5B0%5D%7Dreturn%20function%28a%29%7Bfunction%20c%28n%29%7Bfor%28var%20t%3D0%2Ce%3Dd%2Elength%2Cr%3Dn%5B1%5D%2Cu%3D0%3Be%3Eu%3B%2B%2Bu%29for%28var%20i%2Co%3D1%2Ca%3Dd%5Bu%5D%2Cc%3Da%2Elength%2Cl%3Da%5B0%5D%3Bc%3Eo%3B%2B%2Bo%29i%3Da%5Bo%5D%2Cl%5B1%5D%3C%3Dr%3Fi%5B1%5D%3Er%26%26Q%28l%2Ci%2Cn%29%3E0%26%26%2B%2Bt%3Ai%5B1%5D%3C%3Dr%26%26Q%28l%2Ci%2Cn%29%3C0%26%26%2D%2Dt%2Cl%3Di%3Breturn%200%21%3D%3Dt%7Dfunction%20l%28i%2Ca%2Cc%2Cl%29%7Bvar%20s%3D0%2Cf%3D0%3Bif%28null%3D%3Di%7C%7C%28s%3Du%28i%2Cc%29%29%21%3D%3D%28f%3Du%28a%2Cc%29%29%7C%7Co%28i%2Ca%29%3C0%5Ec%3E0%29%7Bdo%20l%2Epoint%280%3D%3D%3Ds%7C%7C3%3D%3D%3Ds%3Fn%3Ae%2Cs%3E1%3Fr%3At%29%3Bwhile%28%28s%3D%28s%2Bc%2B4%29%254%29%21%3D%3Df%29%7Delse%20l%2Epoint%28a%5B0%5D%2Ca%5B1%5D%29%7Dfunction%20s%28u%2Ci%29%7Breturn%20u%3E%3Dn%26%26e%3E%3Du%26%26i%3E%3Dt%26%26r%3E%3Di%7Dfunction%20f%28n%2Ct%29%7Bs%28n%2Ct%29%26%26a%2Epoint%28n%2Ct%29%7Dfunction%20h%28%29%7BC%2Epoint%3Dp%2Cd%26%26d%2Epush%28m%3D%5B%5D%29%2CS%3D%210%2Cw%3D%211%2Cb%3D%5F%3D0%2F0%7Dfunction%20g%28%29%7Bv%26%26%28p%28y%2CM%29%2Cx%26%26w%26%26A%2Erejoin%28%29%2Cv%2Epush%28A%2Ebuffer%28%29%29%29%2CC%2Epoint%3Df%2Cw%26%26a%2ElineEnd%28%29%7Dfunction%20p%28n%2Ct%29%7Bn%3DMath%2Emax%28%2DTc%2CMath%2Emin%28Tc%2Cn%29%29%2Ct%3DMath%2Emax%28%2DTc%2CMath%2Emin%28Tc%2Ct%29%29%3Bvar%20e%3Ds%28n%2Ct%29%3Bif%28d%26%26m%2Epush%28%5Bn%2Ct%5D%29%2CS%29y%3Dn%2CM%3Dt%2Cx%3De%2CS%3D%211%2Ce%26%26%28a%2ElineStart%28%29%2Ca%2Epoint%28n%2Ct%29%29%3Belse%20if%28e%26%26w%29a%2Epoint%28n%2Ct%29%3Belse%7Bvar%20r%3D%7Ba%3A%7Bx%3Ab%2Cy%3A%5F%7D%2Cb%3A%7Bx%3An%2Cy%3At%7D%7D%3BN%28r%29%3F%28w%7C%7C%28a%2ElineStart%28%29%2Ca%2Epoint%28r%2Ea%2Ex%2Cr%2Ea%2Ey%29%29%2Ca%2Epoint%28r%2Eb%2Ex%2Cr%2Eb%2Ey%29%2Ce%7C%7Ca%2ElineEnd%28%29%2Ck%3D%211%29%3Ae%26%26%28a%2ElineStart%28%29%2Ca%2Epoint%28n%2Ct%29%2Ck%3D%211%29%7Db%3Dn%2C%5F%3Dt%2Cw%3De%7Dvar%20v%2Cd%2Cm%2Cy%2CM%2Cx%2Cb%2C%5F%2Cw%2CS%2Ck%2CE%3Da%2CA%3DRe%28%29%2CN%3DOe%28n%2Ct%2Ce%2Cr%29%2CC%3D%7Bpoint%3Af%2ClineStart%3Ah%2ClineEnd%3Ag%2CpolygonStart%3Afunction%28%29%7Ba%3DA%2Cv%3D%5B%5D%2Cd%3D%5B%5D%2Ck%3D%210%7D%2CpolygonEnd%3Afunction%28%29%7Ba%3DE%2Cv%3Dta%2Emerge%28v%29%3Bvar%20t%3Dc%28%5Bn%2Cr%5D%29%2Ce%3Dk%26%26t%2Cu%3Dv%2Elength%3B%28e%7C%7Cu%29%26%26%28a%2EpolygonStart%28%29%2Ce%26%26%28a%2ElineStart%28%29%2Cl%28null%2Cnull%2C1%2Ca%29%2Ca%2ElineEnd%28%29%29%2Cu%26%26Ce%28v%2Ci%2Ct%2Cl%2Ca%29%2Ca%2EpolygonEnd%28%29%29%2Cv%3Dd%3Dm%3Dnull%7D%7D%3Breturn%20C%7D%7Dfunction%20Ye%28n%29%7Bvar%20t%3D0%2Ce%3Dqa%2F3%2Cr%3Dir%28n%29%2Cu%3Dr%28t%2Ce%29%3Breturn%20u%2Eparallels%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3Fr%28t%3Dn%5B0%5D%2Aqa%2F180%2Ce%3Dn%5B1%5D%2Aqa%2F180%29%3A%5Bt%2Fqa%2A180%2Ce%2Fqa%2A180%5D%7D%2Cu%7Dfunction%20Ze%28n%2Ct%29%7Bfunction%20e%28n%2Ct%29%7Bvar%20e%3DMath%2Esqrt%28i%2D2%2Au%2AMath%2Esin%28t%29%29%2Fu%3Breturn%5Be%2AMath%2Esin%28n%2A%3Du%29%2Co%2De%2AMath%2Ecos%28n%29%5D%7Dvar%20r%3DMath%2Esin%28n%29%2Cu%3D%28r%2BMath%2Esin%28t%29%29%2F2%2Ci%3D1%2Br%2A%282%2Au%2Dr%29%2Co%3DMath%2Esqrt%28i%29%2Fu%3Breturn%20e%2Einvert%3Dfunction%28n%2Ct%29%7Bvar%20e%3Do%2Dt%3Breturn%5BMath%2Eatan2%28n%2Ce%29%2Fu%2Ctt%28%28i%2D%28n%2An%2Be%2Ae%29%2Au%2Au%29%2F%282%2Au%29%29%5D%7D%2Ce%7Dfunction%20Ve%28%29%7Bfunction%20n%28n%2Ct%29%7BDc%2B%3Du%2An%2Dr%2At%2Cr%3Dn%2Cu%3Dt%7Dvar%20t%2Ce%2Cr%2Cu%3BHc%2Epoint%3Dfunction%28i%2Co%29%7BHc%2Epoint%3Dn%2Ct%3Dr%3Di%2Ce%3Du%3Do%7D%2CHc%2ElineEnd%3Dfunction%28%29%7Bn%28t%2Ce%29%7D%7Dfunction%20Xe%28n%2Ct%29%7BPc%3En%26%26%28Pc%3Dn%29%2Cn%3Ejc%26%26%28jc%3Dn%29%2CUc%3Et%26%26%28Uc%3Dt%29%2Ct%3EFc%26%26%28Fc%3Dt%29%7Dfunction%20%24e%28%29%7Bfunction%20n%28n%2Ct%29%7Bo%2Epush%28%22M%22%2Cn%2C%22%2C%22%2Ct%2Ci%29%7Dfunction%20t%28n%2Ct%29%7Bo%2Epush%28%22M%22%2Cn%2C%22%2C%22%2Ct%29%2Ca%2Epoint%3De%7Dfunction%20e%28n%2Ct%29%7Bo%2Epush%28%22L%22%2Cn%2C%22%2C%22%2Ct%29%7Dfunction%20r%28%29%7Ba%2Epoint%3Dn%7Dfunction%20u%28%29%7Bo%2Epush%28%22Z%22%29%7Dvar%20i%3DBe%284%2E5%29%2Co%3D%5B%5D%2Ca%3D%7Bpoint%3An%2ClineStart%3Afunction%28%29%7Ba%2Epoint%3Dt%7D%2ClineEnd%3Ar%2CpolygonStart%3Afunction%28%29%7Ba%2ElineEnd%3Du%7D%2CpolygonEnd%3Afunction%28%29%7Ba%2ElineEnd%3Dr%2Ca%2Epoint%3Dn%7D%2CpointRadius%3Afunction%28n%29%7Breturn%20i%3DBe%28n%29%2Ca%7D%2Cresult%3Afunction%28%29%7Bif%28o%2Elength%29%7Bvar%20n%3Do%2Ejoin%28%22%22%29%3Breturn%20o%3D%5B%5D%2Cn%7D%7D%7D%3Breturn%20a%7Dfunction%20Be%28n%29%7Breturn%22m0%2C%22%2Bn%2B%22a%22%2Bn%2B%22%2C%22%2Bn%2B%22%200%201%2C1%200%2C%22%2B%2D2%2An%2B%22a%22%2Bn%2B%22%2C%22%2Bn%2B%22%200%201%2C1%200%2C%22%2B2%2An%2B%22z%22%7Dfunction%20We%28n%2Ct%29%7B%5Fc%2B%3Dn%2Cwc%2B%3Dt%2C%2B%2BSc%7Dfunction%20Je%28%29%7Bfunction%20n%28n%2Cr%29%7Bvar%20u%3Dn%2Dt%2Ci%3Dr%2De%2Co%3DMath%2Esqrt%28u%2Au%2Bi%2Ai%29%3Bkc%2B%3Do%2A%28t%2Bn%29%2F2%2CEc%2B%3Do%2A%28e%2Br%29%2F2%2CAc%2B%3Do%2CWe%28t%3Dn%2Ce%3Dr%29%7Dvar%20t%2Ce%3BIc%2Epoint%3Dfunction%28r%2Cu%29%7BIc%2Epoint%3Dn%2CWe%28t%3Dr%2Ce%3Du%29%7D%7Dfunction%20Ge%28%29%7BIc%2Epoint%3DWe%7Dfunction%20Ke%28%29%7Bfunction%20n%28n%2Ct%29%7Bvar%20e%3Dn%2Dr%2Ci%3Dt%2Du%2Co%3DMath%2Esqrt%28e%2Ae%2Bi%2Ai%29%3Bkc%2B%3Do%2A%28r%2Bn%29%2F2%2CEc%2B%3Do%2A%28u%2Bt%29%2F2%2CAc%2B%3Do%2Co%3Du%2An%2Dr%2At%2CNc%2B%3Do%2A%28r%2Bn%29%2CCc%2B%3Do%2A%28u%2Bt%29%2Czc%2B%3D3%2Ao%2CWe%28r%3Dn%2Cu%3Dt%29%7Dvar%20t%2Ce%2Cr%2Cu%3BIc%2Epoint%3Dfunction%28i%2Co%29%7BIc%2Epoint%3Dn%2CWe%28t%3Dr%3Di%2Ce%3Du%3Do%29%7D%2CIc%2ElineEnd%3Dfunction%28%29%7Bn%28t%2Ce%29%7D%7Dfunction%20Qe%28n%29%7Bfunction%20t%28t%2Ce%29%7Bn%2EmoveTo%28t%2Bo%2Ce%29%2Cn%2Earc%28t%2Ce%2Co%2C0%2CLa%29%7Dfunction%20e%28t%2Ce%29%7Bn%2EmoveTo%28t%2Ce%29%2Ca%2Epoint%3Dr%7Dfunction%20r%28t%2Ce%29%7Bn%2ElineTo%28t%2Ce%29%7Dfunction%20u%28%29%7Ba%2Epoint%3Dt%7Dfunction%20i%28%29%7Bn%2EclosePath%28%29%7Dvar%20o%3D4%2E5%2Ca%3D%7Bpoint%3At%2ClineStart%3Afunction%28%29%7Ba%2Epoint%3De%7D%2ClineEnd%3Au%2CpolygonStart%3Afunction%28%29%7Ba%2ElineEnd%3Di%7D%2CpolygonEnd%3Afunction%28%29%7Ba%2ElineEnd%3Du%2Ca%2Epoint%3Dt%7D%2CpointRadius%3Afunction%28n%29%7Breturn%20o%3Dn%2Ca%7D%2Cresult%3Ab%7D%3Breturn%20a%7Dfunction%20nr%28n%29%7Bfunction%20t%28n%29%7Breturn%28a%3Fr%3Ae%29%28n%29%7Dfunction%20e%28t%29%7Breturn%20rr%28t%2Cfunction%28e%2Cr%29%7Be%3Dn%28e%2Cr%29%2Ct%2Epoint%28e%5B0%5D%2Ce%5B1%5D%29%7D%29%7Dfunction%20r%28t%29%7Bfunction%20e%28e%2Cr%29%7Be%3Dn%28e%2Cr%29%2Ct%2Epoint%28e%5B0%5D%2Ce%5B1%5D%29%7Dfunction%20r%28%29%7BM%3D0%2F0%2CS%2Epoint%3Di%2Ct%2ElineStart%28%29%7Dfunction%20i%28e%2Cr%29%7Bvar%20i%3Dpe%28%5Be%2Cr%5D%29%2Co%3Dn%28e%2Cr%29%3Bu%28M%2Cx%2Cy%2Cb%2C%5F%2Cw%2CM%3Do%5B0%5D%2Cx%3Do%5B1%5D%2Cy%3De%2Cb%3Di%5B0%5D%2C%5F%3Di%5B1%5D%2Cw%3Di%5B2%5D%2Ca%2Ct%29%2Ct%2Epoint%28M%2Cx%29%7Dfunction%20o%28%29%7BS%2Epoint%3De%2Ct%2ElineEnd%28%29%7Dfunction%20c%28%29%7Br%28%29%2CS%2Epoint%3Dl%2CS%2ElineEnd%3Ds%7Dfunction%20l%28n%2Ct%29%7Bi%28f%3Dn%2Ch%3Dt%29%2Cg%3DM%2Cp%3Dx%2Cv%3Db%2Cd%3D%5F%2Cm%3Dw%2CS%2Epoint%3Di%7Dfunction%20s%28%29%7Bu%28M%2Cx%2Cy%2Cb%2C%5F%2Cw%2Cg%2Cp%2Cf%2Cv%2Cd%2Cm%2Ca%2Ct%29%2CS%2ElineEnd%3Do%2Co%28%29%7Dvar%20f%2Ch%2Cg%2Cp%2Cv%2Cd%2Cm%2Cy%2CM%2Cx%2Cb%2C%5F%2Cw%2CS%3D%7Bpoint%3Ae%2ClineStart%3Ar%2ClineEnd%3Ao%2CpolygonStart%3Afunction%28%29%7Bt%2EpolygonStart%28%29%2CS%2ElineStart%3Dc%0A%7D%2CpolygonEnd%3Afunction%28%29%7Bt%2EpolygonEnd%28%29%2CS%2ElineStart%3Dr%7D%7D%3Breturn%20S%7Dfunction%20u%28t%2Ce%2Cr%2Ca%2Cc%2Cl%2Cs%2Cf%2Ch%2Cg%2Cp%2Cv%2Cd%2Cm%29%7Bvar%20y%3Ds%2Dt%2CM%3Df%2De%2Cx%3Dy%2Ay%2BM%2AM%3Bif%28x%3E4%2Ai%26%26d%2D%2D%29%7Bvar%20b%3Da%2Bg%2C%5F%3Dc%2Bp%2Cw%3Dl%2Bv%2CS%3DMath%2Esqrt%28b%2Ab%2B%5F%2A%5F%2Bw%2Aw%29%2Ck%3DMath%2Easin%28w%2F%3DS%29%2CE%3Dga%28ga%28w%29%2D1%29%3CCa%7C%7Cga%28r%2Dh%29%3CCa%3F%28r%2Bh%29%2F2%3AMath%2Eatan2%28%5F%2Cb%29%2CA%3Dn%28E%2Ck%29%2CN%3DA%5B0%5D%2CC%3DA%5B1%5D%2Cz%3DN%2Dt%2Cq%3DC%2De%2CL%3DM%2Az%2Dy%2Aq%3B%28L%2AL%2Fx%3Ei%7C%7Cga%28%28y%2Az%2BM%2Aq%29%2Fx%2D%2E5%29%3E%2E3%7C%7Co%3Ea%2Ag%2Bc%2Ap%2Bl%2Av%29%26%26%28u%28t%2Ce%2Cr%2Ca%2Cc%2Cl%2CN%2CC%2CE%2Cb%2F%3DS%2C%5F%2F%3DS%2Cw%2Cd%2Cm%29%2Cm%2Epoint%28N%2CC%29%2Cu%28N%2CC%2CE%2Cb%2C%5F%2Cw%2Cs%2Cf%2Ch%2Cg%2Cp%2Cv%2Cd%2Cm%29%29%7D%7Dvar%20i%3D%2E5%2Co%3DMath%2Ecos%2830%2ADa%29%2Ca%3D16%3Breturn%20t%2Eprecision%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28a%3D%28i%3Dn%2An%29%3E0%26%2616%2Ct%29%3AMath%2Esqrt%28i%29%7D%2Ct%7Dfunction%20tr%28n%29%7Bvar%20t%3Dnr%28function%28t%2Ce%29%7Breturn%20n%28%5Bt%2APa%2Ce%2APa%5D%29%7D%29%3Breturn%20function%28n%29%7Breturn%20or%28t%28n%29%29%7D%7Dfunction%20er%28n%29%7Bthis%2Estream%3Dn%7Dfunction%20rr%28n%2Ct%29%7Breturn%7Bpoint%3At%2Csphere%3Afunction%28%29%7Bn%2Esphere%28%29%7D%2ClineStart%3Afunction%28%29%7Bn%2ElineStart%28%29%7D%2ClineEnd%3Afunction%28%29%7Bn%2ElineEnd%28%29%7D%2CpolygonStart%3Afunction%28%29%7Bn%2EpolygonStart%28%29%7D%2CpolygonEnd%3Afunction%28%29%7Bn%2EpolygonEnd%28%29%7D%7D%7Dfunction%20ur%28n%29%7Breturn%20ir%28function%28%29%7Breturn%20n%7D%29%28%29%7Dfunction%20ir%28n%29%7Bfunction%20t%28n%29%7Breturn%20n%3Da%28n%5B0%5D%2ADa%2Cn%5B1%5D%2ADa%29%2C%5Bn%5B0%5D%2Ah%2Bc%2Cl%2Dn%5B1%5D%2Ah%5D%7Dfunction%20e%28n%29%7Breturn%20n%3Da%2Einvert%28%28n%5B0%5D%2Dc%29%2Fh%2C%28l%2Dn%5B1%5D%29%2Fh%29%2Cn%26%26%5Bn%5B0%5D%2APa%2Cn%5B1%5D%2APa%5D%7Dfunction%20r%28%29%7Ba%3DAe%28o%3Dlr%28m%2CM%2Cx%29%2Ci%29%3Bvar%20n%3Di%28v%2Cd%29%3Breturn%20c%3Dg%2Dn%5B0%5D%2Ah%2Cl%3Dp%2Bn%5B1%5D%2Ah%2Cu%28%29%7Dfunction%20u%28%29%7Breturn%20s%26%26%28s%2Evalid%3D%211%2Cs%3Dnull%29%2Ct%7Dvar%20i%2Co%2Ca%2Cc%2Cl%2Cs%2Cf%3Dnr%28function%28n%2Ct%29%7Breturn%20n%3Di%28n%2Ct%29%2C%5Bn%5B0%5D%2Ah%2Bc%2Cl%2Dn%5B1%5D%2Ah%5D%7D%29%2Ch%3D150%2Cg%3D480%2Cp%3D250%2Cv%3D0%2Cd%3D0%2Cm%3D0%2CM%3D0%2Cx%3D0%2Cb%3DLc%2C%5F%3Dy%2Cw%3Dnull%2CS%3Dnull%3Breturn%20t%2Estream%3Dfunction%28n%29%7Breturn%20s%26%26%28s%2Evalid%3D%211%29%2Cs%3Dor%28b%28o%2Cf%28%5F%28n%29%29%29%29%2Cs%2Evalid%3D%210%2Cs%7D%2Ct%2EclipAngle%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28b%3Dnull%3D%3Dn%3F%28w%3Dn%2CLc%29%3AHe%28%28w%3D%2Bn%29%2ADa%29%2Cu%28%29%29%3Aw%7D%2Ct%2EclipExtent%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28S%3Dn%2C%5F%3Dn%3FIe%28n%5B0%5D%5B0%5D%2Cn%5B0%5D%5B1%5D%2Cn%5B1%5D%5B0%5D%2Cn%5B1%5D%5B1%5D%29%3Ay%2Cu%28%29%29%3AS%7D%2Ct%2Escale%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28h%3D%2Bn%2Cr%28%29%29%3Ah%7D%2Ct%2Etranslate%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28g%3D%2Bn%5B0%5D%2Cp%3D%2Bn%5B1%5D%2Cr%28%29%29%3A%5Bg%2Cp%5D%7D%2Ct%2Ecenter%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28v%3Dn%5B0%5D%25360%2ADa%2Cd%3Dn%5B1%5D%25360%2ADa%2Cr%28%29%29%3A%5Bv%2APa%2Cd%2APa%5D%7D%2Ct%2Erotate%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28m%3Dn%5B0%5D%25360%2ADa%2CM%3Dn%5B1%5D%25360%2ADa%2Cx%3Dn%2Elength%3E2%3Fn%5B2%5D%25360%2ADa%3A0%2Cr%28%29%29%3A%5Bm%2APa%2CM%2APa%2Cx%2APa%5D%7D%2Cta%2Erebind%28t%2Cf%2C%22precision%22%29%2Cfunction%28%29%7Breturn%20i%3Dn%2Eapply%28this%2Carguments%29%2Ct%2Einvert%3Di%2Einvert%26%26e%2Cr%28%29%7D%7Dfunction%20or%28n%29%7Breturn%20rr%28n%2Cfunction%28t%2Ce%29%7Bn%2Epoint%28t%2ADa%2Ce%2ADa%29%7D%29%7Dfunction%20ar%28n%2Ct%29%7Breturn%5Bn%2Ct%5D%7Dfunction%20cr%28n%2Ct%29%7Breturn%5Bn%3Eqa%3Fn%2DLa%3A%2Dqa%3En%3Fn%2BLa%3An%2Ct%5D%7Dfunction%20lr%28n%2Ct%2Ce%29%7Breturn%20n%3Ft%7C%7Ce%3FAe%28fr%28n%29%2Chr%28t%2Ce%29%29%3Afr%28n%29%3At%7C%7Ce%3Fhr%28t%2Ce%29%3Acr%7Dfunction%20sr%28n%29%7Breturn%20function%28t%2Ce%29%7Breturn%20t%2B%3Dn%2C%5Bt%3Eqa%3Ft%2DLa%3A%2Dqa%3Et%3Ft%2BLa%3At%2Ce%5D%7D%7Dfunction%20fr%28n%29%7Bvar%20t%3Dsr%28n%29%3Breturn%20t%2Einvert%3Dsr%28%2Dn%29%2Ct%7Dfunction%20hr%28n%2Ct%29%7Bfunction%20e%28n%2Ct%29%7Bvar%20e%3DMath%2Ecos%28t%29%2Ca%3DMath%2Ecos%28n%29%2Ae%2Cc%3DMath%2Esin%28n%29%2Ae%2Cl%3DMath%2Esin%28t%29%2Cs%3Dl%2Ar%2Ba%2Au%3Breturn%5BMath%2Eatan2%28c%2Ai%2Ds%2Ao%2Ca%2Ar%2Dl%2Au%29%2Ctt%28s%2Ai%2Bc%2Ao%29%5D%7Dvar%20r%3DMath%2Ecos%28n%29%2Cu%3DMath%2Esin%28n%29%2Ci%3DMath%2Ecos%28t%29%2Co%3DMath%2Esin%28t%29%3Breturn%20e%2Einvert%3Dfunction%28n%2Ct%29%7Bvar%20e%3DMath%2Ecos%28t%29%2Ca%3DMath%2Ecos%28n%29%2Ae%2Cc%3DMath%2Esin%28n%29%2Ae%2Cl%3DMath%2Esin%28t%29%2Cs%3Dl%2Ai%2Dc%2Ao%3Breturn%5BMath%2Eatan2%28c%2Ai%2Bl%2Ao%2Ca%2Ar%2Bs%2Au%29%2Ctt%28s%2Ar%2Da%2Au%29%5D%7D%2Ce%7Dfunction%20gr%28n%2Ct%29%7Bvar%20e%3DMath%2Ecos%28n%29%2Cr%3DMath%2Esin%28n%29%3Breturn%20function%28u%2Ci%2Co%2Ca%29%7Bvar%20c%3Do%2At%3Bnull%21%3Du%3F%28u%3Dpr%28e%2Cu%29%2Ci%3Dpr%28e%2Ci%29%2C%28o%3E0%3Fi%3Eu%3Au%3Ei%29%26%26%28u%2B%3Do%2ALa%29%29%3A%28u%3Dn%2Bo%2ALa%2Ci%3Dn%2D%2E5%2Ac%29%3Bfor%28var%20l%2Cs%3Du%3Bo%3E0%3Fs%3Ei%3Ai%3Es%3Bs%2D%3Dc%29a%2Epoint%28%28l%3Dxe%28%5Be%2C%2Dr%2AMath%2Ecos%28s%29%2C%2Dr%2AMath%2Esin%28s%29%5D%29%29%5B0%5D%2Cl%5B1%5D%29%7D%7Dfunction%20pr%28n%2Ct%29%7Bvar%20e%3Dpe%28t%29%3Be%5B0%5D%2D%3Dn%2CMe%28e%29%3Bvar%20r%3Dnt%28%2De%5B1%5D%29%3Breturn%28%28%2De%5B2%5D%3C0%3F%2Dr%3Ar%29%2B2%2AMath%2EPI%2DCa%29%25%282%2AMath%2EPI%29%7Dfunction%20vr%28n%2Ct%2Ce%29%7Bvar%20r%3Dta%2Erange%28n%2Ct%2DCa%2Ce%29%2Econcat%28t%29%3Breturn%20function%28n%29%7Breturn%20r%2Emap%28function%28t%29%7Breturn%5Bn%2Ct%5D%7D%29%7D%7Dfunction%20dr%28n%2Ct%2Ce%29%7Bvar%20r%3Dta%2Erange%28n%2Ct%2DCa%2Ce%29%2Econcat%28t%29%3Breturn%20function%28n%29%7Breturn%20r%2Emap%28function%28t%29%7Breturn%5Bt%2Cn%5D%7D%29%7D%7Dfunction%20mr%28n%29%7Breturn%20n%2Esource%7Dfunction%20yr%28n%29%7Breturn%20n%2Etarget%7Dfunction%20Mr%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3DMath%2Ecos%28t%29%2Ci%3DMath%2Esin%28t%29%2Co%3DMath%2Ecos%28r%29%2Ca%3DMath%2Esin%28r%29%2Cc%3Du%2AMath%2Ecos%28n%29%2Cl%3Du%2AMath%2Esin%28n%29%2Cs%3Do%2AMath%2Ecos%28e%29%2Cf%3Do%2AMath%2Esin%28e%29%2Ch%3D2%2AMath%2Easin%28Math%2Esqrt%28it%28r%2Dt%29%2Bu%2Ao%2Ait%28e%2Dn%29%29%29%2Cg%3D1%2FMath%2Esin%28h%29%2Cp%3Dh%3Ffunction%28n%29%7Bvar%20t%3DMath%2Esin%28n%2A%3Dh%29%2Ag%2Ce%3DMath%2Esin%28h%2Dn%29%2Ag%2Cr%3De%2Ac%2Bt%2As%2Cu%3De%2Al%2Bt%2Af%2Co%3De%2Ai%2Bt%2Aa%3Breturn%5BMath%2Eatan2%28u%2Cr%29%2APa%2CMath%2Eatan2%28o%2CMath%2Esqrt%28r%2Ar%2Bu%2Au%29%29%2APa%5D%7D%3Afunction%28%29%7Breturn%5Bn%2APa%2Ct%2APa%5D%7D%3Breturn%20p%2Edistance%3Dh%2Cp%7Dfunction%20xr%28%29%7Bfunction%20n%28n%2Cu%29%7Bvar%20i%3DMath%2Esin%28u%2A%3DDa%29%2Co%3DMath%2Ecos%28u%29%2Ca%3Dga%28%28n%2A%3DDa%29%2Dt%29%2Cc%3DMath%2Ecos%28a%29%3BYc%2B%3DMath%2Eatan2%28Math%2Esqrt%28%28a%3Do%2AMath%2Esin%28a%29%29%2Aa%2B%28a%3Dr%2Ai%2De%2Ao%2Ac%29%2Aa%29%2Ce%2Ai%2Br%2Ao%2Ac%29%2Ct%3Dn%2Ce%3Di%2Cr%3Do%7Dvar%20t%2Ce%2Cr%3BZc%2Epoint%3Dfunction%28u%2Ci%29%7Bt%3Du%2ADa%2Ce%3DMath%2Esin%28i%2A%3DDa%29%2Cr%3DMath%2Ecos%28i%29%2CZc%2Epoint%3Dn%7D%2CZc%2ElineEnd%3Dfunction%28%29%7BZc%2Epoint%3DZc%2ElineEnd%3Db%7D%7Dfunction%20br%28n%2Ct%29%7Bfunction%20e%28t%2Ce%29%7Bvar%20r%3DMath%2Ecos%28t%29%2Cu%3DMath%2Ecos%28e%29%2Ci%3Dn%28r%2Au%29%3Breturn%5Bi%2Au%2AMath%2Esin%28t%29%2Ci%2AMath%2Esin%28e%29%5D%7Dreturn%20e%2Einvert%3Dfunction%28n%2Ce%29%7Bvar%20r%3DMath%2Esqrt%28n%2An%2Be%2Ae%29%2Cu%3Dt%28r%29%2Ci%3DMath%2Esin%28u%29%2Co%3DMath%2Ecos%28u%29%3Breturn%5BMath%2Eatan2%28n%2Ai%2Cr%2Ao%29%2CMath%2Easin%28r%26%26e%2Ai%2Fr%29%5D%7D%2Ce%7Dfunction%20%5Fr%28n%2Ct%29%7Bfunction%20e%28n%2Ct%29%7Bo%3E0%3F%2DRa%2BCa%3Et%26%26%28t%3D%2DRa%2BCa%29%3At%3ERa%2DCa%26%26%28t%3DRa%2DCa%29%3Bvar%20e%3Do%2FMath%2Epow%28u%28t%29%2Ci%29%3Breturn%5Be%2AMath%2Esin%28i%2An%29%2Co%2De%2AMath%2Ecos%28i%2An%29%5D%7Dvar%20r%3DMath%2Ecos%28n%29%2Cu%3Dfunction%28n%29%7Breturn%20Math%2Etan%28qa%2F4%2Bn%2F2%29%7D%2Ci%3Dn%3D%3D%3Dt%3FMath%2Esin%28n%29%3AMath%2Elog%28r%2FMath%2Ecos%28t%29%29%2FMath%2Elog%28u%28t%29%2Fu%28n%29%29%2Co%3Dr%2AMath%2Epow%28u%28n%29%2Ci%29%2Fi%3Breturn%20i%3F%28e%2Einvert%3Dfunction%28n%2Ct%29%7Bvar%20e%3Do%2Dt%2Cr%3DK%28i%29%2AMath%2Esqrt%28n%2An%2Be%2Ae%29%3Breturn%5BMath%2Eatan2%28n%2Ce%29%2Fi%2C2%2AMath%2Eatan%28Math%2Epow%28o%2Fr%2C1%2Fi%29%29%2DRa%5D%7D%2Ce%29%3ASr%7Dfunction%20wr%28n%2Ct%29%7Bfunction%20e%28n%2Ct%29%7Bvar%20e%3Di%2Dt%3Breturn%5Be%2AMath%2Esin%28u%2An%29%2Ci%2De%2AMath%2Ecos%28u%2An%29%5D%7Dvar%20r%3DMath%2Ecos%28n%29%2Cu%3Dn%3D%3D%3Dt%3FMath%2Esin%28n%29%3A%28r%2DMath%2Ecos%28t%29%29%2F%28t%2Dn%29%2Ci%3Dr%2Fu%2Bn%3Breturn%20ga%28u%29%3CCa%3Far%3A%28e%2Einvert%3Dfunction%28n%2Ct%29%7Bvar%20e%3Di%2Dt%3Breturn%5BMath%2Eatan2%28n%2Ce%29%2Fu%2Ci%2DK%28u%29%2AMath%2Esqrt%28n%2An%2Be%2Ae%29%5D%7D%2Ce%29%7Dfunction%20Sr%28n%2Ct%29%7Breturn%5Bn%2CMath%2Elog%28Math%2Etan%28qa%2F4%2Bt%2F2%29%29%5D%7Dfunction%20kr%28n%29%7Bvar%20t%2Ce%3Dur%28n%29%2Cr%3De%2Escale%2Cu%3De%2Etranslate%2Ci%3De%2EclipExtent%3Breturn%20e%2Escale%3Dfunction%28%29%7Bvar%20n%3Dr%2Eapply%28e%2Carguments%29%3Breturn%20n%3D%3D%3De%3Ft%3Fe%2EclipExtent%28null%29%3Ae%3An%7D%2Ce%2Etranslate%3Dfunction%28%29%7Bvar%20n%3Du%2Eapply%28e%2Carguments%29%3Breturn%20n%3D%3D%3De%3Ft%3Fe%2EclipExtent%28null%29%3Ae%3An%7D%2Ce%2EclipExtent%3Dfunction%28n%29%7Bvar%20o%3Di%2Eapply%28e%2Carguments%29%3Bif%28o%3D%3D%3De%29%7Bif%28t%3Dnull%3D%3Dn%29%7Bvar%20a%3Dqa%2Ar%28%29%2Cc%3Du%28%29%3Bi%28%5B%5Bc%5B0%5D%2Da%2Cc%5B1%5D%2Da%5D%2C%5Bc%5B0%5D%2Ba%2Cc%5B1%5D%2Ba%5D%5D%29%7D%7Delse%20t%26%26%28o%3Dnull%29%3Breturn%20o%7D%2Ce%2EclipExtent%28null%29%7Dfunction%20Er%28n%2Ct%29%7Breturn%5BMath%2Elog%28Math%2Etan%28qa%2F4%2Bt%2F2%29%29%2C%2Dn%5D%7Dfunction%20Ar%28n%29%7Breturn%20n%5B0%5D%7Dfunction%20Nr%28n%29%7Breturn%20n%5B1%5D%7Dfunction%20Cr%28n%29%7Bfor%28var%20t%3Dn%2Elength%2Ce%3D%5B0%2C1%5D%2Cr%3D2%2Cu%3D2%3Bt%3Eu%3Bu%2B%2B%29%7Bfor%28%3Br%3E1%26%26Q%28n%5Be%5Br%2D2%5D%5D%2Cn%5Be%5Br%2D1%5D%5D%2Cn%5Bu%5D%29%3C%3D0%3B%29%2D%2Dr%3Be%5Br%2B%2B%5D%3Du%7Dreturn%20e%2Eslice%280%2Cr%29%7Dfunction%20zr%28n%2Ct%29%7Breturn%20n%5B0%5D%2Dt%5B0%5D%7C%7Cn%5B1%5D%2Dt%5B1%5D%7Dfunction%20qr%28n%2Ct%2Ce%29%7Breturn%28e%5B0%5D%2Dt%5B0%5D%29%2A%28n%5B1%5D%2Dt%5B1%5D%29%3C%28e%5B1%5D%2Dt%5B1%5D%29%2A%28n%5B0%5D%2Dt%5B0%5D%29%7Dfunction%20Lr%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3Dn%5B0%5D%2Ci%3De%5B0%5D%2Co%3Dt%5B0%5D%2Du%2Ca%3Dr%5B0%5D%2Di%2Cc%3Dn%5B1%5D%2Cl%3De%5B1%5D%2Cs%3Dt%5B1%5D%2Dc%2Cf%3Dr%5B1%5D%2Dl%2Ch%3D%28a%2A%28c%2Dl%29%2Df%2A%28u%2Di%29%29%2F%28f%2Ao%2Da%2As%29%3Breturn%5Bu%2Bh%2Ao%2Cc%2Bh%2As%5D%7Dfunction%20Tr%28n%29%7Bvar%20t%3Dn%5B0%5D%2Ce%3Dn%5Bn%2Elength%2D1%5D%3Breturn%21%28t%5B0%5D%2De%5B0%5D%7C%7Ct%5B1%5D%2De%5B1%5D%29%7Dfunction%20Rr%28%29%7Btu%28this%29%2Cthis%2Eedge%3Dthis%2Esite%3Dthis%2Ecircle%3Dnull%7Dfunction%20Dr%28n%29%7Bvar%20t%3Del%2Epop%28%29%7C%7Cnew%20Rr%3Breturn%20t%2Esite%3Dn%2Ct%7Dfunction%20Pr%28n%29%7BXr%28n%29%2CQc%2Eremove%28n%29%2Cel%2Epush%28n%29%2Ctu%28n%29%7Dfunction%20Ur%28n%29%7Bvar%20t%3Dn%2Ecircle%2Ce%3Dt%2Ex%2Cr%3Dt%2Ecy%2Cu%3D%7Bx%3Ae%2Cy%3Ar%7D%2Ci%3Dn%2EP%2Co%3Dn%2EN%2Ca%3D%5Bn%5D%3BPr%28n%29%3Bfor%28var%20c%3Di%3Bc%2Ecircle%26%26ga%28e%2Dc%2Ecircle%2Ex%29%3CCa%26%26ga%28r%2Dc%2Ecircle%2Ecy%29%3CCa%3B%29i%3Dc%2EP%2Ca%2Eunshift%28c%29%2CPr%28c%29%2Cc%3Di%3Ba%2Eunshift%28c%29%2CXr%28c%29%3Bfor%28var%20l%3Do%3Bl%2Ecircle%26%26ga%28e%2Dl%2Ecircle%2Ex%29%3CCa%26%26ga%28r%2Dl%2Ecircle%2Ecy%29%3CCa%3B%29o%3Dl%2EN%2Ca%2Epush%28l%29%2CPr%28l%29%2Cl%3Do%3Ba%2Epush%28l%29%2CXr%28l%29%3Bvar%20s%2Cf%3Da%2Elength%3Bfor%28s%3D1%3Bf%3Es%3B%2B%2Bs%29l%3Da%5Bs%5D%2Cc%3Da%5Bs%2D1%5D%2CKr%28l%2Eedge%2Cc%2Esite%2Cl%2Esite%2Cu%29%3Bc%3Da%5B0%5D%2Cl%3Da%5Bf%2D1%5D%2Cl%2Eedge%3DJr%28c%2Esite%2Cl%2Esite%2Cnull%2Cu%29%2CVr%28c%29%2CVr%28l%29%7Dfunction%20jr%28n%29%7Bfor%28var%20t%2Ce%2Cr%2Cu%2Ci%3Dn%2Ex%2Co%3Dn%2Ey%2Ca%3DQc%2E%5F%3Ba%3B%29if%28r%3DFr%28a%2Co%29%2Di%2Cr%3ECa%29a%3Da%2EL%3Belse%7Bif%28u%3Di%2DHr%28a%2Co%29%2C%21%28u%3ECa%29%29%7Br%3E%2DCa%3F%28t%3Da%2EP%2Ce%3Da%29%3Au%3E%2DCa%3F%28t%3Da%2Ce%3Da%2EN%29%3At%3De%3Da%3Bbreak%7Dif%28%21a%2ER%29%7Bt%3Da%3Bbreak%7Da%3Da%2ER%7Dvar%20c%3DDr%28n%29%3Bif%28Qc%2Einsert%28t%2Cc%29%2Ct%7C%7Ce%29%7Bif%28t%3D%3D%3De%29return%20Xr%28t%29%2Ce%3DDr%28t%2Esite%29%2CQc%2Einsert%28c%2Ce%29%2Cc%2Eedge%3De%2Eedge%3DJr%28t%2Esite%2Cc%2Esite%29%2CVr%28t%29%2Cvoid%20Vr%28e%29%3Bif%28%21e%29return%20void%28c%2Eedge%3DJr%28t%2Esite%2Cc%2Esite%29%29%3BXr%28t%29%2CXr%28e%29%3Bvar%20l%3Dt%2Esite%2Cs%3Dl%2Ex%2Cf%3Dl%2Ey%2Ch%3Dn%2Ex%2Ds%2Cg%3Dn%2Ey%2Df%2Cp%3De%2Esite%2Cv%3Dp%2Ex%2Ds%2Cd%3Dp%2Ey%2Df%2Cm%3D2%2A%28h%2Ad%2Dg%2Av%29%2Cy%3Dh%2Ah%2Bg%2Ag%2CM%3Dv%2Av%2Bd%2Ad%2Cx%3D%7Bx%3A%28d%2Ay%2Dg%2AM%29%2Fm%2Bs%2Cy%3A%28h%2AM%2Dv%2Ay%29%2Fm%2Bf%7D%3BKr%28e%2Eedge%2Cl%2Cp%2Cx%29%2Cc%2Eedge%3DJr%28l%2Cn%2Cnull%2Cx%29%2Ce%2Eedge%3DJr%28n%2Cp%2Cnull%2Cx%29%2CVr%28t%29%2CVr%28e%29%7D%7Dfunction%20Fr%28n%2Ct%29%7Bvar%20e%3Dn%2Esite%2Cr%3De%2Ex%2Cu%3De%2Ey%2Ci%3Du%2Dt%3Bif%28%21i%29return%20r%3Bvar%20o%3Dn%2EP%3Bif%28%21o%29return%2D1%2F0%3Be%3Do%2Esite%3Bvar%20a%3De%2Ex%2Cc%3De%2Ey%2Cl%3Dc%2Dt%3Bif%28%21l%29return%20a%3Bvar%20s%3Da%2Dr%2Cf%3D1%2Fi%2D1%2Fl%2Ch%3Ds%2Fl%3Breturn%20f%3F%28%2Dh%2BMath%2Esqrt%28h%2Ah%2D2%2Af%2A%28s%2As%2F%28%2D2%2Al%29%2Dc%2Bl%2F2%2Bu%2Di%2F2%29%29%29%2Ff%2Br%3A%28r%2Ba%29%2F2%7Dfunction%20Hr%28n%2Ct%29%7Bvar%20e%3Dn%2EN%3Bif%28e%29return%20Fr%28e%2Ct%29%3Bvar%20r%3Dn%2Esite%3Breturn%20r%2Ey%3D%3D%3Dt%3Fr%2Ex%3A1%2F0%7Dfunction%20Or%28n%29%7Bthis%2Esite%3Dn%2Cthis%2Eedges%3D%5B%5D%7Dfunction%20Ir%28n%29%7Bfor%28var%20t%2Ce%2Cr%2Cu%2Ci%2Co%2Ca%2Cc%2Cl%2Cs%2Cf%3Dn%5B0%5D%5B0%5D%2Ch%3Dn%5B1%5D%5B0%5D%2Cg%3Dn%5B0%5D%5B1%5D%2Cp%3Dn%5B1%5D%5B1%5D%2Cv%3DKc%2Cd%3Dv%2Elength%3Bd%2D%2D%3B%29if%28i%3Dv%5Bd%5D%2Ci%26%26i%2Eprepare%28%29%29for%28a%3Di%2Eedges%2Cc%3Da%2Elength%2Co%3D0%3Bc%3Eo%3B%29s%3Da%5Bo%5D%2Eend%28%29%2Cr%3Ds%2Ex%2Cu%3Ds%2Ey%2Cl%3Da%5B%2B%2Bo%25c%5D%2Estart%28%29%2Ct%3Dl%2Ex%2Ce%3Dl%2Ey%2C%28ga%28r%2Dt%29%3ECa%7C%7Cga%28u%2De%29%3ECa%29%26%26%28a%2Esplice%28o%2C0%2Cnew%20Qr%28Gr%28i%2Esite%2Cs%2Cga%28r%2Df%29%3CCa%26%26p%2Du%3ECa%3F%7Bx%3Af%2Cy%3Aga%28t%2Df%29%3CCa%3Fe%3Ap%7D%3Aga%28u%2Dp%29%3CCa%26%26h%2Dr%3ECa%3F%7Bx%3Aga%28e%2Dp%29%3CCa%3Ft%3Ah%2Cy%3Ap%7D%3Aga%28r%2Dh%29%3CCa%26%26u%2Dg%3ECa%3F%7Bx%3Ah%2Cy%3Aga%28t%2Dh%29%3CCa%3Fe%3Ag%7D%3Aga%28u%2Dg%29%3CCa%26%26r%2Df%3ECa%3F%7Bx%3Aga%28e%2Dg%29%3CCa%3Ft%3Af%2Cy%3Ag%7D%3Anull%29%2Ci%2Esite%2Cnull%29%29%2C%2B%2Bc%29%7Dfunction%20Yr%28n%2Ct%29%7Breturn%20t%2Eangle%2Dn%2Eangle%7Dfunction%20Zr%28%29%7Btu%28this%29%2Cthis%2Ex%3Dthis%2Ey%3Dthis%2Earc%3Dthis%2Esite%3Dthis%2Ecy%3Dnull%7Dfunction%20Vr%28n%29%7Bvar%20t%3Dn%2EP%2Ce%3Dn%2EN%3Bif%28t%26%26e%29%7Bvar%20r%3Dt%2Esite%2Cu%3Dn%2Esite%2Ci%3De%2Esite%3Bif%28r%21%3D%3Di%29%7Bvar%20o%3Du%2Ex%2Ca%3Du%2Ey%2Cc%3Dr%2Ex%2Do%2Cl%3Dr%2Ey%2Da%2Cs%3Di%2Ex%2Do%2Cf%3Di%2Ey%2Da%2Ch%3D2%2A%28c%2Af%2Dl%2As%29%3Bif%28%21%28h%3E%3D%2Dza%29%29%7Bvar%20g%3Dc%2Ac%2Bl%2Al%2Cp%3Ds%2As%2Bf%2Af%2Cv%3D%28f%2Ag%2Dl%2Ap%29%2Fh%2Cd%3D%28c%2Ap%2Ds%2Ag%29%2Fh%2Cf%3Dd%2Ba%2Cm%3Drl%2Epop%28%29%7C%7Cnew%20Zr%3Bm%2Earc%3Dn%2Cm%2Esite%3Du%2Cm%2Ex%3Dv%2Bo%2Cm%2Ey%3Df%2BMath%2Esqrt%28v%2Av%2Bd%2Ad%29%2Cm%2Ecy%3Df%2Cn%2Ecircle%3Dm%3Bfor%28var%20y%3Dnull%2CM%3Dtl%2E%5F%3BM%3B%29if%28m%2Ey%3CM%2Ey%7C%7Cm%2Ey%3D%3D%3DM%2Ey%26%26m%2Ex%3C%3DM%2Ex%29%7Bif%28%21M%2EL%29%7By%3DM%2EP%3Bbreak%7DM%3DM%2EL%7Delse%7Bif%28%21M%2ER%29%7By%3DM%3Bbreak%7DM%3DM%2ER%7Dtl%2Einsert%28y%2Cm%29%2Cy%7C%7C%28nl%3Dm%29%7D%7D%7D%7Dfunction%20Xr%28n%29%7Bvar%20t%3Dn%2Ecircle%3Bt%26%26%28t%2EP%7C%7C%28nl%3Dt%2EN%29%2Ctl%2Eremove%28t%29%2Crl%2Epush%28t%29%2Ctu%28t%29%2Cn%2Ecircle%3Dnull%29%7Dfunction%20%24r%28n%29%7Bfor%28var%20t%2Ce%3DGc%2Cr%3DOe%28n%5B0%5D%5B0%5D%2Cn%5B0%5D%5B1%5D%2Cn%5B1%5D%5B0%5D%2Cn%5B1%5D%5B1%5D%29%2Cu%3De%2Elength%3Bu%2D%2D%3B%29t%3De%5Bu%5D%2C%28%21Br%28t%2Cn%29%7C%7C%21r%28t%29%7C%7Cga%28t%2Ea%2Ex%2Dt%2Eb%2Ex%29%3CCa%26%26ga%28t%2Ea%2Ey%2Dt%2Eb%2Ey%29%3CCa%29%26%26%28t%2Ea%3Dt%2Eb%3Dnull%2Ce%2Esplice%28u%2C1%29%29%7Dfunction%20Br%28n%2Ct%29%7Bvar%20e%3Dn%2Eb%3Bif%28e%29return%210%3Bvar%20r%2Cu%2Ci%3Dn%2Ea%2Co%3Dt%5B0%5D%5B0%5D%2Ca%3Dt%5B1%5D%5B0%5D%2Cc%3Dt%5B0%5D%5B1%5D%2Cl%3Dt%5B1%5D%5B1%5D%2Cs%3Dn%2El%2Cf%3Dn%2Er%2Ch%3Ds%2Ex%2Cg%3Ds%2Ey%2Cp%3Df%2Ex%2Cv%3Df%2Ey%2Cd%3D%28h%2Bp%29%2F2%2Cm%3D%28g%2Bv%29%2F2%3Bif%28v%3D%3D%3Dg%29%7Bif%28o%3Ed%7C%7Cd%3E%3Da%29return%3Bif%28h%3Ep%29%7Bif%28i%29%7Bif%28i%2Ey%3E%3Dl%29return%7Delse%20i%3D%7Bx%3Ad%2Cy%3Ac%7D%3Be%3D%7Bx%3Ad%2Cy%3Al%7D%7Delse%7Bif%28i%29%7Bif%28i%2Ey%3Cc%29return%7Delse%20i%3D%7Bx%3Ad%2Cy%3Al%7D%3Be%3D%7Bx%3Ad%2Cy%3Ac%7D%7D%7Delse%20if%28r%3D%28h%2Dp%29%2F%28v%2Dg%29%2Cu%3Dm%2Dr%2Ad%2C%2D1%3Er%7C%7Cr%3E1%29if%28h%3Ep%29%7Bif%28i%29%7Bif%28i%2Ey%3E%3Dl%29return%7Delse%20i%3D%7Bx%3A%28c%2Du%29%2Fr%2Cy%3Ac%7D%3Be%3D%7Bx%3A%28l%2Du%29%2Fr%2Cy%3Al%7D%7Delse%7Bif%28i%29%7Bif%28i%2Ey%3Cc%29return%7Delse%20i%3D%7Bx%3A%28l%2Du%29%2Fr%2Cy%3Al%7D%3Be%3D%7Bx%3A%28c%2Du%29%2Fr%2Cy%3Ac%7D%7Delse%20if%28v%3Eg%29%7Bif%28i%29%7Bif%28i%2Ex%3E%3Da%29return%7Delse%20i%3D%7Bx%3Ao%2Cy%3Ar%2Ao%2Bu%7D%3Be%3D%7Bx%3Aa%2Cy%3Ar%2Aa%2Bu%7D%7Delse%7Bif%28i%29%7Bif%28i%2Ex%3Co%29return%7Delse%20i%3D%7Bx%3Aa%2Cy%3Ar%2Aa%2Bu%7D%3Be%3D%7Bx%3Ao%2Cy%3Ar%2Ao%2Bu%7D%7Dreturn%20n%2Ea%3Di%2Cn%2Eb%3De%2C%210%7Dfunction%20Wr%28n%2Ct%29%7Bthis%2El%3Dn%2Cthis%2Er%3Dt%2Cthis%2Ea%3Dthis%2Eb%3Dnull%7Dfunction%20Jr%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3Dnew%20Wr%28n%2Ct%29%3Breturn%20Gc%2Epush%28u%29%2Ce%26%26Kr%28u%2Cn%2Ct%2Ce%29%2Cr%26%26Kr%28u%2Ct%2Cn%2Cr%29%2CKc%5Bn%2Ei%5D%2Eedges%2Epush%28new%20Qr%28u%2Cn%2Ct%29%29%2CKc%5Bt%2Ei%5D%2Eedges%2Epush%28new%20Qr%28u%2Ct%2Cn%29%29%2Cu%7Dfunction%20Gr%28n%2Ct%2Ce%29%7Bvar%20r%3Dnew%20Wr%28n%2Cnull%29%3Breturn%20r%2Ea%3Dt%2Cr%2Eb%3De%2CGc%2Epush%28r%29%2Cr%7Dfunction%20Kr%28n%2Ct%2Ce%2Cr%29%7Bn%2Ea%7C%7Cn%2Eb%3Fn%2El%3D%3D%3De%3Fn%2Eb%3Dr%3An%2Ea%3Dr%3A%28n%2Ea%3Dr%2Cn%2El%3Dt%2Cn%2Er%3De%29%7Dfunction%20Qr%28n%2Ct%2Ce%29%7Bvar%20r%3Dn%2Ea%2Cu%3Dn%2Eb%3Bthis%2Eedge%3Dn%2Cthis%2Esite%3Dt%2Cthis%2Eangle%3De%3FMath%2Eatan2%28e%2Ey%2Dt%2Ey%2Ce%2Ex%2Dt%2Ex%29%3An%2El%3D%3D%3Dt%3FMath%2Eatan2%28u%2Ex%2Dr%2Ex%2Cr%2Ey%2Du%2Ey%29%3AMath%2Eatan2%28r%2Ex%2Du%2Ex%2Cu%2Ey%2Dr%2Ey%29%7Dfunction%20nu%28%29%7Bthis%2E%5F%3Dnull%7Dfunction%20tu%28n%29%7Bn%2EU%3Dn%2EC%3Dn%2EL%3Dn%2ER%3Dn%2EP%3Dn%2EN%3Dnull%7Dfunction%20eu%28n%2Ct%29%7Bvar%20e%3Dt%2Cr%3Dt%2ER%2Cu%3De%2EU%3Bu%3Fu%2EL%3D%3D%3De%3Fu%2EL%3Dr%3Au%2ER%3Dr%3An%2E%5F%3Dr%2Cr%2EU%3Du%2Ce%2EU%3Dr%2Ce%2ER%3Dr%2EL%2Ce%2ER%26%26%28e%2ER%2EU%3De%29%2Cr%2EL%3De%7Dfunction%20ru%28n%2Ct%29%7Bvar%20e%3Dt%2Cr%3Dt%2EL%2Cu%3De%2EU%3Bu%3Fu%2EL%3D%3D%3De%3Fu%2EL%3Dr%3Au%2ER%3Dr%3An%2E%5F%3Dr%2Cr%2EU%3Du%2Ce%2EU%3Dr%2Ce%2EL%3Dr%2ER%2Ce%2EL%26%26%28e%2EL%2EU%3De%29%2Cr%2ER%3De%7Dfunction%20uu%28n%29%7Bfor%28%3Bn%2EL%3B%29n%3Dn%2EL%3Breturn%20n%7Dfunction%20iu%28n%2Ct%29%7Bvar%20e%2Cr%2Cu%2Ci%3Dn%2Esort%28ou%29%2Epop%28%29%3Bfor%28Gc%3D%5B%5D%2CKc%3Dnew%20Array%28n%2Elength%29%2CQc%3Dnew%20nu%2Ctl%3Dnew%20nu%3B%3B%29if%28u%3Dnl%2Ci%26%26%28%21u%7C%7Ci%2Ey%3Cu%2Ey%7C%7Ci%2Ey%3D%3D%3Du%2Ey%26%26i%2Ex%3Cu%2Ex%29%29%28i%2Ex%21%3D%3De%7C%7Ci%2Ey%21%3D%3Dr%29%26%26%28Kc%5Bi%2Ei%5D%3Dnew%20Or%28i%29%2Cjr%28i%29%2Ce%3Di%2Ex%2Cr%3Di%2Ey%29%2Ci%3Dn%2Epop%28%29%3Belse%7Bif%28%21u%29break%3BUr%28u%2Earc%29%7Dt%26%26%28%24r%28t%29%2CIr%28t%29%29%3Bvar%20o%3D%7Bcells%3AKc%2Cedges%3AGc%7D%3Breturn%20Qc%3Dtl%3DGc%3DKc%3Dnull%2Co%7Dfunction%20ou%28n%2Ct%29%7Breturn%20t%2Ey%2Dn%2Ey%7C%7Ct%2Ex%2Dn%2Ex%7Dfunction%20au%28n%2Ct%2Ce%29%7Breturn%28n%2Ex%2De%2Ex%29%2A%28t%2Ey%2Dn%2Ey%29%2D%28n%2Ex%2Dt%2Ex%29%2A%28e%2Ey%2Dn%2Ey%29%7Dfunction%20cu%28n%29%7Breturn%20n%2Ex%7Dfunction%20lu%28n%29%7Breturn%20n%2Ey%7Dfunction%20su%28%29%7Breturn%7Bleaf%3A%210%2Cnodes%3A%5B%5D%2Cpoint%3Anull%2Cx%3Anull%2Cy%3Anull%7D%7Dfunction%20fu%28n%2Ct%2Ce%2Cr%2Cu%2Ci%29%7Bif%28%21n%28t%2Ce%2Cr%2Cu%2Ci%29%29%7Bvar%20o%3D%2E5%2A%28e%2Bu%29%2Ca%3D%2E5%2A%28r%2Bi%29%2Cc%3Dt%2Enodes%3Bc%5B0%5D%26%26fu%28n%2Cc%5B0%5D%2Ce%2Cr%2Co%2Ca%29%2Cc%5B1%5D%26%26fu%28n%2Cc%5B1%5D%2Co%2Cr%2Cu%2Ca%29%2Cc%5B2%5D%26%26fu%28n%2Cc%5B2%5D%2Ce%2Ca%2Co%2Ci%29%2Cc%5B3%5D%26%26fu%28n%2Cc%5B3%5D%2Co%2Ca%2Cu%2Ci%29%7D%7Dfunction%20hu%28n%2Ct%2Ce%2Cr%2Cu%2Ci%2Co%29%7Bvar%20a%2Cc%3D1%2F0%3Breturn%20function%20l%28n%2Cs%2Cf%2Ch%2Cg%29%7Bif%28%21%28s%3Ei%7C%7Cf%3Eo%7C%7Cr%3Eh%7C%7Cu%3Eg%29%29%7Bif%28p%3Dn%2Epoint%29%7Bvar%20p%2Cv%3Dt%2Dn%2Ex%2Cd%3De%2Dn%2Ey%2Cm%3Dv%2Av%2Bd%2Ad%3Bif%28c%3Em%29%7Bvar%20y%3DMath%2Esqrt%28c%3Dm%29%3Br%3Dt%2Dy%2Cu%3De%2Dy%2Ci%3Dt%2By%2Co%3De%2By%2Ca%3Dp%7D%7Dfor%28var%20M%3Dn%2Enodes%2Cx%3D%2E5%2A%28s%2Bh%29%2Cb%3D%2E5%2A%28f%2Bg%29%2C%5F%3Dt%3E%3Dx%2Cw%3De%3E%3Db%2CS%3Dw%3C%3C1%7C%5F%2Ck%3DS%2B4%3Bk%3ES%3B%2B%2BS%29if%28n%3DM%5B3%26S%5D%29switch%283%26S%29%7Bcase%200%3Al%28n%2Cs%2Cf%2Cx%2Cb%29%3Bbreak%3Bcase%201%3Al%28n%2Cx%2Cf%2Ch%2Cb%29%3Bbreak%3Bcase%202%3Al%28n%2Cs%2Cb%2Cx%2Cg%29%3Bbreak%3Bcase%203%3Al%28n%2Cx%2Cb%2Ch%2Cg%29%7D%7D%7D%28n%2Cr%2Cu%2Ci%2Co%29%2Ca%7Dfunction%20gu%28n%2Ct%29%7Bn%3Dta%2Ergb%28n%29%2Ct%3Dta%2Ergb%28t%29%3Bvar%20e%3Dn%2Er%2Cr%3Dn%2Eg%2Cu%3Dn%2Eb%2Ci%3Dt%2Er%2De%2Co%3Dt%2Eg%2Dr%2Ca%3Dt%2Eb%2Du%3Breturn%20function%28n%29%7Breturn%22%23%22%2Bxt%28Math%2Eround%28e%2Bi%2An%29%29%2Bxt%28Math%2Eround%28r%2Bo%2An%29%29%2Bxt%28Math%2Eround%28u%2Ba%2An%29%29%7D%7Dfunction%20pu%28n%2Ct%29%7Bvar%20e%2Cr%3D%7B%7D%2Cu%3D%7B%7D%3Bfor%28e%20in%20n%29e%20in%20t%3Fr%5Be%5D%3Dmu%28n%5Be%5D%2Ct%5Be%5D%29%3Au%5Be%5D%3Dn%5Be%5D%3Bfor%28e%20in%20t%29e%20in%20n%7C%7C%28u%5Be%5D%3Dt%5Be%5D%29%3Breturn%20function%28n%29%7Bfor%28e%20in%20r%29u%5Be%5D%3Dr%5Be%5D%28n%29%3Breturn%20u%7D%7Dfunction%20vu%28n%2Ct%29%7Breturn%20n%3D%2Bn%2Ct%3D%2Bt%2Cfunction%28e%29%7Breturn%20n%2A%281%2De%29%2Bt%2Ae%7D%7Dfunction%20du%28n%2Ct%29%7Bvar%20e%2Cr%2Cu%2Ci%3Dil%2ElastIndex%3Dol%2ElastIndex%3D0%2Co%3D%2D1%2Ca%3D%5B%5D%2Cc%3D%5B%5D%3Bfor%28n%2B%3D%22%22%2Ct%2B%3D%22%22%3B%28e%3Dil%2Eexec%28n%29%29%26%26%28r%3Dol%2Eexec%28t%29%29%3B%29%28u%3Dr%2Eindex%29%3Ei%26%26%28u%3Dt%2Eslice%28i%2Cu%29%2Ca%5Bo%5D%3Fa%5Bo%5D%2B%3Du%3Aa%5B%2B%2Bo%5D%3Du%29%2C%28e%3De%5B0%5D%29%3D%3D%3D%28r%3Dr%5B0%5D%29%3Fa%5Bo%5D%3Fa%5Bo%5D%2B%3Dr%3Aa%5B%2B%2Bo%5D%3Dr%3A%28a%5B%2B%2Bo%5D%3Dnull%2Cc%2Epush%28%7Bi%3Ao%2Cx%3Avu%28e%2Cr%29%7D%29%29%2Ci%3Dol%2ElastIndex%3Breturn%20i%3Ct%2Elength%26%26%28u%3Dt%2Eslice%28i%29%2Ca%5Bo%5D%3Fa%5Bo%5D%2B%3Du%3Aa%5B%2B%2Bo%5D%3Du%29%2Ca%2Elength%3C2%3Fc%5B0%5D%3F%28t%3Dc%5B0%5D%2Ex%2Cfunction%28n%29%7Breturn%20t%28n%29%2B%22%22%7D%29%3Afunction%28%29%7Breturn%20t%7D%3A%28t%3Dc%2Elength%2Cfunction%28n%29%7Bfor%28var%20e%2Cr%3D0%3Bt%3Er%3B%2B%2Br%29a%5B%28e%3Dc%5Br%5D%29%2Ei%5D%3De%2Ex%28n%29%3Breturn%20a%2Ejoin%28%22%22%29%7D%29%7Dfunction%20mu%28n%2Ct%29%7Bfor%28var%20e%2Cr%3Dta%2Einterpolators%2Elength%3B%2D%2Dr%3E%3D0%26%26%21%28e%3Dta%2Einterpolators%5Br%5D%28n%2Ct%29%29%3B%29%3Breturn%20e%7Dfunction%20yu%28n%2Ct%29%7Bvar%20e%2Cr%3D%5B%5D%2Cu%3D%5B%5D%2Ci%3Dn%2Elength%2Co%3Dt%2Elength%2Ca%3DMath%2Emin%28n%2Elength%2Ct%2Elength%29%3Bfor%28e%3D0%3Ba%3Ee%3B%2B%2Be%29r%2Epush%28mu%28n%5Be%5D%2Ct%5Be%5D%29%29%3Bfor%28%3Bi%3Ee%3B%2B%2Be%29u%5Be%5D%3Dn%5Be%5D%3Bfor%28%3Bo%3Ee%3B%2B%2Be%29u%5Be%5D%3Dt%5Be%5D%3Breturn%20function%28n%29%7Bfor%28e%3D0%3Ba%3Ee%3B%2B%2Be%29u%5Be%5D%3Dr%5Be%5D%28n%29%3Breturn%20u%7D%7Dfunction%20Mu%28n%29%7Breturn%20function%28t%29%7Breturn%200%3E%3Dt%3F0%3At%3E%3D1%3F1%3An%28t%29%7D%7Dfunction%20xu%28n%29%7Breturn%20function%28t%29%7Breturn%201%2Dn%281%2Dt%29%7D%7Dfunction%20bu%28n%29%7Breturn%20function%28t%29%7Breturn%2E5%2A%28%2E5%3Et%3Fn%282%2At%29%3A2%2Dn%282%2D2%2At%29%29%7D%7Dfunction%20%5Fu%28n%29%7Breturn%20n%2An%7Dfunction%20wu%28n%29%7Breturn%20n%2An%2An%7Dfunction%20Su%28n%29%7Bif%280%3E%3Dn%29return%200%3Bif%28n%3E%3D1%29return%201%3Bvar%20t%3Dn%2An%2Ce%3Dt%2An%3Breturn%204%2A%28%2E5%3En%3Fe%3A3%2A%28n%2Dt%29%2Be%2D%2E75%29%7Dfunction%20ku%28n%29%7Breturn%20function%28t%29%7Breturn%20Math%2Epow%28t%2Cn%29%7D%7Dfunction%20Eu%28n%29%7Breturn%201%2DMath%2Ecos%28n%2ARa%29%7Dfunction%20Au%28n%29%7Breturn%20Math%2Epow%282%2C10%2A%28n%2D1%29%29%7Dfunction%20Nu%28n%29%7Breturn%201%2DMath%2Esqrt%281%2Dn%2An%29%7Dfunction%20Cu%28n%2Ct%29%7Bvar%20e%3Breturn%20arguments%2Elength%3C2%26%26%28t%3D%2E45%29%2Carguments%2Elength%3Fe%3Dt%2FLa%2AMath%2Easin%281%2Fn%29%3A%28n%3D1%2Ce%3Dt%2F4%29%2Cfunction%28r%29%7Breturn%201%2Bn%2AMath%2Epow%282%2C%2D10%2Ar%29%2AMath%2Esin%28%28r%2De%29%2ALa%2Ft%29%7D%7Dfunction%20zu%28n%29%7Breturn%20n%7C%7C%28n%3D1%2E70158%29%2Cfunction%28t%29%7Breturn%20t%2At%2A%28%28n%2B1%29%2At%2Dn%29%7D%7Dfunction%20qu%28n%29%7Breturn%201%2F2%2E75%3En%3F7%2E5625%2An%2An%3A2%2F2%2E75%3En%3F7%2E5625%2A%28n%2D%3D1%2E5%2F2%2E75%29%2An%2B%2E75%3A2%2E5%2F2%2E75%3En%3F7%2E5625%2A%28n%2D%3D2%2E25%2F2%2E75%29%2An%2B%2E9375%3A7%2E5625%2A%28n%2D%3D2%2E625%2F2%2E75%29%2An%2B%2E984375%7Dfunction%20Lu%28n%2Ct%29%7Bn%3Dta%2Ehcl%28n%29%2Ct%3Dta%2Ehcl%28t%29%3Bvar%20e%3Dn%2Eh%2Cr%3Dn%2Ec%2Cu%3Dn%2El%2Ci%3Dt%2Eh%2De%2Co%3Dt%2Ec%2Dr%2Ca%3Dt%2El%2Du%3Breturn%20isNaN%28o%29%26%26%28o%3D0%2Cr%3DisNaN%28r%29%3Ft%2Ec%3Ar%29%2CisNaN%28i%29%3F%28i%3D0%2Ce%3DisNaN%28e%29%3Ft%2Eh%3Ae%29%3Ai%3E180%3Fi%2D%3D360%3A%2D180%3Ei%26%26%28i%2B%3D360%29%2Cfunction%28n%29%7Breturn%20st%28e%2Bi%2An%2Cr%2Bo%2An%2Cu%2Ba%2An%29%2B%22%22%7D%7Dfunction%20Tu%28n%2Ct%29%7Bn%3Dta%2Ehsl%28n%29%2Ct%3Dta%2Ehsl%28t%29%3Bvar%20e%3Dn%2Eh%2Cr%3Dn%2Es%2Cu%3Dn%2El%2Ci%3Dt%2Eh%2De%2Co%3Dt%2Es%2Dr%2Ca%3Dt%2El%2Du%3Breturn%20isNaN%28o%29%26%26%28o%3D0%2Cr%3DisNaN%28r%29%3Ft%2Es%3Ar%29%2CisNaN%28i%29%3F%28i%3D0%2Ce%3DisNaN%28e%29%3Ft%2Eh%3Ae%29%3Ai%3E180%3Fi%2D%3D360%3A%2D180%3Ei%26%26%28i%2B%3D360%29%2Cfunction%28n%29%7Breturn%20ct%28e%2Bi%2An%2Cr%2Bo%2An%2Cu%2Ba%2An%29%2B%22%22%7D%7Dfunction%20Ru%28n%2Ct%29%7Bn%3Dta%2Elab%28n%29%2Ct%3Dta%2Elab%28t%29%3Bvar%20e%3Dn%2El%2Cr%3Dn%2Ea%2Cu%3Dn%2Eb%2Ci%3Dt%2El%2De%2Co%3Dt%2Ea%2Dr%2Ca%3Dt%2Eb%2Du%3Breturn%20function%28n%29%7Breturn%20ht%28e%2Bi%2An%2Cr%2Bo%2An%2Cu%2Ba%2An%29%2B%22%22%7D%7Dfunction%20Du%28n%2Ct%29%7Breturn%20t%2D%3Dn%2Cfunction%28e%29%7Breturn%20Math%2Eround%28n%2Bt%2Ae%29%7D%7Dfunction%20Pu%28n%29%7Bvar%20t%3D%5Bn%2Ea%2Cn%2Eb%5D%2Ce%3D%5Bn%2Ec%2Cn%2Ed%5D%2Cr%3Dju%28t%29%2Cu%3DUu%28t%2Ce%29%2Ci%3Dju%28Fu%28e%2Ct%2C%2Du%29%29%7C%7C0%3Bt%5B0%5D%2Ae%5B1%5D%3Ce%5B0%5D%2At%5B1%5D%26%26%28t%5B0%5D%2A%3D%2D1%2Ct%5B1%5D%2A%3D%2D1%2Cr%2A%3D%2D1%2Cu%2A%3D%2D1%29%2Cthis%2Erotate%3D%28r%3FMath%2Eatan2%28t%5B1%5D%2Ct%5B0%5D%29%3AMath%2Eatan2%28%2De%5B0%5D%2Ce%5B1%5D%29%29%2APa%2Cthis%2Etranslate%3D%5Bn%2Ee%2Cn%2Ef%5D%2Cthis%2Escale%3D%5Br%2Ci%5D%2Cthis%2Eskew%3Di%3FMath%2Eatan2%28u%2Ci%29%2APa%3A0%7Dfunction%20Uu%28n%2Ct%29%7Breturn%20n%5B0%5D%2At%5B0%5D%2Bn%5B1%5D%2At%5B1%5D%7Dfunction%20ju%28n%29%7Bvar%20t%3DMath%2Esqrt%28Uu%28n%2Cn%29%29%3Breturn%20t%26%26%28n%5B0%5D%2F%3Dt%2Cn%5B1%5D%2F%3Dt%29%2Ct%7Dfunction%20Fu%28n%2Ct%2Ce%29%7Breturn%20n%5B0%5D%2B%3De%2At%5B0%5D%2Cn%5B1%5D%2B%3De%2At%5B1%5D%2Cn%7Dfunction%20Hu%28n%2Ct%29%7Bvar%20e%2Cr%3D%5B%5D%2Cu%3D%5B%5D%2Ci%3Dta%2Etransform%28n%29%2Co%3Dta%2Etransform%28t%29%2Ca%3Di%2Etranslate%2Cc%3Do%2Etranslate%2Cl%3Di%2Erotate%2Cs%3Do%2Erotate%2Cf%3Di%2Eskew%2Ch%3Do%2Eskew%2Cg%3Di%2Escale%2Cp%3Do%2Escale%3Breturn%20a%5B0%5D%21%3Dc%5B0%5D%7C%7Ca%5B1%5D%21%3Dc%5B1%5D%3F%28r%2Epush%28%22translate%28%22%2Cnull%2C%22%2C%22%2Cnull%2C%22%29%22%29%2Cu%2Epush%28%7Bi%3A1%2Cx%3Avu%28a%5B0%5D%2Cc%5B0%5D%29%7D%2C%7Bi%3A3%2Cx%3Avu%28a%5B1%5D%2Cc%5B1%5D%29%7D%29%29%3Ar%2Epush%28c%5B0%5D%7C%7Cc%5B1%5D%3F%22translate%28%22%2Bc%2B%22%29%22%3A%22%22%29%2Cl%21%3Ds%3F%28l%2Ds%3E180%3Fs%2B%3D360%3As%2Dl%3E180%26%26%28l%2B%3D360%29%2Cu%2Epush%28%7Bi%3Ar%2Epush%28r%2Epop%28%29%2B%22rotate%28%22%2Cnull%2C%22%29%22%29%2D2%2Cx%3Avu%28l%2Cs%29%7D%29%29%3As%26%26r%2Epush%28r%2Epop%28%29%2B%22rotate%28%22%2Bs%2B%22%29%22%29%2Cf%21%3Dh%3Fu%2Epush%28%7Bi%3Ar%2Epush%28r%2Epop%28%29%2B%22skewX%28%22%2Cnull%2C%22%29%22%29%2D2%2Cx%3Avu%28f%2Ch%29%7D%29%3Ah%26%26r%2Epush%28r%2Epop%28%29%2B%22skewX%28%22%2Bh%2B%22%29%22%29%2Cg%5B0%5D%21%3Dp%5B0%5D%7C%7Cg%5B1%5D%21%3Dp%5B1%5D%3F%28e%3Dr%2Epush%28r%2Epop%28%29%2B%22scale%28%22%2Cnull%2C%22%2C%22%2Cnull%2C%22%29%22%29%2Cu%2Epush%28%7Bi%3Ae%2D4%2Cx%3Avu%28g%5B0%5D%2Cp%5B0%5D%29%7D%2C%7Bi%3Ae%2D2%2Cx%3Avu%28g%5B1%5D%2Cp%5B1%5D%29%7D%29%29%3A%281%21%3Dp%5B0%5D%7C%7C1%21%3Dp%5B1%5D%29%26%26r%2Epush%28r%2Epop%28%29%2B%22scale%28%22%2Bp%2B%22%29%22%29%2Ce%3Du%2Elength%2Cfunction%28n%29%7Bfor%28var%20t%2Ci%3D%2D1%3B%2B%2Bi%3Ce%3B%29r%5B%28t%3Du%5Bi%5D%29%2Ei%5D%3Dt%2Ex%28n%29%3Breturn%20r%2Ejoin%28%22%22%29%7D%7Dfunction%20Ou%28n%2Ct%29%7Breturn%20t%3D%28t%2D%3Dn%3D%2Bn%29%7C%7C1%2Ft%2Cfunction%28e%29%7Breturn%28e%2Dn%29%2Ft%7D%7Dfunction%20Iu%28n%2Ct%29%7Breturn%20t%3D%28t%2D%3Dn%3D%2Bn%29%7C%7C1%2Ft%2Cfunction%28e%29%7Breturn%20Math%2Emax%280%2CMath%2Emin%281%2C%28e%2Dn%29%2Ft%29%29%7D%7Dfunction%20Yu%28n%29%7Bfor%28var%20t%3Dn%2Esource%2Ce%3Dn%2Etarget%2Cr%3DVu%28t%2Ce%29%2Cu%3D%5Bt%5D%3Bt%21%3D%3Dr%3B%29t%3Dt%2Eparent%2Cu%2Epush%28t%29%3Bfor%28var%20i%3Du%2Elength%3Be%21%3D%3Dr%3B%29u%2Esplice%28i%2C0%2Ce%29%2Ce%3De%2Eparent%3Breturn%20u%7Dfunction%20Zu%28n%29%7Bfor%28var%20t%3D%5B%5D%2Ce%3Dn%2Eparent%3Bnull%21%3De%3B%29t%2Epush%28n%29%2Cn%3De%2Ce%3De%2Eparent%3Breturn%20t%2Epush%28n%29%2Ct%7Dfunction%20Vu%28n%2Ct%29%7Bif%28n%3D%3D%3Dt%29return%20n%3Bfor%28var%20e%3DZu%28n%29%2Cr%3DZu%28t%29%2Cu%3De%2Epop%28%29%2Ci%3Dr%2Epop%28%29%2Co%3Dnull%3Bu%3D%3D%3Di%3B%29o%3Du%2Cu%3De%2Epop%28%29%2Ci%3Dr%2Epop%28%29%3Breturn%20o%7Dfunction%20Xu%28n%29%7Bn%2Efixed%7C%3D2%7Dfunction%20%24u%28n%29%7Bn%2Efixed%26%3D%2D7%7Dfunction%20Bu%28n%29%7Bn%2Efixed%7C%3D4%2Cn%2Epx%3Dn%2Ex%2Cn%2Epy%3Dn%2Ey%7Dfunction%20Wu%28n%29%7Bn%2Efixed%26%3D%2D5%7Dfunction%20Ju%28n%2Ct%2Ce%29%7Bvar%20r%3D0%2Cu%3D0%3Bif%28n%2Echarge%3D0%2C%21n%2Eleaf%29for%28var%20i%2Co%3Dn%2Enodes%2Ca%3Do%2Elength%2Cc%3D%2D1%3B%2B%2Bc%3Ca%3B%29i%3Do%5Bc%5D%2Cnull%21%3Di%26%26%28Ju%28i%2Ct%2Ce%29%2Cn%2Echarge%2B%3Di%2Echarge%2Cr%2B%3Di%2Echarge%2Ai%2Ecx%2Cu%2B%3Di%2Echarge%2Ai%2Ecy%29%3Bif%28n%2Epoint%29%7Bn%2Eleaf%7C%7C%28n%2Epoint%2Ex%2B%3DMath%2Erandom%28%29%2D%2E5%2Cn%2Epoint%2Ey%2B%3DMath%2Erandom%28%29%2D%2E5%29%3Bvar%20l%3Dt%2Ae%5Bn%2Epoint%2Eindex%5D%3Bn%2Echarge%2B%3Dn%2EpointCharge%3Dl%2Cr%2B%3Dl%2An%2Epoint%2Ex%2Cu%2B%3Dl%2An%2Epoint%2Ey%7Dn%2Ecx%3Dr%2Fn%2Echarge%2Cn%2Ecy%3Du%2Fn%2Echarge%7Dfunction%20Gu%28n%2Ct%29%7Breturn%20ta%2Erebind%28n%2Ct%2C%22sort%22%2C%22children%22%2C%22value%22%29%2Cn%2Enodes%3Dn%2Cn%2Elinks%3Dri%2Cn%7Dfunction%20Ku%28n%2Ct%29%7Bfor%28var%20e%3D%5Bn%5D%3Bnull%21%3D%28n%3De%2Epop%28%29%29%3B%29if%28t%28n%29%2C%28u%3Dn%2Echildren%29%26%26%28r%3Du%2Elength%29%29for%28var%20r%2Cu%3B%2D%2Dr%3E%3D0%3B%29e%2Epush%28u%5Br%5D%29%7Dfunction%20Qu%28n%2Ct%29%7Bfor%28var%20e%3D%5Bn%5D%2Cr%3D%5B%5D%3Bnull%21%3D%28n%3De%2Epop%28%29%29%3B%29if%28r%2Epush%28n%29%2C%28i%3Dn%2Echildren%29%26%26%28u%3Di%2Elength%29%29for%28var%20u%2Ci%2Co%3D%2D1%3B%2B%2Bo%3Cu%3B%29e%2Epush%28i%5Bo%5D%29%3Bfor%28%3Bnull%21%3D%28n%3Dr%2Epop%28%29%29%3B%29t%28n%29%7Dfunction%20ni%28n%29%7Breturn%20n%2Echildren%7Dfunction%20ti%28n%29%7Breturn%20n%2Evalue%7Dfunction%20ei%28n%2Ct%29%7Breturn%20t%2Evalue%2Dn%2Evalue%7Dfunction%20ri%28n%29%7Breturn%20ta%2Emerge%28n%2Emap%28function%28n%29%7Breturn%28n%2Echildren%7C%7C%5B%5D%29%2Emap%28function%28t%29%7Breturn%7Bsource%3An%2Ctarget%3At%7D%7D%29%7D%29%29%7Dfunction%20ui%28n%29%7Breturn%20n%2Ex%7Dfunction%20ii%28n%29%7Breturn%20n%2Ey%7Dfunction%20oi%28n%2Ct%2Ce%29%7Bn%2Ey0%3Dt%2Cn%2Ey%3De%7Dfunction%20ai%28n%29%7Breturn%20ta%2Erange%28n%2Elength%29%7Dfunction%20ci%28n%29%7Bfor%28var%20t%3D%2D1%2Ce%3Dn%5B0%5D%2Elength%2Cr%3D%5B%5D%3B%2B%2Bt%3Ce%3B%29r%5Bt%5D%3D0%3Breturn%20r%7Dfunction%20li%28n%29%7Bfor%28var%20t%2Ce%3D1%2Cr%3D0%2Cu%3Dn%5B0%5D%5B1%5D%2Ci%3Dn%2Elength%3Bi%3Ee%3B%2B%2Be%29%28t%3Dn%5Be%5D%5B1%5D%29%3Eu%26%26%28r%3De%2Cu%3Dt%29%3Breturn%20r%7Dfunction%20si%28n%29%7Breturn%20n%2Ereduce%28fi%2C0%29%7Dfunction%20fi%28n%2Ct%29%7Breturn%20n%2Bt%5B1%5D%7Dfunction%20hi%28n%2Ct%29%7Breturn%20gi%28n%2CMath%2Eceil%28Math%2Elog%28t%2Elength%29%2FMath%2ELN2%2B1%29%29%7Dfunction%20gi%28n%2Ct%29%7Bfor%28var%20e%3D%2D1%2Cr%3D%2Bn%5B0%5D%2Cu%3D%28n%5B1%5D%2Dr%29%2Ft%2Ci%3D%5B%5D%3B%2B%2Be%3C%3Dt%3B%29i%5Be%5D%3Du%2Ae%2Br%3Breturn%20i%7Dfunction%20pi%28n%29%7Breturn%5Bta%2Emin%28n%29%2Cta%2Emax%28n%29%5D%7Dfunction%20vi%28n%2Ct%29%7Breturn%20n%2Evalue%2Dt%2Evalue%7Dfunction%20di%28n%2Ct%29%7Bvar%20e%3Dn%2E%5Fpack%5Fnext%3Bn%2E%5Fpack%5Fnext%3Dt%2Ct%2E%5Fpack%5Fprev%3Dn%2Ct%2E%5Fpack%5Fnext%3De%2Ce%2E%5Fpack%5Fprev%3Dt%7Dfunction%20mi%28n%2Ct%29%7Bn%2E%5Fpack%5Fnext%3Dt%2Ct%2E%5Fpack%5Fprev%3Dn%7Dfunction%20yi%28n%2Ct%29%7Bvar%20e%3Dt%2Ex%2Dn%2Ex%2Cr%3Dt%2Ey%2Dn%2Ey%2Cu%3Dn%2Er%2Bt%2Er%3Breturn%2E999%2Au%2Au%3Ee%2Ae%2Br%2Ar%7Dfunction%20Mi%28n%29%7Bfunction%20t%28n%29%7Bs%3DMath%2Emin%28n%2Ex%2Dn%2Er%2Cs%29%2Cf%3DMath%2Emax%28n%2Ex%2Bn%2Er%2Cf%29%2Ch%3DMath%2Emin%28n%2Ey%2Dn%2Er%2Ch%29%2Cg%3DMath%2Emax%28n%2Ey%2Bn%2Er%2Cg%29%7Dif%28%28e%3Dn%2Echildren%29%26%26%28l%3De%2Elength%29%29%7Bvar%20e%2Cr%2Cu%2Ci%2Co%2Ca%2Cc%2Cl%2Cs%3D1%2F0%2Cf%3D%2D1%2F0%2Ch%3D1%2F0%2Cg%3D%2D1%2F0%3Bif%28e%2EforEach%28xi%29%2Cr%3De%5B0%5D%2Cr%2Ex%3D%2Dr%2Er%2Cr%2Ey%3D0%2Ct%28r%29%2Cl%3E1%26%26%28u%3De%5B1%5D%2Cu%2Ex%3Du%2Er%2Cu%2Ey%3D0%2Ct%28u%29%2Cl%3E2%29%29for%28i%3De%5B2%5D%2Cwi%28r%2Cu%2Ci%29%2Ct%28i%29%2Cdi%28r%2Ci%29%2Cr%2E%5Fpack%5Fprev%3Di%2Cdi%28i%2Cu%29%2Cu%3Dr%2E%5Fpack%5Fnext%2Co%3D3%3Bl%3Eo%3Bo%2B%2B%29%7Bwi%28r%2Cu%2Ci%3De%5Bo%5D%29%3Bvar%20p%3D0%2Cv%3D1%2Cd%3D1%3Bfor%28a%3Du%2E%5Fpack%5Fnext%3Ba%21%3D%3Du%3Ba%3Da%2E%5Fpack%5Fnext%2Cv%2B%2B%29if%28yi%28a%2Ci%29%29%7Bp%3D1%3Bbreak%7Dif%281%3D%3Dp%29for%28c%3Dr%2E%5Fpack%5Fprev%3Bc%21%3D%3Da%2E%5Fpack%5Fprev%26%26%21yi%28c%2Ci%29%3Bc%3Dc%2E%5Fpack%5Fprev%2Cd%2B%2B%29%3Bp%3F%28d%3Ev%7C%7Cv%3D%3Dd%26%26u%2Er%3Cr%2Er%3Fmi%28r%2Cu%3Da%29%3Ami%28r%3Dc%2Cu%29%2Co%2D%2D%29%3A%28di%28r%2Ci%29%2Cu%3Di%2Ct%28i%29%29%7Dvar%20m%3D%28s%2Bf%29%2F2%2Cy%3D%28h%2Bg%29%2F2%2CM%3D0%3Bfor%28o%3D0%3Bl%3Eo%3Bo%2B%2B%29i%3De%5Bo%5D%2Ci%2Ex%2D%3Dm%2Ci%2Ey%2D%3Dy%2CM%3DMath%2Emax%28M%2Ci%2Er%2BMath%2Esqrt%28i%2Ex%2Ai%2Ex%2Bi%2Ey%2Ai%2Ey%29%29%3Bn%2Er%3DM%2Ce%2EforEach%28bi%29%7D%7Dfunction%20xi%28n%29%7Bn%2E%5Fpack%5Fnext%3Dn%2E%5Fpack%5Fprev%3Dn%7Dfunction%20bi%28n%29%7Bdelete%20n%2E%5Fpack%5Fnext%2Cdelete%20n%2E%5Fpack%5Fprev%7Dfunction%20%5Fi%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3Dn%2Echildren%3Bif%28n%2Ex%3Dt%2B%3Dr%2An%2Ex%2Cn%2Ey%3De%2B%3Dr%2An%2Ey%2Cn%2Er%2A%3Dr%2Cu%29for%28var%20i%3D%2D1%2Co%3Du%2Elength%3B%2B%2Bi%3Co%3B%29%5Fi%28u%5Bi%5D%2Ct%2Ce%2Cr%29%7Dfunction%20wi%28n%2Ct%2Ce%29%7Bvar%20r%3Dn%2Er%2Be%2Er%2Cu%3Dt%2Ex%2Dn%2Ex%2Ci%3Dt%2Ey%2Dn%2Ey%3Bif%28r%26%26%28u%7C%7Ci%29%29%7Bvar%20o%3Dt%2Er%2Be%2Er%2Ca%3Du%2Au%2Bi%2Ai%3Bo%2A%3Do%2Cr%2A%3Dr%3Bvar%20c%3D%2E5%2B%28r%2Do%29%2F%282%2Aa%29%2Cl%3DMath%2Esqrt%28Math%2Emax%280%2C2%2Ao%2A%28r%2Ba%29%2D%28r%2D%3Da%29%2Ar%2Do%2Ao%29%29%2F%282%2Aa%29%3Be%2Ex%3Dn%2Ex%2Bc%2Au%2Bl%2Ai%2Ce%2Ey%3Dn%2Ey%2Bc%2Ai%2Dl%2Au%7Delse%20e%2Ex%3Dn%2Ex%2Br%2Ce%2Ey%3Dn%2Ey%7Dfunction%20Si%28n%2Ct%29%7Breturn%20n%2Eparent%3D%3Dt%2Eparent%3F1%3A2%7Dfunction%20ki%28n%29%7Bvar%20t%3Dn%2Echildren%3Breturn%20t%2Elength%3Ft%5B0%5D%3An%2Et%7Dfunction%20Ei%28n%29%7Bvar%20t%2Ce%3Dn%2Echildren%3Breturn%28t%3De%2Elength%29%3Fe%5Bt%2D1%5D%3An%2Et%7Dfunction%20Ai%28n%2Ct%2Ce%29%7Bvar%20r%3De%2F%28t%2Ei%2Dn%2Ei%29%3Bt%2Ec%2D%3Dr%2Ct%2Es%2B%3De%2Cn%2Ec%2B%3Dr%2Ct%2Ez%2B%3De%2Ct%2Em%2B%3De%7Dfunction%20Ni%28n%29%7Bfor%28var%20t%2Ce%3D0%2Cr%3D0%2Cu%3Dn%2Echildren%2Ci%3Du%2Elength%3B%2D%2Di%3E%3D0%3B%29t%3Du%5Bi%5D%2Ct%2Ez%2B%3De%2Ct%2Em%2B%3De%2Ce%2B%3Dt%2Es%2B%28r%2B%3Dt%2Ec%29%7Dfunction%20Ci%28n%2Ct%2Ce%29%7Breturn%20n%2Ea%2Eparent%3D%3D%3Dt%2Eparent%3Fn%2Ea%3Ae%7Dfunction%20zi%28n%29%7Breturn%201%2Bta%2Emax%28n%2Cfunction%28n%29%7Breturn%20n%2Ey%7D%29%7Dfunction%20qi%28n%29%7Breturn%20n%2Ereduce%28function%28n%2Ct%29%7Breturn%20n%2Bt%2Ex%7D%2C0%29%2Fn%2Elength%7Dfunction%20Li%28n%29%7Bvar%20t%3Dn%2Echildren%3Breturn%20t%26%26t%2Elength%3FLi%28t%5B0%5D%29%3An%7Dfunction%20Ti%28n%29%7Bvar%20t%2Ce%3Dn%2Echildren%3Breturn%20e%26%26%28t%3De%2Elength%29%3FTi%28e%5Bt%2D1%5D%29%3An%7Dfunction%20Ri%28n%29%7Breturn%7Bx%3An%2Ex%2Cy%3An%2Ey%2Cdx%3An%2Edx%2Cdy%3An%2Edy%7D%7Dfunction%20Di%28n%2Ct%29%7Bvar%20e%3Dn%2Ex%2Bt%5B3%5D%2Cr%3Dn%2Ey%2Bt%5B0%5D%2Cu%3Dn%2Edx%2Dt%5B1%5D%2Dt%5B3%5D%2Ci%3Dn%2Edy%2Dt%5B0%5D%2Dt%5B2%5D%3Breturn%200%3Eu%26%26%28e%2B%3Du%2F2%2Cu%3D0%29%2C0%3Ei%26%26%28r%2B%3Di%2F2%2Ci%3D0%29%2C%7Bx%3Ae%2Cy%3Ar%2Cdx%3Au%2Cdy%3Ai%7D%7Dfunction%20Pi%28n%29%7Bvar%20t%3Dn%5B0%5D%2Ce%3Dn%5Bn%2Elength%2D1%5D%3Breturn%20e%3Et%3F%5Bt%2Ce%5D%3A%5Be%2Ct%5D%7Dfunction%20Ui%28n%29%7Breturn%20n%2ErangeExtent%3Fn%2ErangeExtent%28%29%3APi%28n%2Erange%28%29%29%7Dfunction%20ji%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3De%28n%5B0%5D%2Cn%5B1%5D%29%2Ci%3Dr%28t%5B0%5D%2Ct%5B1%5D%29%3Breturn%20function%28n%29%7Breturn%20i%28u%28n%29%29%7D%7Dfunction%20Fi%28n%2Ct%29%7Bvar%20e%2Cr%3D0%2Cu%3Dn%2Elength%2D1%2Ci%3Dn%5Br%5D%2Co%3Dn%5Bu%5D%3Breturn%20i%3Eo%26%26%28e%3Dr%2Cr%3Du%2Cu%3De%2Ce%3Di%2Ci%3Do%2Co%3De%29%2Cn%5Br%5D%3Dt%2Efloor%28i%29%2Cn%5Bu%5D%3Dt%2Eceil%28o%29%2Cn%7Dfunction%20Hi%28n%29%7Breturn%20n%3F%7Bfloor%3Afunction%28t%29%7Breturn%20Math%2Efloor%28t%2Fn%29%2An%7D%2Cceil%3Afunction%28t%29%7Breturn%20Math%2Eceil%28t%2Fn%29%2An%7D%7D%3Aml%7Dfunction%20Oi%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3D%5B%5D%2Ci%3D%5B%5D%2Co%3D0%2Ca%3DMath%2Emin%28n%2Elength%2Ct%2Elength%29%2D1%3Bfor%28n%5Ba%5D%3Cn%5B0%5D%26%26%28n%3Dn%2Eslice%28%29%2Ereverse%28%29%2Ct%3Dt%2Eslice%28%29%2Ereverse%28%29%29%3B%2B%2Bo%3C%3Da%3B%29u%2Epush%28e%28n%5Bo%2D1%5D%2Cn%5Bo%5D%29%29%2Ci%2Epush%28r%28t%5Bo%2D1%5D%2Ct%5Bo%5D%29%29%3Breturn%20function%28t%29%7Bvar%20e%3Dta%2Ebisect%28n%2Ct%2C1%2Ca%29%2D1%3Breturn%20i%5Be%5D%28u%5Be%5D%28t%29%29%7D%7Dfunction%20Ii%28n%2Ct%2Ce%2Cr%29%7Bfunction%20u%28%29%7Bvar%20u%3DMath%2Emin%28n%2Elength%2Ct%2Elength%29%3E2%3FOi%3Aji%2Cc%3Dr%3FIu%3AOu%3Breturn%20o%3Du%28n%2Ct%2Cc%2Ce%29%2Ca%3Du%28t%2Cn%2Cc%2Cmu%29%2Ci%7Dfunction%20i%28n%29%7Breturn%20o%28n%29%7Dvar%20o%2Ca%3Breturn%20i%2Einvert%3Dfunction%28n%29%7Breturn%20a%28n%29%7D%2Ci%2Edomain%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28n%3Dt%2Emap%28Number%29%2Cu%28%29%29%3An%7D%2Ci%2Erange%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28t%3Dn%2Cu%28%29%29%3At%7D%2Ci%2ErangeRound%3Dfunction%28n%29%7Breturn%20i%2Erange%28n%29%2Einterpolate%28Du%29%7D%2Ci%2Eclamp%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28r%3Dn%2Cu%28%29%29%3Ar%7D%2Ci%2Einterpolate%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28e%3Dn%2Cu%28%29%29%3Ae%7D%2Ci%2Eticks%3Dfunction%28t%29%7Breturn%20Xi%28n%2Ct%29%7D%2Ci%2EtickFormat%3Dfunction%28t%2Ce%29%7Breturn%20%24i%28n%2Ct%2Ce%29%7D%2Ci%2Enice%3Dfunction%28t%29%7Breturn%20Zi%28n%2Ct%29%2Cu%28%29%7D%2Ci%2Ecopy%3Dfunction%28%29%7Breturn%20Ii%28n%2Ct%2Ce%2Cr%29%7D%2Cu%28%29%7Dfunction%20Yi%28n%2Ct%29%7Breturn%20ta%2Erebind%28n%2Ct%2C%22range%22%2C%22rangeRound%22%2C%22interpolate%22%2C%22clamp%22%29%7Dfunction%20Zi%28n%2Ct%29%7Breturn%20Fi%28n%2CHi%28Vi%28n%2Ct%29%5B2%5D%29%29%7Dfunction%20Vi%28n%2Ct%29%7Bnull%3D%3Dt%26%26%28t%3D10%29%3Bvar%20e%3DPi%28n%29%2Cr%3De%5B1%5D%2De%5B0%5D%2Cu%3DMath%2Epow%2810%2CMath%2Efloor%28Math%2Elog%28r%2Ft%29%2FMath%2ELN10%29%29%2Ci%3Dt%2Fr%2Au%3Breturn%2E15%3E%3Di%3Fu%2A%3D10%3A%2E35%3E%3Di%3Fu%2A%3D5%3A%2E75%3E%3Di%26%26%28u%2A%3D2%29%2Ce%5B0%5D%3DMath%2Eceil%28e%5B0%5D%2Fu%29%2Au%2Ce%5B1%5D%3DMath%2Efloor%28e%5B1%5D%2Fu%29%2Au%2B%2E5%2Au%2Ce%5B2%5D%3Du%2Ce%7Dfunction%20Xi%28n%2Ct%29%7Breturn%20ta%2Erange%2Eapply%28ta%2CVi%28n%2Ct%29%29%7Dfunction%20%24i%28n%2Ct%2Ce%29%7Bvar%20r%3DVi%28n%2Ct%29%3Bif%28e%29%7Bvar%20u%3Dic%2Eexec%28e%29%3Bif%28u%2Eshift%28%29%2C%22s%22%3D%3D%3Du%5B8%5D%29%7Bvar%20i%3Dta%2EformatPrefix%28Math%2Emax%28ga%28r%5B0%5D%29%2Cga%28r%5B1%5D%29%29%29%3Breturn%20u%5B7%5D%7C%7C%28u%5B7%5D%3D%22%2E%22%2BBi%28i%2Escale%28r%5B2%5D%29%29%29%2Cu%5B8%5D%3D%22f%22%2Ce%3Dta%2Eformat%28u%2Ejoin%28%22%22%29%29%2Cfunction%28n%29%7Breturn%20e%28i%2Escale%28n%29%29%2Bi%2Esymbol%7D%7Du%5B7%5D%7C%7C%28u%5B7%5D%3D%22%2E%22%2BWi%28u%5B8%5D%2Cr%29%29%2Ce%3Du%2Ejoin%28%22%22%29%7Delse%20e%3D%22%2C%2E%22%2BBi%28r%5B2%5D%29%2B%22f%22%3Breturn%20ta%2Eformat%28e%29%7Dfunction%20Bi%28n%29%7Breturn%2DMath%2Efloor%28Math%2Elog%28n%29%2FMath%2ELN10%2B%2E01%29%7Dfunction%20Wi%28n%2Ct%29%7Bvar%20e%3DBi%28t%5B2%5D%29%3Breturn%20n%20in%20yl%3FMath%2Eabs%28e%2DBi%28Math%2Emax%28ga%28t%5B0%5D%29%2Cga%28t%5B1%5D%29%29%29%29%2B%20%2B%28%22e%22%21%3D%3Dn%29%3Ae%2D2%2A%28%22%25%22%3D%3D%3Dn%29%7Dfunction%20Ji%28n%2Ct%2Ce%2Cr%29%7Bfunction%20u%28n%29%7Breturn%28e%3FMath%2Elog%280%3En%3F0%3An%29%3A%2DMath%2Elog%28n%3E0%3F0%3A%2Dn%29%29%2FMath%2Elog%28t%29%7Dfunction%20i%28n%29%7Breturn%20e%3FMath%2Epow%28t%2Cn%29%3A%2DMath%2Epow%28t%2C%2Dn%29%7Dfunction%20o%28t%29%7Breturn%20n%28u%28t%29%29%7Dreturn%20o%2Einvert%3Dfunction%28t%29%7Breturn%20i%28n%2Einvert%28t%29%29%7D%2Co%2Edomain%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3Dt%5B0%5D%3E%3D0%2Cn%2Edomain%28%28r%3Dt%2Emap%28Number%29%29%2Emap%28u%29%29%2Co%29%3Ar%7D%2Co%2Ebase%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3D%2Be%2Cn%2Edomain%28r%2Emap%28u%29%29%2Co%29%3At%7D%2Co%2Enice%3Dfunction%28%29%7Bvar%20t%3DFi%28r%2Emap%28u%29%2Ce%3FMath%3Axl%29%3Breturn%20n%2Edomain%28t%29%2Cr%3Dt%2Emap%28i%29%2Co%7D%2Co%2Eticks%3Dfunction%28%29%7Bvar%20n%3DPi%28r%29%2Co%3D%5B%5D%2Ca%3Dn%5B0%5D%2Cc%3Dn%5B1%5D%2Cl%3DMath%2Efloor%28u%28a%29%29%2Cs%3DMath%2Eceil%28u%28c%29%29%2Cf%3Dt%251%3F2%3At%3Bif%28isFinite%28s%2Dl%29%29%7Bif%28e%29%7Bfor%28%3Bs%3El%3Bl%2B%2B%29for%28var%20h%3D1%3Bf%3Eh%3Bh%2B%2B%29o%2Epush%28i%28l%29%2Ah%29%3Bo%2Epush%28i%28l%29%29%7Delse%20for%28o%2Epush%28i%28l%29%29%3Bl%2B%2B%3Cs%3B%29for%28var%20h%3Df%2D1%3Bh%3E0%3Bh%2D%2D%29o%2Epush%28i%28l%29%2Ah%29%3Bfor%28l%3D0%3Bo%5Bl%5D%3Ca%3Bl%2B%2B%29%3Bfor%28s%3Do%2Elength%3Bo%5Bs%2D1%5D%3Ec%3Bs%2D%2D%29%3Bo%3Do%2Eslice%28l%2Cs%29%7Dreturn%20o%7D%2Co%2EtickFormat%3Dfunction%28n%2Ct%29%7Bif%28%21arguments%2Elength%29return%20Ml%3Barguments%2Elength%3C2%3Ft%3DMl%3A%22function%22%21%3Dtypeof%20t%26%26%28t%3Dta%2Eformat%28t%29%29%3Bvar%20r%2Ca%3DMath%2Emax%28%2E1%2Cn%2Fo%2Eticks%28%29%2Elength%29%2Cc%3De%3F%28r%3D1e%2D12%2CMath%2Eceil%29%3A%28r%3D%2D1e%2D12%2CMath%2Efloor%29%3Breturn%20function%28n%29%7Breturn%20n%2Fi%28c%28u%28n%29%2Br%29%29%3C%3Da%3Ft%28n%29%3A%22%22%7D%7D%2Co%2Ecopy%3Dfunction%28%29%7Breturn%20Ji%28n%2Ecopy%28%29%2Ct%2Ce%2Cr%29%7D%2CYi%28o%2Cn%29%7Dfunction%20Gi%28n%2Ct%2Ce%29%7Bfunction%20r%28t%29%7Breturn%20n%28u%28t%29%29%7Dvar%20u%3DKi%28t%29%2Ci%3DKi%281%2Ft%29%3Breturn%20r%2Einvert%3Dfunction%28t%29%7Breturn%20i%28n%2Einvert%28t%29%29%7D%2Cr%2Edomain%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28n%2Edomain%28%28e%3Dt%2Emap%28Number%29%29%2Emap%28u%29%29%2Cr%29%3Ae%7D%2Cr%2Eticks%3Dfunction%28n%29%7Breturn%20Xi%28e%2Cn%29%7D%2Cr%2EtickFormat%3Dfunction%28n%2Ct%29%7Breturn%20%24i%28e%2Cn%2Ct%29%7D%2Cr%2Enice%3Dfunction%28n%29%7Breturn%20r%2Edomain%28Zi%28e%2Cn%29%29%7D%2Cr%2Eexponent%3Dfunction%28o%29%7Breturn%20arguments%2Elength%3F%28u%3DKi%28t%3Do%29%2Ci%3DKi%281%2Ft%29%2Cn%2Edomain%28e%2Emap%28u%29%29%2Cr%29%3At%7D%2Cr%2Ecopy%3Dfunction%28%29%7Breturn%20Gi%28n%2Ecopy%28%29%2Ct%2Ce%29%7D%2CYi%28r%2Cn%29%7Dfunction%20Ki%28n%29%7Breturn%20function%28t%29%7Breturn%200%3Et%3F%2DMath%2Epow%28%2Dt%2Cn%29%3AMath%2Epow%28t%2Cn%29%7D%7Dfunction%20Qi%28n%2Ct%29%7Bfunction%20e%28e%29%7Breturn%20i%5B%28%28u%2Eget%28e%29%7C%7C%28%22range%22%3D%3D%3Dt%2Et%3Fu%2Eset%28e%2Cn%2Epush%28e%29%29%3A0%2F0%29%29%2D1%29%25i%2Elength%5D%7Dfunction%20r%28t%2Ce%29%7Breturn%20ta%2Erange%28n%2Elength%29%2Emap%28function%28n%29%7Breturn%20t%2Be%2An%7D%29%7Dvar%20u%2Ci%2Co%3Breturn%20e%2Edomain%3Dfunction%28r%29%7Bif%28%21arguments%2Elength%29return%20n%3Bn%3D%5B%5D%2Cu%3Dnew%20l%3Bfor%28var%20i%2Co%3D%2D1%2Ca%3Dr%2Elength%3B%2B%2Bo%3Ca%3B%29u%2Ehas%28i%3Dr%5Bo%5D%29%7C%7Cu%2Eset%28i%2Cn%2Epush%28i%29%29%3Breturn%20e%5Bt%2Et%5D%2Eapply%28e%2Ct%2Ea%29%7D%2Ce%2Erange%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28i%3Dn%2Co%3D0%2Ct%3D%7Bt%3A%22range%22%2Ca%3Aarguments%7D%2Ce%29%3Ai%7D%2Ce%2ErangePoints%3Dfunction%28u%2Ca%29%7Barguments%2Elength%3C2%26%26%28a%3D0%29%3Bvar%20c%3Du%5B0%5D%2Cl%3Du%5B1%5D%2Cs%3Dn%2Elength%3C2%3F%28c%3D%28c%2Bl%29%2F2%2C0%29%3A%28l%2Dc%29%2F%28n%2Elength%2D1%2Ba%29%3Breturn%20i%3Dr%28c%2Bs%2Aa%2F2%2Cs%29%2Co%3D0%2Ct%3D%7Bt%3A%22rangePoints%22%2Ca%3Aarguments%7D%2Ce%7D%2Ce%2ErangeRoundPoints%3Dfunction%28u%2Ca%29%7Barguments%2Elength%3C2%26%26%28a%3D0%29%3Bvar%20c%3Du%5B0%5D%2Cl%3Du%5B1%5D%2Cs%3Dn%2Elength%3C2%3F%28c%3Dl%3DMath%2Eround%28%28c%2Bl%29%2F2%29%2C0%29%3A%28l%2Dc%29%2F%28n%2Elength%2D1%2Ba%29%7C0%3Breturn%20i%3Dr%28c%2BMath%2Eround%28s%2Aa%2F2%2B%28l%2Dc%2D%28n%2Elength%2D1%2Ba%29%2As%29%2F2%29%2Cs%29%2Co%3D0%2Ct%3D%7Bt%3A%22rangeRoundPoints%22%2Ca%3Aarguments%7D%2Ce%7D%2Ce%2ErangeBands%3Dfunction%28u%2Ca%2Cc%29%7Barguments%2Elength%3C2%26%26%28a%3D0%29%2Carguments%2Elength%3C3%26%26%28c%3Da%29%3Bvar%20l%3Du%5B1%5D%3Cu%5B0%5D%2Cs%3Du%5Bl%2D0%5D%2Cf%3Du%5B1%2Dl%5D%2Ch%3D%28f%2Ds%29%2F%28n%2Elength%2Da%2B2%2Ac%29%3Breturn%20i%3Dr%28s%2Bh%2Ac%2Ch%29%2Cl%26%26i%2Ereverse%28%29%2Co%3Dh%2A%281%2Da%29%2Ct%3D%7Bt%3A%22rangeBands%22%2Ca%3Aarguments%7D%2Ce%7D%2Ce%2ErangeRoundBands%3Dfunction%28u%2Ca%2Cc%29%7Barguments%2Elength%3C2%26%26%28a%3D0%29%2Carguments%2Elength%3C3%26%26%28c%3Da%29%3Bvar%20l%3Du%5B1%5D%3Cu%5B0%5D%2Cs%3Du%5Bl%2D0%5D%2Cf%3Du%5B1%2Dl%5D%2Ch%3DMath%2Efloor%28%28f%2Ds%29%2F%28n%2Elength%2Da%2B2%2Ac%29%29%3Breturn%20i%3Dr%28s%2BMath%2Eround%28%28f%2Ds%2D%28n%2Elength%2Da%29%2Ah%29%2F2%29%2Ch%29%2Cl%26%26i%2Ereverse%28%29%2Co%3DMath%2Eround%28h%2A%281%2Da%29%29%2Ct%3D%7Bt%3A%22rangeRoundBands%22%2Ca%3Aarguments%7D%2Ce%7D%2Ce%2ErangeBand%3Dfunction%28%29%7Breturn%20o%7D%2Ce%2ErangeExtent%3Dfunction%28%29%7Breturn%20Pi%28t%2Ea%5B0%5D%29%7D%2Ce%2Ecopy%3Dfunction%28%29%7Breturn%20Qi%28n%2Ct%29%7D%2Ce%2Edomain%28n%29%7Dfunction%20no%28n%2Ct%29%7Bfunction%20i%28%29%7Bvar%20e%3D0%2Cr%3Dt%2Elength%3Bfor%28a%3D%5B%5D%3B%2B%2Be%3Cr%3B%29a%5Be%2D1%5D%3Dta%2Equantile%28n%2Ce%2Fr%29%3Breturn%20o%7Dfunction%20o%28n%29%7Breturn%20isNaN%28n%3D%2Bn%29%3Fvoid%200%3At%5Bta%2Ebisect%28a%2Cn%29%5D%7Dvar%20a%3Breturn%20o%2Edomain%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28n%3Dt%2Emap%28r%29%2Efilter%28u%29%2Esort%28e%29%2Ci%28%29%29%3An%7D%2Co%2Erange%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28t%3Dn%2Ci%28%29%29%3At%7D%2Co%2Equantiles%3Dfunction%28%29%7Breturn%20a%7D%2Co%2EinvertExtent%3Dfunction%28e%29%7Breturn%20e%3Dt%2EindexOf%28e%29%2C0%3Ee%3F%5B0%2F0%2C0%2F0%5D%3A%5Be%3E0%3Fa%5Be%2D1%5D%3An%5B0%5D%2Ce%3Ca%2Elength%3Fa%5Be%5D%3An%5Bn%2Elength%2D1%5D%5D%7D%2Co%2Ecopy%3Dfunction%28%29%7Breturn%20no%28n%2Ct%29%7D%2Ci%28%29%7Dfunction%20to%28n%2Ct%2Ce%29%7Bfunction%20r%28t%29%7Breturn%20e%5BMath%2Emax%280%2CMath%2Emin%28o%2CMath%2Efloor%28i%2A%28t%2Dn%29%29%29%29%5D%7Dfunction%20u%28%29%7Breturn%20i%3De%2Elength%2F%28t%2Dn%29%2Co%3De%2Elength%2D1%2Cr%7Dvar%20i%2Co%3Breturn%20r%2Edomain%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28n%3D%2Be%5B0%5D%2Ct%3D%2Be%5Be%2Elength%2D1%5D%2Cu%28%29%29%3A%5Bn%2Ct%5D%7D%2Cr%2Erange%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28e%3Dn%2Cu%28%29%29%3Ae%7D%2Cr%2EinvertExtent%3Dfunction%28t%29%7Breturn%20t%3De%2EindexOf%28t%29%2Ct%3D0%3Et%3F0%2F0%3At%2Fi%2Bn%2C%5Bt%2Ct%2B1%2Fi%5D%7D%2Cr%2Ecopy%3Dfunction%28%29%7Breturn%20to%28n%2Ct%2Ce%29%7D%2Cu%28%29%7Dfunction%20eo%28n%2Ct%29%7Bfunction%20e%28e%29%7Breturn%20e%3E%3De%3Ft%5Bta%2Ebisect%28n%2Ce%29%5D%3Avoid%200%7Dreturn%20e%2Edomain%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28n%3Dt%2Ce%29%3An%7D%2Ce%2Erange%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28t%3Dn%2Ce%29%3At%7D%2Ce%2EinvertExtent%3Dfunction%28e%29%7Breturn%20e%3Dt%2EindexOf%28e%29%2C%5Bn%5Be%2D1%5D%2Cn%5Be%5D%5D%7D%2Ce%2Ecopy%3Dfunction%28%29%7Breturn%20eo%28n%2Ct%29%7D%2Ce%7Dfunction%20ro%28n%29%7Bfunction%20t%28n%29%7Breturn%2Bn%7Dreturn%20t%2Einvert%3Dt%2Ct%2Edomain%3Dt%2Erange%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28n%3De%2Emap%28t%29%2Ct%29%3An%7D%2Ct%2Eticks%3Dfunction%28t%29%7Breturn%20Xi%28n%2Ct%29%7D%2Ct%2EtickFormat%3Dfunction%28t%2Ce%29%7Breturn%20%24i%28n%2Ct%2Ce%29%7D%2Ct%2Ecopy%3Dfunction%28%29%7Breturn%20ro%28n%29%7D%2Ct%7Dfunction%20uo%28%29%7Breturn%200%7Dfunction%20io%28n%29%7Breturn%20n%2EinnerRadius%7Dfunction%20oo%28n%29%7Breturn%20n%2EouterRadius%7Dfunction%20ao%28n%29%7Breturn%20n%2EstartAngle%7Dfunction%20co%28n%29%7Breturn%20n%2EendAngle%7Dfunction%20lo%28n%29%7Breturn%20n%26%26n%2EpadAngle%7Dfunction%20so%28n%2Ct%2Ce%2Cr%29%7Breturn%28n%2De%29%2At%2D%28t%2Dr%29%2An%3E0%3F0%3A1%7Dfunction%20fo%28n%2Ct%2Ce%2Cr%2Cu%29%7Bvar%20i%3Dn%5B0%5D%2Dt%5B0%5D%2Co%3Dn%5B1%5D%2Dt%5B1%5D%2Ca%3D%28u%3Fr%3A%2Dr%29%2FMath%2Esqrt%28i%2Ai%2Bo%2Ao%29%2Cc%3Da%2Ao%2Cl%3D%2Da%2Ai%2Cs%3Dn%5B0%5D%2Bc%2Cf%3Dn%5B1%5D%2Bl%2Ch%3Dt%5B0%5D%2Bc%2Cg%3Dt%5B1%5D%2Bl%2Cp%3D%28s%2Bh%29%2F2%2Cv%3D%28f%2Bg%29%2F2%2Cd%3Dh%2Ds%2Cm%3Dg%2Df%2Cy%3Dd%2Ad%2Bm%2Am%2CM%3De%2Dr%2Cx%3Ds%2Ag%2Dh%2Af%2Cb%3D%280%3Em%3F%2D1%3A1%29%2AMath%2Esqrt%28M%2AM%2Ay%2Dx%2Ax%29%2C%5F%3D%28x%2Am%2Dd%2Ab%29%2Fy%2Cw%3D%28%2Dx%2Ad%2Dm%2Ab%29%2Fy%2CS%3D%28x%2Am%2Bd%2Ab%29%2Fy%2Ck%3D%28%2Dx%2Ad%2Bm%2Ab%29%2Fy%2CE%3D%5F%2Dp%2CA%3Dw%2Dv%2CN%3DS%2Dp%2CC%3Dk%2Dv%3Breturn%20E%2AE%2BA%2AA%3EN%2AN%2BC%2AC%26%26%28%5F%3DS%2Cw%3Dk%29%2C%5B%5B%5F%2Dc%2Cw%2Dl%5D%2C%5B%5F%2Ae%2FM%2Cw%2Ae%2FM%5D%5D%7Dfunction%20ho%28n%29%7Bfunction%20t%28t%29%7Bfunction%20o%28%29%7Bl%2Epush%28%22M%22%2Ci%28n%28s%29%2Ca%29%29%7Dfor%28var%20c%2Cl%3D%5B%5D%2Cs%3D%5B%5D%2Cf%3D%2D1%2Ch%3Dt%2Elength%2Cg%3DEt%28e%29%2Cp%3DEt%28r%29%3B%2B%2Bf%3Ch%3B%29u%2Ecall%28this%2Cc%3Dt%5Bf%5D%2Cf%29%3Fs%2Epush%28%5B%2Bg%2Ecall%28this%2Cc%2Cf%29%2C%2Bp%2Ecall%28this%2Cc%2Cf%29%5D%29%3As%2Elength%26%26%28o%28%29%2Cs%3D%5B%5D%29%3Breturn%20s%2Elength%26%26o%28%29%2Cl%2Elength%3Fl%2Ejoin%28%22%22%29%3Anull%7Dvar%20e%3DAr%2Cr%3DNr%2Cu%3DNe%2Ci%3Dgo%2Co%3Di%2Ekey%2Ca%3D%2E7%3Breturn%20t%2Ex%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28e%3Dn%2Ct%29%3Ae%7D%2Ct%2Ey%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28r%3Dn%2Ct%29%3Ar%7D%2Ct%2Edefined%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28u%3Dn%2Ct%29%3Au%7D%2Ct%2Einterpolate%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28o%3D%22function%22%3D%3Dtypeof%20n%3Fi%3Dn%3A%28i%3DEl%2Eget%28n%29%7C%7Cgo%29%2Ekey%2Ct%29%3Ao%7D%2Ct%2Etension%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28a%3Dn%2Ct%29%3Aa%7D%2Ct%7Dfunction%20go%28n%29%7Breturn%20n%2Ejoin%28%22L%22%29%7Dfunction%20po%28n%29%7Breturn%20go%28n%29%2B%22Z%22%7Dfunction%20vo%28n%29%7Bfor%28var%20t%3D0%2Ce%3Dn%2Elength%2Cr%3Dn%5B0%5D%2Cu%3D%5Br%5B0%5D%2C%22%2C%22%2Cr%5B1%5D%5D%3B%2B%2Bt%3Ce%3B%29u%2Epush%28%22H%22%2C%28r%5B0%5D%2B%28r%3Dn%5Bt%5D%29%5B0%5D%29%2F2%2C%22V%22%2Cr%5B1%5D%29%3Breturn%20e%3E1%26%26u%2Epush%28%22H%22%2Cr%5B0%5D%29%2Cu%2Ejoin%28%22%22%29%7Dfunction%20mo%28n%29%7Bfor%28var%20t%3D0%2Ce%3Dn%2Elength%2Cr%3Dn%5B0%5D%2Cu%3D%5Br%5B0%5D%2C%22%2C%22%2Cr%5B1%5D%5D%3B%2B%2Bt%3Ce%3B%29u%2Epush%28%22V%22%2C%28r%3Dn%5Bt%5D%29%5B1%5D%2C%22H%22%2Cr%5B0%5D%29%3Breturn%20u%2Ejoin%28%22%22%29%7Dfunction%20yo%28n%29%7Bfor%28var%20t%3D0%2Ce%3Dn%2Elength%2Cr%3Dn%5B0%5D%2Cu%3D%5Br%5B0%5D%2C%22%2C%22%2Cr%5B1%5D%5D%3B%2B%2Bt%3Ce%3B%29u%2Epush%28%22H%22%2C%28r%3Dn%5Bt%5D%29%5B0%5D%2C%22V%22%2Cr%5B1%5D%29%3Breturn%20u%2Ejoin%28%22%22%29%7Dfunction%20Mo%28n%2Ct%29%7Breturn%20n%2Elength%3C4%3Fgo%28n%29%3An%5B1%5D%2B%5Fo%28n%2Eslice%281%2C%2D1%29%2Cwo%28n%2Ct%29%29%7Dfunction%20xo%28n%2Ct%29%7Breturn%20n%2Elength%3C3%3Fgo%28n%29%3An%5B0%5D%2B%5Fo%28%28n%2Epush%28n%5B0%5D%29%2Cn%29%2Cwo%28%5Bn%5Bn%2Elength%2D2%5D%5D%2Econcat%28n%2C%5Bn%5B1%5D%5D%29%2Ct%29%29%7Dfunction%20bo%28n%2Ct%29%7Breturn%20n%2Elength%3C3%3Fgo%28n%29%3An%5B0%5D%2B%5Fo%28n%2Cwo%28n%2Ct%29%29%7Dfunction%20%5Fo%28n%2Ct%29%7Bif%28t%2Elength%3C1%7C%7Cn%2Elength%21%3Dt%2Elength%26%26n%2Elength%21%3Dt%2Elength%2B2%29return%20go%28n%29%3Bvar%20e%3Dn%2Elength%21%3Dt%2Elength%2Cr%3D%22%22%2Cu%3Dn%5B0%5D%2Ci%3Dn%5B1%5D%2Co%3Dt%5B0%5D%2Ca%3Do%2Cc%3D1%3Bif%28e%26%26%28r%2B%3D%22Q%22%2B%28i%5B0%5D%2D2%2Ao%5B0%5D%2F3%29%2B%22%2C%22%2B%28i%5B1%5D%2D2%2Ao%5B1%5D%2F3%29%2B%22%2C%22%2Bi%5B0%5D%2B%22%2C%22%2Bi%5B1%5D%2Cu%3Dn%5B1%5D%2Cc%3D2%29%2Ct%2Elength%3E1%29%7Ba%3Dt%5B1%5D%2Ci%3Dn%5Bc%5D%2Cc%2B%2B%2Cr%2B%3D%22C%22%2B%28u%5B0%5D%2Bo%5B0%5D%29%2B%22%2C%22%2B%28u%5B1%5D%2Bo%5B1%5D%29%2B%22%2C%22%2B%28i%5B0%5D%2Da%5B0%5D%29%2B%22%2C%22%2B%28i%5B1%5D%2Da%5B1%5D%29%2B%22%2C%22%2Bi%5B0%5D%2B%22%2C%22%2Bi%5B1%5D%3Bfor%28var%20l%3D2%3Bl%3Ct%2Elength%3Bl%2B%2B%2Cc%2B%2B%29i%3Dn%5Bc%5D%2Ca%3Dt%5Bl%5D%2Cr%2B%3D%22S%22%2B%28i%5B0%5D%2Da%5B0%5D%29%2B%22%2C%22%2B%28i%5B1%5D%2Da%5B1%5D%29%2B%22%2C%22%2Bi%5B0%5D%2B%22%2C%22%2Bi%5B1%5D%7Dif%28e%29%7Bvar%20s%3Dn%5Bc%5D%3Br%2B%3D%22Q%22%2B%28i%5B0%5D%2B2%2Aa%5B0%5D%2F3%29%2B%22%2C%22%2B%28i%5B1%5D%2B2%2Aa%5B1%5D%2F3%29%2B%22%2C%22%2Bs%5B0%5D%2B%22%2C%22%2Bs%5B1%5D%7Dreturn%20r%7Dfunction%20wo%28n%2Ct%29%7Bfor%28var%20e%2Cr%3D%5B%5D%2Cu%3D%281%2Dt%29%2F2%2Ci%3Dn%5B0%5D%2Co%3Dn%5B1%5D%2Ca%3D1%2Cc%3Dn%2Elength%3B%2B%2Ba%3Cc%3B%29e%3Di%2Ci%3Do%2Co%3Dn%5Ba%5D%2Cr%2Epush%28%5Bu%2A%28o%5B0%5D%2De%5B0%5D%29%2Cu%2A%28o%5B1%5D%2De%5B1%5D%29%5D%29%3Breturn%20r%7Dfunction%20So%28n%29%7Bif%28n%2Elength%3C3%29return%20go%28n%29%3Bvar%20t%3D1%2Ce%3Dn%2Elength%2Cr%3Dn%5B0%5D%2Cu%3Dr%5B0%5D%2Ci%3Dr%5B1%5D%2Co%3D%5Bu%2Cu%2Cu%2C%28r%3Dn%5B1%5D%29%5B0%5D%5D%2Ca%3D%5Bi%2Ci%2Ci%2Cr%5B1%5D%5D%2Cc%3D%5Bu%2C%22%2C%22%2Ci%2C%22L%22%2CNo%28Cl%2Co%29%2C%22%2C%22%2CNo%28Cl%2Ca%29%5D%3Bfor%28n%2Epush%28n%5Be%2D1%5D%29%3B%2B%2Bt%3C%3De%3B%29r%3Dn%5Bt%5D%2Co%2Eshift%28%29%2Co%2Epush%28r%5B0%5D%29%2Ca%2Eshift%28%29%2Ca%2Epush%28r%5B1%5D%29%2CCo%28c%2Co%2Ca%29%3Breturn%20n%2Epop%28%29%2Cc%2Epush%28%22L%22%2Cr%29%2Cc%2Ejoin%28%22%22%29%7Dfunction%20ko%28n%29%7Bif%28n%2Elength%3C4%29return%20go%28n%29%3Bfor%28var%20t%2Ce%3D%5B%5D%2Cr%3D%2D1%2Cu%3Dn%2Elength%2Ci%3D%5B0%5D%2Co%3D%5B0%5D%3B%2B%2Br%3C3%3B%29t%3Dn%5Br%5D%2Ci%2Epush%28t%5B0%5D%29%2Co%2Epush%28t%5B1%5D%29%3Bfor%28e%2Epush%28No%28Cl%2Ci%29%2B%22%2C%22%2BNo%28Cl%2Co%29%29%2C%2D%2Dr%3B%2B%2Br%3Cu%3B%29t%3Dn%5Br%5D%2Ci%2Eshift%28%29%2Ci%2Epush%28t%5B0%5D%29%2Co%2Eshift%28%29%2Co%2Epush%28t%5B1%5D%29%2CCo%28e%2Ci%2Co%29%3Breturn%20e%2Ejoin%28%22%22%29%7Dfunction%20Eo%28n%29%7Bfor%28var%20t%2Ce%2Cr%3D%2D1%2Cu%3Dn%2Elength%2Ci%3Du%2B4%2Co%3D%5B%5D%2Ca%3D%5B%5D%3B%2B%2Br%3C4%3B%29e%3Dn%5Br%25u%5D%2Co%2Epush%28e%5B0%5D%29%2Ca%2Epush%28e%5B1%5D%29%3Bfor%28t%3D%5BNo%28Cl%2Co%29%2C%22%2C%22%2CNo%28Cl%2Ca%29%5D%2C%2D%2Dr%3B%2B%2Br%3Ci%3B%29e%3Dn%5Br%25u%5D%2Co%2Eshift%28%29%2Co%2Epush%28e%5B0%5D%29%2Ca%2Eshift%28%29%2Ca%2Epush%28e%5B1%5D%29%2CCo%28t%2Co%2Ca%29%3Breturn%20t%2Ejoin%28%22%22%29%7Dfunction%20Ao%28n%2Ct%29%7Bvar%20e%3Dn%2Elength%2D1%3Bif%28e%29for%28var%20r%2Cu%2Ci%3Dn%5B0%5D%5B0%5D%2Co%3Dn%5B0%5D%5B1%5D%2Ca%3Dn%5Be%5D%5B0%5D%2Di%2Cc%3Dn%5Be%5D%5B1%5D%2Do%2Cl%3D%2D1%3B%2B%2Bl%3C%3De%3B%29r%3Dn%5Bl%5D%2Cu%3Dl%2Fe%2Cr%5B0%5D%3Dt%2Ar%5B0%5D%2B%281%2Dt%29%2A%28i%2Bu%2Aa%29%2Cr%5B1%5D%3Dt%2Ar%5B1%5D%2B%281%2Dt%29%2A%28o%2Bu%2Ac%29%3Breturn%20So%28n%29%7Dfunction%20No%28n%2Ct%29%7Breturn%20n%5B0%5D%2At%5B0%5D%2Bn%5B1%5D%2At%5B1%5D%2Bn%5B2%5D%2At%5B2%5D%2Bn%5B3%5D%2At%5B3%5D%7Dfunction%20Co%28n%2Ct%2Ce%29%7Bn%2Epush%28%22C%22%2CNo%28Al%2Ct%29%2C%22%2C%22%2CNo%28Al%2Ce%29%2C%22%2C%22%2CNo%28Nl%2Ct%29%2C%22%2C%22%2CNo%28Nl%2Ce%29%2C%22%2C%22%2CNo%28Cl%2Ct%29%2C%22%2C%22%2CNo%28Cl%2Ce%29%29%7Dfunction%20zo%28n%2Ct%29%7Breturn%28t%5B1%5D%2Dn%5B1%5D%29%2F%28t%5B0%5D%2Dn%5B0%5D%29%7Dfunction%20qo%28n%29%7Bfor%28var%20t%3D0%2Ce%3Dn%2Elength%2D1%2Cr%3D%5B%5D%2Cu%3Dn%5B0%5D%2Ci%3Dn%5B1%5D%2Co%3Dr%5B0%5D%3Dzo%28u%2Ci%29%3B%2B%2Bt%3Ce%3B%29r%5Bt%5D%3D%28o%2B%28o%3Dzo%28u%3Di%2Ci%3Dn%5Bt%2B1%5D%29%29%29%2F2%3Breturn%20r%5Bt%5D%3Do%2Cr%7Dfunction%20Lo%28n%29%7Bfor%28var%20t%2Ce%2Cr%2Cu%2Ci%3D%5B%5D%2Co%3Dqo%28n%29%2Ca%3D%2D1%2Cc%3Dn%2Elength%2D1%3B%2B%2Ba%3Cc%3B%29t%3Dzo%28n%5Ba%5D%2Cn%5Ba%2B1%5D%29%2Cga%28t%29%3CCa%3Fo%5Ba%5D%3Do%5Ba%2B1%5D%3D0%3A%28e%3Do%5Ba%5D%2Ft%2Cr%3Do%5Ba%2B1%5D%2Ft%2Cu%3De%2Ae%2Br%2Ar%2Cu%3E9%26%26%28u%3D3%2At%2FMath%2Esqrt%28u%29%2Co%5Ba%5D%3Du%2Ae%2Co%5Ba%2B1%5D%3Du%2Ar%29%29%3Bfor%28a%3D%2D1%3B%2B%2Ba%3C%3Dc%3B%29u%3D%28n%5BMath%2Emin%28c%2Ca%2B1%29%5D%5B0%5D%2Dn%5BMath%2Emax%280%2Ca%2D1%29%5D%5B0%5D%29%2F%286%2A%281%2Bo%5Ba%5D%2Ao%5Ba%5D%29%29%2Ci%2Epush%28%5Bu%7C%7C0%2Co%5Ba%5D%2Au%7C%7C0%5D%29%3Breturn%20i%7Dfunction%20To%28n%29%7Breturn%20n%2Elength%3C3%3Fgo%28n%29%3An%5B0%5D%2B%5Fo%28n%2CLo%28n%29%29%7Dfunction%20Ro%28n%29%7Bfor%28var%20t%2Ce%2Cr%2Cu%3D%2D1%2Ci%3Dn%2Elength%3B%2B%2Bu%3Ci%3B%29t%3Dn%5Bu%5D%2Ce%3Dt%5B0%5D%2Cr%3Dt%5B1%5D%2DRa%2Ct%5B0%5D%3De%2AMath%2Ecos%28r%29%2Ct%5B1%5D%3De%2AMath%2Esin%28r%29%3Breturn%20n%7Dfunction%20Do%28n%29%7Bfunction%20t%28t%29%7Bfunction%20c%28%29%7Bv%2Epush%28%22M%22%2Ca%28n%28m%29%2Cf%29%2Cs%2Cl%28n%28d%2Ereverse%28%29%29%2Cf%29%2C%22Z%22%29%7Dfor%28var%20h%2Cg%2Cp%2Cv%3D%5B%5D%2Cd%3D%5B%5D%2Cm%3D%5B%5D%2Cy%3D%2D1%2CM%3Dt%2Elength%2Cx%3DEt%28e%29%2Cb%3DEt%28u%29%2C%5F%3De%3D%3D%3Dr%3Ffunction%28%29%7Breturn%20g%7D%3AEt%28r%29%2Cw%3Du%3D%3D%3Di%3Ffunction%28%29%7Breturn%20p%7D%3AEt%28i%29%3B%2B%2By%3CM%3B%29o%2Ecall%28this%2Ch%3Dt%5By%5D%2Cy%29%3F%28d%2Epush%28%5Bg%3D%2Bx%2Ecall%28this%2Ch%2Cy%29%2Cp%3D%2Bb%2Ecall%28this%2Ch%2Cy%29%5D%29%2Cm%2Epush%28%5B%2B%5F%2Ecall%28this%2Ch%2Cy%29%2C%2Bw%2Ecall%28this%2Ch%2Cy%29%5D%29%29%3Ad%2Elength%26%26%28c%28%29%2Cd%3D%5B%5D%2Cm%3D%5B%5D%29%3Breturn%20d%2Elength%26%26c%28%29%2Cv%2Elength%3Fv%2Ejoin%28%22%22%29%3Anull%7Dvar%20e%3DAr%2Cr%3DAr%2Cu%3D0%2Ci%3DNr%2Co%3DNe%2Ca%3Dgo%2Cc%3Da%2Ekey%2Cl%3Da%2Cs%3D%22L%22%2Cf%3D%2E7%3Breturn%20t%2Ex%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28e%3Dr%3Dn%2Ct%29%3Ar%7D%2Ct%2Ex0%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28e%3Dn%2Ct%29%3Ae%7D%2Ct%2Ex1%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28r%3Dn%2Ct%29%3Ar%0A%7D%2Ct%2Ey%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28u%3Di%3Dn%2Ct%29%3Ai%7D%2Ct%2Ey0%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28u%3Dn%2Ct%29%3Au%7D%2Ct%2Ey1%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28i%3Dn%2Ct%29%3Ai%7D%2Ct%2Edefined%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28o%3Dn%2Ct%29%3Ao%7D%2Ct%2Einterpolate%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28c%3D%22function%22%3D%3Dtypeof%20n%3Fa%3Dn%3A%28a%3DEl%2Eget%28n%29%7C%7Cgo%29%2Ekey%2Cl%3Da%2Ereverse%7C%7Ca%2Cs%3Da%2Eclosed%3F%22M%22%3A%22L%22%2Ct%29%3Ac%7D%2Ct%2Etension%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28f%3Dn%2Ct%29%3Af%7D%2Ct%7Dfunction%20Po%28n%29%7Breturn%20n%2Eradius%7Dfunction%20Uo%28n%29%7Breturn%5Bn%2Ex%2Cn%2Ey%5D%7Dfunction%20jo%28n%29%7Breturn%20function%28%29%7Bvar%20t%3Dn%2Eapply%28this%2Carguments%29%2Ce%3Dt%5B0%5D%2Cr%3Dt%5B1%5D%2DRa%3Breturn%5Be%2AMath%2Ecos%28r%29%2Ce%2AMath%2Esin%28r%29%5D%7D%7Dfunction%20Fo%28%29%7Breturn%2064%7Dfunction%20Ho%28%29%7Breturn%22circle%22%7Dfunction%20Oo%28n%29%7Bvar%20t%3DMath%2Esqrt%28n%2Fqa%29%3Breturn%22M0%2C%22%2Bt%2B%22A%22%2Bt%2B%22%2C%22%2Bt%2B%22%200%201%2C1%200%2C%22%2B%2Dt%2B%22A%22%2Bt%2B%22%2C%22%2Bt%2B%22%200%201%2C1%200%2C%22%2Bt%2B%22Z%22%7Dfunction%20Io%28n%29%7Breturn%20function%28%29%7Bvar%20t%2Ce%3B%28t%3Dthis%5Bn%5D%29%26%26%28e%3Dt%5Bt%2Eactive%5D%29%26%26%28%2D%2Dt%2Ecount%3Fdelete%20t%5Bt%2Eactive%5D%3Adelete%20this%5Bn%5D%2Ct%2Eactive%2B%3D%2E5%2Ce%2Eevent%26%26e%2Eevent%2Einterrupt%2Ecall%28this%2Cthis%2E%5F%5Fdata%5F%5F%2Ce%2Eindex%29%29%7D%7Dfunction%20Yo%28n%2Ct%2Ce%29%7Breturn%20ya%28n%2CPl%29%2Cn%2Enamespace%3Dt%2Cn%2Eid%3De%2Cn%7Dfunction%20Zo%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3Dn%2Eid%2Ci%3Dn%2Enamespace%3Breturn%20Y%28n%2C%22function%22%3D%3Dtypeof%20e%3Ffunction%28n%2Co%2Ca%29%7Bn%5Bi%5D%5Bu%5D%2Etween%2Eset%28t%2Cr%28e%2Ecall%28n%2Cn%2E%5F%5Fdata%5F%5F%2Co%2Ca%29%29%29%7D%3A%28e%3Dr%28e%29%2Cfunction%28n%29%7Bn%5Bi%5D%5Bu%5D%2Etween%2Eset%28t%2Ce%29%7D%29%29%7Dfunction%20Vo%28n%29%7Breturn%20null%3D%3Dn%26%26%28n%3D%22%22%29%2Cfunction%28%29%7Bthis%2EtextContent%3Dn%7D%7Dfunction%20Xo%28n%29%7Breturn%20null%3D%3Dn%3F%22%5F%5Ftransition%5F%5F%22%3A%22%5F%5Ftransition%5F%22%2Bn%2B%22%5F%5F%22%7Dfunction%20%24o%28n%2Ct%2Ce%2Cr%2Cu%29%7Bvar%20i%3Dn%5Be%5D%7C%7C%28n%5Be%5D%3D%7Bactive%3A0%2Ccount%3A0%7D%29%2Co%3Di%5Br%5D%3Bif%28%21o%29%7Bvar%20a%3Du%2Etime%3Bo%3Di%5Br%5D%3D%7Btween%3Anew%20l%2Ctime%3Aa%2Cdelay%3Au%2Edelay%2Cduration%3Au%2Eduration%2Cease%3Au%2Eease%2Cindex%3At%7D%2Cu%3Dnull%2C%2B%2Bi%2Ecount%2Cta%2Etimer%28function%28u%29%7Bfunction%20c%28e%29%7Bif%28i%2Eactive%3Er%29return%20s%28%29%3Bvar%20u%3Di%5Bi%2Eactive%5D%3Bu%26%26%28%2D%2Di%2Ecount%2Cdelete%20i%5Bi%2Eactive%5D%2Cu%2Eevent%26%26u%2Eevent%2Einterrupt%2Ecall%28n%2Cn%2E%5F%5Fdata%5F%5F%2Cu%2Eindex%29%29%2Ci%2Eactive%3Dr%2Co%2Eevent%26%26o%2Eevent%2Estart%2Ecall%28n%2Cn%2E%5F%5Fdata%5F%5F%2Ct%29%2Co%2Etween%2EforEach%28function%28e%2Cr%29%7B%28r%3Dr%2Ecall%28n%2Cn%2E%5F%5Fdata%5F%5F%2Ct%29%29%26%26v%2Epush%28r%29%7D%29%2Ch%3Do%2Eease%2Cf%3Do%2Eduration%2Cta%2Etimer%28function%28%29%7Breturn%20p%2Ec%3Dl%28e%7C%7C1%29%3FNe%3Al%2C1%7D%2C0%2Ca%29%7Dfunction%20l%28e%29%7Bif%28i%2Eactive%21%3D%3Dr%29return%201%3Bfor%28var%20u%3De%2Ff%2Ca%3Dh%28u%29%2Cc%3Dv%2Elength%3Bc%3E0%3B%29v%5B%2D%2Dc%5D%2Ecall%28n%2Ca%29%3Breturn%20u%3E%3D1%3F%28o%2Eevent%26%26o%2Eevent%2Eend%2Ecall%28n%2Cn%2E%5F%5Fdata%5F%5F%2Ct%29%2Cs%28%29%29%3Avoid%200%7Dfunction%20s%28%29%7Breturn%2D%2Di%2Ecount%3Fdelete%20i%5Br%5D%3Adelete%20n%5Be%5D%2C1%7Dvar%20f%2Ch%2Cg%3Do%2Edelay%2Cp%3Dec%2Cv%3D%5B%5D%3Breturn%20p%2Et%3Dg%2Ba%2Cu%3E%3Dg%3Fc%28u%2Dg%29%3Avoid%28p%2Ec%3Dc%29%7D%2C0%2Ca%29%7D%7Dfunction%20Bo%28n%2Ct%2Ce%29%7Bn%2Eattr%28%22transform%22%2Cfunction%28n%29%7Bvar%20r%3Dt%28n%29%3Breturn%22translate%28%22%2B%28isFinite%28r%29%3Fr%3Ae%28n%29%29%2B%22%2C0%29%22%7D%29%7Dfunction%20Wo%28n%2Ct%2Ce%29%7Bn%2Eattr%28%22transform%22%2Cfunction%28n%29%7Bvar%20r%3Dt%28n%29%3Breturn%22translate%280%2C%22%2B%28isFinite%28r%29%3Fr%3Ae%28n%29%29%2B%22%29%22%7D%29%7Dfunction%20Jo%28n%29%7Breturn%20n%2EtoISOString%28%29%7Dfunction%20Go%28n%2Ct%2Ce%29%7Bfunction%20r%28t%29%7Breturn%20n%28t%29%7Dfunction%20u%28n%2Ce%29%7Bvar%20r%3Dn%5B1%5D%2Dn%5B0%5D%2Cu%3Dr%2Fe%2Ci%3Dta%2Ebisect%28Vl%2Cu%29%3Breturn%20i%3D%3DVl%2Elength%3F%5Bt%2Eyear%2CVi%28n%2Emap%28function%28n%29%7Breturn%20n%2F31536e6%7D%29%2Ce%29%5B2%5D%5D%3Ai%3Ft%5Bu%2FVl%5Bi%2D1%5D%3CVl%5Bi%5D%2Fu%3Fi%2D1%3Ai%5D%3A%5BBl%2CVi%28n%2Ce%29%5B2%5D%5D%7Dreturn%20r%2Einvert%3Dfunction%28t%29%7Breturn%20Ko%28n%2Einvert%28t%29%29%7D%2Cr%2Edomain%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28n%2Edomain%28t%29%2Cr%29%3An%2Edomain%28%29%2Emap%28Ko%29%7D%2Cr%2Enice%3Dfunction%28n%2Ct%29%7Bfunction%20e%28e%29%7Breturn%21isNaN%28e%29%26%26%21n%2Erange%28e%2CKo%28%2Be%2B1%29%2Ct%29%2Elength%7Dvar%20i%3Dr%2Edomain%28%29%2Co%3DPi%28i%29%2Ca%3Dnull%3D%3Dn%3Fu%28o%2C10%29%3A%22number%22%3D%3Dtypeof%20n%26%26u%28o%2Cn%29%3Breturn%20a%26%26%28n%3Da%5B0%5D%2Ct%3Da%5B1%5D%29%2Cr%2Edomain%28Fi%28i%2Ct%3E1%3F%7Bfloor%3Afunction%28t%29%7Bfor%28%3Be%28t%3Dn%2Efloor%28t%29%29%3B%29t%3DKo%28t%2D1%29%3Breturn%20t%7D%2Cceil%3Afunction%28t%29%7Bfor%28%3Be%28t%3Dn%2Eceil%28t%29%29%3B%29t%3DKo%28%2Bt%2B1%29%3Breturn%20t%7D%7D%3An%29%29%7D%2Cr%2Eticks%3Dfunction%28n%2Ct%29%7Bvar%20e%3DPi%28r%2Edomain%28%29%29%2Ci%3Dnull%3D%3Dn%3Fu%28e%2C10%29%3A%22number%22%3D%3Dtypeof%20n%3Fu%28e%2Cn%29%3A%21n%2Erange%26%26%5B%7Brange%3An%7D%2Ct%5D%3Breturn%20i%26%26%28n%3Di%5B0%5D%2Ct%3Di%5B1%5D%29%2Cn%2Erange%28e%5B0%5D%2CKo%28%2Be%5B1%5D%2B1%29%2C1%3Et%3F1%3At%29%7D%2Cr%2EtickFormat%3Dfunction%28%29%7Breturn%20e%7D%2Cr%2Ecopy%3Dfunction%28%29%7Breturn%20Go%28n%2Ecopy%28%29%2Ct%2Ce%29%7D%2CYi%28r%2Cn%29%7Dfunction%20Ko%28n%29%7Breturn%20new%20Date%28n%29%7Dfunction%20Qo%28n%29%7Breturn%20JSON%2Eparse%28n%2EresponseText%29%7Dfunction%20na%28n%29%7Bvar%20t%3Dua%2EcreateRange%28%29%3Breturn%20t%2EselectNode%28ua%2Ebody%29%2Ct%2EcreateContextualFragment%28n%2EresponseText%29%7Dvar%20ta%3D%7Bversion%3A%223%2E5%2E5%22%7D%2Cea%3D%5B%5D%2Eslice%2Cra%3Dfunction%28n%29%7Breturn%20ea%2Ecall%28n%29%7D%2Cua%3Dthis%2Edocument%3Bif%28ua%29try%7Bra%28ua%2EdocumentElement%2EchildNodes%29%5B0%5D%2EnodeType%7Dcatch%28ia%29%7Bra%3Dfunction%28n%29%7Bfor%28var%20t%3Dn%2Elength%2Ce%3Dnew%20Array%28t%29%3Bt%2D%2D%3B%29e%5Bt%5D%3Dn%5Bt%5D%3Breturn%20e%7D%7Dif%28Date%2Enow%7C%7C%28Date%2Enow%3Dfunction%28%29%7Breturn%2Bnew%20Date%7D%29%2Cua%29try%7Bua%2EcreateElement%28%22DIV%22%29%2Estyle%2EsetProperty%28%22opacity%22%2C0%2C%22%22%29%7Dcatch%28oa%29%7Bvar%20aa%3Dthis%2EElement%2Eprototype%2Cca%3Daa%2EsetAttribute%2Cla%3Daa%2EsetAttributeNS%2Csa%3Dthis%2ECSSStyleDeclaration%2Eprototype%2Cfa%3Dsa%2EsetProperty%3Baa%2EsetAttribute%3Dfunction%28n%2Ct%29%7Bca%2Ecall%28this%2Cn%2Ct%2B%22%22%29%7D%2Caa%2EsetAttributeNS%3Dfunction%28n%2Ct%2Ce%29%7Bla%2Ecall%28this%2Cn%2Ct%2Ce%2B%22%22%29%7D%2Csa%2EsetProperty%3Dfunction%28n%2Ct%2Ce%29%7Bfa%2Ecall%28this%2Cn%2Ct%2B%22%22%2Ce%29%7D%7Dta%2Eascending%3De%2Cta%2Edescending%3Dfunction%28n%2Ct%29%7Breturn%20n%3Et%3F%2D1%3At%3En%3F1%3At%3E%3Dn%3F0%3A0%2F0%7D%2Cta%2Emin%3Dfunction%28n%2Ct%29%7Bvar%20e%2Cr%2Cu%3D%2D1%2Ci%3Dn%2Elength%3Bif%281%3D%3D%3Darguments%2Elength%29%7Bfor%28%3B%2B%2Bu%3Ci%3B%29if%28null%21%3D%28r%3Dn%5Bu%5D%29%26%26r%3E%3Dr%29%7Be%3Dr%3Bbreak%7Dfor%28%3B%2B%2Bu%3Ci%3B%29null%21%3D%28r%3Dn%5Bu%5D%29%26%26e%3Er%26%26%28e%3Dr%29%7Delse%7Bfor%28%3B%2B%2Bu%3Ci%3B%29if%28null%21%3D%28r%3Dt%2Ecall%28n%2Cn%5Bu%5D%2Cu%29%29%26%26r%3E%3Dr%29%7Be%3Dr%3Bbreak%7Dfor%28%3B%2B%2Bu%3Ci%3B%29null%21%3D%28r%3Dt%2Ecall%28n%2Cn%5Bu%5D%2Cu%29%29%26%26e%3Er%26%26%28e%3Dr%29%7Dreturn%20e%7D%2Cta%2Emax%3Dfunction%28n%2Ct%29%7Bvar%20e%2Cr%2Cu%3D%2D1%2Ci%3Dn%2Elength%3Bif%281%3D%3D%3Darguments%2Elength%29%7Bfor%28%3B%2B%2Bu%3Ci%3B%29if%28null%21%3D%28r%3Dn%5Bu%5D%29%26%26r%3E%3Dr%29%7Be%3Dr%3Bbreak%7Dfor%28%3B%2B%2Bu%3Ci%3B%29null%21%3D%28r%3Dn%5Bu%5D%29%26%26r%3Ee%26%26%28e%3Dr%29%7Delse%7Bfor%28%3B%2B%2Bu%3Ci%3B%29if%28null%21%3D%28r%3Dt%2Ecall%28n%2Cn%5Bu%5D%2Cu%29%29%26%26r%3E%3Dr%29%7Be%3Dr%3Bbreak%7Dfor%28%3B%2B%2Bu%3Ci%3B%29null%21%3D%28r%3Dt%2Ecall%28n%2Cn%5Bu%5D%2Cu%29%29%26%26r%3Ee%26%26%28e%3Dr%29%7Dreturn%20e%7D%2Cta%2Eextent%3Dfunction%28n%2Ct%29%7Bvar%20e%2Cr%2Cu%2Ci%3D%2D1%2Co%3Dn%2Elength%3Bif%281%3D%3D%3Darguments%2Elength%29%7Bfor%28%3B%2B%2Bi%3Co%3B%29if%28null%21%3D%28r%3Dn%5Bi%5D%29%26%26r%3E%3Dr%29%7Be%3Du%3Dr%3Bbreak%7Dfor%28%3B%2B%2Bi%3Co%3B%29null%21%3D%28r%3Dn%5Bi%5D%29%26%26%28e%3Er%26%26%28e%3Dr%29%2Cr%3Eu%26%26%28u%3Dr%29%29%7Delse%7Bfor%28%3B%2B%2Bi%3Co%3B%29if%28null%21%3D%28r%3Dt%2Ecall%28n%2Cn%5Bi%5D%2Ci%29%29%26%26r%3E%3Dr%29%7Be%3Du%3Dr%3Bbreak%7Dfor%28%3B%2B%2Bi%3Co%3B%29null%21%3D%28r%3Dt%2Ecall%28n%2Cn%5Bi%5D%2Ci%29%29%26%26%28e%3Er%26%26%28e%3Dr%29%2Cr%3Eu%26%26%28u%3Dr%29%29%7Dreturn%5Be%2Cu%5D%7D%2Cta%2Esum%3Dfunction%28n%2Ct%29%7Bvar%20e%2Cr%3D0%2Ci%3Dn%2Elength%2Co%3D%2D1%3Bif%281%3D%3D%3Darguments%2Elength%29for%28%3B%2B%2Bo%3Ci%3B%29u%28e%3D%2Bn%5Bo%5D%29%26%26%28r%2B%3De%29%3Belse%20for%28%3B%2B%2Bo%3Ci%3B%29u%28e%3D%2Bt%2Ecall%28n%2Cn%5Bo%5D%2Co%29%29%26%26%28r%2B%3De%29%3Breturn%20r%7D%2Cta%2Emean%3Dfunction%28n%2Ct%29%7Bvar%20e%2Ci%3D0%2Co%3Dn%2Elength%2Ca%3D%2D1%2Cc%3Do%3Bif%281%3D%3D%3Darguments%2Elength%29for%28%3B%2B%2Ba%3Co%3B%29u%28e%3Dr%28n%5Ba%5D%29%29%3Fi%2B%3De%3A%2D%2Dc%3Belse%20for%28%3B%2B%2Ba%3Co%3B%29u%28e%3Dr%28t%2Ecall%28n%2Cn%5Ba%5D%2Ca%29%29%29%3Fi%2B%3De%3A%2D%2Dc%3Breturn%20c%3Fi%2Fc%3Avoid%200%7D%2Cta%2Equantile%3Dfunction%28n%2Ct%29%7Bvar%20e%3D%28n%2Elength%2D1%29%2At%2B1%2Cr%3DMath%2Efloor%28e%29%2Cu%3D%2Bn%5Br%2D1%5D%2Ci%3De%2Dr%3Breturn%20i%3Fu%2Bi%2A%28n%5Br%5D%2Du%29%3Au%7D%2Cta%2Emedian%3Dfunction%28n%2Ct%29%7Bvar%20i%2Co%3D%5B%5D%2Ca%3Dn%2Elength%2Cc%3D%2D1%3Bif%281%3D%3D%3Darguments%2Elength%29for%28%3B%2B%2Bc%3Ca%3B%29u%28i%3Dr%28n%5Bc%5D%29%29%26%26o%2Epush%28i%29%3Belse%20for%28%3B%2B%2Bc%3Ca%3B%29u%28i%3Dr%28t%2Ecall%28n%2Cn%5Bc%5D%2Cc%29%29%29%26%26o%2Epush%28i%29%3Breturn%20o%2Elength%3Fta%2Equantile%28o%2Esort%28e%29%2C%2E5%29%3Avoid%200%7D%2Cta%2Evariance%3Dfunction%28n%2Ct%29%7Bvar%20e%2Ci%2Co%3Dn%2Elength%2Ca%3D0%2Cc%3D0%2Cl%3D%2D1%2Cs%3D0%3Bif%281%3D%3D%3Darguments%2Elength%29for%28%3B%2B%2Bl%3Co%3B%29u%28e%3Dr%28n%5Bl%5D%29%29%26%26%28i%3De%2Da%2Ca%2B%3Di%2F%2B%2Bs%2Cc%2B%3Di%2A%28e%2Da%29%29%3Belse%20for%28%3B%2B%2Bl%3Co%3B%29u%28e%3Dr%28t%2Ecall%28n%2Cn%5Bl%5D%2Cl%29%29%29%26%26%28i%3De%2Da%2Ca%2B%3Di%2F%2B%2Bs%2Cc%2B%3Di%2A%28e%2Da%29%29%3Breturn%20s%3E1%3Fc%2F%28s%2D1%29%3Avoid%200%7D%2Cta%2Edeviation%3Dfunction%28%29%7Bvar%20n%3Dta%2Evariance%2Eapply%28this%2Carguments%29%3Breturn%20n%3FMath%2Esqrt%28n%29%3An%7D%3Bvar%20ha%3Di%28e%29%3Bta%2EbisectLeft%3Dha%2Eleft%2Cta%2Ebisect%3Dta%2EbisectRight%3Dha%2Eright%2Cta%2Ebisector%3Dfunction%28n%29%7Breturn%20i%281%3D%3D%3Dn%2Elength%3Ffunction%28t%2Cr%29%7Breturn%20e%28n%28t%29%2Cr%29%7D%3An%29%7D%2Cta%2Eshuffle%3Dfunction%28n%2Ct%2Ce%29%7B%28i%3Darguments%2Elength%29%3C3%26%26%28e%3Dn%2Elength%2C2%3Ei%26%26%28t%3D0%29%29%3Bfor%28var%20r%2Cu%2Ci%3De%2Dt%3Bi%3B%29u%3DMath%2Erandom%28%29%2Ai%2D%2D%7C0%2Cr%3Dn%5Bi%2Bt%5D%2Cn%5Bi%2Bt%5D%3Dn%5Bu%2Bt%5D%2Cn%5Bu%2Bt%5D%3Dr%3Breturn%20n%7D%2Cta%2Epermute%3Dfunction%28n%2Ct%29%7Bfor%28var%20e%3Dt%2Elength%2Cr%3Dnew%20Array%28e%29%3Be%2D%2D%3B%29r%5Be%5D%3Dn%5Bt%5Be%5D%5D%3Breturn%20r%7D%2Cta%2Epairs%3Dfunction%28n%29%7Bfor%28var%20t%2Ce%3D0%2Cr%3Dn%2Elength%2D1%2Cu%3Dn%5B0%5D%2Ci%3Dnew%20Array%280%3Er%3F0%3Ar%29%3Br%3Ee%3B%29i%5Be%5D%3D%5Bt%3Du%2Cu%3Dn%5B%2B%2Be%5D%5D%3Breturn%20i%7D%2Cta%2Ezip%3Dfunction%28%29%7Bif%28%21%28r%3Darguments%2Elength%29%29return%5B%5D%3Bfor%28var%20n%3D%2D1%2Ct%3Dta%2Emin%28arguments%2Co%29%2Ce%3Dnew%20Array%28t%29%3B%2B%2Bn%3Ct%3B%29for%28var%20r%2Cu%3D%2D1%2Ci%3De%5Bn%5D%3Dnew%20Array%28r%29%3B%2B%2Bu%3Cr%3B%29i%5Bu%5D%3Darguments%5Bu%5D%5Bn%5D%3Breturn%20e%7D%2Cta%2Etranspose%3Dfunction%28n%29%7Breturn%20ta%2Ezip%2Eapply%28ta%2Cn%29%7D%2Cta%2Ekeys%3Dfunction%28n%29%7Bvar%20t%3D%5B%5D%3Bfor%28var%20e%20in%20n%29t%2Epush%28e%29%3Breturn%20t%7D%2Cta%2Evalues%3Dfunction%28n%29%7Bvar%20t%3D%5B%5D%3Bfor%28var%20e%20in%20n%29t%2Epush%28n%5Be%5D%29%3Breturn%20t%7D%2Cta%2Eentries%3Dfunction%28n%29%7Bvar%20t%3D%5B%5D%3Bfor%28var%20e%20in%20n%29t%2Epush%28%7Bkey%3Ae%2Cvalue%3An%5Be%5D%7D%29%3Breturn%20t%7D%2Cta%2Emerge%3Dfunction%28n%29%7Bfor%28var%20t%2Ce%2Cr%2Cu%3Dn%2Elength%2Ci%3D%2D1%2Co%3D0%3B%2B%2Bi%3Cu%3B%29o%2B%3Dn%5Bi%5D%2Elength%3Bfor%28e%3Dnew%20Array%28o%29%3B%2D%2Du%3E%3D0%3B%29for%28r%3Dn%5Bu%5D%2Ct%3Dr%2Elength%3B%2D%2Dt%3E%3D0%3B%29e%5B%2D%2Do%5D%3Dr%5Bt%5D%3Breturn%20e%7D%3Bvar%20ga%3DMath%2Eabs%3Bta%2Erange%3Dfunction%28n%2Ct%2Ce%29%7Bif%28arguments%2Elength%3C3%26%26%28e%3D1%2Carguments%2Elength%3C2%26%26%28t%3Dn%2Cn%3D0%29%29%2C%28t%2Dn%29%2Fe%3D%3D%3D1%2F0%29throw%20new%20Error%28%22infinite%20range%22%29%3Bvar%20r%2Cu%3D%5B%5D%2Ci%3Da%28ga%28e%29%29%2Co%3D%2D1%3Bif%28n%2A%3Di%2Ct%2A%3Di%2Ce%2A%3Di%2C0%3Ee%29for%28%3B%28r%3Dn%2Be%2A%2B%2Bo%29%3Et%3B%29u%2Epush%28r%2Fi%29%3Belse%20for%28%3B%28r%3Dn%2Be%2A%2B%2Bo%29%3Ct%3B%29u%2Epush%28r%2Fi%29%3Breturn%20u%7D%2Cta%2Emap%3Dfunction%28n%2Ct%29%7Bvar%20e%3Dnew%20l%3Bif%28n%20instanceof%20l%29n%2EforEach%28function%28n%2Ct%29%7Be%2Eset%28n%2Ct%29%7D%29%3Belse%20if%28Array%2EisArray%28n%29%29%7Bvar%20r%2Cu%3D%2D1%2Ci%3Dn%2Elength%3Bif%281%3D%3D%3Darguments%2Elength%29for%28%3B%2B%2Bu%3Ci%3B%29e%2Eset%28u%2Cn%5Bu%5D%29%3Belse%20for%28%3B%2B%2Bu%3Ci%3B%29e%2Eset%28t%2Ecall%28n%2Cr%3Dn%5Bu%5D%2Cu%29%2Cr%29%7Delse%20for%28var%20o%20in%20n%29e%2Eset%28o%2Cn%5Bo%5D%29%3Breturn%20e%7D%3Bvar%20pa%3D%22%5F%5Fproto%5F%5F%22%2Cva%3D%22%5Cx00%22%3Bc%28l%2C%7Bhas%3Ah%2Cget%3Afunction%28n%29%7Breturn%20this%2E%5F%5Bs%28n%29%5D%7D%2Cset%3Afunction%28n%2Ct%29%7Breturn%20this%2E%5F%5Bs%28n%29%5D%3Dt%7D%2Cremove%3Ag%2Ckeys%3Ap%2Cvalues%3Afunction%28%29%7Bvar%20n%3D%5B%5D%3Bfor%28var%20t%20in%20this%2E%5F%29n%2Epush%28this%2E%5F%5Bt%5D%29%3Breturn%20n%7D%2Centries%3Afunction%28%29%7Bvar%20n%3D%5B%5D%3Bfor%28var%20t%20in%20this%2E%5F%29n%2Epush%28%7Bkey%3Af%28t%29%2Cvalue%3Athis%2E%5F%5Bt%5D%7D%29%3Breturn%20n%7D%2Csize%3Av%2Cempty%3Ad%2CforEach%3Afunction%28n%29%7Bfor%28var%20t%20in%20this%2E%5F%29n%2Ecall%28this%2Cf%28t%29%2Cthis%2E%5F%5Bt%5D%29%7D%7D%29%2Cta%2Enest%3Dfunction%28%29%7Bfunction%20n%28t%2Co%2Ca%29%7Bif%28a%3E%3Di%2Elength%29return%20r%3Fr%2Ecall%28u%2Co%29%3Ae%3Fo%2Esort%28e%29%3Ao%3Bfor%28var%20c%2Cs%2Cf%2Ch%2Cg%3D%2D1%2Cp%3Do%2Elength%2Cv%3Di%5Ba%2B%2B%5D%2Cd%3Dnew%20l%3B%2B%2Bg%3Cp%3B%29%28h%3Dd%2Eget%28c%3Dv%28s%3Do%5Bg%5D%29%29%29%3Fh%2Epush%28s%29%3Ad%2Eset%28c%2C%5Bs%5D%29%3Breturn%20t%3F%28s%3Dt%28%29%2Cf%3Dfunction%28e%2Cr%29%7Bs%2Eset%28e%2Cn%28t%2Cr%2Ca%29%29%7D%29%3A%28s%3D%7B%7D%2Cf%3Dfunction%28e%2Cr%29%7Bs%5Be%5D%3Dn%28t%2Cr%2Ca%29%7D%29%2Cd%2EforEach%28f%29%2Cs%7Dfunction%20t%28n%2Ce%29%7Bif%28e%3E%3Di%2Elength%29return%20n%3Bvar%20r%3D%5B%5D%2Cu%3Do%5Be%2B%2B%5D%3Breturn%20n%2EforEach%28function%28n%2Cu%29%7Br%2Epush%28%7Bkey%3An%2Cvalues%3At%28u%2Ce%29%7D%29%7D%29%2Cu%3Fr%2Esort%28function%28n%2Ct%29%7Breturn%20u%28n%2Ekey%2Ct%2Ekey%29%7D%29%3Ar%7Dvar%20e%2Cr%2Cu%3D%7B%7D%2Ci%3D%5B%5D%2Co%3D%5B%5D%3Breturn%20u%2Emap%3Dfunction%28t%2Ce%29%7Breturn%20n%28e%2Ct%2C0%29%7D%2Cu%2Eentries%3Dfunction%28e%29%7Breturn%20t%28n%28ta%2Emap%2Ce%2C0%29%2C0%29%7D%2Cu%2Ekey%3Dfunction%28n%29%7Breturn%20i%2Epush%28n%29%2Cu%7D%2Cu%2EsortKeys%3Dfunction%28n%29%7Breturn%20o%5Bi%2Elength%2D1%5D%3Dn%2Cu%7D%2Cu%2EsortValues%3Dfunction%28n%29%7Breturn%20e%3Dn%2Cu%7D%2Cu%2Erollup%3Dfunction%28n%29%7Breturn%20r%3Dn%2Cu%7D%2Cu%7D%2Cta%2Eset%3Dfunction%28n%29%7Bvar%20t%3Dnew%20m%3Bif%28n%29for%28var%20e%3D0%2Cr%3Dn%2Elength%3Br%3Ee%3B%2B%2Be%29t%2Eadd%28n%5Be%5D%29%3Breturn%20t%7D%2Cc%28m%2C%7Bhas%3Ah%2Cadd%3Afunction%28n%29%7Breturn%20this%2E%5F%5Bs%28n%2B%3D%22%22%29%5D%3D%210%2Cn%7D%2Cremove%3Ag%2Cvalues%3Ap%2Csize%3Av%2Cempty%3Ad%2CforEach%3Afunction%28n%29%7Bfor%28var%20t%20in%20this%2E%5F%29n%2Ecall%28this%2Cf%28t%29%29%7D%7D%29%2Cta%2Ebehavior%3D%7B%7D%2Cta%2Erebind%3Dfunction%28n%2Ct%29%7Bfor%28var%20e%2Cr%3D1%2Cu%3Darguments%2Elength%3B%2B%2Br%3Cu%3B%29n%5Be%3Darguments%5Br%5D%5D%3DM%28n%2Ct%2Ct%5Be%5D%29%3Breturn%20n%7D%3Bvar%20da%3D%5B%22webkit%22%2C%22ms%22%2C%22moz%22%2C%22Moz%22%2C%22o%22%2C%22O%22%5D%3Bta%2Edispatch%3Dfunction%28%29%7Bfor%28var%20n%3Dnew%20%5F%2Ct%3D%2D1%2Ce%3Darguments%2Elength%3B%2B%2Bt%3Ce%3B%29n%5Barguments%5Bt%5D%5D%3Dw%28n%29%3Breturn%20n%7D%2C%5F%2Eprototype%2Eon%3Dfunction%28n%2Ct%29%7Bvar%20e%3Dn%2EindexOf%28%22%2E%22%29%2Cr%3D%22%22%3Bif%28e%3E%3D0%26%26%28r%3Dn%2Eslice%28e%2B1%29%2Cn%3Dn%2Eslice%280%2Ce%29%29%2Cn%29return%20arguments%2Elength%3C2%3Fthis%5Bn%5D%2Eon%28r%29%3Athis%5Bn%5D%2Eon%28r%2Ct%29%3Bif%282%3D%3D%3Darguments%2Elength%29%7Bif%28null%3D%3Dt%29for%28n%20in%20this%29this%2EhasOwnProperty%28n%29%26%26this%5Bn%5D%2Eon%28r%2Cnull%29%3Breturn%20this%7D%7D%2Cta%2Eevent%3Dnull%2Cta%2Erequote%3Dfunction%28n%29%7Breturn%20n%2Ereplace%28ma%2C%22%5C%5C%24%26%22%29%7D%3Bvar%20ma%3D%2F%5B%5C%5C%5C%5E%5C%24%5C%2A%5C%2B%5C%3F%5C%7C%5C%5B%5C%5D%5C%28%5C%29%5C%2E%5C%7B%5C%7D%5D%2Fg%2Cya%3D%7B%7D%2E%5F%5Fproto%5F%5F%3Ffunction%28n%2Ct%29%7Bn%2E%5F%5Fproto%5F%5F%3Dt%7D%3Afunction%28n%2Ct%29%7Bfor%28var%20e%20in%20t%29n%5Be%5D%3Dt%5Be%5D%7D%2CMa%3Dfunction%28n%2Ct%29%7Breturn%20t%2EquerySelector%28n%29%7D%2Cxa%3Dfunction%28n%2Ct%29%7Breturn%20t%2EquerySelectorAll%28n%29%7D%2Cba%3Dfunction%28n%2Ct%29%7Bvar%20e%3Dn%2Ematches%7C%7Cn%5Bx%28n%2C%22matchesSelector%22%29%5D%3Breturn%28ba%3Dfunction%28n%2Ct%29%7Breturn%20e%2Ecall%28n%2Ct%29%7D%29%28n%2Ct%29%7D%3B%22function%22%3D%3Dtypeof%20Sizzle%26%26%28Ma%3Dfunction%28n%2Ct%29%7Breturn%20Sizzle%28n%2Ct%29%5B0%5D%7C%7Cnull%7D%2Cxa%3DSizzle%2Cba%3DSizzle%2EmatchesSelector%29%2Cta%2Eselection%3Dfunction%28%29%7Breturn%20ta%2Eselect%28ua%2EdocumentElement%29%7D%3Bvar%20%5Fa%3Dta%2Eselection%2Eprototype%3D%5B%5D%3B%5Fa%2Eselect%3Dfunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%2Ci%3D%5B%5D%3Bn%3DN%28n%29%3Bfor%28var%20o%3D%2D1%2Ca%3Dthis%2Elength%3B%2B%2Bo%3Ca%3B%29%7Bi%2Epush%28t%3D%5B%5D%29%2Ct%2EparentNode%3D%28r%3Dthis%5Bo%5D%29%2EparentNode%3Bfor%28var%20c%3D%2D1%2Cl%3Dr%2Elength%3B%2B%2Bc%3Cl%3B%29%28u%3Dr%5Bc%5D%29%3F%28t%2Epush%28e%3Dn%2Ecall%28u%2Cu%2E%5F%5Fdata%5F%5F%2Cc%2Co%29%29%2Ce%26%26%22%5F%5Fdata%5F%5F%22in%20u%26%26%28e%2E%5F%5Fdata%5F%5F%3Du%2E%5F%5Fdata%5F%5F%29%29%3At%2Epush%28null%29%7Dreturn%20A%28i%29%7D%2C%5Fa%2EselectAll%3Dfunction%28n%29%7Bvar%20t%2Ce%2Cr%3D%5B%5D%3Bn%3DC%28n%29%3Bfor%28var%20u%3D%2D1%2Ci%3Dthis%2Elength%3B%2B%2Bu%3Ci%3B%29for%28var%20o%3Dthis%5Bu%5D%2Ca%3D%2D1%2Cc%3Do%2Elength%3B%2B%2Ba%3Cc%3B%29%28e%3Do%5Ba%5D%29%26%26%28r%2Epush%28t%3Dra%28n%2Ecall%28e%2Ce%2E%5F%5Fdata%5F%5F%2Ca%2Cu%29%29%29%2Ct%2EparentNode%3De%29%3Breturn%20A%28r%29%7D%3Bvar%20wa%3D%7Bsvg%3A%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F2000%2Fsvg%22%2Cxhtml%3A%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F1999%2Fxhtml%22%2Cxlink%3A%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F1999%2Fxlink%22%2Cxml%3A%22http%3A%2F%2Fwww%2Ew3%2Eorg%2FXML%2F1998%2Fnamespace%22%2Cxmlns%3A%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F2000%2Fxmlns%2F%22%7D%3Bta%2Ens%3D%7Bprefix%3Awa%2Cqualify%3Afunction%28n%29%7Bvar%20t%3Dn%2EindexOf%28%22%3A%22%29%2Ce%3Dn%3Breturn%20t%3E%3D0%26%26%28e%3Dn%2Eslice%280%2Ct%29%2Cn%3Dn%2Eslice%28t%2B1%29%29%2Cwa%2EhasOwnProperty%28e%29%3F%7Bspace%3Awa%5Be%5D%2Clocal%3An%7D%3An%7D%7D%2C%5Fa%2Eattr%3Dfunction%28n%2Ct%29%7Bif%28arguments%2Elength%3C2%29%7Bif%28%22string%22%3D%3Dtypeof%20n%29%7Bvar%20e%3Dthis%2Enode%28%29%3Breturn%20n%3Dta%2Ens%2Equalify%28n%29%2Cn%2Elocal%3Fe%2EgetAttributeNS%28n%2Espace%2Cn%2Elocal%29%3Ae%2EgetAttribute%28n%29%7Dfor%28t%20in%20n%29this%2Eeach%28z%28t%2Cn%5Bt%5D%29%29%3Breturn%20this%7Dreturn%20this%2Eeach%28z%28n%2Ct%29%29%7D%2C%5Fa%2Eclassed%3Dfunction%28n%2Ct%29%7Bif%28arguments%2Elength%3C2%29%7Bif%28%22string%22%3D%3Dtypeof%20n%29%7Bvar%20e%3Dthis%2Enode%28%29%2Cr%3D%28n%3DT%28n%29%29%2Elength%2Cu%3D%2D1%3Bif%28t%3De%2EclassList%29%7Bfor%28%3B%2B%2Bu%3Cr%3B%29if%28%21t%2Econtains%28n%5Bu%5D%29%29return%211%7Delse%20for%28t%3De%2EgetAttribute%28%22class%22%29%3B%2B%2Bu%3Cr%3B%29if%28%21L%28n%5Bu%5D%29%2Etest%28t%29%29return%211%3Breturn%210%7Dfor%28t%20in%20n%29this%2Eeach%28R%28t%2Cn%5Bt%5D%29%29%3Breturn%20this%7Dreturn%20this%2Eeach%28R%28n%2Ct%29%29%7D%2C%5Fa%2Estyle%3Dfunction%28n%2Ce%2Cr%29%7Bvar%20u%3Darguments%2Elength%3Bif%283%3Eu%29%7Bif%28%22string%22%21%3Dtypeof%20n%29%7B2%3Eu%26%26%28e%3D%22%22%29%3Bfor%28r%20in%20n%29this%2Eeach%28P%28r%2Cn%5Br%5D%2Ce%29%29%3Breturn%20this%7Dif%282%3Eu%29%7Bvar%20i%3Dthis%2Enode%28%29%3Breturn%20t%28i%29%2EgetComputedStyle%28i%2Cnull%29%2EgetPropertyValue%28n%29%7Dr%3D%22%22%7Dreturn%20this%2Eeach%28P%28n%2Ce%2Cr%29%29%7D%2C%5Fa%2Eproperty%3Dfunction%28n%2Ct%29%7Bif%28arguments%2Elength%3C2%29%7Bif%28%22string%22%3D%3Dtypeof%20n%29return%20this%2Enode%28%29%5Bn%5D%3Bfor%28t%20in%20n%29this%2Eeach%28U%28t%2Cn%5Bt%5D%29%29%3Breturn%20this%7Dreturn%20this%2Eeach%28U%28n%2Ct%29%29%7D%2C%5Fa%2Etext%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3Fthis%2Eeach%28%22function%22%3D%3Dtypeof%20n%3Ffunction%28%29%7Bvar%20t%3Dn%2Eapply%28this%2Carguments%29%3Bthis%2EtextContent%3Dnull%3D%3Dt%3F%22%22%3At%7D%3Anull%3D%3Dn%3Ffunction%28%29%7Bthis%2EtextContent%3D%22%22%7D%3Afunction%28%29%7Bthis%2EtextContent%3Dn%7D%29%3Athis%2Enode%28%29%2EtextContent%7D%2C%5Fa%2Ehtml%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3Fthis%2Eeach%28%22function%22%3D%3Dtypeof%20n%3Ffunction%28%29%7Bvar%20t%3Dn%2Eapply%28this%2Carguments%29%3Bthis%2EinnerHTML%3Dnull%3D%3Dt%3F%22%22%3At%7D%3Anull%3D%3Dn%3Ffunction%28%29%7Bthis%2EinnerHTML%3D%22%22%7D%3Afunction%28%29%7Bthis%2EinnerHTML%3Dn%7D%29%3Athis%2Enode%28%29%2EinnerHTML%7D%2C%5Fa%2Eappend%3Dfunction%28n%29%7Breturn%20n%3Dj%28n%29%2Cthis%2Eselect%28function%28%29%7Breturn%20this%2EappendChild%28n%2Eapply%28this%2Carguments%29%29%7D%29%7D%2C%5Fa%2Einsert%3Dfunction%28n%2Ct%29%7Breturn%20n%3Dj%28n%29%2Ct%3DN%28t%29%2Cthis%2Eselect%28function%28%29%7Breturn%20this%2EinsertBefore%28n%2Eapply%28this%2Carguments%29%2Ct%2Eapply%28this%2Carguments%29%7C%7Cnull%29%7D%29%7D%2C%5Fa%2Eremove%3Dfunction%28%29%7Breturn%20this%2Eeach%28F%29%7D%2C%5Fa%2Edata%3Dfunction%28n%2Ct%29%7Bfunction%20e%28n%2Ce%29%7Bvar%20r%2Cu%2Ci%2Co%3Dn%2Elength%2Cf%3De%2Elength%2Ch%3DMath%2Emin%28o%2Cf%29%2Cg%3Dnew%20Array%28f%29%2Cp%3Dnew%20Array%28f%29%2Cv%3Dnew%20Array%28o%29%3Bif%28t%29%7Bvar%20d%2Cm%3Dnew%20l%2Cy%3Dnew%20Array%28o%29%3Bfor%28r%3D%2D1%3B%2B%2Br%3Co%3B%29m%2Ehas%28d%3Dt%2Ecall%28u%3Dn%5Br%5D%2Cu%2E%5F%5Fdata%5F%5F%2Cr%29%29%3Fv%5Br%5D%3Du%3Am%2Eset%28d%2Cu%29%2Cy%5Br%5D%3Dd%3Bfor%28r%3D%2D1%3B%2B%2Br%3Cf%3B%29%28u%3Dm%2Eget%28d%3Dt%2Ecall%28e%2Ci%3De%5Br%5D%2Cr%29%29%29%3Fu%21%3D%3D%210%26%26%28g%5Br%5D%3Du%2Cu%2E%5F%5Fdata%5F%5F%3Di%29%3Ap%5Br%5D%3DH%28i%29%2Cm%2Eset%28d%2C%210%29%3Bfor%28r%3D%2D1%3B%2B%2Br%3Co%3B%29m%2Eget%28y%5Br%5D%29%21%3D%3D%210%26%26%28v%5Br%5D%3Dn%5Br%5D%29%7Delse%7Bfor%28r%3D%2D1%3B%2B%2Br%3Ch%3B%29u%3Dn%5Br%5D%2Ci%3De%5Br%5D%2Cu%3F%28u%2E%5F%5Fdata%5F%5F%3Di%2Cg%5Br%5D%3Du%29%3Ap%5Br%5D%3DH%28i%29%3Bfor%28%3Bf%3Er%3B%2B%2Br%29p%5Br%5D%3DH%28e%5Br%5D%29%3Bfor%28%3Bo%3Er%3B%2B%2Br%29v%5Br%5D%3Dn%5Br%5D%7Dp%2Eupdate%3Dg%2Cp%2EparentNode%3Dg%2EparentNode%3Dv%2EparentNode%3Dn%2EparentNode%2Ca%2Epush%28p%29%2Cc%2Epush%28g%29%2Cs%2Epush%28v%29%7Dvar%20r%2Cu%2Ci%3D%2D1%2Co%3Dthis%2Elength%3Bif%28%21arguments%2Elength%29%7Bfor%28n%3Dnew%20Array%28o%3D%28r%3Dthis%5B0%5D%29%2Elength%29%3B%2B%2Bi%3Co%3B%29%28u%3Dr%5Bi%5D%29%26%26%28n%5Bi%5D%3Du%2E%5F%5Fdata%5F%5F%29%3Breturn%20n%7Dvar%20a%3DZ%28%5B%5D%29%2Cc%3DA%28%5B%5D%29%2Cs%3DA%28%5B%5D%29%3Bif%28%22function%22%3D%3Dtypeof%20n%29for%28%3B%2B%2Bi%3Co%3B%29e%28r%3Dthis%5Bi%5D%2Cn%2Ecall%28r%2Cr%2EparentNode%2E%5F%5Fdata%5F%5F%2Ci%29%29%3Belse%20for%28%3B%2B%2Bi%3Co%3B%29e%28r%3Dthis%5Bi%5D%2Cn%29%3Breturn%20c%2Eenter%3Dfunction%28%29%7Breturn%20a%7D%2Cc%2Eexit%3Dfunction%28%29%7Breturn%20s%7D%2Cc%7D%2C%5Fa%2Edatum%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3Fthis%2Eproperty%28%22%5F%5Fdata%5F%5F%22%2Cn%29%3Athis%2Eproperty%28%22%5F%5Fdata%5F%5F%22%29%7D%2C%5Fa%2Efilter%3Dfunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%3D%5B%5D%3B%22function%22%21%3Dtypeof%20n%26%26%28n%3DO%28n%29%29%3Bfor%28var%20i%3D0%2Co%3Dthis%2Elength%3Bo%3Ei%3Bi%2B%2B%29%7Bu%2Epush%28t%3D%5B%5D%29%2Ct%2EparentNode%3D%28e%3Dthis%5Bi%5D%29%2EparentNode%3Bfor%28var%20a%3D0%2Cc%3De%2Elength%3Bc%3Ea%3Ba%2B%2B%29%28r%3De%5Ba%5D%29%26%26n%2Ecall%28r%2Cr%2E%5F%5Fdata%5F%5F%2Ca%2Ci%29%26%26t%2Epush%28r%29%7Dreturn%20A%28u%29%7D%2C%5Fa%2Eorder%3Dfunction%28%29%7Bfor%28var%20n%3D%2D1%2Ct%3Dthis%2Elength%3B%2B%2Bn%3Ct%3B%29for%28var%20e%2Cr%3Dthis%5Bn%5D%2Cu%3Dr%2Elength%2D1%2Ci%3Dr%5Bu%5D%3B%2D%2Du%3E%3D0%3B%29%28e%3Dr%5Bu%5D%29%26%26%28i%26%26i%21%3D%3De%2EnextSibling%26%26i%2EparentNode%2EinsertBefore%28e%2Ci%29%2Ci%3De%29%3Breturn%20this%7D%2C%5Fa%2Esort%3Dfunction%28n%29%7Bn%3DI%2Eapply%28this%2Carguments%29%3Bfor%28var%20t%3D%2D1%2Ce%3Dthis%2Elength%3B%2B%2Bt%3Ce%3B%29this%5Bt%5D%2Esort%28n%29%3Breturn%20this%2Eorder%28%29%7D%2C%5Fa%2Eeach%3Dfunction%28n%29%7Breturn%20Y%28this%2Cfunction%28t%2Ce%2Cr%29%7Bn%2Ecall%28t%2Ct%2E%5F%5Fdata%5F%5F%2Ce%2Cr%29%7D%29%7D%2C%5Fa%2Ecall%3Dfunction%28n%29%7Bvar%20t%3Dra%28arguments%29%3Breturn%20n%2Eapply%28t%5B0%5D%3Dthis%2Ct%29%2Cthis%7D%2C%5Fa%2Eempty%3Dfunction%28%29%7Breturn%21this%2Enode%28%29%7D%2C%5Fa%2Enode%3Dfunction%28%29%7Bfor%28var%20n%3D0%2Ct%3Dthis%2Elength%3Bt%3En%3Bn%2B%2B%29for%28var%20e%3Dthis%5Bn%5D%2Cr%3D0%2Cu%3De%2Elength%3Bu%3Er%3Br%2B%2B%29%7Bvar%20i%3De%5Br%5D%3Bif%28i%29return%20i%7Dreturn%20null%7D%2C%5Fa%2Esize%3Dfunction%28%29%7Bvar%20n%3D0%3Breturn%20Y%28this%2Cfunction%28%29%7B%2B%2Bn%7D%29%2Cn%7D%3Bvar%20Sa%3D%5B%5D%3Bta%2Eselection%2Eenter%3DZ%2Cta%2Eselection%2Eenter%2Eprototype%3DSa%2CSa%2Eappend%3D%5Fa%2Eappend%2CSa%2Eempty%3D%5Fa%2Eempty%2CSa%2Enode%3D%5Fa%2Enode%2CSa%2Ecall%3D%5Fa%2Ecall%2CSa%2Esize%3D%5Fa%2Esize%2CSa%2Eselect%3Dfunction%28n%29%7Bfor%28var%20t%2Ce%2Cr%2Cu%2Ci%2Co%3D%5B%5D%2Ca%3D%2D1%2Cc%3Dthis%2Elength%3B%2B%2Ba%3Cc%3B%29%7Br%3D%28u%3Dthis%5Ba%5D%29%2Eupdate%2Co%2Epush%28t%3D%5B%5D%29%2Ct%2EparentNode%3Du%2EparentNode%3Bfor%28var%20l%3D%2D1%2Cs%3Du%2Elength%3B%2B%2Bl%3Cs%3B%29%28i%3Du%5Bl%5D%29%3F%28t%2Epush%28r%5Bl%5D%3De%3Dn%2Ecall%28u%2EparentNode%2Ci%2E%5F%5Fdata%5F%5F%2Cl%2Ca%29%29%2Ce%2E%5F%5Fdata%5F%5F%3Di%2E%5F%5Fdata%5F%5F%29%3At%2Epush%28null%29%7Dreturn%20A%28o%29%7D%2CSa%2Einsert%3Dfunction%28n%2Ct%29%7Breturn%20arguments%2Elength%3C2%26%26%28t%3DV%28this%29%29%2C%5Fa%2Einsert%2Ecall%28this%2Cn%2Ct%29%7D%2Cta%2Eselect%3Dfunction%28t%29%7Bvar%20e%3Breturn%22string%22%3D%3Dtypeof%20t%3F%28e%3D%5BMa%28t%2Cua%29%5D%2Ce%2EparentNode%3Dua%2EdocumentElement%29%3A%28e%3D%5Bt%5D%2Ce%2EparentNode%3Dn%28t%29%29%2CA%28%5Be%5D%29%7D%2Cta%2EselectAll%3Dfunction%28n%29%7Bvar%20t%3Breturn%22string%22%3D%3Dtypeof%20n%3F%28t%3Dra%28xa%28n%2Cua%29%29%2Ct%2EparentNode%3Dua%2EdocumentElement%29%3A%28t%3Dn%2Ct%2EparentNode%3Dnull%29%2CA%28%5Bt%5D%29%7D%2C%5Fa%2Eon%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Darguments%2Elength%3Bif%283%3Er%29%7Bif%28%22string%22%21%3Dtypeof%20n%29%7B2%3Er%26%26%28t%3D%211%29%3Bfor%28e%20in%20n%29this%2Eeach%28X%28e%2Cn%5Be%5D%2Ct%29%29%3Breturn%20this%7Dif%282%3Er%29return%28r%3Dthis%2Enode%28%29%5B%22%5F%5Fon%22%2Bn%5D%29%26%26r%2E%5F%3Be%3D%211%7Dreturn%20this%2Eeach%28X%28n%2Ct%2Ce%29%29%7D%3Bvar%20ka%3Dta%2Emap%28%7Bmouseenter%3A%22mouseover%22%2Cmouseleave%3A%22mouseout%22%7D%29%3Bua%26%26ka%2EforEach%28function%28n%29%7B%22on%22%2Bn%20in%20ua%26%26ka%2Eremove%28n%29%7D%29%3Bvar%20Ea%2CAa%3D0%3Bta%2Emouse%3Dfunction%28n%29%7Breturn%20J%28n%2Ck%28%29%29%7D%3Bvar%20Na%3Dthis%2Enavigator%26%26%2FWebKit%2F%2Etest%28this%2Enavigator%2EuserAgent%29%3F%2D1%3A0%3Bta%2Etouch%3Dfunction%28n%2Ct%2Ce%29%7Bif%28arguments%2Elength%3C3%26%26%28e%3Dt%2Ct%3Dk%28%29%2EchangedTouches%29%2Ct%29for%28var%20r%2Cu%3D0%2Ci%3Dt%2Elength%3Bi%3Eu%3B%2B%2Bu%29if%28%28r%3Dt%5Bu%5D%29%2Eidentifier%3D%3D%3De%29return%20J%28n%2Cr%29%7D%2Cta%2Ebehavior%2Edrag%3Dfunction%28%29%7Bfunction%20n%28%29%7Bthis%2Eon%28%22mousedown%2Edrag%22%2Ci%29%2Eon%28%22touchstart%2Edrag%22%2Co%29%7Dfunction%20e%28n%2Ct%2Ce%2Ci%2Co%29%7Breturn%20function%28%29%7Bfunction%20a%28%29%7Bvar%20n%2Ce%2Cr%3Dt%28h%2Cv%29%3Br%26%26%28n%3Dr%5B0%5D%2DM%5B0%5D%2Ce%3Dr%5B1%5D%2DM%5B1%5D%2Cp%7C%3Dn%7Ce%2CM%3Dr%2Cg%28%7Btype%3A%22drag%22%2Cx%3Ar%5B0%5D%2Bl%5B0%5D%2Cy%3Ar%5B1%5D%2Bl%5B1%5D%2Cdx%3An%2Cdy%3Ae%7D%29%29%7Dfunction%20c%28%29%7Bt%28h%2Cv%29%26%26%28m%2Eon%28i%2Bd%2Cnull%29%2Eon%28o%2Bd%2Cnull%29%2Cy%28p%26%26ta%2Eevent%2Etarget%3D%3D%3Df%29%2Cg%28%7Btype%3A%22dragend%22%7D%29%29%7Dvar%20l%2Cs%3Dthis%2Cf%3Dta%2Eevent%2Etarget%2Ch%3Ds%2EparentNode%2Cg%3Dr%2Eof%28s%2Carguments%29%2Cp%3D0%2Cv%3Dn%28%29%2Cd%3D%22%2Edrag%22%2B%28null%3D%3Dv%3F%22%22%3A%22%2D%22%2Bv%29%2Cm%3Dta%2Eselect%28e%28f%29%29%2Eon%28i%2Bd%2Ca%29%2Eon%28o%2Bd%2Cc%29%2Cy%3DW%28f%29%2CM%3Dt%28h%2Cv%29%3Bu%3F%28l%3Du%2Eapply%28s%2Carguments%29%2Cl%3D%5Bl%2Ex%2DM%5B0%5D%2Cl%2Ey%2DM%5B1%5D%5D%29%3Al%3D%5B0%2C0%5D%2Cg%28%7Btype%3A%22dragstart%22%7D%29%7D%7Dvar%20r%3DE%28n%2C%22drag%22%2C%22dragstart%22%2C%22dragend%22%29%2Cu%3Dnull%2Ci%3De%28b%2Cta%2Emouse%2Ct%2C%22mousemove%22%2C%22mouseup%22%29%2Co%3De%28G%2Cta%2Etouch%2Cy%2C%22touchmove%22%2C%22touchend%22%29%3Breturn%20n%2Eorigin%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3Dt%2Cn%29%3Au%7D%2Cta%2Erebind%28n%2Cr%2C%22on%22%29%7D%2Cta%2Etouches%3Dfunction%28n%2Ct%29%7Breturn%20arguments%2Elength%3C2%26%26%28t%3Dk%28%29%2Etouches%29%2Ct%3Fra%28t%29%2Emap%28function%28t%29%7Bvar%20e%3DJ%28n%2Ct%29%3Breturn%20e%2Eidentifier%3Dt%2Eidentifier%2Ce%7D%29%3A%5B%5D%7D%3Bvar%20Ca%3D1e%2D6%2Cza%3DCa%2ACa%2Cqa%3DMath%2EPI%2CLa%3D2%2Aqa%2CTa%3DLa%2DCa%2CRa%3Dqa%2F2%2CDa%3Dqa%2F180%2CPa%3D180%2Fqa%2CUa%3DMath%2ESQRT2%2Cja%3D2%2CFa%3D4%3Bta%2EinterpolateZoom%3Dfunction%28n%2Ct%29%7Bfunction%20e%28n%29%7Bvar%20t%3Dn%2Ay%3Bif%28m%29%7Bvar%20e%3Drt%28v%29%2Co%3Di%2F%28ja%2Ah%29%2A%28e%2Aut%28Ua%2At%2Bv%29%2Det%28v%29%29%3Breturn%5Br%2Bo%2Al%2Cu%2Bo%2As%2Ci%2Ae%2Frt%28Ua%2At%2Bv%29%5D%7Dreturn%5Br%2Bn%2Al%2Cu%2Bn%2As%2Ci%2AMath%2Eexp%28Ua%2At%29%5D%7Dvar%20r%3Dn%5B0%5D%2Cu%3Dn%5B1%5D%2Ci%3Dn%5B2%5D%2Co%3Dt%5B0%5D%2Ca%3Dt%5B1%5D%2Cc%3Dt%5B2%5D%2Cl%3Do%2Dr%2Cs%3Da%2Du%2Cf%3Dl%2Al%2Bs%2As%2Ch%3DMath%2Esqrt%28f%29%2Cg%3D%28c%2Ac%2Di%2Ai%2BFa%2Af%29%2F%282%2Ai%2Aja%2Ah%29%2Cp%3D%28c%2Ac%2Di%2Ai%2DFa%2Af%29%2F%282%2Ac%2Aja%2Ah%29%2Cv%3DMath%2Elog%28Math%2Esqrt%28g%2Ag%2B1%29%2Dg%29%2Cd%3DMath%2Elog%28Math%2Esqrt%28p%2Ap%2B1%29%2Dp%29%2Cm%3Dd%2Dv%2Cy%3D%28m%7C%7CMath%2Elog%28c%2Fi%29%29%2FUa%3Breturn%20e%2Eduration%3D1e3%2Ay%2Ce%7D%2Cta%2Ebehavior%2Ezoom%3Dfunction%28%29%7Bfunction%20n%28n%29%7Bn%2Eon%28q%2Cf%29%2Eon%28Oa%2B%22%2Ezoom%22%2Cg%29%2Eon%28%22dblclick%2Ezoom%22%2Cp%29%2Eon%28R%2Ch%29%7Dfunction%20e%28n%29%7Breturn%5B%28n%5B0%5D%2Dk%2Ex%29%2Fk%2Ek%2C%28n%5B1%5D%2Dk%2Ey%29%2Fk%2Ek%5D%7Dfunction%20r%28n%29%7Breturn%5Bn%5B0%5D%2Ak%2Ek%2Bk%2Ex%2Cn%5B1%5D%2Ak%2Ek%2Bk%2Ey%5D%7Dfunction%20u%28n%29%7Bk%2Ek%3DMath%2Emax%28N%5B0%5D%2CMath%2Emin%28N%5B1%5D%2Cn%29%29%7Dfunction%20i%28n%2Ct%29%7Bt%3Dr%28t%29%2Ck%2Ex%2B%3Dn%5B0%5D%2Dt%5B0%5D%2Ck%2Ey%2B%3Dn%5B1%5D%2Dt%5B1%5D%7Dfunction%20o%28t%2Ce%2Cr%2Co%29%7Bt%2E%5F%5Fchart%5F%5F%3D%7Bx%3Ak%2Ex%2Cy%3Ak%2Ey%2Ck%3Ak%2Ek%7D%2Cu%28Math%2Epow%282%2Co%29%29%2Ci%28d%3De%2Cr%29%2Ct%3Dta%2Eselect%28t%29%2CC%3E0%26%26%28t%3Dt%2Etransition%28%29%2Eduration%28C%29%29%2Ct%2Ecall%28n%2Eevent%29%7Dfunction%20a%28%29%7Bb%26%26b%2Edomain%28x%2Erange%28%29%2Emap%28function%28n%29%7Breturn%28n%2Dk%2Ex%29%2Fk%2Ek%7D%29%2Emap%28x%2Einvert%29%29%2Cw%26%26w%2Edomain%28%5F%2Erange%28%29%2Emap%28function%28n%29%7Breturn%28n%2Dk%2Ey%29%2Fk%2Ek%7D%29%2Emap%28%5F%2Einvert%29%29%7Dfunction%20c%28n%29%7Bz%2B%2B%7C%7Cn%28%7Btype%3A%22zoomstart%22%7D%29%7Dfunction%20l%28n%29%7Ba%28%29%2Cn%28%7Btype%3A%22zoom%22%2Cscale%3Ak%2Ek%2Ctranslate%3A%5Bk%2Ex%2Ck%2Ey%5D%7D%29%7Dfunction%20s%28n%29%7B%2D%2Dz%7C%7Cn%28%7Btype%3A%22zoomend%22%7D%29%2Cd%3Dnull%7Dfunction%20f%28%29%7Bfunction%20n%28%29%7Bf%3D1%2Ci%28ta%2Emouse%28u%29%2Cg%29%2Cl%28a%29%7Dfunction%20r%28%29%7Bh%2Eon%28L%2Cnull%29%2Eon%28T%2Cnull%29%2Cp%28f%26%26ta%2Eevent%2Etarget%3D%3D%3Do%29%2Cs%28a%29%7Dvar%20u%3Dthis%2Co%3Dta%2Eevent%2Etarget%2Ca%3DD%2Eof%28u%2Carguments%29%2Cf%3D0%2Ch%3Dta%2Eselect%28t%28u%29%29%2Eon%28L%2Cn%29%2Eon%28T%2Cr%29%2Cg%3De%28ta%2Emouse%28u%29%29%2Cp%3DW%28u%29%3BDl%2Ecall%28u%29%2Cc%28a%29%7Dfunction%20h%28%29%7Bfunction%20n%28%29%7Bvar%20n%3Dta%2Etouches%28p%29%3Breturn%20g%3Dk%2Ek%2Cn%2EforEach%28function%28n%29%7Bn%2Eidentifier%20in%20d%26%26%28d%5Bn%2Eidentifier%5D%3De%28n%29%29%7D%29%2Cn%7Dfunction%20t%28%29%7Bvar%20t%3Dta%2Eevent%2Etarget%3Bta%2Eselect%28t%29%2Eon%28x%2Cr%29%2Eon%28b%2Ca%29%2C%5F%2Epush%28t%29%3Bfor%28var%20e%3Dta%2Eevent%2EchangedTouches%2Cu%3D0%2Ci%3De%2Elength%3Bi%3Eu%3B%2B%2Bu%29d%5Be%5Bu%5D%2Eidentifier%5D%3Dnull%3Bvar%20c%3Dn%28%29%2Cl%3DDate%2Enow%28%29%3Bif%281%3D%3D%3Dc%2Elength%29%7Bif%28500%3El%2DM%29%7Bvar%20s%3Dc%5B0%5D%3Bo%28p%2Cs%2Cd%5Bs%2Eidentifier%5D%2CMath%2Efloor%28Math%2Elog%28k%2Ek%29%2FMath%2ELN2%29%2B1%29%2CS%28%29%7DM%3Dl%7Delse%20if%28c%2Elength%3E1%29%7Bvar%20s%3Dc%5B0%5D%2Cf%3Dc%5B1%5D%2Ch%3Ds%5B0%5D%2Df%5B0%5D%2Cg%3Ds%5B1%5D%2Df%5B1%5D%3Bm%3Dh%2Ah%2Bg%2Ag%7D%7Dfunction%20r%28%29%7Bvar%20n%2Ct%2Ce%2Cr%2Co%3Dta%2Etouches%28p%29%3BDl%2Ecall%28p%29%3Bfor%28var%20a%3D0%2Cc%3Do%2Elength%3Bc%3Ea%3B%2B%2Ba%2Cr%3Dnull%29if%28e%3Do%5Ba%5D%2Cr%3Dd%5Be%2Eidentifier%5D%29%7Bif%28t%29break%3Bn%3De%2Ct%3Dr%7Dif%28r%29%7Bvar%20s%3D%28s%3De%5B0%5D%2Dn%5B0%5D%29%2As%2B%28s%3De%5B1%5D%2Dn%5B1%5D%29%2As%2Cf%3Dm%26%26Math%2Esqrt%28s%2Fm%29%3Bn%3D%5B%28n%5B0%5D%2Be%5B0%5D%29%2F2%2C%28n%5B1%5D%2Be%5B1%5D%29%2F2%5D%2Ct%3D%5B%28t%5B0%5D%2Br%5B0%5D%29%2F2%2C%28t%5B1%5D%2Br%5B1%5D%29%2F2%5D%2Cu%28f%2Ag%29%7DM%3Dnull%2Ci%28n%2Ct%29%2Cl%28v%29%7Dfunction%20a%28%29%7Bif%28ta%2Eevent%2Etouches%2Elength%29%7Bfor%28var%20t%3Dta%2Eevent%2EchangedTouches%2Ce%3D0%2Cr%3Dt%2Elength%3Br%3Ee%3B%2B%2Be%29delete%20d%5Bt%5Be%5D%2Eidentifier%5D%3Bfor%28var%20u%20in%20d%29return%20void%20n%28%29%7Dta%2EselectAll%28%5F%29%2Eon%28y%2Cnull%29%2Cw%2Eon%28q%2Cf%29%2Eon%28R%2Ch%29%2CE%28%29%2Cs%28v%29%7Dvar%20g%2Cp%3Dthis%2Cv%3DD%2Eof%28p%2Carguments%29%2Cd%3D%7B%7D%2Cm%3D0%2Cy%3D%22%2Ezoom%2D%22%2Bta%2Eevent%2EchangedTouches%5B0%5D%2Eidentifier%2Cx%3D%22touchmove%22%2By%2Cb%3D%22touchend%22%2By%2C%5F%3D%5B%5D%2Cw%3Dta%2Eselect%28p%29%2CE%3DW%28p%29%3Bt%28%29%2Cc%28v%29%2Cw%2Eon%28q%2Cnull%29%2Eon%28R%2Ct%29%7Dfunction%20g%28%29%7Bvar%20n%3DD%2Eof%28this%2Carguments%29%3By%3FclearTimeout%28y%29%3A%28v%3De%28d%3Dm%7C%7Cta%2Emouse%28this%29%29%2CDl%2Ecall%28this%29%2Cc%28n%29%29%2Cy%3DsetTimeout%28function%28%29%7By%3Dnull%2Cs%28n%29%7D%2C50%29%2CS%28%29%2Cu%28Math%2Epow%282%2C%2E002%2AHa%28%29%29%2Ak%2Ek%29%2Ci%28d%2Cv%29%2Cl%28n%29%7Dfunction%20p%28%29%7Bvar%20n%3Dta%2Emouse%28this%29%2Ct%3DMath%2Elog%28k%2Ek%29%2FMath%2ELN2%3Bo%28this%2Cn%2Ce%28n%29%2Cta%2Eevent%2EshiftKey%3FMath%2Eceil%28t%29%2D1%3AMath%2Efloor%28t%29%2B1%29%7Dvar%20v%2Cd%2Cm%2Cy%2CM%2Cx%2Cb%2C%5F%2Cw%2Ck%3D%7Bx%3A0%2Cy%3A0%2Ck%3A1%7D%2CA%3D%5B960%2C500%5D%2CN%3DIa%2CC%3D250%2Cz%3D0%2Cq%3D%22mousedown%2Ezoom%22%2CL%3D%22mousemove%2Ezoom%22%2CT%3D%22mouseup%2Ezoom%22%2CR%3D%22touchstart%2Ezoom%22%2CD%3DE%28n%2C%22zoomstart%22%2C%22zoom%22%2C%22zoomend%22%29%3Breturn%20Oa%7C%7C%28Oa%3D%22onwheel%22in%20ua%3F%28Ha%3Dfunction%28%29%7Breturn%2Dta%2Eevent%2EdeltaY%2A%28ta%2Eevent%2EdeltaMode%3F120%3A1%29%7D%2C%22wheel%22%29%3A%22onmousewheel%22in%20ua%3F%28Ha%3Dfunction%28%29%7Breturn%20ta%2Eevent%2EwheelDelta%7D%2C%22mousewheel%22%29%3A%28Ha%3Dfunction%28%29%7Breturn%2Dta%2Eevent%2Edetail%7D%2C%22MozMousePixelScroll%22%29%29%2Cn%2Eevent%3Dfunction%28n%29%7Bn%2Eeach%28function%28%29%7Bvar%20n%3DD%2Eof%28this%2Carguments%29%2Ct%3Dk%3BTl%3Fta%2Eselect%28this%29%2Etransition%28%29%2Eeach%28%22start%2Ezoom%22%2Cfunction%28%29%7Bk%3Dthis%2E%5F%5Fchart%5F%5F%7C%7C%7Bx%3A0%2Cy%3A0%2Ck%3A1%7D%2Cc%28n%29%7D%29%2Etween%28%22zoom%3Azoom%22%2Cfunction%28%29%7Bvar%20e%3DA%5B0%5D%2Cr%3DA%5B1%5D%2Cu%3Dd%3Fd%5B0%5D%3Ae%2F2%2Ci%3Dd%3Fd%5B1%5D%3Ar%2F2%2Co%3Dta%2EinterpolateZoom%28%5B%28u%2Dk%2Ex%29%2Fk%2Ek%2C%28i%2Dk%2Ey%29%2Fk%2Ek%2Ce%2Fk%2Ek%5D%2C%5B%28u%2Dt%2Ex%29%2Ft%2Ek%2C%28i%2Dt%2Ey%29%2Ft%2Ek%2Ce%2Ft%2Ek%5D%29%3Breturn%20function%28t%29%7Bvar%20r%3Do%28t%29%2Ca%3De%2Fr%5B2%5D%3Bthis%2E%5F%5Fchart%5F%5F%3Dk%3D%7Bx%3Au%2Dr%5B0%5D%2Aa%2Cy%3Ai%2Dr%5B1%5D%2Aa%2Ck%3Aa%7D%2Cl%28n%29%7D%7D%29%2Eeach%28%22interrupt%2Ezoom%22%2Cfunction%28%29%7Bs%28n%29%7D%29%2Eeach%28%22end%2Ezoom%22%2Cfunction%28%29%7Bs%28n%29%7D%29%3A%28this%2E%5F%5Fchart%5F%5F%3Dk%2Cc%28n%29%2Cl%28n%29%2Cs%28n%29%29%7D%29%7D%2Cn%2Etranslate%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28k%3D%7Bx%3A%2Bt%5B0%5D%2Cy%3A%2Bt%5B1%5D%2Ck%3Ak%2Ek%7D%2Ca%28%29%2Cn%29%3A%5Bk%2Ex%2Ck%2Ey%5D%7D%2Cn%2Escale%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28k%3D%7Bx%3Ak%2Ex%2Cy%3Ak%2Ey%2Ck%3A%2Bt%7D%2Ca%28%29%2Cn%29%3Ak%2Ek%7D%2Cn%2EscaleExtent%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28N%3Dnull%3D%3Dt%3FIa%3A%5B%2Bt%5B0%5D%2C%2Bt%5B1%5D%5D%2Cn%29%3AN%7D%2Cn%2Ecenter%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28m%3Dt%26%26%5B%2Bt%5B0%5D%2C%2Bt%5B1%5D%5D%2Cn%29%3Am%7D%2Cn%2Esize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28A%3Dt%26%26%5B%2Bt%5B0%5D%2C%2Bt%5B1%5D%5D%2Cn%29%3AA%7D%2Cn%2Eduration%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28C%3D%2Bt%2Cn%29%3AC%7D%2Cn%2Ex%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28b%3Dt%2Cx%3Dt%2Ecopy%28%29%2Ck%3D%7Bx%3A0%2Cy%3A0%2Ck%3A1%7D%2Cn%29%3Ab%7D%2Cn%2Ey%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28w%3Dt%2C%5F%3Dt%2Ecopy%28%29%2Ck%3D%7Bx%3A0%2Cy%3A0%2Ck%3A1%7D%2Cn%29%3Aw%7D%2Cta%2Erebind%28n%2CD%2C%22on%22%29%7D%3Bvar%20Ha%2COa%2CIa%3D%5B0%2C1%2F0%5D%3Bta%2Ecolor%3Dot%2Cot%2Eprototype%2EtoString%3Dfunction%28%29%7Breturn%20this%2Ergb%28%29%2B%22%22%7D%2Cta%2Ehsl%3Dat%3Bvar%20Ya%3Dat%2Eprototype%3Dnew%20ot%3BYa%2Ebrighter%3Dfunction%28n%29%7Breturn%20n%3DMath%2Epow%28%2E7%2Carguments%2Elength%3Fn%3A1%29%2Cnew%20at%28this%2Eh%2Cthis%2Es%2Cthis%2El%2Fn%29%7D%2CYa%2Edarker%3Dfunction%28n%29%7Breturn%20n%3DMath%2Epow%28%2E7%2Carguments%2Elength%3Fn%3A1%29%2Cnew%20at%28this%2Eh%2Cthis%2Es%2Cn%2Athis%2El%29%7D%2CYa%2Ergb%3Dfunction%28%29%7Breturn%20ct%28this%2Eh%2Cthis%2Es%2Cthis%2El%29%7D%2Cta%2Ehcl%3Dlt%3Bvar%20Za%3Dlt%2Eprototype%3Dnew%20ot%3BZa%2Ebrighter%3Dfunction%28n%29%7Breturn%20new%20lt%28this%2Eh%2Cthis%2Ec%2CMath%2Emin%28100%2Cthis%2El%2BVa%2A%28arguments%2Elength%3Fn%3A1%29%29%29%7D%2CZa%2Edarker%3Dfunction%28n%29%7Breturn%20new%20lt%28this%2Eh%2Cthis%2Ec%2CMath%2Emax%280%2Cthis%2El%2DVa%2A%28arguments%2Elength%3Fn%3A1%29%29%29%7D%2CZa%2Ergb%3Dfunction%28%29%7Breturn%20st%28this%2Eh%2Cthis%2Ec%2Cthis%2El%29%2Ergb%28%29%7D%2Cta%2Elab%3Dft%3Bvar%20Va%3D18%2CXa%3D%2E95047%2C%24a%3D1%2CBa%3D1%2E08883%2CWa%3Dft%2Eprototype%3Dnew%20ot%3BWa%2Ebrighter%3Dfunction%28n%29%7Breturn%20new%20ft%28Math%2Emin%28100%2Cthis%2El%2BVa%2A%28arguments%2Elength%3Fn%3A1%29%29%2Cthis%2Ea%2Cthis%2Eb%29%7D%2CWa%2Edarker%3Dfunction%28n%29%7Breturn%20new%20ft%28Math%2Emax%280%2Cthis%2El%2DVa%2A%28arguments%2Elength%3Fn%3A1%29%29%2Cthis%2Ea%2Cthis%2Eb%29%7D%2CWa%2Ergb%3Dfunction%28%29%7Breturn%20ht%28this%2El%2Cthis%2Ea%2Cthis%2Eb%29%7D%2Cta%2Ergb%3Dmt%3Bvar%20Ja%3Dmt%2Eprototype%3Dnew%20ot%3BJa%2Ebrighter%3Dfunction%28n%29%7Bn%3DMath%2Epow%28%2E7%2Carguments%2Elength%3Fn%3A1%29%3Bvar%20t%3Dthis%2Er%2Ce%3Dthis%2Eg%2Cr%3Dthis%2Eb%2Cu%3D30%3Breturn%20t%7C%7Ce%7C%7Cr%3F%28t%26%26u%3Et%26%26%28t%3Du%29%2Ce%26%26u%3Ee%26%26%28e%3Du%29%2Cr%26%26u%3Er%26%26%28r%3Du%29%2Cnew%20mt%28Math%2Emin%28255%2Ct%2Fn%29%2CMath%2Emin%28255%2Ce%2Fn%29%2CMath%2Emin%28255%2Cr%2Fn%29%29%29%3Anew%20mt%28u%2Cu%2Cu%29%7D%2CJa%2Edarker%3Dfunction%28n%29%7Breturn%20n%3DMath%2Epow%28%2E7%2Carguments%2Elength%3Fn%3A1%29%2Cnew%20mt%28n%2Athis%2Er%2Cn%2Athis%2Eg%2Cn%2Athis%2Eb%29%7D%2CJa%2Ehsl%3Dfunction%28%29%7Breturn%20%5Ft%28this%2Er%2Cthis%2Eg%2Cthis%2Eb%29%7D%2CJa%2EtoString%3Dfunction%28%29%7Breturn%22%23%22%2Bxt%28this%2Er%29%2Bxt%28this%2Eg%29%2Bxt%28this%2Eb%29%7D%3Bvar%20Ga%3Dta%2Emap%28%7Baliceblue%3A15792383%2Cantiquewhite%3A16444375%2Caqua%3A65535%2Caquamarine%3A8388564%2Cazure%3A15794175%2Cbeige%3A16119260%2Cbisque%3A16770244%2Cblack%3A0%2Cblanchedalmond%3A16772045%2Cblue%3A255%2Cblueviolet%3A9055202%2Cbrown%3A10824234%2Cburlywood%3A14596231%2Ccadetblue%3A6266528%2Cchartreuse%3A8388352%2Cchocolate%3A13789470%2Ccoral%3A16744272%2Ccornflowerblue%3A6591981%2Ccornsilk%3A16775388%2Ccrimson%3A14423100%2Ccyan%3A65535%2Cdarkblue%3A139%2Cdarkcyan%3A35723%2Cdarkgoldenrod%3A12092939%2Cdarkgray%3A11119017%2Cdarkgreen%3A25600%2Cdarkgrey%3A11119017%2Cdarkkhaki%3A12433259%2Cdarkmagenta%3A9109643%2Cdarkolivegreen%3A5597999%2Cdarkorange%3A16747520%2Cdarkorchid%3A10040012%2Cdarkred%3A9109504%2Cdarksalmon%3A15308410%2Cdarkseagreen%3A9419919%2Cdarkslateblue%3A4734347%2Cdarkslategray%3A3100495%2Cdarkslategrey%3A3100495%2Cdarkturquoise%3A52945%2Cdarkviolet%3A9699539%2Cdeeppink%3A16716947%2Cdeepskyblue%3A49151%2Cdimgray%3A6908265%2Cdimgrey%3A6908265%2Cdodgerblue%3A2003199%2Cfirebrick%3A11674146%2Cfloralwhite%3A16775920%2Cforestgreen%3A2263842%2Cfuchsia%3A16711935%2Cgainsboro%3A14474460%2Cghostwhite%3A16316671%2Cgold%3A16766720%2Cgoldenrod%3A14329120%2Cgray%3A8421504%2Cgreen%3A32768%2Cgreenyellow%3A11403055%2Cgrey%3A8421504%2Choneydew%3A15794160%2Chotpink%3A16738740%2Cindianred%3A13458524%2Cindigo%3A4915330%2Civory%3A16777200%2Ckhaki%3A15787660%2Clavender%3A15132410%2Clavenderblush%3A16773365%2Clawngreen%3A8190976%2Clemonchiffon%3A16775885%2Clightblue%3A11393254%2Clightcoral%3A15761536%2Clightcyan%3A14745599%2Clightgoldenrodyellow%3A16448210%2Clightgray%3A13882323%2Clightgreen%3A9498256%2Clightgrey%3A13882323%2Clightpink%3A16758465%2Clightsalmon%3A16752762%2Clightseagreen%3A2142890%2Clightskyblue%3A8900346%2Clightslategray%3A7833753%2Clightslategrey%3A7833753%2Clightsteelblue%3A11584734%2Clightyellow%3A16777184%2Clime%3A65280%2Climegreen%3A3329330%2Clinen%3A16445670%2Cmagenta%3A16711935%2Cmaroon%3A8388608%2Cmediumaquamarine%3A6737322%2Cmediumblue%3A205%2Cmediumorchid%3A12211667%2Cmediumpurple%3A9662683%2Cmediumseagreen%3A3978097%2Cmediumslateblue%3A8087790%2Cmediumspringgreen%3A64154%2Cmediumturquoise%3A4772300%2Cmediumvioletred%3A13047173%2Cmidnightblue%3A1644912%2Cmintcream%3A16121850%2Cmistyrose%3A16770273%2Cmoccasin%3A16770229%2Cnavajowhite%3A16768685%2Cnavy%3A128%2Coldlace%3A16643558%2Colive%3A8421376%2Colivedrab%3A7048739%2Corange%3A16753920%2Corangered%3A16729344%2Corchid%3A14315734%2Cpalegoldenrod%3A15657130%2Cpalegreen%3A10025880%2Cpaleturquoise%3A11529966%2Cpalevioletred%3A14381203%2Cpapayawhip%3A16773077%2Cpeachpuff%3A16767673%2Cperu%3A13468991%2Cpink%3A16761035%2Cplum%3A14524637%2Cpowderblue%3A11591910%2Cpurple%3A8388736%2Crebeccapurple%3A6697881%2Cred%3A16711680%2Crosybrown%3A12357519%2Croyalblue%3A4286945%2Csaddlebrown%3A9127187%2Csalmon%3A16416882%2Csandybrown%3A16032864%2Cseagreen%3A3050327%2Cseashell%3A16774638%2Csienna%3A10506797%2Csilver%3A12632256%2Cskyblue%3A8900331%2Cslateblue%3A6970061%2Cslategray%3A7372944%2Cslategrey%3A7372944%2Csnow%3A16775930%2Cspringgreen%3A65407%2Csteelblue%3A4620980%2Ctan%3A13808780%2Cteal%3A32896%2Cthistle%3A14204888%2Ctomato%3A16737095%2Cturquoise%3A4251856%2Cviolet%3A15631086%2Cwheat%3A16113331%2Cwhite%3A16777215%2Cwhitesmoke%3A16119285%2Cyellow%3A16776960%2Cyellowgreen%3A10145074%7D%29%3BGa%2EforEach%28function%28n%2Ct%29%7BGa%2Eset%28n%2Cyt%28t%29%29%7D%29%2Cta%2Efunctor%3DEt%2Cta%2Exhr%3DAt%28y%29%2Cta%2Edsv%3Dfunction%28n%2Ct%29%7Bfunction%20e%28n%2Ce%2Ci%29%7Barguments%2Elength%3C3%26%26%28i%3De%2Ce%3Dnull%29%3Bvar%20o%3DNt%28n%2Ct%2Cnull%3D%3De%3Fr%3Au%28e%29%2Ci%29%3Breturn%20o%2Erow%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3Fo%2Eresponse%28null%3D%3D%28e%3Dn%29%3Fr%3Au%28n%29%29%3Ae%7D%2Co%7Dfunction%20r%28n%29%7Breturn%20e%2Eparse%28n%2EresponseText%29%7Dfunction%20u%28n%29%7Breturn%20function%28t%29%7Breturn%20e%2Eparse%28t%2EresponseText%2Cn%29%7D%7Dfunction%20i%28t%29%7Breturn%20t%2Emap%28o%29%2Ejoin%28n%29%7Dfunction%20o%28n%29%7Breturn%20a%2Etest%28n%29%3F%27%22%27%2Bn%2Ereplace%28%2F%5C%22%2Fg%2C%27%22%22%27%29%2B%27%22%27%3An%7Dvar%20a%3Dnew%20RegExp%28%27%5B%22%27%2Bn%2B%22%5Cn%5D%22%29%2Cc%3Dn%2EcharCodeAt%280%29%3Breturn%20e%2Eparse%3Dfunction%28n%2Ct%29%7Bvar%20r%3Breturn%20e%2EparseRows%28n%2Cfunction%28n%2Ce%29%7Bif%28r%29return%20r%28n%2Ce%2D1%29%3Bvar%20u%3Dnew%20Function%28%22d%22%2C%22return%20%7B%22%2Bn%2Emap%28function%28n%2Ct%29%7Breturn%20JSON%2Estringify%28n%29%2B%22%3A%20d%5B%22%2Bt%2B%22%5D%22%7D%29%2Ejoin%28%22%2C%22%29%2B%22%7D%22%29%3Br%3Dt%3Ffunction%28n%2Ce%29%7Breturn%20t%28u%28n%29%2Ce%29%7D%3Au%7D%29%7D%2Ce%2EparseRows%3Dfunction%28n%2Ct%29%7Bfunction%20e%28%29%7Bif%28s%3E%3Dl%29return%20o%3Bif%28u%29return%20u%3D%211%2Ci%3Bvar%20t%3Ds%3Bif%2834%3D%3D%3Dn%2EcharCodeAt%28t%29%29%7Bfor%28var%20e%3Dt%3Be%2B%2B%3Cl%3B%29if%2834%3D%3D%3Dn%2EcharCodeAt%28e%29%29%7Bif%2834%21%3D%3Dn%2EcharCodeAt%28e%2B1%29%29break%3B%2B%2Be%7Ds%3De%2B2%3Bvar%20r%3Dn%2EcharCodeAt%28e%2B1%29%3Breturn%2013%3D%3D%3Dr%3F%28u%3D%210%2C10%3D%3D%3Dn%2EcharCodeAt%28e%2B2%29%26%26%2B%2Bs%29%3A10%3D%3D%3Dr%26%26%28u%3D%210%29%2Cn%2Eslice%28t%2B1%2Ce%29%2Ereplace%28%2F%22%22%2Fg%2C%27%22%27%29%7Dfor%28%3Bl%3Es%3B%29%7Bvar%20r%3Dn%2EcharCodeAt%28s%2B%2B%29%2Ca%3D1%3Bif%2810%3D%3D%3Dr%29u%3D%210%3Belse%20if%2813%3D%3D%3Dr%29u%3D%210%2C10%3D%3D%3Dn%2EcharCodeAt%28s%29%26%26%28%2B%2Bs%2C%2B%2Ba%29%3Belse%20if%28r%21%3D%3Dc%29continue%3Breturn%20n%2Eslice%28t%2Cs%2Da%29%7Dreturn%20n%2Eslice%28t%29%7Dfor%28var%20r%2Cu%2Ci%3D%7B%7D%2Co%3D%7B%7D%2Ca%3D%5B%5D%2Cl%3Dn%2Elength%2Cs%3D0%2Cf%3D0%3B%28r%3De%28%29%29%21%3D%3Do%3B%29%7Bfor%28var%20h%3D%5B%5D%3Br%21%3D%3Di%26%26r%21%3D%3Do%3B%29h%2Epush%28r%29%2Cr%3De%28%29%3Bt%26%26null%3D%3D%28h%3Dt%28h%2Cf%2B%2B%29%29%7C%7Ca%2Epush%28h%29%7Dreturn%20a%7D%2Ce%2Eformat%3Dfunction%28t%29%7Bif%28Array%2EisArray%28t%5B0%5D%29%29return%20e%2EformatRows%28t%29%3Bvar%20r%3Dnew%20m%2Cu%3D%5B%5D%3Breturn%20t%2EforEach%28function%28n%29%7Bfor%28var%20t%20in%20n%29r%2Ehas%28t%29%7C%7Cu%2Epush%28r%2Eadd%28t%29%29%7D%29%2C%5Bu%2Emap%28o%29%2Ejoin%28n%29%5D%2Econcat%28t%2Emap%28function%28t%29%7Breturn%20u%2Emap%28function%28n%29%7Breturn%20o%28t%5Bn%5D%29%7D%29%2Ejoin%28n%29%7D%29%29%2Ejoin%28%22%5Cn%22%29%7D%2Ce%2EformatRows%3Dfunction%28n%29%7Breturn%20n%2Emap%28i%29%2Ejoin%28%22%5Cn%22%29%7D%2Ce%7D%2Cta%2Ecsv%3Dta%2Edsv%28%22%2C%22%2C%22text%2Fcsv%22%29%2Cta%2Etsv%3Dta%2Edsv%28%22%09%22%2C%22text%2Ftab%2Dseparated%2Dvalues%22%29%3Bvar%20Ka%2CQa%2Cnc%2Ctc%2Cec%2Crc%3Dthis%5Bx%28this%2C%22requestAnimationFrame%22%29%5D%7C%7Cfunction%28n%29%7BsetTimeout%28n%2C17%29%7D%3Bta%2Etimer%3Dfunction%28n%2Ct%2Ce%29%7Bvar%20r%3Darguments%2Elength%3B2%3Er%26%26%28t%3D0%29%2C3%3Er%26%26%28e%3DDate%2Enow%28%29%29%3Bvar%20u%3De%2Bt%2Ci%3D%7Bc%3An%2Ct%3Au%2Cf%3A%211%2Cn%3Anull%7D%3BQa%3FQa%2En%3Di%3AKa%3Di%2CQa%3Di%2Cnc%7C%7C%28tc%3DclearTimeout%28tc%29%2Cnc%3D1%2Crc%28qt%29%29%7D%2Cta%2Etimer%2Eflush%3Dfunction%28%29%7BLt%28%29%2CTt%28%29%7D%2Cta%2Eround%3Dfunction%28n%2Ct%29%7Breturn%20t%3FMath%2Eround%28n%2A%28t%3DMath%2Epow%2810%2Ct%29%29%29%2Ft%3AMath%2Eround%28n%29%7D%3Bvar%20uc%3D%5B%22y%22%2C%22z%22%2C%22a%22%2C%22f%22%2C%22p%22%2C%22n%22%2C%22%5Cxb5%22%2C%22m%22%2C%22%22%2C%22k%22%2C%22M%22%2C%22G%22%2C%22T%22%2C%22P%22%2C%22E%22%2C%22Z%22%2C%22Y%22%5D%2Emap%28Dt%29%3Bta%2EformatPrefix%3Dfunction%28n%2Ct%29%7Bvar%20e%3D0%3Breturn%20n%26%26%280%3En%26%26%28n%2A%3D%2D1%29%2Ct%26%26%28n%3Dta%2Eround%28n%2CRt%28n%2Ct%29%29%29%2Ce%3D1%2BMath%2Efloor%281e%2D12%2BMath%2Elog%28n%29%2FMath%2ELN10%29%2Ce%3DMath%2Emax%28%2D24%2CMath%2Emin%2824%2C3%2AMath%2Efloor%28%28e%2D1%29%2F3%29%29%29%29%2Cuc%5B8%2Be%2F3%5D%7D%3Bvar%20ic%3D%2F%28%3F%3A%28%5B%5E%7B%5D%29%3F%28%5B%3C%3E%3D%5E%5D%29%29%3F%28%5B%2B%5C%2D%20%5D%29%3F%28%5B%24%23%5D%29%3F%280%29%3F%28%5Cd%2B%29%3F%28%2C%29%3F%28%5C%2E%2D%3F%5Cd%2B%29%3F%28%5Ba%2Dz%25%5D%29%3F%2Fi%2Coc%3Dta%2Emap%28%7Bb%3Afunction%28n%29%7Breturn%20n%2EtoString%282%29%7D%2Cc%3Afunction%28n%29%7Breturn%20String%2EfromCharCode%28n%29%7D%2Co%3Afunction%28n%29%7Breturn%20n%2EtoString%288%29%7D%2Cx%3Afunction%28n%29%7Breturn%20n%2EtoString%2816%29%7D%2CX%3Afunction%28n%29%7Breturn%20n%2EtoString%2816%29%2EtoUpperCase%28%29%7D%2Cg%3Afunction%28n%2Ct%29%7Breturn%20n%2EtoPrecision%28t%29%7D%2Ce%3Afunction%28n%2Ct%29%7Breturn%20n%2EtoExponential%28t%29%7D%2Cf%3Afunction%28n%2Ct%29%7Breturn%20n%2EtoFixed%28t%29%7D%2Cr%3Afunction%28n%2Ct%29%7Breturn%28n%3Dta%2Eround%28n%2CRt%28n%2Ct%29%29%29%2EtoFixed%28Math%2Emax%280%2CMath%2Emin%2820%2CRt%28n%2A%281%2B1e%2D15%29%2Ct%29%29%29%29%7D%7D%29%2Cac%3Dta%2Etime%3D%7B%7D%2Ccc%3DDate%3Bjt%2Eprototype%3D%7BgetDate%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCDate%28%29%7D%2CgetDay%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCDay%28%29%7D%2CgetFullYear%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCFullYear%28%29%7D%2CgetHours%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCHours%28%29%7D%2CgetMilliseconds%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCMilliseconds%28%29%7D%2CgetMinutes%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCMinutes%28%29%7D%2CgetMonth%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCMonth%28%29%7D%2CgetSeconds%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetUTCSeconds%28%29%7D%2CgetTime%3Afunction%28%29%7Breturn%20this%2E%5F%2EgetTime%28%29%7D%2CgetTimezoneOffset%3Afunction%28%29%7Breturn%200%7D%2CvalueOf%3Afunction%28%29%7Breturn%20this%2E%5F%2EvalueOf%28%29%7D%2CsetDate%3Afunction%28%29%7Blc%2EsetUTCDate%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetDay%3Afunction%28%29%7Blc%2EsetUTCDay%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetFullYear%3Afunction%28%29%7Blc%2EsetUTCFullYear%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetHours%3Afunction%28%29%7Blc%2EsetUTCHours%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetMilliseconds%3Afunction%28%29%7Blc%2EsetUTCMilliseconds%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetMinutes%3Afunction%28%29%7Blc%2EsetUTCMinutes%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetMonth%3Afunction%28%29%7Blc%2EsetUTCMonth%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetSeconds%3Afunction%28%29%7Blc%2EsetUTCSeconds%2Eapply%28this%2E%5F%2Carguments%29%7D%2CsetTime%3Afunction%28%29%7Blc%2EsetTime%2Eapply%28this%2E%5F%2Carguments%29%7D%7D%3Bvar%20lc%3DDate%2Eprototype%3Bac%2Eyear%3DFt%28function%28n%29%7Breturn%20n%3Dac%2Eday%28n%29%2Cn%2EsetMonth%280%2C1%29%2Cn%7D%2Cfunction%28n%2Ct%29%7Bn%2EsetFullYear%28n%2EgetFullYear%28%29%2Bt%29%7D%2Cfunction%28n%29%7Breturn%20n%2EgetFullYear%28%29%7D%29%2Cac%2Eyears%3Dac%2Eyear%2Erange%2Cac%2Eyears%2Eutc%3Dac%2Eyear%2Eutc%2Erange%2Cac%2Eday%3DFt%28function%28n%29%7Bvar%20t%3Dnew%20cc%282e3%2C0%29%3Breturn%20t%2EsetFullYear%28n%2EgetFullYear%28%29%2Cn%2EgetMonth%28%29%2Cn%2EgetDate%28%29%29%2Ct%7D%2Cfunction%28n%2Ct%29%7Bn%2EsetDate%28n%2EgetDate%28%29%2Bt%29%7D%2Cfunction%28n%29%7Breturn%20n%2EgetDate%28%29%2D1%7D%29%2Cac%2Edays%3Dac%2Eday%2Erange%2Cac%2Edays%2Eutc%3Dac%2Eday%2Eutc%2Erange%2Cac%2EdayOfYear%3Dfunction%28n%29%7Bvar%20t%3Dac%2Eyear%28n%29%3Breturn%20Math%2Efloor%28%28n%2Dt%2D6e4%2A%28n%2EgetTimezoneOffset%28%29%2Dt%2EgetTimezoneOffset%28%29%29%29%2F864e5%29%7D%2C%5B%22sunday%22%2C%22monday%22%2C%22tuesday%22%2C%22wednesday%22%2C%22thursday%22%2C%22friday%22%2C%22saturday%22%5D%2EforEach%28function%28n%2Ct%29%7Bt%3D7%2Dt%3Bvar%20e%3Dac%5Bn%5D%3DFt%28function%28n%29%7Breturn%28n%3Dac%2Eday%28n%29%29%2EsetDate%28n%2EgetDate%28%29%2D%28n%2EgetDay%28%29%2Bt%29%257%29%2Cn%7D%2Cfunction%28n%2Ct%29%7Bn%2EsetDate%28n%2EgetDate%28%29%2B7%2AMath%2Efloor%28t%29%29%7D%2Cfunction%28n%29%7Bvar%20e%3Dac%2Eyear%28n%29%2EgetDay%28%29%3Breturn%20Math%2Efloor%28%28ac%2EdayOfYear%28n%29%2B%28e%2Bt%29%257%29%2F7%29%2D%28e%21%3D%3Dt%29%7D%29%3Bac%5Bn%2B%22s%22%5D%3De%2Erange%2Cac%5Bn%2B%22s%22%5D%2Eutc%3De%2Eutc%2Erange%2Cac%5Bn%2B%22OfYear%22%5D%3Dfunction%28n%29%7Bvar%20e%3Dac%2Eyear%28n%29%2EgetDay%28%29%3Breturn%20Math%2Efloor%28%28ac%2EdayOfYear%28n%29%2B%28e%2Bt%29%257%29%2F7%29%7D%7D%29%2Cac%2Eweek%3Dac%2Esunday%2Cac%2Eweeks%3Dac%2Esunday%2Erange%2Cac%2Eweeks%2Eutc%3Dac%2Esunday%2Eutc%2Erange%2Cac%2EweekOfYear%3Dac%2EsundayOfYear%3Bvar%20sc%3D%7B%22%2D%22%3A%22%22%2C%5F%3A%22%20%22%2C0%3A%220%22%7D%2Cfc%3D%2F%5E%5Cs%2A%5Cd%2B%2F%2Chc%3D%2F%5E%25%2F%3Bta%2Elocale%3Dfunction%28n%29%7Breturn%7BnumberFormat%3APt%28n%29%2CtimeFormat%3AOt%28n%29%7D%7D%3Bvar%20gc%3Dta%2Elocale%28%7Bdecimal%3A%22%2E%22%2Cthousands%3A%22%2C%22%2Cgrouping%3A%5B3%5D%2Ccurrency%3A%5B%22%24%22%2C%22%22%5D%2CdateTime%3A%22%25a%20%25b%20%25e%20%25X%20%25Y%22%2Cdate%3A%22%25m%2F%25d%2F%25Y%22%2Ctime%3A%22%25H%3A%25M%3A%25S%22%2Cperiods%3A%5B%22AM%22%2C%22PM%22%5D%2Cdays%3A%5B%22Sunday%22%2C%22Monday%22%2C%22Tuesday%22%2C%22Wednesday%22%2C%22Thursday%22%2C%22Friday%22%2C%22Saturday%22%5D%2CshortDays%3A%5B%22Sun%22%2C%22Mon%22%2C%22Tue%22%2C%22Wed%22%2C%22Thu%22%2C%22Fri%22%2C%22Sat%22%5D%2Cmonths%3A%5B%22January%22%2C%22February%22%2C%22March%22%2C%22April%22%2C%22May%22%2C%22June%22%2C%22July%22%2C%22August%22%2C%22September%22%2C%22October%22%2C%22November%22%2C%22December%22%5D%2CshortMonths%3A%5B%22Jan%22%2C%22Feb%22%2C%22Mar%22%2C%22Apr%22%2C%22May%22%2C%22Jun%22%2C%22Jul%22%2C%22Aug%22%2C%22Sep%22%2C%22Oct%22%2C%22Nov%22%2C%22Dec%22%5D%7D%29%3Bta%2Eformat%3Dgc%2EnumberFormat%2Cta%2Egeo%3D%7B%7D%2Cce%2Eprototype%3D%7Bs%3A0%2Ct%3A0%2Cadd%3Afunction%28n%29%7Ble%28n%2Cthis%2Et%2Cpc%29%2Cle%28pc%2Es%2Cthis%2Es%2Cthis%29%2Cthis%2Es%3Fthis%2Et%2B%3Dpc%2Et%3Athis%2Es%3Dpc%2Et%0A%7D%2Creset%3Afunction%28%29%7Bthis%2Es%3Dthis%2Et%3D0%7D%2CvalueOf%3Afunction%28%29%7Breturn%20this%2Es%7D%7D%3Bvar%20pc%3Dnew%20ce%3Bta%2Egeo%2Estream%3Dfunction%28n%2Ct%29%7Bn%26%26vc%2EhasOwnProperty%28n%2Etype%29%3Fvc%5Bn%2Etype%5D%28n%2Ct%29%3Ase%28n%2Ct%29%7D%3Bvar%20vc%3D%7BFeature%3Afunction%28n%2Ct%29%7Bse%28n%2Egeometry%2Ct%29%7D%2CFeatureCollection%3Afunction%28n%2Ct%29%7Bfor%28var%20e%3Dn%2Efeatures%2Cr%3D%2D1%2Cu%3De%2Elength%3B%2B%2Br%3Cu%3B%29se%28e%5Br%5D%2Egeometry%2Ct%29%7D%7D%2Cdc%3D%7BSphere%3Afunction%28n%2Ct%29%7Bt%2Esphere%28%29%7D%2CPoint%3Afunction%28n%2Ct%29%7Bn%3Dn%2Ecoordinates%2Ct%2Epoint%28n%5B0%5D%2Cn%5B1%5D%2Cn%5B2%5D%29%7D%2CMultiPoint%3Afunction%28n%2Ct%29%7Bfor%28var%20e%3Dn%2Ecoordinates%2Cr%3D%2D1%2Cu%3De%2Elength%3B%2B%2Br%3Cu%3B%29n%3De%5Br%5D%2Ct%2Epoint%28n%5B0%5D%2Cn%5B1%5D%2Cn%5B2%5D%29%7D%2CLineString%3Afunction%28n%2Ct%29%7Bfe%28n%2Ecoordinates%2Ct%2C0%29%7D%2CMultiLineString%3Afunction%28n%2Ct%29%7Bfor%28var%20e%3Dn%2Ecoordinates%2Cr%3D%2D1%2Cu%3De%2Elength%3B%2B%2Br%3Cu%3B%29fe%28e%5Br%5D%2Ct%2C0%29%7D%2CPolygon%3Afunction%28n%2Ct%29%7Bhe%28n%2Ecoordinates%2Ct%29%7D%2CMultiPolygon%3Afunction%28n%2Ct%29%7Bfor%28var%20e%3Dn%2Ecoordinates%2Cr%3D%2D1%2Cu%3De%2Elength%3B%2B%2Br%3Cu%3B%29he%28e%5Br%5D%2Ct%29%7D%2CGeometryCollection%3Afunction%28n%2Ct%29%7Bfor%28var%20e%3Dn%2Egeometries%2Cr%3D%2D1%2Cu%3De%2Elength%3B%2B%2Br%3Cu%3B%29se%28e%5Br%5D%2Ct%29%7D%7D%3Bta%2Egeo%2Earea%3Dfunction%28n%29%7Breturn%20mc%3D0%2Cta%2Egeo%2Estream%28n%2CMc%29%2Cmc%7D%3Bvar%20mc%2Cyc%3Dnew%20ce%2CMc%3D%7Bsphere%3Afunction%28%29%7Bmc%2B%3D4%2Aqa%7D%2Cpoint%3Ab%2ClineStart%3Ab%2ClineEnd%3Ab%2CpolygonStart%3Afunction%28%29%7Byc%2Ereset%28%29%2CMc%2ElineStart%3Dge%7D%2CpolygonEnd%3Afunction%28%29%7Bvar%20n%3D2%2Ayc%3Bmc%2B%3D0%3En%3F4%2Aqa%2Bn%3An%2CMc%2ElineStart%3DMc%2ElineEnd%3DMc%2Epoint%3Db%7D%7D%3Bta%2Egeo%2Ebounds%3Dfunction%28%29%7Bfunction%20n%28n%2Ct%29%7BM%2Epush%28x%3D%5Bs%3Dn%2Ch%3Dn%5D%29%2Cf%3Et%26%26%28f%3Dt%29%2Ct%3Eg%26%26%28g%3Dt%29%7Dfunction%20t%28t%2Ce%29%7Bvar%20r%3Dpe%28%5Bt%2ADa%2Ce%2ADa%5D%29%3Bif%28m%29%7Bvar%20u%3Dde%28m%2Cr%29%2Ci%3D%5Bu%5B1%5D%2C%2Du%5B0%5D%2C0%5D%2Co%3Dde%28i%2Cu%29%3BMe%28o%29%2Co%3Dxe%28o%29%3Bvar%20c%3Dt%2Dp%2Cl%3Dc%3E0%3F1%3A%2D1%2Cv%3Do%5B0%5D%2APa%2Al%2Cd%3Dga%28c%29%3E180%3Bif%28d%5E%28v%3El%2Ap%26%26l%2At%3Ev%29%29%7Bvar%20y%3Do%5B1%5D%2APa%3By%3Eg%26%26%28g%3Dy%29%7Delse%20if%28v%3D%28v%2B360%29%25360%2D180%2Cd%5E%28v%3El%2Ap%26%26l%2At%3Ev%29%29%7Bvar%20y%3D%2Do%5B1%5D%2APa%3Bf%3Ey%26%26%28f%3Dy%29%7Delse%20f%3Ee%26%26%28f%3De%29%2Ce%3Eg%26%26%28g%3De%29%3Bd%3Fp%3Et%3Fa%28s%2Ct%29%3Ea%28s%2Ch%29%26%26%28h%3Dt%29%3Aa%28t%2Ch%29%3Ea%28s%2Ch%29%26%26%28s%3Dt%29%3Ah%3E%3Ds%3F%28s%3Et%26%26%28s%3Dt%29%2Ct%3Eh%26%26%28h%3Dt%29%29%3At%3Ep%3Fa%28s%2Ct%29%3Ea%28s%2Ch%29%26%26%28h%3Dt%29%3Aa%28t%2Ch%29%3Ea%28s%2Ch%29%26%26%28s%3Dt%29%7Delse%20n%28t%2Ce%29%3Bm%3Dr%2Cp%3Dt%7Dfunction%20e%28%29%7Bb%2Epoint%3Dt%7Dfunction%20r%28%29%7Bx%5B0%5D%3Ds%2Cx%5B1%5D%3Dh%2Cb%2Epoint%3Dn%2Cm%3Dnull%7Dfunction%20u%28n%2Ce%29%7Bif%28m%29%7Bvar%20r%3Dn%2Dp%3By%2B%3Dga%28r%29%3E180%3Fr%2B%28r%3E0%3F360%3A%2D360%29%3Ar%7Delse%20v%3Dn%2Cd%3De%3BMc%2Epoint%28n%2Ce%29%2Ct%28n%2Ce%29%7Dfunction%20i%28%29%7BMc%2ElineStart%28%29%7Dfunction%20o%28%29%7Bu%28v%2Cd%29%2CMc%2ElineEnd%28%29%2Cga%28y%29%3ECa%26%26%28s%3D%2D%28h%3D180%29%29%2Cx%5B0%5D%3Ds%2Cx%5B1%5D%3Dh%2Cm%3Dnull%7Dfunction%20a%28n%2Ct%29%7Breturn%28t%2D%3Dn%29%3C0%3Ft%2B360%3At%7Dfunction%20c%28n%2Ct%29%7Breturn%20n%5B0%5D%2Dt%5B0%5D%7Dfunction%20l%28n%2Ct%29%7Breturn%20t%5B0%5D%3C%3Dt%5B1%5D%3Ft%5B0%5D%3C%3Dn%26%26n%3C%3Dt%5B1%5D%3An%3Ct%5B0%5D%7C%7Ct%5B1%5D%3Cn%7Dvar%20s%2Cf%2Ch%2Cg%2Cp%2Cv%2Cd%2Cm%2Cy%2CM%2Cx%2Cb%3D%7Bpoint%3An%2ClineStart%3Ae%2ClineEnd%3Ar%2CpolygonStart%3Afunction%28%29%7Bb%2Epoint%3Du%2Cb%2ElineStart%3Di%2Cb%2ElineEnd%3Do%2Cy%3D0%2CMc%2EpolygonStart%28%29%7D%2CpolygonEnd%3Afunction%28%29%7BMc%2EpolygonEnd%28%29%2Cb%2Epoint%3Dn%2Cb%2ElineStart%3De%2Cb%2ElineEnd%3Dr%2C0%3Eyc%3F%28s%3D%2D%28h%3D180%29%2Cf%3D%2D%28g%3D90%29%29%3Ay%3ECa%3Fg%3D90%3A%2DCa%3Ey%26%26%28f%3D%2D90%29%2Cx%5B0%5D%3Ds%2Cx%5B1%5D%3Dh%7D%7D%3Breturn%20function%28n%29%7Bg%3Dh%3D%2D%28s%3Df%3D1%2F0%29%2CM%3D%5B%5D%2Cta%2Egeo%2Estream%28n%2Cb%29%3Bvar%20t%3DM%2Elength%3Bif%28t%29%7BM%2Esort%28c%29%3Bfor%28var%20e%2Cr%3D1%2Cu%3DM%5B0%5D%2Ci%3D%5Bu%5D%3Bt%3Er%3B%2B%2Br%29e%3DM%5Br%5D%2Cl%28e%5B0%5D%2Cu%29%7C%7Cl%28e%5B1%5D%2Cu%29%3F%28a%28u%5B0%5D%2Ce%5B1%5D%29%3Ea%28u%5B0%5D%2Cu%5B1%5D%29%26%26%28u%5B1%5D%3De%5B1%5D%29%2Ca%28e%5B0%5D%2Cu%5B1%5D%29%3Ea%28u%5B0%5D%2Cu%5B1%5D%29%26%26%28u%5B0%5D%3De%5B0%5D%29%29%3Ai%2Epush%28u%3De%29%3Bfor%28var%20o%2Ce%2Cp%3D%2D1%2F0%2Ct%3Di%2Elength%2D1%2Cr%3D0%2Cu%3Di%5Bt%5D%3Bt%3E%3Dr%3Bu%3De%2C%2B%2Br%29e%3Di%5Br%5D%2C%28o%3Da%28u%5B1%5D%2Ce%5B0%5D%29%29%3Ep%26%26%28p%3Do%2Cs%3De%5B0%5D%2Ch%3Du%5B1%5D%29%7Dreturn%20M%3Dx%3Dnull%2C1%2F0%3D%3D%3Ds%7C%7C1%2F0%3D%3D%3Df%3F%5B%5B0%2F0%2C0%2F0%5D%2C%5B0%2F0%2C0%2F0%5D%5D%3A%5B%5Bs%2Cf%5D%2C%5Bh%2Cg%5D%5D%7D%7D%28%29%2Cta%2Egeo%2Ecentroid%3Dfunction%28n%29%7Bxc%3Dbc%3D%5Fc%3Dwc%3DSc%3Dkc%3DEc%3DAc%3DNc%3DCc%3Dzc%3D0%2Cta%2Egeo%2Estream%28n%2Cqc%29%3Bvar%20t%3DNc%2Ce%3DCc%2Cr%3Dzc%2Cu%3Dt%2At%2Be%2Ae%2Br%2Ar%3Breturn%20za%3Eu%26%26%28t%3Dkc%2Ce%3DEc%2Cr%3DAc%2CCa%3Ebc%26%26%28t%3D%5Fc%2Ce%3Dwc%2Cr%3DSc%29%2Cu%3Dt%2At%2Be%2Ae%2Br%2Ar%2Cza%3Eu%29%3F%5B0%2F0%2C0%2F0%5D%3A%5BMath%2Eatan2%28e%2Ct%29%2APa%2Ctt%28r%2FMath%2Esqrt%28u%29%29%2APa%5D%7D%3Bvar%20xc%2Cbc%2C%5Fc%2Cwc%2CSc%2Ckc%2CEc%2CAc%2CNc%2CCc%2Czc%2Cqc%3D%7Bsphere%3Ab%2Cpoint%3A%5Fe%2ClineStart%3ASe%2ClineEnd%3Ake%2CpolygonStart%3Afunction%28%29%7Bqc%2ElineStart%3DEe%7D%2CpolygonEnd%3Afunction%28%29%7Bqc%2ElineStart%3DSe%7D%7D%2CLc%3DLe%28Ne%2CPe%2Cje%2C%5B%2Dqa%2C%2Dqa%2F2%5D%29%2CTc%3D1e9%3Bta%2Egeo%2EclipExtent%3Dfunction%28%29%7Bvar%20n%2Ct%2Ce%2Cr%2Cu%2Ci%2Co%3D%7Bstream%3Afunction%28n%29%7Breturn%20u%26%26%28u%2Evalid%3D%211%29%2Cu%3Di%28n%29%2Cu%2Evalid%3D%210%2Cu%7D%2Cextent%3Afunction%28a%29%7Breturn%20arguments%2Elength%3F%28i%3DIe%28n%3D%2Ba%5B0%5D%5B0%5D%2Ct%3D%2Ba%5B0%5D%5B1%5D%2Ce%3D%2Ba%5B1%5D%5B0%5D%2Cr%3D%2Ba%5B1%5D%5B1%5D%29%2Cu%26%26%28u%2Evalid%3D%211%2Cu%3Dnull%29%2Co%29%3A%5B%5Bn%2Ct%5D%2C%5Be%2Cr%5D%5D%7D%7D%3Breturn%20o%2Eextent%28%5B%5B0%2C0%5D%2C%5B960%2C500%5D%5D%29%7D%2C%28ta%2Egeo%2EconicEqualArea%3Dfunction%28%29%7Breturn%20Ye%28Ze%29%7D%29%2Eraw%3DZe%2Cta%2Egeo%2Ealbers%3Dfunction%28%29%7Breturn%20ta%2Egeo%2EconicEqualArea%28%29%2Erotate%28%5B96%2C0%5D%29%2Ecenter%28%5B%2D%2E6%2C38%2E7%5D%29%2Eparallels%28%5B29%2E5%2C45%2E5%5D%29%2Escale%281070%29%7D%2Cta%2Egeo%2EalbersUsa%3Dfunction%28%29%7Bfunction%20n%28n%29%7Bvar%20i%3Dn%5B0%5D%2Co%3Dn%5B1%5D%3Breturn%20t%3Dnull%2Ce%28i%2Co%29%2Ct%7C%7C%28r%28i%2Co%29%2Ct%29%7C%7Cu%28i%2Co%29%2Ct%7Dvar%20t%2Ce%2Cr%2Cu%2Ci%3Dta%2Egeo%2Ealbers%28%29%2Co%3Dta%2Egeo%2EconicEqualArea%28%29%2Erotate%28%5B154%2C0%5D%29%2Ecenter%28%5B%2D2%2C58%2E5%5D%29%2Eparallels%28%5B55%2C65%5D%29%2Ca%3Dta%2Egeo%2EconicEqualArea%28%29%2Erotate%28%5B157%2C0%5D%29%2Ecenter%28%5B%2D3%2C19%2E9%5D%29%2Eparallels%28%5B8%2C18%5D%29%2Cc%3D%7Bpoint%3Afunction%28n%2Ce%29%7Bt%3D%5Bn%2Ce%5D%7D%7D%3Breturn%20n%2Einvert%3Dfunction%28n%29%7Bvar%20t%3Di%2Escale%28%29%2Ce%3Di%2Etranslate%28%29%2Cr%3D%28n%5B0%5D%2De%5B0%5D%29%2Ft%2Cu%3D%28n%5B1%5D%2De%5B1%5D%29%2Ft%3Breturn%28u%3E%3D%2E12%26%26%2E234%3Eu%26%26r%3E%3D%2D%2E425%26%26%2D%2E214%3Er%3Fo%3Au%3E%3D%2E166%26%26%2E234%3Eu%26%26r%3E%3D%2D%2E214%26%26%2D%2E115%3Er%3Fa%3Ai%29%2Einvert%28n%29%7D%2Cn%2Estream%3Dfunction%28n%29%7Bvar%20t%3Di%2Estream%28n%29%2Ce%3Do%2Estream%28n%29%2Cr%3Da%2Estream%28n%29%3Breturn%7Bpoint%3Afunction%28n%2Cu%29%7Bt%2Epoint%28n%2Cu%29%2Ce%2Epoint%28n%2Cu%29%2Cr%2Epoint%28n%2Cu%29%7D%2Csphere%3Afunction%28%29%7Bt%2Esphere%28%29%2Ce%2Esphere%28%29%2Cr%2Esphere%28%29%7D%2ClineStart%3Afunction%28%29%7Bt%2ElineStart%28%29%2Ce%2ElineStart%28%29%2Cr%2ElineStart%28%29%7D%2ClineEnd%3Afunction%28%29%7Bt%2ElineEnd%28%29%2Ce%2ElineEnd%28%29%2Cr%2ElineEnd%28%29%7D%2CpolygonStart%3Afunction%28%29%7Bt%2EpolygonStart%28%29%2Ce%2EpolygonStart%28%29%2Cr%2EpolygonStart%28%29%7D%2CpolygonEnd%3Afunction%28%29%7Bt%2EpolygonEnd%28%29%2Ce%2EpolygonEnd%28%29%2Cr%2EpolygonEnd%28%29%7D%7D%7D%2Cn%2Eprecision%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%2Eprecision%28t%29%2Co%2Eprecision%28t%29%2Ca%2Eprecision%28t%29%2Cn%29%3Ai%2Eprecision%28%29%7D%2Cn%2Escale%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%2Escale%28t%29%2Co%2Escale%28%2E35%2At%29%2Ca%2Escale%28t%29%2Cn%2Etranslate%28i%2Etranslate%28%29%29%29%3Ai%2Escale%28%29%7D%2Cn%2Etranslate%3Dfunction%28t%29%7Bif%28%21arguments%2Elength%29return%20i%2Etranslate%28%29%3Bvar%20l%3Di%2Escale%28%29%2Cs%3D%2Bt%5B0%5D%2Cf%3D%2Bt%5B1%5D%3Breturn%20e%3Di%2Etranslate%28t%29%2EclipExtent%28%5B%5Bs%2D%2E455%2Al%2Cf%2D%2E238%2Al%5D%2C%5Bs%2B%2E455%2Al%2Cf%2B%2E238%2Al%5D%5D%29%2Estream%28c%29%2Epoint%2Cr%3Do%2Etranslate%28%5Bs%2D%2E307%2Al%2Cf%2B%2E201%2Al%5D%29%2EclipExtent%28%5B%5Bs%2D%2E425%2Al%2BCa%2Cf%2B%2E12%2Al%2BCa%5D%2C%5Bs%2D%2E214%2Al%2DCa%2Cf%2B%2E234%2Al%2DCa%5D%5D%29%2Estream%28c%29%2Epoint%2Cu%3Da%2Etranslate%28%5Bs%2D%2E205%2Al%2Cf%2B%2E212%2Al%5D%29%2EclipExtent%28%5B%5Bs%2D%2E214%2Al%2BCa%2Cf%2B%2E166%2Al%2BCa%5D%2C%5Bs%2D%2E115%2Al%2DCa%2Cf%2B%2E234%2Al%2DCa%5D%5D%29%2Estream%28c%29%2Epoint%2Cn%7D%2Cn%2Escale%281070%29%7D%3Bvar%20Rc%2CDc%2CPc%2CUc%2Cjc%2CFc%2CHc%3D%7Bpoint%3Ab%2ClineStart%3Ab%2ClineEnd%3Ab%2CpolygonStart%3Afunction%28%29%7BDc%3D0%2CHc%2ElineStart%3DVe%7D%2CpolygonEnd%3Afunction%28%29%7BHc%2ElineStart%3DHc%2ElineEnd%3DHc%2Epoint%3Db%2CRc%2B%3Dga%28Dc%2F2%29%7D%7D%2COc%3D%7Bpoint%3AXe%2ClineStart%3Ab%2ClineEnd%3Ab%2CpolygonStart%3Ab%2CpolygonEnd%3Ab%7D%2CIc%3D%7Bpoint%3AWe%2ClineStart%3AJe%2ClineEnd%3AGe%2CpolygonStart%3Afunction%28%29%7BIc%2ElineStart%3DKe%7D%2CpolygonEnd%3Afunction%28%29%7BIc%2Epoint%3DWe%2CIc%2ElineStart%3DJe%2CIc%2ElineEnd%3DGe%7D%7D%3Bta%2Egeo%2Epath%3Dfunction%28%29%7Bfunction%20n%28n%29%7Breturn%20n%26%26%28%22function%22%3D%3Dtypeof%20a%26%26i%2EpointRadius%28%2Ba%2Eapply%28this%2Carguments%29%29%2Co%26%26o%2Evalid%7C%7C%28o%3Du%28i%29%29%2Cta%2Egeo%2Estream%28n%2Co%29%29%2Ci%2Eresult%28%29%7Dfunction%20t%28%29%7Breturn%20o%3Dnull%2Cn%7Dvar%20e%2Cr%2Cu%2Ci%2Co%2Ca%3D4%2E5%3Breturn%20n%2Earea%3Dfunction%28n%29%7Breturn%20Rc%3D0%2Cta%2Egeo%2Estream%28n%2Cu%28Hc%29%29%2CRc%7D%2Cn%2Ecentroid%3Dfunction%28n%29%7Breturn%20%5Fc%3Dwc%3DSc%3Dkc%3DEc%3DAc%3DNc%3DCc%3Dzc%3D0%2Cta%2Egeo%2Estream%28n%2Cu%28Ic%29%29%2Czc%3F%5BNc%2Fzc%2CCc%2Fzc%5D%3AAc%3F%5Bkc%2FAc%2CEc%2FAc%5D%3ASc%3F%5B%5Fc%2FSc%2Cwc%2FSc%5D%3A%5B0%2F0%2C0%2F0%5D%7D%2Cn%2Ebounds%3Dfunction%28n%29%7Breturn%20jc%3DFc%3D%2D%28Pc%3DUc%3D1%2F0%29%2Cta%2Egeo%2Estream%28n%2Cu%28Oc%29%29%2C%5B%5BPc%2CUc%5D%2C%5Bjc%2CFc%5D%5D%7D%2Cn%2Eprojection%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28u%3D%28e%3Dn%29%3Fn%2Estream%7C%7Ctr%28n%29%3Ay%2Ct%28%29%29%3Ae%7D%2Cn%2Econtext%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28i%3Dnull%3D%3D%28r%3Dn%29%3Fnew%20%24e%3Anew%20Qe%28n%29%2C%22function%22%21%3Dtypeof%20a%26%26i%2EpointRadius%28a%29%2Ct%28%29%29%3Ar%7D%2Cn%2EpointRadius%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28a%3D%22function%22%3D%3Dtypeof%20t%3Ft%3A%28i%2EpointRadius%28%2Bt%29%2C%2Bt%29%2Cn%29%3Aa%7D%2Cn%2Eprojection%28ta%2Egeo%2EalbersUsa%28%29%29%2Econtext%28null%29%7D%2Cta%2Egeo%2Etransform%3Dfunction%28n%29%7Breturn%7Bstream%3Afunction%28t%29%7Bvar%20e%3Dnew%20er%28t%29%3Bfor%28var%20r%20in%20n%29e%5Br%5D%3Dn%5Br%5D%3Breturn%20e%7D%7D%7D%2Cer%2Eprototype%3D%7Bpoint%3Afunction%28n%2Ct%29%7Bthis%2Estream%2Epoint%28n%2Ct%29%7D%2Csphere%3Afunction%28%29%7Bthis%2Estream%2Esphere%28%29%7D%2ClineStart%3Afunction%28%29%7Bthis%2Estream%2ElineStart%28%29%7D%2ClineEnd%3Afunction%28%29%7Bthis%2Estream%2ElineEnd%28%29%7D%2CpolygonStart%3Afunction%28%29%7Bthis%2Estream%2EpolygonStart%28%29%7D%2CpolygonEnd%3Afunction%28%29%7Bthis%2Estream%2EpolygonEnd%28%29%7D%7D%2Cta%2Egeo%2Eprojection%3Dur%2Cta%2Egeo%2EprojectionMutator%3Dir%2C%28ta%2Egeo%2Eequirectangular%3Dfunction%28%29%7Breturn%20ur%28ar%29%7D%29%2Eraw%3Dar%2Einvert%3Dar%2Cta%2Egeo%2Erotation%3Dfunction%28n%29%7Bfunction%20t%28t%29%7Breturn%20t%3Dn%28t%5B0%5D%2ADa%2Ct%5B1%5D%2ADa%29%2Ct%5B0%5D%2A%3DPa%2Ct%5B1%5D%2A%3DPa%2Ct%7Dreturn%20n%3Dlr%28n%5B0%5D%25360%2ADa%2Cn%5B1%5D%2ADa%2Cn%2Elength%3E2%3Fn%5B2%5D%2ADa%3A0%29%2Ct%2Einvert%3Dfunction%28t%29%7Breturn%20t%3Dn%2Einvert%28t%5B0%5D%2ADa%2Ct%5B1%5D%2ADa%29%2Ct%5B0%5D%2A%3DPa%2Ct%5B1%5D%2A%3DPa%2Ct%7D%2Ct%7D%2Ccr%2Einvert%3Dar%2Cta%2Egeo%2Ecircle%3Dfunction%28%29%7Bfunction%20n%28%29%7Bvar%20n%3D%22function%22%3D%3Dtypeof%20r%3Fr%2Eapply%28this%2Carguments%29%3Ar%2Ct%3Dlr%28%2Dn%5B0%5D%2ADa%2C%2Dn%5B1%5D%2ADa%2C0%29%2Einvert%2Cu%3D%5B%5D%3Breturn%20e%28null%2Cnull%2C1%2C%7Bpoint%3Afunction%28n%2Ce%29%7Bu%2Epush%28n%3Dt%28n%2Ce%29%29%2Cn%5B0%5D%2A%3DPa%2Cn%5B1%5D%2A%3DPa%7D%7D%29%2C%7Btype%3A%22Polygon%22%2Ccoordinates%3A%5Bu%5D%7D%7Dvar%20t%2Ce%2Cr%3D%5B0%2C0%5D%2Cu%3D6%3Breturn%20n%2Eorigin%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3Dt%2Cn%29%3Ar%7D%2Cn%2Eangle%3Dfunction%28r%29%7Breturn%20arguments%2Elength%3F%28e%3Dgr%28%28t%3D%2Br%29%2ADa%2Cu%2ADa%29%2Cn%29%3At%7D%2Cn%2Eprecision%3Dfunction%28r%29%7Breturn%20arguments%2Elength%3F%28e%3Dgr%28t%2ADa%2C%28u%3D%2Br%29%2ADa%29%2Cn%29%3Au%7D%2Cn%2Eangle%2890%29%7D%2Cta%2Egeo%2Edistance%3Dfunction%28n%2Ct%29%7Bvar%20e%2Cr%3D%28t%5B0%5D%2Dn%5B0%5D%29%2ADa%2Cu%3Dn%5B1%5D%2ADa%2Ci%3Dt%5B1%5D%2ADa%2Co%3DMath%2Esin%28r%29%2Ca%3DMath%2Ecos%28r%29%2Cc%3DMath%2Esin%28u%29%2Cl%3DMath%2Ecos%28u%29%2Cs%3DMath%2Esin%28i%29%2Cf%3DMath%2Ecos%28i%29%3Breturn%20Math%2Eatan2%28Math%2Esqrt%28%28e%3Df%2Ao%29%2Ae%2B%28e%3Dl%2As%2Dc%2Af%2Aa%29%2Ae%29%2Cc%2As%2Bl%2Af%2Aa%29%7D%2Cta%2Egeo%2Egraticule%3Dfunction%28%29%7Bfunction%20n%28%29%7Breturn%7Btype%3A%22MultiLineString%22%2Ccoordinates%3At%28%29%7D%7Dfunction%20t%28%29%7Breturn%20ta%2Erange%28Math%2Eceil%28i%2Fd%29%2Ad%2Cu%2Cd%29%2Emap%28h%29%2Econcat%28ta%2Erange%28Math%2Eceil%28l%2Fm%29%2Am%2Cc%2Cm%29%2Emap%28g%29%29%2Econcat%28ta%2Erange%28Math%2Eceil%28r%2Fp%29%2Ap%2Ce%2Cp%29%2Efilter%28function%28n%29%7Breturn%20ga%28n%25d%29%3ECa%7D%29%2Emap%28s%29%29%2Econcat%28ta%2Erange%28Math%2Eceil%28a%2Fv%29%2Av%2Co%2Cv%29%2Efilter%28function%28n%29%7Breturn%20ga%28n%25m%29%3ECa%7D%29%2Emap%28f%29%29%7Dvar%20e%2Cr%2Cu%2Ci%2Co%2Ca%2Cc%2Cl%2Cs%2Cf%2Ch%2Cg%2Cp%3D10%2Cv%3Dp%2Cd%3D90%2Cm%3D360%2Cy%3D2%2E5%3Breturn%20n%2Elines%3Dfunction%28%29%7Breturn%20t%28%29%2Emap%28function%28n%29%7Breturn%7Btype%3A%22LineString%22%2Ccoordinates%3An%7D%7D%29%7D%2Cn%2Eoutline%3Dfunction%28%29%7Breturn%7Btype%3A%22Polygon%22%2Ccoordinates%3A%5Bh%28i%29%2Econcat%28g%28c%29%2Eslice%281%29%2Ch%28u%29%2Ereverse%28%29%2Eslice%281%29%2Cg%28l%29%2Ereverse%28%29%2Eslice%281%29%29%5D%7D%7D%2Cn%2Eextent%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3Fn%2EmajorExtent%28t%29%2EminorExtent%28t%29%3An%2EminorExtent%28%29%7D%2Cn%2EmajorExtent%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%3D%2Bt%5B0%5D%5B0%5D%2Cu%3D%2Bt%5B1%5D%5B0%5D%2Cl%3D%2Bt%5B0%5D%5B1%5D%2Cc%3D%2Bt%5B1%5D%5B1%5D%2Ci%3Eu%26%26%28t%3Di%2Ci%3Du%2Cu%3Dt%29%2Cl%3Ec%26%26%28t%3Dl%2Cl%3Dc%2Cc%3Dt%29%2Cn%2Eprecision%28y%29%29%3A%5B%5Bi%2Cl%5D%2C%5Bu%2Cc%5D%5D%7D%2Cn%2EminorExtent%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3D%2Bt%5B0%5D%5B0%5D%2Ce%3D%2Bt%5B1%5D%5B0%5D%2Ca%3D%2Bt%5B0%5D%5B1%5D%2Co%3D%2Bt%5B1%5D%5B1%5D%2Cr%3Ee%26%26%28t%3Dr%2Cr%3De%2Ce%3Dt%29%2Ca%3Eo%26%26%28t%3Da%2Ca%3Do%2Co%3Dt%29%2Cn%2Eprecision%28y%29%29%3A%5B%5Br%2Ca%5D%2C%5Be%2Co%5D%5D%7D%2Cn%2Estep%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3Fn%2EmajorStep%28t%29%2EminorStep%28t%29%3An%2EminorStep%28%29%7D%2Cn%2EmajorStep%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28d%3D%2Bt%5B0%5D%2Cm%3D%2Bt%5B1%5D%2Cn%29%3A%5Bd%2Cm%5D%7D%2Cn%2EminorStep%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28p%3D%2Bt%5B0%5D%2Cv%3D%2Bt%5B1%5D%2Cn%29%3A%5Bp%2Cv%5D%7D%2Cn%2Eprecision%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28y%3D%2Bt%2Cs%3Dvr%28a%2Co%2C90%29%2Cf%3Ddr%28r%2Ce%2Cy%29%2Ch%3Dvr%28l%2Cc%2C90%29%2Cg%3Ddr%28i%2Cu%2Cy%29%2Cn%29%3Ay%7D%2Cn%2EmajorExtent%28%5B%5B%2D180%2C%2D90%2BCa%5D%2C%5B180%2C90%2DCa%5D%5D%29%2EminorExtent%28%5B%5B%2D180%2C%2D80%2DCa%5D%2C%5B180%2C80%2BCa%5D%5D%29%7D%2Cta%2Egeo%2EgreatArc%3Dfunction%28%29%7Bfunction%20n%28%29%7Breturn%7Btype%3A%22LineString%22%2Ccoordinates%3A%5Bt%7C%7Cr%2Eapply%28this%2Carguments%29%2Ce%7C%7Cu%2Eapply%28this%2Carguments%29%5D%7D%7Dvar%20t%2Ce%2Cr%3Dmr%2Cu%3Dyr%3Breturn%20n%2Edistance%3Dfunction%28%29%7Breturn%20ta%2Egeo%2Edistance%28t%7C%7Cr%2Eapply%28this%2Carguments%29%2Ce%7C%7Cu%2Eapply%28this%2Carguments%29%29%7D%2Cn%2Esource%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28r%3De%2Ct%3D%22function%22%3D%3Dtypeof%20e%3Fnull%3Ae%2Cn%29%3Ar%7D%2Cn%2Etarget%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3Dt%2Ce%3D%22function%22%3D%3Dtypeof%20t%3Fnull%3At%2Cn%29%3Au%7D%2Cn%2Eprecision%3Dfunction%28%29%7Breturn%20arguments%2Elength%3Fn%3A0%7D%2Cn%7D%2Cta%2Egeo%2Einterpolate%3Dfunction%28n%2Ct%29%7Breturn%20Mr%28n%5B0%5D%2ADa%2Cn%5B1%5D%2ADa%2Ct%5B0%5D%2ADa%2Ct%5B1%5D%2ADa%29%7D%2Cta%2Egeo%2Elength%3Dfunction%28n%29%7Breturn%20Yc%3D0%2Cta%2Egeo%2Estream%28n%2CZc%29%2CYc%7D%3Bvar%20Yc%2CZc%3D%7Bsphere%3Ab%2Cpoint%3Ab%2ClineStart%3Axr%2ClineEnd%3Ab%2CpolygonStart%3Ab%2CpolygonEnd%3Ab%7D%2CVc%3Dbr%28function%28n%29%7Breturn%20Math%2Esqrt%282%2F%281%2Bn%29%29%7D%2Cfunction%28n%29%7Breturn%202%2AMath%2Easin%28n%2F2%29%7D%29%3B%28ta%2Egeo%2EazimuthalEqualArea%3Dfunction%28%29%7Breturn%20ur%28Vc%29%7D%29%2Eraw%3DVc%3Bvar%20Xc%3Dbr%28function%28n%29%7Bvar%20t%3DMath%2Eacos%28n%29%3Breturn%20t%26%26t%2FMath%2Esin%28t%29%7D%2Cy%29%3B%28ta%2Egeo%2EazimuthalEquidistant%3Dfunction%28%29%7Breturn%20ur%28Xc%29%7D%29%2Eraw%3DXc%2C%28ta%2Egeo%2EconicConformal%3Dfunction%28%29%7Breturn%20Ye%28%5Fr%29%7D%29%2Eraw%3D%5Fr%2C%28ta%2Egeo%2EconicEquidistant%3Dfunction%28%29%7Breturn%20Ye%28wr%29%7D%29%2Eraw%3Dwr%3Bvar%20%24c%3Dbr%28function%28n%29%7Breturn%201%2Fn%7D%2CMath%2Eatan%29%3B%28ta%2Egeo%2Egnomonic%3Dfunction%28%29%7Breturn%20ur%28%24c%29%7D%29%2Eraw%3D%24c%2CSr%2Einvert%3Dfunction%28n%2Ct%29%7Breturn%5Bn%2C2%2AMath%2Eatan%28Math%2Eexp%28t%29%29%2DRa%5D%7D%2C%28ta%2Egeo%2Emercator%3Dfunction%28%29%7Breturn%20kr%28Sr%29%7D%29%2Eraw%3DSr%3Bvar%20Bc%3Dbr%28function%28%29%7Breturn%201%7D%2CMath%2Easin%29%3B%28ta%2Egeo%2Eorthographic%3Dfunction%28%29%7Breturn%20ur%28Bc%29%7D%29%2Eraw%3DBc%3Bvar%20Wc%3Dbr%28function%28n%29%7Breturn%201%2F%281%2Bn%29%7D%2Cfunction%28n%29%7Breturn%202%2AMath%2Eatan%28n%29%7D%29%3B%28ta%2Egeo%2Estereographic%3Dfunction%28%29%7Breturn%20ur%28Wc%29%7D%29%2Eraw%3DWc%2CEr%2Einvert%3Dfunction%28n%2Ct%29%7Breturn%5B%2Dt%2C2%2AMath%2Eatan%28Math%2Eexp%28n%29%29%2DRa%5D%7D%2C%28ta%2Egeo%2EtransverseMercator%3Dfunction%28%29%7Bvar%20n%3Dkr%28Er%29%2Ct%3Dn%2Ecenter%2Ce%3Dn%2Erotate%3Breturn%20n%2Ecenter%3Dfunction%28n%29%7Breturn%20n%3Ft%28%5B%2Dn%5B1%5D%2Cn%5B0%5D%5D%29%3A%28n%3Dt%28%29%2C%5Bn%5B1%5D%2C%2Dn%5B0%5D%5D%29%7D%2Cn%2Erotate%3Dfunction%28n%29%7Breturn%20n%3Fe%28%5Bn%5B0%5D%2Cn%5B1%5D%2Cn%2Elength%3E2%3Fn%5B2%5D%2B90%3A90%5D%29%3A%28n%3De%28%29%2C%5Bn%5B0%5D%2Cn%5B1%5D%2Cn%5B2%5D%2D90%5D%29%7D%2Ce%28%5B0%2C0%2C90%5D%29%7D%29%2Eraw%3DEr%2Cta%2Egeom%3D%7B%7D%2Cta%2Egeom%2Ehull%3Dfunction%28n%29%7Bfunction%20t%28n%29%7Bif%28n%2Elength%3C3%29return%5B%5D%3Bvar%20t%2Cu%3DEt%28e%29%2Ci%3DEt%28r%29%2Co%3Dn%2Elength%2Ca%3D%5B%5D%2Cc%3D%5B%5D%3Bfor%28t%3D0%3Bo%3Et%3Bt%2B%2B%29a%2Epush%28%5B%2Bu%2Ecall%28this%2Cn%5Bt%5D%2Ct%29%2C%2Bi%2Ecall%28this%2Cn%5Bt%5D%2Ct%29%2Ct%5D%29%3Bfor%28a%2Esort%28zr%29%2Ct%3D0%3Bo%3Et%3Bt%2B%2B%29c%2Epush%28%5Ba%5Bt%5D%5B0%5D%2C%2Da%5Bt%5D%5B1%5D%5D%29%3Bvar%20l%3DCr%28a%29%2Cs%3DCr%28c%29%2Cf%3Ds%5B0%5D%3D%3D%3Dl%5B0%5D%2Ch%3Ds%5Bs%2Elength%2D1%5D%3D%3D%3Dl%5Bl%2Elength%2D1%5D%2Cg%3D%5B%5D%3Bfor%28t%3Dl%2Elength%2D1%3Bt%3E%3D0%3B%2D%2Dt%29g%2Epush%28n%5Ba%5Bl%5Bt%5D%5D%5B2%5D%5D%29%3Bfor%28t%3D%2Bf%3Bt%3Cs%2Elength%2Dh%3B%2B%2Bt%29g%2Epush%28n%5Ba%5Bs%5Bt%5D%5D%5B2%5D%5D%29%3Breturn%20g%7Dvar%20e%3DAr%2Cr%3DNr%3Breturn%20arguments%2Elength%3Ft%28n%29%3A%28t%2Ex%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28e%3Dn%2Ct%29%3Ae%7D%2Ct%2Ey%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28r%3Dn%2Ct%29%3Ar%7D%2Ct%29%7D%2Cta%2Egeom%2Epolygon%3Dfunction%28n%29%7Breturn%20ya%28n%2CJc%29%2Cn%7D%3Bvar%20Jc%3Dta%2Egeom%2Epolygon%2Eprototype%3D%5B%5D%3BJc%2Earea%3Dfunction%28%29%7Bfor%28var%20n%2Ct%3D%2D1%2Ce%3Dthis%2Elength%2Cr%3Dthis%5Be%2D1%5D%2Cu%3D0%3B%2B%2Bt%3Ce%3B%29n%3Dr%2Cr%3Dthis%5Bt%5D%2Cu%2B%3Dn%5B1%5D%2Ar%5B0%5D%2Dn%5B0%5D%2Ar%5B1%5D%3Breturn%2E5%2Au%7D%2CJc%2Ecentroid%3Dfunction%28n%29%7Bvar%20t%2Ce%2Cr%3D%2D1%2Cu%3Dthis%2Elength%2Ci%3D0%2Co%3D0%2Ca%3Dthis%5Bu%2D1%5D%3Bfor%28arguments%2Elength%7C%7C%28n%3D%2D1%2F%286%2Athis%2Earea%28%29%29%29%3B%2B%2Br%3Cu%3B%29t%3Da%2Ca%3Dthis%5Br%5D%2Ce%3Dt%5B0%5D%2Aa%5B1%5D%2Da%5B0%5D%2At%5B1%5D%2Ci%2B%3D%28t%5B0%5D%2Ba%5B0%5D%29%2Ae%2Co%2B%3D%28t%5B1%5D%2Ba%5B1%5D%29%2Ae%3Breturn%5Bi%2An%2Co%2An%5D%7D%2CJc%2Eclip%3Dfunction%28n%29%7Bfor%28var%20t%2Ce%2Cr%2Cu%2Ci%2Co%2Ca%3DTr%28n%29%2Cc%3D%2D1%2Cl%3Dthis%2Elength%2DTr%28this%29%2Cs%3Dthis%5Bl%2D1%5D%3B%2B%2Bc%3Cl%3B%29%7Bfor%28t%3Dn%2Eslice%28%29%2Cn%2Elength%3D0%2Cu%3Dthis%5Bc%5D%2Ci%3Dt%5B%28r%3Dt%2Elength%2Da%29%2D1%5D%2Ce%3D%2D1%3B%2B%2Be%3Cr%3B%29o%3Dt%5Be%5D%2Cqr%28o%2Cs%2Cu%29%3F%28qr%28i%2Cs%2Cu%29%7C%7Cn%2Epush%28Lr%28i%2Co%2Cs%2Cu%29%29%2Cn%2Epush%28o%29%29%3Aqr%28i%2Cs%2Cu%29%26%26n%2Epush%28Lr%28i%2Co%2Cs%2Cu%29%29%2Ci%3Do%3Ba%26%26n%2Epush%28n%5B0%5D%29%2Cs%3Du%7Dreturn%20n%7D%3Bvar%20Gc%2CKc%2CQc%2Cnl%2Ctl%2Cel%3D%5B%5D%2Crl%3D%5B%5D%3BOr%2Eprototype%2Eprepare%3Dfunction%28%29%7Bfor%28var%20n%2Ct%3Dthis%2Eedges%2Ce%3Dt%2Elength%3Be%2D%2D%3B%29n%3Dt%5Be%5D%2Eedge%2Cn%2Eb%26%26n%2Ea%7C%7Ct%2Esplice%28e%2C1%29%3Breturn%20t%2Esort%28Yr%29%2Ct%2Elength%7D%2CQr%2Eprototype%3D%7Bstart%3Afunction%28%29%7Breturn%20this%2Eedge%2El%3D%3D%3Dthis%2Esite%3Fthis%2Eedge%2Ea%3Athis%2Eedge%2Eb%7D%2Cend%3Afunction%28%29%7Breturn%20this%2Eedge%2El%3D%3D%3Dthis%2Esite%3Fthis%2Eedge%2Eb%3Athis%2Eedge%2Ea%7D%7D%2Cnu%2Eprototype%3D%7Binsert%3Afunction%28n%2Ct%29%7Bvar%20e%2Cr%2Cu%3Bif%28n%29%7Bif%28t%2EP%3Dn%2Ct%2EN%3Dn%2EN%2Cn%2EN%26%26%28n%2EN%2EP%3Dt%29%2Cn%2EN%3Dt%2Cn%2ER%29%7Bfor%28n%3Dn%2ER%3Bn%2EL%3B%29n%3Dn%2EL%3Bn%2EL%3Dt%7Delse%20n%2ER%3Dt%3Be%3Dn%7Delse%20this%2E%5F%3F%28n%3Duu%28this%2E%5F%29%2Ct%2EP%3Dnull%2Ct%2EN%3Dn%2Cn%2EP%3Dn%2EL%3Dt%2Ce%3Dn%29%3A%28t%2EP%3Dt%2EN%3Dnull%2Cthis%2E%5F%3Dt%2Ce%3Dnull%29%3Bfor%28t%2EL%3Dt%2ER%3Dnull%2Ct%2EU%3De%2Ct%2EC%3D%210%2Cn%3Dt%3Be%26%26e%2EC%3B%29r%3De%2EU%2Ce%3D%3D%3Dr%2EL%3F%28u%3Dr%2ER%2Cu%26%26u%2EC%3F%28e%2EC%3Du%2EC%3D%211%2Cr%2EC%3D%210%2Cn%3Dr%29%3A%28n%3D%3D%3De%2ER%26%26%28eu%28this%2Ce%29%2Cn%3De%2Ce%3Dn%2EU%29%2Ce%2EC%3D%211%2Cr%2EC%3D%210%2Cru%28this%2Cr%29%29%29%3A%28u%3Dr%2EL%2Cu%26%26u%2EC%3F%28e%2EC%3Du%2EC%3D%211%2Cr%2EC%3D%210%2Cn%3Dr%29%3A%28n%3D%3D%3De%2EL%26%26%28ru%28this%2Ce%29%2Cn%3De%2Ce%3Dn%2EU%29%2Ce%2EC%3D%211%2Cr%2EC%3D%210%2Ceu%28this%2Cr%29%29%29%2Ce%3Dn%2EU%3Bthis%2E%5F%2EC%3D%211%7D%2Cremove%3Afunction%28n%29%7Bn%2EN%26%26%28n%2EN%2EP%3Dn%2EP%29%2Cn%2EP%26%26%28n%2EP%2EN%3Dn%2EN%29%2Cn%2EN%3Dn%2EP%3Dnull%3Bvar%20t%2Ce%2Cr%2Cu%3Dn%2EU%2Ci%3Dn%2EL%2Co%3Dn%2ER%3Bif%28e%3Di%3Fo%3Fuu%28o%29%3Ai%3Ao%2Cu%3Fu%2EL%3D%3D%3Dn%3Fu%2EL%3De%3Au%2ER%3De%3Athis%2E%5F%3De%2Ci%26%26o%3F%28r%3De%2EC%2Ce%2EC%3Dn%2EC%2Ce%2EL%3Di%2Ci%2EU%3De%2Ce%21%3D%3Do%3F%28u%3De%2EU%2Ce%2EU%3Dn%2EU%2Cn%3De%2ER%2Cu%2EL%3Dn%2Ce%2ER%3Do%2Co%2EU%3De%29%3A%28e%2EU%3Du%2Cu%3De%2Cn%3De%2ER%29%29%3A%28r%3Dn%2EC%2Cn%3De%29%2Cn%26%26%28n%2EU%3Du%29%2C%21r%29%7Bif%28n%26%26n%2EC%29return%20void%28n%2EC%3D%211%29%3Bdo%7Bif%28n%3D%3D%3Dthis%2E%5F%29break%3Bif%28n%3D%3D%3Du%2EL%29%7Bif%28t%3Du%2ER%2Ct%2EC%26%26%28t%2EC%3D%211%2Cu%2EC%3D%210%2Ceu%28this%2Cu%29%2Ct%3Du%2ER%29%2Ct%2EL%26%26t%2EL%2EC%7C%7Ct%2ER%26%26t%2ER%2EC%29%7Bt%2ER%26%26t%2ER%2EC%7C%7C%28t%2EL%2EC%3D%211%2Ct%2EC%3D%210%2Cru%28this%2Ct%29%2Ct%3Du%2ER%29%2Ct%2EC%3Du%2EC%2Cu%2EC%3Dt%2ER%2EC%3D%211%2Ceu%28this%2Cu%29%2Cn%3Dthis%2E%5F%3Bbreak%7D%7Delse%20if%28t%3Du%2EL%2Ct%2EC%26%26%28t%2EC%3D%211%2Cu%2EC%3D%210%2Cru%28this%2Cu%29%2Ct%3Du%2EL%29%2Ct%2EL%26%26t%2EL%2EC%7C%7Ct%2ER%26%26t%2ER%2EC%29%7Bt%2EL%26%26t%2EL%2EC%7C%7C%28t%2ER%2EC%3D%211%2Ct%2EC%3D%210%2Ceu%28this%2Ct%29%2Ct%3Du%2EL%29%2Ct%2EC%3Du%2EC%2Cu%2EC%3Dt%2EL%2EC%3D%211%2Cru%28this%2Cu%29%2Cn%3Dthis%2E%5F%3Bbreak%7Dt%2EC%3D%210%2Cn%3Du%2Cu%3Du%2EU%7Dwhile%28%21n%2EC%29%3Bn%26%26%28n%2EC%3D%211%29%7D%7D%7D%2Cta%2Egeom%2Evoronoi%3Dfunction%28n%29%7Bfunction%20t%28n%29%7Bvar%20t%3Dnew%20Array%28n%2Elength%29%2Cr%3Da%5B0%5D%5B0%5D%2Cu%3Da%5B0%5D%5B1%5D%2Ci%3Da%5B1%5D%5B0%5D%2Co%3Da%5B1%5D%5B1%5D%3Breturn%20iu%28e%28n%29%2Ca%29%2Ecells%2EforEach%28function%28e%2Ca%29%7Bvar%20c%3De%2Eedges%2Cl%3De%2Esite%2Cs%3Dt%5Ba%5D%3Dc%2Elength%3Fc%2Emap%28function%28n%29%7Bvar%20t%3Dn%2Estart%28%29%3Breturn%5Bt%2Ex%2Ct%2Ey%5D%7D%29%3Al%2Ex%3E%3Dr%26%26l%2Ex%3C%3Di%26%26l%2Ey%3E%3Du%26%26l%2Ey%3C%3Do%3F%5B%5Br%2Co%5D%2C%5Bi%2Co%5D%2C%5Bi%2Cu%5D%2C%5Br%2Cu%5D%5D%3A%5B%5D%3Bs%2Epoint%3Dn%5Ba%5D%7D%29%2Ct%7Dfunction%20e%28n%29%7Breturn%20n%2Emap%28function%28n%2Ct%29%7Breturn%7Bx%3AMath%2Eround%28i%28n%2Ct%29%2FCa%29%2ACa%2Cy%3AMath%2Eround%28o%28n%2Ct%29%2FCa%29%2ACa%2Ci%3At%7D%7D%29%7Dvar%20r%3DAr%2Cu%3DNr%2Ci%3Dr%2Co%3Du%2Ca%3Dul%3Breturn%20n%3Ft%28n%29%3A%28t%2Elinks%3Dfunction%28n%29%7Breturn%20iu%28e%28n%29%29%2Eedges%2Efilter%28function%28n%29%7Breturn%20n%2El%26%26n%2Er%7D%29%2Emap%28function%28t%29%7Breturn%7Bsource%3An%5Bt%2El%2Ei%5D%2Ctarget%3An%5Bt%2Er%2Ei%5D%7D%7D%29%7D%2Ct%2Etriangles%3Dfunction%28n%29%7Bvar%20t%3D%5B%5D%3Breturn%20iu%28e%28n%29%29%2Ecells%2EforEach%28function%28e%2Cr%29%7Bfor%28var%20u%2Ci%2Co%3De%2Esite%2Ca%3De%2Eedges%2Esort%28Yr%29%2Cc%3D%2D1%2Cl%3Da%2Elength%2Cs%3Da%5Bl%2D1%5D%2Eedge%2Cf%3Ds%2El%3D%3D%3Do%3Fs%2Er%3As%2El%3B%2B%2Bc%3Cl%3B%29u%3Ds%2Ci%3Df%2Cs%3Da%5Bc%5D%2Eedge%2Cf%3Ds%2El%3D%3D%3Do%3Fs%2Er%3As%2El%2Cr%3Ci%2Ei%26%26r%3Cf%2Ei%26%26au%28o%2Ci%2Cf%29%3C0%26%26t%2Epush%28%5Bn%5Br%5D%2Cn%5Bi%2Ei%5D%2Cn%5Bf%2Ei%5D%5D%29%7D%29%2Ct%7D%2Ct%2Ex%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28i%3DEt%28r%3Dn%29%2Ct%29%3Ar%7D%2Ct%2Ey%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28o%3DEt%28u%3Dn%29%2Ct%29%3Au%7D%2Ct%2EclipExtent%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28a%3Dnull%3D%3Dn%3Ful%3An%2Ct%29%3Aa%3D%3D%3Dul%3Fnull%3Aa%7D%2Ct%2Esize%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3Ft%2EclipExtent%28n%26%26%5B%5B0%2C0%5D%2Cn%5D%29%3Aa%3D%3D%3Dul%3Fnull%3Aa%26%26a%5B1%5D%7D%2Ct%29%7D%3Bvar%20ul%3D%5B%5B%2D1e6%2C%2D1e6%5D%2C%5B1e6%2C1e6%5D%5D%3Bta%2Egeom%2Edelaunay%3Dfunction%28n%29%7Breturn%20ta%2Egeom%2Evoronoi%28%29%2Etriangles%28n%29%7D%2Cta%2Egeom%2Equadtree%3Dfunction%28n%2Ct%2Ce%2Cr%2Cu%29%7Bfunction%20i%28n%29%7Bfunction%20i%28n%2Ct%2Ce%2Cr%2Cu%2Ci%2Co%2Ca%29%7Bif%28%21isNaN%28e%29%26%26%21isNaN%28r%29%29if%28n%2Eleaf%29%7Bvar%20c%3Dn%2Ex%2Cs%3Dn%2Ey%3Bif%28null%21%3Dc%29if%28ga%28c%2De%29%2Bga%28s%2Dr%29%3C%2E01%29l%28n%2Ct%2Ce%2Cr%2Cu%2Ci%2Co%2Ca%29%3Belse%7Bvar%20f%3Dn%2Epoint%3Bn%2Ex%3Dn%2Ey%3Dn%2Epoint%3Dnull%2Cl%28n%2Cf%2Cc%2Cs%2Cu%2Ci%2Co%2Ca%29%2Cl%28n%2Ct%2Ce%2Cr%2Cu%2Ci%2Co%2Ca%29%7Delse%20n%2Ex%3De%2Cn%2Ey%3Dr%2Cn%2Epoint%3Dt%7Delse%20l%28n%2Ct%2Ce%2Cr%2Cu%2Ci%2Co%2Ca%29%7Dfunction%20l%28n%2Ct%2Ce%2Cr%2Cu%2Co%2Ca%2Cc%29%7Bvar%20l%3D%2E5%2A%28u%2Ba%29%2Cs%3D%2E5%2A%28o%2Bc%29%2Cf%3De%3E%3Dl%2Ch%3Dr%3E%3Ds%2Cg%3Dh%3C%3C1%7Cf%3Bn%2Eleaf%3D%211%2Cn%3Dn%2Enodes%5Bg%5D%7C%7C%28n%2Enodes%5Bg%5D%3Dsu%28%29%29%2Cf%3Fu%3Dl%3Aa%3Dl%2Ch%3Fo%3Ds%3Ac%3Ds%2Ci%28n%2Ct%2Ce%2Cr%2Cu%2Co%2Ca%2Cc%29%7Dvar%20s%2Cf%2Ch%2Cg%2Cp%2Cv%2Cd%2Cm%2Cy%2CM%3DEt%28a%29%2Cx%3DEt%28c%29%3Bif%28null%21%3Dt%29v%3Dt%2Cd%3De%2Cm%3Dr%2Cy%3Du%3Belse%20if%28m%3Dy%3D%2D%28v%3Dd%3D1%2F0%29%2Cf%3D%5B%5D%2Ch%3D%5B%5D%2Cp%3Dn%2Elength%2Co%29for%28g%3D0%3Bp%3Eg%3B%2B%2Bg%29s%3Dn%5Bg%5D%2Cs%2Ex%3Cv%26%26%28v%3Ds%2Ex%29%2Cs%2Ey%3Cd%26%26%28d%3Ds%2Ey%29%2Cs%2Ex%3Em%26%26%28m%3Ds%2Ex%29%2Cs%2Ey%3Ey%26%26%28y%3Ds%2Ey%29%2Cf%2Epush%28s%2Ex%29%2Ch%2Epush%28s%2Ey%29%3Belse%20for%28g%3D0%3Bp%3Eg%3B%2B%2Bg%29%7Bvar%20b%3D%2BM%28s%3Dn%5Bg%5D%2Cg%29%2C%5F%3D%2Bx%28s%2Cg%29%3Bv%3Eb%26%26%28v%3Db%29%2Cd%3E%5F%26%26%28d%3D%5F%29%2Cb%3Em%26%26%28m%3Db%29%2C%5F%3Ey%26%26%28y%3D%5F%29%2Cf%2Epush%28b%29%2Ch%2Epush%28%5F%29%7Dvar%20w%3Dm%2Dv%2CS%3Dy%2Dd%3Bw%3ES%3Fy%3Dd%2Bw%3Am%3Dv%2BS%3Bvar%20k%3Dsu%28%29%3Bif%28k%2Eadd%3Dfunction%28n%29%7Bi%28k%2Cn%2C%2BM%28n%2C%2B%2Bg%29%2C%2Bx%28n%2Cg%29%2Cv%2Cd%2Cm%2Cy%29%7D%2Ck%2Evisit%3Dfunction%28n%29%7Bfu%28n%2Ck%2Cv%2Cd%2Cm%2Cy%29%7D%2Ck%2Efind%3Dfunction%28n%29%7Breturn%20hu%28k%2Cn%5B0%5D%2Cn%5B1%5D%2Cv%2Cd%2Cm%2Cy%29%7D%2Cg%3D%2D1%2Cnull%3D%3Dt%29%7Bfor%28%3B%2B%2Bg%3Cp%3B%29i%28k%2Cn%5Bg%5D%2Cf%5Bg%5D%2Ch%5Bg%5D%2Cv%2Cd%2Cm%2Cy%29%3B%2D%2Dg%7Delse%20n%2EforEach%28k%2Eadd%29%3Breturn%20f%3Dh%3Dn%3Ds%3Dnull%2Ck%7Dvar%20o%2Ca%3DAr%2Cc%3DNr%3Breturn%28o%3Darguments%2Elength%29%3F%28a%3Dcu%2Cc%3Dlu%2C3%3D%3D%3Do%26%26%28u%3De%2Cr%3Dt%2Ce%3Dt%3D0%29%2Ci%28n%29%29%3A%28i%2Ex%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28a%3Dn%2Ci%29%3Aa%7D%2Ci%2Ey%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28c%3Dn%2Ci%29%3Ac%7D%2Ci%2Eextent%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28null%3D%3Dn%3Ft%3De%3Dr%3Du%3Dnull%3A%28t%3D%2Bn%5B0%5D%5B0%5D%2Ce%3D%2Bn%5B0%5D%5B1%5D%2Cr%3D%2Bn%5B1%5D%5B0%5D%2Cu%3D%2Bn%5B1%5D%5B1%5D%29%2Ci%29%3Anull%3D%3Dt%3Fnull%3A%5B%5Bt%2Ce%5D%2C%5Br%2Cu%5D%5D%7D%2Ci%2Esize%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28null%3D%3Dn%3Ft%3De%3Dr%3Du%3Dnull%3A%28t%3De%3D0%2Cr%3D%2Bn%5B0%5D%2Cu%3D%2Bn%5B1%5D%29%2Ci%29%3Anull%3D%3Dt%3Fnull%3A%5Br%2Dt%2Cu%2De%5D%7D%2Ci%29%7D%2Cta%2EinterpolateRgb%3Dgu%2Cta%2EinterpolateObject%3Dpu%2Cta%2EinterpolateNumber%3Dvu%2Cta%2EinterpolateString%3Ddu%3Bvar%20il%3D%2F%5B%2D%2B%5D%3F%28%3F%3A%5Cd%2B%5C%2E%3F%5Cd%2A%7C%5C%2E%3F%5Cd%2B%29%28%3F%3A%5BeE%5D%5B%2D%2B%5D%3F%5Cd%2B%29%3F%2Fg%2Col%3Dnew%20RegExp%28il%2Esource%2C%22g%22%29%3Bta%2Einterpolate%3Dmu%2Cta%2Einterpolators%3D%5Bfunction%28n%2Ct%29%7Bvar%20e%3Dtypeof%20t%3Breturn%28%22string%22%3D%3D%3De%3FGa%2Ehas%28t%29%7C%7C%2F%5E%28%23%7Crgb%5C%28%7Chsl%5C%28%29%2F%2Etest%28t%29%3Fgu%3Adu%3At%20instanceof%20ot%3Fgu%3AArray%2EisArray%28t%29%3Fyu%3A%22object%22%3D%3D%3De%26%26isNaN%28t%29%3Fpu%3Avu%29%28n%2Ct%29%7D%5D%2Cta%2EinterpolateArray%3Dyu%3Bvar%20al%3Dfunction%28%29%7Breturn%20y%7D%2Ccl%3Dta%2Emap%28%7Blinear%3Aal%2Cpoly%3Aku%2Cquad%3Afunction%28%29%7Breturn%20%5Fu%7D%2Ccubic%3Afunction%28%29%7Breturn%20wu%7D%2Csin%3Afunction%28%29%7Breturn%20Eu%7D%2Cexp%3Afunction%28%29%7Breturn%20Au%7D%2Ccircle%3Afunction%28%29%7Breturn%20Nu%7D%2Celastic%3ACu%2Cback%3Azu%2Cbounce%3Afunction%28%29%7Breturn%20qu%7D%7D%29%2Cll%3Dta%2Emap%28%7B%22in%22%3Ay%2Cout%3Axu%2C%22in%2Dout%22%3Abu%2C%22out%2Din%22%3Afunction%28n%29%7Breturn%20bu%28xu%28n%29%29%7D%7D%29%3Bta%2Eease%3Dfunction%28n%29%7Bvar%20t%3Dn%2EindexOf%28%22%2D%22%29%2Ce%3Dt%3E%3D0%3Fn%2Eslice%280%2Ct%29%3An%2Cr%3Dt%3E%3D0%3Fn%2Eslice%28t%2B1%29%3A%22in%22%3Breturn%20e%3Dcl%2Eget%28e%29%7C%7Cal%2Cr%3Dll%2Eget%28r%29%7C%7Cy%2CMu%28r%28e%2Eapply%28null%2Cea%2Ecall%28arguments%2C1%29%29%29%29%7D%2Cta%2EinterpolateHcl%3DLu%2Cta%2EinterpolateHsl%3DTu%2Cta%2EinterpolateLab%3DRu%2Cta%2EinterpolateRound%3DDu%2Cta%2Etransform%3Dfunction%28n%29%7Bvar%20t%3Dua%2EcreateElementNS%28ta%2Ens%2Eprefix%2Esvg%2C%22g%22%29%3Breturn%28ta%2Etransform%3Dfunction%28n%29%7Bif%28null%21%3Dn%29%7Bt%2EsetAttribute%28%22transform%22%2Cn%29%3Bvar%20e%3Dt%2Etransform%2EbaseVal%2Econsolidate%28%29%7Dreturn%20new%20Pu%28e%3Fe%2Ematrix%3Asl%29%7D%29%28n%29%7D%2CPu%2Eprototype%2EtoString%3Dfunction%28%29%7Breturn%22translate%28%22%2Bthis%2Etranslate%2B%22%29rotate%28%22%2Bthis%2Erotate%2B%22%29skewX%28%22%2Bthis%2Eskew%2B%22%29scale%28%22%2Bthis%2Escale%2B%22%29%22%7D%3Bvar%20sl%3D%7Ba%3A1%2Cb%3A0%2Cc%3A0%2Cd%3A1%2Ce%3A0%2Cf%3A0%7D%3Bta%2EinterpolateTransform%3DHu%2Cta%2Elayout%3D%7B%7D%2Cta%2Elayout%2Ebundle%3Dfunction%28%29%7Breturn%20function%28n%29%7Bfor%28var%20t%3D%5B%5D%2Ce%3D%2D1%2Cr%3Dn%2Elength%3B%2B%2Be%3Cr%3B%29t%2Epush%28Yu%28n%5Be%5D%29%29%3Breturn%20t%7D%7D%2Cta%2Elayout%2Echord%3Dfunction%28%29%7Bfunction%20n%28%29%7Bvar%20n%2Cl%2Cf%2Ch%2Cg%2Cp%3D%7B%7D%2Cv%3D%5B%5D%2Cd%3Dta%2Erange%28i%29%2Cm%3D%5B%5D%3Bfor%28e%3D%5B%5D%2Cr%3D%5B%5D%2Cn%3D0%2Ch%3D%2D1%3B%2B%2Bh%3Ci%3B%29%7Bfor%28l%3D0%2Cg%3D%2D1%3B%2B%2Bg%3Ci%3B%29l%2B%3Du%5Bh%5D%5Bg%5D%3Bv%2Epush%28l%29%2Cm%2Epush%28ta%2Erange%28i%29%29%2Cn%2B%3Dl%7Dfor%28o%26%26d%2Esort%28function%28n%2Ct%29%7Breturn%20o%28v%5Bn%5D%2Cv%5Bt%5D%29%7D%29%2Ca%26%26m%2EforEach%28function%28n%2Ct%29%7Bn%2Esort%28function%28n%2Ce%29%7Breturn%20a%28u%5Bt%5D%5Bn%5D%2Cu%5Bt%5D%5Be%5D%29%7D%29%7D%29%2Cn%3D%28La%2Ds%2Ai%29%2Fn%2Cl%3D0%2Ch%3D%2D1%3B%2B%2Bh%3Ci%3B%29%7Bfor%28f%3Dl%2Cg%3D%2D1%3B%2B%2Bg%3Ci%3B%29%7Bvar%20y%3Dd%5Bh%5D%2CM%3Dm%5By%5D%5Bg%5D%2Cx%3Du%5By%5D%5BM%5D%2Cb%3Dl%2C%5F%3Dl%2B%3Dx%2An%3Bp%5By%2B%22%2D%22%2BM%5D%3D%7Bindex%3Ay%2Csubindex%3AM%2CstartAngle%3Ab%2CendAngle%3A%5F%2Cvalue%3Ax%7D%7Dr%5By%5D%3D%7Bindex%3Ay%2CstartAngle%3Af%2CendAngle%3Al%2Cvalue%3A%28l%2Df%29%2Fn%7D%2Cl%2B%3Ds%7Dfor%28h%3D%2D1%3B%2B%2Bh%3Ci%3B%29for%28g%3Dh%2D1%3B%2B%2Bg%3Ci%3B%29%7Bvar%20w%3Dp%5Bh%2B%22%2D%22%2Bg%5D%2CS%3Dp%5Bg%2B%22%2D%22%2Bh%5D%3B%28w%2Evalue%7C%7CS%2Evalue%29%26%26e%2Epush%28w%2Evalue%3CS%2Evalue%3F%7Bsource%3AS%2Ctarget%3Aw%7D%3A%7Bsource%3Aw%2Ctarget%3AS%7D%29%7Dc%26%26t%28%29%7Dfunction%20t%28%29%7Be%2Esort%28function%28n%2Ct%29%7Breturn%20c%28%28n%2Esource%2Evalue%2Bn%2Etarget%2Evalue%29%2F2%2C%28t%2Esource%2Evalue%2Bt%2Etarget%2Evalue%29%2F2%29%7D%29%7Dvar%20e%2Cr%2Cu%2Ci%2Co%2Ca%2Cc%2Cl%3D%7B%7D%2Cs%3D0%3Breturn%20l%2Ematrix%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28i%3D%28u%3Dn%29%26%26u%2Elength%2Ce%3Dr%3Dnull%2Cl%29%3Au%7D%2Cl%2Epadding%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28s%3Dn%2Ce%3Dr%3Dnull%2Cl%29%3As%7D%2Cl%2EsortGroups%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28o%3Dn%2Ce%3Dr%3Dnull%2Cl%29%3Ao%7D%2Cl%2EsortSubgroups%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28a%3Dn%2Ce%3Dnull%2Cl%29%3Aa%7D%2Cl%2EsortChords%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28c%3Dn%2Ce%26%26t%28%29%2Cl%29%3Ac%7D%2Cl%2Echords%3Dfunction%28%29%7Breturn%20e%7C%7Cn%28%29%2Ce%7D%2Cl%2Egroups%3Dfunction%28%29%7Breturn%20r%7C%7Cn%28%29%2Cr%7D%2Cl%7D%2Cta%2Elayout%2Eforce%3Dfunction%28%29%7Bfunction%20n%28n%29%7Breturn%20function%28t%2Ce%2Cr%2Cu%29%7Bif%28t%2Epoint%21%3D%3Dn%29%7Bvar%20i%3Dt%2Ecx%2Dn%2Ex%2Co%3Dt%2Ecy%2Dn%2Ey%2Ca%3Du%2De%2Cc%3Di%2Ai%2Bo%2Ao%3Bif%28c%3Ea%2Aa%2Fd%29%7Bif%28p%3Ec%29%7Bvar%20l%3Dt%2Echarge%2Fc%3Bn%2Epx%2D%3Di%2Al%2Cn%2Epy%2D%3Do%2Al%7Dreturn%210%7Dif%28t%2Epoint%26%26c%26%26p%3Ec%29%7Bvar%20l%3Dt%2EpointCharge%2Fc%3Bn%2Epx%2D%3Di%2Al%2Cn%2Epy%2D%3Do%2Al%7D%7Dreturn%21t%2Echarge%7D%7Dfunction%20t%28n%29%7Bn%2Epx%3Dta%2Eevent%2Ex%2Cn%2Epy%3Dta%2Eevent%2Ey%2Ca%2Eresume%28%29%7Dvar%20e%2Cr%2Cu%2Ci%2Co%2Ca%3D%7B%7D%2Cc%3Dta%2Edispatch%28%22start%22%2C%22tick%22%2C%22end%22%29%2Cl%3D%5B1%2C1%5D%2Cs%3D%2E9%2Cf%3Dfl%2Ch%3Dhl%2Cg%3D%2D30%2Cp%3Dgl%2Cv%3D%2E1%2Cd%3D%2E64%2Cm%3D%5B%5D%2CM%3D%5B%5D%3Breturn%20a%2Etick%3Dfunction%28%29%7Bif%28%28r%2A%3D%2E99%29%3C%2E005%29return%20c%2Eend%28%7Btype%3A%22end%22%2Calpha%3Ar%3D0%7D%29%2C%210%3Bvar%20t%2Ce%2Ca%2Cf%2Ch%2Cp%2Cd%2Cy%2Cx%2Cb%3Dm%2Elength%2C%5F%3DM%2Elength%3Bfor%28e%3D0%3B%5F%3Ee%3B%2B%2Be%29a%3DM%5Be%5D%2Cf%3Da%2Esource%2Ch%3Da%2Etarget%2Cy%3Dh%2Ex%2Df%2Ex%2Cx%3Dh%2Ey%2Df%2Ey%2C%28p%3Dy%2Ay%2Bx%2Ax%29%26%26%28p%3Dr%2Ai%5Be%5D%2A%28%28p%3DMath%2Esqrt%28p%29%29%2Du%5Be%5D%29%2Fp%2Cy%2A%3Dp%2Cx%2A%3Dp%2Ch%2Ex%2D%3Dy%2A%28d%3Df%2Eweight%2F%28h%2Eweight%2Bf%2Eweight%29%29%2Ch%2Ey%2D%3Dx%2Ad%2Cf%2Ex%2B%3Dy%2A%28d%3D1%2Dd%29%2Cf%2Ey%2B%3Dx%2Ad%29%3Bif%28%28d%3Dr%2Av%29%26%26%28y%3Dl%5B0%5D%2F2%2Cx%3Dl%5B1%5D%2F2%2Ce%3D%2D1%2Cd%29%29for%28%3B%2B%2Be%3Cb%3B%29a%3Dm%5Be%5D%2Ca%2Ex%2B%3D%28y%2Da%2Ex%29%2Ad%2Ca%2Ey%2B%3D%28x%2Da%2Ey%29%2Ad%3Bif%28g%29for%28Ju%28t%3Dta%2Egeom%2Equadtree%28m%29%2Cr%2Co%29%2Ce%3D%2D1%3B%2B%2Be%3Cb%3B%29%28a%3Dm%5Be%5D%29%2Efixed%7C%7Ct%2Evisit%28n%28a%29%29%3Bfor%28e%3D%2D1%3B%2B%2Be%3Cb%3B%29a%3Dm%5Be%5D%2Ca%2Efixed%3F%28a%2Ex%3Da%2Epx%2Ca%2Ey%3Da%2Epy%29%3A%28a%2Ex%2D%3D%28a%2Epx%2D%28a%2Epx%3Da%2Ex%29%29%2As%2Ca%2Ey%2D%3D%28a%2Epy%2D%28a%2Epy%3Da%2Ey%29%29%2As%29%3Bc%2Etick%28%7Btype%3A%22tick%22%2Calpha%3Ar%7D%29%7D%2Ca%2Enodes%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28m%3Dn%2Ca%29%3Am%7D%2Ca%2Elinks%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28M%3Dn%2Ca%29%3AM%7D%2Ca%2Esize%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28l%3Dn%2Ca%29%3Al%7D%2Ca%2ElinkDistance%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28f%3D%22function%22%3D%3Dtypeof%20n%3Fn%3A%2Bn%2Ca%29%3Af%7D%2Ca%2Edistance%3Da%2ElinkDistance%2Ca%2ElinkStrength%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28h%3D%22function%22%3D%3Dtypeof%20n%3Fn%3A%2Bn%2Ca%29%3Ah%7D%2Ca%2Efriction%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28s%3D%2Bn%2Ca%29%3As%7D%2Ca%2Echarge%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28g%3D%22function%22%3D%3Dtypeof%20n%3Fn%3A%2Bn%2Ca%29%3Ag%7D%2Ca%2EchargeDistance%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28p%3Dn%2An%2Ca%29%3AMath%2Esqrt%28p%29%7D%2Ca%2Egravity%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28v%3D%2Bn%2Ca%29%3Av%7D%2Ca%2Etheta%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28d%3Dn%2An%2Ca%29%3AMath%2Esqrt%28d%29%7D%2Ca%2Ealpha%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28n%3D%2Bn%2Cr%3Fr%3Dn%3E0%3Fn%3A0%3An%3E0%26%26%28c%2Estart%28%7Btype%3A%22start%22%2Calpha%3Ar%3Dn%7D%29%2Cta%2Etimer%28a%2Etick%29%29%2Ca%29%3Ar%7D%2Ca%2Estart%3Dfunction%28%29%7Bfunction%20n%28n%2Cr%29%7Bif%28%21e%29%7Bfor%28e%3Dnew%20Array%28c%29%2Ca%3D0%3Bc%3Ea%3B%2B%2Ba%29e%5Ba%5D%3D%5B%5D%3Bfor%28a%3D0%3Bs%3Ea%3B%2B%2Ba%29%7Bvar%20u%3DM%5Ba%5D%3Be%5Bu%2Esource%2Eindex%5D%2Epush%28u%2Etarget%29%2Ce%5Bu%2Etarget%2Eindex%5D%2Epush%28u%2Esource%29%7D%7Dfor%28var%20i%2Co%3De%5Bt%5D%2Ca%3D%2D1%2Cl%3Do%2Elength%3B%2B%2Ba%3Cl%3B%29if%28%21isNaN%28i%3Do%5Ba%5D%5Bn%5D%29%29return%20i%3Breturn%20Math%2Erandom%28%29%2Ar%7Dvar%20t%2Ce%2Cr%2Cc%3Dm%2Elength%2Cs%3DM%2Elength%2Cp%3Dl%5B0%5D%2Cv%3Dl%5B1%5D%3Bfor%28t%3D0%3Bc%3Et%3B%2B%2Bt%29%28r%3Dm%5Bt%5D%29%2Eindex%3Dt%2Cr%2Eweight%3D0%3Bfor%28t%3D0%3Bs%3Et%3B%2B%2Bt%29r%3DM%5Bt%5D%2C%22number%22%3D%3Dtypeof%20r%2Esource%26%26%28r%2Esource%3Dm%5Br%2Esource%5D%29%2C%22number%22%3D%3Dtypeof%20r%2Etarget%26%26%28r%2Etarget%3Dm%5Br%2Etarget%5D%29%2C%2B%2Br%2Esource%2Eweight%2C%2B%2Br%2Etarget%2Eweight%3Bfor%28t%3D0%3Bc%3Et%3B%2B%2Bt%29r%3Dm%5Bt%5D%2CisNaN%28r%2Ex%29%26%26%28r%2Ex%3Dn%28%22x%22%2Cp%29%29%2CisNaN%28r%2Ey%29%26%26%28r%2Ey%3Dn%28%22y%22%2Cv%29%29%2CisNaN%28r%2Epx%29%26%26%28r%2Epx%3Dr%2Ex%29%2CisNaN%28r%2Epy%29%26%26%28r%2Epy%3Dr%2Ey%29%3Bif%28u%3D%5B%5D%2C%22function%22%3D%3Dtypeof%20f%29for%28t%3D0%3Bs%3Et%3B%2B%2Bt%29u%5Bt%5D%3D%2Bf%2Ecall%28this%2CM%5Bt%5D%2Ct%29%3Belse%20for%28t%3D0%3Bs%3Et%3B%2B%2Bt%29u%5Bt%5D%3Df%3Bif%28i%3D%5B%5D%2C%22function%22%3D%3Dtypeof%20h%29for%28t%3D0%3Bs%3Et%3B%2B%2Bt%29i%5Bt%5D%3D%2Bh%2Ecall%28this%2CM%5Bt%5D%2Ct%29%3Belse%20for%28t%3D0%3Bs%3Et%3B%2B%2Bt%29i%5Bt%5D%3Dh%3Bif%28o%3D%5B%5D%2C%22function%22%3D%3Dtypeof%20g%29for%28t%3D0%3Bc%3Et%3B%2B%2Bt%29o%5Bt%5D%3D%2Bg%2Ecall%28this%2Cm%5Bt%5D%2Ct%29%3Belse%20for%28t%3D0%3Bc%3Et%3B%2B%2Bt%29o%5Bt%5D%3Dg%3Breturn%20a%2Eresume%28%29%7D%2Ca%2Eresume%3Dfunction%28%29%7Breturn%20a%2Ealpha%28%2E1%29%7D%2Ca%2Estop%3Dfunction%28%29%7Breturn%20a%2Ealpha%280%29%7D%2Ca%2Edrag%3Dfunction%28%29%7Breturn%20e%7C%7C%28e%3Dta%2Ebehavior%2Edrag%28%29%2Eorigin%28y%29%2Eon%28%22dragstart%2Eforce%22%2CXu%29%2Eon%28%22drag%2Eforce%22%2Ct%29%2Eon%28%22dragend%2Eforce%22%2C%24u%29%29%2Carguments%2Elength%3Fvoid%20this%2Eon%28%22mouseover%2Eforce%22%2CBu%29%2Eon%28%22mouseout%2Eforce%22%2CWu%29%2Ecall%28e%29%3Ae%7D%2Cta%2Erebind%28a%2Cc%2C%22on%22%29%7D%3Bvar%20fl%3D20%2Chl%3D1%2Cgl%3D1%2F0%3Bta%2Elayout%2Ehierarchy%3Dfunction%28%29%7Bfunction%20n%28u%29%7Bvar%20i%2Co%3D%5Bu%5D%2Ca%3D%5B%5D%3Bfor%28u%2Edepth%3D0%3Bnull%21%3D%28i%3Do%2Epop%28%29%29%3B%29if%28a%2Epush%28i%29%2C%28l%3De%2Ecall%28n%2Ci%2Ci%2Edepth%29%29%26%26%28c%3Dl%2Elength%29%29%7Bfor%28var%20c%2Cl%2Cs%3B%2D%2Dc%3E%3D0%3B%29o%2Epush%28s%3Dl%5Bc%5D%29%2Cs%2Eparent%3Di%2Cs%2Edepth%3Di%2Edepth%2B1%3Br%26%26%28i%2Evalue%3D0%29%2Ci%2Echildren%3Dl%7Delse%20r%26%26%28i%2Evalue%3D%2Br%2Ecall%28n%2Ci%2Ci%2Edepth%29%7C%7C0%29%2Cdelete%20i%2Echildren%3Breturn%20Qu%28u%2Cfunction%28n%29%7Bvar%20e%2Cu%3Bt%26%26%28e%3Dn%2Echildren%29%26%26e%2Esort%28t%29%2Cr%26%26%28u%3Dn%2Eparent%29%26%26%28u%2Evalue%2B%3Dn%2Evalue%29%7D%29%2Ca%7Dvar%20t%3Dei%2Ce%3Dni%2Cr%3Dti%3Breturn%20n%2Esort%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3De%2Cn%29%3At%7D%2Cn%2Echildren%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3Dt%2Cn%29%3Ae%7D%2Cn%2Evalue%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3Dt%2Cn%29%3Ar%7D%2Cn%2Erevalue%3Dfunction%28t%29%7Breturn%20r%26%26%28Ku%28t%2Cfunction%28n%29%7Bn%2Echildren%26%26%28n%2Evalue%3D0%29%7D%29%2CQu%28t%2Cfunction%28t%29%7Bvar%20e%3Bt%2Echildren%7C%7C%28t%2Evalue%3D%2Br%2Ecall%28n%2Ct%2Ct%2Edepth%29%7C%7C0%29%2C%28e%3Dt%2Eparent%29%26%26%28e%2Evalue%2B%3Dt%2Evalue%29%7D%29%29%2Ct%7D%2Cn%7D%2Cta%2Elayout%2Epartition%3Dfunction%28%29%7Bfunction%20n%28t%2Ce%2Cr%2Cu%29%7Bvar%20i%3Dt%2Echildren%3Bif%28t%2Ex%3De%2Ct%2Ey%3Dt%2Edepth%2Au%2Ct%2Edx%3Dr%2Ct%2Edy%3Du%2Ci%26%26%28o%3Di%2Elength%29%29%7Bvar%20o%2Ca%2Cc%2Cl%3D%2D1%3Bfor%28r%3Dt%2Evalue%3Fr%2Ft%2Evalue%3A0%3B%2B%2Bl%3Co%3B%29n%28a%3Di%5Bl%5D%2Ce%2Cc%3Da%2Evalue%2Ar%2Cu%29%2Ce%2B%3Dc%7D%7Dfunction%20t%28n%29%7Bvar%20e%3Dn%2Echildren%2Cr%3D0%3Bif%28e%26%26%28u%3De%2Elength%29%29for%28var%20u%2Ci%3D%2D1%3B%2B%2Bi%3Cu%3B%29r%3DMath%2Emax%28r%2Ct%28e%5Bi%5D%29%29%3Breturn%201%2Br%7Dfunction%20e%28e%2Ci%29%7Bvar%20o%3Dr%2Ecall%28this%2Ce%2Ci%29%3Breturn%20n%28o%5B0%5D%2C0%2Cu%5B0%5D%2Cu%5B1%5D%2Ft%28o%5B0%5D%29%29%2Co%7Dvar%20r%3Dta%2Elayout%2Ehierarchy%28%29%2Cu%3D%5B1%2C1%5D%3Breturn%20e%2Esize%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28u%3Dn%2Ce%29%3Au%7D%2CGu%28e%2Cr%29%7D%2Cta%2Elayout%2Epie%3Dfunction%28%29%7Bfunction%20n%28o%29%7Bvar%20a%2Cc%3Do%2Elength%2Cl%3Do%2Emap%28function%28e%2Cr%29%7Breturn%2Bt%2Ecall%28n%2Ce%2Cr%29%7D%29%2Cs%3D%2B%28%22function%22%3D%3Dtypeof%20r%3Fr%2Eapply%28this%2Carguments%29%3Ar%29%2Cf%3D%28%22function%22%3D%3Dtypeof%20u%3Fu%2Eapply%28this%2Carguments%29%3Au%29%2Ds%2Ch%3DMath%2Emin%28Math%2Eabs%28f%29%2Fc%2C%2B%28%22function%22%3D%3Dtypeof%20i%3Fi%2Eapply%28this%2Carguments%29%3Ai%29%29%2Cg%3Dh%2A%280%3Ef%3F%2D1%3A1%29%2Cp%3D%28f%2Dc%2Ag%29%2Fta%2Esum%28l%29%2Cv%3Dta%2Erange%28c%29%2Cd%3D%5B%5D%3Breturn%20null%21%3De%26%26v%2Esort%28e%3D%3D%3Dpl%3Ffunction%28n%2Ct%29%7Breturn%20l%5Bt%5D%2Dl%5Bn%5D%7D%3Afunction%28n%2Ct%29%7Breturn%20e%28o%5Bn%5D%2Co%5Bt%5D%29%7D%29%2Cv%2EforEach%28function%28n%29%7Bd%5Bn%5D%3D%7Bdata%3Ao%5Bn%5D%2Cvalue%3Aa%3Dl%5Bn%5D%2CstartAngle%3As%2CendAngle%3As%2B%3Da%2Ap%2Bg%2CpadAngle%3Ah%7D%7D%29%2Cd%7Dvar%20t%3DNumber%2Ce%3Dpl%2Cr%3D0%2Cu%3DLa%2Ci%3D0%3Breturn%20n%2Evalue%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3De%2Cn%29%3At%7D%2Cn%2Esort%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3Dt%2Cn%29%3Ae%7D%2Cn%2EstartAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3Dt%2Cn%29%3Ar%7D%2Cn%2EendAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3Dt%2Cn%29%3Au%7D%2Cn%2EpadAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%3Dt%2Cn%29%3Ai%7D%2Cn%7D%3Bvar%20pl%3D%7B%7D%3Bta%2Elayout%2Estack%3Dfunction%28%29%7Bfunction%20n%28a%2Cc%29%7Bif%28%21%28h%3Da%2Elength%29%29return%20a%3Bvar%20l%3Da%2Emap%28function%28e%2Cr%29%7Breturn%20t%2Ecall%28n%2Ce%2Cr%29%7D%29%2Cs%3Dl%2Emap%28function%28t%29%7Breturn%20t%2Emap%28function%28t%2Ce%29%7Breturn%5Bi%2Ecall%28n%2Ct%2Ce%29%2Co%2Ecall%28n%2Ct%2Ce%29%5D%7D%29%7D%29%2Cf%3De%2Ecall%28n%2Cs%2Cc%29%3Bl%3Dta%2Epermute%28l%2Cf%29%2Cs%3Dta%2Epermute%28s%2Cf%29%3Bvar%20h%2Cg%2Cp%2Cv%2Cd%3Dr%2Ecall%28n%2Cs%2Cc%29%2Cm%3Dl%5B0%5D%2Elength%3Bfor%28p%3D0%3Bm%3Ep%3B%2B%2Bp%29for%28u%2Ecall%28n%2Cl%5B0%5D%5Bp%5D%2Cv%3Dd%5Bp%5D%2Cs%5B0%5D%5Bp%5D%5B1%5D%29%2Cg%3D1%3Bh%3Eg%3B%2B%2Bg%29u%2Ecall%28n%2Cl%5Bg%5D%5Bp%5D%2Cv%2B%3Ds%5Bg%2D1%5D%5Bp%5D%5B1%5D%2Cs%5Bg%5D%5Bp%5D%5B1%5D%29%3Breturn%20a%7Dvar%20t%3Dy%2Ce%3Dai%2Cr%3Dci%2Cu%3Doi%2Ci%3Dui%2Co%3Dii%3Breturn%20n%2Evalues%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3De%2Cn%29%3At%7D%2Cn%2Eorder%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3D%22function%22%3D%3Dtypeof%20t%3Ft%3Avl%2Eget%28t%29%7C%7Cai%2Cn%29%3Ae%7D%2Cn%2Eoffset%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3D%22function%22%3D%3Dtypeof%20t%3Ft%3Adl%2Eget%28t%29%7C%7Cci%2Cn%29%3Ar%7D%2Cn%2Ex%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%3Dt%2Cn%29%3Ai%7D%2Cn%2Ey%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28o%3Dt%2Cn%29%3Ao%7D%2Cn%2Eout%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3Dt%2Cn%29%3Au%7D%2Cn%7D%3Bvar%20vl%3Dta%2Emap%28%7B%22inside%2Dout%22%3Afunction%28n%29%7Bvar%20t%2Ce%2Cr%3Dn%2Elength%2Cu%3Dn%2Emap%28li%29%2Ci%3Dn%2Emap%28si%29%2Co%3Dta%2Erange%28r%29%2Esort%28function%28n%2Ct%29%7Breturn%20u%5Bn%5D%2Du%5Bt%5D%7D%29%2Ca%3D0%2Cc%3D0%2Cl%3D%5B%5D%2Cs%3D%5B%5D%3Bfor%28t%3D0%3Br%3Et%3B%2B%2Bt%29e%3Do%5Bt%5D%2Cc%3Ea%3F%28a%2B%3Di%5Be%5D%2Cl%2Epush%28e%29%29%3A%28c%2B%3Di%5Be%5D%2Cs%2Epush%28e%29%29%3Breturn%20s%2Ereverse%28%29%2Econcat%28l%29%7D%2Creverse%3Afunction%28n%29%7Breturn%20ta%2Erange%28n%2Elength%29%2Ereverse%28%29%7D%2C%22default%22%3Aai%7D%29%2Cdl%3Dta%2Emap%28%7Bsilhouette%3Afunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%3Dn%2Elength%2Ci%3Dn%5B0%5D%2Elength%2Co%3D%5B%5D%2Ca%3D0%2Cc%3D%5B%5D%3Bfor%28e%3D0%3Bi%3Ee%3B%2B%2Be%29%7Bfor%28t%3D0%2Cr%3D0%3Bu%3Et%3Bt%2B%2B%29r%2B%3Dn%5Bt%5D%5Be%5D%5B1%5D%3Br%3Ea%26%26%28a%3Dr%29%2Co%2Epush%28r%29%7Dfor%28e%3D0%3Bi%3Ee%3B%2B%2Be%29c%5Be%5D%3D%28a%2Do%5Be%5D%29%2F2%3Breturn%20c%7D%2Cwiggle%3Afunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%2Ci%2Co%2Ca%2Cc%2Cl%2Cs%3Dn%2Elength%2Cf%3Dn%5B0%5D%2Ch%3Df%2Elength%2Cg%3D%5B%5D%3Bfor%28g%5B0%5D%3Dc%3Dl%3D0%2Ce%3D1%3Bh%3Ee%3B%2B%2Be%29%7Bfor%28t%3D0%2Cu%3D0%3Bs%3Et%3B%2B%2Bt%29u%2B%3Dn%5Bt%5D%5Be%5D%5B1%5D%3Bfor%28t%3D0%2Ci%3D0%2Ca%3Df%5Be%5D%5B0%5D%2Df%5Be%2D1%5D%5B0%5D%3Bs%3Et%3B%2B%2Bt%29%7Bfor%28r%3D0%2Co%3D%28n%5Bt%5D%5Be%5D%5B1%5D%2Dn%5Bt%5D%5Be%2D1%5D%5B1%5D%29%2F%282%2Aa%29%3Bt%3Er%3B%2B%2Br%29o%2B%3D%28n%5Br%5D%5Be%5D%5B1%5D%2Dn%5Br%5D%5Be%2D1%5D%5B1%5D%29%2Fa%3Bi%2B%3Do%2An%5Bt%5D%5Be%5D%5B1%5D%7Dg%5Be%5D%3Dc%2D%3Du%3Fi%2Fu%2Aa%3A0%2Cl%3Ec%26%26%28l%3Dc%29%7Dfor%28e%3D0%3Bh%3Ee%3B%2B%2Be%29g%5Be%5D%2D%3Dl%3Breturn%20g%7D%2Cexpand%3Afunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%3Dn%2Elength%2Ci%3Dn%5B0%5D%2Elength%2Co%3D1%2Fu%2Ca%3D%5B%5D%3Bfor%28e%3D0%3Bi%3Ee%3B%2B%2Be%29%7Bfor%28t%3D0%2Cr%3D0%3Bu%3Et%3Bt%2B%2B%29r%2B%3Dn%5Bt%5D%5Be%5D%5B1%5D%3Bif%28r%29for%28t%3D0%3Bu%3Et%3Bt%2B%2B%29n%5Bt%5D%5Be%5D%5B1%5D%2F%3Dr%3Belse%20for%28t%3D0%3Bu%3Et%3Bt%2B%2B%29n%5Bt%5D%5Be%5D%5B1%5D%3Do%7Dfor%28e%3D0%3Bi%3Ee%3B%2B%2Be%29a%5Be%5D%3D0%3Breturn%20a%7D%2Czero%3Aci%7D%29%3Bta%2Elayout%2Ehistogram%3Dfunction%28%29%7Bfunction%20n%28n%2Ci%29%7Bfor%28var%20o%2Ca%2Cc%3D%5B%5D%2Cl%3Dn%2Emap%28e%2Cthis%29%2Cs%3Dr%2Ecall%28this%2Cl%2Ci%29%2Cf%3Du%2Ecall%28this%2Cs%2Cl%2Ci%29%2Ci%3D%2D1%2Ch%3Dl%2Elength%2Cg%3Df%2Elength%2D1%2Cp%3Dt%3F1%3A1%2Fh%3B%2B%2Bi%3Cg%3B%29o%3Dc%5Bi%5D%3D%5B%5D%2Co%2Edx%3Df%5Bi%2B1%5D%2D%28o%2Ex%3Df%5Bi%5D%29%2Co%2Ey%3D0%3Bif%28g%3E0%29for%28i%3D%2D1%3B%2B%2Bi%3Ch%3B%29a%3Dl%5Bi%5D%2Ca%3E%3Ds%5B0%5D%26%26a%3C%3Ds%5B1%5D%26%26%28o%3Dc%5Bta%2Ebisect%28f%2Ca%2C1%2Cg%29%2D1%5D%2Co%2Ey%2B%3Dp%2Co%2Epush%28n%5Bi%5D%29%29%3Breturn%20c%7Dvar%20t%3D%210%2Ce%3DNumber%2Cr%3Dpi%2Cu%3Dhi%3Breturn%20n%2Evalue%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3Dt%2Cn%29%3Ae%7D%2Cn%2Erange%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3DEt%28t%29%2Cn%29%3Ar%7D%2Cn%2Ebins%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3D%22number%22%3D%3Dtypeof%20t%3Ffunction%28n%29%7Breturn%20gi%28n%2Ct%29%7D%3AEt%28t%29%2Cn%29%3Au%7D%2Cn%2Efrequency%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3D%21%21e%2Cn%29%3At%7D%2Cn%7D%2Cta%2Elayout%2Epack%3Dfunction%28%29%7Bfunction%20n%28n%2Ci%29%7Bvar%20o%3De%2Ecall%28this%2Cn%2Ci%29%2Ca%3Do%5B0%5D%2Cc%3Du%5B0%5D%2Cl%3Du%5B1%5D%2Cs%3Dnull%3D%3Dt%3FMath%2Esqrt%3A%22function%22%3D%3Dtypeof%20t%3Ft%3Afunction%28%29%7Breturn%20t%7D%3Bif%28a%2Ex%3Da%2Ey%3D0%2CQu%28a%2Cfunction%28n%29%7Bn%2Er%3D%2Bs%28n%2Evalue%29%7D%29%2CQu%28a%2CMi%29%2Cr%29%7Bvar%20f%3Dr%2A%28t%3F1%3AMath%2Emax%282%2Aa%2Er%2Fc%2C2%2Aa%2Er%2Fl%29%29%2F2%3BQu%28a%2Cfunction%28n%29%7Bn%2Er%2B%3Df%7D%29%2CQu%28a%2CMi%29%2CQu%28a%2Cfunction%28n%29%7Bn%2Er%2D%3Df%7D%29%7Dreturn%20%5Fi%28a%2Cc%2F2%2Cl%2F2%2Ct%3F1%3A1%2FMath%2Emax%282%2Aa%2Er%2Fc%2C2%2Aa%2Er%2Fl%29%29%2Co%7Dvar%20t%2Ce%3Dta%2Elayout%2Ehierarchy%28%29%2Esort%28vi%29%2Cr%3D0%2Cu%3D%5B1%2C1%5D%3Breturn%20n%2Esize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3Dt%2Cn%29%3Au%7D%2Cn%2Eradius%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3Dnull%3D%3De%7C%7C%22function%22%3D%3Dtypeof%20e%3Fe%3A%2Be%2Cn%29%3At%7D%2Cn%2Epadding%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3D%2Bt%2Cn%29%3Ar%7D%2CGu%28n%2Ce%29%7D%2Cta%2Elayout%2Etree%3Dfunction%28%29%7Bfunction%20n%28n%2Cu%29%7Bvar%20s%3Do%2Ecall%28this%2Cn%2Cu%29%2Cf%3Ds%5B0%5D%2Ch%3Dt%28f%29%3Bif%28Qu%28h%2Ce%29%2Ch%2Eparent%2Em%3D%2Dh%2Ez%2CKu%28h%2Cr%29%2Cl%29Ku%28f%2Ci%29%3Belse%7Bvar%20g%3Df%2Cp%3Df%2Cv%3Df%3BKu%28f%2Cfunction%28n%29%7Bn%2Ex%3Cg%2Ex%26%26%28g%3Dn%29%2Cn%2Ex%3Ep%2Ex%26%26%28p%3Dn%29%2Cn%2Edepth%3Ev%2Edepth%26%26%28v%3Dn%29%7D%29%3Bvar%20d%3Da%28g%2Cp%29%2F2%2Dg%2Ex%2Cm%3Dc%5B0%5D%2F%28p%2Ex%2Ba%28p%2Cg%29%2F2%2Bd%29%2Cy%3Dc%5B1%5D%2F%28v%2Edepth%7C%7C1%29%3BKu%28f%2Cfunction%28n%29%7Bn%2Ex%3D%28n%2Ex%2Bd%29%2Am%2Cn%2Ey%3Dn%2Edepth%2Ay%7D%29%7Dreturn%20s%7Dfunction%20t%28n%29%7Bfor%28var%20t%2Ce%3D%7BA%3Anull%2Cchildren%3A%5Bn%5D%7D%2Cr%3D%5Be%5D%3Bnull%21%3D%28t%3Dr%2Epop%28%29%29%3B%29for%28var%20u%2Ci%3Dt%2Echildren%2Co%3D0%2Ca%3Di%2Elength%3Ba%3Eo%3B%2B%2Bo%29r%2Epush%28%28i%5Bo%5D%3Du%3D%7B%5F%3Ai%5Bo%5D%2Cparent%3At%2Cchildren%3A%28u%3Di%5Bo%5D%2Echildren%29%26%26u%2Eslice%28%29%7C%7C%5B%5D%2CA%3Anull%2Ca%3Anull%2Cz%3A0%2Cm%3A0%2Cc%3A0%2Cs%3A0%2Ct%3Anull%2Ci%3Ao%7D%29%2Ea%3Du%29%3Breturn%20e%2Echildren%5B0%5D%7Dfunction%20e%28n%29%7Bvar%20t%3Dn%2Echildren%2Ce%3Dn%2Eparent%2Echildren%2Cr%3Dn%2Ei%3Fe%5Bn%2Ei%2D1%5D%3Anull%3Bif%28t%2Elength%29%7BNi%28n%29%3Bvar%20i%3D%28t%5B0%5D%2Ez%2Bt%5Bt%2Elength%2D1%5D%2Ez%29%2F2%3Br%3F%28n%2Ez%3Dr%2Ez%2Ba%28n%2E%5F%2Cr%2E%5F%29%2Cn%2Em%3Dn%2Ez%2Di%29%3An%2Ez%3Di%7Delse%20r%26%26%28n%2Ez%3Dr%2Ez%2Ba%28n%2E%5F%2Cr%2E%5F%29%29%3Bn%2Eparent%2EA%3Du%28n%2Cr%2Cn%2Eparent%2EA%7C%7Ce%5B0%5D%29%7Dfunction%20r%28n%29%7Bn%2E%5F%2Ex%3Dn%2Ez%2Bn%2Eparent%2Em%2Cn%2Em%2B%3Dn%2Eparent%2Em%7Dfunction%20u%28n%2Ct%2Ce%29%7Bif%28t%29%7Bfor%28var%20r%2Cu%3Dn%2Ci%3Dn%2Co%3Dt%2Cc%3Du%2Eparent%2Echildren%5B0%5D%2Cl%3Du%2Em%2Cs%3Di%2Em%2Cf%3Do%2Em%2Ch%3Dc%2Em%3Bo%3DEi%28o%29%2Cu%3Dki%28u%29%2Co%26%26u%3B%29c%3Dki%28c%29%2Ci%3DEi%28i%29%2Ci%2Ea%3Dn%2Cr%3Do%2Ez%2Bf%2Du%2Ez%2Dl%2Ba%28o%2E%5F%2Cu%2E%5F%29%2Cr%3E0%26%26%28Ai%28Ci%28o%2Cn%2Ce%29%2Cn%2Cr%29%2Cl%2B%3Dr%2Cs%2B%3Dr%29%2Cf%2B%3Do%2Em%2Cl%2B%3Du%2Em%2Ch%2B%3Dc%2Em%2Cs%2B%3Di%2Em%3Bo%26%26%21Ei%28i%29%26%26%28i%2Et%3Do%2Ci%2Em%2B%3Df%2Ds%29%2Cu%26%26%21ki%28c%29%26%26%28c%2Et%3Du%2Cc%2Em%2B%3Dl%2Dh%2Ce%3Dn%29%7Dreturn%20e%7Dfunction%20i%28n%29%7Bn%2Ex%2A%3Dc%5B0%5D%2Cn%2Ey%3Dn%2Edepth%2Ac%5B1%5D%7Dvar%20o%3Dta%2Elayout%2Ehierarchy%28%29%2Esort%28null%29%2Evalue%28null%29%2Ca%3DSi%2Cc%3D%5B1%2C1%5D%2Cl%3Dnull%3Breturn%20n%2Eseparation%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28a%3Dt%2Cn%29%3Aa%7D%2Cn%2Esize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28l%3Dnull%3D%3D%28c%3Dt%29%3Fi%3Anull%2Cn%29%3Al%3Fnull%3Ac%7D%2Cn%2EnodeSize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28l%3Dnull%3D%3D%28c%3Dt%29%3Fnull%3Ai%2Cn%29%3Al%3Fc%3Anull%7D%2CGu%28n%2Co%29%7D%2Cta%2Elayout%2Ecluster%3Dfunction%28%29%7Bfunction%20n%28n%2Ci%29%7Bvar%20o%2Ca%3Dt%2Ecall%28this%2Cn%2Ci%29%2Cc%3Da%5B0%5D%2Cl%3D0%3BQu%28c%2Cfunction%28n%29%7Bvar%20t%3Dn%2Echildren%3Bt%26%26t%2Elength%3F%28n%2Ex%3Dqi%28t%29%2Cn%2Ey%3Dzi%28t%29%29%3A%28n%2Ex%3Do%3Fl%2B%3De%28n%2Co%29%3A0%2Cn%2Ey%3D0%2Co%3Dn%29%7D%29%3Bvar%20s%3DLi%28c%29%2Cf%3DTi%28c%29%2Ch%3Ds%2Ex%2De%28s%2Cf%29%2F2%2Cg%3Df%2Ex%2Be%28f%2Cs%29%2F2%3Breturn%20Qu%28c%2Cu%3Ffunction%28n%29%7Bn%2Ex%3D%28n%2Ex%2Dc%2Ex%29%2Ar%5B0%5D%2Cn%2Ey%3D%28c%2Ey%2Dn%2Ey%29%2Ar%5B1%5D%7D%3Afunction%28n%29%7Bn%2Ex%3D%28n%2Ex%2Dh%29%2F%28g%2Dh%29%2Ar%5B0%5D%2Cn%2Ey%3D%281%2D%28c%2Ey%3Fn%2Ey%2Fc%2Ey%3A1%29%29%2Ar%5B1%5D%7D%29%2Ca%7Dvar%20t%3Dta%2Elayout%2Ehierarchy%28%29%2Esort%28null%29%2Evalue%28null%29%2Ce%3DSi%2Cr%3D%5B1%2C1%5D%2Cu%3D%211%3Breturn%20n%2Eseparation%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3Dt%2Cn%29%3Ae%7D%2Cn%2Esize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3Dnull%3D%3D%28r%3Dt%29%2Cn%29%3Au%3Fnull%3Ar%7D%2Cn%2EnodeSize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3Dnull%21%3D%28r%3Dt%29%2Cn%29%3Au%3Fr%3Anull%7D%2CGu%28n%2Ct%29%7D%2Cta%2Elayout%2Etreemap%3Dfunction%28%29%7Bfunction%20n%28n%2Ct%29%7Bfor%28var%20e%2Cr%2Cu%3D%2D1%2Ci%3Dn%2Elength%3B%2B%2Bu%3Ci%3B%29r%3D%28e%3Dn%5Bu%5D%29%2Evalue%2A%280%3Et%3F0%3At%29%2Ce%2Earea%3DisNaN%28r%29%7C%7C0%3E%3Dr%3F0%3Ar%7Dfunction%20t%28e%29%7Bvar%20i%3De%2Echildren%3Bif%28i%26%26i%2Elength%29%7Bvar%20o%2Ca%2Cc%2Cl%3Df%28e%29%2Cs%3D%5B%5D%2Ch%3Di%2Eslice%28%29%2Cp%3D1%2F0%2Cv%3D%22slice%22%3D%3D%3Dg%3Fl%2Edx%3A%22dice%22%3D%3D%3Dg%3Fl%2Edy%3A%22slice%2Ddice%22%3D%3D%3Dg%3F1%26e%2Edepth%3Fl%2Edy%3Al%2Edx%3AMath%2Emin%28l%2Edx%2Cl%2Edy%29%3Bfor%28n%28h%2Cl%2Edx%2Al%2Edy%2Fe%2Evalue%29%2Cs%2Earea%3D0%3B%28c%3Dh%2Elength%29%3E0%3B%29s%2Epush%28o%3Dh%5Bc%2D1%5D%29%2Cs%2Earea%2B%3Do%2Earea%2C%22squarify%22%21%3D%3Dg%7C%7C%28a%3Dr%28s%2Cv%29%29%3C%3Dp%3F%28h%2Epop%28%29%2Cp%3Da%29%3A%28s%2Earea%2D%3Ds%2Epop%28%29%2Earea%2Cu%28s%2Cv%2Cl%2C%211%29%2Cv%3DMath%2Emin%28l%2Edx%2Cl%2Edy%29%2Cs%2Elength%3Ds%2Earea%3D0%2Cp%3D1%2F0%29%3Bs%2Elength%26%26%28u%28s%2Cv%2Cl%2C%210%29%2Cs%2Elength%3Ds%2Earea%3D0%29%2Ci%2EforEach%28t%29%7D%7Dfunction%20e%28t%29%7Bvar%20r%3Dt%2Echildren%3Bif%28r%26%26r%2Elength%29%7Bvar%20i%2Co%3Df%28t%29%2Ca%3Dr%2Eslice%28%29%2Cc%3D%5B%5D%3Bfor%28n%28a%2Co%2Edx%2Ao%2Edy%2Ft%2Evalue%29%2Cc%2Earea%3D0%3Bi%3Da%2Epop%28%29%3B%29c%2Epush%28i%29%2Cc%2Earea%2B%3Di%2Earea%2Cnull%21%3Di%2Ez%26%26%28u%28c%2Ci%2Ez%3Fo%2Edx%3Ao%2Edy%2Co%2C%21a%2Elength%29%2Cc%2Elength%3Dc%2Earea%3D0%29%3Br%2EforEach%28e%29%7D%7Dfunction%20r%28n%2Ct%29%7Bfor%28var%20e%2Cr%3Dn%2Earea%2Cu%3D0%2Ci%3D1%2F0%2Co%3D%2D1%2Ca%3Dn%2Elength%3B%2B%2Bo%3Ca%3B%29%28e%3Dn%5Bo%5D%2Earea%29%26%26%28i%3Ee%26%26%28i%3De%29%2Ce%3Eu%26%26%28u%3De%29%29%3Breturn%20r%2A%3Dr%2Ct%2A%3Dt%2Cr%3FMath%2Emax%28t%2Au%2Ap%2Fr%2Cr%2F%28t%2Ai%2Ap%29%29%3A1%2F0%7Dfunction%20u%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%2Ci%3D%2D1%2Co%3Dn%2Elength%2Ca%3De%2Ex%2Cl%3De%2Ey%2Cs%3Dt%3Fc%28n%2Earea%2Ft%29%3A0%3Bif%28t%3D%3De%2Edx%29%7Bfor%28%28r%7C%7Cs%3Ee%2Edy%29%26%26%28s%3De%2Edy%29%3B%2B%2Bi%3Co%3B%29u%3Dn%5Bi%5D%2Cu%2Ex%3Da%2Cu%2Ey%3Dl%2Cu%2Edy%3Ds%2Ca%2B%3Du%2Edx%3DMath%2Emin%28e%2Ex%2Be%2Edx%2Da%2Cs%3Fc%28u%2Earea%2Fs%29%3A0%29%3Bu%2Ez%3D%210%2Cu%2Edx%2B%3De%2Ex%2Be%2Edx%2Da%2Ce%2Ey%2B%3Ds%2Ce%2Edy%2D%3Ds%7Delse%7Bfor%28%28r%7C%7Cs%3Ee%2Edx%29%26%26%28s%3De%2Edx%29%3B%2B%2Bi%3Co%3B%29u%3Dn%5Bi%5D%2Cu%2Ex%3Da%2Cu%2Ey%3Dl%2Cu%2Edx%3Ds%2Cl%2B%3Du%2Edy%3DMath%2Emin%28e%2Ey%2Be%2Edy%2Dl%2Cs%3Fc%28u%2Earea%2Fs%29%3A0%29%3Bu%2Ez%3D%211%2Cu%2Edy%2B%3De%2Ey%2Be%2Edy%2Dl%2Ce%2Ex%2B%3Ds%2Ce%2Edx%2D%3Ds%7D%7Dfunction%20i%28r%29%7Bvar%20u%3Do%7C%7Ca%28r%29%2Ci%3Du%5B0%5D%3Breturn%20i%2Ex%3D0%2Ci%2Ey%3D0%2Ci%2Edx%3Dl%5B0%5D%2Ci%2Edy%3Dl%5B1%5D%2Co%26%26a%2Erevalue%28i%29%2Cn%28%5Bi%5D%2Ci%2Edx%2Ai%2Edy%2Fi%2Evalue%29%2C%28o%3Fe%3At%29%28i%29%2Ch%26%26%28o%3Du%29%2Cu%7Dvar%20o%2Ca%3Dta%2Elayout%2Ehierarchy%28%29%2Cc%3DMath%2Eround%2Cl%3D%5B1%2C1%5D%2Cs%3Dnull%2Cf%3DRi%2Ch%3D%211%2Cg%3D%22squarify%22%2Cp%3D%2E5%2A%281%2BMath%2Esqrt%285%29%29%3B%0Areturn%20i%2Esize%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28l%3Dn%2Ci%29%3Al%7D%2Ci%2Epadding%3Dfunction%28n%29%7Bfunction%20t%28t%29%7Bvar%20e%3Dn%2Ecall%28i%2Ct%2Ct%2Edepth%29%3Breturn%20null%3D%3De%3FRi%28t%29%3ADi%28t%2C%22number%22%3D%3Dtypeof%20e%3F%5Be%2Ce%2Ce%2Ce%5D%3Ae%29%7Dfunction%20e%28t%29%7Breturn%20Di%28t%2Cn%29%7Dif%28%21arguments%2Elength%29return%20s%3Bvar%20r%3Breturn%20f%3Dnull%3D%3D%28s%3Dn%29%3FRi%3A%22function%22%3D%3D%28r%3Dtypeof%20n%29%3Ft%3A%22number%22%3D%3D%3Dr%3F%28n%3D%5Bn%2Cn%2Cn%2Cn%5D%2Ce%29%3Ae%2Ci%7D%2Ci%2Eround%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28c%3Dn%3FMath%2Eround%3ANumber%2Ci%29%3Ac%21%3DNumber%7D%2Ci%2Esticky%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28h%3Dn%2Co%3Dnull%2Ci%29%3Ah%7D%2Ci%2Eratio%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28p%3Dn%2Ci%29%3Ap%7D%2Ci%2Emode%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3F%28g%3Dn%2B%22%22%2Ci%29%3Ag%7D%2CGu%28i%2Ca%29%7D%2Cta%2Erandom%3D%7Bnormal%3Afunction%28n%2Ct%29%7Bvar%20e%3Darguments%2Elength%3Breturn%202%3Ee%26%26%28t%3D1%29%2C1%3Ee%26%26%28n%3D0%29%2Cfunction%28%29%7Bvar%20e%2Cr%2Cu%3Bdo%20e%3D2%2AMath%2Erandom%28%29%2D1%2Cr%3D2%2AMath%2Erandom%28%29%2D1%2Cu%3De%2Ae%2Br%2Ar%3Bwhile%28%21u%7C%7Cu%3E1%29%3Breturn%20n%2Bt%2Ae%2AMath%2Esqrt%28%2D2%2AMath%2Elog%28u%29%2Fu%29%7D%7D%2ClogNormal%3Afunction%28%29%7Bvar%20n%3Dta%2Erandom%2Enormal%2Eapply%28ta%2Carguments%29%3Breturn%20function%28%29%7Breturn%20Math%2Eexp%28n%28%29%29%7D%7D%2Cbates%3Afunction%28n%29%7Bvar%20t%3Dta%2Erandom%2EirwinHall%28n%29%3Breturn%20function%28%29%7Breturn%20t%28%29%2Fn%7D%7D%2CirwinHall%3Afunction%28n%29%7Breturn%20function%28%29%7Bfor%28var%20t%3D0%2Ce%3D0%3Bn%3Ee%3Be%2B%2B%29t%2B%3DMath%2Erandom%28%29%3Breturn%20t%7D%7D%7D%2Cta%2Escale%3D%7B%7D%3Bvar%20ml%3D%7Bfloor%3Ay%2Cceil%3Ay%7D%3Bta%2Escale%2Elinear%3Dfunction%28%29%7Breturn%20Ii%28%5B0%2C1%5D%2C%5B0%2C1%5D%2Cmu%2C%211%29%7D%3Bvar%20yl%3D%7Bs%3A1%2Cg%3A1%2Cp%3A1%2Cr%3A1%2Ce%3A1%7D%3Bta%2Escale%2Elog%3Dfunction%28%29%7Breturn%20Ji%28ta%2Escale%2Elinear%28%29%2Edomain%28%5B0%2C1%5D%29%2C10%2C%210%2C%5B1%2C10%5D%29%7D%3Bvar%20Ml%3Dta%2Eformat%28%22%2E0e%22%29%2Cxl%3D%7Bfloor%3Afunction%28n%29%7Breturn%2DMath%2Eceil%28%2Dn%29%7D%2Cceil%3Afunction%28n%29%7Breturn%2DMath%2Efloor%28%2Dn%29%7D%7D%3Bta%2Escale%2Epow%3Dfunction%28%29%7Breturn%20Gi%28ta%2Escale%2Elinear%28%29%2C1%2C%5B0%2C1%5D%29%7D%2Cta%2Escale%2Esqrt%3Dfunction%28%29%7Breturn%20ta%2Escale%2Epow%28%29%2Eexponent%28%2E5%29%7D%2Cta%2Escale%2Eordinal%3Dfunction%28%29%7Breturn%20Qi%28%5B%5D%2C%7Bt%3A%22range%22%2Ca%3A%5B%5B%5D%5D%7D%29%7D%2Cta%2Escale%2Ecategory10%3Dfunction%28%29%7Breturn%20ta%2Escale%2Eordinal%28%29%2Erange%28bl%29%7D%2Cta%2Escale%2Ecategory20%3Dfunction%28%29%7Breturn%20ta%2Escale%2Eordinal%28%29%2Erange%28%5Fl%29%7D%2Cta%2Escale%2Ecategory20b%3Dfunction%28%29%7Breturn%20ta%2Escale%2Eordinal%28%29%2Erange%28wl%29%7D%2Cta%2Escale%2Ecategory20c%3Dfunction%28%29%7Breturn%20ta%2Escale%2Eordinal%28%29%2Erange%28Sl%29%7D%3Bvar%20bl%3D%5B2062260%2C16744206%2C2924588%2C14034728%2C9725885%2C9197131%2C14907330%2C8355711%2C12369186%2C1556175%5D%2Emap%28Mt%29%2C%5Fl%3D%5B2062260%2C11454440%2C16744206%2C16759672%2C2924588%2C10018698%2C14034728%2C16750742%2C9725885%2C12955861%2C9197131%2C12885140%2C14907330%2C16234194%2C8355711%2C13092807%2C12369186%2C14408589%2C1556175%2C10410725%5D%2Emap%28Mt%29%2Cwl%3D%5B3750777%2C5395619%2C7040719%2C10264286%2C6519097%2C9216594%2C11915115%2C13556636%2C9202993%2C12426809%2C15186514%2C15190932%2C8666169%2C11356490%2C14049643%2C15177372%2C8077683%2C10834324%2C13528509%2C14589654%5D%2Emap%28Mt%29%2CSl%3D%5B3244733%2C7057110%2C10406625%2C13032431%2C15095053%2C16616764%2C16625259%2C16634018%2C3253076%2C7652470%2C10607003%2C13101504%2C7695281%2C10394312%2C12369372%2C14342891%2C6513507%2C9868950%2C12434877%2C14277081%5D%2Emap%28Mt%29%3Bta%2Escale%2Equantile%3Dfunction%28%29%7Breturn%20no%28%5B%5D%2C%5B%5D%29%7D%2Cta%2Escale%2Equantize%3Dfunction%28%29%7Breturn%20to%280%2C1%2C%5B0%2C1%5D%29%7D%2Cta%2Escale%2Ethreshold%3Dfunction%28%29%7Breturn%20eo%28%5B%2E5%5D%2C%5B0%2C1%5D%29%7D%2Cta%2Escale%2Eidentity%3Dfunction%28%29%7Breturn%20ro%28%5B0%2C1%5D%29%7D%2Cta%2Esvg%3D%7B%7D%2Cta%2Esvg%2Earc%3Dfunction%28%29%7Bfunction%20n%28%29%7Bvar%20n%3DMath%2Emax%280%2C%2Be%2Eapply%28this%2Carguments%29%29%2Cl%3DMath%2Emax%280%2C%2Br%2Eapply%28this%2Carguments%29%29%2Cs%3Do%2Eapply%28this%2Carguments%29%2DRa%2Cf%3Da%2Eapply%28this%2Carguments%29%2DRa%2Ch%3DMath%2Eabs%28f%2Ds%29%2Cg%3Ds%3Ef%3F0%3A1%3Bif%28n%3El%26%26%28p%3Dl%2Cl%3Dn%2Cn%3Dp%29%2Ch%3E%3DTa%29return%20t%28l%2Cg%29%2B%28n%3Ft%28n%2C1%2Dg%29%3A%22%22%29%2B%22Z%22%3Bvar%20p%2Cv%2Cd%2Cm%2Cy%2CM%2Cx%2Cb%2C%5F%2Cw%2CS%2Ck%2CE%3D0%2CA%3D0%2CN%3D%5B%5D%3Bif%28%28m%3D%28%2Bc%2Eapply%28this%2Carguments%29%7C%7C0%29%2F2%29%26%26%28d%3Di%3D%3D%3Dkl%3FMath%2Esqrt%28n%2An%2Bl%2Al%29%3A%2Bi%2Eapply%28this%2Carguments%29%2Cg%7C%7C%28A%2A%3D%2D1%29%2Cl%26%26%28A%3Dtt%28d%2Fl%2AMath%2Esin%28m%29%29%29%2Cn%26%26%28E%3Dtt%28d%2Fn%2AMath%2Esin%28m%29%29%29%29%2Cl%29%7By%3Dl%2AMath%2Ecos%28s%2BA%29%2CM%3Dl%2AMath%2Esin%28s%2BA%29%2Cx%3Dl%2AMath%2Ecos%28f%2DA%29%2Cb%3Dl%2AMath%2Esin%28f%2DA%29%3Bvar%20C%3DMath%2Eabs%28f%2Ds%2D2%2AA%29%3C%3Dqa%3F0%3A1%3Bif%28A%26%26so%28y%2CM%2Cx%2Cb%29%3D%3D%3Dg%5EC%29%7Bvar%20z%3D%28s%2Bf%29%2F2%3By%3Dl%2AMath%2Ecos%28z%29%2CM%3Dl%2AMath%2Esin%28z%29%2Cx%3Db%3Dnull%7D%7Delse%20y%3DM%3D0%3Bif%28n%29%7B%5F%3Dn%2AMath%2Ecos%28f%2DE%29%2Cw%3Dn%2AMath%2Esin%28f%2DE%29%2CS%3Dn%2AMath%2Ecos%28s%2BE%29%2Ck%3Dn%2AMath%2Esin%28s%2BE%29%3Bvar%20q%3DMath%2Eabs%28s%2Df%2B2%2AE%29%3C%3Dqa%3F0%3A1%3Bif%28E%26%26so%28%5F%2Cw%2CS%2Ck%29%3D%3D%3D1%2Dg%5Eq%29%7Bvar%20L%3D%28s%2Bf%29%2F2%3B%5F%3Dn%2AMath%2Ecos%28L%29%2Cw%3Dn%2AMath%2Esin%28L%29%2CS%3Dk%3Dnull%7D%7Delse%20%5F%3Dw%3D0%3Bif%28%28p%3DMath%2Emin%28Math%2Eabs%28l%2Dn%29%2F2%2C%2Bu%2Eapply%28this%2Carguments%29%29%29%3E%2E001%29%7Bv%3Dl%3En%5Eg%3F0%3A1%3Bvar%20T%3Dnull%3D%3DS%3F%5B%5F%2Cw%5D%3Anull%3D%3Dx%3F%5By%2CM%5D%3ALr%28%5By%2CM%5D%2C%5BS%2Ck%5D%2C%5Bx%2Cb%5D%2C%5B%5F%2Cw%5D%29%2CR%3Dy%2DT%5B0%5D%2CD%3DM%2DT%5B1%5D%2CP%3Dx%2DT%5B0%5D%2CU%3Db%2DT%5B1%5D%2Cj%3D1%2FMath%2Esin%28Math%2Eacos%28%28R%2AP%2BD%2AU%29%2F%28Math%2Esqrt%28R%2AR%2BD%2AD%29%2AMath%2Esqrt%28P%2AP%2BU%2AU%29%29%29%2F2%29%2CF%3DMath%2Esqrt%28T%5B0%5D%2AT%5B0%5D%2BT%5B1%5D%2AT%5B1%5D%29%3Bif%28null%21%3Dx%29%7Bvar%20H%3DMath%2Emin%28p%2C%28l%2DF%29%2F%28j%2B1%29%29%2CO%3Dfo%28null%3D%3DS%3F%5B%5F%2Cw%5D%3A%5BS%2Ck%5D%2C%5By%2CM%5D%2Cl%2CH%2Cg%29%2CI%3Dfo%28%5Bx%2Cb%5D%2C%5B%5F%2Cw%5D%2Cl%2CH%2Cg%29%3Bp%3D%3D%3DH%3FN%2Epush%28%22M%22%2CO%5B0%5D%2C%22A%22%2CH%2C%22%2C%22%2CH%2C%22%200%200%2C%22%2Cv%2C%22%20%22%2CO%5B1%5D%2C%22A%22%2Cl%2C%22%2C%22%2Cl%2C%22%200%20%22%2C1%2Dg%5Eso%28O%5B1%5D%5B0%5D%2CO%5B1%5D%5B1%5D%2CI%5B1%5D%5B0%5D%2CI%5B1%5D%5B1%5D%29%2C%22%2C%22%2Cg%2C%22%20%22%2CI%5B1%5D%2C%22A%22%2CH%2C%22%2C%22%2CH%2C%22%200%200%2C%22%2Cv%2C%22%20%22%2CI%5B0%5D%29%3AN%2Epush%28%22M%22%2CO%5B0%5D%2C%22A%22%2CH%2C%22%2C%22%2CH%2C%22%200%201%2C%22%2Cv%2C%22%20%22%2CI%5B0%5D%29%7Delse%20N%2Epush%28%22M%22%2Cy%2C%22%2C%22%2CM%29%3Bif%28null%21%3DS%29%7Bvar%20Y%3DMath%2Emin%28p%2C%28n%2DF%29%2F%28j%2D1%29%29%2CZ%3Dfo%28%5By%2CM%5D%2C%5BS%2Ck%5D%2Cn%2C%2DY%2Cg%29%2CV%3Dfo%28%5B%5F%2Cw%5D%2Cnull%3D%3Dx%3F%5By%2CM%5D%3A%5Bx%2Cb%5D%2Cn%2C%2DY%2Cg%29%3Bp%3D%3D%3DY%3FN%2Epush%28%22L%22%2CV%5B0%5D%2C%22A%22%2CY%2C%22%2C%22%2CY%2C%22%200%200%2C%22%2Cv%2C%22%20%22%2CV%5B1%5D%2C%22A%22%2Cn%2C%22%2C%22%2Cn%2C%22%200%20%22%2Cg%5Eso%28V%5B1%5D%5B0%5D%2CV%5B1%5D%5B1%5D%2CZ%5B1%5D%5B0%5D%2CZ%5B1%5D%5B1%5D%29%2C%22%2C%22%2C1%2Dg%2C%22%20%22%2CZ%5B1%5D%2C%22A%22%2CY%2C%22%2C%22%2CY%2C%22%200%200%2C%22%2Cv%2C%22%20%22%2CZ%5B0%5D%29%3AN%2Epush%28%22L%22%2CV%5B0%5D%2C%22A%22%2CY%2C%22%2C%22%2CY%2C%22%200%200%2C%22%2Cv%2C%22%20%22%2CZ%5B0%5D%29%7Delse%20N%2Epush%28%22L%22%2C%5F%2C%22%2C%22%2Cw%29%7Delse%20N%2Epush%28%22M%22%2Cy%2C%22%2C%22%2CM%29%2Cnull%21%3Dx%26%26N%2Epush%28%22A%22%2Cl%2C%22%2C%22%2Cl%2C%22%200%20%22%2CC%2C%22%2C%22%2Cg%2C%22%20%22%2Cx%2C%22%2C%22%2Cb%29%2CN%2Epush%28%22L%22%2C%5F%2C%22%2C%22%2Cw%29%2Cnull%21%3DS%26%26N%2Epush%28%22A%22%2Cn%2C%22%2C%22%2Cn%2C%22%200%20%22%2Cq%2C%22%2C%22%2C1%2Dg%2C%22%20%22%2CS%2C%22%2C%22%2Ck%29%3Breturn%20N%2Epush%28%22Z%22%29%2CN%2Ejoin%28%22%22%29%7Dfunction%20t%28n%2Ct%29%7Breturn%22M0%2C%22%2Bn%2B%22A%22%2Bn%2B%22%2C%22%2Bn%2B%22%200%201%2C%22%2Bt%2B%22%200%2C%22%2B%2Dn%2B%22A%22%2Bn%2B%22%2C%22%2Bn%2B%22%200%201%2C%22%2Bt%2B%22%200%2C%22%2Bn%7Dvar%20e%3Dio%2Cr%3Doo%2Cu%3Duo%2Ci%3Dkl%2Co%3Dao%2Ca%3Dco%2Cc%3Dlo%3Breturn%20n%2EinnerRadius%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3DEt%28t%29%2Cn%29%3Ae%7D%2Cn%2EouterRadius%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3DEt%28t%29%2Cn%29%3Ar%7D%2Cn%2EcornerRadius%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3DEt%28t%29%2Cn%29%3Au%7D%2Cn%2EpadRadius%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%3Dt%3D%3Dkl%3Fkl%3AEt%28t%29%2Cn%29%3Ai%7D%2Cn%2EstartAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28o%3DEt%28t%29%2Cn%29%3Ao%7D%2Cn%2EendAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28a%3DEt%28t%29%2Cn%29%3Aa%7D%2Cn%2EpadAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28c%3DEt%28t%29%2Cn%29%3Ac%7D%2Cn%2Ecentroid%3Dfunction%28%29%7Bvar%20n%3D%28%2Be%2Eapply%28this%2Carguments%29%2B%20%2Br%2Eapply%28this%2Carguments%29%29%2F2%2Ct%3D%28%2Bo%2Eapply%28this%2Carguments%29%2B%20%2Ba%2Eapply%28this%2Carguments%29%29%2F2%2DRa%3Breturn%5BMath%2Ecos%28t%29%2An%2CMath%2Esin%28t%29%2An%5D%7D%2Cn%7D%3Bvar%20kl%3D%22auto%22%3Bta%2Esvg%2Eline%3Dfunction%28%29%7Breturn%20ho%28y%29%7D%3Bvar%20El%3Dta%2Emap%28%7Blinear%3Ago%2C%22linear%2Dclosed%22%3Apo%2Cstep%3Avo%2C%22step%2Dbefore%22%3Amo%2C%22step%2Dafter%22%3Ayo%2Cbasis%3ASo%2C%22basis%2Dopen%22%3Ako%2C%22basis%2Dclosed%22%3AEo%2Cbundle%3AAo%2Ccardinal%3Abo%2C%22cardinal%2Dopen%22%3AMo%2C%22cardinal%2Dclosed%22%3Axo%2Cmonotone%3ATo%7D%29%3BEl%2EforEach%28function%28n%2Ct%29%7Bt%2Ekey%3Dn%2Ct%2Eclosed%3D%2F%2Dclosed%24%2F%2Etest%28n%29%7D%29%3Bvar%20Al%3D%5B0%2C2%2F3%2C1%2F3%2C0%5D%2CNl%3D%5B0%2C1%2F3%2C2%2F3%2C0%5D%2CCl%3D%5B0%2C1%2F6%2C2%2F3%2C1%2F6%5D%3Bta%2Esvg%2Eline%2Eradial%3Dfunction%28%29%7Bvar%20n%3Dho%28Ro%29%3Breturn%20n%2Eradius%3Dn%2Ex%2Cdelete%20n%2Ex%2Cn%2Eangle%3Dn%2Ey%2Cdelete%20n%2Ey%2Cn%7D%2Cmo%2Ereverse%3Dyo%2Cyo%2Ereverse%3Dmo%2Cta%2Esvg%2Earea%3Dfunction%28%29%7Breturn%20Do%28y%29%7D%2Cta%2Esvg%2Earea%2Eradial%3Dfunction%28%29%7Bvar%20n%3DDo%28Ro%29%3Breturn%20n%2Eradius%3Dn%2Ex%2Cdelete%20n%2Ex%2Cn%2EinnerRadius%3Dn%2Ex0%2Cdelete%20n%2Ex0%2Cn%2EouterRadius%3Dn%2Ex1%2Cdelete%20n%2Ex1%2Cn%2Eangle%3Dn%2Ey%2Cdelete%20n%2Ey%2Cn%2EstartAngle%3Dn%2Ey0%2Cdelete%20n%2Ey0%2Cn%2EendAngle%3Dn%2Ey1%2Cdelete%20n%2Ey1%2Cn%7D%2Cta%2Esvg%2Echord%3Dfunction%28%29%7Bfunction%20n%28n%2Ca%29%7Bvar%20c%3Dt%28this%2Ci%2Cn%2Ca%29%2Cl%3Dt%28this%2Co%2Cn%2Ca%29%3Breturn%22M%22%2Bc%2Ep0%2Br%28c%2Er%2Cc%2Ep1%2Cc%2Ea1%2Dc%2Ea0%29%2B%28e%28c%2Cl%29%3Fu%28c%2Er%2Cc%2Ep1%2Cc%2Er%2Cc%2Ep0%29%3Au%28c%2Er%2Cc%2Ep1%2Cl%2Er%2Cl%2Ep0%29%2Br%28l%2Er%2Cl%2Ep1%2Cl%2Ea1%2Dl%2Ea0%29%2Bu%28l%2Er%2Cl%2Ep1%2Cc%2Er%2Cc%2Ep0%29%29%2B%22Z%22%7Dfunction%20t%28n%2Ct%2Ce%2Cr%29%7Bvar%20u%3Dt%2Ecall%28n%2Ce%2Cr%29%2Ci%3Da%2Ecall%28n%2Cu%2Cr%29%2Co%3Dc%2Ecall%28n%2Cu%2Cr%29%2DRa%2Cs%3Dl%2Ecall%28n%2Cu%2Cr%29%2DRa%3Breturn%7Br%3Ai%2Ca0%3Ao%2Ca1%3As%2Cp0%3A%5Bi%2AMath%2Ecos%28o%29%2Ci%2AMath%2Esin%28o%29%5D%2Cp1%3A%5Bi%2AMath%2Ecos%28s%29%2Ci%2AMath%2Esin%28s%29%5D%7D%7Dfunction%20e%28n%2Ct%29%7Breturn%20n%2Ea0%3D%3Dt%2Ea0%26%26n%2Ea1%3D%3Dt%2Ea1%7Dfunction%20r%28n%2Ct%2Ce%29%7Breturn%22A%22%2Bn%2B%22%2C%22%2Bn%2B%22%200%20%22%2B%20%2B%28e%3Eqa%29%2B%22%2C1%20%22%2Bt%7Dfunction%20u%28n%2Ct%2Ce%2Cr%29%7Breturn%22Q%200%2C0%20%22%2Br%7Dvar%20i%3Dmr%2Co%3Dyr%2Ca%3DPo%2Cc%3Dao%2Cl%3Dco%3Breturn%20n%2Eradius%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28a%3DEt%28t%29%2Cn%29%3Aa%7D%2Cn%2Esource%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%3DEt%28t%29%2Cn%29%3Ai%7D%2Cn%2Etarget%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28o%3DEt%28t%29%2Cn%29%3Ao%7D%2Cn%2EstartAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28c%3DEt%28t%29%2Cn%29%3Ac%7D%2Cn%2EendAngle%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28l%3DEt%28t%29%2Cn%29%3Al%7D%2Cn%7D%2Cta%2Esvg%2Ediagonal%3Dfunction%28%29%7Bfunction%20n%28n%2Cu%29%7Bvar%20i%3Dt%2Ecall%28this%2Cn%2Cu%29%2Co%3De%2Ecall%28this%2Cn%2Cu%29%2Ca%3D%28i%2Ey%2Bo%2Ey%29%2F2%2Cc%3D%5Bi%2C%7Bx%3Ai%2Ex%2Cy%3Aa%7D%2C%7Bx%3Ao%2Ex%2Cy%3Aa%7D%2Co%5D%3Breturn%20c%3Dc%2Emap%28r%29%2C%22M%22%2Bc%5B0%5D%2B%22C%22%2Bc%5B1%5D%2B%22%20%22%2Bc%5B2%5D%2B%22%20%22%2Bc%5B3%5D%7Dvar%20t%3Dmr%2Ce%3Dyr%2Cr%3DUo%3Breturn%20n%2Esource%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3DEt%28e%29%2Cn%29%3At%7D%2Cn%2Etarget%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3DEt%28t%29%2Cn%29%3Ae%7D%2Cn%2Eprojection%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3Dt%2Cn%29%3Ar%7D%2Cn%7D%2Cta%2Esvg%2Ediagonal%2Eradial%3Dfunction%28%29%7Bvar%20n%3Dta%2Esvg%2Ediagonal%28%29%2Ct%3DUo%2Ce%3Dn%2Eprojection%3Breturn%20n%2Eprojection%3Dfunction%28n%29%7Breturn%20arguments%2Elength%3Fe%28jo%28t%3Dn%29%29%3At%7D%2Cn%7D%2Cta%2Esvg%2Esymbol%3Dfunction%28%29%7Bfunction%20n%28n%2Cr%29%7Breturn%28zl%2Eget%28t%2Ecall%28this%2Cn%2Cr%29%29%7C%7COo%29%28e%2Ecall%28this%2Cn%2Cr%29%29%7Dvar%20t%3DHo%2Ce%3DFo%3Breturn%20n%2Etype%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3DEt%28e%29%2Cn%29%3At%7D%2Cn%2Esize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3DEt%28t%29%2Cn%29%3Ae%7D%2Cn%7D%3Bvar%20zl%3Dta%2Emap%28%7Bcircle%3AOo%2Ccross%3Afunction%28n%29%7Bvar%20t%3DMath%2Esqrt%28n%2F5%29%2F2%3Breturn%22M%22%2B%2D3%2At%2B%22%2C%22%2B%2Dt%2B%22H%22%2B%2Dt%2B%22V%22%2B%2D3%2At%2B%22H%22%2Bt%2B%22V%22%2B%2Dt%2B%22H%22%2B3%2At%2B%22V%22%2Bt%2B%22H%22%2Bt%2B%22V%22%2B3%2At%2B%22H%22%2B%2Dt%2B%22V%22%2Bt%2B%22H%22%2B%2D3%2At%2B%22Z%22%7D%2Cdiamond%3Afunction%28n%29%7Bvar%20t%3DMath%2Esqrt%28n%2F%282%2ALl%29%29%2Ce%3Dt%2ALl%3Breturn%22M0%2C%22%2B%2Dt%2B%22L%22%2Be%2B%22%2C0%200%2C%22%2Bt%2B%22%20%22%2B%2De%2B%22%2C0Z%22%7D%2Csquare%3Afunction%28n%29%7Bvar%20t%3DMath%2Esqrt%28n%29%2F2%3Breturn%22M%22%2B%2Dt%2B%22%2C%22%2B%2Dt%2B%22L%22%2Bt%2B%22%2C%22%2B%2Dt%2B%22%20%22%2Bt%2B%22%2C%22%2Bt%2B%22%20%22%2B%2Dt%2B%22%2C%22%2Bt%2B%22Z%22%7D%2C%22triangle%2Ddown%22%3Afunction%28n%29%7Bvar%20t%3DMath%2Esqrt%28n%2Fql%29%2Ce%3Dt%2Aql%2F2%3Breturn%22M0%2C%22%2Be%2B%22L%22%2Bt%2B%22%2C%22%2B%2De%2B%22%20%22%2B%2Dt%2B%22%2C%22%2B%2De%2B%22Z%22%7D%2C%22triangle%2Dup%22%3Afunction%28n%29%7Bvar%20t%3DMath%2Esqrt%28n%2Fql%29%2Ce%3Dt%2Aql%2F2%3Breturn%22M0%2C%22%2B%2De%2B%22L%22%2Bt%2B%22%2C%22%2Be%2B%22%20%22%2B%2Dt%2B%22%2C%22%2Be%2B%22Z%22%7D%7D%29%3Bta%2Esvg%2EsymbolTypes%3Dzl%2Ekeys%28%29%3Bvar%20ql%3DMath%2Esqrt%283%29%2CLl%3DMath%2Etan%2830%2ADa%29%3B%5Fa%2Etransition%3Dfunction%28n%29%7Bfor%28var%20t%2Ce%2Cr%3DTl%7C%7C%2B%2BUl%2Cu%3DXo%28n%29%2Ci%3D%5B%5D%2Co%3DRl%7C%7C%7Btime%3ADate%2Enow%28%29%2Cease%3ASu%2Cdelay%3A0%2Cduration%3A250%7D%2Ca%3D%2D1%2Cc%3Dthis%2Elength%3B%2B%2Ba%3Cc%3B%29%7Bi%2Epush%28t%3D%5B%5D%29%3Bfor%28var%20l%3Dthis%5Ba%5D%2Cs%3D%2D1%2Cf%3Dl%2Elength%3B%2B%2Bs%3Cf%3B%29%28e%3Dl%5Bs%5D%29%26%26%24o%28e%2Cs%2Cu%2Cr%2Co%29%2Ct%2Epush%28e%29%7Dreturn%20Yo%28i%2Cu%2Cr%29%7D%2C%5Fa%2Einterrupt%3Dfunction%28n%29%7Breturn%20this%2Eeach%28null%3D%3Dn%3FDl%3AIo%28Xo%28n%29%29%29%7D%3Bvar%20Tl%2CRl%2CDl%3DIo%28Xo%28%29%29%2CPl%3D%5B%5D%2CUl%3D0%3BPl%2Ecall%3D%5Fa%2Ecall%2CPl%2Eempty%3D%5Fa%2Eempty%2CPl%2Enode%3D%5Fa%2Enode%2CPl%2Esize%3D%5Fa%2Esize%2Cta%2Etransition%3Dfunction%28n%2Ct%29%7Breturn%20n%26%26n%2Etransition%3FTl%3Fn%2Etransition%28t%29%3An%3Ata%2Eselection%28%29%2Etransition%28n%29%7D%2Cta%2Etransition%2Eprototype%3DPl%2CPl%2Eselect%3Dfunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%3Dthis%2Eid%2Ci%3Dthis%2Enamespace%2Co%3D%5B%5D%3Bn%3DN%28n%29%3Bfor%28var%20a%3D%2D1%2Cc%3Dthis%2Elength%3B%2B%2Ba%3Cc%3B%29%7Bo%2Epush%28t%3D%5B%5D%29%3Bfor%28var%20l%3Dthis%5Ba%5D%2Cs%3D%2D1%2Cf%3Dl%2Elength%3B%2B%2Bs%3Cf%3B%29%28r%3Dl%5Bs%5D%29%26%26%28e%3Dn%2Ecall%28r%2Cr%2E%5F%5Fdata%5F%5F%2Cs%2Ca%29%29%3F%28%22%5F%5Fdata%5F%5F%22in%20r%26%26%28e%2E%5F%5Fdata%5F%5F%3Dr%2E%5F%5Fdata%5F%5F%29%2C%24o%28e%2Cs%2Ci%2Cu%2Cr%5Bi%5D%5Bu%5D%29%2Ct%2Epush%28e%29%29%3At%2Epush%28null%29%7Dreturn%20Yo%28o%2Ci%2Cu%29%7D%2CPl%2EselectAll%3Dfunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%2Ci%2Co%3Dthis%2Eid%2Ca%3Dthis%2Enamespace%2Cc%3D%5B%5D%3Bn%3DC%28n%29%3Bfor%28var%20l%3D%2D1%2Cs%3Dthis%2Elength%3B%2B%2Bl%3Cs%3B%29for%28var%20f%3Dthis%5Bl%5D%2Ch%3D%2D1%2Cg%3Df%2Elength%3B%2B%2Bh%3Cg%3B%29if%28r%3Df%5Bh%5D%29%7Bi%3Dr%5Ba%5D%5Bo%5D%2Ce%3Dn%2Ecall%28r%2Cr%2E%5F%5Fdata%5F%5F%2Ch%2Cl%29%2Cc%2Epush%28t%3D%5B%5D%29%3Bfor%28var%20p%3D%2D1%2Cv%3De%2Elength%3B%2B%2Bp%3Cv%3B%29%28u%3De%5Bp%5D%29%26%26%24o%28u%2Cp%2Ca%2Co%2Ci%29%2Ct%2Epush%28u%29%7Dreturn%20Yo%28c%2Ca%2Co%29%7D%2CPl%2Efilter%3Dfunction%28n%29%7Bvar%20t%2Ce%2Cr%2Cu%3D%5B%5D%3B%22function%22%21%3Dtypeof%20n%26%26%28n%3DO%28n%29%29%3Bfor%28var%20i%3D0%2Co%3Dthis%2Elength%3Bo%3Ei%3Bi%2B%2B%29%7Bu%2Epush%28t%3D%5B%5D%29%3Bfor%28var%20e%3Dthis%5Bi%5D%2Ca%3D0%2Cc%3De%2Elength%3Bc%3Ea%3Ba%2B%2B%29%28r%3De%5Ba%5D%29%26%26n%2Ecall%28r%2Cr%2E%5F%5Fdata%5F%5F%2Ca%2Ci%29%26%26t%2Epush%28r%29%7Dreturn%20Yo%28u%2Cthis%2Enamespace%2Cthis%2Eid%29%7D%2CPl%2Etween%3Dfunction%28n%2Ct%29%7Bvar%20e%3Dthis%2Eid%2Cr%3Dthis%2Enamespace%3Breturn%20arguments%2Elength%3C2%3Fthis%2Enode%28%29%5Br%5D%5Be%5D%2Etween%2Eget%28n%29%3AY%28this%2Cnull%3D%3Dt%3Ffunction%28t%29%7Bt%5Br%5D%5Be%5D%2Etween%2Eremove%28n%29%7D%3Afunction%28u%29%7Bu%5Br%5D%5Be%5D%2Etween%2Eset%28n%2Ct%29%7D%29%7D%2CPl%2Eattr%3Dfunction%28n%2Ct%29%7Bfunction%20e%28%29%7Bthis%2EremoveAttribute%28a%29%7Dfunction%20r%28%29%7Bthis%2EremoveAttributeNS%28a%2Espace%2Ca%2Elocal%29%7Dfunction%20u%28n%29%7Breturn%20null%3D%3Dn%3Fe%3A%28n%2B%3D%22%22%2Cfunction%28%29%7Bvar%20t%2Ce%3Dthis%2EgetAttribute%28a%29%3Breturn%20e%21%3D%3Dn%26%26%28t%3Do%28e%2Cn%29%2Cfunction%28n%29%7Bthis%2EsetAttribute%28a%2Ct%28n%29%29%7D%29%7D%29%7Dfunction%20i%28n%29%7Breturn%20null%3D%3Dn%3Fr%3A%28n%2B%3D%22%22%2Cfunction%28%29%7Bvar%20t%2Ce%3Dthis%2EgetAttributeNS%28a%2Espace%2Ca%2Elocal%29%3Breturn%20e%21%3D%3Dn%26%26%28t%3Do%28e%2Cn%29%2Cfunction%28n%29%7Bthis%2EsetAttributeNS%28a%2Espace%2Ca%2Elocal%2Ct%28n%29%29%7D%29%7D%29%7Dif%28arguments%2Elength%3C2%29%7Bfor%28t%20in%20n%29this%2Eattr%28t%2Cn%5Bt%5D%29%3Breturn%20this%7Dvar%20o%3D%22transform%22%3D%3Dn%3FHu%3Amu%2Ca%3Dta%2Ens%2Equalify%28n%29%3Breturn%20Zo%28this%2C%22attr%2E%22%2Bn%2Ct%2Ca%2Elocal%3Fi%3Au%29%7D%2CPl%2EattrTween%3Dfunction%28n%2Ct%29%7Bfunction%20e%28n%2Ce%29%7Bvar%20r%3Dt%2Ecall%28this%2Cn%2Ce%2Cthis%2EgetAttribute%28u%29%29%3Breturn%20r%26%26function%28n%29%7Bthis%2EsetAttribute%28u%2Cr%28n%29%29%7D%7Dfunction%20r%28n%2Ce%29%7Bvar%20r%3Dt%2Ecall%28this%2Cn%2Ce%2Cthis%2EgetAttributeNS%28u%2Espace%2Cu%2Elocal%29%29%3Breturn%20r%26%26function%28n%29%7Bthis%2EsetAttributeNS%28u%2Espace%2Cu%2Elocal%2Cr%28n%29%29%7D%7Dvar%20u%3Dta%2Ens%2Equalify%28n%29%3Breturn%20this%2Etween%28%22attr%2E%22%2Bn%2Cu%2Elocal%3Fr%3Ae%29%7D%2CPl%2Estyle%3Dfunction%28n%2Ce%2Cr%29%7Bfunction%20u%28%29%7Bthis%2Estyle%2EremoveProperty%28n%29%7Dfunction%20i%28e%29%7Breturn%20null%3D%3De%3Fu%3A%28e%2B%3D%22%22%2Cfunction%28%29%7Bvar%20u%2Ci%3Dt%28this%29%2EgetComputedStyle%28this%2Cnull%29%2EgetPropertyValue%28n%29%3Breturn%20i%21%3D%3De%26%26%28u%3Dmu%28i%2Ce%29%2Cfunction%28t%29%7Bthis%2Estyle%2EsetProperty%28n%2Cu%28t%29%2Cr%29%7D%29%7D%29%7Dvar%20o%3Darguments%2Elength%3Bif%283%3Eo%29%7Bif%28%22string%22%21%3Dtypeof%20n%29%7B2%3Eo%26%26%28e%3D%22%22%29%3Bfor%28r%20in%20n%29this%2Estyle%28r%2Cn%5Br%5D%2Ce%29%3Breturn%20this%7Dr%3D%22%22%7Dreturn%20Zo%28this%2C%22style%2E%22%2Bn%2Ce%2Ci%29%7D%2CPl%2EstyleTween%3Dfunction%28n%2Ce%2Cr%29%7Bfunction%20u%28u%2Ci%29%7Bvar%20o%3De%2Ecall%28this%2Cu%2Ci%2Ct%28this%29%2EgetComputedStyle%28this%2Cnull%29%2EgetPropertyValue%28n%29%29%3Breturn%20o%26%26function%28t%29%7Bthis%2Estyle%2EsetProperty%28n%2Co%28t%29%2Cr%29%7D%7Dreturn%20arguments%2Elength%3C3%26%26%28r%3D%22%22%29%2Cthis%2Etween%28%22style%2E%22%2Bn%2Cu%29%7D%2CPl%2Etext%3Dfunction%28n%29%7Breturn%20Zo%28this%2C%22text%22%2Cn%2CVo%29%7D%2CPl%2Eremove%3Dfunction%28%29%7Bvar%20n%3Dthis%2Enamespace%3Breturn%20this%2Eeach%28%22end%2Etransition%22%2Cfunction%28%29%7Bvar%20t%3Bthis%5Bn%5D%2Ecount%3C2%26%26%28t%3Dthis%2EparentNode%29%26%26t%2EremoveChild%28this%29%7D%29%7D%2CPl%2Eease%3Dfunction%28n%29%7Bvar%20t%3Dthis%2Eid%2Ce%3Dthis%2Enamespace%3Breturn%20arguments%2Elength%3C1%3Fthis%2Enode%28%29%5Be%5D%5Bt%5D%2Eease%3A%28%22function%22%21%3Dtypeof%20n%26%26%28n%3Dta%2Eease%2Eapply%28ta%2Carguments%29%29%2CY%28this%2Cfunction%28r%29%7Br%5Be%5D%5Bt%5D%2Eease%3Dn%7D%29%29%7D%2CPl%2Edelay%3Dfunction%28n%29%7Bvar%20t%3Dthis%2Eid%2Ce%3Dthis%2Enamespace%3Breturn%20arguments%2Elength%3C1%3Fthis%2Enode%28%29%5Be%5D%5Bt%5D%2Edelay%3AY%28this%2C%22function%22%3D%3Dtypeof%20n%3Ffunction%28r%2Cu%2Ci%29%7Br%5Be%5D%5Bt%5D%2Edelay%3D%2Bn%2Ecall%28r%2Cr%2E%5F%5Fdata%5F%5F%2Cu%2Ci%29%7D%3A%28n%3D%2Bn%2Cfunction%28r%29%7Br%5Be%5D%5Bt%5D%2Edelay%3Dn%7D%29%29%7D%2CPl%2Eduration%3Dfunction%28n%29%7Bvar%20t%3Dthis%2Eid%2Ce%3Dthis%2Enamespace%3Breturn%20arguments%2Elength%3C1%3Fthis%2Enode%28%29%5Be%5D%5Bt%5D%2Eduration%3AY%28this%2C%22function%22%3D%3Dtypeof%20n%3Ffunction%28r%2Cu%2Ci%29%7Br%5Be%5D%5Bt%5D%2Eduration%3DMath%2Emax%281%2Cn%2Ecall%28r%2Cr%2E%5F%5Fdata%5F%5F%2Cu%2Ci%29%29%7D%3A%28n%3DMath%2Emax%281%2Cn%29%2Cfunction%28r%29%7Br%5Be%5D%5Bt%5D%2Eduration%3Dn%7D%29%29%7D%2CPl%2Eeach%3Dfunction%28n%2Ct%29%7Bvar%20e%3Dthis%2Eid%2Cr%3Dthis%2Enamespace%3Bif%28arguments%2Elength%3C2%29%7Bvar%20u%3DRl%2Ci%3DTl%3Btry%7BTl%3De%2CY%28this%2Cfunction%28t%2Cu%2Ci%29%7BRl%3Dt%5Br%5D%5Be%5D%2Cn%2Ecall%28t%2Ct%2E%5F%5Fdata%5F%5F%2Cu%2Ci%29%7D%29%7Dfinally%7BRl%3Du%2CTl%3Di%7D%7Delse%20Y%28this%2Cfunction%28u%29%7Bvar%20i%3Du%5Br%5D%5Be%5D%3B%28i%2Eevent%7C%7C%28i%2Eevent%3Dta%2Edispatch%28%22start%22%2C%22end%22%2C%22interrupt%22%29%29%29%2Eon%28n%2Ct%29%7D%29%3Breturn%20this%7D%2CPl%2Etransition%3Dfunction%28%29%7Bfor%28var%20n%2Ct%2Ce%2Cr%2Cu%3Dthis%2Eid%2Ci%3D%2B%2BUl%2Co%3Dthis%2Enamespace%2Ca%3D%5B%5D%2Cc%3D0%2Cl%3Dthis%2Elength%3Bl%3Ec%3Bc%2B%2B%29%7Ba%2Epush%28n%3D%5B%5D%29%3Bfor%28var%20t%3Dthis%5Bc%5D%2Cs%3D0%2Cf%3Dt%2Elength%3Bf%3Es%3Bs%2B%2B%29%28e%3Dt%5Bs%5D%29%26%26%28r%3De%5Bo%5D%5Bu%5D%2C%24o%28e%2Cs%2Co%2Ci%2C%7Btime%3Ar%2Etime%2Cease%3Ar%2Eease%2Cdelay%3Ar%2Edelay%2Br%2Eduration%2Cduration%3Ar%2Eduration%7D%29%29%2Cn%2Epush%28e%29%7Dreturn%20Yo%28a%2Co%2Ci%29%7D%2Cta%2Esvg%2Eaxis%3Dfunction%28%29%7Bfunction%20n%28n%29%7Bn%2Eeach%28function%28%29%7Bvar%20n%2Cl%3Dta%2Eselect%28this%29%2Cs%3Dthis%2E%5F%5Fchart%5F%5F%7C%7Ce%2Cf%3Dthis%2E%5F%5Fchart%5F%5F%3De%2Ecopy%28%29%2Ch%3Dnull%3D%3Dc%3Ff%2Eticks%3Ff%2Eticks%2Eapply%28f%2Ca%29%3Af%2Edomain%28%29%3Ac%2Cg%3Dnull%3D%3Dt%3Ff%2EtickFormat%3Ff%2EtickFormat%2Eapply%28f%2Ca%29%3Ay%3At%2Cp%3Dl%2EselectAll%28%22%2Etick%22%29%2Edata%28h%2Cf%29%2Cv%3Dp%2Eenter%28%29%2Einsert%28%22g%22%2C%22%2Edomain%22%29%2Eattr%28%22class%22%2C%22tick%22%29%2Estyle%28%22opacity%22%2CCa%29%2Cd%3Dta%2Etransition%28p%2Eexit%28%29%29%2Estyle%28%22opacity%22%2CCa%29%2Eremove%28%29%2Cm%3Dta%2Etransition%28p%2Eorder%28%29%29%2Estyle%28%22opacity%22%2C1%29%2CM%3DMath%2Emax%28u%2C0%29%2Bo%2Cx%3DUi%28f%29%2Cb%3Dl%2EselectAll%28%22%2Edomain%22%29%2Edata%28%5B0%5D%29%2C%5F%3D%28b%2Eenter%28%29%2Eappend%28%22path%22%29%2Eattr%28%22class%22%2C%22domain%22%29%2Cta%2Etransition%28b%29%29%3Bv%2Eappend%28%22line%22%29%2Cv%2Eappend%28%22text%22%29%3Bvar%20w%2CS%2Ck%2CE%2CA%3Dv%2Eselect%28%22line%22%29%2CN%3Dm%2Eselect%28%22line%22%29%2CC%3Dp%2Eselect%28%22text%22%29%2Etext%28g%29%2Cz%3Dv%2Eselect%28%22text%22%29%2Cq%3Dm%2Eselect%28%22text%22%29%2CL%3D%22top%22%3D%3D%3Dr%7C%7C%22left%22%3D%3D%3Dr%3F%2D1%3A1%3Bif%28%22bottom%22%3D%3D%3Dr%7C%7C%22top%22%3D%3D%3Dr%3F%28n%3DBo%2Cw%3D%22x%22%2Ck%3D%22y%22%2CS%3D%22x2%22%2CE%3D%22y2%22%2CC%2Eattr%28%22dy%22%2C0%3EL%3F%220em%22%3A%22%2E71em%22%29%2Estyle%28%22text%2Danchor%22%2C%22middle%22%29%2C%5F%2Eattr%28%22d%22%2C%22M%22%2Bx%5B0%5D%2B%22%2C%22%2BL%2Ai%2B%22V0H%22%2Bx%5B1%5D%2B%22V%22%2BL%2Ai%29%29%3A%28n%3DWo%2Cw%3D%22y%22%2Ck%3D%22x%22%2CS%3D%22y2%22%2CE%3D%22x2%22%2CC%2Eattr%28%22dy%22%2C%22%2E32em%22%29%2Estyle%28%22text%2Danchor%22%2C0%3EL%3F%22end%22%3A%22start%22%29%2C%5F%2Eattr%28%22d%22%2C%22M%22%2BL%2Ai%2B%22%2C%22%2Bx%5B0%5D%2B%22H0V%22%2Bx%5B1%5D%2B%22H%22%2BL%2Ai%29%29%2CA%2Eattr%28E%2CL%2Au%29%2Cz%2Eattr%28k%2CL%2AM%29%2CN%2Eattr%28S%2C0%29%2Eattr%28E%2CL%2Au%29%2Cq%2Eattr%28w%2C0%29%2Eattr%28k%2CL%2AM%29%2Cf%2ErangeBand%29%7Bvar%20T%3Df%2CR%3DT%2ErangeBand%28%29%2F2%3Bs%3Df%3Dfunction%28n%29%7Breturn%20T%28n%29%2BR%7D%7Delse%20s%2ErangeBand%3Fs%3Df%3Ad%2Ecall%28n%2Cf%2Cs%29%3Bv%2Ecall%28n%2Cs%2Cf%29%2Cm%2Ecall%28n%2Cf%2Cf%29%7D%29%7Dvar%20t%2Ce%3Dta%2Escale%2Elinear%28%29%2Cr%3Djl%2Cu%3D6%2Ci%3D6%2Co%3D3%2Ca%3D%5B10%5D%2Cc%3Dnull%3Breturn%20n%2Escale%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28e%3Dt%2Cn%29%3Ae%7D%2Cn%2Eorient%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28r%3Dt%20in%20Fl%3Ft%2B%22%22%3Ajl%2Cn%29%3Ar%7D%2Cn%2Eticks%3Dfunction%28%29%7Breturn%20arguments%2Elength%3F%28a%3Darguments%2Cn%29%3Aa%7D%2Cn%2EtickValues%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28c%3Dt%2Cn%29%3Ac%7D%2Cn%2EtickFormat%3Dfunction%28e%29%7Breturn%20arguments%2Elength%3F%28t%3De%2Cn%29%3At%7D%2Cn%2EtickSize%3Dfunction%28t%29%7Bvar%20e%3Darguments%2Elength%3Breturn%20e%3F%28u%3D%2Bt%2Ci%3D%2Barguments%5Be%2D1%5D%2Cn%29%3Au%7D%2Cn%2EinnerTickSize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28u%3D%2Bt%2Cn%29%3Au%7D%2Cn%2EouterTickSize%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28i%3D%2Bt%2Cn%29%3Ai%7D%2Cn%2EtickPadding%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28o%3D%2Bt%2Cn%29%3Ao%7D%2Cn%2EtickSubdivide%3Dfunction%28%29%7Breturn%20arguments%2Elength%26%26n%7D%2Cn%7D%3Bvar%20jl%3D%22bottom%22%2CFl%3D%7Btop%3A1%2Cright%3A1%2Cbottom%3A1%2Cleft%3A1%7D%3Bta%2Esvg%2Ebrush%3Dfunction%28%29%7Bfunction%20n%28t%29%7Bt%2Eeach%28function%28%29%7Bvar%20t%3Dta%2Eselect%28this%29%2Estyle%28%22pointer%2Devents%22%2C%22all%22%29%2Estyle%28%22%2Dwebkit%2Dtap%2Dhighlight%2Dcolor%22%2C%22rgba%280%2C0%2C0%2C0%29%22%29%2Eon%28%22mousedown%2Ebrush%22%2Ci%29%2Eon%28%22touchstart%2Ebrush%22%2Ci%29%2Co%3Dt%2EselectAll%28%22%2Ebackground%22%29%2Edata%28%5B0%5D%29%3Bo%2Eenter%28%29%2Eappend%28%22rect%22%29%2Eattr%28%22class%22%2C%22background%22%29%2Estyle%28%22visibility%22%2C%22hidden%22%29%2Estyle%28%22cursor%22%2C%22crosshair%22%29%2Ct%2EselectAll%28%22%2Eextent%22%29%2Edata%28%5B0%5D%29%2Eenter%28%29%2Eappend%28%22rect%22%29%2Eattr%28%22class%22%2C%22extent%22%29%2Estyle%28%22cursor%22%2C%22move%22%29%3Bvar%20a%3Dt%2EselectAll%28%22%2Eresize%22%29%2Edata%28v%2Cy%29%3Ba%2Eexit%28%29%2Eremove%28%29%2Ca%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2Cfunction%28n%29%7Breturn%22resize%20%22%2Bn%7D%29%2Estyle%28%22cursor%22%2Cfunction%28n%29%7Breturn%20Hl%5Bn%5D%7D%29%2Eappend%28%22rect%22%29%2Eattr%28%22x%22%2Cfunction%28n%29%7Breturn%2F%5Bew%5D%24%2F%2Etest%28n%29%3F%2D3%3Anull%7D%29%2Eattr%28%22y%22%2Cfunction%28n%29%7Breturn%2F%5E%5Bns%5D%2F%2Etest%28n%29%3F%2D3%3Anull%7D%29%2Eattr%28%22width%22%2C6%29%2Eattr%28%22height%22%2C6%29%2Estyle%28%22visibility%22%2C%22hidden%22%29%2Ca%2Estyle%28%22display%22%2Cn%2Eempty%28%29%3F%22none%22%3Anull%29%3Bvar%20c%2Cf%3Dta%2Etransition%28t%29%2Ch%3Dta%2Etransition%28o%29%3Bl%26%26%28c%3DUi%28l%29%2Ch%2Eattr%28%22x%22%2Cc%5B0%5D%29%2Eattr%28%22width%22%2Cc%5B1%5D%2Dc%5B0%5D%29%2Cr%28f%29%29%2Cs%26%26%28c%3DUi%28s%29%2Ch%2Eattr%28%22y%22%2Cc%5B0%5D%29%2Eattr%28%22height%22%2Cc%5B1%5D%2Dc%5B0%5D%29%2Cu%28f%29%29%2Ce%28f%29%7D%29%7Dfunction%20e%28n%29%7Bn%2EselectAll%28%22%2Eresize%22%29%2Eattr%28%22transform%22%2Cfunction%28n%29%7Breturn%22translate%28%22%2Bf%5B%2B%2Fe%24%2F%2Etest%28n%29%5D%2B%22%2C%22%2Bh%5B%2B%2F%5Es%2F%2Etest%28n%29%5D%2B%22%29%22%7D%29%7Dfunction%20r%28n%29%7Bn%2Eselect%28%22%2Eextent%22%29%2Eattr%28%22x%22%2Cf%5B0%5D%29%2Cn%2EselectAll%28%22%2Eextent%2C%2En%3Erect%2C%2Es%3Erect%22%29%2Eattr%28%22width%22%2Cf%5B1%5D%2Df%5B0%5D%29%7Dfunction%20u%28n%29%7Bn%2Eselect%28%22%2Eextent%22%29%2Eattr%28%22y%22%2Ch%5B0%5D%29%2Cn%2EselectAll%28%22%2Eextent%2C%2Ee%3Erect%2C%2Ew%3Erect%22%29%2Eattr%28%22height%22%2Ch%5B1%5D%2Dh%5B0%5D%29%7Dfunction%20i%28%29%7Bfunction%20i%28%29%7B32%3D%3Dta%2Eevent%2EkeyCode%26%26%28C%7C%7C%28M%3Dnull%2Cq%5B0%5D%2D%3Df%5B1%5D%2Cq%5B1%5D%2D%3Dh%5B1%5D%2CC%3D2%29%2CS%28%29%29%7Dfunction%20v%28%29%7B32%3D%3Dta%2Eevent%2EkeyCode%26%262%3D%3DC%26%26%28q%5B0%5D%2B%3Df%5B1%5D%2Cq%5B1%5D%2B%3Dh%5B1%5D%2CC%3D0%2CS%28%29%29%7Dfunction%20d%28%29%7Bvar%20n%3Dta%2Emouse%28b%29%2Ct%3D%211%3Bx%26%26%28n%5B0%5D%2B%3Dx%5B0%5D%2Cn%5B1%5D%2B%3Dx%5B1%5D%29%2CC%7C%7C%28ta%2Eevent%2EaltKey%3F%28M%7C%7C%28M%3D%5B%28f%5B0%5D%2Bf%5B1%5D%29%2F2%2C%28h%5B0%5D%2Bh%5B1%5D%29%2F2%5D%29%2Cq%5B0%5D%3Df%5B%2B%28n%5B0%5D%3CM%5B0%5D%29%5D%2Cq%5B1%5D%3Dh%5B%2B%28n%5B1%5D%3CM%5B1%5D%29%5D%29%3AM%3Dnull%29%2CA%26%26m%28n%2Cl%2C0%29%26%26%28r%28k%29%2Ct%3D%210%29%2CN%26%26m%28n%2Cs%2C1%29%26%26%28u%28k%29%2Ct%3D%210%29%2Ct%26%26%28e%28k%29%2Cw%28%7Btype%3A%22brush%22%2Cmode%3AC%3F%22move%22%3A%22resize%22%7D%29%29%7Dfunction%20m%28n%2Ct%2Ce%29%7Bvar%20r%2Cu%2Ci%3DUi%28t%29%2Cc%3Di%5B0%5D%2Cl%3Di%5B1%5D%2Cs%3Dq%5Be%5D%2Cv%3De%3Fh%3Af%2Cd%3Dv%5B1%5D%2Dv%5B0%5D%3Breturn%20C%26%26%28c%2D%3Ds%2Cl%2D%3Dd%2Bs%29%2Cr%3D%28e%3Fp%3Ag%29%3FMath%2Emax%28c%2CMath%2Emin%28l%2Cn%5Be%5D%29%29%3An%5Be%5D%2CC%3Fu%3D%28r%2B%3Ds%29%2Bd%3A%28M%26%26%28s%3DMath%2Emax%28c%2CMath%2Emin%28l%2C2%2AM%5Be%5D%2Dr%29%29%29%2Cr%3Es%3F%28u%3Dr%2Cr%3Ds%29%3Au%3Ds%29%2Cv%5B0%5D%21%3Dr%7C%7Cv%5B1%5D%21%3Du%3F%28e%3Fa%3Dnull%3Ao%3Dnull%2Cv%5B0%5D%3Dr%2Cv%5B1%5D%3Du%2C%210%29%3Avoid%200%7Dfunction%20y%28%29%7Bd%28%29%2Ck%2Estyle%28%22pointer%2Devents%22%2C%22all%22%29%2EselectAll%28%22%2Eresize%22%29%2Estyle%28%22display%22%2Cn%2Eempty%28%29%3F%22none%22%3Anull%29%2Cta%2Eselect%28%22body%22%29%2Estyle%28%22cursor%22%2Cnull%29%2CL%2Eon%28%22mousemove%2Ebrush%22%2Cnull%29%2Eon%28%22mouseup%2Ebrush%22%2Cnull%29%2Eon%28%22touchmove%2Ebrush%22%2Cnull%29%2Eon%28%22touchend%2Ebrush%22%2Cnull%29%2Eon%28%22keydown%2Ebrush%22%2Cnull%29%2Eon%28%22keyup%2Ebrush%22%2Cnull%29%2Cz%28%29%2Cw%28%7Btype%3A%22brushend%22%7D%29%7Dvar%20M%2Cx%2Cb%3Dthis%2C%5F%3Dta%2Eselect%28ta%2Eevent%2Etarget%29%2Cw%3Dc%2Eof%28b%2Carguments%29%2Ck%3Dta%2Eselect%28b%29%2CE%3D%5F%2Edatum%28%29%2CA%3D%21%2F%5E%28n%7Cs%29%24%2F%2Etest%28E%29%26%26l%2CN%3D%21%2F%5E%28e%7Cw%29%24%2F%2Etest%28E%29%26%26s%2CC%3D%5F%2Eclassed%28%22extent%22%29%2Cz%3DW%28b%29%2Cq%3Dta%2Emouse%28b%29%2CL%3Dta%2Eselect%28t%28b%29%29%2Eon%28%22keydown%2Ebrush%22%2Ci%29%2Eon%28%22keyup%2Ebrush%22%2Cv%29%3Bif%28ta%2Eevent%2EchangedTouches%3FL%2Eon%28%22touchmove%2Ebrush%22%2Cd%29%2Eon%28%22touchend%2Ebrush%22%2Cy%29%3AL%2Eon%28%22mousemove%2Ebrush%22%2Cd%29%2Eon%28%22mouseup%2Ebrush%22%2Cy%29%2Ck%2Einterrupt%28%29%2EselectAll%28%22%2A%22%29%2Einterrupt%28%29%2CC%29q%5B0%5D%3Df%5B0%5D%2Dq%5B0%5D%2Cq%5B1%5D%3Dh%5B0%5D%2Dq%5B1%5D%3Belse%20if%28E%29%7Bvar%20T%3D%2B%2Fw%24%2F%2Etest%28E%29%2CR%3D%2B%2F%5En%2F%2Etest%28E%29%3Bx%3D%5Bf%5B1%2DT%5D%2Dq%5B0%5D%2Ch%5B1%2DR%5D%2Dq%5B1%5D%5D%2Cq%5B0%5D%3Df%5BT%5D%2Cq%5B1%5D%3Dh%5BR%5D%7Delse%20ta%2Eevent%2EaltKey%26%26%28M%3Dq%2Eslice%28%29%29%3Bk%2Estyle%28%22pointer%2Devents%22%2C%22none%22%29%2EselectAll%28%22%2Eresize%22%29%2Estyle%28%22display%22%2Cnull%29%2Cta%2Eselect%28%22body%22%29%2Estyle%28%22cursor%22%2C%5F%2Estyle%28%22cursor%22%29%29%2Cw%28%7Btype%3A%22brushstart%22%7D%29%2Cd%28%29%7Dvar%20o%2Ca%2Cc%3DE%28n%2C%22brushstart%22%2C%22brush%22%2C%22brushend%22%29%2Cl%3Dnull%2Cs%3Dnull%2Cf%3D%5B0%2C0%5D%2Ch%3D%5B0%2C0%5D%2Cg%3D%210%2Cp%3D%210%2Cv%3DOl%5B0%5D%3Breturn%20n%2Eevent%3Dfunction%28n%29%7Bn%2Eeach%28function%28%29%7Bvar%20n%3Dc%2Eof%28this%2Carguments%29%2Ct%3D%7Bx%3Af%2Cy%3Ah%2Ci%3Ao%2Cj%3Aa%7D%2Ce%3Dthis%2E%5F%5Fchart%5F%5F%7C%7Ct%3Bthis%2E%5F%5Fchart%5F%5F%3Dt%2CTl%3Fta%2Eselect%28this%29%2Etransition%28%29%2Eeach%28%22start%2Ebrush%22%2Cfunction%28%29%7Bo%3De%2Ei%2Ca%3De%2Ej%2Cf%3De%2Ex%2Ch%3De%2Ey%2Cn%28%7Btype%3A%22brushstart%22%7D%29%7D%29%2Etween%28%22brush%3Abrush%22%2Cfunction%28%29%7Bvar%20e%3Dyu%28f%2Ct%2Ex%29%2Cr%3Dyu%28h%2Ct%2Ey%29%3Breturn%20o%3Da%3Dnull%2Cfunction%28u%29%7Bf%3Dt%2Ex%3De%28u%29%2Ch%3Dt%2Ey%3Dr%28u%29%2Cn%28%7Btype%3A%22brush%22%2Cmode%3A%22resize%22%7D%29%7D%7D%29%2Eeach%28%22end%2Ebrush%22%2Cfunction%28%29%7Bo%3Dt%2Ei%2Ca%3Dt%2Ej%2Cn%28%7Btype%3A%22brush%22%2Cmode%3A%22resize%22%7D%29%2Cn%28%7Btype%3A%22brushend%22%7D%29%7D%29%3A%28n%28%7Btype%3A%22brushstart%22%7D%29%2Cn%28%7Btype%3A%22brush%22%2Cmode%3A%22resize%22%7D%29%2Cn%28%7Btype%3A%22brushend%22%7D%29%29%7D%29%7D%2Cn%2Ex%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28l%3Dt%2Cv%3DOl%5B%21l%3C%3C1%7C%21s%5D%2Cn%29%3Al%7D%2Cn%2Ey%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28s%3Dt%2Cv%3DOl%5B%21l%3C%3C1%7C%21s%5D%2Cn%29%3As%7D%2Cn%2Eclamp%3Dfunction%28t%29%7Breturn%20arguments%2Elength%3F%28l%26%26s%3F%28g%3D%21%21t%5B0%5D%2Cp%3D%21%21t%5B1%5D%29%3Al%3Fg%3D%21%21t%3As%26%26%28p%3D%21%21t%29%2Cn%29%3Al%26%26s%3F%5Bg%2Cp%5D%3Al%3Fg%3As%3Fp%3Anull%7D%2Cn%2Eextent%3Dfunction%28t%29%7Bvar%20e%2Cr%2Cu%2Ci%2Cc%3Breturn%20arguments%2Elength%3F%28l%26%26%28e%3Dt%5B0%5D%2Cr%3Dt%5B1%5D%2Cs%26%26%28e%3De%5B0%5D%2Cr%3Dr%5B0%5D%29%2Co%3D%5Be%2Cr%5D%2Cl%2Einvert%26%26%28e%3Dl%28e%29%2Cr%3Dl%28r%29%29%2Ce%3Er%26%26%28c%3De%2Ce%3Dr%2Cr%3Dc%29%2C%28e%21%3Df%5B0%5D%7C%7Cr%21%3Df%5B1%5D%29%26%26%28f%3D%5Be%2Cr%5D%29%29%2Cs%26%26%28u%3Dt%5B0%5D%2Ci%3Dt%5B1%5D%2Cl%26%26%28u%3Du%5B1%5D%2Ci%3Di%5B1%5D%29%2Ca%3D%5Bu%2Ci%5D%2Cs%2Einvert%26%26%28u%3Ds%28u%29%2Ci%3Ds%28i%29%29%2Cu%3Ei%26%26%28c%3Du%2Cu%3Di%2Ci%3Dc%29%2C%28u%21%3Dh%5B0%5D%7C%7Ci%21%3Dh%5B1%5D%29%26%26%28h%3D%5Bu%2Ci%5D%29%29%2Cn%29%3A%28l%26%26%28o%3F%28e%3Do%5B0%5D%2Cr%3Do%5B1%5D%29%3A%28e%3Df%5B0%5D%2Cr%3Df%5B1%5D%2Cl%2Einvert%26%26%28e%3Dl%2Einvert%28e%29%2Cr%3Dl%2Einvert%28r%29%29%2Ce%3Er%26%26%28c%3De%2Ce%3Dr%2Cr%3Dc%29%29%29%2Cs%26%26%28a%3F%28u%3Da%5B0%5D%2Ci%3Da%5B1%5D%29%3A%28u%3Dh%5B0%5D%2Ci%3Dh%5B1%5D%2Cs%2Einvert%26%26%28u%3Ds%2Einvert%28u%29%2Ci%3Ds%2Einvert%28i%29%29%2Cu%3Ei%26%26%28c%3Du%2Cu%3Di%2Ci%3Dc%29%29%29%2Cl%26%26s%3F%5B%5Be%2Cu%5D%2C%5Br%2Ci%5D%5D%3Al%3F%5Be%2Cr%5D%3As%26%26%5Bu%2Ci%5D%29%7D%2Cn%2Eclear%3Dfunction%28%29%7Breturn%20n%2Eempty%28%29%7C%7C%28f%3D%5B0%2C0%5D%2Ch%3D%5B0%2C0%5D%2Co%3Da%3Dnull%29%2Cn%7D%2Cn%2Eempty%3Dfunction%28%29%7Breturn%21%21l%26%26f%5B0%5D%3D%3Df%5B1%5D%7C%7C%21%21s%26%26h%5B0%5D%3D%3Dh%5B1%5D%7D%2Cta%2Erebind%28n%2Cc%2C%22on%22%29%7D%3Bvar%20Hl%3D%7Bn%3A%22ns%2Dresize%22%2Ce%3A%22ew%2Dresize%22%2Cs%3A%22ns%2Dresize%22%2Cw%3A%22ew%2Dresize%22%2Cnw%3A%22nwse%2Dresize%22%2Cne%3A%22nesw%2Dresize%22%2Cse%3A%22nwse%2Dresize%22%2Csw%3A%22nesw%2Dresize%22%7D%2COl%3D%5B%5B%22n%22%2C%22e%22%2C%22s%22%2C%22w%22%2C%22nw%22%2C%22ne%22%2C%22se%22%2C%22sw%22%5D%2C%5B%22e%22%2C%22w%22%5D%2C%5B%22n%22%2C%22s%22%5D%2C%5B%5D%5D%2CIl%3Dac%2Eformat%3Dgc%2EtimeFormat%2CYl%3DIl%2Eutc%2CZl%3DYl%28%22%25Y%2D%25m%2D%25dT%25H%3A%25M%3A%25S%2E%25LZ%22%29%3BIl%2Eiso%3DDate%2Eprototype%2EtoISOString%26%26%2Bnew%20Date%28%222000%2D01%2D01T00%3A00%3A00%2E000Z%22%29%3FJo%3AZl%2CJo%2Eparse%3Dfunction%28n%29%7Bvar%20t%3Dnew%20Date%28n%29%3Breturn%20isNaN%28t%29%3Fnull%3At%7D%2CJo%2EtoString%3DZl%2EtoString%2Cac%2Esecond%3DFt%28function%28n%29%7Breturn%20new%20cc%281e3%2AMath%2Efloor%28n%2F1e3%29%29%7D%2Cfunction%28n%2Ct%29%7Bn%2EsetTime%28n%2EgetTime%28%29%2B1e3%2AMath%2Efloor%28t%29%29%7D%2Cfunction%28n%29%7Breturn%20n%2EgetSeconds%28%29%7D%29%2Cac%2Eseconds%3Dac%2Esecond%2Erange%2Cac%2Eseconds%2Eutc%3Dac%2Esecond%2Eutc%2Erange%2Cac%2Eminute%3DFt%28function%28n%29%7Breturn%20new%20cc%286e4%2AMath%2Efloor%28n%2F6e4%29%29%7D%2Cfunction%28n%2Ct%29%7Bn%2EsetTime%28n%2EgetTime%28%29%2B6e4%2AMath%2Efloor%28t%29%29%7D%2Cfunction%28n%29%7Breturn%20n%2EgetMinutes%28%29%7D%29%2Cac%2Eminutes%3Dac%2Eminute%2Erange%2Cac%2Eminutes%2Eutc%3Dac%2Eminute%2Eutc%2Erange%2Cac%2Ehour%3DFt%28function%28n%29%7Bvar%20t%3Dn%2EgetTimezoneOffset%28%29%2F60%3Breturn%20new%20cc%2836e5%2A%28Math%2Efloor%28n%2F36e5%2Dt%29%2Bt%29%29%7D%2Cfunction%28n%2Ct%29%7Bn%2EsetTime%28n%2EgetTime%28%29%2B36e5%2AMath%2Efloor%28t%29%29%7D%2Cfunction%28n%29%7Breturn%20n%2EgetHours%28%29%7D%29%2Cac%2Ehours%3Dac%2Ehour%2Erange%2Cac%2Ehours%2Eutc%3Dac%2Ehour%2Eutc%2Erange%2Cac%2Emonth%3DFt%28function%28n%29%7Breturn%20n%3Dac%2Eday%28n%29%2Cn%2EsetDate%281%29%2Cn%7D%2Cfunction%28n%2Ct%29%7Bn%2EsetMonth%28n%2EgetMonth%28%29%2Bt%29%7D%2Cfunction%28n%29%7Breturn%20n%2EgetMonth%28%29%7D%29%2Cac%2Emonths%3Dac%2Emonth%2Erange%2Cac%2Emonths%2Eutc%3Dac%2Emonth%2Eutc%2Erange%3Bvar%20Vl%3D%5B1e3%2C5e3%2C15e3%2C3e4%2C6e4%2C3e5%2C9e5%2C18e5%2C36e5%2C108e5%2C216e5%2C432e5%2C864e5%2C1728e5%2C6048e5%2C2592e6%2C7776e6%2C31536e6%5D%2CXl%3D%5B%5Bac%2Esecond%2C1%5D%2C%5Bac%2Esecond%2C5%5D%2C%5Bac%2Esecond%2C15%5D%2C%5Bac%2Esecond%2C30%5D%2C%5Bac%2Eminute%2C1%5D%2C%5Bac%2Eminute%2C5%5D%2C%5Bac%2Eminute%2C15%5D%2C%5Bac%2Eminute%2C30%5D%2C%5Bac%2Ehour%2C1%5D%2C%5Bac%2Ehour%2C3%5D%2C%5Bac%2Ehour%2C6%5D%2C%5Bac%2Ehour%2C12%5D%2C%5Bac%2Eday%2C1%5D%2C%5Bac%2Eday%2C2%5D%2C%5Bac%2Eweek%2C1%5D%2C%5Bac%2Emonth%2C1%5D%2C%5Bac%2Emonth%2C3%5D%2C%5Bac%2Eyear%2C1%5D%5D%2C%24l%3DIl%2Emulti%28%5B%5B%22%2E%25L%22%2Cfunction%28n%29%7Breturn%20n%2EgetMilliseconds%28%29%7D%5D%2C%5B%22%3A%25S%22%2Cfunction%28n%29%7Breturn%20n%2EgetSeconds%28%29%7D%5D%2C%5B%22%25I%3A%25M%22%2Cfunction%28n%29%7Breturn%20n%2EgetMinutes%28%29%7D%5D%2C%5B%22%25I%20%25p%22%2Cfunction%28n%29%7Breturn%20n%2EgetHours%28%29%7D%5D%2C%5B%22%25a%20%25d%22%2Cfunction%28n%29%7Breturn%20n%2EgetDay%28%29%26%261%21%3Dn%2EgetDate%28%29%7D%5D%2C%5B%22%25b%20%25d%22%2Cfunction%28n%29%7Breturn%201%21%3Dn%2EgetDate%28%29%7D%5D%2C%5B%22%25B%22%2Cfunction%28n%29%7Breturn%20n%2EgetMonth%28%29%7D%5D%2C%5B%22%25Y%22%2CNe%5D%5D%29%2CBl%3D%7Brange%3Afunction%28n%2Ct%2Ce%29%7Breturn%20ta%2Erange%28Math%2Eceil%28n%2Fe%29%2Ae%2C%2Bt%2Ce%29%2Emap%28Ko%29%7D%2Cfloor%3Ay%2Cceil%3Ay%7D%3BXl%2Eyear%3Dac%2Eyear%2Cac%2Escale%3Dfunction%28%29%7Breturn%20Go%28ta%2Escale%2Elinear%28%29%2CXl%2C%24l%29%7D%3Bvar%20Wl%3DXl%2Emap%28function%28n%29%7Breturn%5Bn%5B0%5D%2Eutc%2Cn%5B1%5D%5D%7D%29%2CJl%3DYl%2Emulti%28%5B%5B%22%2E%25L%22%2Cfunction%28n%29%7Breturn%20n%2EgetUTCMilliseconds%28%29%7D%5D%2C%5B%22%3A%25S%22%2Cfunction%28n%29%7Breturn%20n%2EgetUTCSeconds%28%29%7D%5D%2C%5B%22%25I%3A%25M%22%2Cfunction%28n%29%7Breturn%20n%2EgetUTCMinutes%28%29%7D%5D%2C%5B%22%25I%20%25p%22%2Cfunction%28n%29%7Breturn%20n%2EgetUTCHours%28%29%7D%5D%2C%5B%22%25a%20%25d%22%2Cfunction%28n%29%7Breturn%20n%2EgetUTCDay%28%29%26%261%21%3Dn%2EgetUTCDate%28%29%7D%5D%2C%5B%22%25b%20%25d%22%2Cfunction%28n%29%7Breturn%201%21%3Dn%2EgetUTCDate%28%29%7D%5D%2C%5B%22%25B%22%2Cfunction%28n%29%7Breturn%20n%2EgetUTCMonth%28%29%7D%5D%2C%5B%22%25Y%22%2CNe%5D%5D%29%3BWl%2Eyear%3Dac%2Eyear%2Eutc%2Cac%2Escale%2Eutc%3Dfunction%28%29%7Breturn%20Go%28ta%2Escale%2Elinear%28%29%2CWl%2CJl%29%7D%2Cta%2Etext%3DAt%28function%28n%29%7Breturn%20n%2EresponseText%7D%29%2Cta%2Ejson%3Dfunction%28n%2Ct%29%7Breturn%20Nt%28n%2C%22application%2Fjson%22%2CQo%2Ct%29%7D%2Cta%2Ehtml%3Dfunction%28n%2Ct%29%7Breturn%20Nt%28n%2C%22text%2Fhtml%22%2Cna%2Ct%29%7D%2Cta%2Exml%3DAt%28function%28n%29%7Breturn%20n%2EresponseXML%7D%29%2C%22function%22%3D%3Dtypeof%20define%26%26define%2Eamd%3Fdefine%28ta%29%3A%22object%22%3D%3Dtypeof%20module%26%26module%2Eexports%26%26%28module%2Eexports%3Dta%29%2Cthis%2Ed3%3Dta%7D%28%29%3B"></script>
<script src="data:application/x-javascript,%2F%2F%20d3%2Etip%0A%2F%2F%20Copyright%20%28c%29%202013%20Justin%20Palmer%0A%2F%2F%0A%2F%2F%20Tooltips%20for%20d3%2Ejs%20SVG%20visualizations%0A%0A%28function%20%28root%2C%20factory%29%20%7B%0A%20%20if%20%28typeof%20define%20%3D%3D%3D%20%27function%27%20%26%26%20define%2Eamd%29%20%7B%0A%20%20%20%20%2F%2F%20AMD%2E%20Register%20as%20an%20anonymous%20module%20with%20d3%20as%20a%20dependency%2E%0A%20%20%20%20define%28%5B%27d3%27%5D%2C%20factory%29%3B%0A%20%20%7D%20else%20if%20%28typeof%20module%20%3D%3D%3D%20%27object%27%20%26%26%20module%2Eexports%29%20%7B%0A%20%20%20%20%2F%2F%20CommonJS%0A%20%20%20%20module%2Eexports%20%3D%20function%28d3%29%20%7B%0A%20%20%20%20%20%20d3%2Etip%20%3D%20factory%28d3%29%3B%0A%20%20%20%20%20%20return%20d3%2Etip%3B%0A%20%20%20%20%7D%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20%2F%2F%20Browser%20global%2E%0A%20%20%20%20root%2Ed3%2Etip%20%3D%20factory%28root%2Ed3%29%3B%0A%20%20%7D%0A%7D%28this%2C%20function%20%28d3%29%20%7B%0A%0A%20%20%2F%2F%20Public%20%2D%20contructs%20a%20new%20tooltip%0A%20%20%2F%2F%0A%20%20%2F%2F%20Returns%20a%20tip%0A%20%20return%20function%28%29%20%7B%0A%20%20%20%20var%20direction%20%3D%20d3%5Ftip%5Fdirection%2C%0A%20%20%20%20%20%20%20%20offset%20%20%20%20%3D%20d3%5Ftip%5Foffset%2C%0A%20%20%20%20%20%20%20%20html%20%20%20%20%20%20%3D%20d3%5Ftip%5Fhtml%2C%0A%20%20%20%20%20%20%20%20node%20%20%20%20%20%20%3D%20initNode%28%29%2C%0A%20%20%20%20%20%20%20%20svg%20%20%20%20%20%20%20%3D%20null%2C%0A%20%20%20%20%20%20%20%20point%20%20%20%20%20%3D%20null%2C%0A%20%20%20%20%20%20%20%20target%20%20%20%20%3D%20null%3B%0A%0A%20%20%20%20function%20tip%28vis%29%20%7B%0A%20%20%20%20%20%20svg%20%3D%20getSVGNode%28vis%29%3B%0A%20%20%20%20%20%20point%20%3D%20svg%2EcreateSVGPoint%28%29%3B%0A%20%20%20%20%20%20document%2Ebody%2EappendChild%28node%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Public%20%2D%20show%20the%20tooltip%20on%20the%20screen%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20a%20tip%0A%20%20%20%20tip%2Eshow%20%3D%20function%28%29%20%7B%0A%20%20%20%20%20%20var%20args%20%3D%20Array%2Eprototype%2Eslice%2Ecall%28arguments%29%3B%0A%20%20%20%20%20%20if%28args%5Bargs%2Elength%20%2D%201%5D%20instanceof%20SVGElement%29%20target%20%3D%20args%2Epop%28%29%3B%0A%0A%20%20%20%20%20%20var%20content%20%3D%20html%2Eapply%28this%2C%20args%29%2C%0A%20%20%20%20%20%20%20%20%20%20poffset%20%3D%20offset%2Eapply%28this%2C%20args%29%2C%0A%20%20%20%20%20%20%20%20%20%20dir%20%20%20%20%20%3D%20direction%2Eapply%28this%2C%20args%29%2C%0A%20%20%20%20%20%20%20%20%20%20nodel%20%20%20%3D%20getNodeEl%28%29%2C%0A%20%20%20%20%20%20%20%20%20%20i%20%20%20%20%20%20%20%3D%20directions%2Elength%2C%0A%20%20%20%20%20%20%20%20%20%20coords%2C%0A%20%20%20%20%20%20%20%20%20%20scrollTop%20%20%3D%20document%2EdocumentElement%2EscrollTop%20%7C%7C%20document%2Ebody%2EscrollTop%2C%0A%20%20%20%20%20%20%20%20%20%20scrollLeft%20%3D%20document%2EdocumentElement%2EscrollLeft%20%7C%7C%20document%2Ebody%2EscrollLeft%3B%0A%0A%20%20%20%20%20%20nodel%2Ehtml%28content%29%0A%20%20%20%20%20%20%20%20%2Estyle%28%7B%20opacity%3A%201%2C%20%27pointer%2Devents%27%3A%20%27all%27%20%7D%29%3B%0A%0A%20%20%20%20%20%20while%28i%2D%2D%29%20nodel%2Eclassed%28directions%5Bi%5D%2C%20false%29%3B%0A%20%20%20%20%20%20coords%20%3D%20direction%5Fcallbacks%2Eget%28dir%29%2Eapply%28this%29%3B%0A%20%20%20%20%20%20nodel%2Eclassed%28dir%2C%20true%29%2Estyle%28%7B%0A%20%20%20%20%20%20%20%20top%3A%20%28coords%2Etop%20%2B%20%20poffset%5B0%5D%29%20%2B%20scrollTop%20%2B%20%27px%27%2C%0A%20%20%20%20%20%20%20%20left%3A%20%28coords%2Eleft%20%2B%20poffset%5B1%5D%29%20%2B%20scrollLeft%20%2B%20%27px%27%0A%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Public%20%2D%20hide%20the%20tooltip%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20a%20tip%0A%20%20%20%20tip%2Ehide%20%3D%20function%28%29%20%7B%0A%20%20%20%20%20%20var%20nodel%20%3D%20getNodeEl%28%29%3B%0A%20%20%20%20%20%20nodel%2Estyle%28%7B%20opacity%3A%200%2C%20%27pointer%2Devents%27%3A%20%27none%27%20%7D%29%3B%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Public%3A%20Proxy%20attr%20calls%20to%20the%20d3%20tip%20container%2E%20%20Sets%20or%20gets%20attribute%20value%2E%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20n%20%2D%20name%20of%20the%20attribute%0A%20%20%20%20%2F%2F%20v%20%2D%20value%20of%20the%20attribute%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20tip%20or%20attribute%20value%0A%20%20%20%20tip%2Eattr%20%3D%20function%28n%2C%20v%29%20%7B%0A%20%20%20%20%20%20if%20%28arguments%2Elength%20%3C%202%20%26%26%20typeof%20n%20%3D%3D%3D%20%27string%27%29%20%7B%0A%20%20%20%20%20%20%20%20return%20getNodeEl%28%29%2Eattr%28n%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20var%20args%20%3D%20%20Array%2Eprototype%2Eslice%2Ecall%28arguments%29%3B%0A%20%20%20%20%20%20%20%20d3%2Eselection%2Eprototype%2Eattr%2Eapply%28getNodeEl%28%29%2C%20args%29%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Public%3A%20Proxy%20style%20calls%20to%20the%20d3%20tip%20container%2E%20%20Sets%20or%20gets%20a%20style%20value%2E%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20n%20%2D%20name%20of%20the%20property%0A%20%20%20%20%2F%2F%20v%20%2D%20value%20of%20the%20property%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20tip%20or%20style%20property%20value%0A%20%20%20%20tip%2Estyle%20%3D%20function%28n%2C%20v%29%20%7B%0A%20%20%20%20%20%20if%20%28arguments%2Elength%20%3C%202%20%26%26%20typeof%20n%20%3D%3D%3D%20%27string%27%29%20%7B%0A%20%20%20%20%20%20%20%20return%20getNodeEl%28%29%2Estyle%28n%29%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20var%20args%20%3D%20%20Array%2Eprototype%2Eslice%2Ecall%28arguments%29%3B%0A%20%20%20%20%20%20%20%20d3%2Eselection%2Eprototype%2Estyle%2Eapply%28getNodeEl%28%29%2C%20args%29%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Public%3A%20Set%20or%20get%20the%20direction%20of%20the%20tooltip%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20v%20%2D%20One%20of%20n%28north%29%2C%20s%28south%29%2C%20e%28east%29%2C%20or%20w%28west%29%2C%20nw%28northwest%29%2C%0A%20%20%20%20%2F%2F%20%20%20%20%20sw%28southwest%29%2C%20ne%28northeast%29%20or%20se%28southeast%29%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20tip%20or%20direction%0A%20%20%20%20tip%2Edirection%20%3D%20function%28v%29%20%7B%0A%20%20%20%20%20%20if%20%28%21arguments%2Elength%29%20return%20direction%3B%0A%20%20%20%20%20%20direction%20%3D%20v%20%3D%3D%3D%20null%20%3F%20v%20%3A%20d3%2Efunctor%28v%29%3B%0A%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Public%3A%20Sets%20or%20gets%20the%20offset%20of%20the%20tip%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20v%20%2D%20Array%20of%20%5Bx%2C%20y%5D%20offset%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20offset%20or%0A%20%20%20%20tip%2Eoffset%20%3D%20function%28v%29%20%7B%0A%20%20%20%20%20%20if%20%28%21arguments%2Elength%29%20return%20offset%3B%0A%20%20%20%20%20%20offset%20%3D%20v%20%3D%3D%3D%20null%20%3F%20v%20%3A%20d3%2Efunctor%28v%29%3B%0A%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Public%3A%20sets%20or%20gets%20the%20html%20value%20of%20the%20tooltip%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20v%20%2D%20String%20value%20of%20the%20tip%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20html%20value%20or%20tip%0A%20%20%20%20tip%2Ehtml%20%3D%20function%28v%29%20%7B%0A%20%20%20%20%20%20if%20%28%21arguments%2Elength%29%20return%20html%3B%0A%20%20%20%20%20%20html%20%3D%20v%20%3D%3D%3D%20null%20%3F%20v%20%3A%20d3%2Efunctor%28v%29%3B%0A%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20%2F%2F%20Public%3A%20destroys%20the%20tooltip%20and%20removes%20it%20from%20the%20DOM%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20a%20tip%0A%20%20%20%20tip%2Edestroy%20%3D%20function%28%29%20%7B%0A%20%20%20%20%20%20if%28node%29%20%7B%0A%20%20%20%20%20%20%20%20getNodeEl%28%29%2Eremove%28%29%3B%0A%20%20%20%20%20%20%20%20node%20%3D%20null%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20return%20tip%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20function%20d3%5Ftip%5Fdirection%28%29%20%7B%20return%20%27n%27%3B%20%7D%0A%20%20%20%20function%20d3%5Ftip%5Foffset%28%29%20%7B%20return%20%5B0%2C%200%5D%3B%20%7D%0A%20%20%20%20function%20d3%5Ftip%5Fhtml%28%29%20%7B%20return%20%27%20%27%3B%20%7D%0A%0A%20%20%20%20var%20direction%5Fcallbacks%20%3D%20d3%2Emap%28%7B%0A%20%20%20%20%20%20n%3A%20%20direction%5Fn%2C%0A%20%20%20%20%20%20s%3A%20%20direction%5Fs%2C%0A%20%20%20%20%20%20e%3A%20%20direction%5Fe%2C%0A%20%20%20%20%20%20w%3A%20%20direction%5Fw%2C%0A%20%20%20%20%20%20nw%3A%20direction%5Fnw%2C%0A%20%20%20%20%20%20ne%3A%20direction%5Fne%2C%0A%20%20%20%20%20%20sw%3A%20direction%5Fsw%2C%0A%20%20%20%20%20%20se%3A%20direction%5Fse%2C%0A%20%20%20%20%20%20mt%3A%20direction%5Fmt%0A%20%20%20%20%7D%29%2C%0A%0A%20%20%20%20directions%20%3D%20direction%5Fcallbacks%2Ekeys%28%29%3B%0A%0A%20%20%20%20%2F%2F%20mt%20%2D%20mousetip%0A%20%20%20%20function%20direction%5Fmt%28%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20top%3A%20d3%2Eevent%2EpageY%20%2D%20node%2EoffsetHeight%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20left%3A%20d3%2Eevent%2EpageX%20%2D%20node%2EoffsetWidth%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fn%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2En%2Ey%20%2D%20node%2EoffsetHeight%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2En%2Ex%20%2D%20node%2EoffsetWidth%20%2F%202%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fs%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2Es%2Ey%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2Es%2Ex%20%2D%20node%2EoffsetWidth%20%2F%202%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fe%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2Ee%2Ey%20%2D%20node%2EoffsetHeight%20%2F%202%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2Ee%2Ex%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fw%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2Ew%2Ey%20%2D%20node%2EoffsetHeight%20%2F%202%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2Ew%2Ex%20%2D%20node%2EoffsetWidth%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fnw%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2Enw%2Ey%20%2D%20node%2EoffsetHeight%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2Enw%2Ex%20%2D%20node%2EoffsetWidth%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fne%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2Ene%2Ey%20%2D%20node%2EoffsetHeight%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2Ene%2Ex%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fsw%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2Esw%2Ey%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2Esw%2Ex%20%2D%20node%2EoffsetWidth%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20direction%5Fse%28%29%20%7B%0A%20%20%20%20%20%20var%20bbox%20%3D%20getScreenBBox%28%29%3B%0A%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20top%3A%20%20bbox%2Ese%2Ey%2C%0A%20%20%20%20%20%20%20%20left%3A%20bbox%2Ee%2Ex%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20initNode%28%29%20%7B%0A%20%20%20%20%20%20var%20node%20%3D%20d3%2Eselect%28document%2EcreateElement%28%27div%27%29%29%3B%0A%20%20%20%20%20%20node%2Estyle%28%7B%0A%20%20%20%20%20%20%20%20position%3A%20%27absolute%27%2C%0A%20%20%20%20%20%20%20%20top%3A%200%2C%0A%20%20%20%20%20%20%20%20opacity%3A%200%2C%0A%20%20%20%20%20%20%20%20%27pointer%2Devents%27%3A%20%27none%27%2C%0A%20%20%20%20%20%20%20%20%27box%2Dsizing%27%3A%20%27border%2Dbox%27%0A%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20return%20node%2Enode%28%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20getSVGNode%28el%29%20%7B%0A%20%20%20%20%20%20el%20%3D%20el%2Enode%28%29%3B%0A%20%20%20%20%20%20if%28el%2EtagName%2EtoLowerCase%28%29%20%3D%3D%3D%20%27svg%27%29%0A%20%20%20%20%20%20%20%20return%20el%3B%0A%0A%20%20%20%20%20%20return%20el%2EownerSVGElement%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20getNodeEl%28%29%20%7B%0A%20%20%20%20%20%20if%28node%20%3D%3D%3D%20null%29%20%7B%0A%20%20%20%20%20%20%20%20node%20%3D%20initNode%28%29%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20re%2Dadd%20node%20to%20DOM%0A%20%20%20%20%20%20%20%20document%2Ebody%2EappendChild%28node%29%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20return%20d3%2Eselect%28node%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20Private%20%2D%20gets%20the%20screen%20coordinates%20of%20a%20shape%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Given%20a%20shape%20on%20the%20screen%2C%20will%20return%20an%20SVGPoint%20for%20the%20directions%0A%20%20%20%20%2F%2F%20n%28north%29%2C%20s%28south%29%2C%20e%28east%29%2C%20w%28west%29%2C%20ne%28northeast%29%2C%20se%28southeast%29%2C%20nw%28northwest%29%2C%0A%20%20%20%20%2F%2F%20sw%28southwest%29%2E%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20%20%20%20%2B%2D%2B%2D%2B%0A%20%20%20%20%2F%2F%20%20%20%20%7C%20%20%20%7C%0A%20%20%20%20%2F%2F%20%20%20%20%2B%20%20%20%2B%0A%20%20%20%20%2F%2F%20%20%20%20%7C%20%20%20%7C%0A%20%20%20%20%2F%2F%20%20%20%20%2B%2D%2B%2D%2B%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20Returns%20an%20Object%20%7Bn%2C%20s%2C%20e%2C%20w%2C%20nw%2C%20sw%2C%20ne%2C%20se%7D%0A%20%20%20%20function%20getScreenBBox%28%29%20%7B%0A%20%20%20%20%20%20var%20targetel%20%20%20%3D%20target%20%7C%7C%20d3%2Eevent%2Etarget%3B%0A%0A%20%20%20%20%20%20while%20%28%27undefined%27%20%3D%3D%3D%20typeof%20targetel%2EgetScreenCTM%20%26%26%20%27undefined%27%20%3D%3D%3D%20targetel%2EparentNode%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20targetel%20%3D%20targetel%2EparentNode%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20var%20bbox%20%20%20%20%20%20%20%3D%20%7B%7D%2C%0A%20%20%20%20%20%20%20%20%20%20matrix%20%20%20%20%20%3D%20targetel%2EgetScreenCTM%28%29%2C%0A%20%20%20%20%20%20%20%20%20%20tbbox%20%20%20%20%20%20%3D%20targetel%2EgetBBox%28%29%2C%0A%20%20%20%20%20%20%20%20%20%20width%20%20%20%20%20%20%3D%20tbbox%2Ewidth%2C%0A%20%20%20%20%20%20%20%20%20%20height%20%20%20%20%20%3D%20tbbox%2Eheight%2C%0A%20%20%20%20%20%20%20%20%20%20x%20%20%20%20%20%20%20%20%20%20%3D%20tbbox%2Ex%2C%0A%20%20%20%20%20%20%20%20%20%20y%20%20%20%20%20%20%20%20%20%20%3D%20tbbox%2Ey%3B%0A%0A%20%20%20%20%20%20point%2Ex%20%3D%20x%3B%0A%20%20%20%20%20%20point%2Ey%20%3D%20y%3B%0A%20%20%20%20%20%20bbox%2Enw%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%20%20%20%20%20%20point%2Ex%20%2B%3D%20width%3B%0A%20%20%20%20%20%20bbox%2Ene%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%20%20%20%20%20%20point%2Ey%20%2B%3D%20height%3B%0A%20%20%20%20%20%20bbox%2Ese%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%20%20%20%20%20%20point%2Ex%20%2D%3D%20width%3B%0A%20%20%20%20%20%20bbox%2Esw%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%20%20%20%20%20%20point%2Ey%20%2D%3D%20height%20%2F%202%3B%0A%20%20%20%20%20%20bbox%2Ew%20%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%20%20%20%20%20%20point%2Ex%20%2B%3D%20width%3B%0A%20%20%20%20%20%20bbox%2Ee%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%20%20%20%20%20%20point%2Ex%20%2D%3D%20width%20%2F%202%3B%0A%20%20%20%20%20%20point%2Ey%20%2D%3D%20height%20%2F%202%3B%0A%20%20%20%20%20%20bbox%2En%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%20%20%20%20%20%20point%2Ey%20%2B%3D%20height%3B%0A%20%20%20%20%20%20bbox%2Es%20%3D%20point%2EmatrixTransform%28matrix%29%3B%0A%0A%20%20%20%20%20%20return%20bbox%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20tip%3B%0A%20%20%7D%3B%0A%0A%7D%29%29%3B%0A"></script>
<link href="data:text/css,%2Ed3%2Dtip%20%7B%0A%20%20line%2Dheight%3A%201%3B%0A%20%20%2F%2Afont%2Dweight%3A%20bold%3B%2A%2F%0A%20%20padding%3A%2012px%3B%0A%20%20background%3A%20rgba%280%2C%200%2C%200%2C%200%2E7%29%3B%0A%20%20color%3A%20%23fff%3B%0A%20%20border%2Dradius%3A%202px%3B%0A%20%20pointer%2Devents%3A%20none%3B%0A%7D%0A" rel="stylesheet" />
<script src="data:application/x-javascript,HTMLWidgets%2Ewidget%28%7B%0A%0A%20%20name%3A%20%27chorddiag%27%2C%0A%20%20type%3A%20%27output%27%2C%0A%0A%20%20initialize%3A%20function%28el%2C%20width%2C%20height%29%20%7B%0A%0A%20%20%20%20d3%2Eselect%28el%29%2Eappend%28%22svg%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22width%22%2C%20width%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22height%22%2C%20height%29%3B%0A%0A%20%20%20%20return%20d3%2Elayout%2Echord%28%29%3B%0A%0A%20%20%7D%2C%0A%0A%20%20resize%3A%20function%28el%2C%20width%2C%20height%2C%20chord%29%20%7B%0A%0A%20%20%20%20d3%2Eselect%28el%29%2Eselect%28%22svg%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22width%22%2C%20width%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22height%22%2C%20height%29%3B%0A%0A%20%20%20%20this%2ErenderValue%28el%2C%20chord%2Eparams%2C%20chord%29%3B%0A%0A%20%20%7D%2C%0A%0A%20%20renderValue%3A%20function%28el%2C%20params%2C%20chord%29%20%7B%0A%0A%20%20%20%20%2F%2F%20save%20params%20for%20reference%20from%20resize%20method%0A%20%20%20%20chord%2Eparams%20%3D%20params%3B%0A%0A%20%20%20%20var%20matrix%20%3D%20params%2Ematrix%2C%0A%20%20%20%20%20%20%20%20options%20%3D%20params%2Eoptions%3B%0A%0A%20%20%20%20%2F%2F%20get%20width%20and%20height%2C%20calculate%20min%20for%20use%20in%20diagram%20size%0A%20%20%20%20var%20width%20%3D%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20height%20%3D%20el%2EoffsetHeight%2C%0A%20%20%20%20%20%20%20%20d%20%3D%20Math%2Emin%28width%2C%20height%29%3B%0A%0A%20%20%20%20var%20type%20%3D%20options%2Etype%2C%0A%20%20%20%20%20%20%20%20margin%20%3D%20options%2Emargin%2C%0A%20%20%20%20%20%20%20%20showGroupnames%20%3D%20options%2EshowGroupnames%2C%0A%20%20%20%20%20%20%20%20groupNames%20%3D%20options%2EgroupNames%2C%0A%20%20%20%20%20%20%20%20groupColors%20%3D%20options%2EgroupColors%2C%0A%20%20%20%20%20%20%20%20groupThickness%20%3D%20options%2EgroupThickness%2C%0A%20%20%20%20%20%20%20%20groupPadding%20%3D%20options%2EgroupPadding%2C%0A%20%20%20%20%20%20%20%20groupnamePadding%20%3D%20options%2EgroupnamePadding%2C%0A%20%20%20%20%20%20%20%20groupnameFontsize%20%3D%20options%2EgroupnameFontsize%2C%0A%20%20%20%20%20%20%20%20groupedgeColor%20%3D%20options%2EgroupedgeColor%2C%0A%20%20%20%20%20%20%20%20chordedgeColor%20%3D%20options%2EchordedgeColor%2C%0A%20%20%20%20%20%20%20%20categoryNames%20%3D%20options%2EcategoryNames%2C%0A%20%20%20%20%20%20%20%20categorynamePadding%20%3D%20options%2EcategorynamePadding%2C%0A%20%20%20%20%20%20%20%20categorynameFontsize%20%3D%20options%2EcategorynameFontsize%2C%0A%20%20%20%20%20%20%20%20showTicks%20%3D%20options%2EshowTicks%2C%0A%20%20%20%20%20%20%20%20tickInterval%20%3D%20options%2EtickInterval%2C%0A%20%20%20%20%20%20%20%20ticklabelFontsize%20%3D%20options%2EticklabelFontsize%2C%0A%20%20%20%20%20%20%20%20fadeLevel%20%3D%20options%2EfadeLevel%2C%0A%20%20%20%20%20%20%20%20showTooltips%20%3D%20options%2EshowTooltips%2C%0A%20%20%20%20%20%20%20%20tooltipNames%20%3D%20options%2EtooltipNames%2C%0A%20%20%20%20%20%20%20%20tooltipFontsize%20%3D%20options%2EtooltipFontsize%2C%0A%20%20%20%20%20%20%20%20tooltipUnit%20%3D%20options%2EtooltipUnit%2C%0A%20%20%20%20%20%20%20%20tooltipGroupConnector%20%3D%20options%2EtooltipGroupConnector%2C%0A%20%20%20%20%20%20%20%20precision%20%3D%20options%2Eprecision%3B%0A%0A%20%20%20%20d3%2Eselect%28el%29%2EselectAll%28%22div%2Ed3%2Dtip%22%29%2Eremove%28%29%3B%0A%0A%20%20%20%20if%20%28showTooltips%29%20%7B%0A%20%20%20%20%20%20%20%20var%20chordTip%20%3D%20d3%2Etip%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%27class%27%2C%20%27d3%2Dtip%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20tooltipFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edirection%28%27mt%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eoffset%28%5B0%2C%200%5D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ehtml%28function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20indexes%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20i%20%3D%20d%2Esource%2Eindex%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20j%20%3D%20d%2Etarget%2Eindex%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20values%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20vij%20%3D%20sigFigs%28matrix%5Bi%5D%5Bj%5D%2C%20precision%29%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vji%20%3D%20sigFigs%28matrix%5Bj%5D%5Bi%5D%2C%20precision%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20dir1%20%3D%20tooltipNames%5Bi%5D%20%2B%20tooltipGroupConnector%20%2B%20tooltipNames%5Bj%5D%20%2B%20%22%3A%20%22%20%2B%20vij%20%2B%20tooltipUnit%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20dir2%20%3D%20tooltipNames%5Bj%5D%20%2B%20tooltipGroupConnector%20%2B%20tooltipNames%5Bi%5D%20%2B%20%22%3A%20%22%20%2B%20vji%20%2B%20tooltipUnit%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28type%20%3D%3D%20%22directional%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28i%20%3D%3D%20j%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20dir1%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20dir1%20%2B%20%22%3C%2Fbr%3E%22%20%2B%20dir2%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20if%20%28type%20%3D%3D%20%22bipartite%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20dir2%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20var%20groupTip%20%3D%20d3%2Etip%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%27class%27%2C%20%27d3%2Dtip%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20tooltipFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edirection%28%27mt%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eoffset%28%5B0%2C%200%5D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ehtml%28function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20value%20%3D%20sigFigs%28d%2Evalue%2C%20precision%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20tooltipNames%5Bd%2Eindex%5D%20%2B%20%22%20%28total%29%3A%20%22%20%2B%20value%20%2B%20tooltipUnit%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20var%20svgContainer%20%3D%20d3%2Eselect%28el%29%2Eselect%28%22svg%22%29%3B%0A%20%20%20%20svgContainer%2EselectAll%28%22%2A%22%29%2Eremove%28%29%3B%0A%0A%20%20%20%20%2F%2F%20apply%20chord%20settings%20and%20data%0A%20%20%20%20chord%2Epadding%28groupPadding%29%0A%20%20%20%20%20%20%20%20%20%2EsortSubgroups%28d3%2Edescending%29%0A%20%20%20%20%20%20%20%20%20%2Ematrix%28matrix%29%3B%0A%0A%20%20%20%20%2F%2F%20calculate%20outer%20and%20inner%20radius%20for%20chord%20diagram%0A%20%20%20%20var%20outerRadius%20%3D%20%28d%20%2D%202%20%2A%20margin%29%20%2F%202%2C%0A%20%20%20%20%20%20%20%20innerRadius%20%3D%20outerRadius%20%2A%20%281%20%2D%20groupThickness%29%3B%0A%0A%20%20%20%20%2F%2F%20create%20ordinal%20color%20fill%20scale%20from%20groupColors%0A%20%20%20%20var%20fillScale%20%3D%20d3%2Escale%2Eordinal%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edomain%28d3%2Erange%28matrix%2Elength%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Erange%28groupColors%29%3B%0A%0A%20%20%20%20%2F%2F%20calculate%20horizontal%20and%20vertical%20translation%20values%0A%20%20%20%20var%20xTranslate%20%3D%20Math%2Emax%28width%20%2F%202%2C%20outerRadius%20%2B%20margin%29%2C%0A%20%20%20%20%20%20%20%20yTranslate%20%3D%20Math%2Emax%28height%20%2F%202%2C%20outerRadius%20%2B%20margin%29%3B%0A%0A%20%20%20%20var%20svg%20%3D%20svgContainer%2Eappend%28%22g%22%29%3B%0A%20%20%20%20svg%2Eattr%28%22transform%22%2C%20%22translate%28%22%20%2B%20xTranslate%20%2B%20%22%2C%22%20%2B%20yTranslate%20%2B%20%22%29%22%29%3B%0A%0A%20%20%20%20if%20%28showTooltips%29%20%7B%0A%20%20%20%20%20%20%20svg%2Ecall%28chordTip%29%0A%20%20%20%20%20%20%20%20%20%20%2Ecall%28groupTip%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20create%20groups%0A%20%20%20%20var%20groups%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22groups%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Egroups%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22path%22%29%2Eattr%28%22id%22%2C%20function%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22group%2D%22%20%2B%20groupNames%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%2F%2F%20style%20groups%20and%20define%20mouse%20events%0A%20%20%20%20groups%2Estyle%28%22fill%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Eindex%29%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Eindex%29%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22d%22%2C%20d3%2Esvg%2Earc%28%29%2EinnerRadius%28innerRadius%29%2EouterRadius%28outerRadius%29%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseover%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20groupTip%2Eshow%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%20fadeLevel%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseout%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20groupTip%2Ehide%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%201%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20if%20%28groupedgeColor%29%20%7B%0A%20%20%20%20%20%20%20%20groups%2Estyle%28%22stroke%22%2C%20groupedgeColor%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20groups%2Estyle%28%22stroke%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Eindex%29%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20%28showTicks%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20create%20ticks%20for%20groups%0A%20%20%20%20%20%20%20%20var%20ticks%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22ticks%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Egroups%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%20%2F%2F%2Eattr%28%22class%22%2C%20%22ticks%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22ticks%2D%22%20%2B%20groupNames%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28groupTicks%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22tick%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22rotate%28%22%20%2B%20%28d%2Eangle%20%2A%20180%20%2F%20Math%2EPI%20%2D%2090%29%20%2B%20%22%29%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22translate%28%22%20%2B%20outerRadius%20%2B%20%22%2C%200%29%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20add%20tick%20marks%0A%20%20%20%20%20%20%20%20ticks%2Eappend%28%22line%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x1%22%2C%201%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22y1%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x2%22%2C%205%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22y2%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%22%2C%20%22%23000%22%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20add%20tick%20labels%0A%20%20%20%20%20%20%20%20ticks%2Eappend%28%22text%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22dy%22%2C%20%22%2E35em%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20ticklabelFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%20return%20d%2Eangle%20%3E%20Math%2EPI%20%3F%20%22rotate%28180%29translate%28%2D8%29%22%20%3A%20%22translate%288%29%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22text%2Danchor%22%2C%20function%28d%29%20%7B%20return%20d%2Eangle%20%3E%20Math%2EPI%20%3F%20%22end%22%20%3A%20%22start%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Etext%28function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20create%20chords%0A%20%20%20%20var%20chords%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22chords%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Echords%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22path%22%29%2Eattr%28%22id%22%2C%20function%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22chord%2D%22%20%2B%20groupNames%5Bd%2Esource%2Eindex%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%2D%22%20%2B%20groupNames%5Bd%2Etarget%2Eindex%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22d%22%2C%20d3%2Esvg%2Echord%28%29%2Eradius%28innerRadius%29%29%3B%0A%0A%20%20%20%20%2F%2F%20style%20chords%20and%20define%20mouse%20events%0A%20%20%20%20chords%2Estyle%28%22fill%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Etarget%2Eindex%29%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%22%2C%20chordedgeColor%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22fill%2Dopacity%22%2C%200%2E67%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%2Dwidth%22%2C%20%220%2E5px%22%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22opacity%22%2C%201%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseover%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20chordTip%2Eshow%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20chordFade%28d%2C%20fadeLevel%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseout%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20chordTip%2Ehide%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20chordFade%28d%2C%201%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%2F%2F%20create%20group%20labels%0A%20%20%20%20if%20%28showGroupnames%29%20%7B%0A%20%20%20%20%20%20%20%20var%20names%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22names%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Egroups%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22name%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseover%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%20fadeLevel%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseout%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%201%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28groupLabels%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22label%2D%22%20%2B%20d%2Elabel%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22rotate%28%22%20%2B%20%28d%2Eangle%20%2A%20180%20%2F%20Math%2EPI%20%2D%2090%29%20%2B%20%22%29%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22translate%28%22%20%2B%20%28outerRadius%20%2B%20d%2Epadding%29%20%2B%20%22%2C%200%29%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%20%20%20%20names%2Eappend%28%22text%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22dy%22%2C%20%22%2E35em%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20groupnameFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20d%2Ehandside%20%3D%3D%20%22left%22%20%3F%20%22rotate%28180%29%22%20%3A%20null%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22text%2Danchor%22%2C%20function%28d%29%20%7B%20return%20d%2Ehandside%20%3D%3D%20%22left%22%20%3F%20%22end%22%20%3A%20%22start%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Etext%28function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20%28categoryNames%29%20%7B%0A%20%20%20%20%20%20%20%20var%20categories%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22categories%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28categoryNames%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22category%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28categoryLabels%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22fill%22%2C%20%22black%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22label%2D%22%20%2B%20d%2Elabel%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22rotate%28%22%20%2B%20%28d%2Eangle%20%2A%20180%20%2F%20Math%2EPI%29%20%2B%20%22%29%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22translate%28%22%20%2B%20%28outerRadius%20%2B%20categorynamePadding%29%20%2B%20%22%2C%200%29%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20categories%2Eappend%28%22text%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22dy%22%2C%20%22%2E35em%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20categorynameFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dweight%22%2C%20%22bold%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%2C%20i%29%20%7B%20return%20i%20%3F%20%22rotate%28270%29%22%20%3A%20%22rotate%2890%29%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22text%2Danchor%22%2C%20%22middle%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Etext%28function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20categoryLabels%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%5B%7B%0A%20%20%20%20%20%20%20%20%20%20angle%3A%20i%20%2A%20Math%2EPI%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20d%0A%20%20%20%20%20%20%20%20%7D%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20returns%20an%20array%20of%20tick%20angles%20and%20labels%2C%20given%20a%20group%0A%20%20%20%20function%20groupTicks%28d%29%20%7B%0A%20%20%20%20%20%20var%20k%20%3D%20%28d%2EendAngle%20%2D%20d%2EstartAngle%29%20%2F%20d%2Evalue%3B%0A%20%20%20%20%20%20return%20d3%2Erange%280%2C%20d%2Evalue%2C%20tickInterval%29%2Emap%28function%28v%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20%20%20angle%3A%20v%20%2A%20k%20%2B%20d%2EstartAngle%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20i%20%25%205%20%3F%20null%20%3A%20v%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20groupLabels%28d%29%20%7B%0A%20%20%20%20%20%20var%20a%20%3D%20%28d%2EstartAngle%20%2B%20d%2EendAngle%29%20%2F%202%3B%0A%20%20%20%20%20%20return%20%5B%7B%0A%20%20%20%20%20%20%20%20%20%20angle%3A%20a%2C%0A%20%20%20%20%20%20%20%20%20%20handside%3A%20%28a%20%3C%20Math%2EPI%29%20%3F%20%22right%22%20%3A%20%22left%22%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20groupNames%5Bd%2Eindex%5D%2C%0A%20%20%20%20%20%20%20%20%20%20padding%3A%20groupnamePadding%5Bd%2Eindex%5D%0A%20%20%20%20%20%20%20%20%7D%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20returns%20an%20event%20handler%20for%20fading%20all%20chords%20not%20belonging%20to%20a%0A%20%20%20%20%2F%2F%20specific%20group%0A%20%20%20%20function%20groupFade%28g%2C%20opacity%29%20%7B%0A%20%20%20%20%20%20%20%20svg%2EselectAll%28%22%2Echords%20path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Efilter%28function%28d%29%20%7B%20return%20d%2Esource%2Eindex%20%21%3D%20g%2Eindex%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%26%26%20d%2Etarget%2Eindex%20%21%3D%20g%2Eindex%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Etransition%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22opacity%22%2C%20opacity%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20returns%20an%20event%20handler%20for%20fading%20all%20chords%20except%20for%20the%20one%0A%20%20%20%20%2F%2F%20given%0A%20%20%20%20function%20chordFade%28g%2C%20opacity%29%20%7B%0A%20%20%20%20%20%20%20%20svg%2EselectAll%28%22%2Echords%20path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Efilter%28function%28d%29%20%7B%20return%20d%2Esource%2Eindex%20%21%3D%20g%2Esource%2Eindex%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%7C%20d%2Etarget%2Eindex%20%21%3D%20g%2Etarget%2Eindex%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Etransition%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22opacity%22%2C%20opacity%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20round%20to%20significant%20figures%20%2F%20digits%0A%20%20%20%20function%20sigFigs%28n%2C%20sig%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28n%20%3D%3D%200%29%20%7B%20return%20n%7D%0A%20%20%20%20%20%20%20%20if%20%28sig%20%3D%3D%20%22null%22%29%20%7B%20sig%20%3D%207%3B%20%7D%0A%20%20%20%20%20%20%20%20var%20mult%20%3D%20Math%2Epow%2810%2C%20sig%20%2D%20Math%2Efloor%28Math%2Elog%28n%29%20%2F%20Math%2ELN10%29%20%2D%201%29%3B%0A%20%20%20%20%20%20%20%20return%20Math%2Eround%28n%20%2A%20mult%29%20%2F%20mult%3B%0A%20%20%20%20%7D%0A%0A%20%20%7D%20%20%2F%2F%20end%20renderValue%20function%0A%0A%7D%29%3B%0A%0A"></script>
<script src="data:application/x-javascript,HTMLWidgets%2Ewidget%28%7B%0A%0A%20%20name%3A%20%27chorddiag%27%2C%0A%20%20type%3A%20%27output%27%2C%0A%0A%20%20initialize%3A%20function%28el%2C%20width%2C%20height%29%20%7B%0A%0A%20%20%20%20d3%2Eselect%28el%29%2Eappend%28%22svg%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22width%22%2C%20width%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22height%22%2C%20height%29%3B%0A%0A%20%20%20%20return%20d3%2Elayout%2Echord%28%29%3B%0A%0A%20%20%7D%2C%0A%0A%20%20resize%3A%20function%28el%2C%20width%2C%20height%2C%20chord%29%20%7B%0A%0A%20%20%20%20d3%2Eselect%28el%29%2Eselect%28%22svg%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22width%22%2C%20width%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22height%22%2C%20height%29%3B%0A%0A%20%20%20%20this%2ErenderValue%28el%2C%20chord%2Eparams%2C%20chord%29%3B%0A%0A%20%20%7D%2C%0A%0A%20%20renderValue%3A%20function%28el%2C%20params%2C%20chord%29%20%7B%0A%0A%20%20%20%20%2F%2F%20save%20params%20for%20reference%20from%20resize%20method%0A%20%20%20%20chord%2Eparams%20%3D%20params%3B%0A%0A%20%20%20%20var%20matrix%20%3D%20params%2Ematrix%2C%0A%20%20%20%20%20%20%20%20options%20%3D%20params%2Eoptions%3B%0A%0A%20%20%20%20%2F%2F%20get%20width%20and%20height%2C%20calculate%20min%20for%20use%20in%20diagram%20size%0A%20%20%20%20var%20width%20%3D%20el%2EoffsetWidth%2C%0A%20%20%20%20%20%20%20%20height%20%3D%20el%2EoffsetHeight%2C%0A%20%20%20%20%20%20%20%20d%20%3D%20Math%2Emin%28width%2C%20height%29%3B%0A%0A%20%20%20%20var%20type%20%3D%20options%2Etype%2C%0A%20%20%20%20%20%20%20%20margin%20%3D%20options%2Emargin%2C%0A%20%20%20%20%20%20%20%20showGroupnames%20%3D%20options%2EshowGroupnames%2C%0A%20%20%20%20%20%20%20%20groupNames%20%3D%20options%2EgroupNames%2C%0A%20%20%20%20%20%20%20%20groupColors%20%3D%20options%2EgroupColors%2C%0A%20%20%20%20%20%20%20%20groupThickness%20%3D%20options%2EgroupThickness%2C%0A%20%20%20%20%20%20%20%20groupPadding%20%3D%20options%2EgroupPadding%2C%0A%20%20%20%20%20%20%20%20groupnamePadding%20%3D%20options%2EgroupnamePadding%2C%0A%20%20%20%20%20%20%20%20groupnameFontsize%20%3D%20options%2EgroupnameFontsize%2C%0A%20%20%20%20%20%20%20%20groupedgeColor%20%3D%20options%2EgroupedgeColor%2C%0A%20%20%20%20%20%20%20%20chordedgeColor%20%3D%20options%2EchordedgeColor%2C%0A%20%20%20%20%20%20%20%20categoryNames%20%3D%20options%2EcategoryNames%2C%0A%20%20%20%20%20%20%20%20categorynamePadding%20%3D%20options%2EcategorynamePadding%2C%0A%20%20%20%20%20%20%20%20categorynameFontsize%20%3D%20options%2EcategorynameFontsize%2C%0A%20%20%20%20%20%20%20%20showTicks%20%3D%20options%2EshowTicks%2C%0A%20%20%20%20%20%20%20%20tickInterval%20%3D%20options%2EtickInterval%2C%0A%20%20%20%20%20%20%20%20ticklabelFontsize%20%3D%20options%2EticklabelFontsize%2C%0A%20%20%20%20%20%20%20%20fadeLevel%20%3D%20options%2EfadeLevel%2C%0A%20%20%20%20%20%20%20%20showTooltips%20%3D%20options%2EshowTooltips%2C%0A%20%20%20%20%20%20%20%20tooltipNames%20%3D%20options%2EtooltipNames%2C%0A%20%20%20%20%20%20%20%20tooltipFontsize%20%3D%20options%2EtooltipFontsize%2C%0A%20%20%20%20%20%20%20%20tooltipUnit%20%3D%20options%2EtooltipUnit%2C%0A%20%20%20%20%20%20%20%20tooltipGroupConnector%20%3D%20options%2EtooltipGroupConnector%2C%0A%20%20%20%20%20%20%20%20precision%20%3D%20options%2Eprecision%3B%0A%0A%20%20%20%20d3%2Eselect%28el%29%2EselectAll%28%22div%2Ed3%2Dtip%22%29%2Eremove%28%29%3B%0A%0A%20%20%20%20if%20%28showTooltips%29%20%7B%0A%20%20%20%20%20%20%20%20var%20chordTip%20%3D%20d3%2Etip%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%27class%27%2C%20%27d3%2Dtip%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20tooltipFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edirection%28%27mt%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eoffset%28%5B0%2C%200%5D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ehtml%28function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20indexes%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20i%20%3D%20d%2Esource%2Eindex%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20j%20%3D%20d%2Etarget%2Eindex%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20values%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20vij%20%3D%20sigFigs%28matrix%5Bi%5D%5Bj%5D%2C%20precision%29%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vji%20%3D%20sigFigs%28matrix%5Bj%5D%5Bi%5D%2C%20precision%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20dir1%20%3D%20tooltipNames%5Bi%5D%20%2B%20tooltipGroupConnector%20%2B%20tooltipNames%5Bj%5D%20%2B%20%22%3A%20%22%20%2B%20vij%20%2B%20tooltipUnit%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20dir2%20%3D%20tooltipNames%5Bj%5D%20%2B%20tooltipGroupConnector%20%2B%20tooltipNames%5Bi%5D%20%2B%20%22%3A%20%22%20%2B%20vji%20%2B%20tooltipUnit%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28type%20%3D%3D%20%22directional%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28i%20%3D%3D%20j%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20dir1%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20dir1%20%2B%20%22%3C%2Fbr%3E%22%20%2B%20dir2%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20if%20%28type%20%3D%3D%20%22bipartite%22%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20dir2%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20var%20groupTip%20%3D%20d3%2Etip%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%27class%27%2C%20%27d3%2Dtip%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20tooltipFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edirection%28%27mt%27%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eoffset%28%5B0%2C%200%5D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Ehtml%28function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20value%20%3D%20sigFigs%28d%2Evalue%2C%20precision%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20tooltipNames%5Bd%2Eindex%5D%20%2B%20%22%20%28total%29%3A%20%22%20%2B%20value%20%2B%20tooltipUnit%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20var%20svgContainer%20%3D%20d3%2Eselect%28el%29%2Eselect%28%22svg%22%29%3B%0A%20%20%20%20svgContainer%2EselectAll%28%22%2A%22%29%2Eremove%28%29%3B%0A%0A%20%20%20%20%2F%2F%20apply%20chord%20settings%20and%20data%0A%20%20%20%20chord%2Epadding%28groupPadding%29%0A%20%20%20%20%20%20%20%20%20%2EsortSubgroups%28d3%2Edescending%29%0A%20%20%20%20%20%20%20%20%20%2Ematrix%28matrix%29%3B%0A%0A%20%20%20%20%2F%2F%20calculate%20outer%20and%20inner%20radius%20for%20chord%20diagram%0A%20%20%20%20var%20outerRadius%20%3D%20%28d%20%2D%202%20%2A%20margin%29%20%2F%202%2C%0A%20%20%20%20%20%20%20%20innerRadius%20%3D%20outerRadius%20%2A%20%281%20%2D%20groupThickness%29%3B%0A%0A%20%20%20%20%2F%2F%20create%20ordinal%20color%20fill%20scale%20from%20groupColors%0A%20%20%20%20var%20fillScale%20%3D%20d3%2Escale%2Eordinal%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edomain%28d3%2Erange%28matrix%2Elength%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Erange%28groupColors%29%3B%0A%0A%20%20%20%20%2F%2F%20calculate%20horizontal%20and%20vertical%20translation%20values%0A%20%20%20%20var%20xTranslate%20%3D%20Math%2Emax%28width%20%2F%202%2C%20outerRadius%20%2B%20margin%29%2C%0A%20%20%20%20%20%20%20%20yTranslate%20%3D%20Math%2Emax%28height%20%2F%202%2C%20outerRadius%20%2B%20margin%29%3B%0A%0A%20%20%20%20var%20svg%20%3D%20svgContainer%2Eappend%28%22g%22%29%3B%0A%20%20%20%20svg%2Eattr%28%22transform%22%2C%20%22translate%28%22%20%2B%20xTranslate%20%2B%20%22%2C%22%20%2B%20yTranslate%20%2B%20%22%29%22%29%3B%0A%0A%20%20%20%20if%20%28showTooltips%29%20%7B%0A%20%20%20%20%20%20%20svg%2Ecall%28chordTip%29%0A%20%20%20%20%20%20%20%20%20%20%2Ecall%28groupTip%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20create%20groups%0A%20%20%20%20var%20groups%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22groups%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Egroups%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22path%22%29%2Eattr%28%22id%22%2C%20function%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22group%2D%22%20%2B%20groupNames%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%2F%2F%20style%20groups%20and%20define%20mouse%20events%0A%20%20%20%20groups%2Estyle%28%22fill%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Eindex%29%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Eindex%29%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22d%22%2C%20d3%2Esvg%2Earc%28%29%2EinnerRadius%28innerRadius%29%2EouterRadius%28outerRadius%29%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseover%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20groupTip%2Eshow%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%20fadeLevel%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseout%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20groupTip%2Ehide%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%201%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20if%20%28groupedgeColor%29%20%7B%0A%20%20%20%20%20%20%20%20groups%2Estyle%28%22stroke%22%2C%20groupedgeColor%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20groups%2Estyle%28%22stroke%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Eindex%29%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20%28showTicks%29%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20create%20ticks%20for%20groups%0A%20%20%20%20%20%20%20%20var%20ticks%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22ticks%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Egroups%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%20%2F%2F%2Eattr%28%22class%22%2C%20%22ticks%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22ticks%2D%22%20%2B%20groupNames%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28groupTicks%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22tick%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22rotate%28%22%20%2B%20%28d%2Eangle%20%2A%20180%20%2F%20Math%2EPI%20%2D%2090%29%20%2B%20%22%29%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22translate%28%22%20%2B%20outerRadius%20%2B%20%22%2C%200%29%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20add%20tick%20marks%0A%20%20%20%20%20%20%20%20ticks%2Eappend%28%22line%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x1%22%2C%201%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22y1%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x2%22%2C%205%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22y2%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%22%2C%20%22%23000%22%29%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20add%20tick%20labels%0A%20%20%20%20%20%20%20%20ticks%2Eappend%28%22text%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22dy%22%2C%20%22%2E35em%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20ticklabelFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%20return%20d%2Eangle%20%3E%20Math%2EPI%20%3F%20%22rotate%28180%29translate%28%2D8%29%22%20%3A%20%22translate%288%29%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22text%2Danchor%22%2C%20function%28d%29%20%7B%20return%20d%2Eangle%20%3E%20Math%2EPI%20%3F%20%22end%22%20%3A%20%22start%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%2Etext%28function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20create%20chords%0A%20%20%20%20var%20chords%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22chords%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Echords%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22path%22%29%2Eattr%28%22id%22%2C%20function%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22chord%2D%22%20%2B%20groupNames%5Bd%2Esource%2Eindex%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22%2D%22%20%2B%20groupNames%5Bd%2Etarget%2Eindex%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22d%22%2C%20d3%2Esvg%2Echord%28%29%2Eradius%28innerRadius%29%29%3B%0A%0A%20%20%20%20%2F%2F%20style%20chords%20and%20define%20mouse%20events%0A%20%20%20%20chords%2Estyle%28%22fill%22%2C%20function%28d%29%20%7B%20return%20fillScale%28d%2Etarget%2Eindex%29%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%22%2C%20chordedgeColor%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22fill%2Dopacity%22%2C%200%2E67%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22stroke%2Dwidth%22%2C%20%220%2E5px%22%29%0A%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22opacity%22%2C%201%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseover%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20chordTip%2Eshow%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20chordFade%28d%2C%20fadeLevel%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseout%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20%28showTooltips%29%20chordTip%2Ehide%28d%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20chordFade%28d%2C%201%29%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%2F%2F%20create%20group%20labels%0A%20%20%20%20if%20%28showGroupnames%29%20%7B%0A%20%20%20%20%20%20%20%20var%20names%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22names%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28chord%2Egroups%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22name%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseover%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%20fadeLevel%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eon%28%22mouseout%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20groupFade%28d%2C%201%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28groupLabels%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22label%2D%22%20%2B%20d%2Elabel%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22rotate%28%22%20%2B%20%28d%2Eangle%20%2A%20180%20%2F%20Math%2EPI%20%2D%2090%29%20%2B%20%22%29%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22translate%28%22%20%2B%20%28outerRadius%20%2B%20d%2Epadding%29%20%2B%20%22%2C%200%29%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%20%20%20%20names%2Eappend%28%22text%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22dy%22%2C%20%22%2E35em%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20groupnameFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20d%2Ehandside%20%3D%3D%20%22left%22%20%3F%20%22rotate%28180%29%22%20%3A%20null%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22text%2Danchor%22%2C%20function%28d%29%20%7B%20return%20d%2Ehandside%20%3D%3D%20%22left%22%20%3F%20%22end%22%20%3A%20%22start%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Etext%28function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20%28categoryNames%29%20%7B%0A%20%20%20%20%20%20%20%20var%20categories%20%3D%20svg%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22categories%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28categoryNames%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%2Eattr%28%22class%22%2C%20%22category%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2EselectAll%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Edata%28categoryLabels%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eenter%28%29%2Eappend%28%22g%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22fill%22%2C%20%22black%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22label%2D%22%20%2B%20d%2Elabel%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%22rotate%28%22%20%2B%20%28d%2Eangle%20%2A%20180%20%2F%20Math%2EPI%29%20%2B%20%22%29%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%20%22translate%28%22%20%2B%20%28outerRadius%20%2B%20categorynamePadding%29%20%2B%20%22%2C%200%29%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20%20%20%20%20categories%2Eappend%28%22text%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22x%22%2C%200%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22dy%22%2C%20%22%2E35em%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dsize%22%2C%20categorynameFontsize%20%2B%20%22px%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dfamily%22%2C%20%22sans%2Dserif%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22font%2Dweight%22%2C%20%22bold%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22transform%22%2C%20function%28d%2C%20i%29%20%7B%20return%20i%20%3F%20%22rotate%28270%29%22%20%3A%20%22rotate%2890%29%22%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22text%2Danchor%22%2C%20%22middle%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Etext%28function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2Eattr%28%22id%22%2C%20function%28d%29%20%7B%20return%20d%2Elabel%3B%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20categoryLabels%28d%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%5B%7B%0A%20%20%20%20%20%20%20%20%20%20angle%3A%20i%20%2A%20Math%2EPI%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20d%0A%20%20%20%20%20%20%20%20%7D%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20returns%20an%20array%20of%20tick%20angles%20and%20labels%2C%20given%20a%20group%0A%20%20%20%20function%20groupTicks%28d%29%20%7B%0A%20%20%20%20%20%20var%20k%20%3D%20%28d%2EendAngle%20%2D%20d%2EstartAngle%29%20%2F%20d%2Evalue%3B%0A%20%20%20%20%20%20return%20d3%2Erange%280%2C%20d%2Evalue%2C%20tickInterval%29%2Emap%28function%28v%2C%20i%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20%20%20angle%3A%20v%20%2A%20k%20%2B%20d%2EstartAngle%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20i%20%25%205%20%3F%20null%20%3A%20v%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20groupLabels%28d%29%20%7B%0A%20%20%20%20%20%20var%20a%20%3D%20%28d%2EstartAngle%20%2B%20d%2EendAngle%29%20%2F%202%3B%0A%20%20%20%20%20%20return%20%5B%7B%0A%20%20%20%20%20%20%20%20%20%20angle%3A%20a%2C%0A%20%20%20%20%20%20%20%20%20%20handside%3A%20%28a%20%3C%20Math%2EPI%29%20%3F%20%22right%22%20%3A%20%22left%22%2C%0A%20%20%20%20%20%20%20%20%20%20label%3A%20groupNames%5Bd%2Eindex%5D%2C%0A%20%20%20%20%20%20%20%20%20%20padding%3A%20groupnamePadding%5Bd%2Eindex%5D%0A%20%20%20%20%20%20%20%20%7D%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20returns%20an%20event%20handler%20for%20fading%20all%20chords%20not%20belonging%20to%20a%0A%20%20%20%20%2F%2F%20specific%20group%0A%20%20%20%20function%20groupFade%28g%2C%20opacity%29%20%7B%0A%20%20%20%20%20%20%20%20svg%2EselectAll%28%22%2Echords%20path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Efilter%28function%28d%29%20%7B%20return%20d%2Esource%2Eindex%20%21%3D%20g%2Eindex%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%26%26%20d%2Etarget%2Eindex%20%21%3D%20g%2Eindex%3B%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Etransition%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22opacity%22%2C%20opacity%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20returns%20an%20event%20handler%20for%20fading%20all%20chords%20except%20for%20the%20one%0A%20%20%20%20%2F%2F%20given%0A%20%20%20%20function%20chordFade%28g%2C%20opacity%29%20%7B%0A%20%20%20%20%20%20%20%20svg%2EselectAll%28%22%2Echords%20path%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Efilter%28function%28d%29%20%7B%20return%20d%2Esource%2Eindex%20%21%3D%20g%2Esource%2Eindex%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%7C%20d%2Etarget%2Eindex%20%21%3D%20g%2Etarget%2Eindex%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Etransition%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%2Estyle%28%22opacity%22%2C%20opacity%29%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20round%20to%20significant%20figures%20%2F%20digits%0A%20%20%20%20function%20sigFigs%28n%2C%20sig%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28n%20%3D%3D%200%29%20%7B%20return%20n%7D%0A%20%20%20%20%20%20%20%20if%20%28sig%20%3D%3D%20%22null%22%29%20%7B%20sig%20%3D%207%3B%20%7D%0A%20%20%20%20%20%20%20%20var%20mult%20%3D%20Math%2Epow%2810%2C%20sig%20%2D%20Math%2Efloor%28Math%2Elog%28n%29%20%2F%20Math%2ELN10%29%20%2D%201%29%3B%0A%20%20%20%20%20%20%20%20return%20Math%2Eround%28n%20%2A%20mult%29%20%2F%20mult%3B%0A%20%20%20%20%7D%0A%0A%20%20%7D%20%20%2F%2F%20end%20renderValue%20function%0A%0A%7D%29%3B%0A%0A"></script>

</head>
<body style="background-color:white;">
<div id="htmlwidget_container">
  <div id="htmlwidget-4209" style="width:960px;height:500px;" class="chorddiag"></div>
</div>
<script type="application/json" data-for="htmlwidget-4209">{"x":{"matrix":[[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],"options":{"type":"bipartite","width":null,"height":null,"margin":80,"showGroupnames":true,"groupNames":["575-600 hours","750-900 hours","1100 hours","2200 hours+","Afrikaans","Catalan","Danish","Dutch","French","Galician","Italian","Norwegian","Portuguese","Romanian","Spanish","Swedish","German","Indonesian","Javanese","Jumieka","Malay","Swahili","Albanian","Amharic","Armenian","Azerbaijani","Belarusian","Bengali","Bosnian","Bulgarian","Burmese","Cebuano","Croatian","Czech","Dzongkha","Estonian","Finnish","Georgian","Greek","Gujarati","Hebrew","Hindi","Hungarian","Icelandic","Ilocano","Irish","Kannada","Kazakh","Kurdish","Kyrgyz","Khmer","Lao","Latvian","Lithuanian","Macedonian","Marathi","Mongolian","Nepali","Pashto","Persian(Dari-Farsi-Tajik)","Polish","Punjabi","Russian","Serbian","Sinhalese","Slovak","Slovenian","Somali","Tagalog","Tamil","Tanchangya","Telugu","Tetum","Thai","Turkish","Turkmen","Ukrainian","Urdu","Uzbek","Vietnamese","Xhosa","Zulu","Arabic","Cantonese","Japanese","Korean","Mandarin","Taiwanese","Wu"],"groupColors":["#000000","#FFDD89","#957244","#F26223"],"groupThickness":0.1,"groupPadding":0.0349065850398866,"groupnamePadding":[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"groupnameFontsize":10,"groupedgeColor":null,"chordedgeColor":"#808080","categoryNames":null,"categorynamePadding":100,"categorynameFontsize":28,"showTicks":false,"tickInterval":0.1,"ticklabelFontsize":10,"fadeLevel":0.1,"showTooltips":true,"tooltipNames":["575-600 hours","750-900 hours","1100 hours","2200 hours+","Afrikaans","Catalan","Danish","Dutch","French","Galician","Italian","Norwegian","Portuguese","Romanian","Spanish","Swedish","German","Indonesian","Javanese","Jumieka","Malay","Swahili","Albanian","Amharic","Armenian","Azerbaijani","Belarusian","Bengali","Bosnian","Bulgarian","Burmese","Cebuano","Croatian","Czech","Dzongkha","Estonian","Finnish","Georgian","Greek","Gujarati","Hebrew","Hindi","Hungarian","Icelandic","Ilocano","Irish","Kannada","Kazakh","Kurdish","Kyrgyz","Khmer","Lao","Latvian","Lithuanian","Macedonian","Marathi","Mongolian","Nepali","Pashto","Persian(Dari-Farsi-Tajik)","Polish","Punjabi","Russian","Serbian","Sinhalese","Slovak","Slovenian","Somali","Tagalog","Tamil","Tanchangya","Telugu","Tetum","Thai","Turkish","Turkmen","Ukrainian","Urdu","Uzbek","Vietnamese","Xhosa","Zulu","Arabic","Cantonese","Japanese","Korean","Mandarin","Taiwanese","Wu"],"tooltipFontsize":12,"tooltipUnit":"","tooltipGroupConnector":" &#x25B6; ","precision":"null"}},"evals":[]}</script>
<script type="application/htmlwidget-sizing" data-for="htmlwidget-4209">{"viewer":{"width":450,"height":350,"padding":0,"fill":true},"browser":{"width":960,"height":500,"padding":0,"fill":true}}</script>
</body>
</html>
<!-- If you don't see it u probably are using a browser not based on webkit, so leave IE and grab anything else (Y) -->
<!-- UPDATE: works in Chrome & Safari, not Firefox. To solve that you could use an SVG insted of pure text. -->

<div class="container">
  <div class="title">Seth Kontny </div>
  <div class="subtitle"> geek + smart + curious + nerd + ingenious + cunning = ME </div>
</div><!DOCTYPE html>
<html lang="en">
<head>
    <!-- thanks to http://carisenda.com/sandbox/choropleth/ -->

    <meta charset="utf-8" />
    <title>Irish Sporthorse Foal Registrations</title>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js"></script>
    <script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crossfilter/1.3.12/crossfilter.min.js"></script>

    <link href='http://fonts.googleapis.com/css?family=Carrois+Gothic' rel='stylesheet' type='text/css'>

    <style type="text/css" media="screen">
        body, html {
            font-family: 'Carrois Gothic', sans-serif;
            padding: 0;
            margin: 0;
            background-color: #fff;
        }

        #container {
            width: 800px;
            margin-left: auto;
            margin-right: auto;
        }
        h1 {
            text-align: center;
        }

        ul {
            list-style: none;
            margin-left: 0;
            padding-left: 1em;
            text-indent: -1em;
        }

        .year_label, .year_total {
            fill: black;
            text-align:center;
            font-family: 'Carrois Gothic', sans-serif;
            font-size: 18px;
        }
        .year_total {

            font-size: 12px;
        }

        .slide {
            fill: rgb(247,251,255);
        }


        .enabled {
            fill: rgb(238,238,238);
            color: black;
        }

        .bar {
            background: red;
        }
        .county_list {
            background: #6bdd8d;
            font-size: 12px;
            margin: 1px;
            padding: 2px;
        }
        #map, #stats, #selectbar {
            float:left;
        }

        #stats {
            width: 200px;
        }

        #nav {
            height: 140px;
            vertical-align: bottom;
        }

        .slide_txt_val {
            vertical-align: bottom;
            font-size: smaller;
        }
        .big_year {
            font: 200 60px "Helvetica Neue";
            fill: #ddd;
        }

        #selectbar {
          opacity: 0;
        }

    </style>

</head>
<body>
<!--<h1>Sporthorse Foal Registrations</h1>-->
<div id="container">
<div id="nav"></div>
<div id="selectbar">
  Breed code<br />Sire's Breedcode
</div>
<div id="map">
</div> <!-- map -->

<div id="stats"></div>
</div>
<script>

  var w = 700,
      bar_h = 100,    // height of div holding bars
      bar_top_margin = 30,  // space above top of highest bar
      bar_padding = 10; // width between bars + padding
      default_height = 30;  // default height of top bar

  d3.csv("foalreg.csv", function(csv) {

    // load and organise data

    // clean data
    csv.forEach(function(v) {
      v.year = parseInt(v.year);
      v.foals = parseInt(v.foals);
      v.mares = parseInt(v.mares);
      v.coverings = parseInt(v.coverings);
    });

    // create crossfilter
    var cf = crossfilter(csv);

    // create dimensions
    cf.county = cf.dimension(function(d) { return d.county; });
    cf.year = cf.dimension(function(d) { return d.year; });
    cf.foals = cf.dimension(function(d) { return d.foals; });

    // totals by year
    var t1 = cf.year.group()
      .reduceSum(function(d) { return d.foals; })
      .top(Infinity);

    // convert to an associative array
    var year_foals = new Array();
    t1.forEach(function(v) {
      year_foals[v.key] = v.value;
    })

    console.log('cf.county.top(3)', cf.county.top(3));

    // load svg map
    d3.xml("ireland.svg", "image/svg+xml", function(xml) {
      var importedNode = document.importNode(xml.documentElement, true);
      d3.select("div#map")
        .each(function() {
          this.appendChild(importedNode);
        })
      drawYearBars(cf);
      updateChart(cf, 1999);
    });

    ////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////

    function drawYearBars(cf) {

      // create histogram/tabs at top
      var year_range = [1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011];

      // get a list of the years for which there is data
      var yrs = cf.year.group()
        .reduceSum(function(d) { return d.foals; })
        .top(Infinity)
      
      var got_years = new Array();

      yrs.forEach(function(v) {
          got_years[v.key] = v.value;
      })

      // scale for histogram
      var bar_height = d3.scale.linear()
        .domain([0, d3.max(yrs, function(d) { return d.value; })])
        .range([0, bar_h]);

      var bar_width = ( w / (year_range.length-1) ) - bar_padding;

      var bar_xpos = d3.scale.linear()
        .domain([0, year_range.length])
        .range([0, w]);

      var tabs = d3.select("#nav")
        .append("svg")
        .attr("width", w)
        .attr("height", bar_h + 40);

      tabs.selectAll("rect")
        .data(year_range)
        .enter().append("rect")
        .attr("x", function(d, i) { return bar_xpos(i); })
        .attr("y", function(d) {
            if (got_years[d] != undefined) {
                return bar_h + bar_top_margin - bar_height(got_years[d]);
            } else {
                return bar_h + bar_top_margin - default_height;}
        })
        .attr("height", function(d) {
            if (got_years[d] != undefined) {
                return bar_height(got_years[d]);
            } else {
                return default_height;}
        })
        .attr("width", bar_width)
        .attr("id", function(d) { return d; })
        .attr("class", function(d) {
            var cls = "slide";
            if (d in got_years) {
                cls += " enabled";
            }
            return cls;
        })
        .on('mouseover', function() {
            if (got_years[this.id] != undefined) {
                d3.select(this).style("fill", "#6bdd8d");
                updateChart(cf, this.id);
            }
        })
        .on("mouseout", function(){
            if (got_years[this.id] != undefined) {
                d3.select(this).style("fill", "rgb(238,238,238)");
            }
        })

      // add year labels
      tabs.selectAll(".year_label")
        .data(year_range)
        .enter()
        .append("text")
          .text(function(d) { return d; })
          .attr("class", "year_label")
          .attr("text-anchor", "middle")
          .attr("x", function(d, i) { 
            return bar_xpos(i+1) - (bar_width/2) - (bar_padding/2); 
          })
          .attr("y", function() { 
            return (bar_h + bar_top_margin - 10 ); 
          });

      // add value labels
      tabs.selectAll(".year_total")
        .data(year_range)
        .enter()
        .append("text")
        .text(function(d) {
            if (got_years[d] != undefined) {
                return got_years[d];
            } else {
                return ''}
        })
        .attr("class", "year_total")
        .attr("text-anchor", "middle")
        .attr("x", function(d, i) { return bar_xpos(i+1) - (bar_width/2) - (bar_padding/2); })
        .attr("y", function(d) {
            if (got_years[d] != undefined) {
                return bar_h + bar_top_margin - 5 - bar_height(got_years[d] ) ;
            } else {
                return 0;}
        });
    }

    function updateChart(cf, year) {

      var total_foals,
          data,
          t,
          ext,
          color,
          map,
          countiesRepublic,
          countiesNI;

      updateMap(cf, year);

      var county_data = cf.foals.top(Infinity);
      var ext = [0, 900];
      var county_scale = d3.scale.linear()
        .domain(ext)
        .range([0, 150]);

      // show top counties list
      d3.select("#stats")
        .selectAll("div")
        .remove();

      var list = d3.select("#stats")
        .selectAll("div")
        .data(county_data)

      list
        .enter()
        .append("div")
        .attr("class", "county_list")
        .attr("id", function(d) { return d.county + d.year;})
        .text(function(d) {
            return toProper(d.county); })
        .call(div_bar);
      
      list
        .exit().remove();


      function div_bar() {
        this
          .style("height", "16px")
          .style('white-space', 'nowrap') 
          .style("width", function(d) {
            return county_scale(d.foals)+"px";
          })
      }

      // put the year selected on the map
      d3.select(".big_year").remove();

      var year = d3.select("#ireland").append("text")
        .attr("class", "big_year")
        .attr("text-anchor", "end")
        .attr("y", 490)
        .attr("x", 360)
        .text(year);

      setCountyBarMouseoverEvent(cf);

  }

  function updateMap (cf, year) {
    cf.year.filterExact(year);
    total_foals = cf.county.group()
      .reduceSum(function(d) { return d.foals;})
      .top(Infinity);

    data = cf.county.top(Infinity);

    t = cf.foals.groupAll().value();

    ext = d3.extent(data, function(d) { return d.foals; });
    ext = [0,1000];

    color = d3.scale.linear()
      .domain(ext)
      .range(["white", "green"]);

    map = d3.select('#map');

    ///////////////////////////////////////////////////////////////////////////////////////////
    ////////////// shade the counties of the Republic of Ireland individually /////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    countiesRepublic = map.selectAll('path.republic')
      .style('fill', function(d) {    // would normally use attr but svg has used style for fill
        
        var clr = "#fff";
        // only look at items in the counties layer
        if (this.parentNode.id == "republic") {

          var county = this.id.toUpperCase();

          data.forEach(function(v, i, ar) {
              if (v.county == county) {
                  clr =  color(v.foals)
              }
          });
        }
        return clr;

      });

    ///////////////////////////////////////////////////////////////////////////////////////////
    /////////////////// shade the counties of Northern Ireland together ///////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////

    countiesNI = map.selectAll('path.northernireland')
      .style('fill', function(d) {    // would normally use attr but svg has used style for fill
        
        var clr = "#fff";
        // only look at items in the counties layer
        if (this.parentNode.id == "northernireland") {

          var county = this.id.toUpperCase();

          data.forEach(function(v, i, ar) {
              if (v.county == "NORTHERN IRELAND") {
                  clr =  color(v.foals)
              }
          });
        }
        return clr;

      });

    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////


  }

  function setCountyBarMouseoverEvent (cf) {
    d3.selectAll('div.county_list')
      .on('mouseover', function(d) {
        // style the bar gray
        d3.select(this).style("background", "rgb(238,238,238)"); 

        cf.county.filter(d.county);
        updateMap(cf, d.year);
      })
      .on("mouseout", function(d) {
        // style the bar green again
        d3.select(this).style("background", "#6bdd8d");

        var countyID = toProper(d.county);
        cf.county.filterAll();
        updateMap(cf, d.year);

      })
  } //setCountyBarMouseoverEvent

  });


  function toProper(str)
  {
      return str.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
  }
</script>
</body>
</html><!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="scatterplot_trail.js"></script>
<script src="formatted_data.js"></script>
<link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>

<div class="slider-container">
    <input class="date-slider" type="range" min="1990" max="2012" value="2012"/>
    <div class="info-year"></div>
</div>
<div class="chart-container1">
    <div class="chart1"></div>
</div>

<script>

    var chart1 = scatterPlot()
        .width(800)
        .height(450)
        .chartTitle('Evolution of GDP and % of forest area from 1990 to 2012');

    chart1
        .dataMinX(metadata.gdpMin)
        .dataMaxX(metadata.gdpMax)
        .dataMinY(metadata.forestAreaMin)
        .dataMaxY(metadata.forestAreaMax)
        .labelY('% of land area')
        .valueName('Forest Area')
        .highlights(['Puerto Rico', 'Bhutan', 'Cambodia', 'Cameroon', 'Honduras'])
        .showBackgroundLines(true);

    var render = function(year){
        parent.call(chart1.year(year));
        d3.select('.info-year').html(year);
    };

    var parent = d3.select('.chart1').datum(data);
    render(2012);

    d3.select('.date-slider').on('input', function(e){
        render(this.value);
    });

</script>
</body>
</html><html>
    <head>
        <title>Perf</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
        <style>
          	svg {
  							font: 11px "Helvetica Neue", Helvetica, Arial, sans-serif;
						}
          
            .line {
                fill: none;
                stroke: #154579;
                stroke-width: 3px;
              	shape-rendering: optimizeSpeed;
              	stroke-linejoin: round;
            }
            .below {
                fill:deepskyblue;
              	fill-opacity: 0.3;
            }
            .above {
                fill:coral;
              	fill-opacity: 0.3;
            }
            .axis path,
            .axis line {
                fill: none;
                stroke: #aaa;
                shape-rendering: crispEdges;
            }

            .axis text {
                fill: #aaa;
            }

            .x.axis text {
                font-family: sans-serif;
                font-size: 11px;
                fill: #aaa;
            }

            .x.axis path { 
              	fill: skyblue;
            }
        </style>
    </head>
    <body>
    </body>
    <script type="text/javascript">
        var w = 750,
            h = 300;

        var margin = {top: 20, right: 20, left: 20, bottom: 20};

        var width = w - margin.left - margin.right;
        var height = h - margin.top - margin.bottom;

        var svg = d3.select('body')
                .append('svg')
                .attr("height", h)
                .attr("width", w)
                .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        var timeFormat = d3.time.format("%m-%d").parse;

        var yScale = d3.scale.linear()
                .range([height, 0]);

        var xScale = d3.time.scale()
                .range([0, width]);

        var xAxis = d3.svg.axis()
                .scale(xScale)
                .orient("bottom")
                .tickValues(d3.time.month.range(
                        new Date("1900 02"),
                        new Date("1901 01")),
                        1);
        var yAxis = d3.svg.axis()
                .scale(yScale)
                .orient("left");

        var line = d3.svg.line()
                .x(function (d) {
                    return xScale(d.date)
                })
                .y(function (d) {
                    return yScale(d.value)
                });

        var area = d3.svg.area()
                .x(function (d) {
                    return xScale(d.date);
                })
                .y1(function (d) {
                    return yScale(d.value)
                })
//                .y0(function (d) {
//                    return yScale(0)
////                    return height; //Clip Above
////                    return 0;   //Clip Below
//                });

        function drawAxis(params) {
            this.append("g")
                    .classed("x axis", true)
                    .attr("transform", "translate(0, " + params.scale.y(0) + ")")
                    .style("stroke", "white")
                    .call(params.axis.x);

            this.append("g")
                    .classed("x axis", true)
                    .attr("transform", "translate(0, " + params.scale.y(0) + ")")
                    .call(params.axis.x);

            this.append("g")
                    .classed("y axis", true)
                    .style("stroke", "white")
                    .call(params.axis.y)
                    .append('text')
                    .text("Degree Day (ºC)")
                    .attr("transform", "rotate(90)")
                    .attr("transform", "translate(7, " + height + ") rotate(90)")
                    .attr("text-anchor", "end");

            this.append("g")
                    .classed("y axis", true)
                    .call(params.axis.y)
                    .append('text')
                    .text("Degree Day (ºC)")
                    .attr("transform", "rotate(90)")
                    .attr("transform", "translate(7, " + height + ") rotate(90)")
                    .attr("text-anchor", "end");
        }

        function drawLegend() {
            var g = this.append("g")
                    .attr("transform", "translate(" + ((width / 2)) + "," + (margin.top) + ")");

            var g = this.append("g")
                    .attr("transform", "translate(" + ((width / 4) - 100) + "," + (height - margin.bottom) + ")");


            var g = this.append("g")
                    .attr("transform", "translate(" + ((3 * width / 4) - 100) + "," + (height - margin.bottom) + ")");
        }

        d3.csv("data.csv", function (error, data) {
            gdata = data;
            data.forEach(function (d) {
                d.date = timeFormat(d.date);
                d.value = +d.value - 18;
            });
            xScale.domain(d3.extent(data, function (d) {
                return d.date
            }));
            yScale.domain(d3.extent(data, function (d) {
                return d.value
            }));

            svg.datum(data);

            svg.append('clipPath')
                    .attr('id', 'clip-above')
                    .append('path')
                    .attr('d', area.y0(height));

            svg.append('clipPath')
                    .attr('id', 'clip-below')
                    .append('path')
                    .attr('d', area.y0(0));

            svg.append('path')
                    .classed('line', true)
                    .attr('d', line);

            svg.append('path')
                    .classed('area above', true)
                    .attr('clip-path', 'url(#clip-above)')
                    .attr('d', area.y0(yScale(0)));

            svg.append('path')
                    .classed('area below', true)
                    .attr('clip-path', 'url(#clip-below)')
                    .attr('d', area.y0(yScale(0)));

            drawAxis.call(svg, {
                scale: {
                    x: xScale,
                    y: yScale
                },
                axis: {
                    x: xAxis,
                    y: yAxis
                },
            });

            drawLegend.call(svg);
        });

    </script>
</html>
<!DOCTYPE html>

<html lang='en'>

<head>
    <meta charset='UTF-8'>
    <title>d3 | reusable slopegraph v2</title> 
    <meta name="author" content="Sundar Singh | eesur.com">
    
    <link rel="stylesheet" href="main.css">
    <script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.min.js" charset="utf-8"></script>
</head>

<body>

    <header>
        <h1>Reusable slopegraph v2</h1> 
        <p>Number of personal computers installed in a country per household.</p>

        <nav id='filter'></nav>
        <nav id='nav-alt'></nav>
    </header>

    <section id="slopegraph" class="slope"></section>

<!-- *************** start js/d3 code ***************** -->

<!-- namespace -->
<script> d3.eesur = {}; </script>
<!-- reusable slopegraph -->
<script src="d3_code_slopegraph_v2.js"></script>

<script>
//  render slopegraph chart

(function() {
    'use strict';

    var data,
        // keys values from data to be applied
        keyValues = ['2000', '2002', '2004', '2006', '2008', '2010', '2012'];

    // store chart
    var slopegraph;
    // track any user interactions
    var state = {
        // have an array to mutate
        keys: keyValues,
        // track filtered sets
        filter: [],
        // toggle highlights
        navToggle: [],
        // track line selection
        highlight: null
    };

    d3.json('data.json', function(error, json) {
        if (error) throw error;
        // access data outside this callback
        data = json;
        // initial render chart
        render(data, keyValues);
        // alternative navigation     
        navAlt(data);
        // add some filter options
        filterFunc();
    });

    // filter sets via user interaction
    function filterFunc() {
        // create array values
        _.times(keyValues.length, function(n) {
            state.filter.push(true);
        });

        d3.select('#filter').append('ul')
            .selectAll('li')
            .data(keyValues)
            .enter().append('li')
            .on('click', function (d, i) {
                if (!state.filter[i]) {
                    // set toggle 
                    state.filter[i] = true;
                    d3.select(this).style('opacity', 1);
                    // push key into array
                    state.keys.push(d);
                    // ensure array is kept in date order
                    state.keys = _.sortBy(state.keys);
                    // render chart with new keys
                    render(data, state.keys);
                // ensure there at least two values
                // so a slopegraph can be rendered
                } else if (state.filter[i] && state.keys.length > 2) {
                    state.filter[i] = false;
                    d3.select(this).style('opacity', 0.3);
                    _.pull(state.keys, d);
                    state.keys = _.sortBy(state.keys);
                    render(data, state.keys);
                }
            })
            .text(function (d) { return d; });
    }

    // navigation to highlight lines
    function navAlt(data) {
        // create array values
        _.times(data.length, function(n) {
            state.navToggle.push(true);
        });

        d3.select('#nav-alt').append('ul')
            .selectAll('li')
            .data(data)
            .enter().append('li')
            .attr('class', function (d, i) { return 'navAlt li-' + i; })
            .on('click', function (d, i) {
                if (!state.navToggle[i]) {
                    // update toggle state
                    state.navToggle[i] = true;
                    resetSelection();
                    state.highlight = null;
                } else if (state.navToggle[i]) {
                    state.navToggle[i] = false;
                    // hover to highlight line
                    highlightLine(i);
                    // highlight nav in relation to line
                    highlightNav(i);
                    // update state
                    state.highlight = i;
                }
            })
            .text(function (d) { return d['country']; });
    }


    // render slopegraph chart 
    function render(data, keys) {
        resetSelection();
        // create chart
        slopegraph = d3.eesur.slopegraph_v2()
            .margin({top: 20, bottom: 20, left: 100, right: 100})
            .gutter(25)
            .keyName('country')
            .keyValues(keys)
            .on('_hover', function (d, i) {
                // hover to highlight line
                highlightLine(i);
                // highlight nav in relation to line
                highlightNav(i);
                // update state of selected highlight line
                state.highlight = i;
            });


        // apply chart
        d3.select('#slopegraph')
            .datum(data)
            .call(slopegraph);

        // ensure highlight is maintained on update    
        if (!_.isNull(state.highlight)) {
            d3.selectAll('.elm').style('opacity', 0.2);
            d3.selectAll('.sel-' + state.highlight).style('opacity', 1);
            highlightNav(state.highlight);
        }
    }

    function highlightLine(i) {
        d3.selectAll('.elm').transition().style('opacity', 0.2);
        d3.selectAll('.sel-' + i).transition().style('opacity', 1);
    }

    function highlightNav(i) {
        d3.selectAll('.navAlt').transition().style('opacity', 0.6);
        d3.select('.li-' + i).transition().style('opacity', 1);
    }

    function resetSelection() {
        d3.selectAll('.elm').transition().style('opacity', 1);
        d3.selectAll('.navAlt').transition().style('opacity', 1);
    }

    // just for blocks viewer size
    d3.select(self.frameElement).style('height', '800px');

}());

</script>

</body>
</html>



<!DOCTYPE html>
<meta charset="utf-8">
<canvas width="960" height="500"></canvas>
<script src="//d3js.org/d3.v4.0.0-alpha.4.min.js"></script>
<script>

var data = [1, 1, 2, 3, 5, 8, 13];

var canvas = document.querySelector("canvas"),
    context = canvas.getContext("2d");

var width = canvas.width,
    height = canvas.height,
    radius = Math.min(width, height) / 2;

var colors = [
  "#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd",
  "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf"
];

var arc = d3.arc()
    .outerRadius(radius - 10)
    .innerRadius(radius - 70)
    .padAngle(0.03)
    .context(context);

var pie = d3.pie();

var arcs = pie(data);

context.translate(width / 2, height / 2);

context.globalAlpha = 0.5;
arcs.forEach(function(d, i) {
  context.beginPath();
  arc(d);
  context.fillStyle = colors[i];
  context.fill();
});

context.globalAlpha = 1;
context.beginPath();
arcs.forEach(arc);
context.lineWidth = 1.5;
context.stroke();

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Where does US military aid go?</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
                
				margin: 0;
				background-color: #ccb1b1;
				font-family: Helvetica, Arial, sans-serif;
/*                padding-top:10px;
                padding-left:20px;
*/			}


			#container {
				width: 1000px;
				margin-left: auto;
				margin-right: auto;
				margin-top: 20px;
				padding: 20px;
				background-color: white;
				box-shadow: 3px 3px 5px 6px #ccb1b1;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 16px;
				margin: 10px 0 0 0;
			}
            
            ul {
                font-size: 14px;
            }
            
            li {
                font-size: 12px;
            }

            svg {
				background-color: #eaeaea;
                line-height: normal;
			}

			circle:hover {
				fill: orange;
			}
			
            circle {
                fill: none;
                stroke: #5c5c5c;
                stroke-opacity: 0.9;
                r: 1;
            }
            
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
                stroke-width: 1px;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
                opacity: 0.7;
			}
			.legend text {
				fill: #575757;
			}
            
            #main {
                position: absolute;
                width: 350px;
                height: 600px;      
                float:left;
            }
            
            #chart {
                width: 1000px;
                height: 500px;
                position:relative;
                right: -400px;
                top: 10px;
            }
            
            #notes {
                width:auto;
                height:auto;
                position:relative;
                top:100px;
            }
                
		</style>
	</head>
	<body>
    <div id="container">
		<h1>Misdirected military aid?</h1>

			<p>Since 1970, the US has provided close to <b>half a trillion USD in military aid</b> to a large number of countries.<br></p>
            <p>While of 50% of it went to authoritarian or hybrid regimes over the complete period, based on the 2014 Democracy Index, this figure is higher for recent years.  In 2012, 78% of US military aid went to governments with little regard for democratic norms and personal liberty.<br> <br>
                </p>
		<svg class="chart"></svg>
		<p><i>Constant 2011 USD</i>
			<ul> Sources:
                    <li><a href="https://explorer.usaid.gov/prepared/us_foreign_aid_complete.csv">US Government</a>, 2012</li>
                    <li><a href="http://en.wikipedia.org/wiki/Democracy_Index">The 2014 Democracy Index by the Economist Intelligence Unit.</a> 
            </ul>
		</p>
	</div>       
		<script type="text/javascript">		

			//govt_colors = d3.scale.category10();
			govt_colors = d3.scale.ordinal()
								.domain(["Full democracy","Flawed democracy","Hybrid regime","Authoritarian regime"])
								.range(["blue","purple","orange","red"])
			
			var margin = {top: 80, right: 20, bottom: 50, left: 60},
			width = 1000 - margin.left - margin.right,
			height = 450 - margin.top - margin.bottom;
			
			//Set up stack method
			var stack = d3.layout.stack()
							.values(function(d) {
								return d.military_aid;
							});
										
			//Set up scales
			var xScale = d3.scale.ordinal()
				.rangeRoundBands([0, width], 0.05);
		
			var yScale = d3.scale.linear()
				.range([0, height]);
						
			var chart = d3.select(".chart")
				.attr("width", width + margin.left + margin.right)
				.attr("height", height + margin.top + margin.bottom)
			  .append("g")
				.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
			
			var dataset = [];

			d3.csv("us_foreign_assistance_yearly.csv", function(data) {
				
				dataset = create_dataset(data);
				//console.log(dataset);
				
				stack(dataset);

				//Set up scales
				var xScale = d3.scale.ordinal()
					//.domain(d3.range(dataset[0].military_aid.length))
					.domain(dataset[0].military_aid.map(function(d) {return d.x;}))
					.rangeRoundBands([0, width], 0.05);
		
				var yScale = d3.scale.linear()
						.domain([0,				
							d3.max(dataset, function(d) {
								//console.log(d);
								return d3.max(d.military_aid, function(d) {
									return d.y0 + d.y;
								});
							})
						])
						.range([0, height]);

				var yScale = d3.scale.linear()
						.domain([0,25])
						.range([height,0]);

				var xAxis = d3.svg.axis()
						.scale(xScale)
						.orient("bottom");
			
				var format1 = d3.format("0f");
				var format2 = d3.format("0.1f");
				
				var yAxis = d3.svg.axis()
						.scale(yScale)
						.orient("left")
						.ticks(5)
						.tickFormat(format1);
				
				chart.append("text")
					.text("US Military Aid, 1970 to 2012")
					.attr("x",-50)
					.attr("y",-40)
					.attr("font-size","16px")
					.attr("text-anchor","start")
					.attr("font-size","24px")
					.attr("fill","#777777");
				
				var groups = chart.selectAll("g")
						.attr("class",function(d) {return d.govt_type;})
						.data(dataset)
						.enter()
						.append("g")
						.style("fill", function(d, i) {
							return govt_colors(d.govt_type);
						});
				
				var rects = groups.selectAll("rect")
						.data(function(d) { return d.military_aid; })
						.enter()
						.append("rect");
				
				rects.attr("x", function(d, i) {
							return xScale(d.x);
						})
						.attr("width",xScale.rangeBand())
						.attr("y", function(d) { //console.log(d);
							//return height - yScale(d.y0) - yScale(d.y);  //Flip the math!
							//return yScale(d.y0)  + yScale(d.y) - height;
							x1 = height;
							
							return x1;
						})
						.attr("height", function(d) {
							//return height - yScale(d.y);
							return 0;
						})
						.attr("class",function(d) {return d.govt_type.split(" ")[0];})
						.append("title")
						.text(function(d) {
								return "Type of Government: " + d.govt_type + "\nYear of Aid: " + d.x + "\nAmount of Aid (BUSD): " + format2(d.y);
						});

				// Transition the different categories			
				d3.selectAll("rect.Authoritarian")
					.transition().delay(function(d,i) {return i*10;})
					.duration(1000)
					.attr("y",function(d) {return  yScale(d.y0) + yScale(d.y)- height ;})
					.attr("height", function(d) {return height - yScale(d.y); });
				d3.selectAll("rect.Hybrid")
					.transition().delay(function(d,i) {return 1000+i*10;})
					.duration(1000)
					.attr("width",xScale.rangeBand())
					.attr("y",function(d) {return  yScale(d.y0) + yScale(d.y)- height ;})
					.attr("height", function(d) {return height - yScale(d.y); });
				d3.selectAll("rect.Flawed")
					.transition()
					.delay(function(d,i) {return 2000+i*10;})
					.duration(1000)
					.attr("width",xScale.rangeBand())
					.attr("y",function(d) {return  yScale(d.y0) + yScale(d.y)- height ;})
					.attr("height", function(d) {return height - yScale(d.y); });				
				d3.selectAll("rect.Full")
					.transition()
					.delay(function(d,i) {return 3000+i*10;})
					.duration(1000)
					.attr("width",xScale.rangeBand())
					.attr("y",function(d) {return  yScale(d.y0) + yScale(d.y)- height ;})
					.attr("height", function(d) {return height - yScale(d.y); });

				
				chart.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + height + ")")
					.call(xAxis)
  				  .selectAll("text")
					.attr("y",0)
					.attr("x",-10)
					.attr("dy","0.35em")
					.attr("transform","rotate(-90)")
					.style("text-anchor","end");

				 chart.append("g")
					.attr("class", "y axis")
					.call(yAxis)
					.append("text")
					.attr("transform", "translate(-50,100) rotate(-90)")
					.attr("y", 6)
					.attr("dy", ".71em")
					.style("text-anchor", "end")
				 	.style("font-size","12px")
				 	.style("font-weight","bold")
					.text("Military Aid in USD (Billions)");

				chart.append("text")
					.text("Type of Govt.")
					.attr("x",width - 100)
					.attr("y",-40)
					.attr("font-size","12px")
					.attr("font-weight","bold")
					.attr("text-anchor","start")
					.attr("fill","#777777");
				
				var legend = chart.selectAll(".legend")
				  	.data(govt_colors.domain())
					.enter().append("g")
					.attr("class", "legend")
					.attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });
				
				legend.append("rect")
					.attr("x", width - 25)
					.attr("y",-30)
					.attr("width", 18)
					.attr("height", 18)
					.style("fill", function(d) { return govt_colors(d)});
				
				legend.append("text")
					.attr("x", width - 30)
					.attr("y", 9-30)
					.attr("dy", ".35em")
					.style("text-anchor", "end")
					.attr("font-size","12px")
					.text(function(d) {return d; });
				
				
					
			});
			
			// Function to arrange the data
			
			function create_dataset(data) {
				var arranged_data = [];
				
				data_length = data.length;
				dataset = d3.nest()
						.key(function(d) {
							return d.govt_category
						})
						.key(function(d) {
							return d.year
						})
						.rollup(function(d) {
							return d3.sum(d,function(e) {
								return +e.military_aid;
							})
						})
						.entries(data);
							
				dataset.forEach(function(d,k) {
					index= 0;
					//console.log(d);
					switch(d.key) {
							case "Authoritarian regime":
								index = 0;
								break;
							case "Hybrid regime":
								index = 1;
								break;
							case "Flawed democracy":
								index = 2;
								break;
							case "Full democracy":
								index = 3;
								break;
							case "No Data":
								index = 4;
								break;
					};
					//console.log(index);	
					t1 = d.values;
					temp = [];
					t1.forEach(function(e,i) { 
						temp[i] = {govt_type: d.key, x: e.key, y: +e.values/1000000000}
					});
					//console.log(d)
					arranged_data[index] = {govt_type:d.key, military_aid:temp};	
				});
				
				return arranged_data.slice(0,4);
			}

		</script>
	</body>
</html><!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Canadian Province TopoJSON</title>
    <style>
    body {
        width: 960px;
        margin: 1em auto 4em;
    }

    path {
      fill: none;
      stroke: #000;
      stroke-width: .25px;
      stroke-linejoin: round;
    }

    circle {
        fill: red;
    }


    </style>
</head>
<body>
<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>
var width = 960,
    height = 500;

// http://www.statcan.gc.ca/pub/92-195-x/2011001/other-autre/mapproj-projcarte/m-c-eng.htm
var projection = d3.geo.conicConformal()
    .rotate([91, 0])
    .center([0, 63])
    .parallels([49, 77])
    .scale(650)
    .translate([width / 2, height / 2])
    .precision(.1);

var path = d3.geo.path().projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("fed3082011topo.json", function(error, canada) {
    if (error) throw error;

    var transform = canada.transform,
        scaleX = transform.scale[0],
        scaleY = transform.scale[1],
        transX = transform.translate[0],
        transY = transform.translate[1];

    svg.append("path")
        .datum(topojson.mesh(canada))
        .attr("d", path);

    svg.selectAll("circle")
        .data(canada.arcs)
        .enter().append("circle")
        .attr("transform", function(d) {
            return "translate(" + projection([d[0][0] * scaleX + transX, d[0][1] * scaleY + transY]) + ")"; })
        .attr("r", 1);
});
</script>
</body>
</html><!DOCTYPE html> <html> <head> <meta charset="utf-8"/> <script src="http://maxwellito.github.io/vivus/dist/vivus.min.js"></script>  </head> <body> <button onclick="vTurkey.reset().play();">replay</button> <div style="height:500px;width:500px">   <svg viewbox="0 0 670.77075 831.70784" id="turkey">     <path id="path4245" d="m 219.4957,831.4839 c -13.45209,0.70812 -71.44753,-16.41889 -37.7184,-25.75523 36.32342,0.1119 83.03819,26.87454 108.88048,-12.06112 32.55368,-33.36221 -10.17605,-76.6837 -2.14055,-116.37472 -0.83481,-17.67378 3.25957,-28.40674 4.42586,-3.9431 23.57768,21.39269 28.87578,63.41926 23.92539,94.94097 -8.73407,35.84731 -47.67017,66.36082 -85.93534,63.39845 l -5.12394,0.0137 -6.31548,-0.22004 0.002,10e-4 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4243" d="m 311.00552,746.86381 c 3.5642,-21.83 -18.2726,-89.54994 -12.79076,-34.43008 1.90914,2.02512 7.69313,62.14085 12.79076,34.43008 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4241" d="m 463.90066,812.79124 c -23.80114,-2.69174 -62.43604,-9.67044 -73.85684,-22.79518 36.18871,0.11147 82.85095,27.35447 112.16204,-2.13689 18.93081,-36.16276 -11.45325,-72.13867 -35.43407,-96.87717 -15.13753,-23.25967 -48.54719,-39.58871 -55.70561,-63.36658 24.32702,16.81351 45.56435,46.17536 69.00206,67.48019 30.88747,25.28353 56.6107,78.45805 20.85752,110.2524 -10.62567,7.8611 -24.46119,7.68623 -37.0251,7.44323 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4239" d="m 290.73858,647.50261 c -58.34372,0.72035 -126.94547,-12.8945 -157.5095,-68.71553 -22.35623,-41.04424 -38.559375,-90.11575 -27.46397,-136.61434 11.38385,54.38154 16.62485,116.18331 58.96783,157.03438 60.3038,47.31504 152.72787,47.69734 215.09419,3.67375 29.14491,-17.82598 58.97483,-43.76221 61.9378,-79.98218 -27.56564,-7.54928 9.00039,-8.96369 10.77298,-16.32664 19.42101,13.06871 65.56299,2.80914 96.42991,4.27027 39.97774,-5.79536 82.10659,-22.42203 107.49884,-54.93153 10.9937,-44.93106 -49.7686,-50.41084 -80.76411,-46.16405 -33.31572,1.09334 -66.68644,3.56323 -99.70268,7.82139 -14.50031,24.46609 -12.26032,63.54582 -0.42905,77.16085 -6.97058,-21.55043 -21.6948,-42.23273 -37.91293,-13.07946 -36.3996,32.48832 -80.39662,66.89595 -132.3764,59.41477 -14.4346,3.84892 -67.36162,-4.99181 -27.4989,-11.48898 34.62162,-1.39467 72.05781,4.13903 101.59022,-18.46621 20.15954,-19.35084 72.09577,-38.14198 62.91092,-68.89493 -28.12158,-25.66563 -53.08048,-58.44636 -90.1793,-71.91347 -110.65516,51.67395 -152.04973,98.87383 -22.23867,-4.99496 -27.5841,-4.6617 -59.55851,2.07327 -87.85915,-9.84937 -32.06628,-15.83354 -46.84671,-55.06174 -40.33265,-88.94687 9.05693,39.69732 31.51021,90.93771 81.32406,84.76472 37.33034,10.54734 18.35049,-32.04694 19.05573,-51.49778 -3.81288,-55.92178 -22.81817,-111.17309 -16.32297,-167.45232 13.86031,-58.284897 68.92809,5.6683 71.4949,37.59253 11.61788,17.26174 28.64761,-36.51361 49.38987,-39.23502 30.11141,-21.72435 70.43413,-1.96846 84.61646,28.93036 17.30783,29.8066 14.6291,66.17884 4.57565,97.70146 35.7006,-22.13376 69.16537,-59.53084 114.64555,-56.94879 42.91039,15.32937 18.42215,74.19827 1.54111,102.78406 -25.63493,42.09724 -66.28719,72.32718 -107.75146,97.23619 46.76601,3.14662 97.73191,-13.70971 142.31932,6.81377 42.91421,22.35154 19.51597,77.18149 -19.22777,89.31363 -42.52029,27.3946 -94.97563,29.25503 -143.4325,30.15499 -38.11503,-19.88195 -40.7755,16.72584 -53.22556,42.15506 -33.20255,43.66194 -86.56878,72.04632 -139.93777,78.68025 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4237" d="m 455.02928,443.35759 c 27.02852,-43.20178 -47.79842,-12.76095 0,0 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4235" d="m 439.68357,410.15666 c 39.74075,-9.66401 -14.87008,-64.34819 -41.61812,-47.92932 -22.73924,-3.29495 -39.31548,3.67747 -11.99091,17.10736 18.26426,9.57111 30.07513,43.19299 53.60903,30.82196 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4233" d="M 483.41203,395.08062 C 545.14791,367.1011 606.02242,317.26502 620.51682,247.9668 634.95906,194.5791 568.62014,213.82359 546.88038,235.87649 500.66274,266.12891 462.21385,306.19656 427.576,348.862 c 31.48528,1.01371 28.89695,61.46602 55.83603,46.21862 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4231" d="m 355.5197,354.28706 c 17.25593,-9.52802 47.92107,2.04991 59.65447,-9.54895 18.54851,-35.37034 57.36531,-58.80258 70.12496,-98.55186 16.24497,-39.4433 2.40366,-99.73589 -42.69307,-111.91008 -35.90661,-2.06412 -60.87698,32.43118 -75.14842,61.32436 -5.55526,38.45537 4.48417,78.27864 -1.59749,117.16841 -23.22442,22.36885 -16.05815,-51.54128 -19.35001,-69.46846 5.6411,-42.24081 4.03848,-91.17768 -32.06923,-120.63479 -33.92695,-3.54572 -15.43099,61.068 -15.36397,84.92841 6.66219,47.04008 7.63615,94.60184 10.77007,141.83697 14.5839,3.10423 30.80371,7.97062 45.67269,4.85599 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path d="m 148.40194,535.21589 c -16.47993,-43.45184 -11.76605,-92.90917 -35.23877,-134.3107 -20.169927,-27.99635 -29.519391,-75.62913 -64.733085,-85.1931 -34.603891,1.26674 -26.470707,-25.69605 -0.921814,-30.24634 -9.6744,-29.8243 4.567249,-62.5496 -34.620824,-73.57308 -30.855997,-20.8229 3.59029,-38.4354 26.09375,-31.85943 C 38.441874,133.92186 24.274999,80.213221 55.652544,39.575546 82.998072,1.4165055 135.25419,-0.15267132 177.74738,0.71153125 223.77044,4.5869455 247.42373,58.956358 237.3643,97.222508 175.25544,333.48509 230.94994,56.608307 216.55874,44.246153 187.63156,19.397482 137.52476,13.942602 104.98385,18.964024 57.707529,29.691461 40.021774,83.595422 42.875063,126.9664 c -4.401876,30.45502 -1.825739,67.22232 38.684161,60.22554 31.317166,1.21363 77.910366,14.11024 111.036016,13.27884 76.12765,-1.47801 33.79976,72.42576 -26.97525,55.7626 -36.93367,-0.59052 -73.721982,-10.99339 -109.073968,-17.31162 -10.625466,32.7 16.004527,62.83445 28.8998,91.93152 29.249928,45.66345 55.277858,95.58587 56.092018,151.15397 0.81136,17.80002 3.84546,36.59003 6.8641,53.20864 z" style="fill:none;stroke:#a84a29;stroke-opacity:1" id="path4229"/>     <path id="path4227" d="m 54.489085,302.82291 c -0.176625,-15.6333 -21.244899,5.75284 0,0 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path4223" d="M 205.3917,236.68426 C 243.40176,218.27754 -15.491301,181.66523 25.195042,206.28397 38.03888,214.8964 193.56159,253.9515 205.3917,236.68426 Z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>     <path id="path3376" d="m 90.702998,273.35831 c -14.810002,-31.30892 40.208532,-6.60398 8.6234,3.52839 l -4.819966,-0.61889 -3.802947,-2.9099 -4.87e-4,4e-4 z" style="fill:none;stroke:#a84a29;stroke-opacity:1"/>   </svg> </div> <script>var vTurkey = new Vivus('turkey',{type: 'delayed',start:'autostart',delay:0,duration:500})</script> </body> </html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>The cost of austerity</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
                font-family: Calibri;
                width: 960px;
                margin: 0 auto;
			}

			svg {
				background-color: white;
			}
            .graph {
                position: relative;
                padding-left: 20px;
                padding-right: 20px;
                padding-bottom: 20px;
            }
            svg { float: left;}
            .comment {
                position: absolute;
                top: 60px;
                left: 550px;
                margin: 30px; 
                padding: 5px;
                width: 200px;
                text-align: justify;
            }
            .clear{ clear: both;}
            h2 {
                margin-top: 0;
                font-size: 18px;
                }
            .source {
                font-style: italic;
                margin-top: 0;
                margin-bottom: 0;
            }
            .axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}
            .y.axis path, .y.axis line {
                opacity: 0;
            }
            .bar2010{
                fill: #fed0e7;}
            .bar2013{
                fill: #ff0082;}
            .greece10{
                fill:#add8e6;}
            .greece13{
                fill:#0000ff;}
            a {
                text-decoration: none;
                color: black;}
            a:hover{color: blue;}

		</style>
	</head>
	<body>
            <h1>The social cost of austerity measures in Greece between 2010 and 2013</h1>
        <div class="graph">
            <h2>Severely materially deprived people (% of population)</h2>
            <svg id="svg1"></svg>
            <div class="comment"><p>At the onset of the austerity measures in 2010, Greece had the 3rd largest percentage of people living in extremely precarious conditions.</p>
            <p>Three years later, this proportion had increased dramatically, with Greece now ranking 2nd.</p></div>
            <div class="clear"></div>
            <p class="source"><a href="http://ec.europa.eu/eurostat/data/database">Source : Eurostat</a></p>
        </div>
        <div class="graph">
            <h2>Median equivalized income (in € per year)</h2>
            <svg id="svg2"></svg>
            <div class="comment"><p>The median income, expressed in Euros per year, represents the value which splits the population in half : 50 % of the population earns either more, or less. It is less sensitive to outlying values (i.e. to a few extremely rich individuals in the population) and is thus more representative of the "average" yearly income.</p>
            <p>The Greeks were among the poorest in the Eurozone in 2010 (ranking 13/19), and were even poorer in 2013 (15/19).</p>
            </div>
            <div class="clear"></div>
            <p class="source"><a href="http://ec.europa.eu/eurostat/data/database">Source : Eurostat</a></p>
        </div>
        <div class="graph">
            <h2>Unemployment rate (in % of active population)</h2>
            <svg id="svg3"></svg>
            <div class="comment"><p>A more common indicator, the unemployment rate increased even more dramatically. In Greece between 2010 and 2013, it boomed from 12.7 to 27.5 %.</p></div>
            <div class="clear"></div>
            <p class="source"><a href="http://ec.europa.eu/eurostat/data/database">Source : Eurostat</a></p>
        </div>
        
		<script type="text/javascript">		
            
            //A few variables for the layout
            barH = 5;
            barP = 2;
            legendW = 20;
            legendH = 10;
            W = 500; // Width for the actual graph
            H = 500;
            padding = [30, 130]; // bottom and left only
            RightC = 200; // ... plus some space for the rest.
            Hdenom = 2.5;

            var svg1 = d3.select("#svg1");
            var svg2 = d3.select("#svg2");
            var svg3 = d3.select("#svg3");
            
            svg1.attr("width", W + RightC).attr("height", H);
            svg2.attr("width", W + RightC).attr("height", H);
            svg3.attr("width", W + RightC).attr("height", H);
            
            // Scales
            var Wscale = d3.scale.linear()
                                .range([0, W - padding[1]]);
            var Hscale = d3.scale.ordinal()
                                .rangeRoundBands([0, H - padding[0]]);
            //Axis
            var xAxis = d3.svg.axis()
							.scale(Wscale)
							.orient("bottom");
            
            var yAxis = d3.svg.axis()
							.scale(Hscale)
							.orient("left");
            
            
			d3.csv("greece-dataset.csv", function(data) {
            
            // Graph 1
                data.sort(function(a, b) {
					return d3.descending(+a.materialDeprived13, +b.materialDeprived13);
				});
                Wscale.domain([0, d3.max([
                    d3.max(data, function(d){return +d.materialDeprived10;}),
                    d3.max(data, function(d){return +d.materialDeprived13;})
                ])]);
                Hscale.domain(data.map(function(d) { return d.country; } ));
                svg1.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW,
                                        y: 0,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "lightblue"});
                svg1.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW,
                                        y: 12,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "blue"});
                svg1.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW/2,
                                        y: 0,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "#fed0e7"});
                svg1.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW/2,
                                        y: 12,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "#ff0082"});
                svg1.append("text").attr({x: W + RightC - legendW - 40,
                                          y: 10}).text("2010");
                svg1.append("text").attr({x: W + RightC - legendW - 40,
                                          y: 22}).text("2013");
                svg1.append("g")
                        .attr("transform", "translate(" + padding[1] + ", " + (H - padding[0]) +")")
                        .attr("class", "x axis")
                        .call(xAxis);
                svg1.append("g")
                        .attr("transform", "translate(" + padding[1] + ", 0)")
                        .attr("class", "y axis")
                        .call(yAxis);
                                        
				var G1rects2010 = svg1.selectAll(".materialDeprived10")
								.data(data)
								.enter()
								.append("rect");
                var G1rects2013 = svg1.selectAll(".materialDeprived13")
								.data(data)
								.enter()
								.append("rect");
                var G1text1 = svg1.selectAll(".countries")
                                .data(data)
                                .enter()
                                .append("text");

				G1rects2010.attr("class", function(d){
                        if(d.country=="Greece"){return "bar2010 materialDeprived13 greece10";}
                        else{return "bar2010 materialDeprived13";}
                    })
                    .attr("x", padding[1])
					.attr("y", function(d, i) {
						return i * Hscale.rangeBand();
					})
					.attr("width", function(d) {
						return Wscale(d.materialDeprived10);
					})
					.attr("height", Hscale.rangeBand() / Hdenom);
                
                G1rects2013.attr("class", function(d){
                        if(d.country=="Greece"){return "bar2013 materialDeprived13 greece13";}
                        else{return "bar2013 materialDeprived13";}
                    })
                    .attr("x", padding[1])
					.attr("y", function(d, i) {
						return i * Hscale.rangeBand() + Hscale.rangeBand() / Hdenom;
					})
					.attr("width", function(d) {
						return Wscale(d.materialDeprived13);
					})
					.attr("height", Hscale.rangeBand() / Hdenom)
                    .append("title").text(function(d) { return d.country; });
              
            // Graph 2
                data.sort(function(a, b) {
					return d3.descending(+a.medianIncome13, +b.medianIncome13);
				});
                Wscale.domain([0, d3.max([
                    d3.max(data, function(d){return +d.medianIncome10;}),
                    d3.max(data, function(d){return +d.medianIncome13;})
                ])]);
                Hscale.domain(data.map(function(d) { return d.country; } ));
                svg2.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW,
                                        y: 0,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "lightblue"});
                svg2.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW,
                                        y: 12,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "blue"});
                svg2.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW/2,
                                        y: 0,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "#fed0e7"});
                svg2.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW/2,
                                        y: 12,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "#ff0082"});
                svg2.append("text").attr({x: W + RightC - legendW - 40,
                                          y: 10}).text("2010");
                svg2.append("text").attr({x: W + RightC - legendW - 40,
                                          y: 22}).text("2013");
                svg2.append("g")
                        .attr("transform", "translate(" + padding[1] + ", " + (H - padding[0]) +")")
                        .attr("class", "x axis")
                        .call(xAxis);
                svg2.append("g")
                        .attr("transform", "translate(" + padding[1] + ", 0)")
                        .attr("class", "y axis")
                        .call(yAxis);
                                        
				var G2rects2010 = svg2.selectAll(".medianIncome10")
								.data(data)
								.enter()
								.append("rect");
                var G2rects2013 = svg2.selectAll(".medianIncome13")
								.data(data)
								.enter()
								.append("rect");
                var G2text1 = svg2.selectAll(".countries")
                                .data(data)
                                .enter()
                                .append("text");

				G2rects2010.attr("class", function(d){
                        if(d.country=="Greece"){return "bar2010 medianIncome10 greece10";}
                        else{return "bar2010 medianIncome10";}
                    })
                    .attr("x", padding[1])
					.attr("y", function(d, i) {
						return i * Hscale.rangeBand();
					})
					.attr("width", function(d) {
						return Wscale(d.medianIncome10);
					})
					.attr("height", Hscale.rangeBand() / Hdenom);
                
                G2rects2013.attr("class", function(d){
                        if(d.country=="Greece"){return "bar2013 medianIncome13 greece13";}
                        else{return "bar2013 medianIncome13";}
                    })
                    .attr("x", padding[1])
					.attr("y", function(d, i) {
						return i * Hscale.rangeBand() + Hscale.rangeBand() / Hdenom;
					})
					.attr("width", function(d) {
						return Wscale(d.medianIncome13);
					})
					.attr("height", Hscale.rangeBand() / Hdenom)
                    .append("title").text(function(d) { return d.country; });
                
            // Graph 3
                data.sort(function(a, b) {
					return d3.descending(+a.unemploymentRate13, +b.unemploymentRate13);
				});
                Wscale.domain([0, d3.max([
                    d3.max(data, function(d){return +d.unemploymentRate10;}),
                    d3.max(data, function(d){return +d.unemploymentRate13;})
                ])]);
                Hscale.domain(data.map(function(d) { return d.country; } ));
                svg3.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW,
                                        y: 0,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "lightblue"});
                svg3.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW,
                                        y: 12,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "blue"});
                svg3.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW/2,
                                        y: 0,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "#fed0e7"});
                svg3.append("rect").attr({
                                        class: "legend",
                                        x: W + RightC - legendW/2,
                                        y: 12,
                                        height: legendH,
                                        width: legendW/2,
                                        fill: "#ff0082"});
                svg3.append("text").attr({x: W + RightC - legendW - 40,
                                          y: 10}).text("2010");
                svg3.append("text").attr({x: W + RightC - legendW - 40,
                                          y: 22}).text("2013");
                svg3.append("g")
                        .attr("transform", "translate(" + padding[1] + ", " + (H - padding[0]) +")")
                        .attr("class", "x axis")
                        .call(xAxis);
                svg3.append("g")
                        .attr("transform", "translate(" + padding[1] + ", 0)")
                        .attr("class", "y axis")
                        .call(yAxis);
                                        
				var G3rects2010 = svg3.selectAll(".unemploymentRate10")
								.data(data)
								.enter()
								.append("rect");
                var G3rects2013 = svg3.selectAll(".unemploymentRate13")
								.data(data)
								.enter()
								.append("rect");
                var G3text1 = svg3.selectAll(".countries")
                                .data(data)
                                .enter()
                                .append("text");

				G3rects2010.attr("class", function(d){
                        if(d.country=="Greece"){return "bar2010 unemploymentRate10 greece10";}
                        else{return "bar2010 unemploymentRate10";}
                    })
                    .attr("x", padding[1])
					.attr("y", function(d, i) {
						return i * Hscale.rangeBand();
					})
					.attr("width", function(d) {
						return Wscale(d.unemploymentRate10);
					})
					.attr("height", Hscale.rangeBand() / Hdenom);
                
                G3rects2013.attr("class", function(d){
                        if(d.country=="Greece"){return "bar2013 unemploymentRate13 greece13";}
                        else{return "bar2013 unemploymentRate13";}
                    })
                    .attr("x", padding[1])
					.attr("y", function(d, i) {
						return i * Hscale.rangeBand() + Hscale.rangeBand() / Hdenom;
					})
					.attr("width", function(d) {
						return Wscale(d.unemploymentRate13);
					})
					.attr("height", Hscale.rangeBand() / Hdenom)
                    .append("title").text(function(d) { return d.country; });
                
			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.day {
  fill: #fff;
  stroke: #ccc;
  stroke-width: .5px;
}

.month {
  fill: none;
  stroke: #000;
  stroke-width: 1px;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 20, left: 20},
    width = 960 - margin.left - margin.right,
    height = 700 - margin.top - margin.bottom;

var years = d3.range(2010, 2016).reverse(),
    sizeByYear = height/years.length+1;
    sizeByDay = d3.min([sizeByYear/8,width/54]);

var day = function(d) { return (d.getDay() + 6) % 7; },
    week = d3.time.format("%W"),
    date = d3.time.format("%b %d"),
    parseDate = d3.time.format("%Y-%m-%d").parse;

var color = d3.scale.linear()
    .range(["#f7fcb9","#006837"]);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var year = svg.selectAll(".year")
    .data(years)
  .enter().append("g")
    .attr("class", "year")
    .attr("transform", function(d,i) { return "translate(0," + i * sizeByYear + ")"; });

year.append("text")
    .attr("class", "yearTitle")
    .attr("transform", "translate(-6," + sizeByDay * 3.5 + ")rotate(-90)")
    .attr("text-anchor", "middle")
    .attr("font-weight", "bold")
    .text(function(d) { return d; });

var rect = year.selectAll(".day")
    .data(function(d) { return (d === 2015) ? d3.time.days(new Date(d, 0, 1), new Date(d , 10, 6)) : d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
  .enter().append("rect")
    .attr("class", "day")
    .attr("width", sizeByDay)
    .attr("height", sizeByDay)
    .attr("x", function(d) { return week(d) * sizeByDay; })
    .attr("y", function(d) { return day(d) * sizeByDay; });

year.selectAll(".month")
    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
  .enter().append("path")
    .attr("class", "month")
    .attr("d", monthPath);

rect.append("title")
    .text(function(d) { return date(d); });

d3.json("data.json", function(data) {
  
  var nested_data = d3.nest()
    .key(function(d) { return parseDate(d.created_at.split("T")[0]); })
    .rollup(function(leaves) { return leaves.length; })
    .map(data);

  color.domain(d3.extent(d3.values(nested_data)));

  rect.filter(function(d){ return d in nested_data; })
      .style("fill", function(d){ return color(nested_data[d]); })
    .select("title")
      .text(function(d){ return date(d) + ": " + nested_data[d]; });

});

function monthPath(t0) {
  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
      d0 = +day(t0), w0 = +week(t0),
      d1 = +day(t1), w1 = +week(t1);
  return "M" + (w0 + 1) * sizeByDay + "," + d0 * sizeByDay
      + "H" + w0 * sizeByDay + "V" + 7 * sizeByDay
      + "H" + w1 * sizeByDay + "V" + (d1 + 1) * sizeByDay
      + "H" + (w1 + 1) * sizeByDay + "V" + 0
      + "H" + (w0 + 1) * sizeByDay + "Z";
};

d3.select(self.frameElement).style("height", (height + margin.top + margin.bottom) + "px");

</script><!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Inline Style Examples</title>
    <style>
    body {
      background: #222;
      margin: 0;
    }
    </style>
  </head>
  <body>
    <div id="root"></div>
    <script src="https://jspm.io/system@0.19.js"></script>
    <script>
      System.config({
        baseURL: '.',
        transpiler: 'babel',
        babelOptions: {
          optional: [
            'runtime'
          ],
          blacklist: []
        },
        map: {
          'radium': 'npm:radium@0.16.5',
          'react': 'npm:react@0.14.7',
          'react-dom': 'npm:react-dom@0.14.7',
        },
        paths: {
          '*': '*.js'
        }
      });
      System.import('Main');
    </script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.line {
  fill: none;
  stroke-width: 1.5px;
}

.label {
  text-anchor: middle;
}

.label rect {
  fill: white;
}

.label-key {
  font-weight: bold;
}

</style>
<svg width="960" height="500"></svg>
<script src="//d3js.org/d3.v4.0.0-alpha.9.min.js"></script>
<script>

var parseTime = d3.timeParse("%Y");

var svg = d3.select("svg");

var margin = {top: 30, right: 50, bottom: 30, left: 30},
    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom,
    labelPadding = 3;

var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.requestTsv("data.tsv", function(d) {
  d.date = parseTime(d.date);
  for (var k in d) if (k !== "date") d[k] = +d[k];
  return d;
}, function(error, data) {
  if (error) throw error;

  var series = data.columns.slice(1).map(function(key) {
    return data.map(function(d) {
      return {
        key: key,
        date: d.date,
        value: d[key]
      };
    });
  });

  var x = d3.scaleTime()
      .domain([data[0].date, data[data.length - 1].date])
      .range([0, width]);

  var y = d3.scaleLinear()
      .domain([0, d3.max(series, function(s) { return d3.max(s, function(d) { return d.value; }); })])
      .range([height, 0]);

  var z = d3.scaleCategory10();

  g.append("g")
      .attr("class", "axis axis--x")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x));

  var serie = g.selectAll(".serie")
      .data(series)
    .enter().append("g")
      .attr("class", "serie");

  serie.append("path")
      .attr("class", "line")
      .style("stroke", function(d) { return z(d[0].key); })
      .attr("d", d3.line()
          .x(function(d) { return x(d.date); })
          .y(function(d) { return y(d.value); }));

  var label = serie.selectAll(".label")
      .data(function(d) { return d; })
    .enter().append("g")
      .attr("class", "label")
      .attr("transform", function(d, i) { return "translate(" + x(d.date) + "," + y(d.value) + ")"; });

  label.append("text")
      .attr("dy", ".35em")
      .text(function(d) { return d.value; })
    .filter(function(d, i) { return i === data.length - 1; })
    .append("tspan")
      .attr("class", "label-key")
      .text(function(d) { return " " + d.key; });

  label.append("rect", "text")
      .datum(function() { return this.nextSibling.getBBox(); })
      .attr("x", function(d) { return d.x - labelPadding; })
      .attr("y", function(d) { return d.y - labelPadding; })
      .attr("width", function(d) { return d.width + 2 * labelPadding; })
      .attr("height", function(d) { return d.height + 2 * labelPadding; });
});

</script>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3-geo-projection/0.2.9/d3.geo.projection.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.min.js"></script>
  <script src="trackball.js"></script>
  <style>
    body { 
      margin:0;position:fixed;top:0;right:0;bottom:0;left:0; 
      background-color: #111;
    }
    svg { width: 100%; height: 100%; }
    .graticule {
      fill: none;
      stroke: #777;
      stroke-width: .5px;
      stroke-opacity: .5;
    }

    .land {
      fill: #045728;
    }

    .boundary {
      fill: none;
      stroke: #fff;
      stroke-width: .5px;
    }
    circle {
      fill: #93fff4;
      pointer-events: none;
    }
  </style>
</head>

<body>
  <svg></svg>
  <script>
    var width = 960;
    var height = 500;
    var svg = d3.select("svg");
    
    var scale = (width - 1) / 2 / Math.PI * 3
    
    var projection = d3.geo.orthographic()
    .scale(scale)
    .translate([width / 2, height / 2])
    .clipAngle(90)
    .precision(.1);
    
    var zoom = d3.behavior.zoom()
    .translate([width / 2, height / 2])
    .scale(scale)
    .scaleExtent([scale, 8 * scale])
    .on("zoom", zoomed)

    var path = d3.geo.path()
        .projection(projection);

    var graticule = d3.geo.graticule();
    svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);
    
    d3.json("world-110m.json", function(err, world) {
      svg.append("path")
        .datum(topojson.feature(world, world.objects.land))
        .attr("class", "land")
        .attr("d", path);

      svg.append("path")
        .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
        .attr("class", "boundary")
        .attr("d", path);
      
    })
    
    svg.call(zoom)
      .call(zoom.event);
    
    function zoomed() {
      projection
        .scale(zoom.scale())
      
			update(projection.rotate());
    }

    d3.behavior.trackball(svg).on("rotate", update);
		function update(rot) {
			//update the rotation in our projection
      
      projection.rotate(rot);
      
      d3.selectAll("path")
      .attr("d", path);
      
      //console.log("updating circles")
      makePoints();
      
    }

    
    svg.on("mousemove.circles", makePoints);
           
    function makePoints() {
      var xy = d3.mouse(svg.node());
      var latlon = projection.invert(xy)
      if(isNaN(latlon[0]) || isNaN(latlon[1])) {
        return;
      }
      //console.log("xy", xy, "latlon", latlon)
      
      //rounding to degree (whole numbers)
      var p = [round(latlon[0]), round(latlon[1])];
      var points = generateSquare(p[0], p[1], 20, 1);
      console.log("points", points[0])
      var rxy = projection(p);
      
      var circles = svg.selectAll("circle").data(points)
      circles.enter().append("circle")
      circles
      .attr({
        r: function(d) { return 3 },
        "fill-opacity": function(d) { return 1-d.d/10 },
        cx: function(d) { return projection([d.x, d.y])[0] },
        cy: function(d) { return projection([d.x, d.y])[1] }
      })
    }
    
    function generateSquare(cx, cy, width, step) {
      //generate points that fill in a square around a center
			var nside = Math.floor(width / step + 0.5); //rounded
      var points = [];
      for(var i = 0; i < nside; i++) {
        for(var j = 0; j < nside; j++) {
          var x = cx - width/2 + i * step;
          var y = cy - width/2 + j * step;
          points.push({
            x: x,
            y: y,
            d: Math.sqrt((cx-x)*(cx-x) + (cy-y)*(cy-y))
          })
        }
      }
      return points;
    }

    function round(deg, decimals) {
      if(!decimals) decimals = 0;
      var factor = Math.pow(10, decimals);
      return Math.floor(deg * factor + 0.5)/factor;
    }
    //hover over space in the globe, see circles at rounded locations
    // transition in size
    console.log(round(77.213, 2))
    
    //place rounded navigator.geolocation on globe using pubnub
    
    navigator.geolocation.getCurrentPosition(function(position) {
      // this doesn't seem to work in blockbuilder.org because of the
      // iframe sandboxing
      console.log("position", position);
    });

  </script>
</body>
<div class="box red"></div>
<div class="box blue"></div>
<div class="box red"></div>
<div class="box blue"></div>
<div class="box red"></div>
<div class="box blue"></div>
<div class="box red"></div>
<div class="box blue"></div>

<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
</head>

<body>
  <svg></svg>
  <script>
    // http://slavevoyages.org/tast/assessment/estimates.faces
    d3.tsv("slavery.tsv", function(err, data) {
      var countries = Object.keys(data[0]).slice(1,7);
      countries = [
        "Portugal",
        "Great Britain",
        "France",
        "Spain",
				"Netherlands",
				"U.S.A.",
      ]
      var countryData = {}
      countries.forEach(function(country) {
        countryData[country] = data.map(function(d) {
          return parseInt(d[country].replace(/,/g, ''));
        })
      })
      console.log(countries)
      console.log(data[0]);
      var width = 960;
      var height = 500;
      
      var lineHeight = 211;
      var lineOffset = 21;
      
      var chartHeight = 350;
      
      var color = d3.scale.ordinal()
      .domain(d3.range(countries.length))
      .range([
        "#7C938D",
        "#544C36",
        "#BB976E",
        "#A4B284",
        "#5E6560",
        "#7A8868",
        "#9AB7B5"
      ])

      
      var svg = d3.select("svg")
      .attr({width: width, height: height });
      
      var xscale = d3.scale.linear()
      //.domain(d3.extent(data, function(d) { return +d.year }))
      .domain([0, data.length])
      .range([140, width - 20])
      
      var yscale = d3.scale.linear()
      .domain([0, d3.max(countries, function(country) {
        return d3.max(countryData[country])
      })])
      .range([lineHeight, 0])
      
      var area = d3.svg.area()
        .x(function(d,i) { return xscale(i); })
        .y0(function(d) { return lineHeight; })
        .y1(function(d) { return yscale(d); })
        .interpolate("basis")

      var xaxis = svg.selectAll("g.year")
      .data(data)
      .enter()
      .append("g").classed("year", true)
      .attr({
        transform: function(d,i) {
          return "translate(" + [xscale(i), chartHeight] + ")"
        }
      })
      .style({
        "display": function(d,i) { return i % 20 == 0 ? "": "none" },
        "font-size": "10px"
      })
      xaxis
      .append("line").attr({
        x1: 0,
        y1: 0,
        x2: 0,
        y2: -chartHeight,
        stroke: "#f7f7f7",

      })
      xaxis
      .append("text")
        .text(function(d) { return d.year })
        .attr("transform", "rotate(0)translate(-10,12)")
      
      var legend = svg.selectAll("g.country")
      .data(countries)
      .enter()
      .append("g").classed("country", true)
        .attr("transform", function(d,i) {
          return "translate(" + [20, 205 + i * lineOffset] + ")";
        })
        .style({
          fill: function(d,i) { return color(i) },
          "font-family": "Helvetica"
        })
        .append("text")
      	.text(function(d) { return d })
      

      var groups = svg.selectAll("g.countries")
        .data(countries)
        .enter().append("g").classed("countries", true)
        .attr({
          transform: function(d,i) { return "translate(" + [0, i * lineOffset] + ")" },
          fill: function(d,i) { return color(i) },
        })
      
      var areas = groups.selectAll("path.country")
      	.data(function(d) { return [countryData[d]] })
      areas
        .enter()
        .append("path").classed("country", true)
        .attr("d", function(d) {
          return area(d)
        })
      
      
      
    })
  </script>
</body>


<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var width = 960,
    height = 900,
    margin = 40,
    maxRadius = (height/2) - margin;

var formatDate = d3.time.format("%Y-%m-%d"),
	monthNameFormat = d3.time.format("%b");

var ticks = [-20,-10,0,10,20,30,40];

var x = d3.scale.linear()
  .domain([-20, 40])
  .range([120, maxRadius]);

var xAxis = d3.svg.axis()
  .scale(x).orient("left")
  .tickValues([-20,0,20,40])
  .tickFormat(function(d) { return d + "°C"; });

var r = d3.scale.linear()
  .domain([0,50])
  .range([0, maxRadius/4]);

var color = d3.scale.linear()
  .domain(ticks)
  .range(["#00375a","#1b6491","#52b7e7","#96d88c","#fbd65f","#e46c56","#9e3b2c"]);

var svg = d3.select('body').append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width/2 + "," + height/2 + ")");

d3.csv("ldn.csv", function(error, data) {

  data.forEach(function(d) {
    d["date"] = formatDate.parse(d["date"]);
    d["Min TemperatureC"] = +d["Min TemperatureC"];
	  d["Max TemperatureC"] = +d["Max TemperatureC"];
	  d["Mean TemperatureC"] = +d["Mean TemperatureC"];
	  d["Precipitationmm"] = (d["Precipitationmm"] === "T") ? 0 : +d["Precipitationmm"];
  });

  var arc = d3.svg.arc()
    .startAngle(function(d) { return 0; })
	  .endAngle(function(d) { return ((2 * Math.PI) / (data.length)); })
	  .innerRadius(function(d) { return x(d["Min TemperatureC"]); })
	  .outerRadius(function(d) { return x(d["Max TemperatureC"]); });

  var months = d3.map(data, function(d) {
    return monthNameFormat(d["date"]);
  }).keys();

  var monthTicks = svg.append("g")
  	.attr("class","monthTicks");

  monthTicks.selectAll(".monthTick")
	  .data(months)
   .enter().append("g")
	  .attr("class","monthTick")
	  .attr("transform", function(d, i) { return "rotate(" + (i * 360 / months.length) + ")"; });
 
  monthTicks.selectAll(".monthTick")
    .append("line")
    .attr("y1", -maxRadius - 5)
    .attr("y2", -maxRadius - 30)
    .style("stroke", "#d6d6d6")
    .style("stroke-width",2);

  monthTicks.selectAll(".monthTick").append("text")
    .attr("x", 8)
    .attr("y", -maxRadius - 15)
    .style("font-size",15)
    .style("fill","#d6d6d6")
    .style("font-family","monospace")
    .style("text-anchor", "begin")
    .text(function(d) { return d; });

  var tickCircles = svg.append("g")
    .attr("class","ticksCircle");
  	
  tickCircles.selectAll("circle")
    .data(ticks)
   .enter().append("circle")
	  .attr("r", function(d) {return x(d);})
    .style("fill", "none")
	  .style("stroke", "#d6d6d6")
    .style("stroke-width", function(d,i) { return ((i & 1) === 0) ? 1 : 0.25; });

  var temperatures = svg.selectAll(".temperature")
    .data(data)
   .enter().append("g")
    .attr("class","temperature")
    .attr("transform", function(d, i) { return "rotate(" + (i * 360 / data.length) + ")"; });

  temperatures.append("path")
    .style("stroke", "white")
    .style("stroke-width",1.2)
    .style("fill", function(d) { return color(d["Mean TemperatureC"]); })
    .attr("d", arc);

  var precipitations = svg.selectAll(".precipitation")
    .data(data)
   .enter().append("g")
    .attr("class","precipitation")
	  .attr("transform", function(d, i) { return "rotate(" + (i * 360 / data.length) + ")"; });

  precipitations.append("circle")
    .attr("cx",0)
    .attr("cy",function(d) { return -x(d["Mean TemperatureC"]); })
	  .attr("r", function(d) { return r(d["Precipitationmm"]); })
	  .style("opacity", .15)
  	.style("fill", "#5c82b9");

  var legend = svg.append("g")
    .attr("class", "legend");

  legend.append("text")
    .attr("dy", ".35em")
  	.style("font-size",70)
  	.style("fill","#454545")
  	.style("font-family","monospace")
    .style("text-anchor", "middle")
    .text("London");

  svg.append("g")
    .attr("class", "x axis")
    .call(xAxis)
   .selectAll("text")
    .style("fill","#454545")
    .style("text-anchor","middle");

});

d3.select(self.frameElement).style("height", height + "px");

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>How much is thirteen to twenty-seven?</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Verdana;
			}

			svg {
				background-color: white;
			}

			circle {
				fill: rgb(60, 161, 189);
			}

			circle:hover { 
				fill: rgb(33, 93, 109);
			}

			text {
				fill: black;
			}

			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

		</style>
	</head>
	<body>

		<h2>How much is thirteen to twenty-seven?</h2>
		<p>This dataset gives an insight about the mathematics skills of boys and girls across 37 OECD countries. Each circle represent a country, placed according to boys' score on y axis and girls' score on x axis. </p>

		<script type="text/javascript">	

			var w = 500
			var h = 500

			var padding = [ 50, 50, 50, 50 ];  //Top, right, bottom, left


			var xScale = d3.scale.linear()
							.range ([ 0, w - padding[1] - padding[3] ]);

			var yScale = d3.scale.linear()
							.range ([ 0, h - padding[0] - padding[2] ]);

			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(15);

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
							.ticks(15);

			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("OECD_ISA_2012.csv", function(data) {

				data.sort(function(a,b){
					return d3.ascending (a.mathGirls, b.mathGirls);
				})

				xScale.domain([ 
					d3.min(data, function(d) {
						return +d.mathGirls;
					}), 
					d3.max(data, function(d) {
						return +d.mathBoys;
					})
				]);

				yScale.domain([
					d3.max(data, function(d) {
						return +d.mathBoys;
					}),
					d3.min(data, function(d) {
						return +d.mathGirls;
					})
				]);

			svg.append("line")
				.attr("x1", padding[3])
				.attr("y1", (h - padding[2]))
				.attr("x2", (w - padding[1])) 
				.attr("y2", padding[0])
				.attr("stroke", "black")
				.attr("stroke-width","1");

			svg.append("text")
				.attr("x", (padding[3] + 20))
				.attr("y", (padding[0] + 12))
				.attr("text-anchor", "start")
				.attr("font-size", 12)
				.text("Boys performed better")


			svg.append("text")
				.attr("x", (w - padding[1]))
				.attr("y", (h - padding[2] - 20))
				.attr("text-anchor", "end")
				.attr("font-size", 12)
				.text("Girls performed better")

			svg.append("g")
				.attr("class", "x axis")
				.attr("transform", "translate(" + (padding[3]) + "," + (h - padding[0]) + ")")
				.call(xAxis);

			svg.append("g")
				.attr("class", "y axis")
				.attr("transform", "translate(" + (padding[3]) + ", " + (padding[0]) + ")")
				.call(yAxis);

			var circles = svg.selectAll("circle")
					.data(data)
					.enter()
					.append("circle")


				circles.attr("cx", function(d){
						return xScale(d.mathGirls)+padding[3];
					})
					.attr("cy", function(d, i){
						return yScale(d.mathBoys)+padding[2];
					})
					.attr("r", 4)
					.append("title")
					.text(function(d){
						return d.country+": girls scored "+d.mathGirls+" points ; boys scored "+d.mathBoys+" points"
					});

			// var labels = svg.selectAll("text")
			// 		.data(data)
			// 		.enter()
			// 		.append("text")

			// 	labels.attr("x", 10)
			// 		.attr("y", function(d, i){
			// 			return i * heightScale.rangeBand()+heightScale.rangeBand()*0.7;
			// 		})
			// 		.attr("font-size", function(d){
			// 			return heightScale.rangeBand()*0.7;
			// 		})
			// 		.text(function(d){
			// 			return d.country;
			// 		})

			});

		</script>

	</body>
</html><!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<title>Capital</title>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
	<style type="text/css">
		body {
			margin: 0;
			background-color: white);
			font-family: Helvetica, Arial, sans-serif;
		}

		#container {
			width: 850px;
			margin-left: auto;
			margin-right: auto;
			margin-top: 30px;
			padding: 50px 0px 50px 100px;
			background-color: white;
			box-shadow: 2px 2px 7px 3px #E5E5E5;
		}

		#chart {
			opacity: 1;
		}

		.legend {
			opacity: 0;
		}

		h1 {
			font-size: 26px;
			margin: 0;
		}

		p {
			font-size: 14px;
			font-style: italic;
			margin: 5px 0 0 0;
		}

		p.title {
			font-size: 14px;
			margin: 5px 0 10px 0;
		}

		svg {
			background-color: white;
		}

		rect:hover {
			opacity: .7;
		}

		rect.title {
			stoke: black;
		}

		.legend text {
			font-size: 14px;
		}

		.axis path {
			fill: none;
		}

		.axis line {
			stroke: black;
			stroke-width: 1;
			shape-rendering: crispEdges;
		}

		.axis text {
			font-family: Helvetica, sans-serif;
			font-size: 14px;
			font-weight: 600;
		}

		.x.axis path,
		.x.axis line {
			opacity: 0;
		}
	</style>

</head>

<body>
	<div id="container">
		<h1>Three Common Types of Capital Wealth: 1770–1810</h1>
		<p class="title">Capital Wealth as a percentage of each country's annual national income</p>
		<br>
		<div id="chart"></div>
		<p>
			<strong>Source:</strong> <a href="http://piketty.pse.ens.fr/en/capital21c2"><i>Capital in the 21st century</i></a></p>
	</div>

	<script type="text/javascript">
		//Width and height
		var margin = {
			top: 20,
			right: 20,
			bottom: 20,
			left: 20
		};
		var w = 800;
		var h = 500;
		var padding = [0, 10, 70, 30]; //Top, right, bottom, left



		var color = d3.scale.ordinal()
			.range(["lightgray", "gray", "red"]);

		//Create SVG element
		var svg = d3.select("#chart")
			.append("svg")
			.attr("width", w + margin.left + margin.right)
			.attr("height", h + margin.top + margin.bottom);

		d3.csv("capitaloldvsnewworld.csv", function(data) {
			var headers = ["agriculturalLand", "housing", "slaves"]
			var labels = ["Agricultural Land", "Housing", "Slaves"]
			var stack = d3.layout.stack()
				(headers.map(function(capitalType) {
					return data.map(function(d) {
						return {
							x: d.countryName,
							y: +d[capitalType]
						};
					});
				}));


			var xScale = d3.scale.ordinal()
				.domain(stack[0].map(function(d) {
					return d.x;
				}))
				.rangeRoundBands([0 + padding[3], w], 0.3);

			var yScale = d3.scale.linear()
				.domain([0,
					d3.max(stack, function(d) {
						return d3.max(d, function(d) {
							return d.y0 + d.y;
						});
					})
				])
				.range([h, 0]);

			// Add a group for each row of data
			var groups = svg.selectAll("g")
				.data(stack)
				.enter()
				.append("g")
				.style("fill", function(d, i) {
					return color(i);
				});


			//console.log(data);

			// Add a rect for each data value
			var rects = groups.selectAll("rect")
				.data(function(d) {
					return d;
				})
				.enter()
				.append("rect")
				.attr("x", function(d) {
					return xScale(d.x);
				})
				.attr("width", xScale.rangeBand())
				.attr("y", function(d) {
					return yScale(d.y0 + d.y);
				})
				.attr("height", function(d) {
					return yScale(d.y0) - yScale(d.y + d.y0);
				})
				.append("title").text(function(d, i) {
					return d.y + "% of annual national wealth";
				});



			d3.select("#chart").transition()
				.delay(50)
				.duration(2000)
				.styleTween("opacity", function() {
					return d3.interpolate("0", "1");
				});




			var xAxis = d3.svg.axis()
				.scale(xScale)
				.orient("bottom");

			svg.append("g")
				.attr("class", "x axis")
				.attr("transform", "translate(0," + h + ")")
				.call(xAxis);

			var yAxis = d3.svg.axis()
				.scale(yScale)
				.orient("left")
				.tickSize(-10)
				.tickValues([0, 100, 200, 300, 400, 500, 600, 700, 800]);

			svg.append("g")
				.attr("class", "y axis")
				.attr("transform", "translate(" + padding[3] + ",0)")
				.call(yAxis);

			var legend = svg.selectAll(".legend")
				.data(color.domain().slice().reverse())
				.enter().append("g")
				.attr("class", "legend")
				.attr("transform", function(d, i) {
					return "translate(-50," + i * 20 + ")";
				});

			legend.append("rect")
				.attr("x", w / 2 + 230)
				.attr("width", 18)
				.attr("height", 18)
				.style("fill", color);

			legend.selectAll("text .legend").data([labels.slice().reverse()])
				.enter().append("text")
				.attr("x", w / 2 + 250)
				.attr("y", 9)
				.attr("dy", ".35em")
				.style("text-anchor", "begin")
				.text(function(d, i, j) {
					return d[j];
				});

			legend.transition()
				.delay(1000)
				.duration(2000)
				.styleTween("opacity", function() {
					return d3.interpolate("0", "1");
				});


			//NOT WORKING
			//Change color of United States (South) and United States (North)
			rects.filter(function(d) {
					if (d.countryName == "United States (North)" ||
						d.countryName == "United States (South)") {
						return true;
					} else {
						return false;
					}
				})
				.attr("fill", "gainsboro");

		});
	</script>
</body>

</html>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.10.1/lodash.js"></script>
  <script src="timechart.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width: 100%; height: 100%; }
.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.dot {
  fill: steelblue;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

rect.pane {
  cursor: move;
  fill: none;
  pointer-events: all;
}


  </style>
</head>

<body>
  <div id="controls">
    <input id="slider1" type="range" min="0" max="100" value="50">
    <input id="slider2" type="range" min="0" max="100" value="50">
  </div>
  <div id="viz"></div>
  <script>
    var startDate = new Date("2001-10-01"),
        rHour = -0.0406079999999997,
        rDay = 0.1;
    var days = d3.range(0, 366, 1),
        hours = d3.range(0, 24, 1);
    var data = compute(+d3.select('#slider1').property('value')/100,
                  	    +d3.select('#slider2').property('value')/100);
    
    d3.select('#slider1').on('input', render);
    
    d3.select('#slider2').on('input', render);
    
		function render () {
      data = compute(+d3.select('#slider1').property('value')/100,
                  	 +d3.select('#slider2').property('value')/100);
      console.log(data[0]);
      chart.data([{
          key: 'obs',
          label: 'Obs',
          color: 'forestgreen',
          opacity: 0.5,
          primary: true,
          values: data
      }]);
      d3.select('#viz').call(chart);
    }
    var chart = timeChart()
    	.data([{
        key: 'obs',
        label: 'Obs',
        color: 'forestgreen',
        opacity: 0.5,
        primary: true,
        values: data
      }]);
    
    d3.select('#viz').call(chart);
    

    function compute(rDay, rHour) {
      return _.flatten(days.map(function(d) {
        return hours.map(function (h) {      
          var datetime = d3.time.hour.offset(d3.time.day.offset(startDate, d), h),
              value = Math.random()*rDay*Math.sin(2*Math.PI*(d)/365) +
                      Math.random()*Math.sin(2*Math.PI*(h/24*rHour));
          return [datetime, value];
        });
      }));
    }
    
    
    
function timeChart () {
  var margin = {top: 20, right: 20, bottom: 30, left: 50},
      width = 960 - margin.left - margin.right,
      height = 450 - margin.top - margin.bottom,
      x = d3.time.scale().range([0, width]),
      y = d3.scale.linear().range([height, 0]),
      xAxis = d3.svg.axis().scale(x).orient('bottom'),
      yAxis = d3.svg.axis().scale(y).orient('left'),
      xAccessor = function (d) { return d[0]; },
      yAccessor = function (d) { return d[1]; },
      yLabel = '',
      bisectDate = d3.bisector(xAccessor).left,
      numberFormat = d3.format('.1f'),
      dateFormat = d3.time.format('%Y-%m-%d %H:%M'),
      focus,
      data,
      showBand = true,
      svg, g, container,
      onZoom = function () {};

  var area = d3.svg.area()
    .x(function (d) { return x(xAccessor(d)); })
    .y0(function (d) { return y(d.max); })
    .y1(function (d) { return y(d.min); })
    .interpolate('step-after');

  var line = d3.svg.line()
    .x(function (d) { return x(xAccessor(d)); })
    .y(function (d) { return y(yAccessor(d)); })
    .interpolate('step-after');

  var zoom = d3.behavior.zoom()
    .scaleExtent([1, 80])
    .on('zoom', zoomed);

  var customTimeFormat = d3.time.format.multi([
    ['.%L', function (d) { return d.getMilliseconds(); }],
    [':%S', function (d) { return d.getSeconds(); }],
    ['%I:%M', function (d) { return d.getMinutes(); }],
    ['%I %p', function (d) { return d.getHours(); }],
    ['%b %d', function (d) { return d.getDay() && d.getDate() != 1; }],
    ['%b %d', function (d) { return d.getDate() != 1; }],
    ['%b %Y', function (d) { return d.getMonth(); }],
    ['%Y', function () { return true; }]
  ]);
  xAxis.tickFormat(customTimeFormat).ticks(5);

  function chart (el) {
    if (el.selectAll('svg').empty()) {

      svg = el
        .append('svg')
          .attr('height', height + margin.top + margin.bottom)
          .attr('width', width + margin.left + margin.right)
        .append('g')
          .attr('transform', 'translate(' + margin.left + ',' +
                                            margin.top + ')');

      svg.append('clipPath')
          .attr('id', 'clip')
        .append('rect')
          .attr('x', 0)
          .attr('y', 0)
          .attr('width', width)
          .attr('height', height);

      svg.append('g')
        .attr('class', 'x axis')
        .attr('transform', 'translate(0,' + height + ')');

      svg.append('g')
        .attr('class', 'y axis')
        .append('text')
          .attr('transform', 'rotate(-90)')
          .attr('y', 6)
          .attr('dy', '.71em')
          .style('text-anchor', 'end')
          .text(yLabel);

      container = svg.append('g')
        .attr('class', 'data')
        .attr('clip-path', 'url(#clip)');

      container.append('g').attr('class', 'areas');
      container.append('g').attr('class', 'lines');
      container.append('g').attr('class', 'points');
      container.append('g').attr('class', 'ref-lines');

      focus = svg.append('g')
          .attr('class', 'focus')
          .style('display', 'none');

      focus.append('circle')
          .style('fill', 'none')
          .style('stroke', 'steelblue')
          .attr('r', 4.5);

      focus.append('text')
          .attr('x', 9)
          .attr('dy', '.35em');

      svg.append('rect')
        .attr('width', width)
        .attr('height', height)
        .attr('class', 'pane')
        .on('mouseover', function () { focus.style('display', null); })
        .on('mouseout', function () { focus.style('display', 'none'); })
        .on('mousemove', mousemove)
        .call(zoom);
    }

    zoomed();
  }

  function zoomed() {
    if (data) {
      var xExtent = data.map(function (d) {
        return d3.extent(d.values, xAccessor);
      });
      xExtent = d3.extent(_.flatten(xExtent));

      // clamp x-axis zoom
      if (x.domain()[0] < xExtent[0]) {
        zoom.translate([zoom.translate()[0] - x(xExtent[0]) + x.range()[0],
                        zoom.translate()[1]]);
      } else if (x.domain()[1] > xExtent[1]) {
        zoom.translate([zoom.translate()[0] - x(xExtent[1]) + x.range()[1],
                        zoom.translate()[1]]);
      }

      var yExtent = data.map(function (d) {
        if (d.showBand) {
          var yMin = data.map(function (d) {
            return d3.extent(d.values, function (d) { return d.min; });
          });
          var yMax = data.map(function (d) {
            return d3.extent(d.values, function (d) { return d.max; });
          });
          return [d3.min(_.flatten(yMin)), d3.max(_.flatten(yMax))];
        } else {
          return d3.extent(d.values, yAccessor);
        }
      });
      yExtent = d3.extent(_.flatten(yExtent));

      y.domain(yExtent);

      onZoom(x.domain());

      svg.select('.x.axis')
        .call(xAxis);

      svg.select('.y.axis')
          .call(yAxis);

      var areas = container.select('g.areas')
        .selectAll('.area')
        .data(data.filter(function (d) { return d.showBand; }));

      areas.enter().append('path')
        .attr('class', 'area')
        .attr('fill', 'gray')
        .style('opacity', 0.25);

      areas.attr('d', function (d, i) {
        return area(d.values, i);
      });

      areas.exit().remove();

      var gLines = container.select('g.lines')
        .selectAll('.line')
        .data(data);

      gLines.enter().append('path')
        .attr('class', 'line');

      gLines.attr('d', function (d, i) {
          return line(d.values, i);
        })
        .style('stroke', function (d) {
          return d.color || 'orangered';
        })
        .style('opacity', function (d) {
          return d.opacity || 0.5;
        });

      gLines.exit().remove();
      
      
      var gPoints = container.select('g.points')
        .selectAll('.point')
        .data(data[0].values);

      gPoints.enter().append('circle')
        .attr('class', 'point');

      gPoints.attr('cx', function (d) { return x(xAccessor(d)); })
	      .attr('cy', function (d) { return y(yAccessor(d)); })
      	.attr('r', function (d) { return Math.pow(Math.max(0, -10*yAccessor(d))+1, 2);})
      	.attr('opacity', function (d) { return (Math.random()+2)*y(yAccessor(d)); })
        .attr('fill', 'deepskyblue');

      gPoints.exit().remove();
    }
  }

  function mousemove() {
    var mouseDate = x.invert(d3.mouse(this)[0]);

    // filter series
    var filtered = data.filter(function (d) {
      return mouseDate >= d.extent[0] && mouseDate <= d.extent[1];
    });

    if (filtered.length > 0) {
      var series = filtered[0];
      var i = bisectDate(series.values, mouseDate, 1);

      var d;
      if (i === 0) {
        d = series.values[0];
      } else {
        var d0 = series.values[i - 1],
            d1 = series.values[i];

        // d = mouseDate - xAccessor(d0) > xAccessor(d1) - mouseDate ? d1 : d0;
        d = d0;
      }
      focus.attr('transform',
                 'translate(' + x(mouseDate) + ',' +
                                y(yAccessor(d)) + ')');
      var text = dateFormat(mouseDate) + ' | ' + numberFormat(yAccessor(d));

      focus.style('display', null);
      focus.select('text').text(text);

      var textWidth = focus.node().getBBox().width,
          mouseX = d3.mouse(this)[0],
          xWidth = x.range()[1];

      // flip/flop text side
      if (textWidth + mouseX > xWidth) {
        focus.select('text')
          .attr('text-anchor', 'end')
          .attr('x', -9);
      } else {
        focus.select('text')
          .attr('text-anchor', 'start')
          .attr('x', 9);
      }
    } else {
      focus.style('display', 'none');
    }
  }

  chart.width = function (_) {
    if (!arguments.length) {
      return width;
    }
    width = _ - margin.left - margin.right;
    x.range([0, width]);
    return chart;
  };

  chart.height = function (_) {
    if (!arguments.length) {
      return height;
    }
    height = _ - margin.top - margin.bottom;
    y.range([height, 0]);
    return chart;
  };

  chart.x = function (_) {
    if (!arguments.length) {
      return xAccessor;
    }
    xAccessor = _;
    bisectDate = d3.bisector(xAccessor).left;
    return chart;
  };

  chart.y = function (_) {
    if (!arguments.length) {
      return yAccessor;
    }
    yAccessor = _;
    return chart;
  };

  chart.yLabel = function (_) {
    if (!arguments.length) {
      return yLabel;
    }
    yLabel = _;
    return chart;
  };

  chart.data = function (__) {
    if (!arguments.length) {
      return data;
    }
    data = __;

    var oldTranslate = zoom.translate(),
        oldScale = zoom.scale();

    data.forEach(function (d) {
      d.extent = d3.extent(d.values, xAccessor);
    });

    x.domain(d3.extent(_.flatten(_.pluck(data, 'extent'))));
    zoom
      .x(x)
      .translate(oldTranslate)
      .scale(oldScale);
    return chart;
  };

  chart.onZoom = function (_) {
    if (!arguments.length) {
      return onZoom;
    }
    onZoom = _;
    return chart;
  };

  return chart;
}
  </script>
</body>

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Mercator projection</title>
		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
        <script src="//d3js.org/topojson.v1.min.js"></script>        
		<style type="text/css">



			body {
				background-color: gray;
			}
            h1 {
                font-family: "Droid Sans";
                font-size: 32px;
                text-align: center;
            }
            p {
                font-family: "Droid Sans";
                font-size: 14px;
                text-align: center;
            }

			svg {
				background-color: white;
			}
            rect.background {
                fill: #fafafe;
            }
            
            .orange {
                fill: orange;
            }
            
            path {
                stroke-width: 1px;
                stroke: black;
                
            }
            circle.wfdata {
                fill: yellow;
                opacity: 0.6;
                stroke: black;
                stroke-width: 0.5px;
            }
            circle.wfdata:hover {
                fill: orange;
                opacity: 1;
            }
			#container {
                position: relative;
				width: 1000px;
				margin-left: auto;
				margin-right: auto;
				margin-top: 50px;
				padding: 50px;
				background-color: white;
                border-radius: 20px 20px 0 0;
				box-shadow: 4px 4px 13px 6px #ccc;
			}
            

		</style>
	</head>
	<body style="background: #fff;">
    
  		<div id="container">
            <h1>An equal area projection, with some rotation and mouseover.</h1>
            <p>Electricity by Store, West Region</p>
            <p>Scrollwheel to zoom in/out; mouseover stores for description</p>
            <p>States are encoded with a colorscale based on Lon x Lat;  North and West is lighter than South and East</p>
          
        </div>
     
    
		<script type="text/javascript">

            function changeColor() {
                d3.select(this).transition().duration(300).attr("fill","red");
            };
            
            function resetColor() {
                d3.select(this).transition().duration(500).attr("fill",function(d) {
                    return colors(+d.properties.latitude * +d.properties.longitude);
                });
            };
            
            function bounceMe() {
                d3.select(this).transition().duration(100).attr("r",function(d) {
                    return 1.5 * Math.sqrt(+d.WC2015AVG)/6;
                }).transition().duration(50).attr("r", function(d) {
                    return 1.0 * Math.sqrt(+d.WC2015AVG)/6;
                });
            }
            
        </script>
    
		<script type="text/javascript">



			//Width and height
			var w = 900;
			var h = 900;
            var pi = 3.14;

			//Define map projection
			var projection = d3.geo.conicEqualArea()
                .scale(1070)
                .center([ -113, 24 ])
                .rotate([0,15])                
                .translate([ w*2/5, h*2/4 ])
                //.scale([ w*4/6 ]);
                ;
                
			var colors = d3.scale.quantize()
								.range(['#f7fcfd','#e5f5f9','#ccece6','#99d8c9','#66c2a4','#41ae76','#238b45','#006d2c','#00441b']);
                
                

			//Define path generator
			var path = d3.geo.path()
                .projection(projection)
                ;
                
            var zoom = d3.behavior.zoom()
                .translate(projection.translate())
                .scale(projection.scale())
                .scaleExtent([h, 3 * h])
                .on("zoom", zoomed);
                                
			//Create SVG
			var svg = d3.select("#container")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

            var g = svg.append("g")
                    .call(zoom);
                    
            g.append("rect")
                .attr("class", "background")
                .attr("width", w)
                .attr("height", h);                    
                                            
            var json2;

			//Load in GeoJSON data
//			d3.json("../data/countries/mapshaper_output_50simplified.json", function(json) {
			d3.json("ne_10m_admin_1_states_provinces-USA-CAN-MEX.json", function(json) {
				
                json2 = json;
                
				colors.domain([
					d3.min(json.features, function(d) { return +d.properties.latitude * +d.properties.longitude; }), 
					d3.max(json.features, function(d) { return +d.properties.latitude * +d.properties.longitude; })
				]);
                
                console.log(colors.domain());
                
				//Bind data and create one path per GeoJSON feature
                g.append("g")
                    .attr("id","states")
				    .selectAll("path")
                    .data(json.features)
                    .enter()
                    .append("path")
                    .attr("d", path)
                    //.attr("class","orange")
                    .attr("fill",function(d) {
                        return colors(+d.properties.latitude * +d.properties.longitude);
                    })
                    .on("mouseover",changeColor)
                    .on("mouseout",resetColor)
                    .on("click",clicked)
                ;
                
                loadWf();

			});

            function loadWf() {
                console.log("okay?");
                d3.csv("wf-01-electricity-gpsv.csv", function(wfdata) {
                    console.log("here");
                    
                    var circles = g.selectAll("#states circle")
                        .data(wfdata)
                        .enter()
                        .append("circle")
                        .attr("class","wfdata")
                        .attr("cx", function(d) {
                            //[0] returns the first coordinate (x) of the projected value
                            return projection([d.Glongitude, d.Glatitude])[0];
                        })
                        .attr("cy", function(d) {
                            //[1] returns the second coordinate (y) of the projected value
                            return projection([d.Glongitude, d.Glatitude])[1];
                        })
                        .attr("r", function(d) {
                            return Math.sqrt(+d.WC2015AVG)/6;   				         
                        })
                        .on('mouseover',bounceMe)
                        .append("title")
                        .text(function(d) {
                            return "id=" + d.Glongitude + ' ' + d.Glatitude + ' ' + d.LocationNr + ' ' + d.LocationName; 
                        })
                        //.style("fill", "blue")
                        //.style("opacity", 0.75);
                });
            }

            function clicked(d) {
                console.log("here in clicked");
                var centroid = path.centroid(d),
                    translate = projection.translate();
                
                projection.translate([
                    translate[0] - centroid[0] + w / 2,
                    translate[1] - centroid[1] + h / 2
                ]);
                
                zoom.translate(projection.translate());
                
                g.selectAll("path").transition()
                    .duration(100)
                    .attr("d", path);
            }
            
            function zoomed() {
                console.log("here in zoomed");
                projection.translate(d3.event.translate).scale(d3.event.scale);
                g.selectAll("path").attr("d", path);
            }        
                

		
		</script>
	</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>SVG, CSV, ETC</title>
    <style>
        body {
            background-color: burlywood;
            font-family: helvetica, sans-serif;
        }
        
        svg {
            background-color: ivory;
            margin: 12px 0 4px 12px;
            border-radius: 25px;
        }
        
        .bar {
            fill: sienna;
        }
        
        h1 {
        	margin: 24px 0 0 32px;
        	font-weight: normal;
        	font-size: 22px;
        	color: sienna;
        }
        
        .intro {
            padding: 0;
            margin: 10px 0 0px 1px;
            font-size: 14px;
            color: black;
        }
        
        .labels {
            fill: black;
			font-size: 12px;
			text-anchor: end
		}
        
        .values {
            fill: sienna;
            font-size: 12px;
        }
        
        .source {
        	width: 630px;
        	margin: 0px 0 0 32px;
        	font-weight: normal;
        	font-style: italic;
        	font-size: 12px;
        	color: black;
        	text-align: right;
        } 
    </style>
    <script type="text/javascript" src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body>
    <script>
    
        /* 
        The addCommas function is from http://www.mredkj.com/javascript/nfbasic.html. It's used to format the dollar amounts in the titles/tooltips.
        */
        function addCommas(nStr) {
	        nStr += '';
	        x = nStr.split('.');
	        x1 = x[0];
	        x2 = x.length > 1 ? '.' + x[1] : '';
	        var rgx = /(\d+)(\d{3})/;
	        while (rgx.test(x1)) {
		        x1 = x1.replace(rgx, '$1' + ',' + '$2');
	        }
	        return x1 + x2;
        }

		// sizing up display area
        var margin = {top: 30, right: 0, bottom: 0, left: 100}
        var width = 780 - margin.left - margin.right;
        var height = 258 - margin.top - margin.bottom;
        
        // adding title and subtitle
        // did not want to nest subtitle in the title, but too lazy to fix it
        d3.select("body")
        	.append("h1")
        	.text("US chocolate imports, 2013, in millions of dollars")
        	.append("p")
        	.attr("class", "intro")
        	.text("Import values of chocolate entering US ports and their origin of shipment");

        var svg = d3.select("body")
                    .append("svg")
                    .attr("width", width)
                    .attr("height", height);
    	
        
        // the main event . . . importing and charting the data
        d3.csv("cocoa2_3-final.csv", function(data) {
            
            data.sort(function(a,b) {
                // thank you for the hint about forcing the strings!
                return d3.ascending(+a["2013"], +b["2013"]);
            });
            
            var bars = svg.selectAll("rect")
                          .data(data)
                          .enter()
                          .append("rect");
                          
            bars.attr("x", 110)
                .attr("y", function(d, i) {
                    return i * 26 + 13;
                })
                .attr ("width", function (d,i) {
                    return d[2013] / 2;
                })
                .attr("height", 20)
                .attr("class", "bar")
                .append("title")
                .text(function (d) {
                    var dollarAmount = d[2013] * 1000000;
                    dollarAmount = addCommas(dollarAmount);
                    return  "$" + dollarAmount + " of chocolate was imported from " + d["Source"] + ".";
                });
                
                
                // adding labels to the left of the bars
                svg.selectAll("text")
					.data(data)
					.enter()
					.append("text")
					.text(function(d){
						return d.Source;
					})
					.attr("class", "title")
					.attr("x", 100)
					.attr("y", function(d, i){
						return i * 26 + 28;
					})
					.attr({
						"fill": "black",
						"font-family": "sans-serif",
						"font-size": "12px",
						"text-anchor": "end"
					});

				// adding values to the right of the bars	
				var values = svg.selectAll(".values")
				.data(data)
				.enter()
				.append("text");

				values.attr("x", function(d) {
					return d[2013]/2 + 115;
					})
					.attr("y", function(d, i) {
						return i * 26 + 28;
					})
					.attr("class","values")
					.text(function(d) { 
					    return d[2013];
					});
	});
			     
    // source line under chart
    // the commented-out lines were part of an aborted attempt
    // to try to add a link to the SVG text
    d3.select("body")
     	.append("p")
     	.attr("class", "source")
     	//.append("a")
     	//.attr("xmlns", "http://www.w3.org/2000/svg")
     	//.attr(":xlink", "http://www.w3.org/1999/xlink")
     	//.attr("version","1.1")
     	.text("Source: USDA, www.fas.usda.gov/gats");       
    </script>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 11px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.linetotalEmployment { 
  fill: none;
  stroke: #D8565F;
  stroke-width: 2px;
}

.lineEmployees {
  fill: none;
  stroke: #858abe;
  stroke-width: 2px;
}

.lineselfEmployed {
  fill: none;
  stroke: #699999;
  stroke-width: 2px;
}    

.grid .tick {
    stroke: lightgrey;
    stroke-opacity: 0.7;
    stroke-dasharray: ("3, 3");  
    shape-rendering: crispEdges;
}
.grid path {
          stroke-width: 0;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var margin = {top: 40, right: 100, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%d/%m/%Y").parse;    

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(6);

var linetotalEmployment = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.totalEmployment); });

var lineEmployees = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.Employees); });

var lineselfEmployed = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.selfEmployed); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

function make_x_axis() {    
    return d3.svg.axis()
        .scale(x)
        .orient("bottom")
        .ticks(0)
}

function make_y_axis() {    
    return d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(6)
}

d3.csv("data.csv", function(error, data) { 
  data.forEach(function(d) {
    d.date = parseDate(d.date);
    d.totalEmployment = +d.totalEmployment;
    d.selfEmployed = +d.selfEmployed;
    d.Employees = +d.Employees;
  });

         /* Add 'curtain' rectangle to hide entire graph */
  var curtain = svg.append('rect')
    .attr('x', -1 * width)
    .attr('y', -1 * height)
    .attr('height', height)
    .attr('width', width)
    .attr('class', 'curtain')
    .attr('transform', 'rotate(180)')
    .style('fill', '#ffffff')

      /* Create a shared transition for anything we're animating */
  var t = svg.transition()
    .delay(750)
    .duration(6000)
    .ease('linear')
    .each('end', function() {
      d3.select('line.guide')
        .transition()
        .style('opacity', 0)
        .remove()
    });

  t.select('rect.curtain')
    .attr('width', 0);

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain(d3.extent(data, function(d) { return d.totalEmployment+d.Employees/5; }));


  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)

  svg.append("path")
      .datum(data)
      .attr("class", "linetotalEmployment")
      .style("stroke-dasharray", ("3, 3"))                            // dashed line
      .attr("d", linetotalEmployment);

  svg.append("path")
      .datum(data)
      .attr("class", "lineEmployees")
      .attr("d", lineEmployees);

  svg.append("path")
      .datum(data)
      .attr("class", "lineselfEmployed")
      .attr("d", lineselfEmployed);
});


    svg.append("text")
      .attr("x", (width / 2))       
      .attr("y", 0 - (margin.top / 2))
      .attr("text-anchor", "middle")  
      .style("font-size", "16px") 
      .style("text-decoration", "underline")  
      .text("Change in employees and self-employment");

        svg.append("text")         // append text
    .style("fill", "black")   // fill the text with the colour black
    .attr("x", 20)           // set x position of left side of text
    .attr("y", -10)           // set y position of bottom of text
    .attr("dy", ".71em")           // set offset y position
    .attr("text-anchor", "start")  // set anchor y justification 
    .text("Change since May 2008, thousands of workers");          // define the text to display

    svg.append("g")      
        .attr("class", "grid")
        .attr("transform", "translate(0," + height + ")")
        .call(make_x_axis()
            .tickSize(-height, 0, 0)
            .tickFormat("")
        )

    svg.append("g")     
        .attr("class", "grid")
        .call(make_y_axis()
            .tickSize(-width, 0, 0) 
            .tickFormat("")
        )

</script><!DOCTYPE html>
<html><head>
    <meta http-equiv='X-UA-Compatible' content='IE=edge' />
    <title>Real Madrid vs. Elche (1st half)</title>
<script src="d3.min.js"></script>
<script src="d3.rollup.v0.min.js"></script>

</head>
<style>
#tooltip {
        position: absolute;
        width: 150px;
        height: auto;
        padding: 5px;
        background-color: white;
		opacity: 0.8;
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
        -webkit-box-shadow: 4px 4px 5px rgba(0, 0, 0, 0.4);
        -moz-box-shadow: 4px 4px 5px rgba(0, 0, 0, 0.4);
        box-shadow: 4px 4px 5px rgba(0, 0, 0, 0.4);
        pointer-events: none;
}

#tooltip.hidden {
        display: none;
}

#tooltip p {
        margin: 0;
        font-family: sans-serif;
        font-size: 12px;
        line-height: 16px;
}

.link {
  fill: none;
  stroke: #000;
  stroke-opacity: .2;
}


</style>

<body>
<div id="tooltip" class="hidden">
        <p><strong>Player Detail</strong></p>
        <p>Name: <span id="name">100</span></p>
		<p>Number: <span id="number">100</span></p>
		<p>Position: <span id="pos">100</span></p>
</div>
	<script>
  	var scaleh = d3.scale.linear();
	var scalev = d3.scale.linear();
	var width = 1150,
	height = 720;
	
	function fx(d) { return d.x; };
	function fy(d) { return d.y; };
	
	var rollup = d3.rollup()
    .x(function(d) { return fx(d); })
    .y(function(d) { return fy(d); });

	//var svg;
	
	
	
d3.xml("field.svg", function(xml) {
	svgdom = document.body.appendChild(xml.documentElement);

  	var svg = d3.select("svg");
	var defs = d3.select("defs");

	
	scaleh.domain([0, width]);
	scaleh.range([0, 1268]);
	scalev.domain([0, height]);
	scalev.range([0, 808]);
  

d3.json("players.json", function(json) {

	datap = json.nodes;

	var datap_start = datap.filter( function (el){
		return el.Status == "starting"; });

	json.nodes = datap_start;
	var graph = rollup(json);			
			
	var link = svg.selectAll(".link")
		.data(graph.links)
		.enter().append("g")
		.attr("class", "linkg");
    
	svg.selectAll(".linkg")
		.data(graph.links)
		.append("path")
		.attr("class", function(d) {
			return "link " + "from" + d.source.nodes[0].Number + " to" + d.target.nodes[0].Number;
		  })
		.attr("id" ,function(d) {
			return "link" + "from" + d.source.nodes[0].Number + "to" + d.target.nodes[0].Number;
		  })	  
		.attr("d", function(d) {
			var sx = d.source.x, sy = d.source.y,
			tx = d.target.x, ty = d.target.y,
			dx = tx - sx, dy = ty - sy,
			dr = 2 * Math.sqrt(dx * dx + dy * dy);
			return "M" + sx + "," + sy + "A" + dr + "," + dr + " 0 0,1 " + tx + "," + ty;
		  })
		.style("stroke", "grey")
		.style("stroke-width", function(d) { 
			return d.value * 2; 
		  });
	  
	var node = svg.selectAll(".node")
		.data(graph.nodes)
		.enter().append("g")
		.attr("class", "node")
		.style("pointer-events", "all")
		.append("circle")
		.attr("cx", function(d, i){ 
			return d.x})
		.attr("cy", function(d, i){ return d.y})
		.attr("r", 10)
		.attr("filter","url(#f3)")
		.style("fill", "white")
		.style("stroke", "grey")
		.style("stroke-width", "1")	
		.on("mouseover", function(d) {

			var xPosition = scaleh(50 + parseFloat(d3.select(this).attr("cx")));
			var yPosition = scalev(10 + parseFloat(d3.select(this).attr("cy")));

			d3.selectAll(".to" + d.nodes[0].Number + ":not(.pathlabel)")
			.transition()
			.duration(10)
			.style("stroke", "orange")
			.style("display", "block")
			.style("stroke-opacity", ".7")
			;
			
			d3.selectAll(".from" + d.nodes[0].Number + ":not(.pathlabel)")
			.transition()
			.duration(10)
			.style("stroke", "blue")
			.style("display", "block")
			.style("stroke-opacity", ".7")
			;

			d3.selectAll(".pathlabel.to" + d.nodes[0].Number)
			.style("fill", "orange")
			.style("stroke", "white")
			.style("display", "block");
			
			d3.selectAll(".pathlabel.from" + d.nodes[0].Number)
			.style("fill", "blue")
			.style("stroke", "white")
			.style("display", "block");
			
			d3.select(this).style("fill", "LightGoldenRodYellow");

			d3.select("#tooltip")
			  .style("left", xPosition + "px")
			  .style("top", yPosition + "px")
			  .select("#name")
			  .text(d.nodes[0].name);
			 
			d3.select("#tooltip") 
			  .select("#number")
			  .text(d.nodes[0].Number);

			  d3.select("#tooltip")
			  .select("#pos")
			  .text(d.nodes[0].Position);

			d3.select("#tooltip").classed("hidden", false);
			   
		})
		.on("mouseout", function(d) {

			d3.selectAll(".to" + d.nodes[0].Number + ":not(.pathlabel)")
			.style("stroke", "grey")
			.style("stroke-opacity", ".2");

			d3.selectAll(".from" + d.nodes[0].Number + ":not(.pathlabel)")
			.style("stroke", "grey")
			.style("stroke-opacity", ".2");
			
			d3.selectAll(".pathlabel")
			.style("fill", "grey")
			.style("display", "none");

			d3.select("#tooltip").classed("hidden", true);
			d3.select(this).style("fill", "white");
		});
			
		svg.selectAll(".node")
			.data(graph.nodes)
			.append("text")
		   .text(function(d, i) {   
				return d.nodes[0].Number;
		   })
		   .attr("x", function(d, i) {
				return d.x;
		   })
		   .attr("y", function(d, i) {
				return d.y ;
		   })
		   .style("font-family", "sans-serif")
		   .style("font-size", "11px")
		   .style("text-anchor", "middle")
		   .style("dominant-baseline", "central")
		   .style("stroke", "black")
		   .style("pointer-events", "none");
		 
		 svg.selectAll("textpaths")
			.data(graph.links)
			.enter()
			.append("text")			
			.style("font-size", "12px")
			.attr("class", "texts")
			.attr("x", "0")
			.attr("y", "0")
			.append("textPath")
			.attr("class", function(d) {
				return "pathlabel " + "from" + d.source.nodes[0].Number + " to" + d.target.nodes[0].Number;
			})
			.attr("xlink:href", function(d) { 
				return '#' + "link" + "from" + d.source.nodes[0].Number + "to" + d.target.nodes[0].Number 
			})
			.text(function(d) { 
				return d.value;
			})
			.attr("startOffset", "40%")
			.style("stroke", "black")
			.attr("filter","url(#f3)")
			.style("fill", "white")
			.style("font-family", "sans-serif")	
			.style("display", "none");

});
});

</script>
	</body>
</html>
 
 
<!DOCTYPE html>

<html lang="en">
<head>
<meta charset="utf-8" />
<title>Interactive Concave Hulls</title>
<style>

</style>
</head>
<body>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8" type="text/javascript"></script>
<script src="d3.geom.concaveHull.js" charset="utf-8" type="text/javascript"></script>
    <script type="text/javascript">

    vertices = d3.range(50).map(function () {return [Math.random() * 500, Math.random() * 500]})

defaultHull = d3.geom.concaveHull().distance(100);
paddedHull = d3.geom.concaveHull().distance(100).padding(25);

colorRamp = d3.scale.linear().domain([0,10]).range(["red", "blue"])

svg = d3.select("body")
  .append("svg")
    .attr("width", 1000)
    .attr("height", 1000);

    drag = d3.behavior.drag().on("drag", dragging).on("dragend", dragstop)

svg.selectAll("circle")
  .data(vertices)
  .enter()
  .append("circle")
  .call(drag);

  render();

  function dragging(d) {
    d[0] = d3.event.x;
    d[1] = d3.event.y;
    render();
  }

  function dragstop(d) {
    svg
    .selectAll("path")
      .data(paddedHull(vertices))
      .transition()
      .duration(1000)
      .attr("d", function(d) { return "M" + d.join("L") + "Z"; })
      .style("fill", function (d,i) {return colorRamp(i)})
  }

  function render() {

  svg
  .selectAll("path")
    .data(defaultHull(vertices))
  .enter().insert("path", "circle")
    .style("fill-opacity", 0.5)
    .style("stroke", "pink")
    .style("stroke-width", "1px");

  svg
  .selectAll("path")
    .data(defaultHull(vertices))
  .exit().remove();

    d3.selectAll("path")
      .attr("d", function(d) { return "M" + d.join("L") + "Z"; })
      .style("fill", function (d,i) {return colorRamp(i)})

    d3.selectAll("circle")
      .attr("cx", function (d) {return d[0]})
      .attr("cy", function (d) {return d[1]})
      .attr("r", 5)
      .style("fill", "blue")

  }


    </script>
</body>
</html><!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>NFL Rushing and Passing Touchdowns </title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.min.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: #3b5b6a 
                /*Use this darker brown for aq more subtle effect #573323*/;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 12px;
			}

			/*
            .y.axis path,
			.y.axis line {
				opacity: 0;
			}

		</style>
	</head>
	<body>
        <h1>NFL Rushing and Passing Touchdowns</h1>

		<p>Offensive touchdowns scored each year of the &ldquo;modern&rdquo; NFL (1958-present). Source: <a href="http://www.pro-football-reference.com/years/NFL/team_stats.htm#season_totals">Sports Reference</a></p>

		<script type="text/javascript">		


			var canvasWidth = 600;
			var canvasHeight = 600;
			var canvasPadding = [ 20, 20, 40, 40 ];  //Top, right, bottom, left



			var xScale = d3.scale.linear()
								.range ([canvasPadding[3], canvasWidth - canvasPadding[1] ]);
			
			var yScale = d3.scale.linear()
								.range ([ canvasPadding[0], canvasHeight - canvasPadding[2] ]);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom");

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left");



			var svg = d3.select("body")
						.append("svg")
						.attr("width", canvasWidth)
						.attr("height", canvasHeight);



			d3.csv("NFL Team Offense League Totals.csv", function(data) {
                

				xScale.domain([d3.min(data, function(d) {
					return +d.RushingTouchdowns;
				}), d3.max(data, function(d) {
					return +d.RushingTouchdowns;
				}) ]);

				yScale.domain([ d3.max(data, function(d) {
					return +d.PassingTouchdowns;
                }),d3.min(data, function(d) {
					return +d.PassingTouchdowns;
                }) ]);
                
				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles.attr("cx", d3.min(data, function(d) {
					return xScale(+d.RushingTouchdowns);}))
					.attr("cy", d3.max(data, function(d) {
					return yScale(+d.PassingTouchdowns);}))
					.attr("r", 5)
					.attr("fill", "#6A4A3B")
					.append("title")
					.text(function(d) {
						return d.Year + " had " + d.PassingTouchdowns+" Passing Touchdowns and "+d.RushingTouchdowns+" Rushing Touchdowns";
					});
                
                circles.transition()
                .duration(2000)
                .attr("cx", function (d) {
                    return xScale(+d.RushingTouchdowns);
                    })
					.attr("cy", function(d) {
						return yScale(+d.PassingTouchdowns);
                    })

				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(0," + (canvasHeight - canvasPadding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + canvasPadding[3] + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables.css'>
    
    <script src='http://code.jquery.com/jquery-1.10.2.min.js' type='text/javascript'></script>
    <script src='http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.min.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body >
    
    <table id = 'chart5045cbf79c9' class = 'rChart datatables'></table>
                                      <script>
                                      jQuery.extend( jQuery.fn.dataTableExt.oSort, {
                                      "scientific-pre": function ( a ) {
                                      return parseFloat(a);
                                      },
                                      
                                      "scientific-asc": function ( a, b ) {
                                      return ((a < b) ? -1 : ((a > b) ? 1 : 0));
                                      },
                                      
                                      "scientific-desc": function ( a, b ) {
                                      return ((a < b) ? 1 : ((a > b) ? -1 : 0));
                                      }
    } );
      
                                      </script>
                                          
    <script type="text/javascript" charset="utf-8">
  var chartParamschart5045cbf79c9 = {
 "dom": "chart5045cbf79c9",
"width":    800,
"height":    400,
"table": {
 "aaData": [
 [
 [ "1.735965e+10" ],
[ "8.012146e+09" ],
[ "1.388772e+10" ],
[ "5.341431e+09" ],
"virginica" 
],
[
 [ "5.847985e+08" ],
[ "2.923993e+08" ],
[ "4.954543e+08" ],
[ "2.030550e+08" ],
"virginica" 
],
[
 [ "1.432867e+07" ],
[ "6.908464e+06" ],
[ "1.074650e+07" ],
[ "3.326298e+06" ],
"versicolor" 
],
[
 [ "1.777896e+09" ],
[ "9.040151e+08" ],
[ "1.536826e+09" ],
[ "5.424091e+08" ],
"virginica" 
],
[
 [ "5.853284e+05" ],
[ "4.071850e+05" ],
[ "1.781434e+05" ],
[ "2.544906e+04" ],
"setosa" 
],
[
 [ "2.531667e+02" ],
[ "1.388334e+02" ],
[ "2.205000e+02" ],
[ "9.391669e+01" ],
"virginica" 
],
[
 [ "9.977767e+05" ],
[ "4.434563e+05" ],
[ "8.077240e+05" ],
[ "2.375659e+05" ],
"virginica" 
],
[
 [ "4.684111e+03" ],
[ "2.303661e+03" ],
[ "3.762646e+03" ],
[ "1.382197e+03" ],
"virginica" 
],
[
 [ "7.233276e+01" ],
[ "3.496083e+01" ],
[ "5.424957e+01" ],
[ "1.808319e+01" ],
"versicolor" 
],
[
 [ "6.931857e+06" ],
[ "4.364502e+06" ],
[ "2.182251e+06" ],
[ "2.567354e+05" ],
"setosa" 
],
[
 [ "8.030004e+07" ],
[ "5.139203e+07" ],
[ "1.927201e+07" ],
[ "3.212002e+06" ],
"setosa" 
],
[
 [ "5.129519e+09" ],
[ "3.704653e+09" ],
[ "1.234884e+09" ],
[ "3.799644e+08" ],
"setosa" 
],
[
 [ "2.087479e+05" ],
[ "1.478631e+05" ],
[ "6.958263e+04" ],
[ "8.697829e+03" ],
"setosa" 
],
[
 [ "7.219356e+03" ],
[ "3.340299e+03" ],
[ "6.034088e+03" ],
[ "2.586038e+03" ],
"virginica" 
],
[
 [ "2.073434e+02" ],
[ "1.451404e+02" ],
[ "5.390929e+01" ],
[ "1.244061e+01" ],
"setosa" 
],
[
 [ "5.518871e+07" ],
[ "2.553507e+07" ],
[ "3.624333e+07" ],
[ "1.153197e+07" ],
"versicolor" 
],
[
 [ "2.630425e+07" ],
[ "1.426671e+07" ],
[ "2.140007e+07" ],
[ "8.025025e+06" ],
"versicolor" 
],
[
 [ "1.237287e+07" ],
[ "5.399069e+06" ],
[ "8.548526e+06" ],
[ "2.474573e+06" ],
"versicolor" 
],
[
 [ "2.894593e+07" ],
[ "1.822521e+07" ],
[ "8.040535e+06" ],
[ "2.144143e+06" ],
"setosa" 
],
[
 [ "1.112515e+02" ],
[ "7.184994e+01" ],
[ "3.708384e+01" ],
[ "4.635480e+00" ],
"setosa" 
],
[
 [ "1.056704e+05" ],
[ "3.568092e+04" ],
[ "9.469167e+04" ],
[ "3.156389e+04" ],
"virginica" 
],
[
 [ "2.028769e+03" ],
[ "1.352513e+03" ],
[ "6.050715e+02" ],
[ "1.067773e+02" ],
"setosa" 
],
[
 [ "4.888040e+06" ],
[ "3.226107e+06" ],
[ "1.368651e+06" ],
[ "1.955216e+05" ],
"setosa" 
],
[
 [ "2.436882e+05" ],
[ "1.200256e+05" ],
[ "2.073169e+05" ],
[ "9.092845e+04" ],
"virginica" 
],
[
 [ "3.494484e+07" ],
[ "1.651938e+07" ],
[ "2.795587e+07" ],
[ "7.624329e+06" ],
"versicolor" 
],
[
 [ "1.162985e+05" ],
[ "8.399338e+04" ],
[ "3.661250e+04" ],
[ "8.614705e+03" ],
"setosa" 
],
[
 [ "2.132092e+10" ],
[ "1.116810e+10" ],
[ "1.590609e+10" ],
[ "5.414838e+09" ],
"versicolor" 
],
[
 [ "6.711799e+04" ],
[ "3.080826e+04" ],
[ "4.401180e+04" ],
[ "1.430383e+04" ],
"versicolor" 
],
[
 [ "3.080463e+06" ],
[ "1.222406e+06" ],
[ "2.444812e+06" ],
[ "9.290284e+05" ],
"virginica" 
],
[
 [ "1.148156e+09" ],
[ "5.666226e+08" ],
[ "9.990450e+08" ],
[ "3.280446e+08" ],
"virginica" 
],
[
 [ "1.337552e+07" ],
[ "6.226535e+06" ],
[ "9.455108e+06" ],
[ "2.306124e+06" ],
"versicolor" 
],
[
 [ "8.899716e+07" ],
[ "4.362606e+07" ],
[ "5.235127e+07" ],
[ "1.919547e+07" ],
"versicolor" 
],
[
 [ "2.735760e+04" ],
[ "1.196895e+04" ],
[ "2.393790e+04" ],
[ "8.976713e+03" ],
"virginica" 
],
[
 [ "4.334471e+05" ],
[ "2.000525e+05" ],
[ "3.667630e+05" ],
[ "1.200315e+05" ],
"virginica" 
],
[
 [ "1.098623e+03" ],
[ "7.470640e+02" ],
[ "3.295870e+02" ],
[ "4.394494e+01" ],
"setosa" 
],
[
 [ "2.111728e+02" ],
[ "9.770682e+01" ],
[ "1.481361e+02" ],
[ "4.727749e+01" ],
"versicolor" 
],
[
 [ "1.001948e+05" ],
[ "4.501503e+04" ],
[ "7.115279e+04" ],
[ "2.178147e+04" ],
"versicolor" 
],
[
 [ "9.784791e+05" ],
[ "6.190378e+05" ],
[ "2.995344e+05" ],
[ "1.996896e+04" ],
"setosa" 
],
[
 [ "1.270184e+10" ],
[ "8.716951e+09" ],
[ "3.486780e+09" ],
[ "4.981115e+08" ],
"setosa" 
],
[
 [ "2.174460e+09" ],
[ "9.707411e+08" ],
[ "1.514356e+09" ],
[ "4.271261e+08" ],
"versicolor" 
],
[
 [ "5.424137e+04" ],
[ "2.712069e+04" ],
[ "3.813846e+04" ],
[ "1.271282e+04" ],
"versicolor" 
],
[
 [ "2.986130e+03" ],
[ "2.084657e+03" ],
[ "8.451312e+02" ],
[ "1.126842e+02" ],
"setosa" 
],
[
 [ "3.455980e+02" ],
[ "2.329030e+02" ],
[ "1.126950e+02" ],
[ "1.502600e+01" ],
"setosa" 
],
[
 [ "2.766291e+07" ],
[ "1.360471e+07" ],
[ "2.086056e+07" ],
[ "6.348866e+06" ],
"versicolor" 
],
[
 [ "3.171925e+06" ],
[ "1.163039e+06" ],
[ "2.114617e+06" ],
[ "5.286541e+05" ],
"versicolor" 
],
[
 [ "3.587773e+09" ],
[ "1.594566e+09" ],
[ "2.989811e+09" ],
[ "8.969432e+08" ],
"virginica" 
],
[
 [ "1.554752e+05" ],
[ "7.091852e+04" ],
[ "9.546724e+04" ],
[ "2.727635e+04" ],
"versicolor" 
],
[
 [ "8.895792e+03" ],
[ "5.816480e+03" ],
[ "2.395021e+03" ],
[ "3.421459e+02" ],
"setosa" 
],
[
 [ "1.242287e+07" ],
[ "4.700546e+06" ],
[ "1.024048e+07" ],
[ "3.189656e+06" ],
"virginica" 
],
[
 [ "1.857571e+03" ],
[ "8.443506e+02" ],
[ "1.350961e+03" ],
[ "4.390623e+02" ],
"versicolor" 
] 
],
"aoColumns": [
 {
 "sTitle": "Sepal.Length",
"sType": "scientific" 
},
{
 "sTitle": "Sepal.Width",
"sType": "scientific" 
},
{
 "sTitle": "Petal.Length",
"sType": "scientific" 
},
{
 "sTitle": "Petal.Width",
"sType": "scientific" 
},
{
 "sTitle": "Species" 
} 
] 
},
"id": "chart5045cbf79c9" 
}
  $('#' + chartParamschart5045cbf79c9.id).removeClass("rChart")

  $(document).ready(function() {
		drawDataTable(chartParamschart5045cbf79c9)
	});
  function drawDataTable(chartParams){
    var dTable = $('#' + chartParams.dom).dataTable(
      chartParams.table
    );
    //first use rCharts width
  	$('#'+chartParams.id+"_wrapper").css("width",chartParams.width)  
		$('#'+chartParams.id+"_wrapper").css("width",chartParams.table.width)
    
    //then if specified change to table width
    $('#'+chartParams.id+"_wrapper").css("margin-left", "auto");
    $('#'+chartParams.id+"_wrapper").css("margin-right", "auto");
		dTable.fnAdjustColumnSizing();
  }
		
</script>
    
    <script></script>    
  </body>
</html><!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<script type="text/javascript" src="//d3js.org/d3.v3.min.js"></script>
	<link href='https://fonts.googleapis.com/css?family=Lato:400,100,300,400italic,900,700,100italic,300italic,700italic,900italic&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
	<link rel="stylesheet" type="text/css" href="main.css">
	<title>Voivodeships of Poland</title>
</head>

<body>

<div id="wrapper">
	
	<div class="text">
		<h1>Voivodeships of Poland</h1>
	</div>

	<script type="text/javascript">

	d3.select("div", "#wrapper")
				.append("div")
				.attr("id", "content");

	var margin = {top: 5, right: 25, bottom: 5, left: 5};

	var width = 900 - margin.left - margin.right,
    	height = 750 - margin.top - margin.bottom;


    var projection = d3.geo.mercator()
					.center([22, 51])
					.translate([ width/2, height/2 ])
					.scale(3000);


	var path = d3.geo.path()
					.projection(projection);

	var mapColor = d3.scale.quantize()
							.range(["#ffffb2", 
									"#fed98e", 
									"#fe9929", 
									"#d95f0e", 
									"#993404"])
							.domain([7, 16.5]);

	var legendColor = ["#ffffb2", "#fed98e", "#fe9929", "#d95f0e", "#993404"];


	var svg = d3.select("#content")
				.append("svg")
				.attr("width", width + margin.left + margin.right)
    			.attr("height", height + margin.top + margin.bottom)
  				.append("g")
    			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var formatNumbers =  d3.format(",");



    d3.csv("woj_stats.csv", function(data) {
			
			
    d3.json("woj_maps.json", function(json) {

    	for (var i = 0; i < data.length; i++) {
				
						var dataWoj = data[i].woj;
						
						
						var areaWoj = parseFloat(data[i].area);
						
						var populationWoj = parseFloat(data[i].population);
						
						var densityWoj = parseFloat(data[i].density);
						
						var unRateWoj = parseFloat(data[i].un_rate_woj);
						
						var capitalWoj = data[i].capital;
						
						var capitalWojUR = parseFloat(data[i].un_rate_capital);

						var capitalLong = parseFloat(data[i].longitude);

						var capitalLat = parseFloat(data[i].latitude);

												
						for (var j = 0; j < json.features.length; j++) {
						
							var jsonWoj = json.features[j].properties.name;
				
							if (dataWoj == jsonWoj) {
						
								json.features[j].properties.area = areaWoj;
								json.features[j].properties.population = populationWoj;
								json.features[j].properties.density = densityWoj;
								json.features[j].properties.un_rate_woj = unRateWoj;
								json.features[j].properties.capital = capitalWoj;
								json.features[j].properties.capitalWojUR = capitalWojUR;
								
								json.features[j].properties.longitude = capitalLong;
								
								json.features[j].properties.latitude = capitalLat;

								break;
								
							}
						}		
					}



    	var mapWoj = svg.selectAll("g")
                    .data(json.features)
                    .enter()
                    .append("g")

		mapWoj.append("path")
				   .attr("d", path)
				   .attr("class", "path")
				   .style("fill", function (d) { return mapColor(d.properties.un_rate_woj);
				   });

		

		mapWoj.append("text")
				.attr("x", 550)
				.attr("y", 100)
				.attr("text-anchor", "start")
				.attr("fill", "none")
				.text(function(d) { return d.properties.name; })
				
				.append("tspan")
				.attr("x", 550)
				.attr("dy", 25)
				.text(function(d) { return "Area: " + formatNumbers(d.properties.area) + " sq. km"; })
				
				.append("tspan")
				.attr("x", 550)
				.attr("dy", 25)
				.text(function(d) { return "Population: " + formatNumbers(d.properties.population); })
				
				.append("tspan")
				.attr("x", 550)
				.attr("dy", 25)
				.text(function(d) { return "Unemployment rate: " + d.properties.un_rate_woj + "%"; })
				
				.append("tspan")
				.attr("x", 550)
				.attr("dy", 25)
				.text(function(d) { return "Capital: " + d.properties.capital ; })

				.append("tspan")
				.attr("x", 550)
				.attr("dy", 25)
				.text(function(d) { return d.properties.capital + "'s unemployment rate: " + d.properties.capitalWojUR + "%"; });
				
		
		mapWoj.on("mouseover", function() { 
                    d3.select(this)
                    .classed("hover", true)
                });
                
        mapWoj.on("mouseout", function() { 
            	d3.select(this)
                .classed("hover", false)
        		});

       var mapCapital = svg.selectAll("g")
                    .data(json.features)
                    .enter()
                    .append("g");
		  	 
		  	mapCapital.append("circle")
				   	 .attr("class", "circle")
				   	 .attr("cx", function(d) {
				  		 return projection([d.properties.longitude, d.properties.latitude])[0];
				   	 })
				   	 .attr("cy", function(d) {
				  		return projection([d.properties.longitude, d.properties.latitude])[1];
				  	    	 })
					.attr("r", function(d) { return Math.sqrt(+d.properties.capitalWojUR * 50);
					   });
			
			mapCapital.append("text")
					.attr("x", 550)
					.attr("y", 100)
					.attr("text-anchor", "start")
					.attr("fill", "none")
					.text(function(d) { return d.properties.capital; })
					.append("tspan")
					.attr("x", 550)
					.attr("dy", 25)
					.text(function(d) { return "Unemployment rate: " + d.properties.capitalWojUR + "%"; })
					.append("tspan")
					.attr("x", 550)
					.attr("dy", 25)
					.text(function(d) { return d.properties.name + "'s nemployment rate: " + d.properties.un_rate_woj; });


			mapCapital.on("mouseover", function() { 
                    d3.select(this)
                    .classed("hover", true)
                });
                
        	mapCapital.on("mouseout", function() { 
            	d3.select(this)
                .classed("hover", false)
        		});

		for (var i = 0; i < 5; i++) {
			svg.append("rect")
				.attr("y", 490)
				.attr("x", (i*20)+75)
				.attr("width", 20)
				.attr("height", 20)
				.attr("fill", legendColor[i])
				.attr("class", "rect")
								};

			svg.append("text")
				.attr("x", 70)
				.attr("y", 505)
				.attr("text-anchor", "end")
				.attr("class", "legend")
				.text("7%");

			svg.append("text")
				.attr("x", 210)
				.attr("y", 505)
				.attr("text-anchor", "end")
				.attr("class", "legend")
				.text("16.5%");

			});
	});
	
	</script>

</div>
</body>
</html><!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>D3 Example</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script src="model-min.js"></script>
    <link href='http://fonts.googleapis.com/css?family=Poiret+One' rel='stylesheet' type='text/css'>
    <style>

      body {
        background-color: lightgray;
      }
    
      .axis text {
        font-family: 'Poiret One', cursive;
        font-size: 16pt;
      }
      .axis .label {
        font-size: 20pt;
      }

      .axis path, .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
      }

      .visualization {
        position: fixed;
        top: 50px;
        bottom: 50px;
        left: 280px;
        right: 280px;
        background-color: white;
        border-radius: 25px;
        border-style: dotted;
        border-width: 2px;
      }

      circle:hover {
        stroke-width: 2px;
        stroke: black;
      }

    </style>
  </head>
  <body>
    <div class="visualization" id="scatterPlotContainer"></div>
    <script>

      function ScatterPlot(container){

        var model = Model();

        var svg = container.append("svg");
        var g = svg.append("g");

        var xAxisG = g.append("g")
          .attr("class", "x axis");
        var xAxisLabel = xAxisG.append("text")
          .style("text-anchor", "middle")
          .attr("class", "label");

        var yAxisG = g.append("g")
          .attr("class", "y axis");
        var yAxisLabel = yAxisG.append("text")
          .style("text-anchor", "middle")
          .attr("class", "label");

        var xAxis = d3.svg.axis()
          .orient("bottom")
          .tickFormat(d3.format("s"))
          .outerTickSize(0);

        var yAxis = d3.svg.axis()
          .orient("left")
          .tickFormat(d3.format("s"))
          .outerTickSize(0);

        // This encapsulates the D3 margin convention from http://bl.ocks.org/mbostock/3019563
        model.when(["outerWidth", "outerHeight", "margin"],
            function(outerWidth ,  outerHeight ,  margin){
          model.set({
            innerWidth:  outerWidth  - margin.left - margin.right,
            innerHeight: outerHeight - margin.top  - margin.bottom
          });
        });

        model.when(["outerWidth" ], function (outerWidth ){ svg.attr("width" , outerWidth ); });
        model.when(["outerHeight"], function (outerHeight){ svg.attr("height", outerHeight); });

        model.when("margin", function (margin){
          g.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
        });

        model.when("innerHeight", function (innerHeight){
          xAxisG.attr("transform", "translate(0," + innerHeight + ")");
        });

        model.when(["innerWidth", "xAxisLabelOffset", "xAxisLabelText"],
            function(innerWidth,   xAxisLabelOffset,   xAxisLabelText){
          xAxisLabel
            .attr("x", innerWidth / 2)
            .attr("y", xAxisLabelOffset)
            .text(xAxisLabelText);
        });

        model.when(["innerHeight", "yAxisLabelOffset", "yAxisLabelText"],
            function(innerHeight,   yAxisLabelOffset,   yAxisLabelText){
          yAxisLabel
            .attr("transform", "translate(-" + yAxisLabelOffset + "," + (innerHeight / 2) + ") rotate(-90)")
            .text(yAxisLabelText);
        });

        (function (){
          var xScale = d3.scale.linear();

          model.when(["data", "xAccessor"], function(data, xAccessor){
            model.xScaleDomain = d3.extent(data, xAccessor);
          });

          model.when(["xScaleDomain", "innerWidth"], function (xScaleDomain, innerWidth){
            model.xScale = xScale.domain(xScaleDomain).range([0, innerWidth]);
          });
        }());

        (function (){
          var yScale = d3.scale.linear();

          model.when(["data", "yAccessor"], function(data, yAccessor){
            model.yScaleDomain = d3.extent(data, yAccessor);
          });

          model.when(["yScaleDomain", "innerHeight"], function (yScaleDomain, innerHeight){
            model.yScale = yScale.domain(yScaleDomain).range([innerHeight, 0]);
          });
        }());

        (function (){
          var rScale = d3.scale.linear();

          model.when(["data", "rColumn"], function(data, rColumn){
            model.rScaleDomain = d3.extent(data, function (d){ return d[rColumn]; });
          });

          model.when(["rScaleDomain", "rMin", "rMax"], function (rScaleDomain, rMin, rMax){
            model.rScale = rScale.domain(rScaleDomain).range([rMin, rMax]);
          });
        }());

        model.when(["xScale", "xAxisNumTicks"], function (xScale, xAxisNumTicks){
          xAxisG.call(xAxis.scale(xScale).ticks(xAxisNumTicks));
        });

        model.when(["yScale", "yAxisNumTicks"], function (yScale, yAxisNumTicks){
          yAxisG.call(yAxis.scale(yScale).ticks(yAxisNumTicks));
        });

        model.when("xColumn", function (xColumn){
          model.xAccessor = function (d){ return d[xColumn]; };
        });

        model.when(["xScale", "xAccessor"], function (xScale, xAccessor){
          model.x = compose(xScale, xAccessor);
        });

        model.when("yColumn", function(yColumn){
          model.yAccessor = function (d){ return d[yColumn]; };
        });

        model.when(["yScale", "yAccessor"], function (yScale, yAccessor){
          model.y = compose(yScale, yAccessor);
        });

        model.when("rColumn", function(rColumn){
          model.rAccessor = function (d){ return d[rColumn]; };
        });

        model.when(["rScale", "rAccessor"], function (rScale, rAccessor){
          model.r = compose(rScale, rAccessor);
        });

        model.when("colorColumn", function(colorColumn){
          model.colorAccessor = function (d){ return d[colorColumn]; };
        });

        model.when(["colorScale", "colorAccessor"], function (colorScale, colorAccessor){
          model.color = compose(colorScale, colorAccessor);
        });

        model.when(["data", "x", "y", "r", "color"], function(data, x, y, r, color){
          var circles = g.selectAll("circle").data(data);
          circles.enter().append("circle");
          circles
            .attr("cx", x)
            .attr("cy", y)
            .attr("r", r)
            .attr("fill", color)
          circles.exit().remove();
        });

        return model;
      }

      // http://en.wikipedia.org/wiki/Function_composition
      function compose(g, f){
        return function(d){ return g(f(d)); };
      }

      function main(){

        var container = d3.select("#scatterPlotContainer");

        var scatterPlot = ScatterPlot(container);

        scatterPlot.set({
          outerWidth: 100,
          outerHeight: 500,
          margin: { left: 80, top: 10, right: 15, bottom: 80 },
          rMin: 2, // "r" stands for radius
          rMax: 15,
          xColumn: "sepal_length",
          yColumn: "petal_length",
          rColumn: "sepal_width",
          colorColumn: "species",
          colorScale: d3.scale.category10(),
          xAxisLabelText: "Sepal Length (cm)",
          xAxisLabelOffset: 65,
          xAxisNumTicks: 10,
          yAxisLabelText: "Petal Length (cm)",
          yAxisLabelOffset: 35,
          yAxisNumTicks: 5
        });

        function type(d){
          d.sepal_length = +d.sepal_length;
          d.sepal_width  = +d.sepal_width;
          d.petal_length = +d.petal_length;
          d.petal_width  = +d.petal_width;
          return d;
        }

        d3.csv("iris.csv", type, function (data) {
          scatterPlot.data = data;
        });

        function setSize(){
          var containerNode = container.node();
          scatterPlot.set({
            outerWidth:  containerNode.clientWidth,
            outerHeight: containerNode.clientHeight
          });
        }

        d3.select(window).on("load"  , setSize);
        d3.select(window).on("resize", setSize);
      }

      main();
    </script>
  </body>
</html>
<!DOCTYPE html>
<html>
<meta charset="utf-8">
<title>Streamgraph</title>
<head>
<style>

body {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    margin: auto;
    position: relative;
}


.grid path {
    stroke-width: 1;
}

.chart rect {
    fill: steelblue;
}

.chart text {
    fill: black;
    font: 10px gotham, sans-serif;
    text-anchor: end;
}
.x text {
	font: 4px gotham, sans-serif;
}

.y text {
	font: 10px gotham, sans-serif;
}

.axis text {
    font: gotham, sans-serif;
}

.axis path,
.axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
}

// heatmap

rect.bordered {
    stroke: #E6E6E6;
    stroke-width:2px;
}

text.mono {
    font-size: 9pt;
    font-family: Gotham, Consolas, courier;
    fill: #aaa;
}

text.axis-workweek {
    fill: #000;
}

text.axis-worktime {
    fill: #000;
}

</style><script>d3=function(){function n(n){return null!=n&&!isNaN(n)}function t(n){return n.length}function e(n){for(var t=1;n*t%1;)t*=10;return t}function r(n,t){try{for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}catch(r){n.prototype=t}}function i(){}function u(){}function a(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function o(){}function c(n){function t(){for(var t,r=e,i=-1,u=r.length;++i<u;)(t=r[i].on)&&t.apply(this,arguments);return n}var e=[],r=new i;return t.on=function(t,i){var u,a=r.get(t);return arguments.length<2?a&&a.on:(a&&(a.on=null,e=e.slice(0,u=e.indexOf(a)).concat(e.slice(u+1)),r.remove(t)),i&&e.push(r.set(t,{on:i})),n)},t}function l(){oa.event.stopPropagation(),oa.event.preventDefault()}function f(){for(var n,t=oa.event;n=t.sourceEvent;)t=n;return t}function s(n,t){function e(){n.on(t,null)}n.on(t,function(){l(),e()},!0),setTimeout(e,0)}function h(n){for(var t=new o,e=0,r=arguments.length;++e<r;)t[arguments[e]]=c(t);return t.of=function(e,r){return function(i){try{var u=i.sourceEvent=oa.event;i.target=n,oa.event=i,t[i.type].apply(e,r)}finally{oa.event=u}}},t}function g(n,t){var e=n.ownerSVGElement||n;if(e.createSVGPoint){var r=e.createSVGPoint();if(0>ma&&(la.scrollX||la.scrollY)){e=oa.select(ca.body).append("svg").style("position","absolute").style("top",0).style("left",0);var i=e[0][0].getScreenCTM();ma=!(i.f||i.e),e.remove()}return ma?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),r=r.matrixTransform(n.getScreenCTM().inverse()),[r.x,r.y]}var u=n.getBoundingClientRect();return[t.clientX-u.left-n.clientLeft,t.clientY-u.top-n.clientTop]}function p(n){for(var t=-1,e=n.length,r=[];++t<e;)r.push(n[t]);return r}function d(n){return Array.prototype.slice.call(n)}function m(n){return Ma(n,Ea),n}function v(n){return function(){return xa(n,this)}}function y(n){return function(){return ba(n,this)}}function M(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function i(){this.setAttribute(n,t)}function u(){this.setAttributeNS(n.space,n.local,t)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function o(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=oa.ns.qualify(n),null==t?n.local?r:e:"function"==typeof t?n.local?o:a:n.local?u:i}function x(n){return n.trim().replace(/\s+/g," ")}function _(n){return RegExp("(?:^|\\s+)"+oa.requote(n)+"(?:\\s+|$)","g")}function w(n,t){function e(){for(var e=-1;++e<i;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e<i;)n[e](this,r)}n=n.trim().split(/\s+/).map(S);var i=n.length;return"function"==typeof t?r:e}function S(n){var t=_(n);return function(e,r){if(i=e.classList)return r?i.add(n):i.remove(n);var i=e.getAttribute("class")||"";r?(t.lastIndex=0,t.test(i)||e.setAttribute("class",x(i+" "+n))):e.setAttribute("class",x(i.replace(t," ")))}}function E(n,t,e){function r(){this.style.removeProperty(n)}function i(){this.style.setProperty(n,t,e)}function u(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:"function"==typeof t?u:i}function k(n,t){function e(){delete this[n]}function r(){this[n]=t}function i(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:"function"==typeof t?i:r}function A(n){return{__data__:n}}function N(n){return function(){return Sa(this,n)}}function q(n){return arguments.length||(n=oa.ascending),function(t,e){return!t-!e||n(t.__data__,e.__data__)}}function T(){}function C(n,t,e){function r(){var t=this[a];t&&(this.removeEventListener(n,t,t.$),delete this[a])}function i(){var i=c(t,va(arguments));r.call(this),this.addEventListener(n,this[a]=i,i.$=e),i._=t}function u(){var t,e=RegExp("^__on([^.]+)"+oa.requote(n)+"$");for(var r in this)if(t=r.match(e)){var i=this[r];this.removeEventListener(t[1],i,i.$),delete this[r]}}var a="__on"+n,o=n.indexOf("."),c=z;o>0&&(n=n.substring(0,o));var l=Na.get(n);return l&&(n=l,c=D),o?t?i:r:t?T:u}function z(n,t){return function(e){var r=oa.event;oa.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{oa.event=r}}}function D(n,t){var e=z(n,t);return function(n){var t=this,r=n.relatedTarget;r&&(r===t||r.compareDocumentPosition(t)&8)||e.call(t,n)}}function j(n,t){for(var e=0,r=n.length;r>e;e++)for(var i,u=n[e],a=0,o=u.length;o>a;a++)(i=u[a])&&t(i,a,e);return n}function L(n){return Ma(n,qa),n}function F(){}function H(n,t,e){return new P(n,t,e)}function P(n,t,e){this.h=n,this.s=t,this.l=e}function R(n,t,e){function r(n){return n>360?n-=360:0>n&&(n+=360),60>n?u+(a-u)*n/60:180>n?a:240>n?u+(a-u)*(240-n)/60:u}function i(n){return Math.round(r(n)*255)}var u,a;return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:0>t?0:t>1?1:t,e=0>e?0:e>1?1:e,a=.5>=e?e*(1+t):e+t-e*t,u=2*e-a,et(i(n+120),i(n),i(n-120))}function O(n){return n>0?1:0>n?-1:0}function Y(n){return Math.acos(Math.max(-1,Math.min(1,n)))}function U(n){return n>1?La/2:-1>n?-La/2:Math.asin(n)}function I(n){return(Math.exp(n)-Math.exp(-n))/2}function V(n){return(Math.exp(n)+Math.exp(-n))/2}function X(n){return(n=Math.sin(n/2))*n}function Z(n,t,e){return new B(n,t,e)}function B(n,t,e){this.h=n,this.c=t,this.l=e}function $(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),J(e,Math.cos(n*=Ha)*t,Math.sin(n)*t)}function J(n,t,e){return new G(n,t,e)}function G(n,t,e){this.l=n,this.a=t,this.b=e}function K(n,t,e){var r=(n+16)/116,i=r+t/500,u=r-e/200;return i=Q(i)*Ya,r=Q(r)*Ua,u=Q(u)*Ia,et(tt(3.2404542*i-1.5371385*r-.4985314*u),tt(-.969266*i+1.8760108*r+.041556*u),tt(.0556434*i-.2040259*r+1.0572252*u))}function W(n,t,e){return n>0?Z(Math.atan2(e,t)*Pa,Math.sqrt(t*t+e*e),n):Z(0/0,0/0,n)}function Q(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function nt(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function tt(n){return Math.round(255*(.00304>=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function et(n,t,e){return new rt(n,t,e)}function rt(n,t,e){this.r=n,this.g=t,this.b=e}function it(n){return 16>n?"0"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function ut(n,t,e){var r,i,u,a=0,o=0,c=0;if(r=/([a-z]+)\((.*)\)/i.exec(n))switch(i=r[2].split(","),r[1]){case"hsl":return e(parseFloat(i[0]),parseFloat(i[1])/100,parseFloat(i[2])/100);case"rgb":return t(lt(i[0]),lt(i[1]),lt(i[2]))}return(u=Za.get(n))?t(u.r,u.g,u.b):(null!=n&&n.charAt(0)==="#"&&(n.length===4?(a=n.charAt(1),a+=a,o=n.charAt(2),o+=o,c=n.charAt(3),c+=c):n.length===7&&(a=n.substring(1,3),o=n.substring(3,5),c=n.substring(5,7)),a=parseInt(a,16),o=parseInt(o,16),c=parseInt(c,16)),t(a,o,c))}function at(n,t,e){var r,i,u=Math.min(n/=255,t/=255,e/=255),a=Math.max(n,t,e),o=a-u,c=(a+u)/2;return o?(i=.5>c?o/(a+u):o/(2-a-u),r=n==a?(t-e)/o+(e>t?6:0):t==a?(e-n)/o+2:(n-t)/o+4,r*=60):(r=0/0,i=c>0&&1>c?0:r),H(r,i,c)}function ot(n,t,e){n=ct(n),t=ct(t),e=ct(e);var r=nt((.4124564*n+.3575761*t+.1804375*e)/Ya),i=nt((.2126729*n+.7151522*t+.072175*e)/Ua),u=nt((.0193339*n+.119192*t+.9503041*e)/Ia);return J(116*i-16,500*(r-i),200*(i-u))}function ct(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function lt(n){var t=parseFloat(n);return n.charAt(n.length-1)==="%"?Math.round(2.55*t):t}function ft(n){return"function"==typeof n?n:function(){return n}}function st(n){return n}function ht(n){return n.length===1?function(t,e){n(null==t?e:null)}:n}function gt(n,t){function e(n,e,u){arguments.length<3&&(u=e,e=null);var a=oa.xhr(n,t,u);return a.row=function(n){return arguments.length?a.response((e=n)==null?r:i(n)):e},a.row(e)}function r(n){return e.parse(n.responseText)}function i(n){return function(t){return e.parse(t.responseText,n)}}function a(t){return t.map(o).join(n)}function o(n){return c.test(n)?'"'+n.replace(/\"/g,'""')+'"':n}var c=RegExp('["'+n+"\n]"),l=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var i=Function("d","return {"+n.map(function(n,t){return JSON.stringify(n)+": d["+t+"]"}).join(",")+"}");r=t?function(n,e){return t(i(n),e)}:i})},e.parseRows=function(n,t){function e(){if(f>=c)return a;if(i)return i=!1,u;var t=f;if(n.charCodeAt(t)===34){for(var e=t;e++<c;)if(n.charCodeAt(e)===34){if(n.charCodeAt(e+1)!==34)break;++e}f=e+2;var r=n.charCodeAt(e+1);return 13===r?(i=!0,n.charCodeAt(e+2)===10&&++f):10===r&&(i=!0),n.substring(t+1,e).replace(/""/g,'"')}for(;c>f;){var r=n.charCodeAt(f++),o=1;if(10===r)i=!0;else if(13===r)i=!0,n.charCodeAt(f)===10&&(++f,++o);else if(r!==l)continue;return n.substring(t,f-o)}return n.substring(t)}for(var r,i,u={},a={},o=[],c=n.length,f=0,s=0;(r=e())!==a;){for(var h=[];r!==u&&r!==a;)h.push(r),r=e();(!t||(h=t(h,s++)))&&o.push(h)}return o},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new u,i=[];return t.forEach(function(n){for(var t in n)r.has(t)||i.push(r.add(t))}),[i.map(o).join(n)].concat(t.map(function(t){return i.map(function(n){return o(t[n])}).join(n)})).join("\n")},e.formatRows=function(n){return n.map(a).join("\n")},e}function pt(){for(var n,t=Date.now(),e=Ka;e;)n=t-e.then,n>=e.delay&&(e.flush=e.callback(n)),e=e.next;var r=dt()-t;r>24?(isFinite(r)&&(clearTimeout($a),$a=setTimeout(pt,r)),Ba=0):(Ba=1,Wa(pt))}function dt(){for(var n=null,t=Ka,e=1/0;t;)t.flush?(delete Ga[t.callback.id],t=n?n.next=t.next:Ka=t.next):(e=Math.min(e,t.then+t.delay),t=(n=t).next);return e}function mt(n,t){var e=Math.pow(10,Math.abs(8-t)*3);return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}}function vt(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function yt(n){return n+""}function Mt(n,t){n&&co.hasOwnProperty(n.type)&&co[n.type](n,t)}function xt(n,t,e){var r,i=-1,u=n.length-e;for(t.lineStart();++i<u;)r=n[i],t.point(r[0],r[1]);t.lineEnd()}function bt(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)xt(n[e],t,1);t.polygonEnd()}function _t(){function n(n,t){n*=Ha,t=t*Ha/2+La/4;var e=n-r,a=Math.cos(t),o=Math.sin(t),c=u*o,l=fo,f=so,s=i*a+c*Math.cos(e),h=c*Math.sin(e);fo=l*s-f*h,so=f*s+l*h,r=n,i=a,u=o}var t,e,r,i,u;ho.point=function(a,o){ho.point=n,r=(t=a)*Ha,i=Math.cos(o=(e=o)*Ha/2+La/4),u=Math.sin(o)},ho.lineEnd=function(){n(t,e)}}function wt(n){function t(n,t){r>n&&(r=n),n>u&&(u=n),i>t&&(i=t),t>a&&(a=t)}function e(){o.point=o.lineEnd=T}var r,i,u,a,o={point:t,lineStart:T,lineEnd:T,polygonStart:function(){o.lineEnd=e},polygonEnd:function(){o.point=t}};return function(t){return a=u=-(r=i=1/0),oa.geo.stream(t,n(o)),[[r,i],[u,a]]}}function St(n,t){if(!go){++po,n*=Ha;var e=Math.cos(t*=Ha);mo+=(e*Math.cos(n)-mo)/po,vo+=(e*Math.sin(n)-vo)/po,yo+=(Math.sin(t)-yo)/po}}function Et(){var n,t;go=1,kt(),go=2;var e=Mo.point;Mo.point=function(r,i){e(n=r,t=i)},Mo.lineEnd=function(){Mo.point(n,t),At(),Mo.lineEnd=At}}function kt(){function n(n,i){n*=Ha;var u=Math.cos(i*=Ha),a=u*Math.cos(n),o=u*Math.sin(n),c=Math.sin(i),l=Math.atan2(Math.sqrt((l=e*c-r*o)*l+(l=r*a-t*c)*l+(l=t*o-e*a)*l),t*a+e*o+r*c);po+=l,mo+=l*(t+(t=a)),vo+=l*(e+(e=o)),yo+=l*(r+(r=c))}var t,e,r;go>1||(1>go&&(go=1,po=mo=vo=yo=0),Mo.point=function(i,u){i*=Ha;var a=Math.cos(u*=Ha);t=a*Math.cos(i),e=a*Math.sin(i),r=Math.sin(u),Mo.point=n})}function At(){Mo.point=St}function Nt(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function qt(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function Tt(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function Ct(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function zt(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function Dt(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function jt(){return!0}function Lt(n){return[Math.atan2(n[1],n[0]),Math.asin(Math.max(-1,Math.min(1,n[2])))]}function Ft(n,t){return Math.abs(n[0]-t[0])<Fa&&Math.abs(n[1]-t[1])<Fa}function Ht(n,t,e,r,i){var u=[],a=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if(Ft(e,r)){i.lineStart();for(var o=0;t>o;++o)i.point((e=n[o])[0],e[1]);return i.lineEnd(),void 0}var c={point:e,points:n,other:null,visited:!1,entry:!0,subject:!0},l={point:e,points:[e],other:c,visited:!1,entry:!1,subject:!1};c.other=l,u.push(c),a.push(l),c={point:r,points:[r],other:null,visited:!1,entry:!1,subject:!0},l={point:r,points:[r],other:c,visited:!1,entry:!0,subject:!1},c.other=l,u.push(c),a.push(l)}}),a.sort(t),Pt(u),Pt(a),u.length){if(e)for(var o=1,c=!e(a[0].point),l=a.length;l>o;++o)a[o].entry=c=!c;for(var f,s,h,g=u[0];;){for(f=g;f.visited;)if((f=f.next)===g)return;s=f.points,i.lineStart();do{if(f.visited=f.other.visited=!0,f.entry){if(f.subject)for(var o=0;o<s.length;o++)i.point((h=s[o])[0],h[1]);else r(f.point,f.next.point,1,i);f=f.next}else{if(f.subject){s=f.prev.points;for(var o=s.length;--o>=0;)i.point((h=s[o])[0],h[1])}else r(f.point,f.prev.point,-1,i);f=f.prev}f=f.other,s=f.points}while(!f.visited);i.lineEnd()}}}function Pt(n){if(t=n.length){for(var t,e,r=0,i=n[0];++r<t;)i.next=e=n[r],e.prev=i,i=e;i.next=e=n[0],e.prev=i}}function Rt(n,t,e){return function(r){function i(t,e){n(t,e)&&r.point(t,e)}function u(n,t){m.point(n,t)}function a(){v.point=u,m.lineStart()}function o(){v.point=i,m.lineEnd()}function c(n,t){M.point(n,t),d.push([n,t])}function l(){M.lineStart(),d=[]}function f(){c(d[0][0],d[0][1]),M.lineEnd();var n,t=M.clean(),e=y.buffer(),i=e.length;if(!i)return p=!0,g+=Ut(d,-1),d=null,void 0;if(d=null,1&t){n=e[0],h+=Ut(n,1);var u,i=n.length-1,a=-1;for(r.lineStart();++a<i;)r.point((u=n[a])[0],u[1]);return r.lineEnd(),void 0}i>1&&2&t&&e.push(e.pop().concat(e.shift())),s.push(e.filter(Ot))}var s,h,g,p,d,m=t(r),v={point:i,lineStart:a,lineEnd:o,polygonStart:function(){v.point=c,v.lineStart=l,v.lineEnd=f,p=!1,g=h=0,s=[],r.polygonStart()},polygonEnd:function(){v.point=i,v.lineStart=a,v.lineEnd=o,s=oa.merge(s),s.length?Ht(s,It,null,e,r):(-Fa>h||p&&-Fa>g)&&(r.lineStart(),e(null,null,1,r),r.lineEnd()),r.polygonEnd(),s=null},sphere:function(){r.polygonStart(),r.lineStart(),e(null,null,1,r),r.lineEnd(),r.polygonEnd()}},y=Yt(),M=t(y);return v}}function Ot(n){return n.length>1}function Yt(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:T,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function Ut(n,t){if(!(e=n.length))return 0;for(var e,r,i,u=0,a=0,o=n[0],c=o[0],l=o[1],f=Math.cos(l),s=Math.atan2(t*Math.sin(c)*f,Math.sin(l)),h=1-t*Math.cos(c)*f,g=s;++u<e;)o=n[u],f=Math.cos(l=o[1]),r=Math.atan2(t*Math.sin(c=o[0])*f,Math.sin(l)),i=1-t*Math.cos(c)*f,Math.abs(h-2)<Fa&&Math.abs(i-2)<Fa||(Math.abs(i)<Fa||Math.abs(h)<Fa||(Math.abs(Math.abs(r-s)-La)<Fa?i+h>2&&(a+=4*(r-s)):a+=Math.abs(h-2)<Fa?4*(r-g):((3*La+r-s)%(2*La)-La)*(h+i)),g=s,s=r,h=i);return a}function It(n,t){return((n=n.point)[0]<0?n[1]-La/2-Fa:La/2-n[1])-((t=t.point)[0]<0?t[1]-La/2-Fa:La/2-t[1])}function Vt(n){var t,e=0/0,r=0/0,i=0/0;return{lineStart:function(){n.lineStart(),t=1},point:function(u,a){var o=u>0?La:-La,c=Math.abs(u-e);Math.abs(c-La)<Fa?(n.point(e,r=(r+a)/2>0?La/2:-La/2),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(o,r),n.point(u,r),t=0):i!==o&&c>=La&&(Math.abs(e-i)<Fa&&(e-=i*Fa),Math.abs(u-o)<Fa&&(u-=o*Fa),r=Xt(e,r,u,a),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(o,r),t=0),n.point(e=u,r=a),i=o},lineEnd:function(){n.lineEnd(),e=r=0/0},clean:function(){return 2-t}}}function Xt(n,t,e,r){var i,u,a=Math.sin(n-e);return Math.abs(a)>Fa?Math.atan((Math.sin(t)*(u=Math.cos(r))*Math.sin(e)-Math.sin(r)*(i=Math.cos(t))*Math.sin(n))/(i*u*a)):(t+r)/2}function Zt(n,t,e,r){var i;if(null==n)i=e*La/2,r.point(-La,i),r.point(0,i),r.point(La,i),r.point(La,0),r.point(La,-i),r.point(0,-i),r.point(-La,-i),r.point(-La,0),r.point(-La,i);else if(Math.abs(n[0]-t[0])>Fa){var u=(n[0]<t[0]?1:-1)*La;i=e*u/2,r.point(-u,i),r.point(0,i),r.point(u,i)}else r.point(t[0],t[1])}function Bt(n){function t(n,t){return Math.cos(n)*Math.cos(t)>u}function e(n){var e,u,c,l,f;return{lineStart:function(){l=c=!1,f=1},point:function(s,h){var g,p=[s,h],d=t(s,h),m=a?d?0:i(s,h):d?i(s+(0>s?La:-La),h):0;if(!e&&(l=c=d)&&n.lineStart(),d!==c&&(g=r(e,p),(Ft(e,g)||Ft(p,g))&&(p[0]+=Fa,p[1]+=Fa,d=t(p[0],p[1]))),d!==c)f=0,d?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(o&&e&&a^d){var v;m&u||!(v=r(p,e,!0))||(f=0,a?(n.lineStart(),n.point(v[0][0],v[0][1]),n.point(v[1][0],v[1][1]),n.lineEnd()):(n.point(v[1][0],v[1][1]),n.lineEnd(),n.lineStart(),n.point(v[0][0],v[0][1])))}!d||e&&Ft(e,p)||n.point(p[0],p[1]),e=p,c=d,u=m},lineEnd:function(){c&&n.lineEnd(),e=null},clean:function(){return f|(l&&c)<<1}}}function r(n,t,e){var r=Nt(n),i=Nt(t),a=[1,0,0],o=Tt(r,i),c=qt(o,o),l=o[0],f=c-l*l;if(!f)return!e&&n;var s=u*c/f,h=-u*l/f,g=Tt(a,o),p=zt(a,s),d=zt(o,h);Ct(p,d);var m=g,v=qt(p,m),y=qt(m,m),M=v*v-y*(qt(p,p)-1);if(!(0>M)){var x=Math.sqrt(M),b=zt(m,(-v-x)/y);if(Ct(b,p),b=Lt(b),!e)return b;var _,w=n[0],S=t[0],E=n[1],k=t[1];w>S&&(_=w,w=S,S=_);var A=S-w,N=Math.abs(A-La)<Fa,q=N||Fa>A;if(!N&&E>k&&(_=E,E=k,k=_),q?N?E+k>0^b[1]<(Math.abs(b[0]-w)<Fa?E:k):E<=b[1]&&b[1]<=k:A>La^(w<=b[0]&&b[0]<=S)){var T=zt(m,(-v+x)/y);return Ct(T,p),[b,Lt(T)]}}}function i(t,e){var r=a?n:La-n,i=0;return-r>t?i|=1:t>r&&(i|=2),-r>e?i|=4:e>r&&(i|=8),i}var u=Math.cos(n),a=u>0,o=Math.abs(u)>Fa,c=ae(n,6*Ha);return Rt(t,e,c)}function $t(n,t,e,r){function i(r,i){return Math.abs(r[0]-n)<Fa?i>0?0:3:Math.abs(r[0]-e)<Fa?i>0?2:1:Math.abs(r[1]-t)<Fa?i>0?1:0:i>0?3:2}function u(n,t){return a(n.point,t.point)}function a(n,t){var e=i(n,1),r=i(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}function o(i,u){var a=u[0]-i[0],o=u[1]-i[1],c=[0,1];return Math.abs(a)<Fa&&Math.abs(o)<Fa?n<=i[0]&&i[0]<=e&&t<=i[1]&&i[1]<=r:Jt(n-i[0],a,c)&&Jt(i[0]-e,-a,c)&&Jt(t-i[1],o,c)&&Jt(i[1]-r,-o,c)?(c[1]<1&&(u[0]=i[0]+c[1]*a,u[1]=i[1]+c[1]*o),c[0]>0&&(i[0]+=c[0]*a,i[1]+=c[0]*o),!0):!1}return function(c){function l(u){var a=i(u,-1),o=f([0===a||3===a?n:e,a>1?r:t]);return o}function f(n){for(var t=0,e=M.length,r=n[1],i=0;e>i;++i)for(var u=1,a=M[i],o=a.length,c=a[0];o>u;++u)b=a[u],c[1]<=r?b[1]>r&&s(c,b,n)>0&&++t:b[1]<=r&&s(c,b,n)<0&&--t,c=b;return 0!==t}function s(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(e[0]-n[0])*(t[1]-n[1])}function h(u,o,c,l){var f=0,s=0;if(null==u||(f=i(u,c))!==(s=i(o,c))||a(u,o)<0^c>0){do l.point(0===f||3===f?n:e,f>1?r:t);while((f=(f+c+4)%4)!==s)}else l.point(o[0],o[1])}function g(i,u){return i>=n&&e>=i&&u>=t&&r>=u}function p(n,t){g(n,t)&&c.point(n,t)}function d(){C.point=v,M&&M.push(x=[]),N=!0,A=!1,E=k=0/0}function m(){y&&(v(_,w),S&&A&&T.rejoin(),y.push(T.buffer())),C.point=p,A&&c.lineEnd()}function v(n,t){n=Math.max(-bo,Math.min(bo,n)),t=Math.max(-bo,Math.min(bo,t));var e=g(n,t);if(M&&x.push([n,t]),N)_=n,w=t,S=e,N=!1,e&&(c.lineStart(),c.point(n,t));else if(e&&A)c.point(n,t);else{var r=[E,k],i=[n,t];o(r,i)?(A||(c.lineStart(),c.point(r[0],r[1])),c.point(i[0],i[1]),e||c.lineEnd()):(c.lineStart(),c.point(n,t))}E=n,k=t,A=e}var y,M,x,_,w,S,E,k,A,N,q=c,T=Yt(),C={point:p,lineStart:d,lineEnd:m,polygonStart:function(){c=T,y=[],M=[]},polygonEnd:function(){c=q,(y=oa.merge(y)).length?(c.polygonStart(),Ht(y,u,l,h,c),c.polygonEnd()):f([n,t])&&(c.polygonStart(),c.lineStart(),h(null,null,1,c),c.lineEnd(),c.polygonEnd()),y=M=x=null}};return C}}function Jt(n,t,e){if(Math.abs(t)<Fa)return 0>=n;var r=n/t;if(t>0){if(r>e[1])return!1;r>e[0]&&(e[0]=r)}else{if(r<e[0])return!1;r<e[1]&&(e[1]=r)}return!0}function Gt(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return e=t.invert(e,r),e&&n.invert(e[0],e[1])}),e}function Kt(n){function t(t){function r(e,r){e=n(e,r),t.point(e[0],e[1])}function u(){f=0/0,d.point=a,t.lineStart()}function a(r,u){var a=Nt([r,u]),o=n(r,u);e(f,s,l,h,g,p,f=o[0],s=o[1],l=r,h=a[0],g=a[1],p=a[2],i,t),t.point(f,s)}function o(){d.point=r,t.lineEnd()}function c(){var n,r,c,m,v,y,M;u(),d.point=function(t,e){a(n=t,r=e),c=f,m=s,v=h,y=g,M=p,d.point=a},d.lineEnd=function(){e(f,s,l,h,g,p,c,m,n,v,y,M,i,t),d.lineEnd=o,o()}}var l,f,s,h,g,p,d={point:r,lineStart:u,lineEnd:o,polygonStart:function(){t.polygonStart(),d.lineStart=c},polygonEnd:function(){t.polygonEnd(),d.lineStart=u}};return d}function e(t,i,u,a,o,c,l,f,s,h,g,p,d,m){var v=l-t,y=f-i,M=v*v+y*y;if(M>4*r&&d--){var x=a+h,b=o+g,_=c+p,w=Math.sqrt(x*x+b*b+_*_),S=Math.asin(_/=w),E=Math.abs(Math.abs(_)-1)<Fa?(u+s)/2:Math.atan2(b,x),k=n(E,S),A=k[0],N=k[1],q=A-t,T=N-i,C=y*q-v*T;(C*C/M>r||Math.abs((v*q+y*T)/M-.5)>.3)&&(e(t,i,u,a,o,c,A,N,E,x/=w,b/=w,_,d,m),m.point(A,N),e(A,N,E,x,b,_,l,f,s,h,g,p,d,m))}}var r=.5,i=16;return t.precision=function(n){return arguments.length?(i=(r=n*n)>0&&16,t):Math.sqrt(r)},t}function Wt(n){return Qt(function(){return n})()}function Qt(n){function t(n){return n=a(n[0]*Ha,n[1]*Ha),[n[0]*f+o,c-n[1]*f]}function e(n){return n=a.invert((n[0]-o)/f,(c-n[1])/f),n&&[n[0]*Pa,n[1]*Pa]}function r(){a=Gt(u=ee(d,m,v),i);var n=i(g,p);return o=s-n[0]*f,c=h+n[1]*f,t}var i,u,a,o,c,l=Kt(function(n,t){return n=i(n,t),[n[0]*f+o,c-n[1]*f]}),f=150,s=480,h=250,g=0,p=0,d=0,m=0,v=0,y=xo,M=st,x=null,b=null;return t.stream=function(n){return ne(u,y(l(M(n))))},t.clipAngle=function(n){return arguments.length?(y=null==n?(x=n,xo):Bt((x=+n)*Ha),t):x},t.clipExtent=function(n){return arguments.length?(b=n,M=null==n?st:$t(n[0][0],n[0][1],n[1][0],n[1][1]),t):b},t.scale=function(n){return arguments.length?(f=+n,r()):f},t.translate=function(n){return arguments.length?(s=+n[0],h=+n[1],r()):[s,h]},t.center=function(n){return arguments.length?(g=n[0]%360*Ha,p=n[1]%360*Ha,r()):[g*Pa,p*Pa]},t.rotate=function(n){return arguments.length?(d=n[0]%360*Ha,m=n[1]%360*Ha,v=n.length>2?n[2]%360*Ha:0,r()):[d*Pa,m*Pa,v*Pa]},oa.rebind(t,l,"precision"),function(){return i=n.apply(this,arguments),t.invert=i.invert&&e,r()}}function ne(n,t){return{point:function(e,r){r=n(e*Ha,r*Ha),e=r[0],t.point(e>La?e-2*La:-La>e?e+2*La:e,r[1])},sphere:function(){t.sphere()},lineStart:function(){t.lineStart()},lineEnd:function(){t.lineEnd()},polygonStart:function(){t.polygonStart()},polygonEnd:function(){t.polygonEnd()}}}function te(n,t){return[n,t]}function ee(n,t,e){return n?t||e?Gt(ie(n),ue(t,e)):ie(n):t||e?ue(t,e):te}function re(n){return function(t,e){return t+=n,[t>La?t-2*La:-La>t?t+2*La:t,e]}}function ie(n){var t=re(n);return t.invert=re(-n),t}function ue(n,t){function e(n,t){var e=Math.cos(t),o=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),f=l*r+o*i;return[Math.atan2(c*u-f*a,o*r-l*i),Math.asin(Math.max(-1,Math.min(1,f*u+c*a)))]}var r=Math.cos(n),i=Math.sin(n),u=Math.cos(t),a=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),o=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),f=l*u-c*a;return[Math.atan2(c*u+l*a,o*r+f*i),Math.asin(Math.max(-1,Math.min(1,f*r-o*i)))]},e}function ae(n,t){var e=Math.cos(n),r=Math.sin(n);return function(i,u,a,o){null!=i?(i=oe(e,i),u=oe(e,u),(a>0?u>i:i>u)&&(i+=2*a*La)):(i=n+2*a*La,u=n);for(var c,l=a*t,f=i;a>0?f>u:u>f;f-=l)o.point((c=Lt([e,-r*Math.cos(f),-r*Math.sin(f)]))[0],c[1])}}function oe(n,t){var e=Nt(t);e[0]-=n,Dt(e);var r=Y(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-Fa)%(2*Math.PI)}function ce(n,t,e){var r=oa.range(n,t-Fa,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function le(n,t,e){var r=oa.range(n,t-Fa,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function fe(n){return n.source}function se(n){return n.target}function he(n,t,e,r){var i=Math.cos(t),u=Math.sin(t),a=Math.cos(r),o=Math.sin(r),c=i*Math.cos(n),l=i*Math.sin(n),f=a*Math.cos(e),s=a*Math.sin(e),h=2*Math.asin(Math.sqrt(X(r-t)+i*a*X(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*c+t*f,i=e*l+t*s,a=e*u+t*o;return[Math.atan2(i,r)*Pa,Math.atan2(a,Math.sqrt(r*r+i*i))*Pa]}:function(){return[n*Pa,t*Pa]};return p.distance=h,p}function ge(){function n(n,i){var u=Math.sin(i*=Ha),a=Math.cos(i),o=Math.abs((n*=Ha)-t),c=Math.cos(o);_o+=Math.atan2(Math.sqrt((o=a*Math.sin(o))*o+(o=r*u-e*a*c)*o),e*u+r*a*c),t=n,e=u,r=a}var t,e,r;wo.point=function(i,u){t=i*Ha,e=Math.sin(u*=Ha),r=Math.cos(u),wo.point=n},wo.lineEnd=function(){wo.point=wo.lineEnd=T}}function pe(n){var t=0,e=La/3,r=Qt(n),i=r(t,e);return i.parallels=function(n){return arguments.length?r(t=n[0]*La/180,e=n[1]*La/180):[180*(t/La),180*(e/La)]},i}function de(n,t){function e(n,t){var e=Math.sqrt(u-2*i*Math.sin(t))/i;return[e*Math.sin(n*=i),a-e*Math.cos(n)]}var r=Math.sin(n),i=(r+Math.sin(t))/2,u=1+r*(2*i-r),a=Math.sqrt(u)/i;return e.invert=function(n,t){var e=a-t;return[Math.atan2(n,e)/i,Math.asin((u-(n*n+e*e)*i*i)/(2*i))]},e}function me(n,t){var e=n(t[0]),r=n([.5*(t[0][0]+t[1][0]),t[0][1]]),i=n([t[1][0],t[0][1]]),u=n(t[1]),a=r[1]-e[1],o=r[0]-e[0],c=i[1]-r[1],l=i[0]-r[0],f=a/o,s=c/l,h=.5*(f*s*(e[1]-i[1])+s*(e[0]+r[0])-f*(r[0]+i[0]))/(s-f),g=(.5*(e[0]+r[0])-h)/f+.5*(e[1]+r[1]),p=u[0]-h,d=u[1]-g,m=e[0]-h,v=e[1]-g,y=p*p+d*d,M=m*m+v*v,x=Math.atan2(d,p),b=Math.atan2(v,m);return function(t){var e=t[0]-h,r=t[1]-g,i=e*e+r*r,u=Math.atan2(r,e);return i>y&&M>i&&u>x&&b>u?n.invert(t):void 0}}function ve(){function n(n,t){Eo+=i*n-r*t,r=n,i=t}var t,e,r,i;ko.point=function(u,a){ko.point=n,t=r=u,e=i=a},ko.lineEnd=function(){n(t,e)}}function ye(){function n(n,t){a.push("M",n,",",t,u)}function t(n,t){a.push("M",n,",",t),o.point=e}function e(n,t){a.push("L",n,",",t)}function r(){o.point=n}function i(){a.push("Z")}var u=Se(4.5),a=[],o={point:n,lineStart:function(){o.point=t},lineEnd:r,polygonStart:function(){o.lineEnd=i},polygonEnd:function(){o.lineEnd=r,o.point=n},pointRadius:function(n){return u=Se(n),o},result:function(){if(a.length){var n=a.join("");return a=[],n}}};return o}function Me(n,t){go||(mo+=n,vo+=t,++yo)}function xe(){function n(n,r){var i=n-t,u=r-e,a=Math.sqrt(i*i+u*u);mo+=a*(t+n)/2,vo+=a*(e+r)/2,yo+=a,t=n,e=r}var t,e;if(1!==go){if(!(1>go))return;go=1,mo=vo=yo=0}Ao.point=function(r,i){Ao.point=n,t=r,e=i}}function be(){Ao.point=Me}function _e(){function n(n,t){var e=i*n-r*t;mo+=e*(r+n),vo+=e*(i+t),yo+=3*e,r=n,i=t}var t,e,r,i;2>go&&(go=2,mo=vo=yo=0),Ao.point=function(u,a){Ao.point=n,t=r=u,e=i=a},Ao.lineEnd=function(){n(t,e)}}function we(n){function t(t,e){n.moveTo(t,e),n.arc(t,e,a,0,2*La)}function e(t,e){n.moveTo(t,e),o.point=r}function r(t,e){n.lineTo(t,e)}function i(){o.point=t}function u(){n.closePath()}var a=4.5,o={point:t,lineStart:function(){o.point=e},lineEnd:i,polygonStart:function(){o.lineEnd=u},polygonEnd:function(){o.lineEnd=i,o.point=t},pointRadius:function(n){return a=n,o},result:T};return o}function Se(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function Ee(n){var t=Kt(function(t,e){return n([t*Pa,e*Pa])});return function(n){return n=t(n),{point:function(t,e){n.point(t*Ha,e*Ha)},sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}}function ke(n,t){function e(t,e){var r=Math.cos(t),i=Math.cos(e),u=n(r*i);return[u*i*Math.sin(t),u*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),i=t(r),u=Math.sin(i),a=Math.cos(i);return[Math.atan2(n*u,r*a),Math.asin(r&&e*u/r)]},e}function Ae(n,t){function e(n,t){var e=Math.abs(Math.abs(t)-La/2)<Fa?0:a/Math.pow(i(t),u);return[e*Math.sin(u*n),a-e*Math.cos(u*n)]}var r=Math.cos(n),i=function(n){return Math.tan(La/4+n/2)},u=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(i(t)/i(n)),a=r*Math.pow(i(n),u)/u;return u?(e.invert=function(n,t){var e=a-t,r=O(u)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/u,2*Math.atan(Math.pow(a/r,1/u))-La/2]},e):qe}function Ne(n,t){function e(n,t){var e=u-t;return[e*Math.sin(i*n),u-e*Math.cos(i*n)]}var r=Math.cos(n),i=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),u=r/i+n;return Math.abs(i)<Fa?te:(e.invert=function(n,t){var e=u-t;return[Math.atan2(n,e)/i,u-O(i)*Math.sqrt(n*n+e*e)]},e)}function qe(n,t){return[n,Math.log(Math.tan(La/4+t/2))]}function Te(n){var t,e=Wt(n),r=e.scale,i=e.translate,u=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=i.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var a=u.apply(e,arguments);if(a===e){if(t=null==n){var o=La*r(),c=i();u([[c[0]-o,c[1]-o],[c[0]+o,c[1]+o]])}}else t&&(a=null);return a},e.clipExtent(null)}function Ce(n,t){var e=Math.cos(t)*Math.sin(n);return[Math.log((1+e)/(1-e))/2,Math.atan2(Math.tan(t),Math.cos(n))]}function ze(n){function t(t){function a(){l.push("M",u(n(f),o))}for(var c,l=[],f=[],s=-1,h=t.length,g=ft(e),p=ft(r);++s<h;)i.call(this,c=t[s],s)?f.push([+g.call(this,c,s),+p.call(this,c,s)]):f.length&&(a(),f=[]);return f.length&&a(),l.length?l.join(""):null}var e=De,r=je,i=jt,u=Le,a=u.key,o=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(i=n,t):i},t.interpolate=function(n){return arguments.length?(a="function"==typeof n?u=n:(u=Do.get(n)||Le).key,t):a},t.tension=function(n){return arguments.length?(o=n,t):o},t}function De(n){return n[0]}function je(n){return n[1]}function Le(n){return n.join("L")}function Fe(n){return Le(n)+"Z"}function He(n){for(var t=0,e=n.length,r=n[0],i=[r[0],",",r[1]];++t<e;)i.push("V",(r=n[t])[1],"H",r[0]);return i.join("")}function Pe(n){for(var t=0,e=n.length,r=n[0],i=[r[0],",",r[1]];++t<e;)i.push("H",(r=n[t])[0],"V",r[1]);return i.join("")}function Re(n,t){return n.length<4?Le(n):n[1]+Ue(n.slice(1,n.length-1),Ie(n,t))}function Oe(n,t){return n.length<3?Le(n):n[0]+Ue((n.push(n[0]),n),Ie([n[n.length-2]].concat(n,[n[1]]),t))}function Ye(n,t){return n.length<3?Le(n):n[0]+Ue(n,Ie(n,t))}function Ue(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return Le(n);var e=n.length!=t.length,r="",i=n[0],u=n[1],a=t[0],o=a,c=1;if(e&&(r+="Q"+(u[0]-a[0]*2/3)+","+(u[1]-a[1]*2/3)+","+u[0]+","+u[1],i=n[1],c=2),t.length>1){o=t[1],u=n[c],c++,r+="C"+(i[0]+a[0])+","+(i[1]+a[1])+","+(u[0]-o[0])+","+(u[1]-o[1])+","+u[0]+","+u[1];for(var l=2;l<t.length;l++,c++)u=n[c],o=t[l],r+="S"+(u[0]-o[0])+","+(u[1]-o[1])+","+u[0]+","+u[1]}if(e){var f=n[c];r+="Q"+(u[0]+o[0]*2/3)+","+(u[1]+o[1]*2/3)+","+f[0]+","+f[1]}return r}function Ie(n,t){for(var e,r=[],i=(1-t)/2,u=n[0],a=n[1],o=1,c=n.length;++o<c;)e=u,u=a,a=n[o],r.push([i*(a[0]-e[0]),i*(a[1]-e[1])]);return r}function Ve(n){if(n.length<3)return Le(n);var t=1,e=n.length,r=n[0],i=r[0],u=r[1],a=[i,i,i,(r=n[1])[0]],o=[u,u,u,r[1]],c=[i,",",u];for(Je(c,a,o);++t<e;)r=n[t],a.shift(),a.push(r[0]),o.shift(),o.push(r[1]),Je(c,a,o);for(t=-1;++t<2;)a.shift(),a.push(r[0]),o.shift(),o.push(r[1]),Je(c,a,o);return c.join("")}function Xe(n){if(n.length<4)return Le(n);for(var t,e=[],r=-1,i=n.length,u=[0],a=[0];++r<3;)t=n[r],u.push(t[0]),a.push(t[1]);for(e.push($e(Fo,u)+","+$e(Fo,a)),--r;++r<i;)t=n[r],u.shift(),u.push(t[0]),a.shift(),a.push(t[1]),Je(e,u,a);return e.join("")}function Ze(n){for(var t,e,r=-1,i=n.length,u=i+4,a=[],o=[];++r<4;)e=n[r%i],a.push(e[0]),o.push(e[1]);for(t=[$e(Fo,a),",",$e(Fo,o)],--r;++r<u;)e=n[r%i],a.shift(),a.push(e[0]),o.shift(),o.push(e[1]),Je(t,a,o);return t.join("")}function Be(n,t){var e=n.length-1;if(e)for(var r,i,u=n[0][0],a=n[0][1],o=n[e][0]-u,c=n[e][1]-a,l=-1;++l<=e;)r=n[l],i=l/e,r[0]=t*r[0]+(1-t)*(u+i*o),r[1]=t*r[1]+(1-t)*(a+i*c);return Ve(n)}function $e(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function Je(n,t,e){n.push("C",$e(jo,t),",",$e(jo,e),",",$e(Lo,t),",",$e(Lo,e),",",$e(Fo,t),",",$e(Fo,e))}function Ge(n,t){return(t[1]-n[1])/(t[0]-n[0])}function Ke(n){for(var t=0,e=n.length-1,r=[],i=n[0],u=n[1],a=r[0]=Ge(i,u);++t<e;)r[t]=(a+(a=Ge(i=u,u=n[t+1])))/2;return r[t]=a,r}function We(n){for(var t,e,r,i,u=[],a=Ke(n),o=-1,c=n.length-1;++o<c;)t=Ge(n[o],n[o+1]),Math.abs(t)<1e-6?a[o]=a[o+1]=0:(e=a[o]/t,r=a[o+1]/t,i=e*e+r*r,i>9&&(i=3*t/Math.sqrt(i),a[o]=i*e,a[o+1]=i*r));for(o=-1;++o<=c;)i=(n[Math.min(c,o+1)][0]-n[Math.max(0,o-1)][0])/(6*(1+a[o]*a[o])),u.push([i||0,a[o]*i||0]);return u}function Qe(n){return n.length<3?Le(n):n[0]+Ue(n,We(n))}function nr(n,t,e,r){var i,u,a,o,c,l,f;return i=r[n],u=i[0],a=i[1],i=r[t],o=i[0],c=i[1],i=r[e],l=i[0],f=i[1],(f-a)*(o-u)-(c-a)*(l-u)>0}function tr(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])
}function er(n,t,e,r){var i=n[0],u=e[0],a=t[0]-i,o=r[0]-u,c=n[1],l=e[1],f=t[1]-c,s=r[1]-l,h=(o*(c-l)-s*(i-u))/(s*a-o*f);return[i+h*a,c+h*f]}function rr(n,t){var e={list:n.map(function(n,t){return{index:t,x:n[0],y:n[1]}}).sort(function(n,t){return n.y<t.y?-1:n.y>t.y?1:n.x<t.x?-1:n.x>t.x?1:0}),bottomSite:null},r={list:[],leftEnd:null,rightEnd:null,init:function(){r.leftEnd=r.createHalfEdge(null,"l"),r.rightEnd=r.createHalfEdge(null,"l"),r.leftEnd.r=r.rightEnd,r.rightEnd.l=r.leftEnd,r.list.unshift(r.leftEnd,r.rightEnd)},createHalfEdge:function(n,t){return{edge:n,side:t,vertex:null,l:null,r:null}},insert:function(n,t){t.l=n,t.r=n.r,n.r.l=t,n.r=t},leftBound:function(n){var t=r.leftEnd;do t=t.r;while(t!=r.rightEnd&&i.rightOf(t,n));return t=t.l},del:function(n){n.l.r=n.r,n.r.l=n.l,n.edge=null},right:function(n){return n.r},left:function(n){return n.l},leftRegion:function(n){return n.edge==null?e.bottomSite:n.edge.region[n.side]},rightRegion:function(n){return n.edge==null?e.bottomSite:n.edge.region[Ho[n.side]]}},i={bisect:function(n,t){var e={region:{l:n,r:t},ep:{l:null,r:null}},r=t.x-n.x,i=t.y-n.y,u=r>0?r:-r,a=i>0?i:-i;return e.c=n.x*r+n.y*i+.5*(r*r+i*i),u>a?(e.a=1,e.b=i/r,e.c/=r):(e.b=1,e.a=r/i,e.c/=i),e},intersect:function(n,t){var e=n.edge,r=t.edge;if(!e||!r||e.region.r==r.region.r)return null;var i=e.a*r.b-e.b*r.a;if(Math.abs(i)<1e-10)return null;var u,a,o=(e.c*r.b-r.c*e.b)/i,c=(r.c*e.a-e.c*r.a)/i,l=e.region.r,f=r.region.r;l.y<f.y||l.y==f.y&&l.x<f.x?(u=n,a=e):(u=t,a=r);var s=o>=a.region.r.x;return s&&u.side==="l"||!s&&u.side==="r"?null:{x:o,y:c}},rightOf:function(n,t){var e=n.edge,r=e.region.r,i=t.x>r.x;if(i&&n.side==="l")return 1;if(!i&&n.side==="r")return 0;if(e.a===1){var u=t.y-r.y,a=t.x-r.x,o=0,c=0;if(!i&&e.b<0||i&&e.b>=0?c=o=u>=e.b*a:(c=t.x+t.y*e.b>e.c,e.b<0&&(c=!c),c||(o=1)),!o){var l=r.x-e.region.l.x;c=e.b*(a*a-u*u)<l*u*(1+2*a/l+e.b*e.b),e.b<0&&(c=!c)}}else{var f=e.c-e.a*t.x,s=t.y-f,h=t.x-r.x,g=f-r.y;c=s*s>h*h+g*g}return n.side==="l"?c:!c},endPoint:function(n,e,r){n.ep[e]=r,n.ep[Ho[e]]&&t(n)},distance:function(n,t){var e=n.x-t.x,r=n.y-t.y;return Math.sqrt(e*e+r*r)}},u={list:[],insert:function(n,t,e){n.vertex=t,n.ystar=t.y+e;for(var r=0,i=u.list,a=i.length;a>r;r++){var o=i[r];if(!(n.ystar>o.ystar||n.ystar==o.ystar&&t.x>o.vertex.x))break}i.splice(r,0,n)},del:function(n){for(var t=0,e=u.list,r=e.length;r>t&&e[t]!=n;++t);e.splice(t,1)},empty:function(){return u.list.length===0},nextEvent:function(n){for(var t=0,e=u.list,r=e.length;r>t;++t)if(e[t]==n)return e[t+1];return null},min:function(){var n=u.list[0];return{x:n.vertex.x,y:n.ystar}},extractMin:function(){return u.list.shift()}};r.init(),e.bottomSite=e.list.shift();for(var a,o,c,l,f,s,h,g,p,d,m,v,y,M=e.list.shift();;)if(u.empty()||(a=u.min()),M&&(u.empty()||M.y<a.y||M.y==a.y&&M.x<a.x))o=r.leftBound(M),c=r.right(o),h=r.rightRegion(o),v=i.bisect(h,M),s=r.createHalfEdge(v,"l"),r.insert(o,s),d=i.intersect(o,s),d&&(u.del(o),u.insert(o,d,i.distance(d,M))),o=s,s=r.createHalfEdge(v,"r"),r.insert(o,s),d=i.intersect(s,c),d&&u.insert(s,d,i.distance(d,M)),M=e.list.shift();else{if(u.empty())break;o=u.extractMin(),l=r.left(o),c=r.right(o),f=r.right(c),h=r.leftRegion(o),g=r.rightRegion(c),m=o.vertex,i.endPoint(o.edge,o.side,m),i.endPoint(c.edge,c.side,m),r.del(o),u.del(c),r.del(c),y="l",h.y>g.y&&(p=h,h=g,g=p,y="r"),v=i.bisect(h,g),s=r.createHalfEdge(v,y),r.insert(l,s),i.endPoint(v,Ho[y],m),d=i.intersect(l,s),d&&(u.del(l),u.insert(l,d,i.distance(d,h))),d=i.intersect(s,f),d&&u.insert(s,d,i.distance(d,h))}for(o=r.right(r.leftEnd);o!=r.rightEnd;o=r.right(o))t(o.edge)}function ir(n){return n.x}function ur(n){return n.y}function ar(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function or(n,t,e,r,i,u){if(!n(t,e,r,i,u)){var a=.5*(e+i),o=.5*(r+u),c=t.nodes;c[0]&&or(n,c[0],e,r,a,o),c[1]&&or(n,c[1],a,r,i,o),c[2]&&or(n,c[2],e,o,a,u),c[3]&&or(n,c[3],a,o,i,u)}}function cr(n,t){n=oa.rgb(n),t=oa.rgb(t);var e=n.r,r=n.g,i=n.b,u=t.r-e,a=t.g-r,o=t.b-i;return function(n){return"#"+it(Math.round(e+u*n))+it(Math.round(r+a*n))+it(Math.round(i+o*n))}}function lr(n){var t=[n.a,n.b],e=[n.c,n.d],r=sr(t),i=fr(t,e),u=sr(hr(e,t,-i))||0;t[0]*e[1]<e[0]*t[1]&&(t[0]*=-1,t[1]*=-1,r*=-1,i*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*Pa,this.translate=[n.e,n.f],this.scale=[r,u],this.skew=u?Math.atan2(i,u)*Pa:0}function fr(n,t){return n[0]*t[0]+n[1]*t[1]}function sr(n){var t=Math.sqrt(fr(n,n));return t&&(n[0]/=t,n[1]/=t),t}function hr(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function gr(n,t){return t-=n=+n,function(e){return n+t*e}}function pr(n,t){var e,r=[],i=[],u=oa.transform(n),a=oa.transform(t),o=u.translate,c=a.translate,l=u.rotate,f=a.rotate,s=u.skew,h=a.skew,g=u.scale,p=a.scale;return o[0]!=c[0]||o[1]!=c[1]?(r.push("translate(",null,",",null,")"),i.push({i:1,x:gr(o[0],c[0])},{i:3,x:gr(o[1],c[1])})):c[0]||c[1]?r.push("translate("+c+")"):r.push(""),l!=f?(l-f>180?f+=360:f-l>180&&(l+=360),i.push({i:r.push(r.pop()+"rotate(",null,")")-2,x:gr(l,f)})):f&&r.push(r.pop()+"rotate("+f+")"),s!=h?i.push({i:r.push(r.pop()+"skewX(",null,")")-2,x:gr(s,h)}):h&&r.push(r.pop()+"skewX("+h+")"),g[0]!=p[0]||g[1]!=p[1]?(e=r.push(r.pop()+"scale(",null,",",null,")"),i.push({i:e-4,x:gr(g[0],p[0])},{i:e-2,x:gr(g[1],p[1])})):(p[0]!=1||p[1]!=1)&&r.push(r.pop()+"scale("+p+")"),e=i.length,function(n){for(var t,u=-1;++u<e;)r[(t=i[u]).i]=t.x(n);return r.join("")}}function dr(n,t){var e,r={},i={};for(e in n)e in t?r[e]=yr(e)(n[e],t[e]):i[e]=n[e];for(e in t)e in n||(i[e]=t[e]);return function(n){for(e in r)i[e]=r[e](n);return i}}function mr(n,t){var e,r,i,u,a,o=0,c=0,l=[],f=[];for(n+="",t+="",Ro.lastIndex=0,r=0;e=Ro.exec(t);++r)e.index&&l.push(t.substring(o,c=e.index)),f.push({i:l.length,x:e[0]}),l.push(null),o=Ro.lastIndex;for(o<t.length&&l.push(t.substring(o)),r=0,u=f.length;(e=Ro.exec(n))&&u>r;++r)if(a=f[r],a.x==e[0]){if(a.i)if(l[a.i+1]==null)for(l[a.i-1]+=a.x,l.splice(a.i,1),i=r+1;u>i;++i)f[i].i--;else for(l[a.i-1]+=a.x+l[a.i+1],l.splice(a.i,2),i=r+1;u>i;++i)f[i].i-=2;else if(l[a.i+1]==null)l[a.i]=a.x;else for(l[a.i]=a.x+l[a.i+1],l.splice(a.i+1,1),i=r+1;u>i;++i)f[i].i--;f.splice(r,1),u--,r--}else a.x=gr(parseFloat(e[0]),parseFloat(a.x));for(;u>r;)a=f.pop(),l[a.i+1]==null?l[a.i]=a.x:(l[a.i]=a.x+l[a.i+1],l.splice(a.i+1,1)),u--;return l.length===1?l[0]==null?f[0].x:function(){return t}:function(n){for(r=0;u>r;++r)l[(a=f[r]).i]=a.x(n);return l.join("")}}function vr(n,t){for(var e,r=oa.interpolators.length;--r>=0&&!(e=oa.interpolators[r](n,t)););return e}function yr(n){return"transform"==n?pr:vr}function Mr(n,t){var e,r=[],i=[],u=n.length,a=t.length,o=Math.min(n.length,t.length);for(e=0;o>e;++e)r.push(vr(n[e],t[e]));for(;u>e;++e)i[e]=n[e];for(;a>e;++e)i[e]=t[e];return function(n){for(e=0;o>e;++e)i[e]=r[e](n);return i}}function xr(n){return function(t){return 0>=t?0:t>=1?1:n(t)}}function br(n){return function(t){return 1-n(1-t)}}function _r(n){return function(t){return.5*(.5>t?n(2*t):2-n(2-2*t))}}function wr(n){return n*n}function Sr(n){return n*n*n}function Er(n){if(0>=n)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(.5>n?e:3*(n-t)+e-.75)}function kr(n){return function(t){return Math.pow(t,n)}}function Ar(n){return 1-Math.cos(n*La/2)}function Nr(n){return Math.pow(2,10*(n-1))}function qr(n){return 1-Math.sqrt(1-n*n)}function Tr(n,t){var e;return arguments.length<2&&(t=.45),arguments.length?e=t/(2*La)*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,10*-r)*Math.sin(2*(r-e)*La/t)}}function Cr(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function zr(n){return 1/2.75>n?7.5625*n*n:2/2.75>n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75>n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Dr(n,t){n=oa.hcl(n),t=oa.hcl(t);var e=n.h,r=n.c,i=n.l,u=t.h-e,a=t.c-r,o=t.l-i;return isNaN(a)&&(a=0,r=isNaN(r)?t.c:r),isNaN(u)?(u=0,e=isNaN(e)?t.h:e):u>180?u-=360:-180>u&&(u+=360),function(n){return $(e+u*n,r+a*n,i+o*n)+""}}function jr(n,t){n=oa.hsl(n),t=oa.hsl(t);var e=n.h,r=n.s,i=n.l,u=t.h-e,a=t.s-r,o=t.l-i;return isNaN(a)&&(a=0,r=isNaN(r)?t.s:r),isNaN(u)?(u=0,e=isNaN(e)?t.h:e):u>180?u-=360:-180>u&&(u+=360),function(n){return R(e+u*n,r+a*n,i+o*n)+""}}function Lr(n,t){n=oa.lab(n),t=oa.lab(t);var e=n.l,r=n.a,i=n.b,u=t.l-e,a=t.a-r,o=t.b-i;return function(n){return K(e+u*n,r+a*n,i+o*n)+""}}function Fr(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function Hr(n,t){return t=t-(n=+n)?1/(t-n):0,function(e){return(e-n)*t}}function Pr(n,t){return t=t-(n=+n)?1/(t-n):0,function(e){return Math.max(0,Math.min(1,(e-n)*t))}}function Rr(n){for(var t=n.source,e=n.target,r=Yr(t,e),i=[t];t!==r;)t=t.parent,i.push(t);for(var u=i.length;e!==r;)i.splice(u,0,e),e=e.parent;return i}function Or(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Yr(n,t){if(n===t)return n;for(var e=Or(n),r=Or(t),i=e.pop(),u=r.pop(),a=null;i===u;)a=i,i=e.pop(),u=r.pop();return a}function Ur(n){n.fixed|=2}function Ir(n){n.fixed&=-7}function Vr(n){n.fixed|=4,n.px=n.x,n.py=n.y}function Xr(n){n.fixed&=-5}function Zr(n,t,e){var r=0,i=0;if(n.charge=0,!n.leaf)for(var u,a=n.nodes,o=a.length,c=-1;++c<o;)u=a[c],null!=u&&(Zr(u,t,e),n.charge+=u.charge,r+=u.charge*u.cx,i+=u.charge*u.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var l=t*e[n.point.index];n.charge+=n.pointCharge=l,r+=l*n.point.x,i+=l*n.point.y}n.cx=r/n.charge,n.cy=i/n.charge}function Br(n,t){return oa.rebind(n,t,"sort","children","value"),n.nodes=n,n.links=Kr,n}function $r(n){return n.children}function Jr(n){return n.value}function Gr(n,t){return t.value-n.value}function Kr(n){return oa.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function Wr(n){return n.x}function Qr(n){return n.y}function ni(n,t,e){n.y0=t,n.y=e}function ti(n){return oa.range(n.length)}function ei(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function ri(n){for(var t,e=1,r=0,i=n[0][1],u=n.length;u>e;++e)(t=n[e][1])>i&&(r=e,i=t);return r}function ii(n){return n.reduce(ui,0)}function ui(n,t){return n+t[1]}function ai(n,t){return oi(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function oi(n,t){for(var e=-1,r=+n[0],i=(n[1]-r)/t,u=[];++e<=t;)u[e]=i*e+r;return u}function ci(n){return[oa.min(n),oa.max(n)]}function li(n,t){return n.parent==t.parent?1:2}function fi(n){var t=n.children;return t&&t.length?t[0]:n._tree.thread}function si(n){var t,e=n.children;return e&&(t=e.length)?e[t-1]:n._tree.thread}function hi(n,t){var e=n.children;if(e&&(i=e.length))for(var r,i,u=-1;++u<i;)t(r=hi(e[u],t),n)>0&&(n=r);return n}function gi(n,t){return n.x-t.x}function pi(n,t){return t.x-n.x}function di(n,t){return n.depth-t.depth}function mi(n,t){function e(n,r){var i=n.children;if(i&&(a=i.length))for(var u,a,o=null,c=-1;++c<a;)u=i[c],e(u,o),o=u;t(n,r)}e(n,null)}function vi(n){for(var t,e=0,r=0,i=n.children,u=i.length;--u>=0;)t=i[u]._tree,t.prelim+=e,t.mod+=e,e+=t.shift+(r+=t.change)}function yi(n,t,e){n=n._tree,t=t._tree;var r=e/(t.number-n.number);n.change+=r,t.change-=r,t.shift+=e,t.prelim+=e,t.mod+=e}function Mi(n,t,e){return n._tree.ancestor.parent==t.parent?n._tree.ancestor:e}function xi(n,t){return n.value-t.value}function bi(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function _i(n,t){n._pack_next=t,t._pack_prev=n}function wi(n,t){var e=t.x-n.x,r=t.y-n.y,i=n.r+t.r;return i*i-e*e-r*r>.001}function Si(n){function t(n){f=Math.min(n.x-n.r,f),s=Math.max(n.x+n.r,s),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&&(l=e.length)){var e,r,i,u,a,o,c,l,f=1/0,s=-1/0,h=1/0,g=-1/0;if(e.forEach(Ei),r=e[0],r.x=-r.r,r.y=0,t(r),l>1&&(i=e[1],i.x=i.r,i.y=0,t(i),l>2))for(u=e[2],Ni(r,i,u),t(u),bi(r,u),r._pack_prev=u,bi(u,i),i=r._pack_next,a=3;l>a;a++){Ni(r,i,u=e[a]);var p=0,d=1,m=1;for(o=i._pack_next;o!==i;o=o._pack_next,d++)if(wi(o,u)){p=1;break}if(1==p)for(c=r._pack_prev;c!==o._pack_prev&&!wi(c,u);c=c._pack_prev,m++);p?(m>d||d==m&&i.r<r.r?_i(r,i=o):_i(r=c,i),a--):(bi(r,u),i=u,t(u))}var v=(f+s)/2,y=(h+g)/2,M=0;for(a=0;l>a;a++)u=e[a],u.x-=v,u.y-=y,M=Math.max(M,u.r+Math.sqrt(u.x*u.x+u.y*u.y));n.r=M,e.forEach(ki)}}function Ei(n){n._pack_next=n._pack_prev=n}function ki(n){delete n._pack_next,delete n._pack_prev}function Ai(n,t,e,r){var i=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,i)for(var u=-1,a=i.length;++u<a;)Ai(i[u],t,e,r)}function Ni(n,t,e){var r=n.r+e.r,i=t.x-n.x,u=t.y-n.y;if(r&&(i||u)){var a=t.r+e.r,o=i*i+u*u;a*=a,r*=r;var c=.5+(r-a)/(2*o),l=Math.sqrt(Math.max(0,2*a*(r+o)-(r-=o)*r-a*a))/(2*o);e.x=n.x+c*i+l*u,e.y=n.y+c*u-l*i}else e.x=n.x+r,e.y=n.y}function qi(n){return 1+oa.max(n,function(n){return n.y})}function Ti(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function Ci(n){var t=n.children;return t&&t.length?Ci(t[0]):n}function zi(n){var t,e=n.children;return e&&(t=e.length)?zi(e[t-1]):n}function Di(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function ji(n,t){var e=n.x+t[3],r=n.y+t[0],i=n.dx-t[1]-t[3],u=n.dy-t[0]-t[2];return 0>i&&(e+=i/2,i=0),0>u&&(r+=u/2,u=0),{x:e,y:r,dx:i,dy:u}}function Li(n){var t=n[0],e=n[n.length-1];return e>t?[t,e]:[e,t]}function Fi(n){return n.rangeExtent?n.rangeExtent():Li(n.range())}function Hi(n,t,e,r){var i=e(n[0],n[1]),u=r(t[0],t[1]);return function(n){return u(i(n))}}function Pi(n,t){var e,r=0,i=n.length-1,u=n[r],a=n[i];return u>a&&(e=r,r=i,i=e,e=u,u=a,a=e),(t=t(a-u))&&(n[r]=t.floor(u),n[i]=t.ceil(a)),n}function Ri(n,t,e,r){var i=[],u=[],a=0,o=Math.min(n.length,t.length)-1;for(n[o]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++a<=o;)i.push(e(n[a-1],n[a])),u.push(r(t[a-1],t[a]));return function(t){var e=oa.bisect(n,t,1,o)-1;return u[e](i[e](t))}}function Oi(n,t,e,r){function i(){var i=Math.min(n.length,t.length)>2?Ri:Hi,c=r?Pr:Hr;return a=i(n,t,c,e),o=i(t,n,c,vr),u}function u(n){return a(n)}var a,o;return u.invert=function(n){return o(n)},u.domain=function(t){return arguments.length?(n=t.map(Number),i()):n},u.range=function(n){return arguments.length?(t=n,i()):t},u.rangeRound=function(n){return u.range(n).interpolate(Fr)},u.clamp=function(n){return arguments.length?(r=n,i()):r},u.interpolate=function(n){return arguments.length?(e=n,i()):e},u.ticks=function(t){return Vi(n,t)},u.tickFormat=function(t,e){return Xi(n,t,e)},u.nice=function(){return Pi(n,Ui),i()},u.copy=function(){return Oi(n,t,e,r)},i()}function Yi(n,t){return oa.rebind(n,t,"range","rangeRound","interpolate","clamp")}function Ui(n){return n=Math.pow(10,Math.round(Math.log(n)/Math.LN10)-1),n&&{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}}function Ii(n,t){var e=Li(n),r=e[1]-e[0],i=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),u=t/r*i;return.15>=u?i*=10:.35>=u?i*=5:.75>=u&&(i*=2),e[0]=Math.ceil(e[0]/i)*i,e[1]=Math.floor(e[1]/i)*i+.5*i,e[2]=i,e}function Vi(n,t){return oa.range.apply(oa,Ii(n,t))}function Xi(n,t,e){var r=-Math.floor(Math.log(Ii(n,t)[2])/Math.LN10+.01);return oa.format(e?e.replace(ro,function(n,t,e,i,u,a,o,c,l,f){return[t,e,i,u,a,o,c,l||"."+(r-2*("%"===f)),f].join("")}):",."+r+"f")}function Zi(n,t,e,r){function i(t){return n(e(t))}return i.invert=function(t){return r(n.invert(t))},i.domain=function(t){return arguments.length?(t[0]<0?(e=Ji,r=Gi):(e=Bi,r=$i),n.domain(t.map(e)),i):n.domain().map(r)},i.base=function(n){return arguments.length?(t=+n,i):t},i.nice=function(){return n.domain(Pi(n.domain(),Ki(t))),i},i.ticks=function(){var i=Li(n.domain()),u=[];if(i.every(isFinite)){var a=Math.log(t),o=Math.floor(i[0]/a),c=Math.ceil(i[1]/a),l=r(i[0]),f=r(i[1]),s=t%1?2:t;if(e===Ji)for(u.push(-Math.pow(t,-o));o++<c;)for(var h=s-1;h>0;h--)u.push(-Math.pow(t,-o)*h);else{for(;c>o;o++)for(var h=1;s>h;h++)u.push(Math.pow(t,o)*h);u.push(Math.pow(t,o))}for(o=0;u[o]<l;o++);for(c=u.length;u[c-1]>f;c--);u=u.slice(o,c)}return u},i.tickFormat=function(n,u){if(arguments.length<2&&(u=$o),!arguments.length)return u;var a,o=Math.log(t),c=Math.max(.1,n/i.ticks().length),l=e===Ji?(a=-1e-12,Math.floor):(a=1e-12,Math.ceil);return function(n){return n/r(o*l(e(n)/o+a))<=c?u(n):""}},i.copy=function(){return Zi(n.copy(),t,e,r)},Yi(i,n)}function Bi(n){return Math.log(0>n?0:n)}function $i(n){return Math.exp(n)}function Ji(n){return-Math.log(n>0?0:-n)}function Gi(n){return-Math.exp(-n)}function Ki(n){n=Math.log(n);var t={floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}};return function(){return t}}function Wi(n,t){function e(t){return n(r(t))}var r=Qi(t),i=Qi(1/t);return e.invert=function(t){return i(n.invert(t))},e.domain=function(t){return arguments.length?(n.domain(t.map(r)),e):n.domain().map(i)},e.ticks=function(n){return Vi(e.domain(),n)},e.tickFormat=function(n,t){return Xi(e.domain(),n,t)},e.nice=function(){return e.domain(Pi(e.domain(),Ui))},e.exponent=function(n){if(!arguments.length)return t;var u=e.domain();return r=Qi(t=n),i=Qi(1/t),e.domain(u)},e.copy=function(){return Wi(n.copy(),t)},Yi(e,n)}function Qi(n){return function(t){return 0>t?-Math.pow(-t,n):Math.pow(t,n)}}function nu(n,t){function e(t){return a[((u.get(t)||u.set(t,n.push(t)))-1)%a.length]}function r(t,e){return oa.range(n.length).map(function(n){return t+e*n})}var u,a,o;return e.domain=function(r){if(!arguments.length)return n;n=[],u=new i;for(var a,o=-1,c=r.length;++o<c;)u.has(a=r[o])||u.set(a,n.push(a));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(a=n,o=0,t={t:"range",a:arguments},e):a},e.rangePoints=function(i,u){arguments.length<2&&(u=0);var c=i[0],l=i[1],f=(l-c)/(Math.max(1,n.length-1)+u);return a=r(n.length<2?(c+l)/2:c+f*u/2,f),o=0,t={t:"rangePoints",a:arguments},e},e.rangeBands=function(i,u,c){arguments.length<2&&(u=0),arguments.length<3&&(c=u);var l=i[1]<i[0],f=i[l-0],s=i[1-l],h=(s-f)/(n.length-u+2*c);return a=r(f+h*c,h),l&&a.reverse(),o=h*(1-u),t={t:"rangeBands",a:arguments},e},e.rangeRoundBands=function(i,u,c){arguments.length<2&&(u=0),arguments.length<3&&(c=u);var l=i[1]<i[0],f=i[l-0],s=i[1-l],h=Math.floor((s-f)/(n.length-u+2*c)),g=s-f-(n.length-u)*h;return a=r(f+Math.round(g/2),h),l&&a.reverse(),o=Math.round(h*(1-u)),t={t:"rangeRoundBands",a:arguments},e},e.rangeBand=function(){return o},e.rangeExtent=function(){return Li(t.a[0])},e.copy=function(){return nu(n,t)},e.domain(n)}function tu(n,t){function e(){var e=0,u=t.length;for(i=[];++e<u;)i[e-1]=oa.quantile(n,e/u);return r}function r(n){return isNaN(n=+n)?0/0:t[oa.bisect(i,n)]}var i;return r.domain=function(t){return arguments.length?(n=t.filter(function(n){return!isNaN(n)}).sort(oa.ascending),e()):n},r.range=function(n){return arguments.length?(t=n,e()):t},r.quantiles=function(){return i},r.copy=function(){return tu(n,t)},e()}function eu(n,t,e){function r(t){return e[Math.max(0,Math.min(a,Math.floor(u*(t-n))))]}function i(){return u=e.length/(t-n),a=e.length-1,r}var u,a;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],i()):[n,t]},r.range=function(n){return arguments.length?(e=n,i()):e},r.copy=function(){return eu(n,t,e)},i()}function ru(n,t){function e(e){return t[oa.bisect(n,e)]}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.copy=function(){return ru(n,t)},e}function iu(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return Vi(n,t)},t.tickFormat=function(t,e){return Xi(n,t,e)},t.copy=function(){return iu(n)},t}function uu(n){return n.innerRadius}function au(n){return n.outerRadius}function ou(n){return n.startAngle}function cu(n){return n.endAngle}function lu(n){for(var t,e,r,i=-1,u=n.length;++i<u;)t=n[i],e=t[0],r=t[1]+Qo,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function fu(n){function t(t){function c(){d.push("M",o(n(v),s),f,l(n(m.reverse()),s),"Z")}for(var h,g,p,d=[],m=[],v=[],y=-1,M=t.length,x=ft(e),b=ft(i),_=e===r?function(){return g}:ft(r),w=i===u?function(){return p}:ft(u);++y<M;)a.call(this,h=t[y],y)?(m.push([g=+x.call(this,h,y),p=+b.call(this,h,y)]),v.push([+_.call(this,h,y),+w.call(this,h,y)])):m.length&&(c(),m=[],v=[]);return m.length&&c(),d.length?d.join(""):null}var e=De,r=De,i=0,u=je,a=jt,o=Le,c=o.key,l=o,f="L",s=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r},t.y=function(n){return arguments.length?(i=u=n,t):u},t.y0=function(n){return arguments.length?(i=n,t):i},t.y1=function(n){return arguments.length?(u=n,t):u},t.defined=function(n){return arguments.length?(a=n,t):a},t.interpolate=function(n){return arguments.length?(c="function"==typeof n?o=n:(o=Do.get(n)||Le).key,l=o.reverse||o,f=o.closed?"M":"L",t):c},t.tension=function(n){return arguments.length?(s=n,t):s},t}function su(n){return n.radius}function hu(n){return[n.x,n.y]}function gu(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]+Qo;return[e*Math.cos(r),e*Math.sin(r)]}}function pu(){return 64}function du(){return"circle"}function mu(n){var t=Math.sqrt(n/La);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}function vu(n,t){return Ma(n,uc),n.id=t,n}function yu(n,t,e,r){var i=n.id;return j(n,"function"==typeof e?function(n,u,a){n.__transition__[i].tween.set(t,r(e.call(n,n.__data__,u,a)))}:(e=r(e),function(n){n.__transition__[i].tween.set(t,e)}))}function Mu(n){return null==n&&(n=""),function(){this.textContent=n}}function xu(n,t,e,r){var u=n.__transition__||(n.__transition__={active:0,count:0}),a=u[e];if(!a){var o=r.time;return a=u[e]={tween:new i,event:oa.dispatch("start","end"),time:o,ease:r.ease,delay:r.delay,duration:r.duration},++u.count,oa.timer(function(r){function i(r){return u.active>e?l():(u.active=e,h.start.call(n,f,t),a.tween.forEach(function(e,r){(r=r.call(n,f,t))&&d.push(r)}),c(r)||oa.timer(c,0,o),1)}function c(r){if(u.active!==e)return l();for(var i=(r-g)/p,a=s(i),o=d.length;o>0;)d[--o].call(n,a);return i>=1?(l(),h.end.call(n,f,t),1):void 0}function l(){return--u.count?delete u[e]:delete n.__transition__,1}var f=n.__data__,s=a.ease,h=a.event,g=a.delay,p=a.duration,d=[];return r>=g?i(r):oa.timer(i,g,o),1},0,o),a}}function bu(n,t){n.attr("transform",function(n){return"translate("+t(n)+",0)"})}function _u(n,t){n.attr("transform",function(n){return"translate(0,"+t(n)+")"})}function wu(n,t,e){if(r=[],e&&t.length>1){for(var r,i,u,a=Li(n.domain()),o=-1,c=t.length,l=(t[1]-t[0])/++e;++o<c;)for(i=e;--i>0;)(u=+t[o]-i*l)>=a[0]&&r.push(u);for(--o,i=0;++i<e&&(u=+t[o]+i*l)<a[1];)r.push(u)}return r}function Su(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function Eu(n,t,e){function r(t){var e=n(t),r=u(e,1);return r-t>t-e?e:r}function i(e){return t(e=n(new hc(e-1)),1),e}function u(n,e){return t(n=new hc(+n),e),n}function a(n,r,u){var a=i(n),o=[];if(u>1)for(;r>a;)e(a)%u||o.push(new Date(+a)),t(a,1);else for(;r>a;)o.push(new Date(+a)),t(a,1);return o}function o(n,t,e){try{hc=Su;var r=new Su;return r._=n,a(r,t,e)}finally{hc=Date}}n.floor=n,n.round=r,n.ceil=i,n.offset=u,n.range=a;var c=n.utc=ku(n);return c.floor=c,c.round=ku(r),c.ceil=ku(i),c.offset=ku(u),c.range=o,n}function ku(n){return function(t,e){try{hc=Su;var r=new Su;return r._=t,n(r,e)._}finally{hc=Date}}}function Au(n,t,e,r){for(var i,u,a=0,o=t.length,c=e.length;o>a;){if(r>=c)return-1;if(i=t.charCodeAt(a++),37===i){if(u=Tc[t.charAt(a++)],!u||(r=u(n,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}function Nu(n){return RegExp("^(?:"+n.map(oa.requote).join("|")+")","i")}function qu(n){for(var t=new i,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function Tu(n,t,e){n+="";var r=n.length;return e>r?Array(e-r+1).join(t)+n:n}function Cu(n,t,e){wc.lastIndex=0;var r=wc.exec(t.substring(e));return r?e+=r[0].length:-1}function zu(n,t,e){_c.lastIndex=0;var r=_c.exec(t.substring(e));return r?e+=r[0].length:-1}function Du(n,t,e){kc.lastIndex=0;var r=kc.exec(t.substring(e));return r?(n.m=Ac.get(r[0].toLowerCase()),e+=r[0].length):-1}function ju(n,t,e){Sc.lastIndex=0;var r=Sc.exec(t.substring(e));return r?(n.m=Ec.get(r[0].toLowerCase()),e+=r[0].length):-1}function Lu(n,t,e){return Au(n,""+qc.c,t,e)}function Fu(n,t,e){return Au(n,""+qc.x,t,e)}function Hu(n,t,e){return Au(n,""+qc.X,t,e)}function Pu(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+4));return r?(n.y=+r[0],e+=r[0].length):-1}function Ru(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+2));return r?(n.y=Ou(+r[0]),e+=r[0].length):-1}function Ou(n){return n+(n>68?1900:2e3)}function Yu(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+2));return r?(n.m=r[0]-1,e+=r[0].length):-1}function Uu(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+2));return r?(n.d=+r[0],e+=r[0].length):-1}function Iu(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+2));return r?(n.H=+r[0],e+=r[0].length):-1}function Vu(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+2));return r?(n.M=+r[0],e+=r[0].length):-1}function Xu(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+2));return r?(n.S=+r[0],e+=r[0].length):-1}function Zu(n,t,e){Cc.lastIndex=0;var r=Cc.exec(t.substring(e,e+3));return r?(n.L=+r[0],e+=r[0].length):-1}function Bu(n,t,e){var r=zc.get(t.substring(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}function $u(n){var t=n.getTimezoneOffset(),e=t>0?"-":"+",r=~~(Math.abs(t)/60),i=Math.abs(t)%60;return e+Tu(r,"0",2)+Tu(i,"0",2)}function Ju(n){return n.toISOString()}function Gu(n,t,e){function r(t){return n(t)}return r.invert=function(t){return Ku(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(Ku)},r.nice=function(n){return r.domain(Pi(r.domain(),function(){return n}))},r.ticks=function(e,i){var u=Li(r.domain());if("function"!=typeof e){var a=u[1]-u[0],o=a/e,c=oa.bisect(jc,o);if(c==jc.length)return t.year(u,e);if(!c)return n.ticks(e).map(Ku);Math.log(o/jc[c-1])<Math.log(jc[c]/o)&&--c,e=t[c],i=e[1],e=e[0].range}return e(u[0],new Date(+u[1]+1),i)},r.tickFormat=function(){return e},r.copy=function(){return Gu(n.copy(),t,e)},Yi(r,n)}function Ku(n){return new Date(n)}function Wu(n){return function(t){for(var e=n.length-1,r=n[e];!r[1](t);)r=n[--e];return r[0](t)}}function Qu(n){var t=new Date(n,0,1);return t.setFullYear(n),t}function na(n){var t=n.getFullYear(),e=Qu(t),r=Qu(t+1);return t+(n-e)/(r-e)}function ta(n){var t=new Date(Date.UTC(n,0,1));return t.setUTCFullYear(n),t}function ea(n){var t=n.getUTCFullYear(),e=ta(t),r=ta(t+1);return t+(n-e)/(r-e)}function ra(n){return n.responseText}function ia(n){return JSON.parse(n.responseText)}function ua(n){var t=ca.createRange();return t.selectNode(ca.body),t.createContextualFragment(n.responseText)}function aa(n){return n.responseXML}var oa={version:"3.1.6"};Date.now||(Date.now=function(){return+new Date});var ca=document,la=window;try{ca.createElement("div").style.setProperty("opacity",0,"")}catch(fa){var sa=la.CSSStyleDeclaration.prototype,ha=sa.setProperty;sa.setProperty=function(n,t,e){ha.call(this,n,t+"",e)}}oa.ascending=function(n,t){return t>n?-1:n>t?1:n>=t?0:0/0},oa.descending=function(n,t){return n>t?-1:t>n?1:t>=n?0:0/0},oa.min=function(n,t){var e,r,i=-1,u=n.length;if(arguments.length===1){for(;++i<u&&((e=n[i])==null||e!=e);)e=void 0;for(;++i<u;)(r=n[i])!=null&&e>r&&(e=r)}else{for(;++i<u&&((e=t.call(n,n[i],i))==null||e!=e);)e=void 0;for(;++i<u;)(r=t.call(n,n[i],i))!=null&&e>r&&(e=r)}return e},oa.max=function(n,t){var e,r,i=-1,u=n.length;if(arguments.length===1){for(;++i<u&&((e=n[i])==null||e!=e);)e=void 0;for(;++i<u;)(r=n[i])!=null&&r>e&&(e=r)}else{for(;++i<u&&((e=t.call(n,n[i],i))==null||e!=e);)e=void 0;for(;++i<u;)(r=t.call(n,n[i],i))!=null&&r>e&&(e=r)}return e},oa.extent=function(n,t){var e,r,i,u=-1,a=n.length;if(arguments.length===1){for(;++u<a&&((e=i=n[u])==null||e!=e);)e=i=void 0;for(;++u<a;)(r=n[u])!=null&&(e>r&&(e=r),r>i&&(i=r))}else{for(;++u<a&&((e=i=t.call(n,n[u],u))==null||e!=e);)e=void 0;for(;++u<a;)(r=t.call(n,n[u],u))!=null&&(e>r&&(e=r),r>i&&(i=r))}return[e,i]},oa.sum=function(n,t){var e,r=0,i=n.length,u=-1;if(arguments.length===1)for(;++u<i;)isNaN(e=+n[u])||(r+=e);else for(;++u<i;)isNaN(e=+t.call(n,n[u],u))||(r+=e);return r},oa.mean=function(t,e){var r,i=t.length,u=0,a=-1,o=0;if(arguments.length===1)for(;++a<i;)n(r=t[a])&&(u+=(r-u)/++o);else for(;++a<i;)n(r=e.call(t,t[a],a))&&(u+=(r-u)/++o);return o?u:void 0},oa.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),i=+n[r-1],u=e-r;return u?i+u*(n[r]-i):i},oa.median=function(t,e){return arguments.length>1&&(t=t.map(e)),t=t.filter(n),t.length?oa.quantile(t.sort(oa.ascending),.5):void 0},oa.bisector=function(n){return{left:function(t,e,r,i){for(arguments.length<3&&(r=0),arguments.length<4&&(i=t.length);i>r;){var u=r+i>>>1;n.call(t,t[u],u)<e?r=u+1:i=u}return r},right:function(t,e,r,i){for(arguments.length<3&&(r=0),arguments.length<4&&(i=t.length);i>r;){var u=r+i>>>1;e<n.call(t,t[u],u)?i=u:r=u+1}return r}}};var ga=oa.bisector(function(n){return n});oa.bisectLeft=ga.left,oa.bisect=oa.bisectRight=ga.right,oa.shuffle=function(n){for(var t,e,r=n.length;r;)e=Math.random()*r--|0,t=n[r],n[r]=n[e],n[e]=t;return n},oa.permute=function(n,t){for(var e=[],r=-1,i=t.length;++r<i;)e[r]=n[t[r]];return e},oa.zip=function(){if(!(i=arguments.length))return[];for(var n=-1,e=oa.min(arguments,t),r=Array(e);++n<e;)for(var i,u=-1,a=r[n]=Array(i);++u<i;)a[u]=arguments[u][n];return r},oa.transpose=function(n){return oa.zip.apply(oa,n)},oa.keys=function(n){var t=[];for(var e in n)t.push(e);return t},oa.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},oa.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},oa.merge=function(n){return Array.prototype.concat.apply([],n)},oa.range=function(n,t,r){if(arguments.length<3&&(r=1,arguments.length<2&&(t=n,n=0)),1/0===(t-n)/r)throw Error("infinite range");var i,u=[],a=e(Math.abs(r)),o=-1;if(n*=a,t*=a,r*=a,0>r)for(;(i=n+r*++o)>t;)u.push(i/a);else for(;(i=n+r*++o)<t;)u.push(i/a);return u},oa.map=function(n){var t=new i;for(var e in n)t.set(e,n[e]);return t},r(i,{has:function(n){return pa+n in this},get:function(n){return this[pa+n]},set:function(n,t){return this[pa+n]=t},remove:function(n){return n=pa+n,n in this&&delete this[n]},keys:function(){var n=[];return this.forEach(function(t){n.push(t)}),n},values:function(){var n=[];return this.forEach(function(t,e){n.push(e)}),n},entries:function(){var n=[];return this.forEach(function(t,e){n.push({key:t,value:e})}),n},forEach:function(n){for(var t in this)t.charCodeAt(0)===da&&n.call(this,t.substring(1),this[t])}});var pa="\0",da=pa.charCodeAt(0);oa.nest=function(){function n(t,o,c){if(c>=a.length)return r?r.call(u,o):e?o.sort(e):o;for(var l,f,s,h,g=-1,p=o.length,d=a[c++],m=new i;++g<p;)(h=m.get(l=d(f=o[g])))?h.push(f):m.set(l,[f]);return t?(f=t(),s=function(e,r){f.set(e,n(t,r,c))}):(f={},s=function(e,r){f[e]=n(t,r,c)}),m.forEach(s),f}function t(n,e){if(e>=a.length)return n;var r=[],i=o[e++];return n.forEach(function(n,i){r.push({key:n,values:t(i,e)})}),i?r.sort(function(n,t){return i(n.key,t.key)}):r}var e,r,u={},a=[],o=[];return u.map=function(t,e){return n(e,t,0)},u.entries=function(e){return t(n(oa.map,e,0),0)},u.key=function(n){return a.push(n),u},u.sortKeys=function(n){return o[a.length-1]=n,u},u.sortValues=function(n){return e=n,u},u.rollup=function(n){return r=n,u},u},oa.set=function(n){var t=new u;if(n)for(var e=0;e<n.length;e++)t.add(n[e]);return t},r(u,{has:function(n){return pa+n in this},add:function(n){return this[pa+n]=!0,n},remove:function(n){return n=pa+n,n in this&&delete this[n]},values:function(){var n=[];return this.forEach(function(t){n.push(t)}),n},forEach:function(n){for(var t in this)t.charCodeAt(0)===da&&n.call(this,t.substring(1))}}),oa.behavior={},oa.rebind=function(n,t){for(var e,r=1,i=arguments.length;++r<i;)n[e=arguments[r]]=a(n,t,t[e]);return n},oa.dispatch=function(){for(var n=new o,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=c(n);return n},o.prototype.on=function(n,t){var e=n.indexOf("."),r="";if(e>=0&&(r=n.substring(e+1),n=n.substring(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(arguments.length===2){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);
return this}},oa.event=null,oa.mouse=function(n){return g(n,f())};var ma=/WebKit/.test(la.navigator.userAgent)?-1:0,va=d;try{va(ca.documentElement.childNodes)[0].nodeType}catch(ya){va=p}var Ma=[].__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]};oa.touches=function(n,t){return arguments.length<2&&(t=f().touches),t?va(t).map(function(t){var e=g(n,t);return e.identifier=t.identifier,e}):[]},oa.behavior.drag=function(){function n(){this.on("mousedown.drag",t).on("touchstart.drag",t)}function t(){function n(){var n=a.parentNode;return null!=f?oa.touches(n).filter(function(n){return n.identifier===f})[0]:oa.mouse(n)}function t(){if(!a.parentNode)return i();var t=n(),e=t[0]-h[0],r=t[1]-h[1];g|=e|r,h=t,l(),o({type:"drag",x:t[0]+u[0],y:t[1]+u[1],dx:e,dy:r})}function i(){o({type:"dragend"}),g&&(l(),oa.event.target===c&&s(p,"click")),p.on(null!=f?"touchmove.drag-"+f:"mousemove.drag",null).on(null!=f?"touchend.drag-"+f:"mouseup.drag",null)}var u,a=this,o=e.of(a,arguments),c=oa.event.target,f=oa.event.touches?oa.event.changedTouches[0].identifier:null,h=n(),g=0,p=oa.select(la).on(null!=f?"touchmove.drag-"+f:"mousemove.drag",t).on(null!=f?"touchend.drag-"+f:"mouseup.drag",i,!0);r?(u=r.apply(a,arguments),u=[u.x-h[0],u.y-h[1]]):u=[0,0],null==f&&l(),o({type:"dragstart"})}var e=h(n,"drag","dragstart","dragend"),r=null;return n.origin=function(t){return arguments.length?(r=t,n):r},oa.rebind(n,e,"on")};var xa=function(n,t){return t.querySelector(n)},ba=function(n,t){return t.querySelectorAll(n)},_a=ca.documentElement,wa=_a.matchesSelector||_a.webkitMatchesSelector||_a.mozMatchesSelector||_a.msMatchesSelector||_a.oMatchesSelector,Sa=function(n,t){return wa.call(n,t)};"function"==typeof Sizzle&&(xa=function(n,t){return Sizzle(n,t)[0]||null},ba=function(n,t){return Sizzle.uniqueSort(Sizzle(n,t))},Sa=Sizzle.matchesSelector),oa.selection=function(){return Ta};var Ea=oa.selection.prototype=[];Ea.select=function(n){var t,e,r,i,u=[];"function"!=typeof n&&(n=v(n));for(var a=-1,o=this.length;++a<o;){u.push(t=[]),t.parentNode=(r=this[a]).parentNode;for(var c=-1,l=r.length;++c<l;)(i=r[c])?(t.push(e=n.call(i,i.__data__,c)),e&&"__data__"in i&&(e.__data__=i.__data__)):t.push(null)}return m(u)},Ea.selectAll=function(n){var t,e,r=[];"function"!=typeof n&&(n=y(n));for(var i=-1,u=this.length;++i<u;)for(var a=this[i],o=-1,c=a.length;++o<c;)(e=a[o])&&(r.push(t=va(n.call(e,e.__data__,o))),t.parentNode=e);return m(r)};var ka={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};oa.ns={prefix:ka,qualify:function(n){var t=n.indexOf(":"),e=n;return t>=0&&(e=n.substring(0,t),n=n.substring(t+1)),ka.hasOwnProperty(e)?{space:ka[e],local:n}:n}},Ea.attr=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node();return n=oa.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(M(t,n[t]));return this}return this.each(M(n,t))},oa.requote=function(n){return n.replace(Aa,"\\$&")};var Aa=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;Ea.classed=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node(),r=(n=n.trim().split(/^|\s+/g)).length,i=-1;if(t=e.classList){for(;++i<r;)if(!t.contains(n[i]))return!1}else for(t=e.getAttribute("class");++i<r;)if(!_(n[i]).test(t))return!1;return!0}for(t in n)this.each(w(t,n[t]));return this}return this.each(w(n,t))},Ea.style=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t="");for(e in n)this.each(E(e,n[e],t));return this}if(2>r)return la.getComputedStyle(this.node(),null).getPropertyValue(n);e=""}return this.each(E(n,t,e))},Ea.property=function(n,t){if(arguments.length<2){if("string"==typeof n)return this.node()[n];for(t in n)this.each(k(t,n[t]));return this}return this.each(k(n,t))},Ea.text=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?"":t}:null==n?function(){this.textContent=""}:function(){this.textContent=n}):this.node().textContent},Ea.html=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?"":t}:null==n?function(){this.innerHTML=""}:function(){this.innerHTML=n}):this.node().innerHTML},Ea.append=function(n){function t(){return this.appendChild(ca.createElementNS(this.namespaceURI,n))}function e(){return this.appendChild(ca.createElementNS(n.space,n.local))}return n=oa.ns.qualify(n),this.select(n.local?e:t)},Ea.insert=function(n,t){function e(e,r){return this.insertBefore(ca.createElementNS(this.namespaceURI,n),t.call(this,e,r))}function r(e,r){return this.insertBefore(ca.createElementNS(n.space,n.local),t.call(this,e,r))}return n=oa.ns.qualify(n),"function"!=typeof t&&(t=v(t)),this.select(n.local?r:e)},Ea.remove=function(){return this.each(function(){var n=this.parentNode;n&&n.removeChild(this)})},Ea.data=function(n,t){function e(n,e){var r,u,a,o=n.length,s=e.length,h=Math.min(o,s),g=Array(s),p=Array(s),d=Array(o);if(t){var m,v=new i,y=new i,M=[];for(r=-1;++r<o;)m=t.call(u=n[r],u.__data__,r),v.has(m)?d[r]=u:v.set(m,u),M.push(m);for(r=-1;++r<s;)m=t.call(e,a=e[r],r),(u=v.get(m))?(g[r]=u,u.__data__=a):y.has(m)||(p[r]=A(a)),y.set(m,a),v.remove(m);for(r=-1;++r<o;)v.has(M[r])&&(d[r]=n[r])}else{for(r=-1;++r<h;)u=n[r],a=e[r],u?(u.__data__=a,g[r]=u):p[r]=A(a);for(;s>r;++r)p[r]=A(e[r]);for(;o>r;++r)d[r]=n[r]}p.update=g,p.parentNode=g.parentNode=d.parentNode=n.parentNode,c.push(p),l.push(g),f.push(d)}var r,u,a=-1,o=this.length;if(!arguments.length){for(n=Array(o=(r=this[0]).length);++a<o;)(u=r[a])&&(n[a]=u.__data__);return n}var c=L([]),l=m([]),f=m([]);if("function"==typeof n)for(;++a<o;)e(r=this[a],n.call(r,r.parentNode.__data__,a));else for(;++a<o;)e(r=this[a],n);return l.enter=function(){return c},l.exit=function(){return f},l},Ea.datum=function(n){return arguments.length?this.property("__data__",n):this.property("__data__")},Ea.filter=function(n){var t,e,r,i=[];"function"!=typeof n&&(n=N(n));for(var u=0,a=this.length;a>u;u++){i.push(t=[]),t.parentNode=(e=this[u]).parentNode;for(var o=0,c=e.length;c>o;o++)(r=e[o])&&n.call(r,r.__data__,o)&&t.push(r)}return m(i)},Ea.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],i=r.length-1,u=r[i];--i>=0;)(e=r[i])&&(u&&u!==e.nextSibling&&u.parentNode.insertBefore(e,u),u=e);return this},Ea.sort=function(n){n=q.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},Ea.on=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t=!1);for(e in n)this.each(C(e,n[e],t));return this}if(2>r)return(r=this.node()["__on"+n])&&r._;e=!1}return this.each(C(n,t,e))};var Na=oa.map({mouseenter:"mouseover",mouseleave:"mouseout"});Na.forEach(function(n){"on"+n in ca&&Na.remove(n)}),Ea.each=function(n){return j(this,function(t,e,r){n.call(t,t.__data__,e,r)})},Ea.call=function(n){var t=va(arguments);return n.apply(t[0]=this,t),this},Ea.empty=function(){return!this.node()},Ea.node=function(){for(var n=0,t=this.length;t>n;n++)for(var e=this[n],r=0,i=e.length;i>r;r++){var u=e[r];if(u)return u}return null};var qa=[];oa.selection.enter=L,oa.selection.enter.prototype=qa,qa.append=Ea.append,qa.insert=Ea.insert,qa.empty=Ea.empty,qa.node=Ea.node,qa.select=function(n){for(var t,e,r,i,u,a=[],o=-1,c=this.length;++o<c;){r=(i=this[o]).update,a.push(t=[]),t.parentNode=i.parentNode;for(var l=-1,f=i.length;++l<f;)(u=i[l])?(t.push(r[l]=e=n.call(i.parentNode,u.__data__,l)),e.__data__=u.__data__):t.push(null)}return m(a)},Ea.transition=function(){var n,t,e=ec||++ac,r=[],i=Object.create(oc);i.time=Date.now();for(var u=-1,a=this.length;++u<a;){r.push(n=[]);for(var o=this[u],c=-1,l=o.length;++c<l;)(t=o[c])&&xu(t,c,e,i),n.push(t)}return vu(r,e)},oa.select=function(n){var t=["string"==typeof n?xa(n,ca):n];return t.parentNode=_a,m([t])},oa.selectAll=function(n){var t=va("string"==typeof n?ba(n,ca):n);return t.parentNode=_a,m([t])};var Ta=oa.select(_a);oa.behavior.zoom=function(){function n(){this.on("mousedown.zoom",o).on("mousemove.zoom",f).on(Da+".zoom",c).on("dblclick.zoom",g).on("touchstart.zoom",p).on("touchmove.zoom",d).on("touchend.zoom",p)}function t(n){return[(n[0]-w[0])/S,(n[1]-w[1])/S]}function e(n){return[n[0]*S+w[0],n[1]*S+w[1]]}function r(n){S=Math.max(E[0],Math.min(E[1],n))}function i(n,t){t=e(t),w[0]+=n[0]-t[0],w[1]+=n[1]-t[1]}function u(){M&&M.domain(y.range().map(function(n){return(n-w[0])/S}).map(y.invert)),b&&b.domain(x.range().map(function(n){return(n-w[1])/S}).map(x.invert))}function a(n){u(),oa.event.preventDefault(),n({type:"zoom",scale:S,translate:w})}function o(){function n(){c=1,i(oa.mouse(r),h),a(u)}function e(){c&&l(),f.on("mousemove.zoom",null).on("mouseup.zoom",null),c&&oa.event.target===o&&s(f,"click.zoom")}var r=this,u=k.of(r,arguments),o=oa.event.target,c=0,f=oa.select(la).on("mousemove.zoom",n).on("mouseup.zoom",e),h=t(oa.mouse(r));la.focus(),l()}function c(){m||(m=t(oa.mouse(this))),r(Math.pow(2,Ca()*.002)*S),i(oa.mouse(this),m),a(k.of(this,arguments))}function f(){m=null}function g(){var n=oa.mouse(this),e=t(n),u=Math.log(S)/Math.LN2;r(Math.pow(2,oa.event.shiftKey?Math.ceil(u)-1:Math.floor(u)+1)),i(n,e),a(k.of(this,arguments))}function p(){var n=oa.touches(this),e=Date.now();if(v=S,m={},n.forEach(function(n){m[n.identifier]=t(n)}),l(),n.length===1){if(500>e-_){var u=n[0],o=t(n[0]);r(2*S),i(u,o),a(k.of(this,arguments))}_=e}}function d(){var n=oa.touches(this),t=n[0],e=m[t.identifier];if(u=n[1]){var u,o=m[u.identifier];t=[(t[0]+u[0])/2,(t[1]+u[1])/2],e=[(e[0]+o[0])/2,(e[1]+o[1])/2],r(oa.event.scale*v)}i(t,e),_=null,a(k.of(this,arguments))}var m,v,y,M,x,b,_,w=[0,0],S=1,E=za,k=h(n,"zoom");return n.translate=function(t){return arguments.length?(w=t.map(Number),u(),n):w},n.scale=function(t){return arguments.length?(S=+t,u(),n):S},n.scaleExtent=function(t){return arguments.length?(E=null==t?za:t.map(Number),n):E},n.x=function(t){return arguments.length?(M=t,y=t.copy(),w=[0,0],S=1,n):M},n.y=function(t){return arguments.length?(b=t,x=t.copy(),w=[0,0],S=1,n):b},oa.rebind(n,k,"on")};var Ca,za=[0,1/0],Da="onwheel"in ca?(Ca=function(){return-oa.event.deltaY*(oa.event.deltaMode?120:1)},"wheel"):"onmousewheel"in ca?(Ca=function(){return oa.event.wheelDelta},"mousewheel"):(Ca=function(){return-oa.event.detail},"MozMousePixelScroll");F.prototype.toString=function(){return this.rgb()+""},oa.hsl=function(n,t,e){return arguments.length===1?n instanceof P?H(n.h,n.s,n.l):ut(""+n,at,H):H(+n,+t,+e)};var ja=P.prototype=new F;ja.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),H(this.h,this.s,this.l/n)},ja.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),H(this.h,this.s,n*this.l)},ja.rgb=function(){return R(this.h,this.s,this.l)};var La=Math.PI,Fa=1e-6,Ha=La/180,Pa=180/La;oa.hcl=function(n,t,e){return arguments.length===1?n instanceof B?Z(n.h,n.c,n.l):n instanceof G?W(n.l,n.a,n.b):W((n=ot((n=oa.rgb(n)).r,n.g,n.b)).l,n.a,n.b):Z(+n,+t,+e)};var Ra=B.prototype=new F;Ra.brighter=function(n){return Z(this.h,this.c,Math.min(100,this.l+Oa*(arguments.length?n:1)))},Ra.darker=function(n){return Z(this.h,this.c,Math.max(0,this.l-Oa*(arguments.length?n:1)))},Ra.rgb=function(){return $(this.h,this.c,this.l).rgb()},oa.lab=function(n,t,e){return arguments.length===1?n instanceof G?J(n.l,n.a,n.b):n instanceof B?$(n.l,n.c,n.h):ot((n=oa.rgb(n)).r,n.g,n.b):J(+n,+t,+e)};var Oa=18,Ya=.95047,Ua=1,Ia=1.08883,Va=G.prototype=new F;Va.brighter=function(n){return J(Math.min(100,this.l+Oa*(arguments.length?n:1)),this.a,this.b)},Va.darker=function(n){return J(Math.max(0,this.l-Oa*(arguments.length?n:1)),this.a,this.b)},Va.rgb=function(){return K(this.l,this.a,this.b)},oa.rgb=function(n,t,e){return arguments.length===1?n instanceof rt?et(n.r,n.g,n.b):ut(""+n,et,R):et(~~n,~~t,~~e)};var Xa=rt.prototype=new F;Xa.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,i=30;return t||e||r?(t&&i>t&&(t=i),e&&i>e&&(e=i),r&&i>r&&(r=i),et(Math.min(255,Math.floor(t/n)),Math.min(255,Math.floor(e/n)),Math.min(255,Math.floor(r/n)))):et(i,i,i)},Xa.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),et(Math.floor(n*this.r),Math.floor(n*this.g),Math.floor(n*this.b))},Xa.hsl=function(){return at(this.r,this.g,this.b)},Xa.toString=function(){return"#"+it(this.r)+it(this.g)+it(this.b)};var Za=oa.map({aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"});Za.forEach(function(n,t){Za.set(n,ut(t,et,R))}),oa.functor=ft,oa.xhr=function(n,t,e){function r(){var n=c.status;!n&&c.responseText||n>=200&&300>n||304===n?u.load.call(i,o.call(i,c)):u.error.call(i,c)}var i={},u=oa.dispatch("progress","load","error"),a={},o=st,c=new(la.XDomainRequest&&/^(http(s)?:)?\/\//.test(n)?XDomainRequest:XMLHttpRequest);return"onload"in c?c.onload=c.onerror=r:c.onreadystatechange=function(){c.readyState>3&&r()},c.onprogress=function(n){var t=oa.event;oa.event=n;try{u.progress.call(i,c)}finally{oa.event=t}},i.header=function(n,t){return n=(n+"").toLowerCase(),arguments.length<2?a[n]:(null==t?delete a[n]:a[n]=t+"",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+"",i):t},i.response=function(n){return o=n,i},["get","post"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(va(arguments)))}}),i.send=function(e,r,u){if(arguments.length===2&&"function"==typeof r&&(u=r,r=null),c.open(e,n,!0),null==t||"accept"in a||(a.accept=t+",*/*"),c.setRequestHeader)for(var o in a)c.setRequestHeader(o,a[o]);return null!=t&&c.overrideMimeType&&c.overrideMimeType(t),null!=u&&i.on("error",u).on("load",function(n){u(null,n)}),c.send(null==r?null:r),i},i.abort=function(){return c.abort(),i},oa.rebind(i,u,"on"),arguments.length===2&&"function"==typeof t&&(e=t,t=null),null==e?i:i.get(ht(e))},oa.csv=gt(",","text/csv"),oa.tsv=gt("	","text/tab-separated-values");var Ba,$a,Ja=0,Ga={},Ka=null;oa.timer=function(n,t,e){if(arguments.length<3){if(arguments.length<2)t=0;else if(!isFinite(t))return;e=Date.now()}var r=Ga[n.id];r&&r.callback===n?(r.then=e,r.delay=t):Ga[n.id=++Ja]=Ka={callback:n,then:e,delay:t,next:Ka},Ba||($a=clearTimeout($a),Ba=1,Wa(pt))},oa.timer.flush=function(){for(var n,t=Date.now(),e=Ka;e;)n=t-e.then,e.delay||(e.flush=e.callback(n)),e=e.next;dt()};var Wa=la.requestAnimationFrame||la.webkitRequestAnimationFrame||la.mozRequestAnimationFrame||la.oRequestAnimationFrame||la.msRequestAnimationFrame||function(n){setTimeout(n,17)},Qa=".",no=",",to=[3,3],eo=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(mt);oa.formatPrefix=function(n,t){var e=0;return n&&(0>n&&(n*=-1),t&&(n=oa.round(n,vt(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,Math.floor((0>=e?e+1:e-1)/3)*3))),eo[8+e/3]},oa.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)},oa.format=function(n){var t=ro.exec(n),e=t[1]||" ",r=t[2]||">",i=t[3]||"",u=t[4]||"",a=t[5],o=+t[6],c=t[7],l=t[8],f=t[9],s=1,h="",g=!1;switch(l&&(l=+l.substring(1)),(a||"0"===e&&"="===r)&&(a=e="0",r="=",c&&(o-=Math.floor((o-1)/4))),f){case"n":c=!0,f="g";break;case"%":s=100,h="%",f="f";break;case"p":s=100,h="%",f="r";break;case"b":case"o":case"x":case"X":u&&(u="0"+f.toLowerCase());case"c":case"d":g=!0,l=0;break;case"s":s=-1,f="r"}"#"===u&&(u=""),"r"!=f||l||(f="g"),null!=l&&("g"==f?l=Math.max(1,Math.min(21,l)):("e"==f||"f"==f)&&(l=Math.max(0,Math.min(20,l)))),f=io.get(f)||yt;var p=a&&c;return function(n){if(g&&n%1)return"";var t=0>n||0===n&&0>1/n?(n=-n,"-"):i;if(0>s){var d=oa.formatPrefix(n,l);n=d.scale(n),h=d.symbol}else n*=s;n=f(n,l),!a&&c&&(n=uo(n));var m=u.length+n.length+(p?0:t.length),v=o>m?Array(m=o-m+1).join(e):"";return p&&(n=uo(v+n)),Qa&&n.replace(".",Qa),t+=u,("<"===r?t+n+v:">"===r?v+t+n:"^"===r?v.substring(0,m>>=1)+t+n+v.substring(m):t+(p?n:v+n))+h}};var ro=/(?:([^{])?([<>=^]))?([+\- ])?(#)?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,io=oa.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=oa.round(n,vt(n,t))).toFixed(Math.max(0,Math.min(20,vt(n*(1+1e-15),t))))}}),uo=st;if(to){var ao=to.length;uo=function(n){for(var t=n.lastIndexOf("."),e=t>=0?"."+n.substring(t+1):(t=n.length,""),r=[],i=0,u=to[0];t>0&&u>0;)r.push(n.substring(t-=u,t+u)),u=to[i=(i+1)%ao];return r.reverse().join(no||"")+e}}oa.geo={},oa.geo.stream=function(n,t){n&&oo.hasOwnProperty(n.type)?oo[n.type](n,t):Mt(n,t)};var oo={Feature:function(n,t){Mt(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,i=e.length;++r<i;)Mt(e[r].geometry,t)}},co={Sphere:function(n,t){t.sphere()},Point:function(n,t){var e=n.coordinates;t.point(e[0],e[1])},MultiPoint:function(n,t){for(var e,r=n.coordinates,i=-1,u=r.length;++i<u;)e=r[i],t.point(e[0],e[1])},LineString:function(n,t){xt(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)xt(e[r],t,0)},Polygon:function(n,t){bt(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)bt(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,i=e.length;++r<i;)Mt(e[r],t)}};oa.geo.area=function(n){return lo=0,oa.geo.stream(n,ho),lo};var lo,fo,so,ho={sphere:function(){lo+=4*La},point:T,lineStart:T,lineEnd:T,polygonStart:function(){fo=1,so=0,ho.lineStart=_t},polygonEnd:function(){var n=2*Math.atan2(so,fo);lo+=0>n?4*La+n:n,ho.lineStart=ho.lineEnd=ho.point=T}};oa.geo.bounds=wt(st),oa.geo.centroid=function(n){go=po=mo=vo=yo=0,oa.geo.stream(n,Mo);var t;return po&&Math.abs(t=Math.sqrt(mo*mo+vo*vo+yo*yo))>Fa?[Math.atan2(vo,mo)*Pa,Math.asin(Math.max(-1,Math.min(1,yo/t)))*Pa]:void 0};var go,po,mo,vo,yo,Mo={sphere:function(){2>go&&(go=2,po=mo=vo=yo=0)},point:St,lineStart:kt,lineEnd:At,polygonStart:function(){2>go&&(go=2,po=mo=vo=yo=0),Mo.lineStart=Et},polygonEnd:function(){Mo.lineStart=kt}},xo=Rt(jt,Vt,Zt),bo=1e9;oa.geo.projection=Wt,oa.geo.projectionMutator=Qt,(oa.geo.equirectangular=function(){return Wt(te)}).raw=te.invert=te,oa.geo.rotation=function(n){function t(t){return t=n(t[0]*Ha,t[1]*Ha),t[0]*=Pa,t[1]*=Pa,t}return n=ee(n[0]%360*Ha,n[1]*Ha,n.length>2?n[2]*Ha:0),t.invert=function(t){return t=n.invert(t[0]*Ha,t[1]*Ha),t[0]*=Pa,t[1]*=Pa,t},t},oa.geo.circle=function(){function n(){var n="function"==typeof r?r.apply(this,arguments):r,t=ee(-n[0]*Ha,-n[1]*Ha,0).invert,i=[];return e(null,null,1,{point:function(n,e){i.push(n=t(n,e)),n[0]*=Pa,n[1]*=Pa}}),{type:"Polygon",coordinates:[i]}}var t,e,r=[0,0],i=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=ae((t=+r)*Ha,i*Ha),n):t},n.precision=function(r){return arguments.length?(e=ae(t*Ha,(i=+r)*Ha),n):i},n.angle(90)},oa.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Ha,i=n[1]*Ha,u=t[1]*Ha,a=Math.sin(r),o=Math.cos(r),c=Math.sin(i),l=Math.cos(i),f=Math.sin(u),s=Math.cos(u);return Math.atan2(Math.sqrt((e=s*a)*e+(e=l*f-c*s*o)*e),c*f+l*s*o)},oa.geo.graticule=function(){function n(){return{type:"MultiLineString",coordinates:t()}}function t(){return oa.range(Math.ceil(u/m)*m,i,m).map(h).concat(oa.range(Math.ceil(l/v)*v,c,v).map(g)).concat(oa.range(Math.ceil(r/p)*p,e,p).filter(function(n){return Math.abs(n%m)>Fa}).map(f)).concat(oa.range(Math.ceil(o/d)*d,a,d).filter(function(n){return Math.abs(n%v)>Fa}).map(s))}var e,r,i,u,a,o,c,l,f,s,h,g,p=10,d=p,m=90,v=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:"LineString",coordinates:n}})},n.outline=function(){return{type:"Polygon",coordinates:[h(u).concat(g(c).slice(1),h(i).reverse().slice(1),g(l).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(u=+t[0][0],i=+t[1][0],l=+t[0][1],c=+t[1][1],u>i&&(t=u,u=i,i=t),l>c&&(t=l,l=c,c=t),n.precision(y)):[[u,l],[i,c]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],o=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),o>a&&(t=o,o=a,a=t),n.precision(y)):[[r,o],[e,a]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(m=+t[0],v=+t[1],n):[m,v]},n.minorStep=function(t){return arguments.length?(p=+t[0],d=+t[1],n):[p,d]},n.precision=function(t){return arguments.length?(y=+t,f=ce(o,a,90),s=le(r,e,y),h=ce(l,c,90),g=le(u,i,y),n):y},n.majorExtent([[-180,-90+Fa],[180,90-Fa]]).minorExtent([[-180,-80-Fa],[180,80+Fa]])},oa.geo.greatArc=function(){function n(){return{type:"LineString",coordinates:[t||r.apply(this,arguments),e||i.apply(this,arguments)]}}var t,e,r=fe,i=se;return n.distance=function(){return oa.geo.distance(t||r.apply(this,arguments),e||i.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(i=t,e="function"==typeof t?null:t,n):i},n.precision=function(){return arguments.length?n:0},n},oa.geo.interpolate=function(n,t){return he(n[0]*Ha,n[1]*Ha,t[0]*Ha,t[1]*Ha)},oa.geo.length=function(n){return _o=0,oa.geo.stream(n,wo),_o};var _o,wo={sphere:T,point:T,lineStart:ge,lineEnd:T,polygonStart:T,polygonEnd:T};(oa.geo.conicEqualArea=function(){return pe(de)}).raw=de,oa.geo.albersUsa=function(){function n(n){return t(n)(n)}function t(n){var t=n[0],e=n[1];return e>50?a:-140>t?o:21>e?c:u}var e,r,i,u=oa.geo.conicEqualArea().rotate([98,0]).center([0,38]).parallels([29.5,45.5]),a=oa.geo.conicEqualArea().rotate([160,0]).center([0,60]).parallels([55,65]),o=oa.geo.conicEqualArea().rotate([160,0]).center([0,20]).parallels([8,18]),c=oa.geo.conicEqualArea().rotate([60,0]).center([0,10]).parallels([8,18]);return n.invert=function(n){return e(n)||r(n)||i(n)||u.invert(n)},n.scale=function(t){return arguments.length?(u.scale(t),a.scale(.6*t),o.scale(t),c.scale(1.5*t),n.translate(u.translate())):u.scale()},n.translate=function(t){if(!arguments.length)return u.translate();var l=u.scale(),f=t[0],s=t[1];return u.translate(t),a.translate([f-.4*l,s+.17*l]),o.translate([f-.19*l,s+.2*l]),c.translate([f+.58*l,s+.43*l]),e=me(a,[[-180,50],[-130,72]]),r=me(o,[[-164,18],[-154,24]]),i=me(c,[[-67.5,17.5],[-65,19]]),n},n.scale(1e3)};var So,Eo,ko={point:T,lineStart:T,lineEnd:T,polygonStart:function(){Eo=0,ko.lineStart=ve},polygonEnd:function(){ko.lineStart=ko.lineEnd=ko.point=T,So+=Math.abs(Eo/2)}},Ao={point:Me,lineStart:xe,lineEnd:be,polygonStart:function(){Ao.lineStart=_e},polygonEnd:function(){Ao.point=Me,Ao.lineStart=xe,Ao.lineEnd=be}};oa.geo.path=function(){function n(n){return n&&oa.geo.stream(n,r(i.pointRadius("function"==typeof u?+u.apply(this,arguments):u))),i.result()}var t,e,r,i,u=4.5;return n.area=function(n){return So=0,oa.geo.stream(n,r(ko)),So},n.centroid=function(n){return go=mo=vo=yo=0,oa.geo.stream(n,r(Ao)),yo?[mo/yo,vo/yo]:void 0},n.bounds=function(n){return wt(r)(n)},n.projection=function(e){return arguments.length?(r=(t=e)?e.stream||Ee(e):st,n):t},n.context=function(t){return arguments.length?(i=(e=t)==null?new ye:new we(t),n):e},n.pointRadius=function(t){return arguments.length?(u="function"==typeof t?t:+t,n):u},n.projection(oa.geo.albersUsa()).context(null)},oa.geo.albers=function(){return oa.geo.conicEqualArea().parallels([29.5,45.5]).rotate([98,0]).center([0,38]).scale(1e3)};var No=ke(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(oa.geo.azimuthalEqualArea=function(){return Wt(No)}).raw=No;var qo=ke(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},st);(oa.geo.azimuthalEquidistant=function(){return Wt(qo)}).raw=qo,(oa.geo.conicConformal=function(){return pe(Ae)}).raw=Ae,(oa.geo.conicEquidistant=function(){return pe(Ne)}).raw=Ne;var To=ke(function(n){return 1/n},Math.atan);(oa.geo.gnomonic=function(){return Wt(To)}).raw=To,qe.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-La/2]},(oa.geo.mercator=function(){return Te(qe)}).raw=qe;var Co=ke(function(){return 1},Math.asin);(oa.geo.orthographic=function(){return Wt(Co)}).raw=Co;var zo=ke(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(oa.geo.stereographic=function(){return Wt(zo)}).raw=zo,Ce.invert=function(n,t){return[Math.atan2(I(n),Math.cos(t)),U(Math.sin(t)/V(n))]},(oa.geo.transverseMercator=function(){return Te(Ce)}).raw=Ce,oa.geom={},oa.svg={},oa.svg.line=function(){return ze(st)};var Do=oa.map({linear:Le,"linear-closed":Fe,"step-before":He,"step-after":Pe,basis:Ve,"basis-open":Xe,"basis-closed":Ze,bundle:Be,cardinal:Ye,"cardinal-open":Re,"cardinal-closed":Oe,monotone:Qe});Do.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var jo=[0,2/3,1/3,0],Lo=[0,1/3,2/3,0],Fo=[0,1/6,2/3,1/6];oa.geom.hull=function(n){function t(n){if(n.length<3)return[];var t,i,u,a,o,c,l,f,s,h,g,p,d=ft(e),m=ft(r),v=n.length,y=v-1,M=[],x=[],b=0;if(d===De&&r===je)t=n;else for(u=0,t=[];v>u;++u)t.push([+d.call(this,i=n[u],u),+m.call(this,i,u)]);for(u=1;v>u;++u)(t[u][1]<t[b][1]||t[u][1]==t[b][1]&&t[u][0]<t[b][0])&&(b=u);for(u=0;v>u;++u)u!==b&&(c=t[u][1]-t[b][1],o=t[u][0]-t[b][0],M.push({angle:Math.atan2(c,o),index:u}));for(M.sort(function(n,t){return n.angle-t.angle}),g=M[0].angle,h=M[0].index,s=0,u=1;y>u;++u){if(a=M[u].index,g==M[u].angle){if(o=t[h][0]-t[b][0],c=t[h][1]-t[b][1],l=t[a][0]-t[b][0],f=t[a][1]-t[b][1],o*o+c*c>=l*l+f*f){M[u].index=-1;continue}M[s].index=-1}g=M[u].angle,s=u,h=a}for(x.push(b),u=0,a=0;2>u;++a)M[a].index>-1&&(x.push(M[a].index),u++);for(p=x.length;y>a;++a)if(!(M[a].index<0)){for(;!nr(x[p-2],x[p-1],M[a].index,t);)--p;x[p++]=M[a].index}var _=[];for(u=p-1;u>=0;--u)_.push(n[x[u]]);return _}var e=De,r=je;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},oa.geom.polygon=function(n){return n.area=function(){for(var t=0,e=n.length,r=n[e-1][1]*n[0][0]-n[e-1][0]*n[0][1];++t<e;)r+=n[t-1][1]*n[t][0]-n[t-1][0]*n[t][1];return.5*r},n.centroid=function(t){var e,r,i=-1,u=n.length,a=0,o=0,c=n[u-1];for(arguments.length||(t=-1/(6*n.area()));++i<u;)e=c,c=n[i],r=e[0]*c[1]-c[0]*e[1],a+=(e[0]+c[0])*r,o+=(e[1]+c[1])*r;return[a*t,o*t]},n.clip=function(t){for(var e,r,i,u,a,o,c=-1,l=n.length,f=n[l-1];++c<l;){for(e=t.slice(),t.length=0,u=n[c],a=e[(i=e.length)-1],r=-1;++r<i;)o=e[r],tr(o,f,u)?(tr(a,f,u)||t.push(er(a,o,f,u)),t.push(o)):tr(a,f,u)&&t.push(er(a,o,f,u)),a=o;f=u}return t},n},oa.geom.delaunay=function(n){var t=n.map(function(){return[]}),e=[];return rr(n,function(e){t[e.region.l.index].push(n[e.region.r.index])}),t.forEach(function(t,r){var i=n[r],u=i[0],a=i[1];t.forEach(function(n){n.angle=Math.atan2(n[0]-u,n[1]-a)}),t.sort(function(n,t){return n.angle-t.angle});for(var o=0,c=t.length-1;c>o;o++)e.push([i,t[o],t[o+1]])}),e},oa.geom.voronoi=function(n){function t(n){var t,r,a,o=n.map(function(){return[]}),c=ft(i),l=ft(u),f=n.length,s=1e6;if(c===De&&l===je)t=n;else for(t=[],a=0;f>a;++a)t.push([+c.call(this,r=n[a],a),+l.call(this,r,a)]);if(rr(t,function(n){var t,e,r,i,u,a;n.a===1&&n.b>=0?(t=n.ep.r,e=n.ep.l):(t=n.ep.l,e=n.ep.r),n.a===1?(u=t?t.y:-s,r=n.c-n.b*u,a=e?e.y:s,i=n.c-n.b*a):(r=t?t.x:-s,u=n.c-n.a*r,i=e?e.x:s,a=n.c-n.a*i);var c=[r,u],l=[i,a];o[n.region.l.index].push(c,l),o[n.region.r.index].push(c,l)}),o=o.map(function(n,e){var r=t[e][0],i=t[e][1],u=n.map(function(n){return Math.atan2(n[0]-r,n[1]-i)}),a=oa.range(n.length).sort(function(n,t){return u[n]-u[t]});return a.filter(function(n,t){return!t||u[n]-u[a[t-1]]>Fa}).map(function(t){return n[t]})}),o.forEach(function(n,e){var r=n.length;if(!r)return n.push([-s,-s],[-s,s],[s,s],[s,-s]);if(!(r>2)){var i=t[e],u=n[0],a=n[1],o=i[0],c=i[1],l=u[0],f=u[1],h=a[0],g=a[1],p=Math.abs(h-l),d=g-f;if(Math.abs(d)<Fa){var m=f>c?-s:s;n.push([-s,m],[s,m])}else if(Fa>p){var v=l>o?-s:s;n.push([v,-s],[v,s])}else{var m=(l-o)*(g-f)>(h-l)*(f-c)?s:-s,y=Math.abs(d)-p;Math.abs(y)<Fa?n.push([0>d?m:-m,m]):(y>0&&(m*=-1),n.push([-s,m],[s,m]))}}}),e)for(a=0;f>a;++a)e(o[a]);for(a=0;f>a;++a)o[a].point=n[a];return o}var e,r=null,i=De,u=je;return arguments.length?t(n):(t.x=function(n){return arguments.length?(i=n,t):i},t.y=function(n){return arguments.length?(u=n,t):u},t.size=function(n){return arguments.length?(null==n?e=null:(r=[+n[0],+n[1]],e=oa.geom.polygon([[0,0],[0,r[1]],r,[r[0],0]]).clip),t):r},t.links=function(n){var t,e,r,a=n.map(function(){return[]}),o=[],c=ft(i),l=ft(u),f=n.length;if(c===De&&l===je)t=n;else for(r=0;f>r;++r)t.push([+c.call(this,e=n[r],r),+l.call(this,e,r)]);return rr(t,function(t){var e=t.region.l.index,r=t.region.r.index;a[e][r]||(a[e][r]=a[r][e]=!0,o.push({source:n[e],target:n[r]}))}),o},t.triangles=function(n){if(i===De&&u===je)return oa.geom.delaunay(n);var t,e,r,a,o,c=ft(i),l=ft(u);for(a=0,t=[],o=n.length;o>a;++a)e=[+c.call(this,r=n[a],a),+l.call(this,r,a)],e.data=r,t.push(e);return oa.geom.delaunay(t).map(function(n){return n.map(function(n){return n.data})})},t)};var Ho={l:"r",r:"l"};oa.geom.quadtree=function(n,t,e,r,i){function u(n){function u(n,t,e,r,i,u,a,o){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var c=n.x,f=n.y;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if(null!=c)if(Math.abs(c-e)+Math.abs(f-r)<.01)l(n,t,e,r,i,u,a,o);else{var s=n.point;n.x=n.y=n.point=null,l(n,s,c,f,i,u,a,o),l(n,t,e,r,i,u,a,o)}else n.x=e,n.y=r,n.point=t}else l(n,t,e,r,i,u,a,o)}function l(n,t,e,r,i,a,o,c){var l=.5*(i+o),f=.5*(a+c),s=e>=l,h=r>=f,g=(h<<1)+s;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=ar()),s?i=l:o=l,h?a=f:c=f,u(n,t,e,r,i,a,o,c)}var f,s,h,g,p,d,m,v,y,M=ft(o),x=ft(c);if(null!=t)d=t,m=e,v=r,y=i;else if(v=y=-(d=m=1/0),s=[],h=[],p=n.length,a)for(g=0;p>g;++g)f=n[g],f.x<d&&(d=f.x),f.y<m&&(m=f.y),f.x>v&&(v=f.x),f.y>y&&(y=f.y),s.push(f.x),h.push(f.y);else for(g=0;p>g;++g){var b=+M(f=n[g],g),_=+x(f,g);d>b&&(d=b),m>_&&(m=_),b>v&&(v=b),_>y&&(y=_),s.push(b),h.push(_)}var w=v-d,S=y-m;w>S?y=m+w:v=d+S;var E=ar();if(E.add=function(n){u(E,n,+M(n,++g),+x(n,g),d,m,v,y)},E.visit=function(n){or(n,E,d,m,v,y)},g=-1,null==t){for(;++g<p;)u(E,n[g],s[g],h[g],d,m,v,y);--g}else n.forEach(E.add);return s=h=n=f=null,E}var a,o=De,c=je;return(a=arguments.length)?(o=ir,c=ur,3===a&&(i=e,r=t,e=t=0),u(n)):(u.x=function(n){return arguments.length?(o=n,u):o},u.y=function(n){return arguments.length?(c=n,u):c},u.size=function(n){return arguments.length?(null==n?t=e=r=i=null:(t=e=0,r=+n[0],i=+n[1]),u):null==t?null:[r,i]},u)},oa.interpolateRgb=cr,oa.transform=function(n){var t=ca.createElementNS(oa.ns.prefix.svg,"g");return(oa.transform=function(n){t.setAttribute("transform",n);var e=t.transform.baseVal.consolidate();return new lr(e?e.matrix:Po)})(n)},lr.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var Po={a:1,b:0,c:0,d:1,e:0,f:0};oa.interpolateNumber=gr,oa.interpolateTransform=pr,oa.interpolateObject=dr,oa.interpolateString=mr;var Ro=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;oa.interpolate=vr,oa.interpolators=[function(n,t){var e=typeof t;return("string"===e||e!==typeof n?Za.has(t)||/^(#|rgb\(|hsl\()/.test(t)?cr:mr:t instanceof F?cr:"object"===e?Array.isArray(t)?Mr:dr:gr)(n,t)}],oa.interpolateArray=Mr;var Oo=function(){return st},Yo=oa.map({linear:Oo,poly:kr,quad:function(){return wr},cubic:function(){return Sr},sin:function(){return Ar},exp:function(){return Nr},circle:function(){return qr},elastic:Tr,back:Cr,bounce:function(){return zr}}),Uo=oa.map({"in":st,out:br,"in-out":_r,"out-in":function(n){return _r(br(n))}});oa.ease=function(n){var t=n.indexOf("-"),e=t>=0?n.substring(0,t):n,r=t>=0?n.substring(t+1):"in";return e=Yo.get(e)||Oo,r=Uo.get(r)||st,xr(r(e.apply(null,Array.prototype.slice.call(arguments,1))))},oa.interpolateHcl=Dr,oa.interpolateHsl=jr,oa.interpolateLab=Lr,oa.interpolateRound=Fr,oa.layout={},oa.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(Rr(n[e]));return t}},oa.layout.chord=function(){function n(){var n,l,s,h,g,p={},d=[],m=oa.range(u),v=[];for(e=[],r=[],n=0,h=-1;++h<u;){for(l=0,g=-1;++g<u;)l+=i[h][g];d.push(l),v.push(oa.range(u)),n+=l}for(a&&m.sort(function(n,t){return a(d[n],d[t])}),o&&v.forEach(function(n,t){n.sort(function(n,e){return o(i[t][n],i[t][e])})}),n=(2*La-f*u)/n,l=0,h=-1;++h<u;){for(s=l,g=-1;++g<u;){var y=m[h],M=v[y][g],x=i[y][M],b=l,_=l+=x*n;p[y+"-"+M]={index:y,subindex:M,startAngle:b,endAngle:_,value:x}}r[y]={index:y,startAngle:s,endAngle:l,value:(l-s)/n},l+=f}for(h=-1;++h<u;)for(g=h-1;++g<u;){var w=p[h+"-"+g],S=p[g+"-"+h];(w.value||S.value)&&e.push(w.value<S.value?{source:S,target:w}:{source:w,target:S})}c&&t()}function t(){e.sort(function(n,t){return c((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,i,u,a,o,c,l={},f=0;return l.matrix=function(n){return arguments.length?(u=(i=n)&&i.length,e=r=null,l):i},l.padding=function(n){return arguments.length?(f=n,e=r=null,l):f},l.sortGroups=function(n){return arguments.length?(a=n,e=r=null,l):a},l.sortSubgroups=function(n){return arguments.length?(o=n,e=null,l):o},l.sortChords=function(n){return arguments.length?(c=n,e&&t(),l):c},l.chords=function(){return e||n(),e},l.groups=function(){return r||n(),r},l},oa.layout.force=function(){function n(n){return function(t,e,r,i){if(t.point!==n){var u=t.cx-n.x,a=t.cy-n.y,o=1/Math.sqrt(u*u+a*a);if(d>(i-e)*o){var c=t.charge*o*o;return n.px-=u*c,n.py-=a*c,!0}if(t.point&&isFinite(o)){var c=t.pointCharge*o*o;n.px-=u*c,n.py-=a*c}}return!t.charge}}function t(n){n.px=oa.event.x,n.py=oa.event.y,o.resume()}var e,r,i,u,a,o={},c=oa.dispatch("start","tick","end"),l=[1,1],f=.9,s=Io,h=Vo,g=-30,p=.1,d=.8,m=[],v=[];return o.tick=function(){if((r*=.99)<.005)return c.end({type:"end",alpha:r=0}),!0;var t,e,o,s,h,d,y,M,x,b=m.length,_=v.length;for(e=0;_>e;++e)o=v[e],s=o.source,h=o.target,M=h.x-s.x,x=h.y-s.y,(d=M*M+x*x)&&(d=r*u[e]*((d=Math.sqrt(d))-i[e])/d,M*=d,x*=d,h.x-=M*(y=s.weight/(h.weight+s.weight)),h.y-=x*y,s.x+=M*(y=1-y),s.y+=x*y);if((y=r*p)&&(M=l[0]/2,x=l[1]/2,e=-1,y))for(;++e<b;)o=m[e],o.x+=(M-o.x)*y,o.y+=(x-o.y)*y;if(g)for(Zr(t=oa.geom.quadtree(m),r,a),e=-1;++e<b;)(o=m[e]).fixed||t.visit(n(o));for(e=-1;++e<b;)o=m[e],o.fixed?(o.x=o.px,o.y=o.py):(o.x-=(o.px-(o.px=o.x))*f,o.y-=(o.py-(o.py=o.y))*f);c.tick({type:"tick",alpha:r})},o.nodes=function(n){return arguments.length?(m=n,o):m},o.links=function(n){return arguments.length?(v=n,o):v},o.size=function(n){return arguments.length?(l=n,o):l},o.linkDistance=function(n){return arguments.length?(s="function"==typeof n?n:+n,o):s},o.distance=o.linkDistance,o.linkStrength=function(n){return arguments.length?(h="function"==typeof n?n:+n,o):h},o.friction=function(n){return arguments.length?(f=+n,o):f},o.charge=function(n){return arguments.length?(g="function"==typeof n?n:+n,o):g},o.gravity=function(n){return arguments.length?(p=+n,o):p},o.theta=function(n){return arguments.length?(d=+n,o):d},o.alpha=function(n){return arguments.length?(n=+n,r?r=n>0?n:0:n>0&&(c.start({type:"start",alpha:r=n}),oa.timer(o.tick)),o):r},o.start=function(){function n(n,r){for(var i,u=t(e),a=-1,o=u.length;++a<o;)if(!isNaN(i=u[a][n]))return i;return Math.random()*r}function t(){if(!c){for(c=[],r=0;p>r;++r)c[r]=[];for(r=0;d>r;++r){var n=v[r];c[n.source.index].push(n.target),c[n.target.index].push(n.source)}}return c[e]}var e,r,c,f,p=m.length,d=v.length,y=l[0],M=l[1];for(e=0;p>e;++e)(f=m[e]).index=e,f.weight=0;for(e=0;d>e;++e)f=v[e],typeof f.source=="number"&&(f.source=m[f.source]),typeof f.target=="number"&&(f.target=m[f.target]),++f.source.weight,++f.target.weight;for(e=0;p>e;++e)f=m[e],isNaN(f.x)&&(f.x=n("x",y)),isNaN(f.y)&&(f.y=n("y",M)),isNaN(f.px)&&(f.px=f.x),isNaN(f.py)&&(f.py=f.y);if(i=[],"function"==typeof s)for(e=0;d>e;++e)i[e]=+s.call(this,v[e],e);else for(e=0;d>e;++e)i[e]=s;if(u=[],"function"==typeof h)for(e=0;d>e;++e)u[e]=+h.call(this,v[e],e);else for(e=0;d>e;++e)u[e]=h;if(a=[],"function"==typeof g)for(e=0;p>e;++e)a[e]=+g.call(this,m[e],e);else for(e=0;p>e;++e)a[e]=g;return o.resume()},o.resume=function(){return o.alpha(.1)},o.stop=function(){return o.alpha(0)},o.drag=function(){return e||(e=oa.behavior.drag().origin(st).on("dragstart.force",Ur).on("drag.force",t).on("dragend.force",Ir)),arguments.length?(this.on("mouseover.force",Vr).on("mouseout.force",Xr).call(e),void 0):e},oa.rebind(o,c,"on")};var Io=20,Vo=1;oa.layout.hierarchy=function(){function n(t,a,o){var c=i.call(e,t,a);if(t.depth=a,o.push(t),c&&(l=c.length)){for(var l,f,s=-1,h=t.children=[],g=0,p=a+1;++s<l;)f=n(c[s],p,o),f.parent=t,h.push(f),g+=f.value;r&&h.sort(r),u&&(t.value=g)}else u&&(t.value=+u.call(e,t,a)||0);return t}function t(n,r){var i=n.children,a=0;if(i&&(o=i.length))for(var o,c=-1,l=r+1;++c<o;)a+=t(i[c],l);else u&&(a=+u.call(e,n,r)||0);return u&&(n.value=a),a}function e(t){var e=[];return n(t,0,e),e}var r=Gr,i=$r,u=Jr;return e.sort=function(n){return arguments.length?(r=n,e):r},e.children=function(n){return arguments.length?(i=n,e):i},e.value=function(n){return arguments.length?(u=n,e):u},e.revalue=function(n){return t(n,0),n},e},oa.layout.partition=function(){function n(t,e,r,i){var u=t.children;if(t.x=e,t.y=t.depth*i,t.dx=r,t.dy=i,u&&(a=u.length)){var a,o,c,l=-1;for(r=t.value?r/t.value:0;++l<a;)n(o=u[l],e,c=o.value*r,i),e+=c}}function t(n){var e=n.children,r=0;if(e&&(i=e.length))for(var i,u=-1;++u<i;)r=Math.max(r,t(e[u]));return 1+r}function e(e,u){var a=r.call(this,e,u);return n(a[0],0,i[0],i[1]/t(a[0])),a}var r=oa.layout.hierarchy(),i=[1,1];return e.size=function(n){return arguments.length?(i=n,e):i},Br(e,r)},oa.layout.pie=function(){function n(u){var a=u.map(function(e,r){return+t.call(n,e,r)}),o=+("function"==typeof r?r.apply(this,arguments):r),c=(("function"==typeof i?i.apply(this,arguments):i)-o)/oa.sum(a),l=oa.range(u.length);null!=e&&l.sort(e===Xo?function(n,t){return a[t]-a[n]}:function(n,t){return e(u[n],u[t])});var f=[];return l.forEach(function(n){var t;f[n]={data:u[n],value:t=a[n],startAngle:o,endAngle:o+=t*c}}),f}var t=Number,e=Xo,r=0,i=2*La;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(i=t,n):i},n};var Xo={};oa.layout.stack=function(){function n(o,c){var l=o.map(function(e,r){return t.call(n,e,r)}),f=l.map(function(t){return t.map(function(t,e){return[u.call(n,t,e),a.call(n,t,e)]})}),s=e.call(n,f,c);l=oa.permute(l,s),f=oa.permute(f,s);var h,g,p,d=r.call(n,f,c),m=l.length,v=l[0].length;for(g=0;v>g;++g)for(i.call(n,l[0][g],p=d[g],f[0][g][1]),h=1;m>h;++h)i.call(n,l[h][g],p+=f[h-1][g][1],f[h][g][1]);return o}var t=st,e=ti,r=ei,i=ni,u=Wr,a=Qr;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e="function"==typeof t?t:Zo.get(t)||ti,n):e},n.offset=function(t){return arguments.length?(r="function"==typeof t?t:Bo.get(t)||ei,n):r},n.x=function(t){return arguments.length?(u=t,n):u},n.y=function(t){return arguments.length?(a=t,n):a},n.out=function(t){return arguments.length?(i=t,n):i},n};var Zo=oa.map({"inside-out":function(n){var t,e,r=n.length,i=n.map(ri),u=n.map(ii),a=oa.range(r).sort(function(n,t){return i[n]-i[t]}),o=0,c=0,l=[],f=[];for(t=0;r>t;++t)e=a[t],c>o?(o+=u[e],l.push(e)):(c+=u[e],f.push(e));return f.reverse().concat(l)},reverse:function(n){return oa.range(n.length).reverse()},"default":ti}),Bo=oa.map({silhouette:function(n){var t,e,r,i=n.length,u=n[0].length,a=[],o=0,c=[];for(e=0;u>e;++e){for(t=0,r=0;i>t;t++)r+=n[t][e][1];r>o&&(o=r),a.push(r)}for(e=0;u>e;++e)c[e]=(o-a[e])/2;return c},wiggle:function(n){var t,e,r,i,u,a,o,c,l,f=n.length,s=n[0],h=s.length,g=[];for(g[0]=c=l=0,e=1;h>e;++e){for(t=0,i=0;f>t;++t)i+=n[t][e][1];for(t=0,u=0,o=s[e][0]-s[e-1][0];f>t;++t){for(r=0,a=(n[t][e][1]-n[t][e-1][1])/(2*o);t>r;++r)a+=(n[r][e][1]-n[r][e-1][1])/o;u+=a*n[t][e][1]}g[e]=c-=i?u/i*o:0,l>c&&(l=c)}for(e=0;h>e;++e)g[e]-=l;return g},expand:function(n){var t,e,r,i=n.length,u=n[0].length,a=1/i,o=[];for(e=0;u>e;++e){for(t=0,r=0;i>t;t++)r+=n[t][e][1];if(r)for(t=0;i>t;t++)n[t][e][1]/=r;else for(t=0;i>t;t++)n[t][e][1]=a}for(e=0;u>e;++e)o[e]=0;return o},zero:ei});oa.layout.histogram=function(){function n(n,u){for(var a,o,c=[],l=n.map(e,this),f=r.call(this,l,u),s=i.call(this,f,l,u),u=-1,h=l.length,g=s.length-1,p=t?1:1/h;++u<g;)a=c[u]=[],a.dx=s[u+1]-(a.x=s[u]),a.y=0;if(g>0)for(u=-1;++u<h;)o=l[u],o>=f[0]&&o<=f[1]&&(a=c[oa.bisect(s,o,1,g)-1],a.y+=p,a.push(n[u]));return c}var t=!0,e=Number,r=ci,i=ai;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=ft(t),n):r},n.bins=function(t){return arguments.length?(i="number"==typeof t?function(n){return oi(n,t)}:ft(t),n):i},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},oa.layout.tree=function(){function n(n,i){function u(n,t){var r=n.children,i=n._tree;if(r&&(a=r.length)){for(var a,c,l,f=r[0],s=f,h=-1;++h<a;)l=r[h],u(l,c),s=o(l,c,s),c=l;vi(n);var g=.5*(f._tree.prelim+l._tree.prelim);t?(i.prelim=t._tree.prelim+e(n,t),i.mod=i.prelim-g):i.prelim=g}else t&&(i.prelim=t._tree.prelim+e(n,t))}function a(n,t){n.x=n._tree.prelim+t;var e=n.children;if(e&&(r=e.length)){var r,i=-1;for(t+=n._tree.mod;++i<r;)a(e[i],t)}}function o(n,t,r){if(t){for(var i,u=n,a=n,o=t,c=n.parent.children[0],l=u._tree.mod,f=a._tree.mod,s=o._tree.mod,h=c._tree.mod;o=si(o),u=fi(u),o&&u;)c=fi(c),a=si(a),a._tree.ancestor=n,i=o._tree.prelim+s-u._tree.prelim-l+e(o,u),i>0&&(yi(Mi(o,n,r),n,i),l+=i,f+=i),s+=o._tree.mod,l+=u._tree.mod,h+=c._tree.mod,f+=a._tree.mod;o&&!si(a)&&(a._tree.thread=o,a._tree.mod+=s-f),u&&!fi(c)&&(c._tree.thread=u,c._tree.mod+=l-h,r=n)}return r}var c=t.call(this,n,i),l=c[0];mi(l,function(n,t){n._tree={ancestor:n,prelim:0,mod:0,change:0,shift:0,number:t?t._tree.number+1:0}}),u(l),a(l,-l._tree.prelim);var f=hi(l,pi),s=hi(l,gi),h=hi(l,di),g=f.x-e(f,s)/2,p=s.x+e(s,f)/2,d=h.depth||1;return mi(l,function(n){n.x=(n.x-g)/(p-g)*r[0],n.y=n.depth/d*r[1],delete n._tree}),c}var t=oa.layout.hierarchy().sort(null).value(null),e=li,r=[1,1];return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(r=t,n):r},Br(n,t)},oa.layout.pack=function(){function n(n,i){var u=t.call(this,n,i),a=u[0];a.x=0,a.y=0,mi(a,function(n){n.r=Math.sqrt(n.value)}),mi(a,Si);var o=r[0],c=r[1],l=Math.max(2*a.r/o,2*a.r/c);if(e>0){var f=e*l/2;mi(a,function(n){n.r+=f}),mi(a,Si),mi(a,function(n){n.r-=f}),l=Math.max(2*a.r/o,2*a.r/c)}return Ai(a,o/2,c/2,1/l),u}var t=oa.layout.hierarchy().sort(xi),e=0,r=[1,1];return n.size=function(t){return arguments.length?(r=t,n):r},n.padding=function(t){return arguments.length?(e=+t,n):e},Br(n,t)},oa.layout.cluster=function(){function n(n,i){var u,a=t.call(this,n,i),o=a[0],c=0;mi(o,function(n){var t=n.children;t&&t.length?(n.x=Ti(t),n.y=qi(t)):(n.x=u?c+=e(n,u):0,n.y=0,u=n)});var l=Ci(o),f=zi(o),s=l.x-e(l,f)/2,h=f.x+e(f,l)/2;return mi(o,function(n){n.x=(n.x-s)/(h-s)*r[0],n.y=(1-(o.y?n.y/o.y:1))*r[1]}),a}var t=oa.layout.hierarchy().sort(null).value(null),e=li,r=[1,1];return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(r=t,n):r},Br(n,t)},oa.layout.treemap=function(){function n(n,t){for(var e,r,i=-1,u=n.length;++i<u;)r=(e=n[i]).value*(0>t?0:t),e.area=isNaN(r)||0>=r?0:r}function t(e){var u=e.children;if(u&&u.length){var a,o,c,l=s(e),f=[],h=u.slice(),p=1/0,d="slice"===g?l.dx:"dice"===g?l.dy:"slice-dice"===g?e.depth&1?l.dy:l.dx:Math.min(l.dx,l.dy);for(n(h,l.dx*l.dy/e.value),f.area=0;(c=h.length)>0;)f.push(a=h[c-1]),f.area+=a.area,"squarify"!==g||(o=r(f,d))<=p?(h.pop(),p=o):(f.area-=f.pop().area,i(f,d,l,!1),d=Math.min(l.dx,l.dy),f.length=f.area=0,p=1/0);f.length&&(i(f,d,l,!0),f.length=f.area=0),u.forEach(t)}}function e(t){var r=t.children;if(r&&r.length){var u,a=s(t),o=r.slice(),c=[];for(n(o,a.dx*a.dy/t.value),c.area=0;u=o.pop();)c.push(u),c.area+=u.area,u.z!=null&&(i(c,u.z?a.dx:a.dy,a,!o.length),c.length=c.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,i=0,u=1/0,a=-1,o=n.length;++a<o;)(e=n[a].area)&&(u>e&&(u=e),e>i&&(i=e));return r*=r,t*=t,r?Math.max(t*i*p/r,r/(t*u*p)):1/0}function i(n,t,e,r){var i,u=-1,a=n.length,o=e.x,l=e.y,f=t?c(n.area/t):0;if(t==e.dx){for((r||f>e.dy)&&(f=e.dy);++u<a;)i=n[u],i.x=o,i.y=l,i.dy=f,o+=i.dx=Math.min(e.x+e.dx-o,f?c(i.area/f):0);i.z=!0,i.dx+=e.x+e.dx-o,e.y+=f,e.dy-=f}else{for((r||f>e.dx)&&(f=e.dx);++u<a;)i=n[u],i.x=o,i.y=l,i.dx=f,l+=i.dy=Math.min(e.y+e.dy-l,f?c(i.area/f):0);i.z=!1,i.dy+=e.y+e.dy-l,e.x+=f,e.dx-=f}}function u(r){var i=a||o(r),u=i[0];return u.x=0,u.y=0,u.dx=l[0],u.dy=l[1],a&&o.revalue(u),n([u],u.dx*u.dy/u.value),(a?e:t)(u),h&&(a=i),i}var a,o=oa.layout.hierarchy(),c=Math.round,l=[1,1],f=null,s=Di,h=!1,g="squarify",p=.5*(1+Math.sqrt(5));return u.size=function(n){return arguments.length?(l=n,u):l},u.padding=function(n){function t(t){var e=n.call(u,t,t.depth);return null==e?Di(t):ji(t,"number"==typeof e?[e,e,e,e]:e)}function e(t){return ji(t,n)}if(!arguments.length)return f;var r;return s=(f=n)==null?Di:(r=typeof n)=="function"?t:"number"===r?(n=[n,n,n,n],e):e,u},u.round=function(n){return arguments.length?(c=n?Math.round:Number,u):c!=Number},u.sticky=function(n){return arguments.length?(h=n,a=null,u):h},u.ratio=function(n){return arguments.length?(p=n,u):p},u.mode=function(n){return arguments.length?(g=n+"",u):g},Br(u,o)},oa.random={normal:function(n,t){var e=arguments.length;return 2>e&&(t=1),1>e&&(n=0),function(){var e,r,i;do e=Math.random()*2-1,r=Math.random()*2-1,i=e*e+r*r;while(!i||i>1);return n+t*e*Math.sqrt(-2*Math.log(i)/i)}},logNormal:function(){var n=oa.random.normal.apply(oa,arguments);return function(){return Math.exp(n())}},irwinHall:function(n){return function(){for(var t=0,e=0;n>e;e++)t+=Math.random();return t/n}}},oa.scale={},oa.scale.linear=function(){return Oi([0,1],[0,1],vr,!1)},oa.scale.log=function(){return Zi(oa.scale.linear().domain([0,Math.LN10]),10,Bi,$i)};var $o=oa.format(".0e");oa.scale.pow=function(){return Wi(oa.scale.linear(),1)},oa.scale.sqrt=function(){return oa.scale.pow().exponent(.5)},oa.scale.ordinal=function(){return nu([],{t:"range",a:[[]]})},oa.scale.category10=function(){return oa.scale.ordinal().range(Jo)},oa.scale.category20=function(){return oa.scale.ordinal().range(Go)},oa.scale.category20b=function(){return oa.scale.ordinal().range(Ko)},oa.scale.category20c=function(){return oa.scale.ordinal().range(Wo)};var Jo=["#1f77b4","#ff7f0e","#2ca02c","#d62728","#9467bd","#8c564b","#e377c2","#7f7f7f","#bcbd22","#17becf"],Go=["#1f77b4","#aec7e8","#ff7f0e","#ffbb78","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5","#8c564b","#c49c94","#e377c2","#f7b6d2","#7f7f7f","#c7c7c7","#bcbd22","#dbdb8d","#17becf","#9edae5"],Ko=["#393b79","#5254a3","#6b6ecf","#9c9ede","#637939","#8ca252","#b5cf6b","#cedb9c","#8c6d31","#bd9e39","#e7ba52","#e7cb94","#843c39","#ad494a","#d6616b","#e7969c","#7b4173","#a55194","#ce6dbd","#de9ed6"],Wo=["#3182bd","#6baed6","#9ecae1","#c6dbef","#e6550d","#fd8d3c","#fdae6b","#fdd0a2","#31a354","#74c476","#a1d99b","#c7e9c0","#756bb1","#9e9ac8","#bcbddc","#dadaeb","#636363","#969696","#bdbdbd","#d9d9d9"];oa.scale.quantile=function(){return tu([],[])},oa.scale.quantize=function(){return eu(0,1,[0,1])},oa.scale.threshold=function(){return ru([.5],[0,1])},oa.scale.identity=function(){return iu([0,1])},oa.svg.arc=function(){function n(){var n=t.apply(this,arguments),u=e.apply(this,arguments),a=r.apply(this,arguments)+Qo,o=i.apply(this,arguments)+Qo,c=(a>o&&(c=a,a=o,o=c),o-a),l=La>c?"0":"1",f=Math.cos(a),s=Math.sin(a),h=Math.cos(o),g=Math.sin(o);return c>=nc?n?"M0,"+u+"A"+u+","+u+" 0 1,1 0,"+-u+"A"+u+","+u+" 0 1,1 0,"+u+"M0,"+n+"A"+n+","+n+" 0 1,0 0,"+-n+"A"+n+","+n+" 0 1,0 0,"+n+"Z":"M0,"+u+"A"+u+","+u+" 0 1,1 0,"+-u+"A"+u+","+u+" 0 1,1 0,"+u+"Z":n?"M"+u*f+","+u*s+"A"+u+","+u+" 0 "+l+",1 "+u*h+","+u*g+"L"+n*h+","+n*g+"A"+n+","+n+" 0 "+l+",0 "+n*f+","+n*s+"Z":"M"+u*f+","+u*s+"A"+u+","+u+" 0 "+l+",1 "+u*h+","+u*g+"L0,0"+"Z"}var t=uu,e=au,r=ou,i=cu;return n.innerRadius=function(e){return arguments.length?(t=ft(e),n):t},n.outerRadius=function(t){return arguments.length?(e=ft(t),n):e},n.startAngle=function(t){return arguments.length?(r=ft(t),n):r},n.endAngle=function(t){return arguments.length?(i=ft(t),n):i},n.centroid=function(){var n=(t.apply(this,arguments)+e.apply(this,arguments))/2,u=(r.apply(this,arguments)+i.apply(this,arguments))/2+Qo;return[Math.cos(u)*n,Math.sin(u)*n]},n};var Qo=-La/2,nc=2*La-1e-6;oa.svg.line.radial=function(){var n=ze(lu);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},He.reverse=Pe,Pe.reverse=He,oa.svg.area=function(){return fu(st)},oa.svg.area.radial=function(){var n=fu(lu);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},oa.svg.chord=function(){function n(n,o){var c=t(this,u,n,o),l=t(this,a,n,o);return"M"+c.p0+r(c.r,c.p1,c.a1-c.a0)+(e(c,l)?i(c.r,c.p1,c.r,c.p0):i(c.r,c.p1,l.r,l.p0)+r(l.r,l.p1,l.a1-l.a0)+i(l.r,l.p1,c.r,c.p0))+"Z"}function t(n,t,e,r){var i=t.call(n,e,r),u=o.call(n,i,r),a=c.call(n,i,r)+Qo,f=l.call(n,i,r)+Qo;return{r:u,a0:a,a1:f,p0:[u*Math.cos(a),u*Math.sin(a)],p1:[u*Math.cos(f),u*Math.sin(f)]}}function e(n,t){return n.a0==t.a0&&n.a1==t.a1}function r(n,t,e){return"A"+n+","+n+" 0 "+ +(e>La)+",1 "+t}function i(n,t,e,r){return"Q 0,0 "+r}var u=fe,a=se,o=su,c=ou,l=cu;return n.radius=function(t){return arguments.length?(o=ft(t),n):o},n.source=function(t){return arguments.length?(u=ft(t),n):u},n.target=function(t){return arguments.length?(a=ft(t),n):a},n.startAngle=function(t){return arguments.length?(c=ft(t),n):c},n.endAngle=function(t){return arguments.length?(l=ft(t),n):l},n},oa.svg.diagonal=function(){function n(n,i){var u=t.call(this,n,i),a=e.call(this,n,i),o=(u.y+a.y)/2,c=[u,{x:u.x,y:o},{x:a.x,y:o},a];return c=c.map(r),"M"+c[0]+"C"+c[1]+" "+c[2]+" "+c[3]}var t=fe,e=se,r=hu;return n.source=function(e){return arguments.length?(t=ft(e),n):t},n.target=function(t){return arguments.length?(e=ft(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},oa.svg.diagonal.radial=function(){var n=oa.svg.diagonal(),t=hu,e=n.projection;return n.projection=function(n){return arguments.length?e(gu(t=n)):t},n},oa.svg.symbol=function(){function n(n,r){return(tc.get(t.call(this,n,r))||mu)(e.call(this,n,r))}var t=du,e=pu;return n.type=function(e){return arguments.length?(t=ft(e),n):t},n.size=function(t){return arguments.length?(e=ft(t),n):e},n};var tc=oa.map({circle:mu,cross:function(n){var t=Math.sqrt(n/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(n){var t=Math.sqrt(n/(2*ic)),e=t*ic;return"M0,"+-t+"L"+e+",0"+" 0,"+t+" "+-e+",0"+"Z"},square:function(n){var t=Math.sqrt(n)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(n){var t=Math.sqrt(n/rc),e=t*rc/2;return"M0,"+e+"L"+t+","+-e+" "+-t+","+-e+"Z"},"triangle-up":function(n){var t=Math.sqrt(n/rc),e=t*rc/2;return"M0,"+-e+"L"+t+","+e+" "+-t+","+e+"Z"}});oa.svg.symbolTypes=tc.keys();var ec,rc=Math.sqrt(3),ic=Math.tan(30*Ha),uc=[],ac=0,oc={ease:Er,delay:0,duration:250};uc.call=Ea.call,uc.empty=Ea.empty,uc.node=Ea.node,oa.transition=function(n){return arguments.length?ec?n.transition():n:Ta.transition()},oa.transition.prototype=uc,uc.select=function(n){var t,e,r,i=this.id,u=[];"function"!=typeof n&&(n=v(n));for(var a=-1,o=this.length;++a<o;){u.push(t=[]);for(var c=this[a],l=-1,f=c.length;++l<f;)(r=c[l])&&(e=n.call(r,r.__data__,l))?("__data__"in r&&(e.__data__=r.__data__),xu(e,l,i,r.__transition__[i]),t.push(e)):t.push(null)}return vu(u,i)},uc.selectAll=function(n){var t,e,r,i,u,a=this.id,o=[];"function"!=typeof n&&(n=y(n));for(var c=-1,l=this.length;++c<l;)for(var f=this[c],s=-1,h=f.length;++s<h;)if(r=f[s]){u=r.__transition__[a],e=n.call(r,r.__data__,s),o.push(t=[]);for(var g=-1,p=e.length;++g<p;)xu(i=e[g],g,a,u),t.push(i)}return vu(o,a)},uc.filter=function(n){var t,e,r,i=[];"function"!=typeof n&&(n=N(n));for(var u=0,a=this.length;a>u;u++){i.push(t=[]);for(var e=this[u],o=0,c=e.length;c>o;o++)(r=e[o])&&n.call(r,r.__data__,o)&&t.push(r)}return vu(i,this.id,this.time).ease(this.ease())},uc.tween=function(n,t){var e=this.id;return arguments.length<2?this.node().__transition__[e].tween.get(n):j(this,null==t?function(t){t.__transition__[e].tween.remove(n)}:function(r){r.__transition__[e].tween.set(n,t)})},uc.attr=function(n,t){function e(){this.removeAttribute(o)}function r(){this.removeAttributeNS(o.space,o.local)}function i(n){return null==n?e:(n+="",function(){var t,e=this.getAttribute(o);return e!==n&&(t=a(e,n),function(n){this.setAttribute(o,t(n))})})}function u(n){return null==n?r:(n+="",function(){var t,e=this.getAttributeNS(o.space,o.local);return e!==n&&(t=a(e,n),function(n){this.setAttributeNS(o.space,o.local,t(n))})})}if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var a=yr(n),o=oa.ns.qualify(n);return yu(this,"attr."+n,t,o.local?u:i)},uc.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(i));return r&&function(n){this.setAttribute(i,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(i.space,i.local));return r&&function(n){this.setAttributeNS(i.space,i.local,r(n))}}var i=oa.ns.qualify(n);return this.tween("attr."+n,i.local?r:e)},uc.style=function(n,t,e){function r(){this.style.removeProperty(n)}function i(t){return null==t?r:(t+="",function(){var r,i=la.getComputedStyle(this,null).getPropertyValue(n);return i!==t&&(r=a(i,t),function(t){this.style.setProperty(n,r(t),e)})})}var u=arguments.length;if(3>u){if("string"!=typeof n){2>u&&(t="");for(e in n)this.style(e,n[e],t);return this}e=""}var a=yr(n);return yu(this,"style."+n,t,i)},uc.styleTween=function(n,t,e){function r(r,i){var u=t.call(this,r,i,la.getComputedStyle(this,null).getPropertyValue(n));return u&&function(t){this.style.setProperty(n,u(t),e)}}return arguments.length<3&&(e=""),this.tween("style."+n,r)},uc.text=function(n){return yu(this,"text",n,Mu)},uc.remove=function(){return this.each("end.transition",function(){var n;!this.__transition__&&(n=this.parentNode)&&n.removeChild(this)})},uc.ease=function(n){var t=this.id;return arguments.length<1?this.node().__transition__[t].ease:("function"!=typeof n&&(n=oa.ease.apply(oa,arguments)),j(this,function(e){e.__transition__[t].ease=n}))},uc.delay=function(n){var t=this.id;return j(this,"function"==typeof n?function(e,r,i){e.__transition__[t].delay=n.call(e,e.__data__,r,i)|0}:(n|=0,function(e){e.__transition__[t].delay=n}))},uc.duration=function(n){var t=this.id;return j(this,"function"==typeof n?function(e,r,i){e.__transition__[t].duration=Math.max(1,n.call(e,e.__data__,r,i)|0)}:(n=Math.max(1,0|n),function(e){e.__transition__[t].duration=n}))},uc.each=function(n,t){var e=this.id;if(arguments.length<2){var r=oc,i=ec;ec=e,j(this,function(t,r,i){oc=t.__transition__[e],n.call(t,t.__data__,r,i)}),oc=r,ec=i}else j(this,function(r){r.__transition__[e].event.on(n,t)});return this},uc.transition=function(){for(var n,t,e,r,i=this.id,u=++ac,a=[],o=0,c=this.length;c>o;o++){a.push(n=[]);for(var t=this[o],l=0,f=t.length;f>l;l++)(e=t[l])&&(r=Object.create(e.__transition__[i]),r.delay+=r.duration,xu(e,l,u,r)),n.push(e)}return vu(a,u)},oa.svg.axis=function(){function n(n){n.each(function(){var n,s=oa.select(this),h=null==l?e.ticks?e.ticks.apply(e,c):e.domain():l,g=null==t?e.tickFormat?e.tickFormat.apply(e,c):String:t,p=wu(e,h,f),d=s.selectAll(".tick.minor").data(p,String),m=d.enter().insert("line",".tick").attr("class","tick minor").style("opacity",1e-6),v=oa.transition(d.exit()).style("opacity",1e-6).remove(),y=oa.transition(d).style("opacity",1),M=s.selectAll(".tick.major").data(h,String),x=M.enter().insert("g","path").attr("class","tick major").style("opacity",1e-6),b=oa.transition(M.exit()).style("opacity",1e-6).remove(),_=oa.transition(M).style("opacity",1),w=Fi(e),S=s.selectAll(".domain").data([0]),E=(S.enter().append("path").attr("class","domain"),oa.transition(S)),k=e.copy(),A=this.__chart__||k;this.__chart__=k,x.append("line"),x.append("text");var N=x.select("line"),q=_.select("line"),T=M.select("text").text(g),C=x.select("text"),z=_.select("text");switch(r){case"bottom":n=bu,m.attr("y2",u),y.attr("x2",0).attr("y2",u),N.attr("y2",i),C.attr("y",Math.max(i,0)+o),q.attr("x2",0).attr("y2",i),z.attr("x",0).attr("y",Math.max(i,0)+o),T.attr("dy",".71em").style("text-anchor","middle"),E.attr("d","M"+w[0]+","+a+"V0H"+w[1]+"V"+a);break;case"top":n=bu,m.attr("y2",-u),y.attr("x2",0).attr("y2",-u),N.attr("y2",-i),C.attr("y",-(Math.max(i,0)+o)),q.attr("x2",0).attr("y2",-i),z.attr("x",0).attr("y",-(Math.max(i,0)+o)),T.attr("dy","0em").style("text-anchor","middle"),E.attr("d","M"+w[0]+","+-a+"V0H"+w[1]+"V"+-a);break;case"left":n=_u,m.attr("x2",-u),y.attr("x2",-u).attr("y2",0),N.attr("x2",-i),C.attr("x",-(Math.max(i,0)+o)),q.attr("x2",-i).attr("y2",0),z.attr("x",-(Math.max(i,0)+o)).attr("y",0),T.attr("dy",".32em").style("text-anchor","end"),E.attr("d","M"+-a+","+w[0]+"H0V"+w[1]+"H"+-a);break;case"right":n=_u,m.attr("x2",u),y.attr("x2",u).attr("y2",0),N.attr("x2",i),C.attr("x",Math.max(i,0)+o),q.attr("x2",i).attr("y2",0),z.attr("x",Math.max(i,0)+o).attr("y",0),T.attr("dy",".32em").style("text-anchor","start"),E.attr("d","M"+a+","+w[0]+"H0V"+w[1]+"H"+a)}if(e.ticks)x.call(n,A),_.call(n,k),b.call(n,k),m.call(n,A),y.call(n,k),v.call(n,k);else{var D=k.rangeBand()/2,j=function(n){return k(n)+D};x.call(n,j),_.call(n,j)}})}var t,e=oa.scale.linear(),r=cc,i=6,u=6,a=6,o=3,c=[10],l=null,f=0;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in lc?t+"":cc,n):r},n.ticks=function(){return arguments.length?(c=arguments,n):c},n.tickValues=function(t){return arguments.length?(l=t,n):l},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t,e){if(!arguments.length)return i;var r=arguments.length-1;return i=+t,u=r>1?+e:i,a=r>0?+arguments[r]:i,n},n.tickPadding=function(t){return arguments.length?(o=+t,n):o},n.tickSubdivide=function(t){return arguments.length?(f=+t,n):f},n};var cc="bottom",lc={top:1,right:1,bottom:1,left:1};oa.svg.brush=function(){function n(u){u.each(function(){var u,a=oa.select(this),l=a.selectAll(".background").data([0]),s=a.selectAll(".extent").data([0]),h=a.selectAll(".resize").data(f,String);a.style("pointer-events","all").on("mousedown.brush",i).on("touchstart.brush",i),l.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),s.enter().append("rect").attr("class","extent").style("cursor","move"),h.enter().append("g").attr("class",function(n){return"resize "+n}).style("cursor",function(n){return fc[n]}).append("rect").attr("x",function(n){return/[ew]$/.test(n)?-3:null}).attr("y",function(n){return/^[ns]/.test(n)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),h.style("display",n.empty()?"none":null),h.exit().remove(),o&&(u=Fi(o),l.attr("x",u[0]).attr("width",u[1]-u[0]),e(a)),c&&(u=Fi(c),l.attr("y",u[0]).attr("height",u[1]-u[0]),r(a)),t(a)})}function t(n){n.selectAll(".resize").attr("transform",function(n){return"translate("+s[+/e$/.test(n)][0]+","+s[+/^s/.test(n)][1]+")"})}function e(n){n.select(".extent").attr("x",s[0][0]),n.selectAll(".extent,.n>rect,.s>rect").attr("width",s[1][0]-s[0][0])}function r(n){n.select(".extent").attr("y",s[0][1]),n.selectAll(".extent,.e>rect,.w>rect").attr("height",s[1][1]-s[0][1])}function i(){function i(){var n=oa.event.changedTouches;return n?oa.touches(y,n)[0]:oa.mouse(y)}function f(){oa.event.keyCode==32&&(E||(m=null,k[0]-=s[1][0],k[1]-=s[1][1],E=2),l())}function h(){oa.event.keyCode==32&&2==E&&(k[0]+=s[1][0],k[1]+=s[1][1],E=0,l())}function g(){var n=i(),u=!1;v&&(n[0]+=v[0],n[1]+=v[1]),E||(oa.event.altKey?(m||(m=[(s[0][0]+s[1][0])/2,(s[0][1]+s[1][1])/2]),k[0]=s[+(n[0]<m[0])][0],k[1]=s[+(n[1]<m[1])][1]):m=null),w&&p(n,o,0)&&(e(b),u=!0),S&&p(n,c,1)&&(r(b),u=!0),u&&(t(b),x({type:"brush",mode:E?"move":"resize"}))}function p(n,t,e){var r,i,a=Fi(t),o=a[0],c=a[1],l=k[e],f=s[1][e]-s[0][e];return E&&(o-=l,c-=f+l),r=Math.max(o,Math.min(c,n[e])),E?i=(r+=l)+f:(m&&(l=Math.max(o,Math.min(c,2*m[e]-r))),r>l?(i=r,r=l):i=l),s[0][e]!==r||s[1][e]!==i?(u=null,s[0][e]=r,s[1][e]=i,!0):void 0}function d(){g(),b.style("pointer-events","all").selectAll(".resize").style("display",n.empty()?"none":null),oa.select("body").style("cursor",null),A.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),x({type:"brushend"}),l()}var m,v,y=this,M=oa.select(oa.event.target),x=a.of(y,arguments),b=oa.select(y),_=M.datum(),w=!/^(n|s)$/.test(_)&&o,S=!/^(e|w)$/.test(_)&&c,E=M.classed("extent"),k=i(),A=oa.select(la).on("mousemove.brush",g).on("mouseup.brush",d).on("touchmove.brush",g).on("touchend.brush",d).on("keydown.brush",f).on("keyup.brush",h);if(E)k[0]=s[0][0]-k[0],k[1]=s[0][1]-k[1];else if(_){var N=+/w$/.test(_),q=+/^n/.test(_);v=[s[1-N][0]-k[0],s[1-q][1]-k[1]],k[0]=s[N][0],k[1]=s[q][1]}else oa.event.altKey&&(m=k.slice());b.style("pointer-events","none").selectAll(".resize").style("display",null),oa.select("body").style("cursor",M.style("cursor")),x({type:"brushstart"}),g(),l()
}var u,a=h(n,"brushstart","brush","brushend"),o=null,c=null,f=sc[0],s=[[0,0],[0,0]];return n.x=function(t){return arguments.length?(o=t,f=sc[!o<<1|!c],n):o},n.y=function(t){return arguments.length?(c=t,f=sc[!o<<1|!c],n):c},n.extent=function(t){var e,r,i,a,l;return arguments.length?(u=[[0,0],[0,0]],o&&(e=t[0],r=t[1],c&&(e=e[0],r=r[0]),u[0][0]=e,u[1][0]=r,o.invert&&(e=o(e),r=o(r)),e>r&&(l=e,e=r,r=l),s[0][0]=0|e,s[1][0]=0|r),c&&(i=t[0],a=t[1],o&&(i=i[1],a=a[1]),u[0][1]=i,u[1][1]=a,c.invert&&(i=c(i),a=c(a)),i>a&&(l=i,i=a,a=l),s[0][1]=0|i,s[1][1]=0|a),n):(t=u||s,o&&(e=t[0][0],r=t[1][0],u||(e=s[0][0],r=s[1][0],o.invert&&(e=o.invert(e),r=o.invert(r)),e>r&&(l=e,e=r,r=l))),c&&(i=t[0][1],a=t[1][1],u||(i=s[0][1],a=s[1][1],c.invert&&(i=c.invert(i),a=c.invert(a)),i>a&&(l=i,i=a,a=l))),o&&c?[[e,i],[r,a]]:o?[e,r]:c&&[i,a])},n.clear=function(){return u=null,s[0][0]=s[0][1]=s[1][0]=s[1][1]=0,n},n.empty=function(){return o&&s[0][0]===s[1][0]||c&&s[0][1]===s[1][1]},oa.rebind(n,a,"on")};var fc={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},sc=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]];oa.time={};var hc=Date,gc=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];Su.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){pc.setUTCDate.apply(this._,arguments)},setDay:function(){pc.setUTCDay.apply(this._,arguments)},setFullYear:function(){pc.setUTCFullYear.apply(this._,arguments)},setHours:function(){pc.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){pc.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){pc.setUTCMinutes.apply(this._,arguments)},setMonth:function(){pc.setUTCMonth.apply(this._,arguments)},setSeconds:function(){pc.setUTCSeconds.apply(this._,arguments)},setTime:function(){pc.setTime.apply(this._,arguments)}};var pc=Date.prototype,dc="%a %b %e %X %Y",mc="%m/%d/%Y",vc="%H:%M:%S",yc=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],Mc=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],xc=["January","February","March","April","May","June","July","August","September","October","November","December"],bc=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];oa.time.year=Eu(function(n){return n=oa.time.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),oa.time.years=oa.time.year.range,oa.time.years.utc=oa.time.year.utc.range,oa.time.day=Eu(function(n){var t=new hc(1970,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),oa.time.days=oa.time.day.range,oa.time.days.utc=oa.time.day.utc.range,oa.time.dayOfYear=function(n){var t=oa.time.year(n);return Math.floor((n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*6e4)/864e5)},gc.forEach(function(n,t){n=n.toLowerCase(),t=7-t;var e=oa.time[n]=Eu(function(n){return(n=oa.time.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+Math.floor(t)*7)},function(n){var e=oa.time.year(n).getDay();return Math.floor((oa.time.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});oa.time[n+"s"]=e.range,oa.time[n+"s"].utc=e.utc.range,oa.time[n+"OfYear"]=function(n){var e=oa.time.year(n).getDay();return Math.floor((oa.time.dayOfYear(n)+(e+t)%7)/7)}}),oa.time.week=oa.time.sunday,oa.time.weeks=oa.time.sunday.range,oa.time.weeks.utc=oa.time.sunday.utc.range,oa.time.weekOfYear=oa.time.sundayOfYear,oa.time.format=function(n){function t(t){for(var r,i,u,a=[],o=-1,c=0;++o<e;)n.charCodeAt(o)===37&&(a.push(n.substring(c,o)),(i=Nc[r=n.charAt(++o)])!=null&&(r=n.charAt(++o)),(u=qc[r])&&(r=u(t,null==i?"e"===r?" ":"0":i)),a.push(r),c=o+1);return a.push(n.substring(c,o)),a.join("")}var e=n.length;return t.parse=function(t){var e={y:1900,m:0,d:1,H:0,M:0,S:0,L:0},r=Au(e,n,t,0);if(r!=t.length)return null;"p"in e&&(e.H=e.H%12+e.p*12);var i=new hc;return i.setFullYear(e.y,e.m,e.d),i.setHours(e.H,e.M,e.S,e.L),i},t.toString=function(){return n},t};var _c=Nu(yc),wc=Nu(Mc),Sc=Nu(xc),Ec=qu(xc),kc=Nu(bc),Ac=qu(bc),Nc={"-":"",_:" ",0:"0"},qc={a:function(n){return Mc[n.getDay()]},A:function(n){return yc[n.getDay()]},b:function(n){return bc[n.getMonth()]},B:function(n){return xc[n.getMonth()]},c:oa.time.format(dc),d:function(n,t){return Tu(n.getDate(),t,2)},e:function(n,t){return Tu(n.getDate(),t,2)},H:function(n,t){return Tu(n.getHours(),t,2)},I:function(n,t){return Tu(n.getHours()%12||12,t,2)},j:function(n,t){return Tu(1+oa.time.dayOfYear(n),t,3)},L:function(n,t){return Tu(n.getMilliseconds(),t,3)},m:function(n,t){return Tu(n.getMonth()+1,t,2)},M:function(n,t){return Tu(n.getMinutes(),t,2)},p:function(n){return n.getHours()>=12?"PM":"AM"},S:function(n,t){return Tu(n.getSeconds(),t,2)},U:function(n,t){return Tu(oa.time.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Tu(oa.time.mondayOfYear(n),t,2)},x:oa.time.format(mc),X:oa.time.format(vc),y:function(n,t){return Tu(n.getFullYear()%100,t,2)},Y:function(n,t){return Tu(n.getFullYear()%1e4,t,4)},Z:$u,"%":function(){return"%"}},Tc={a:Cu,A:zu,b:Du,B:ju,c:Lu,d:Uu,e:Uu,H:Iu,I:Iu,L:Zu,m:Yu,M:Vu,p:Bu,S:Xu,x:Fu,X:Hu,y:Ru,Y:Pu},Cc=/^\s*\d+/,zc=oa.map({am:0,pm:1});oa.time.format.utc=function(n){function t(n){try{hc=Su;var t=new hc;return t._=n,e(t)}finally{hc=Date}}var e=oa.time.format(n);return t.parse=function(n){try{hc=Su;var t=e.parse(n);return t&&t._}finally{hc=Date}},t.toString=e.toString,t};var Dc=oa.time.format.utc("%Y-%m-%dT%H:%M:%S.%LZ");oa.time.format.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Ju:Dc,Ju.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},Ju.toString=Dc.toString,oa.time.second=Eu(function(n){return new hc(Math.floor(n/1e3)*1e3)},function(n,t){n.setTime(n.getTime()+Math.floor(t)*1e3)},function(n){return n.getSeconds()}),oa.time.seconds=oa.time.second.range,oa.time.seconds.utc=oa.time.second.utc.range,oa.time.minute=Eu(function(n){return new hc(Math.floor(n/6e4)*6e4)},function(n,t){n.setTime(n.getTime()+Math.floor(t)*6e4)},function(n){return n.getMinutes()}),oa.time.minutes=oa.time.minute.range,oa.time.minutes.utc=oa.time.minute.utc.range,oa.time.hour=Eu(function(n){var t=n.getTimezoneOffset()/60;return new hc((Math.floor(n/36e5-t)+t)*36e5)},function(n,t){n.setTime(n.getTime()+Math.floor(t)*36e5)},function(n){return n.getHours()}),oa.time.hours=oa.time.hour.range,oa.time.hours.utc=oa.time.hour.utc.range,oa.time.month=Eu(function(n){return n=oa.time.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),oa.time.months=oa.time.month.range,oa.time.months.utc=oa.time.month.utc.range;var jc=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Lc=[[oa.time.second,1],[oa.time.second,5],[oa.time.second,15],[oa.time.second,30],[oa.time.minute,1],[oa.time.minute,5],[oa.time.minute,15],[oa.time.minute,30],[oa.time.hour,1],[oa.time.hour,3],[oa.time.hour,6],[oa.time.hour,12],[oa.time.day,1],[oa.time.day,2],[oa.time.week,1],[oa.time.month,1],[oa.time.month,3],[oa.time.year,1]],Fc=[[oa.time.format("%Y"),jt],[oa.time.format("%B"),function(n){return n.getMonth()}],[oa.time.format("%b %d"),function(n){return n.getDate()!=1}],[oa.time.format("%a %d"),function(n){return n.getDay()&&n.getDate()!=1}],[oa.time.format("%I %p"),function(n){return n.getHours()}],[oa.time.format("%I:%M"),function(n){return n.getMinutes()}],[oa.time.format(":%S"),function(n){return n.getSeconds()}],[oa.time.format(".%L"),function(n){return n.getMilliseconds()}]],Hc=oa.scale.linear(),Pc=Wu(Fc);Lc.year=function(n,t){return Hc.domain(n.map(na)).ticks(t).map(Qu)},oa.time.scale=function(){return Gu(oa.scale.linear(),Lc,Pc)};var Rc=Lc.map(function(n){return[n[0].utc,n[1]]}),Oc=[[oa.time.format.utc("%Y"),jt],[oa.time.format.utc("%B"),function(n){return n.getUTCMonth()}],[oa.time.format.utc("%b %d"),function(n){return n.getUTCDate()!=1}],[oa.time.format.utc("%a %d"),function(n){return n.getUTCDay()&&n.getUTCDate()!=1}],[oa.time.format.utc("%I %p"),function(n){return n.getUTCHours()}],[oa.time.format.utc("%I:%M"),function(n){return n.getUTCMinutes()}],[oa.time.format.utc(":%S"),function(n){return n.getUTCSeconds()}],[oa.time.format.utc(".%L"),function(n){return n.getUTCMilliseconds()}]],Yc=Wu(Oc);return Rc.year=function(n,t){return Hc.domain(n.map(ea)).ticks(t).map(ta)},oa.time.scale.utc=function(){return Gu(oa.scale.linear(),Rc,Yc)},oa.text=function(){return oa.xhr.apply(oa,arguments).response(ra)},oa.json=function(n,t){return oa.xhr(n,"application/json",t).response(ia)},oa.html=function(n,t){return oa.xhr(n,"text/html",t).response(ua)},oa.xml=function(){return oa.xhr.apply(oa,arguments).response(aa)},oa}();</script>
<style>.grid .tick {
stroke: #FFFFFF;
opacity: 0.3;
}
</style>


</head>
<body bgcolor="FFFFFF" onresize="location.reload();">

<script>



data=[
[
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,2,4,2,3,0,4,2,5,2,0,0,1,4,2,0,0,3,0,1,0
],[
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,1,0,0,0,1,1,1,1,0
],[
0,0,2,0,0,0,0,0,0,0,0,0,0,0,4,0,0,3,1,0,0,0,1,0,0,1,0,6,0,0,6,4,3,1,0,0,1,2,1,0,0,0,1,0,2,0
],[
5,5,6,4,1,0,1,9,4,7,2,2,3,2,0,1,1,8,4,1,0,2,2,0,2,3,1,1,5,5,10,0,1,3,3,9,0,2,1,3,0,3,2,2,2,1
],[
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1
],[
2,4,2,1,2,1,0,2,0,2,2,2,1,1,2,4,2,2,1,2,3,1,1,4,3,2,2,2,3,1,2,2,4,2,2,4,3,3,5,3,0,5,5,2,2,4
],[
2,3,2,4,0,0,1,3,2,0,0,3,2,0,1,0,0,1,0,1,2,4,3,4,0,1,2,1,1,3,0,0,2,1,1,0,0,1,0,0,0,0,1,0,1,3
],[
2,0,1,1,5,0,0,2,0,1,1,3,2,1,3,3,1,2,1,2,1,2,1,1,5,1,1,0,2,1,1,1,1,1,1,0,1,2,4,3,3,1,4,1,1,1
],[
3,2,1,1,1,0,0,3,2,2,0,2,1,1,2,2,1,2,1,2,0,2,3,2,4,2,3,3,3,1,2,2,3,0,2,4,1,2,3,2,0,4,5,2,2,0
],[
2,1,0,2,2,2,1,1,1,4,0,2,0,2,0,3,3,2,3,1,1,0,1,0,2,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0
],[
0,0,0,1,0,1,0,0,1,0,3,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,1,1,2,1,0,1,1,2,1,0,0,0,0,0,1,0,0,0,0,1
],[
2,4,0,1,2,2,0,2,1,2,1,3,3,0,2,2,1,2,2,0,2,2,1,1,3,1,0,1,0,0,0,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0
],[
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0
],[
0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,2,0,1,2,2,3,0,1,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0
],[
1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,3,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0
],[
3,3,1,1,1,0,2,1,3,0,1,2,2,1,4,2,0,1,2,1,0,0,1,0,0,1,1,0,4,5,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
],[
0,4,0,3,2,1,0,2,4,4,1,2,2,1,2,2,3,1,4,1,0,0,2,1,5,1,1,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
],[
5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
]
];

var colors = ["FEEBE2","FDE0DD","FCC5C0","FBB4B9","FA9FB5","F768A1","DD3497","AE017E","7A0177","49006A","F7FBFF","DEEBF7","C6DBEF","9ECAE1","6BAED6","4292C6","2171B5","08519C"];

function make_x_axis() {return d3.svg.axis().scale(x).orient("bottom").ticks(100)};
function make_y_axis() { return d3.svg.axis().scale(y).orient("left").ticks(100)};
var n =18,
m = 46,
stack = d3.layout.stack().offset("wiggle"),

layers1=stack(  data.map(function(foo) { return foo.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });   })  );

var width = document.width,
height = document.height;

var x = d3.scale.linear()
.domain([0, m - 1])
.range([0, width]);

var y = d3.scale.linear()
.domain([0, d3.max(layers1, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); })])
.range([height, 0]);
var color = d3.scale.ordinal()
.range(colors);


var area = d3.svg.area()
.x(function(d) { return x(d.x); })
.y0(function(d) { return y(d.y0); })
.y1(function(d) { return y(d.y0 + d.y); });

var svg = d3.select("body").append("svg")
.attr("width", width)
.attr("height", height);

var colorx=0;


svg.selectAll("path")
.data(layers1)
.enter().append("path")
.attr("d", area)
.style("fill", function() { return color(colorx+=100) });
svg.append("g").attr("class", "grid").attr("transform", "translate(0," + height + ")").call(make_x_axis().tickSize(-height, 0, 0).tickFormat(""))
svg.append("g").attr("class", "grid").call(make_y_axis().tickSize(-width, 0, 0).tickFormat(""))
var brR=1.000000;
var brG=1.000000;
var brB=1.000000;
</script>
</body>
</html><!DOCTYPE html>
<html>
<head>
    <title>Omid Kashan &mdash; Module 5</title>
    <style type="text/css">
        * { box-sizing: border-box; font-family:sans-serif;}
        body, html, h1, h2, h3, h4, h5, h6, figure, blockquote, ul, ol, li, p {margin:0;padding:0}
        p {margin-bottom:50px;}
        #main {padding:20px;}
        h1 {font-weight: normal;}
        #viz {max-width:800px;height:200px;overflow:visible;margin-left:40px}
        svg g .bar+text {text-align: center;fill:black;transform: rotate(-90deg) translate(-120px,-75px);-webkit-transform:rotate(-90deg) translate(-120px,-75px);transform-origin: center center;-webkit-transform-origin:center center;fill:white;letter-spacing: 2px;}
        svg g rect, svg g circle, svg circle {fill:#F21212 ;transition:transform 0.2s ease-in-out;}
        svg g circle:hover {fill:black;stroke:#f21212;transition: all 0.2s linear;stroke-width:3;cursor: pointer;}
        svg g .bar+text {}
        svg .domain {display: none}
        svg text {font-size:11px;}
        svg .tick line {stroke:#aaa;transform:translateX(0)}
        svg g.y.axis {transform:translateY(300px);}
        
    </style>
</head>
<body>
    
    <div id="main">
        
        <h1>Manchester United</h1>
        <p>Wins per season since the start of the Premier League.</p>
        <svg id="viz"></svg>
    
    </div>  
    
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script>
        
        var i=1,max={},min={},dim={w:600,h:300},viz = d3.select('#viz'),main=d3.select('#main'),bar={width:30},group,scale={},axis={};
        window.onload = function() {
            d3.csv('data.csv',function(data) {
                //console.log(data);
                
                max.w = d3.max(data, function(d) { return +d.w;} );
                max.gf = d3.max(data, function(d) { return +d.gf;} );
                
                min.w = d3.min(data, function(d) { return +d.w;} );                
                min.gf = d3.min(data, function(d) { return +d.gf;} );
                
                //console.log(min.gf,min.w);
                
                //scale.h = d3.scale.linear().domain([0,max/3]).range([dim.h,0]);   
                
                scale.x = d3.scale.linear().domain([min.w,max.w]).range([dim.h,0]);
                scale.y = d3.scale.linear().domain([Math.ceil(max.gf/100)*100,min.gf]).range([dim.w,0]);
                
                viz.attr('width',data.length*30);
                axis.x = d3.svg.axis().scale(scale.x).orient('left');
                axis.y = d3.svg.axis().scale(scale.y).orient('bottom');
                
                //group = viz.selectAll('g').data(data).enter().append('g').attr("transform", function(d, i) { return "translate(" + i*(bar.width + 1)+", 0)"; });
                
                group = viz.selectAll('g').data(data).enter().append('g');
                
                group.append('circle').attr('class','bar').attr('width', bar.width).attr('r',function(d) { return d.streak/2; }).attr("cy", function(d) {return scale.x(d.w); }).attr("cx", function(d) { return scale.y(d.gf); }).append('title').text(function(d) { return d.season + '\nWon '+d.w+'\nStreak '+d.streak+'\nScored '+d.gf+''; });
                
                //group.append('text').text(function(d) { return d.season; }).style("text-anchor", "middle").attr("y", function(d) { return max+10; }).attr('x',function(d) { return scale.h(0)-(dim.h+35); });             
                viz.append('g').attr('class','x axis').call(axis.x);
                viz.append('g').attr('class','y axis').call(axis.y);
                
                viz.append("text").attr("class", "x label").attr("text-anchor", "middle").attr("x", dim.w/2).attr("y", dim.h + 40).text("Goals scored per season");
                viz.append("text").attr("class", "y label").attr("text-anchor", "middle").attr('x',0-(dim.h/2)).attr("y", 10).attr("dy", "-50").attr("transform", "rotate(-90)").text("Matches won per season");
                
            });
        };

    </script>
    
</body>
</html><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" type="text/css" href="http://dc-js.github.io/dc.js/css/dc.css" />
  <script src="http://dc-js.github.io/dc.js/js/d3.js"></script>
  <script src="http://dc-js.github.io/dc.js/js/crossfilter.js"></script>
  <script src="http://dc-js.github.io/dc.js/js/dc.js"></script>
  <style>
  </style>
</head>

<body>
  <!-- add chart divs here -->
  <script>
    // add dc.js chart initialization code here; you can also
    // load data from assets in your gist using d3.csv('filename', ...)
  </script>
</body>
<!DOCTYPE html>
<html>
<meta charset="utf-8">
<title>Sankey Diagram</title>
<style>
  #chart {
    height: 500px;
  }

  .node rect {
    cursor: move;
    fill-opacity: .9;
    shape-rendering: crispEdges;
  }

  .node text {
    pointer-events: none;
    text-shadow: 0 1px 0 #fff;
  }

  .link {
    fill: none;
    stroke: #000;
    stroke-opacity: .2;
  }

  .link:hover {
    stroke-opacity: .5;
  }
</style>

<body>
  <div id="chart"></div>
  <script src="d3.min.js"></script>
  <script>
    var margin = {
        top: 1,
        right: 1,
        bottom: 6,
        left: 1
      },
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

    var formatNumber = d3.format(",.0f"),
      format = function(d) {
        return formatNumber(d) + " TWh";
      },
      color = d3.scale.category20();

    var svg = d3.select("#chart").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var sankey = d3.sankey()
      .nodeWidth(15)
      .nodePadding(10)
      .size([width, height]);

    var path = sankey.link();

    d3.json("energy.json", function(energy) {

      sankey
        .nodes(energy.nodes)
        .links(energy.links)
        .layout(32);

      var link = svg.append("g").selectAll(".link")
        .data(energy.links)
        .enter().append("path")
        .attr("class", "link")
        .attr("d", path)
        .style("stroke-width", function(d) {
          return Math.max(1, d.dy);
        })
        .sort(function(a, b) {
          return b.dy - a.dy;
        });

      link.append("title")
        .text(function(d) {
          return d.source.name + " → " + d.target.name + "\n" + format(d.value);
        });

      var node = svg.append("g").selectAll(".node")
        .data(energy.nodes)
        .enter().append("g")
        .attr("class", "node")
        .attr("transform", function(d) {
          return "translate(" + d.x + "," + d.y + ")";
        });

        // Not currently implemented in v4.0

        // .call(d3.behavior.drag()
        //   .origin(function(d) {
        //     return d;
        //   })
        //   .on("dragstart", function() {
        //     this.parentNode.appendChild(this);
        //   })
        //   .on("drag", dragmove));

      node.append("rect")
        .attr("height", function(d) {
          return d.dy;
        })
        .attr("width", sankey.nodeWidth())
        .style("fill", function(d) {
          return d.color = color(d.name.replace(/ .*/, ""));
        })
        .style("stroke", function(d) {
          return d3.rgb(d.color).darker(2);
        })
        .append("title")
        .text(function(d) {
          return d.name + "\n" + format(d.value);
        });

      node.append("text")
        .attr("x", -6)
        .attr("y", function(d) {
          return d.dy / 2;
        })
        .attr("dy", ".35em")
        .attr("text-anchor", "end")
        .attr("transform", null)
        .text(function(d) {
          return d.name;
        })
        .filter(function(d) {
          return d.x < width / 2;
        })
        .attr("x", 6 + sankey.nodeWidth())
        .attr("text-anchor", "start");

      function dragmove(d) {
        d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
        sankey.relayout();
        link.attr("d", path);
      }
    });
  </script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.counties {
  fill: none;
}



body {
  font-family: "Helvetica Neue", Helvetica, sans-serif;
  margin: 1em auto 4em auto;
  position: relative;
  tab-size: 2;
  width: 960px;
}

.key path {
  display: none;
}

.key line {
  stroke: #000;
  shape-rendering: crispEdges;
}


.states {
  /*fill: none;
  stroke: #000;*/
 /* stroke-linejoin: round;*/

  stroke: #999;
  /*stroke-dasharray: 2,2;*/
  stroke-linejoin: round;
}

.black { fill: #000000;}

.title {
  font-size: 25px;
  font-weight: 300;

}

.tick text {
  font-size: 10px;
}


</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script src="colorbrewer.js"></script>
<script>

///////////////////////
/* buttons */




(function () {


  function pickRandomProperty(obj) {
    var result;
    var count = 0;
    for (var prop in obj)
        if (Math.random() < 1/++count)
           result = prop;
    return result;
  };

  var buttonData = ["Scheme1", "Scheme2", "Scheme3", "Random"];
  var buttonDiv = d3.select("body").append("svg")
      .attr("width", 960)
      .attr("height", 50);
  var buttons = buttonDiv.selectAll(".updateButton")
    .data(buttonData)
     .enter()
    .append('g')
    .attr("class", "updateButton")
    .on("click", function(d, i) {

      if (d === "Scheme1") {
        setup(colorbrewer.Blues["8"]); //Greys, Oranges, Blues, YlOrRd
      } 

      if (d === "Scheme2") {
        setup(colorbrewer.Greys["8"]);
      } 

      if (d === "Scheme3") {
        setup(colorbrewer.Oranges["8"]);
      } 

      if (d === "Random") {
        var nProperty = pickRandomProperty(colorbrewer);
        console.log(nProperty);
        setup(colorbrewer[nProperty]["8"]);
      } 


    });
  buttons.append("rect")
    .attr("x", function(d, i) { return (i * 100) + 270; })
       .attr("y", 18)
      .attr("width", 98)
      .attr("height", 25)
      .attr("ry", 5)
      .style("stroke", "#787878")
      .style("fill", "steelblue");
  buttons.append("text")
      .attr("x", function(d, i) { return (i * 100) + (100 / 2) + 260; }) 
      .attr("y", 30)
      .attr("dy", "0.35em")
      .style("text-anchor", "middle")
      .style("font-size", "15px")
      .style("pointer-events", "none")
      .text(function(d) { return d; });
 }());   
 ///////////////////////   



var setup = function (color) {

  d3.select("svg.myChart").remove();

  var width = 960,
      height = 500;

  var projection = d3.geo.albersUsa()
      .scale(900)
      .translate([width / 2, height / 2]);  

  var path = d3.geo.path()
      .projection(projection);

  var svg = d3.select("body").append("svg")
      .attr("class", "myChart")
      .attr("width", width)
      .attr("height", height);

  //d3.select("svg.myChart").append("text").text("Population in states")
  //    .attr("transform", "translate(360,30)").attr("class", "title")

  queue()
      .defer(d3.json, "usa4.topo.json")
      .defer(d3.csv, "population.csv")//, function(d) {  rateById.set(d["GEO.id2"], +d["HD01_VD01"]); })
      .await(ready);

  function ready(error, data, data1) {

    //console.log(d3.min(data1, function(d) { return +d["HD01_VD01"]; }));
    //console.log(d3.max(data1, function(d) { return +d["HD01_VD01"]; }));


    var rateById = {};

    data1.forEach(function(d) { rateById[d.id] = +d["HD01_VD01"]; });

    //console.log(rateById)

    var min = d3.min(data1, function(d) { return +d["HD01_VD01"]; });
    var max = d3.max(data1, function(d) { return +d["HD01_VD01"]; });

    var colorScale = d3.scale.threshold()
      //.domain([min, max]) //568158 37691912
      .domain([800000, 2000000, 3300000, 5000000, 7000000, 10000000, 20000000]) 
      //.range(d3.range(9).map(function(i) { return "q" + i + "-9"; }));
      //.range(colorbrewer.YlGn["5"]);
      .range(color);

    //console.log(quantize(15691912));

    //colorbrewer.Greens["9"]

    //formatValue = d3.format(".2s");
    formatValue = d3.format("s");

    // A position encoding for the key only.
    var x = d3.scale.linear()
        .domain([568158, 37691912])
        .range([0, 600]);



    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom")
        .tickSize(13)
        .tickValues(colorScale.domain())
        .tickFormat(function(d) { return formatValue(d)});  
             
    // key
    var g = svg.append("g")
        .attr("class", "key")
        .attr("transform", "translate(170,30)");

    g.selectAll("rect")
        .data(colorScale.range().map(function(d, i) {
          return {
            x0: i ? x(colorScale.domain()[i - 1]) : x.range()[0],
            x1: i < colorScale.domain().length ? x(colorScale.domain()[i]) : x.range()[1],
            z: d
          };
        }))
      .enter().append("rect")
        .attr("height", 8)
        .attr("x", function(d) { return d.x0; })
        .attr("width", function(d) { console.log(d); return d.x1 - d.x0; })
        .style("fill", function(d) { return d.z; });

    g.call(xAxis).append("text")
        .attr("class", "caption")
        .attr("y", -6)
        .text("Population in states");  
    // key end    

    var formatNumber = d3.format(",.0f");



    svg.append("g")
        .attr("transform", "translate(0,35)")
        .attr("class", "states")
      .selectAll("path")
        .data(topojson.feature(data, data.objects["usa.geo"]).features)
      .enter().append("path")
        .style("fill", function(d, i) {  return colorScale(rateById[d.id]); })
        .attr("d", path)
        .append("title")
          .text(function(d, i) { return d.properties.name + ": " + formatNumber(rateById[d.id]); });

  /*
    svg.append("path")
        .datum(topojson.mesh(data, data.objects.states, function(a, b) { return a !== b; }))
        .attr("class", "states")
        .attr("d", path);
        */
  }

  d3.select(self.frameElement).style("height", height + 80 + "px");


  



};

setup(colorbrewer.Blues["8"])

</script>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html  xmlns="http://www.w3.org/1999/xhtml"
       xml:lang="en-US"
       lang="en-US">
  <head profile="http://www.w3.org/2005/10/profile">
    <title>IF4IT Sample Charts Web Page</title>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
    <meta name="Description" content="This page tries to mix charts with html formatting and layout constructs." />
    <meta http-equiv="pragma" content="no-cache" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="-l" />

    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?2.4.5" charset="utf-8"></script>

    <script type="text/javascript">

      var seasonsArray = ["Winter", "Spring", "Summer", "Autumn"];
      var numericAxis = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

      dataSet1 = [
        {cx: 7, cy: 2, r: 10, color: "blue"},
        {cx: 2, cy: 2, r: 30, color: "orange"},
        {cx: 3, cy: 6, r: 30, color: "purple"},
        {cx: 4, cy: 4, r: 10, color: "yellow"},
        {cx: 5, cy: 5, r: 5, color: "red"},
        {cx: 9, cy: 8, r: 20, color: "green"}
      ];

      dataSet2 = [
        {cx: "Summer", cy: 2, r: 10, color: "blue"},
        {cx: "Winter", cy: 2, r: 30, color: "orange"},
        {cx: "Autumn", cy: 5, r: 5, color: "red"},
        {cx: "Spring", cy: 8, r: 20, color: "green"}
      ];

      dataSet3 = [
        {cx: 2, cy: "Summer", r: 10, color: "blue"},
        {cx: 2, cy: "Winter", r: 30, color: "orange"},
        {cx: 5, cy: "Autumn", r: 5, color: "red"},
        {cx: 8, cy: "Spring", r: 20, color: "green"}
      ];

      dataSet4 = [
        {cx: "Summer", cy: "Summer", r: 10, color: "blue"},
        {cx: "Autumn", cy: "Winter", r: 25, color: "orange"},
        {cx: "Winter", cy: "Winter", r: 5, color: "maroon"},
        {cx: "Spring", cy: "Autumn", r: 5, color: "red"},
        {cx: "Spring", cy: "Summer", r: 8, color: "yellow"},
        {cx: "Autumn", cy: "Autumn", r: 15, color: "purple"},
        {cx: "Winter", cy: "Spring", r: 20, color: "green"}
      ];


      function draw5( yAxisData, selectString, colors )
      {

        var w = 400;
        var h = 400;
        var marginLeft = 10;
        var marginRight = w - 40;
        var marginTop = 20;
        var marginBottom = h - 20;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            .attr("transform", "translate(30,10)");

        // Setup y axis : Range is the length of the line
        // [0, 10] generates integer tick markers
        var yAxisScale = d3.scale.linear().domain([yAxisData[0], (yAxisData.length-1)]).range([marginBottom-20, marginTop]);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

      };

      function draw6( xAxisData, yAxisData, selectString, colors )
      {

        var w = 400;
        var h = 400;
        var marginLeft = 10;
        var marginRight = w - 40;
        var marginTop = 20;
        var marginBottom = h - 20;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            .attr("transform", "translate(30,10)");

        // Setup y axis : Range is the length of the line
        // [0, 10] generates integer tick markers
        var yAxisScale = d3.scale.linear().domain([yAxisData[0], (yAxisData.length-1)]).range([marginBottom-20, marginTop]);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

        // Setup x axis : Range is the length of the line
        // [0, 10] generates integer tick markers
        var xAxisScale = d3.scale.linear().domain([xAxisData[0], (xAxisData.length-1)]).range([0, marginRight]);
        var xAxis = d3.svg.axis().scale(xAxisScale).orient("bottom");
        var xAxisGroup = innerCanvas.append("g")
            .attr("transform", "translate(0,354)")
          .call(xAxis);

      };

      function draw10( dataSet, xAxisData, yAxisData, selectString, colors )
      {

        var w = 400;
        var h = 400;
        var marginLeft = 10;
        var marginRight = w - 40;
        var marginTop = 20;
        var marginBottom = h - 20;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            .attr("transform", "translate(30,10)");


        // Setup y axis : Range is the length of the line
        // [0, 10] generates integer tick markers
        var yAxisScale = d3.scale.linear().domain([yAxisData[0], (yAxisData.length-1)]).range([marginBottom-20, marginTop]);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

        // Setup x axis : Range is the length of the line
        // [0, 10] generates integer tick markers
        var xAxisScale = d3.scale.linear().domain([xAxisData[0], (xAxisData.length-1)]).range([0, marginRight]);
        var xAxis = d3.svg.axis().scale(xAxisScale).orient("bottom");
        var xAxisGroup = innerCanvas.append("g")
            .attr("transform", "translate(0,354)")
          .call(xAxis);

        // Plot points...
        innerCanvas.selectAll("scatter_points")
            .data(dataSet).enter().append("svg:circle")
            .attr("cx", function(d, i) { return xAxisScale(d.cx); })
            .attr("cy", function(d, i) { return yAxisScale(d.cy); })
            .attr("r", function(d, i) { return d.r; })
            .attr("fill", function(d, i) { return d.color; });

      };

      function draw20( dataSet, xAxisData, yAxisData, selectString, colors )
      {

        var w = 400;
        var h = 400;
        var marginLeft = 10;
        var marginRight = w - 10;
        var marginTop = 20;
        var marginBottom = h - 20;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            .attr("transform", "translate(30,10)");


        // Setup y axis : Range is the length of the line
        // [0, 10] generates integer tick markers
        var yAxisScale = d3.scale.linear().domain([yAxisData[0], (yAxisData.length-1)]).range([marginBottom-20, marginTop]);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

        // Setup x axis : Range is the length of the line
        // NOTE: A value of "1" for rangeRoundBands allows points
        // to be centered over the ordinal text markers
        var xAxisScale = d3.scale.ordinal().domain(xAxisData).rangeRoundBands([0, marginRight], 1);
        var xAxis = d3.svg.axis().scale(xAxisScale).orient("bottom");
        var xAxisGroup = innerCanvas.append("g")
            .attr("transform", "translate(0,354)")
          .call(xAxis);

        // Plot points...
        innerCanvas.selectAll("scatter_points")
            .data(dataSet).enter().append("svg:circle")
            .attr("cx", function(d, i) { return xAxisScale(d.cx); })
            .attr("cy", function(d, i) { return yAxisScale(d.cy); })
            .attr("r", function(d, i) { return d.r; })
            .attr("fill", function(d, i) { return d.color; });

      };


      function draw30( dataSet, xAxisData, yAxisData, selectString, colors )
      {

        var w = 400;
        var h = 400;
        var marginLeft = 10;
        var marginRight = w - 10;
        var marginTop = 20;
        var marginBottom = h - 20;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            .attr("transform", "translate(60,10)");


        // Setup y axis : Range is the length of the line
        // NOTE: A value of "1" for rangeRoundBands allows points
        // to be centered over the ordinal text markers
        var yAxisScale = d3.scale.ordinal().domain(yAxisData).rangeRoundBands([marginBottom-20, marginTop], 1);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

        // Setup x axis : Range is the length of the line
        // [0, 10] generates integer tick markers
        var xAxisScale = d3.scale.linear().domain([xAxisData[0], (xAxisData.length-1)]).range([0, marginRight-70]);
        var xAxis = d3.svg.axis().scale(xAxisScale).orient("bottom");
        //var xAxisGroup = innerCanvas.call(xAxis);
        var xAxisGroup = innerCanvas.append("g")
            .attr("transform", "translate(0,354)")
          .call(xAxis);

        // Plot points...
        innerCanvas.selectAll("scatter_points")
            .data(dataSet).enter().append("svg:circle")
            .attr("cx", function(d, i) { return xAxisScale(d.cx); })
            .attr("cy", function(d, i) { return yAxisScale(d.cy); })
            .attr("r", function(d, i) { return d.r; })
            .attr("fill", function(d, i) { return d.color; });

      };

      function draw40( dataSet, xAxisData, yAxisData, selectString, colors )
      {

        var w = 500;
        var h = w - 100;
        var marginLeft = 10;
        var marginRight = w - 50;
        var marginTop = 20;
        var marginBottom = h - 20;

        var xAxisLength = .8 * w;
        var yAxisLength = .8 * h;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            //.attr("transform", "translate(60,10)");
            .attr("transform", function(d){
              return "translate(" + 60 + "," + 10 + ")";
            });


        // Setup y axis : Range is the length of the line
        // NOTE: A value of "1" for rangeRoundBands allows points
        // to be centered over the ordinal text markers
        var yAxisScale = d3.scale.ordinal().domain(yAxisData).rangeRoundBands([marginBottom-20, marginTop], 1);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

        // Setup x axis : Range is the length of the line
        // NOTE: A value of "1" for rangeRoundBands allows points
        // to be centered over the ordinal text markers
        var xAxisScale = d3.scale.ordinal().domain(xAxisData).rangeRoundBands([0, marginRight-100], 1);
        var xAxis = d3.svg.axis().scale(xAxisScale).orient("bottom");
        var xAxisGroup = innerCanvas.append("g")
            .attr("transform", "translate(0,354)")
          .call(xAxis);


        // Plot points...
        innerCanvas.selectAll("scatter_points")
            .data(dataSet).enter().append("svg:circle")
            .attr("cx", function(d, i) { return xAxisScale(d.cx); })
            .attr("cy", function(d, i) { return yAxisScale(d.cy); })
            .attr("r", function(d, i) { return d.r; })
            .attr("fill", function(d, i) { return d.color; });

      };

      function draw60( dataSet, xAxisData, yAxisData, selectString, colors )
      {

        var w = 500;
        var h = w - 100;
        var marginLeft = 10;
        var marginRight = w - 50;
        var marginTop = 20;
        var marginBottom = h - 20;

        var xAxisLength = .8 * w;
        var yAxisLength = .8 * h;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            //.attr("transform", "translate(60,10)");
            .attr("transform", function(d){
              return "translate(" + 60 + "," + 10 + ")";
            });


        // Setup y axis : Range is the length of the line
        // NOTE: A value of "1" for rangeRoundBands allows points
        // to be centered over the ordinal text markers
        var yAxisScale = d3.scale.ordinal().domain(yAxisData).rangeRoundBands([marginBottom-20, marginTop], 1);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

        // Setup x axis : Range is the length of the line
        // NOTE: A value of "1" for rangeRoundBands allows points
        // to be centered over the ordinal text markers
        var xAxisScale = d3.scale.ordinal().domain(xAxisData).rangeRoundBands([0, marginRight-100], 1);
        var xAxis = d3.svg.axis().scale(xAxisScale).orient("bottom");
        var xAxisGroup = innerCanvas.append("g")
            .attr("transform", "translate(0,354)")
          .call(xAxis);

        // Create horizontal paths...
        var horizontalGridLines = innerCanvas.selectAll(".horizontalGridLine")
            .data(yAxisData)
          .enter().append("path")
            .attr("class", "horizontalGridLine")
            .attr("d", function(d, i) {
              var p1 = {
                x: 0,
                y: yAxisScale(d)
              };
              var p2 = {
                x: marginRight - 100,
                y: yAxisScale(d)
              };
              var pts = [];
              pts.push(p1);
              pts.push(p2);
              return lineFunction(pts);
            })
            .attr("stroke", "gray")
            .style("stroke-dasharray", ("3, 3")) // 3 pixels on; 3 pixels off;
            .attr("stroke-width", 1)
            .attr("fill", "gray");

        // Create vertical paths...
        var vverticalGridLines = innerCanvas.selectAll(".verticalGridLine")
            .data(xAxisData)
          .enter().append("path")
            .attr("class", "verticalGridLine")
            .attr("d", function(d, i) {
              var p1 = {
                x: xAxisScale(d),
                y: marginTop
              };
              var p2 = {
                x: xAxisScale(d),
                y: marginBottom-20
              };
              var pts = [];
              pts.push(p1);
              pts.push(p2);
              return lineFunction(pts);
            })
            .attr("stroke", "gray")
            .style("stroke-dasharray", ("3, 3")) // 3 pixels on; 3 pixels off;
            .attr("stroke-width", 1)
            .attr("fill", "gray");

        // Plot points...
        innerCanvas.selectAll("scatter_points")
            .data(dataSet)
          .enter().append("svg:circle")
            .attr("cx", function(d, i) { return xAxisScale(d.cx); })
            .attr("cy", function(d, i) { return yAxisScale(d.cy); })
            .attr("r", function(d, i) { return d.r; })
            .attr("fill", function(d, i) { return d.color; });

      };

      function draw70( yAxisData, selectString, colors )
      {

        var w = 500;
        var h = w - 100;
        var marginLeft = 10;
        var marginRight = w - 50;
        var marginTop = 20;
        var marginBottom = h - 20;

        var xAxisLength = .8 * w;
        var yAxisLength = .8 * h;

        var lineData = [];
        var pt1 = {x: 0, y: 0};
        lineData.push(pt1);
        var pt2 = {x: 0, y: h};
        lineData.push(pt2);
        var pt3 = {x: w, y: h};
        lineData.push(pt3);
        var pt4 = {x: w, y: 0};
        lineData.push(pt4);
        var pt5 = {x: 0, y: 0};
        lineData.push(pt5);

        var lineFunction = d3.svg.line()
          .x(function(d) { return d.x; })
          .y(function(d) { return d.y; })
          .interpolate("linear");

        var canvas = d3.select(selectString).append("svg")
            .attr("height", h)
            .attr("width", w)

        // Put a border around the canvas for visual effects
        canvas.append("path")
            .attr("d", lineFunction(lineData))
            .attr("stroke", "blue")
            .attr("stroke-width", 4)
            .attr("fill", "none");

        // InnerCanvas is the offset canvas, that is offset away
        // from the margins, using the transform/translate for the
        // entire canvas, instead of just for individual axis.
        var innerCanvas = canvas.append("g")
            //.attr("transform", "translate(60,10)");
            .attr("transform", function(d){
              return "translate(" + 60 + "," + 10 + ")";
            });


        // Setup y axis : Range is the length of the line
        // NOTE: A value of "1" for rangeRoundBands allows points
        // to be centered over the ordinal text markers
        var yAxisScale = d3.scale.ordinal().domain(yAxisData).rangeRoundBands([marginBottom-20, marginTop], 1);
        var yAxis = d3.svg.axis().scale(yAxisScale).orient("left");
        var yAxisGroup = innerCanvas.call(yAxis);

        // Rotate the Axis

      };



    </script>

    <style type="text/css">
      svg {
        font: 10px sans-serif;
        display: block;
      }
    </style>



    <STYLE type="text/css">

      /* unvisited link */
      a:link {
        color: "blue";
        text-decoration: none;
      }

      /* visited link */
      a:visited {
        color: "darkblue";
        text-decoration: none;
      }

      /* mouse over link */
      a:hover {
        color: "maroon";
        text-decoration: none;
      }

      /* selected link */
      a:active {
        color: "maroon";
        text-decoration: none;
      }

      div.div_Header {
        width: 100%;
        border:2px solid White;
        border-radius:7px;
        background: WhiteSmoke;
        font: bold 14px Arial;
        font-family:Arial, Helvetica, sans-serif;
        color:WhiteSmoke;
        text-align:center;
      }
      h1.h1_BodyHeader {
        text-align:center;
        font: bold 1.5em Arial;
      }
      h2.h2_LeftMenuHeader {
        text-align:center;
        font: bold 1.2em Arial;
      }
      h3.h3_Body {
        text-align:center;
      }
      p.p_Red {
        color:Red;
      }
      table.table_Header {
        width: 100%;
        text-align:center;
      }
      td.td_HeaderLeft {
        text-align:left;
      }
      td.td_HeaderRight {
        text-align:right;
      }
      div.div_Menu {
        width: 100%;
        border:2px solid White;
        border-radius:7px;
        background: MidnightBlue;
        font: bold 14px Arial;
        font-family:Arial, Helvetica, sans-serif;
        color:White;
        text-align:center;
      }
      p.p_Left {
        font-family:Arial, Helvetica, sans-serif;
        color:Black;
        text-align:left;
        padding-left: 5px;
        font: normal 14px Arial;
      }
      table.table_Body {
        width: 100%;
        height: 100%;
        padding: 0;
      }
      td.td_BodyLeft {
        width: 250px;
        height: 100%;
        padding: 0;
      }
      td.td_BodyRight {
        vertical-align: top;
      }
      li.li_LeftMenu {
        text-align:left;
        font: normal 14px Arial;
      }
      a.a_LeftMenuNoUnderLine {
        text-decoration:  none;
      }
      div.div_Body {
        height: 100%;
        width: 100%;
        position: relative;
        border:2px solid White;
        border-radius:7px;
        background: WhiteSmoke;
        font: bold 14px Arial;
        font-family:Arial, Helvetica, sans-serif;
        color:Black;
        text-align:center;
      }
      div.div_Footer {
        width: 100%;
        border:2px solid White;
        border-radius:7px;
        background: MidnightBlue;
        font: bold 14px Arial;
        font-family:Arial, Helvetica, sans-serif;
        color:White;
        text-align:center;
      }
      p.p_if4itMessage {
        width: 100%;
        background: White;
        font: bold .75em Arial;
        font-family:Arial, Helvetica, sans-serif;
        color:GoldenRod;
        text-align:center;
      }
      .menuButton{
        background-color: MidnightBlue;
      }
      .menuButton li{
        height: 100%;
        list-style: none;
        display: inline;
      }
      .menuButton li a{
        height: 100%;
        padding: 3px 0.5em;
        text-decoration: none;
        color: White;
        background-color: MidnightBlue;
        border: 2px solid MidnightBlue;
      }
      .menuButton li a:hover{
        height: 100%;
        color: MidnightBlue;
        background-color: White;
        border-style: outset;
        background-color: White;
      }
      .menuButton li a:active{
        height: 100%;
        border-style: inset;
        color: MidnightBlue;
        background-color: White;
      }
      .menuButton li a.disabled{
        height: 100%;
        padding: 3px 0.5em;
        text-decoration: none;
        color: MidnightBlue;
        background-color: White;
        border: 2px solid MidnightBlue;
        border-style: inset;
        border-color: White;
      }
    </STYLE>

    <STYLE type="text/css">
      div.div_RootBody {
        position: relative;
        border:2px solid White;
        border-radius:7px;
        background: WhiteSmoke;
        font: normal 14px Arial;
        font-family:Arial, Helvetica, sans-serif;
        color:Black;
        padding: 0px 1em;
        text-align:left;
      }
    </STYLE>
    <!--[if gt IE 7]>
      <style>body { overflow-y:scroll; } </style>
    <![endif]-->
  </head>

  <body>

      <div>
        <h1 style="text-align:center; font: bold 1.7em Arial;"><a href="http://www.if4it.com">The International Foundation for Information Technology (IF4IT)</a></h1>
        </div>

      <div class="div_Menu">
        <ul class="menuButton">
          <li><a href="http://www.if4it.com">HOME</a></li>
          <li><a href="http://www.if4it.com/resources.html">RESOURCES</a></li>
          <li><a href="http://www.if4it.com">PRODUCTS</a></li>
          <li><a href="http://www.if4it.com">SERVICES</a></li>
          <li><a href="http://www.if4it.com">SUPPORT</a></li>
          <li><a href="http://www.if4it.com">HELP</a></li>
        </ul>
      </div>
      <table class="table_Body">
        <tr>
          <td class="td_BodyLeft">
            <div class="div_Body">
              <h2 class="h2_LeftMenuHeader">Sample Left Menu Links</h2>
              <ul>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com">IF4IT Home</a></li>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com/disciplines.html">IF4IT Disciplines</a></li>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com/glossary.html">IF4IT Glossary</a></li>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com/taxonomy.html">IF4IT Taxonomies</a></li>
              </ul>
              <p class="p_Left">This is dummy paragraph 1 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 2 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 3 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 4 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 5 text that would go in this section of the page.</p>
              <ul>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com">IF4IT Home</a></li>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com/disciplines.html">IF4IT Disciplines</a></li>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com/glossary.html">IF4IT Glossary</a></li>
                <li class="li_LeftMenu"><a class="a_LeftMenuNoUnderLine" href="http://www.if4it.com/taxonomy.html">IF4IT Taxonomies</a></li>
              </ul>
              <p class="p_Left">This is dummy paragraph 1 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 2 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 3 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 4 text that would go in this section of the page.</p>
              <p class="p_Left">This is dummy paragraph 5 text that would go in this section of the page.</p>
            </div>
          </td>
          <td class="td_BodyRight">
            <div class="div_RootBody">
              <h1 style="text-align:center; font: bold 1.5em Arial;">D3 Scatterplots (a.k.a. Scatter Plots)</h1>
            </div>

            <div class="div_RootBody">
              <h3>All of following scatterplots lead to this one...</h3>
              <p>The purpose of this tutorial is to walk the reader through the building of a complex scatterplot like this one, in small understandable pieces.  Note that each of the following examples is isolated in the HTML with div element and in Javascript with a seperate and corresponding function call.</p>
              <p>To learn from this reference tutorial, simply open up the source to this page and explore the code for each of the following examples, as they lead you to this final resulting scatterplot.</p>
              <div id="chart0"></div>
            </div>

            <div class="div_RootBody">
              <h3>Let's start with an integer based linear Y Axis:</h3>
              <p>The axis is generated from the numeric array [0,10], which has 11 elements.</p>
              <p>Notice that the axis is oriented left, which flips it vertically and to the left.</p>
              <div id="chart5"></div>
            </div>

            <div class="div_RootBody">
              <h3>We can now add an integer based linear X Axis:</h3>
              <p>The axis is also generated from the numeric array [0,10], which has 11 elements.</p>
              <div id="chart6"></div>
            </div>

            <div class="div_RootBody">
              <h3>We can now add some data points:</h3>
              <p>Numeric integer ranges are used to set up each axis.  Notice how the first and last integer values align with the start and end of the axis lines.</p>
              <div id="chart10"></div>
            </div>

            <div class="div_RootBody">
              <h3>X axis is ordinal scale &amp Y axis is numeric scale:</h3>
              <p>Notice that the ordinal scale's first value does not start at the join point for the two lines that make up the axes.</p>
              <div id="chart20"></div>
            </div>

            <div class="div_RootBody">
              <h3>X axis is numeric scale &amp Y axis is ordinal scale:</h3>
              <p>Notice the right shift of the Y axis to accommodate label text strings.</p>
              <div id="chart30"></div>
            </div>

            <div class="div_RootBody">
              <h3>X axis is ordinal scale &amp Y axis is ordinal scale:</h3>
              <p>Notice the right shift of the Y axis to accommodate label text strings.</p>
              <div id="chart40"></div>
            </div>

            <div class="div_RootBody">
              <h3>X axis is ordinal scale &amp Y axis is ordinal scale (utilizing Integers as strings):</h3>
              <p>Notice that the "0" value, which is a character and not an integer, doesn't line up with the vertical and horizonal line join point.</p>
              <div id="chart50"></div>
            </div>

            <div class="div_RootBody">
              <h3>Let's use paths to throw in some grid lines:</h3>
              <div id="chart60"></div>
            </div>

            <div class="div_RootBody">
              <h3>Let's transition a single vertical axis to a horizontal position:</h3>
              <div id="chart70"></div>
            </div>

          </td>
        </tr>
      </table>

      <div class="div_Footer"><p><p>This is the IF4IT Footer Message for this web page.</p></p></div>

      <div><p class="p_if4itMessage">This Site Has Been Created and Published by The International Foundation for Information Technology (IF4IT).</p></div>

      <script type="text/javascript">
        draw60( dataSet3, numericAxis, seasonsArray, "#chart0", "colorScale20" );
        draw5( numericAxis, "#chart5", "colorScale20" );
        draw6( numericAxis, numericAxis, "#chart6", "colorScale20" );
        draw10( dataSet1, numericAxis, numericAxis, "#chart10", "colorScale20" );
        draw20( dataSet2, seasonsArray, numericAxis, "#chart20", "colorScale20" );
        draw30( dataSet3, numericAxis, seasonsArray, "#chart30", "colorScale20" );
        draw40( dataSet4, seasonsArray, seasonsArray, "#chart40", "colorScale20" );
        draw40( dataSet1, numericAxis, numericAxis, "#chart50", "colorScale20" );
        draw60( dataSet3, numericAxis, seasonsArray, "#chart60", "colorScale20" );
        draw70( seasonsArray, "#chart70", "colorScale20" );
      </script>

    </body>

</html>

<html>
  <head>
    <title>Vega Scaffold</title>
    <script src="http://vega.github.io/vega-editor/vendor/d3.min.js"></script>
    <script src="http://vega.github.io/vega-editor/vendor/d3.geo.projection.min.js"></script>
    <script src="http://vega.github.io/vega-editor/vendor/topojson.js"></script>
    <script src="http://vega.github.io/vega/vega.min.js"></script>
  </head>
  <body>
    <div id="vis"></div>
  </body>
<script type="text/javascript">

  vg.parse.spec("grouped_bar.json", function(chart) { 
	  view = chart({el:"#vis"});
	  view.update();
	  var tableData = [
        {"category":"A", "position":"a", "value":0.1},
        {"category":"A", "position":"b", "value":0.6},
        {"category":"A", "position":"c", "value":0.9},
        {"category":"A", "position":"d", "value":0.4},
        {"category":"B", "position":"a", "value":0.7},
        {"category":"B", "position":"b", "value":0.2},
        {"category":"B", "position":"c", "value":1.1},
        {"category":"B", "position":"d", "value":0.8},
        {"category":"C", "position":"a", "value":0.6},
        {"category":"C", "position":"b", "value":0.1},
        {"category":"C", "position":"c", "value":0.2},
        {"category":"C", "position":"d", "value":0.7}
      ];
      view.data('table')
        .remove(function(d) {return true;});
			view.update();
			view.data('table')
				.insert(tableData);
			view.update();
	});

</script>
</html><!DOCTYPE html>
<html>
  <head>
    <title>Banská Bystrica (region 2013)</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootswatch/3.2.0/cerulean/bootstrap.min.css">
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script src="d3.tip.js"></script>
    
    <style type="text/css">
      .leaflet-tile-pane {
		opacity: .4
      }
      .leaflet-container {
        background-color: #fff;
      }
      html, body{
		  width: 100%;
		  height: 100%;
		  /*margin: 0;
		  padding: 0;*/
		}
      #map {
		  width: 100%;
		  height: 70%;
	  }
	  circle {
        /*fill: #040;
        stroke: #040;*/
        cursor: pointer;
        fill-opacity: 0.8;
        stroke-opacity: 0.75;
    }
    
    svg {
      width: 100000px;
      height: 100000px;
    }
	  /* this is because of Bootstrap - very important! */
		svg:not(:root) {
			overflow: visible;
		}
		
    /* D3 tips */  
    .d3-tip {
      line-height: 1;
      font-weight: bold;
      padding: 12px;
      background: rgba(0, 0, 0, 0.8);
      color: #fff;
      border-radius: 2px;
    }
    /* Creates a small triangle extender for the tooltip */
    /*.d3-tip:after {
      box-sizing: border-box;
      display: inline;
      font-size: 10px;
      width: 100%;
      line-height: 1;
      color: rgba(0, 0, 0, 0.8);
      content: "\25BC";
      position: absolute;
      text-align: center;
    }*/
    /* Style northward tooltips differently */
    .d3-tip.n:after {
      margin: -1px 0 0 0;
      top: 100%;
      left: 0;
    }
    .stronger {
      color: yellow;
    }
    /*overwrite bootstrap*/
        .navbar {
          margin-bottom: 0;
        }
		
		
    </style>
  </head>
  <body>
    <div class="navbar navbar-default">
        <div class="navbar-header">
          <a class="navbar-brand">Banská Bystrica region, 2013</a>
        </div>
    </div>
    <div style="position:fixed;top:52px;z-index:1000;">
      <div class="alert alert-info" >Results by electoral districts.</div>
    </div>
      
  
    <div id="map"></div>
    <!--<div>Size: <div class="btn-group btn-group-xs" data-toggle="buttons" id="buttons-size"></div></div>
    <div>Plus: <div class="btn-group btn-group-xs" data-toggle="buttons" id="buttons-plus"></div></div>
    <div>Minus: <div class="btn-group btn-group-xs" data-toggle="buttons" id="buttons-minus"></div></div>-->
    
    <div class="form-group">
      <label for="select-size-wrap" class="col-sm-1 control-label">Size</label>
      <div id="select-size-wrap" class="col-sm-11">
        <select id="select-size" class="form-control switch">
        </select>
      </div>
    </div>
    <div class="form-group">
      <label for="select-plus-wrap" class="col-sm-1 control-label">Green</label>
      <div id="select-plus-wrap" class="col-sm-11">
        <select id="select-plus" class="form-control switch">
        </select>
      </div>
    </div>
    <div class="form-group">
      <label for="select-minus-wrap" class="col-sm-1 control-label">Red</label>
      <div id="select-minus-wrap" class="col-sm-11">
        <select id="select-minus" class="form-control switch">
        </select>
      </div>
    </div>
      
      
<script type="text/javascript">
  //leaflet + d3:
  // http://bost.ocks.org/mike/leaflet/
  // http://stackoverflow.com/questions/21216347/achieving-animated-zoom-with-d3-and-leaflet

  //defaults
  var vars = {population: 'voted2', ns: ['Maňka2','Kotleba2'], name: 'name'};

  // Create the map
  var map = L.map('map', {'zoomControl':false}).setView([48.6500,19.1499], 11);
  // add an OpenStreetMap tile layer
  // also see http://wiki.openstreetmap.org/wiki/Tiles
  L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
    attribution: 'CC-BY Michal Škop | &copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);
  L.control.zoom({"position":"topright"}).addTo(map);
  
  //svg
  var svg = d3.select(map.getPanes().overlayPane).append("svg").attr("class", "towns");
  
  //scale
  var radiusScale = d3.scale.sqrt().domain([0, 25000]).range([0, 50]);
  
  //keys (columns) of numerical values in data
  var keys = [];
  
  var color = colorscale([0,0.5,1],["red", "yellow", "green"]);
  
  /* Initialize tooltip */
  var tip = changetooltip();	
  /*var tip = d3.tip().attr('class', 'd3-tip').html(function(d) { 
    return '<span class="stronger">' + d['name'] + "</span><br>";
  });*/
  
	/* Invoke the tip in the context of your visualization */
    svg.call(tip);
	
	// Add tooltip div
    var div = d3.select("body").append("div")
    .attr("class", "tooltip")
    .style("opacity", 1e-6);
  
  //data
  d3.csv('data2.csv', function(data) {
    //keys
    //does not work for IE<=8:
    var keys0 = Object.keys(data[0]);
    //remove lat, lon and non numeric

    for (var k in keys0) {
      key = keys0[k];
      if (!((['id','lat','lon'].indexOf(key) > -1) || isNaN(parseFloat(data[1][key])))) {
        keys.push(key);
      }
    }
    
    //add buttons
    /*addButtons(keys,'size','info');
    addButtons(keys,'plus','success');
    addButtons(keys,'minus','danger');*/
    addSelects(keys,'size',0);
    addSelects(keys,'plus',1);
    addSelects(keys,'minus',2);
    $(".switch").on("change",function() {
      changeitems(name2id(this.id),name2id($(this).children(":selected").attr("id")));
      //changeitems(name2id(this.name),name2id(this.id))
    });
    
   
   //mapping
   nodes = data
     .map(function(d) {
       mpoint = projectPoint(d.lat,d.lon);
       
       return {
         x: mpoint.x,
         y: mpoint.y,
         r: radiusScale(d[vars['population']]),
         name: d[vars['name']],
         value: d   //including whole d
       };
     });
    
    //adding circles
    var circle = svg.selectAll("svg")
      .data(nodes)
      .enter().append("svg:svg")
        .append("svg:circle")
        .attr("cx", function (d) {return d.x})
        .attr("cy", function (d) {return d.y})
	    .attr("r", function (d) {return d.r})
	    .attr("fill", function(d) {
          one = parseFloat(d.value[vars['ns'][0]]);
          two = parseFloat(d.value[vars['ns'][1]]);
          return color(two/(one+two));
        })
        .on("mouseover", tip.show)
	    .on("mouseout", tip.hide);
    

    
    //on zoom or map movement, http://leafletjs.com/reference.html#events
    map.on("viewreset", changeit);
    map.on("moveend", changeit);
    //map.on("move", hidepoints);   //not needed
    map.on("zoomstart", hidepoints);
    $(".towns").show(100);
    
  });

  function hidepoints() {
    $(".towns").hide();
  }

  // Use Leaflet to implement a D3 geometric transformation.
  function projectPoint(x, y) {
	  var point = map.latLngToLayerPoint(new L.LatLng(x, y));
	  return point;
  }
    
  //helper function matrix to values
  function matrixVal(s) {
      return s.split('(')[1].split(')')[0].split(',');
  } 

  // adjust points after map change (zoom, move)
  function changeit() {
  	     //Chromium/Chrome does not support well changes, so:
	     var s = $(".leaflet-map-pane").css("-webkit-transform");  //chromium, opera
	     if (typeof(s) == 'undefined')
	       var s = $(".leaflet-map-pane").css("transform");  //ff
	     var sar = matrixVal(s);	 
	  	 
	  	 //if towns in svg: (not used if it is div)
	  	 $(".towns").css('left',-1*parseFloat(sar[4]));
	     $(".towns").css('top',-1*parseFloat(sar[5]));
	  	 
	     d3.selectAll("circle").each(function(d,i) { 
	       //set correct x,y
	       mpoint = projectPoint(d.value.lat,d.value.lon);
	       $(this)
	         .attr("r",
	           radiusScale(d.value[vars['population']]) * Math.pow(map.getZoom(),3) / 729	//power of 3 to show the results better in small scale
	          )
	          /*.attr("stroke-width",
	            Math.abs(radiusScale(d.value.population.p9)-radiusScale(d.value.population.p6)) * Math.pow(map.getZoom(),3) / 729	//power of 3 to show the results better in small scale
	          )*/
	          .attr("cx", mpoint.x)
	          .attr("cy", mpoint.y);          
	          
	          //Reposition the SVG to cover the features.
	          //note: if towns is div, next lines are needed; if it is svg, it is different:
	          $(this).attr('transform',"translate(" + sar[4] + "," + sar[5] + ")");
	          /*$(this).parent().css('left',-1*parseFloat(sar[4]));
	          $(this).parent().css('top',-1*parseFloat(sar[5]));*/
	          

	        });
	    $(".towns").show(300);
      
    }

  //
  function changeitems(change, id) {
    //alert(change);
    //alert(id);
    if (change == 'size') {
      vars['population'] = keys[id];
      changesize();
    }
    if (change == 'plus') {
      vars['ns'][1] = keys[id];
      changecolor();
    }
    if (change == 'minus') {
      vars['ns'][0] = keys[id];
      changecolor();
    }
  }
  
  function changecolor() {
    domain = [0,0.5,1];
    range = ["red", "yellow", "green"];
    color = colorscale(domain,range);
    d3.selectAll("circle").each(function(data,i) {
      
      d3.select(this)
        .attr("stroke-width", 30)
        .attr("fill", function(d) {
          one = parseFloat(d.value[vars['ns'][0]]);
          two = parseFloat(d.value[vars['ns'][1]]);
          return color(two/(one+two));
        })
    });
  }
  
  function changesize() {
    d3.selectAll("circle").each(function(data,i) {
      d3.select(this)
        .transition()            
		.delay(0)            
		.duration(300)
        .attr("r",
	       radiusScale(data.value[vars['population']]) * Math.pow(map.getZoom(),3) / 729	//power of 3 to show the results better in small scale
	    )
    });
  }
  
  function changetooltip() {
    tip = d3.tip().attr('class', 'd3-tip').html(function(d) { 
      html = '<span class="stronger">' + d.value[vars['name']] + "</span><br>";
      html += vars['population'] + ': ' + d.value[vars['population']] + '<br>';
      html += vars['ns'][1] + ': ' + d.value[vars['ns'][1]] + '<br>';
      html += vars['ns'][0] + ': ' + d.value[vars['ns'][0]] + '<br>';
      return html;
    });
    return tip;
  }
  
  //set color scale
  function colorscale(domain,range) {
    return d3.scale.linear()
            .domain(domain)
            .range(range);
  }

  //option-a-1 => a-1
  function name2id(n) {
    ar = n.split("-");
    ar.splice(0,1);
    return ar.join('-');
  }
  
  //add buttons
  /*function addButtons(keys,id,btype) {
    for (k in keys) {
      key = keys[k];
      $("#buttons-"+id).append('<label class="btn btn-'+btype+' "><input type="radio" name="options-'+id+'" id="option-'+k+'" class="switch">'+key+'</label>');
    }
    $('.btn').button();
    
  }*/
  function addSelects(keys,id,selected) {
    for (k in keys) {
      key = keys[k];
      if (selected == k) sel = 'selected'; else sel = '';
      $("#select-"+id).append('<option id="option-'+k+'" '+sel+' class="switch">'+key+'</option>');
    }
  }
  
</script>

  </body>
</html>
<html>
<head>
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
</head>
<body>
	<svg width="600px" height = "400px">
		<circle cx="100px" cy="100px" r="50px" stroke-width="3px" stroke="black" fill="none"></circle>
		<circle cx="201px" cy="100px" r="50px" stroke-width="3px" stroke="black" fill="none"></circle>
		<circle cx="151px" cy="187px" r="50px" stroke-width="3px" stroke="black" fill="none"></circle>
	</svg>
	<div>
		Check the console for some data
	</div>
	<script>
		d3.csv('Employment Projections cleaned.csv',function(data) {
			console.log(data);
		})
	</script>
</body>
</html><!DOCTYPE html>
<title>Render Queue</title>
<style type="text/css">
html, body { background: #f7f7f7; height: 100%; margin: 0; padding: 0; color: #b6b6b6; font-family: Ubuntu, Helvetica, sans-serif; font-size: 15px; line-height: 1.35em;}
a { color: #6be; text-decoration: none; }
#canvas { position: fixed; }
#center { position: absolute; top: 0; left: 0; margin: 40px; width: 520px; padding: 20px; background: #444; background: rgba(0,0,0,0.9); border-radius: 8px;}
h1 { margin-top:0; padding: 3px 0; font-size: 1.4em; }
h1, h3 { color: #f9f9f9; border-bottom: 1px solid #333; }
h3 { font-size: 1em; }
.yellow { color: #ea3; }
</style>
<body>
  <canvas id="canvas" width=600 height=600></canvas>
  <div id="center">
    <h1>Render Queue</h1>
    <p>
    Progressive rendering for too much data.
    </p>
    <p>
    This page has 600,000 randomly placed points with <a href="http://bl.ocks.org/3289530">HCL color space</a> interpolation. By putting the data in a queue and rendering 1,000 dots per frame, the page slowly builds up the final image. Using <a href="http://paulirish.com/2011/requestanimationframe-for-smart-animating/">requestAnimationFrame</a>, the page remains responsive during rendering.
    </p>
    <p>
    There is a pause on page load as the data is generated. This could be improved by processing the data in a queue, and running both the processing and rendering queues concurrently.
    </p>
    <p>
    Another good improvement would be a logging pattern for performance benchmarks.
    </p>
    <p>
    This pattern based on the <a href="http://bl.ocks.org/1297383">performance</a> <a href="http://bl.ocks.org/1296930">tests</a> of <a href="https://groups.google.com/forum/?fromgroups#!topic/d3-js/ZJ6pznVU5LQ">Steven Bannasch and Ger Hobbelt</a> and polyline rendering from <a href="http://bl.ocks.org/d/3290392/">Nutrient parallel coordinates</a>.
    </p>
    <p>
    <em>Think you can do better?</em>
    </p>
    <p>
    Render Queue is <a href="render-queue.js">only 70 lines long</a> and licensed under the WTFPL.<br/>
    So do it.
    </p>
    <h1>API Reference</h1>
    <h3></em>renderQueue(function)</h3>
    <p>
      Return a renderQueue by passing in a <em>function which renders one data point</em>.
    </p>
    <h3>queue(data)</h3>
    <p>
      Populate the queue with an array of data and begin rendering.
    </p>
    <h3>queue.clear(function)</h3>
    <p>
      Provide a function which clears the canvas. This is called when new data is passed in.
    </p>
    <h3>queue.add(data)</h3>
    <p>
      Add an array of data to the queue and render it.
    </p>
    <h3>queue.invalidate()</h3>
    <p>
      Invalidate the queue and stop rendering.
    </p>
    <h3>queue.rate(<em>num</em>)</h3>
    <p>
      Get or set the number of data entries to be rendered each frame.
    </p>
    <h3>queue.remaining()</h3>
    <p>
      Get the length of the queue. This decreases as rendering occurs.
    </p>
    <!--
    <pre>
      var draw_dot = function(p) {
        ctx.fillRect(p.x, p.y, 1,1);
      };

      var clear_canvas = function() {
        ctx.clearCanvas(0,0,w,h);
      };

      var render = renderQueue(draw_dot).clear(clear_canvas);

      var data = d3.range(50000)
        .map(function(i) {
          return {
            x: Math.random(),
            y: Math.random()
          }
        });

      render(data);
    </pre>
    -->
  <h1>License</h1>
    <small><pre>
DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE 
Version 2, December 2004 

Copyright (C) 2012 Kai Chang <kai.s.chang@@gmail.com> 

Everyone is permitted to copy and distribute verbatim or modified 
copies of this license document, and changing it is allowed as long 
as the name is changed. 

DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE 
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 

0. You just DO WHAT THE FUCK YOU WANT TO. 
    </pre></small>
  </div>
</body>
<script src="http://d3js.org/d3.v2.js"></script>
<script src="render-queue.js"></script>
<script>
var canvas = document.getElementById("canvas");
var ctx = canvas.getContext("2d");

canvas.width = document.body.clientWidth;
canvas.height = document.body.clientHeight;
ctx.globalCompositeOperation = "destination-over";

var color = d3.scale.linear()
   .domain([0, 0.5, 1])
      .range(["#ef2212", "#e7c767", "#2799df"])
      .interpolate(d3.interpolateHcl);

// set up a render queue
var render = renderQueue(dot)
  .clear(clear_canvas).rate(10);

// queue up some generated data
render(generate(600000));

function generate(n) {
  return d3.range(n).map(function(i) {
    return [
      canvas.width*Math.random(),              // x
      canvas.height*Math.random(),             // y
      color(Math.random())
    ];
  });
};

function dot(pos) {
  ctx.fillStyle = pos[2];
  ctx.beginPath();
  ctx.fillRect(pos[0]-1,pos[1]-1,2,2);
  ctx.stroke();
  ctx.fill();
};

function clear_canvas() {
  ctx.clearRect(0,0,canvas.width,canvas.height);
};

</script><!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    svg { width: 100%; height: 100%; }
  </style>
</head>

<body>
  <script>
    var margin = {top: 20, right: 10, bottom: 20, left: 10};
    var width = 960 - margin.left - margin.right;
    var height = 500 - margin.top - margin.bottom;
    var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    // Feel free to change or delete any of the code you see!
    svg.append("rect")
      .attr({x: 100, y: 10, width: width - 200, height: height - 20})
      .style({ fill: "#a72d1a"})
      .transition().duration(3000).ease("bounce")
      .style({ fill: "#5db9e3"})
    
    console.log("you are now rocking with d3", d3);
  </script>
</body>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="d3.svg.circularbrush.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    /*svg { width:100%; height: 100% }*/
    .bar{
      stroke: white;
      fill: #39837B;
      stroke-width: 0.2px;
    }

    .raxis {
      stroke: white;
      fill: none;
      stroke-width: 0.3px;
    }
    /*.coal path{*/
      /*fill: #D78BB9;*/
    /*}*/

    /*.nuclear path{*/
      /*fill: #541D3E;*/
    /*}*/

    /*.gas path{*/
      /*fill: #395E21;*/
    /*}*/

    /*.wind path{*/
      /*fill: #612232;*/
    /*}*/

    /*.hydro path{*/
      /*fill: #4AD853;*/
    /*}*/

    /*.other path{*/
      /*fill: #9ED3A1;*/
    /*}*/
  </style>
</head>

<body>
  <div id="networkVisContainer"></div>
  <script>
    var width = 900,
        height = 800,
        margin = 40;
    var svg = d3.select("#networkVisContainer").append('svg').attr('width', width).attr('height', height);
    var radialG = svg.append('g').attr('class', 'radial-bars')
        .attr('transform', 'translate(' +  width /2 + ',' + height/2 + ')');
    var angleScale = d3.scale.linear().range([0, 2* Math.PI]);
    var radiusScale = d3.scale.linear().range([0, d3.min([height, width]) /2 - margin]);
    var xScale = function(el, genVal){
      var r = radiusScale(genVal);
      var x = Math.sin(angleScale(el))
      return x * r;
    };
    var yScale = function(el, genVal){
      return radiusScale(genVal) * Math.cos(angleScale(el));
    };
    var powerSources = ["coal", "nuclear", "gas", "wind",  "hydro","other"];
    var colors = ["#D78BB9", "#541D3E", "#395E21", "#612232", "#4AD853", "#9ED3A1"];
    var colorScale = d3.scale.ordinal().domain(d3.range(colors.length)).range(colors)
    var stack = d3.layout.stack().values(function(d) { return d.values; });

    /**
     * to always keep 00hr at the top, have to rotate the set of bars by x radians
     * @param startingHour {Number} x = startingHour/24 * Math.PI * 2
     */
    var displacementAngle = function(startingHour){
      return startingHour/24 * Math.PI * 2
    };

    var drawBars = function(bardata){
      var startingHour = bardata[0].timestamp.getHours();
      var arc = d3.svg.arc().innerRadius(0)
              .outerRadius(function(d){return radiusScale(d.totalGen)})
              .startAngle(function(d, i){return displacementAngle(startingHour) + angleScale(i)})
              .endAngle(function(d, i){return displacementAngle(startingHour) + angleScale(i + 1)});
      radialG.selectAll('path').data(bardata).enter().append('path').attr('d', arc).attr('class', 'bar');
    };

    var drawBarLayer = function(layerData){
      var startingHour = layerData[Object.keys(layerData)[0]].values[0].timestamp.getHours();
      console.log(startingHour)
      var arc = d3.svg.arc().startAngle(function(d, i){return displacementAngle(startingHour) + angleScale(i)})
              .endAngle(function(d, i){return displacementAngle(startingHour) + angleScale(i + 1)})
              .innerRadius(function(d){return radiusScale(d.y0)})
              .outerRadius(function(d){return radiusScale(d.y + d.y0)});
      var layerG = radialG.selectAll('.layer').data(layerData).enter().append('g')
              .attr('class', function(d){return d.name + ' layer'})
              .attr('fill', function(d, i){return colorScale(i)});
      layerG.selectAll('path').data(function(d){return d.values}).enter().append('path')
              .attr('d', arc)
    };

    var drawTime = function(){
      var angles = d3.range(12).map(function(d){return d * Math.PI/6});
      var r = radiusScale.range()[1];

      var textPositions = angles.map(function(d, i) {
        return {x: r * Math.sin(d), y:  - r * Math.cos(d), time: i * 2}
      });

      var clockG = radialG.selectAll('.clock').data(textPositions)
              .enter().append('text')
              .attr('class', 'clock')
              .attr('x', function(d){return d.x}).attr('y', function(d){return d.y})
              .text(function(d){return d.time});
    }

    d3.csv('sample24hrs.csv', function(err, data){
      var keys = Object.keys(data[0]);
      var numberItems = keys.filter(function(d){return d.toLowerCase() !== "timestamp"});
      var timeFormat = d3.time.format("%Y-%m-%d %H:%M:%S");
      data.forEach(function(e, j){
        e.timestamp = timeFormat.parse(e.timestamp.trim()); //convert to date obj for ease of parsing
        e.totalGen = 0;
        numberItems.forEach(function(source){e[source] = +e[source]});
        powerSources.forEach(function(source){e.totalGen += e[source] });
      });

      var maxGen = d3.max(data, function(d){return d.totalGen});
      var sciVal = maxGen.toExponential();
      var rScaleMax = (+sciVal[0] + 1) * Math.pow(10, +sciVal.split('+')[1]);
console.log(rScaleMax)
      angleScale.domain([0, data.length]);
      radiusScale.domain([0, rScaleMax]);

      var dataLayers = powerSources.map(function(c, i){
        return {
          name: c,
          values:data.map(function(d, j) {
            return {x: j, y: d[c], timestamp: d.timestamp}
          })
        }
      });

      var stackedData = stack(dataLayers);
      stackedData.forEach(function(powerSource){
        powerSource.values.forEach(function(d){

        })
      });

      drawBarLayer(stackedData);
      drawTime();

      var rAxisVals = d3.range(5).map(function(d){return (d + 1)* rScaleMax/5});

      radialG.selectAll('circle.raxis').data(rAxisVals).enter()
              .append('circle').attr('r', function(d){return radiusScale(d)})
              .attr('cx', 0).attr('cy', 0)
              .attr('class', 'raxis')
    })
  </script>
</body>
<!DOCTYPE html>
<meta charset="utf-8">

<style>
body{
	background-color: rgb(38, 38, 38);
	margin: 0px;
}

svg{
	overflow: visible;
}

</style>

<body></body>

<script src="/1wheel/raw/67b47524ed8ed829d021/d3-3.5.5.js"></script>
<script src="/1wheel/raw/67b47524ed8ed829d021/lodash-3.8.0.js"></script>
<script src='/1wheel/raw/1b6758978dc2d52d3a37/d3-jetpack.js'></script>
<script src='/1wheel/raw/1b6758978dc2d52d3a37/d3-starterkit.js'></script>


<script>

var offset = 0,
		width  = window.innerWidth,
		height = window.innerHeight,
		s = Math.sqrt(width*height/200)

var svg = d3.select('body')
	.append('svg')
		.attr({height: height, width: width})


function drawSquares(){
	offset++

	var squares = []
	d3.range(0, width + s, s).forEach(function(x, i){
		d3.range(0, height + s, s).forEach(function(y, j){
			if ((i + j + offset) % 2) return
			squares.push({x: x, y: y, i: i, j: j, 
				isLeft: Math.random() < .5,
				isTop:  Math.random() < .5})
		})
	})

	svg.append('g').dataAppend(squares, 'rect')
			.attr('x', function(d){ return d.isLeft ? d.x : d.x + s })
			.attr('y', function(d){ return d.isTop  ? d.y : d.y + s })
			.attr({width: 0, height: 0})
			.style('fill', randColor())
		.transition()
			// .ease('bounce')
			.duration(1000)
			.delay(function(d, i){
				return d.isTop*1000 + d.isLeft*1000 + (d.isLeft && !d.isTop)*1000*2 })
			.attr({width: s, height: s})
			.attr({x: ƒ('x'), y: ƒ('y')})




	setTimeout(drawSquares, 5/4*1000)
}
drawSquares()


function randColor(){
	return 'rgb(' + [Math.random()*255, Math.random()*255, Math.random()*255].map(Math.round) + ')'
}

</script><!DOCTYPE html>
<meta charset="utf-8">
<canvas width="960" height="500"></canvas>
<script src="//d3js.org/d3.v4.0.0-alpha.4.min.js"></script>
<script>

var data = [1, 1, 2, 3, 5, 8, 13];

var canvas = document.querySelector("canvas"),
    context = canvas.getContext("2d");

var width = canvas.width,
    height = canvas.height,
    radius = Math.min(width, height) / 2;

var colors = [
  "#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd",
  "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf"
];

var arc = d3.arc()
    .outerRadius(radius - 10)
    .innerRadius(0)
    .padAngle(0.03)
    .context(context);

var pie = d3.pie();

var arcs = pie(data);

context.translate(width / 2, height / 2);

context.globalAlpha = 0.5;
arcs.forEach(function(d, i) {
  context.beginPath();
  arc(d);
  context.fillStyle = colors[i];
  context.fill();
});

context.globalAlpha = 1;
context.beginPath();
arcs.forEach(arc);
context.lineWidth = 1.5;
context.stroke();

</script>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>D3 Example</title>
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/topojson/1.6.19/topojson.js"></script>
    <script src="http://d3js.org/colorbrewer.v1.min.js"></script>
    <link href='http://fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>
    <style>
      path {
        stroke: gray;
        stroke-width: 0.1px;
      }
      text {
        font-family: 'Lato', sans-serif;
        font-size: 1.5em;

        /* This trick adds a heavy white shadow around the text. */
        text-shadow: 
          0px 0px 6px white,
          0px 0px 6px white,
          0px 0px 6px white,
          0px 0px 6px white,
          0px 0px 6px white,
          0px 0px 6px white,
          0px 0px 6px white,
          0px 0px 6px white,
          0px 0px 6px white;
      }
    </style>
  </head>
  <body>
    <script>

      var width = 960;
      var height = 500;

      var csvFile = "Unemployment_Percentage_by_Census_Tract_San_Mateo_County_2010.csv";
      var topoJSONFile = "tl_2010_06081_tract10.json";

      // Use mercator so the map matches people's expectation,
      // which has been learned from using Google Maps.
      var projection = d3.geo.mercator()
        .scale(65000)
        .translate([width / 2, height / 2])
        .center([-122.4, 37.54]);

      var path = d3.geo.path()
        .projection(projection);

      var svg = d3.select("body").append("svg")
        .attr("width", width)
        .attr("height", height);

      var choroplethG = svg.append("g");

      var legendFormat = d3.format(".1%");
      var legendSpacing = 40;
      var legendLabelOffset = 35;
      var legendBoxSize = 30;
      var legendG = svg.append("g")
        .attr("transform", "translate(50, 50)");

      var tooltip = svg.append("text").attr("class", "tooltip");
      var tooltipXOffset = 10;

      var color = d3.scale.quantile()
        .range(colorbrewer.Greys[9]);

      var zoom = d3.behavior.zoom()
        .scaleExtent([1, 20])
        .on("zoom", function (){
          choroplethG.attr("transform", "translate(" + d3.event.translate + ") scale(" + d3.event.scale + ")");
        });
      svg.call(zoom);

      function showTooltip(data){
        return function(d){
          var value = data.get(d.properties.TRACTCE10);
          tooltip
            .attr("x", d3.event.pageX + tooltipXOffset)		
            .attr("y", d3.event.pageY)
            .text(legendFormat(value) + " unemployment");
        };
      }
      function hideTooltip(){
        tooltip.text("");
      }

      fetchData(function (data){
        fetchFeatures(function (features){
          render(features, data);
        });
      });

      function fetchData(callback){
        
        // "data" will be a hash where keys are census tract codes
        // and values are unemployment values.
        var data = d3.map();

        d3.csv(csvFile, function (d){
          var id = d["Tract ID"];
          var unemployment = parseFloat(d["Unemployment Rate"].replace("%","")) / 100;
          data.set(id, unemployment);
        }, function(){ callback(data); });
      }

      function fetchFeatures(callback){
        d3.json(topoJSONFile, function(err, tracts){

          // Parse the topoJSON structure.
          var features = topojson.feature(tracts, tracts.objects.tl_2010_06081_tract10).features;

          // Exclude the census tract in the water that has no unemployment data.
          callback(features.filter(function (d){
            return d.properties.TRACTCE10 !== "990100";
          }));
        });
      }

      function render(features, data){
        color.domain(data.values());
        renderChoropleth(features, data);
        renderLegend(data);
      }

      function renderChoropleth(features, data){
        choroplethG.selectAll("path")
            .data(features)
          .enter().append("path")
            .attr("d", path)
            .attr("fill", function (d){ 
              return color(data.get(d.properties.TRACTCE10));
            })
            .on("mouseover", showTooltip(data))
            .on("mousemove", showTooltip(data))
            .on("mouseout", hideTooltip);
      }

      function renderLegend(data){
        var extent = d3.extent(data.values());
        var legendPoints = [extent[0]].concat(color.quantiles(), extent[1]);
        var legendEntries = [];
        legendPoints.forEach(function(d, i){
          if(i < legendPoints.length - 1){
            legendEntries.push([
              legendPoints[i],
              legendPoints[i + 1]
            ]);
          }
        });

        var legend = legendG.selectAll("g.legendEntry")
          .data(legendEntries)
          .enter()
          .append("g").attr("class", "legendEntry");
        
        legend
          .append("rect")
          .attr("x", 0)
          .attr("y", function(d, i) { return i * legendSpacing; })
          .attr("width", legendBoxSize)
          .attr("height", legendBoxSize)
          .style("stroke", "gray")
          .style("stroke-width", "1px")
          .attr("fill", function(d){ 
            return color(d[0]);
          }); 

        legend
          .append("text")
          .attr("x", legendLabelOffset)
          .attr("y", function(d, i) { return i * legendSpacing; })
          .attr("dy", "1em")
          .text(function(d) {
            var min = legendFormat(d[0]);
            var max = legendFormat(d[1]);
            return min + " - " + max;
          });
      }

    </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>PGA Tour Stats</title>
		<script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
		<style type="text/css">
			
			body {
				background-color: white;
				font-family: Helvetica, Arial, sans-serif;
			}

			h1 {
				font-size: 24px;
				margin: 0;
			}

			p {
				font-size: 14px;
				margin: 10px 0 0 0;
			}

			svg {
				background-color: white;
			}

			circle:hover {
				fill: green;
			}
			
			.axis path,
			.axis line {
				fill: none;
				stroke: black;
				shape-rendering: crispEdges;
			}
			
			.axis text {
				font-family: sans-serif;
				font-size: 11px;
			}

			
		</style>
	</head>
	<body>

		<h1>PGA Tour Proxmity Putting</h1>
		<img src="pga.jpg" height="64" width="48" />
		<p>Proxmity Putting Stats &ldquo;Inside 10 Feet&rdquo; putts by player. Source: <a href="http://www.pgatour.com/stats/stat.420.html">PGA Tour</a>, 2015</p>

		<script type="text/javascript">		


			var w = 700;
			var h = 600;
			var padding = [ 20, 10, 50, 50 ];  //Top, right, bottom, left



			var xScale = d3.scale.linear()
								.range([ 0, w - padding[1] - padding[3] ]);
			
			var yScale = d3.scale.linear()
								.range([ padding[0], h - padding[2] ]);



			var xAxis = d3.svg.axis()
							.scale(xScale)
							.orient("bottom")
							.ticks(15);

			var yAxis = d3.svg.axis()
							.scale(yScale)
							.orient("left")
							.ticks(10);
							// .tickFormat(function(d) {
							// 	return d + "%";
							// });



			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);



			d3.csv("PGAPutting.csv", function(data) {

				data.sort(function(a, b) {
					return d3.descending(+a.Inside5, +b.Inside5);
				});

				xScale.domain([ 0, d3.max(data, function(d) {
					return +d.Inside5;
				}) ]);

				yScale.domain([ d3.max(data, function(d) {
					return +d.Inside10;
				}),0]);

				var circles = svg.selectAll("circle")
								.data(data)
								.enter()
								.append("circle");

				circles.attr("cx", function(d) {
					return xScale(d.Inside5);
				}) 
					.attr("cy", function(d) {
						return yScale(d.Inside10);
					})
					.attr("r", 0.1)
					.attr("fill", "darkgreen")
					.append("title")
					.text(function(d) {
						return d.Player + "'s Inside 10 score is " + d.Inside10;
					});

				circles.sort(function(a, b) {
						return d3.ascending(+a.Player, +b.Player);
					})
					.transition()
					.delay(function(d, i) {
						return i * 50;
					})
					.duration(1000)
					.attr("r", 5);


				svg.append("g")
					.attr("class", "x axis")
					.attr("transform", "translate(" + padding[3] + "," + (h - padding[2]) + ")")
					.call(xAxis);

				svg.append("g")
					.attr("class", "y axis")
					.attr("transform", "translate(" + padding[3] + ",0)")
					.call(yAxis);

			});


		</script>

	</body>
</html><html>
<meta charset="utf-8">

<style>

body {
    font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
    font-size:16pt;
    position: relative;
}

p {
    font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
    font-size:16pt;
    position: relative;
    word-wrap: break-word;
}

.map {
    -webkit-transform: translate3d(0, 0, 0);
}

.tipsy {
    font-size: 4px;
    position: absolute;
    padding: 5px;
    z-index: 100000;
}

.tipsy-inner {
    background-color: #000;
    color: #FFF;
    font-size: 10pt;
    max-width: 500px;
    padding: 5px 8px 4px 8px;
    text-align: center;
}

</style>

<head>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css"/>
    <link rel="stylesheet" href="tipsy.css"/>

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script type='text/javascript' src='jquery.tipsy.js'></script>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
</head>

<body>
<center><div id="map" style="width: 90%; height: 450px;"></div></center>
<img src="https://ga-beacon.appspot.com/UA-55320412-4/chemplexity/providencetrees?pixel"/>
</body>

<script>

// Load data
d3.json('trees.json', function (data) {

// General properties
var margin = { top: 30, right: 80, bottom: 90, left: 110 }
var h = 500 - margin.top - margin.bottom
var w = 600 - margin.left - margin.right

// Map coordinates
var map = new L.map('map').setView([41.8208, -71.424], 12);

function standard_layer() {
    return L.tileLayer('http://{s}.{base}.maps.cit.api.here.com/maptile/2.1/maptile/{mapID}/terrain.day/{z}/{x}/{y}/256/png8?app_id={app_id}&app_code={app_code}',
        {
	        attribution: '',
        	subdomains: '1234',
	        mapID: 'newest',
    	    app_id: 'P1vQC2llXiUYcDliEVOM',
            app_code: '-4sbk8a-0_BtrvZj5l8KCQ',
        	base: 'aerial',
	        minZoom: 12,
        	maxZoom: 19,
        })
            .addTo(map);
    map._initPathRoot()
}

// Initialize layer
var map_layer = standard_layer();

// Initialize map layer
map._initPathRoot()

// Display map
var svgmap = d3.select("#map").select("svg"),
	gmap = svgmap.append("g");

// Color scale
var cmin = d3.min(data,function (d) { return d['size']}),
    cmax = d3.max(data,function (d) { return d['size']});

var colorScale = d3.scale.linear()
    .domain([cmin, cmax])
    .range(['#003D0C','#6D5A23'])

data.forEach(function(d) {d.LatLng = new L.LatLng(d.latitude, d.longitude)})

var pointopacity = 0.5;

// Assign data
var points = gmap.selectAll("circle")
    .attr("class", "points")
    .data(data)
    .enter()
    .append("circle")
    .style("opacity", pointopacity)
    .style("fill", function(d) {return colorScale(d.size)})

// Show map
map.on("viewreset", update);
update();

// Update map zoom
function update() {
    points.attr("transform", function(d) {return "translate("+
        map.latLngToLayerPoint(d.LatLng).x +","+
        map.latLngToLayerPoint(d.LatLng).y +")"; })
    .attr("r", function(d) {return (d.size/6)*(map.getZoom()/10)})
}

update()

// Map tooltip
$('svg circle').tipsy({
    gravity: 'w',
    html: true,
    delayOut: 100,
    triggle: 'hover',
    title: function() {
        var d = this.__data__, c = colorScale(d.size), text = Math.round((d.size/12)*100)/100 + " ft.";
        return '<span style="color:' + c + '">' + text + '</span>';
    }
});
});
</script>
</html>
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="http://d3js.org/d3.v3.min.js"></script>
 <style type="text/css">
            .axis path,
            .axis line {
                fill: none;
                stroke: black;
                shape-rendering: crispEdges;
            }

            .axis text {
                font-family: sans-serif;
                font-size: 11px;
            }
        </style>
</head>

<body>
  <div id="first">

       </div>
        <br>
        <div id="second">

        </div>
        <br>
        <div id="third">

        </div>
        <div id="fourth">
            <p>Click on this text to update the chart with new data values (once).</p>
        </div>
  <script>
   
function first() {
    var dataset = Array.apply(null, {length: 25})
        .map(function () {
            return Math.round(Math.random() * 30);
        });
    d3.select("#first").selectAll("div")
        .data(dataset)  // <-- The answer is here!
        .enter()
        .append("div")
        .attr("class", "bar")
        .style("height", function (d) {
            var barHeight = d * 5;
            return barHeight + "px";
        });
    return dataset;
}

function second(dataset) {
    var w = 500;
    var h = 150;
    var barPadding = 1;
    var svg = d3.select("#second")
        .append("svg")
        .attr("width", w)   // <-- Here
        .attr("height", h);

    svg.selectAll("rect")
        .data(dataset)
        .enter()
        .append("rect")
        .attr("x", function (d, i) {
            return i * (w / dataset.length);
        })
        .attr("y", function (d) {
            return h - (d * 4);
        })
        .attr("width", w / dataset.length - barPadding)
        .attr("height", function (d) {
            return d * 4;
        })
        .attr("fill", function (d) {
            return "rgb(0, 0, " + (d * 10) + ")";
        });

    svg.selectAll("text")
        .data(dataset)
        .enter()
        .append("text")
        .text(function (d) {
            return d;
        })
        .attr("text-anchor", "middle")
        .attr("x", function (d, i) {
            return i * (w / dataset.length) + (w / dataset.length - barPadding) / 2;
        })
        .attr("y", function (d) {
            return h - (d * 4) + 14;
        })
        .attr("font-family", "sans-serif")
        .attr("font-size", "11px")
        .attr("fill", "white");
}

function third() {
    var w = 500;
    var h = 300;
    var padding = 30;
    var numDataPoints = 50;				//Number of dummy data points to create
    var xRange = Math.random() * 1000;	//Max range of new x values
    var yRange = Math.random() * 1000;	//Max range of new y values
    var dataset = Array.apply(null, {length: numDataPoints})
        .map(function () {
            return [Math.round(Math.random() * xRange),
                Math.round(Math.random() * yRange)]
        });


    //Create scale functions
    var xScale = d3.scale.linear()
        .domain([0, d3.max(dataset, function (d) {
            return d[0];
        })])
        .range([padding, w - padding * 2]);

    var yScale = d3.scale.linear()
        .domain([0, d3.max(dataset, function (d) {
            return d[1];
        })])
        .range([h - padding, padding]);

    var rScale = d3.scale.linear()
        .domain([0, d3.max(dataset, function (d) {
            return d[1];
        })])
        .range([2, 5]);


    //Define X axis
    var xAxis = d3.svg.axis()
        .scale(xScale)
        .orient("bottom")
        .ticks(5);
    //.tickFormat(formatAsPercentage);

    //Define Y axis
    var yAxis = d3.svg.axis()
        .scale(yScale)
        .orient("left")
        .ticks(5);
    //.tickFormat(formatAsPercentage);

    //Create SVG element
    var svg = d3.select("#third")
        .append("svg")
        .attr("width", w)
        .attr("height", h);

    //Create circles
    svg.selectAll("circle")
        .data(dataset)
        .enter()
        .append("circle")
        .attr("cx", function (d) {
            return xScale(d[0]);
        })
        .attr("cy", function (d) {
            return yScale(d[1]);
        })
        .attr("r", function (d) {
            return rScale(d[1]);
        });

    /*
     //Create labels
     svg.selectAll("text")
     .data(dataset)
     .enter()
     .append("text")
     .text(function(d) {
     return d[0] + "," + d[1];
     })
     .attr("x", function(d) {
     return xScale(d[0]);
     })
     .attr("y", function(d) {
     return yScale(d[1]);
     })
     .attr("font-family", "sans-serif")
     .attr("font-size", "11px")
     .attr("fill", "red");
     */

    //Create X axis
    svg.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(0," + (h - padding) + ")")
        .call(xAxis);

    //Create Y axis
    svg.append("g")
        .attr("class", "axis")
        .attr("transform", "translate(" + padding + ",0)")
        .call(yAxis);
}


function fourth() {
    var w = 500;
    var h = 300;
    var padding = 30;
    var numDataPoints = 50;				//Number of dummy data points to create
    var xRange = Math.random() * 1000;	//Max range of new x values
    var yRange = Math.random() * 1000;	//Max range of new y values
    var dataset = Array.apply(null, {length: numDataPoints})
        .map(function () {
            return [Math.round(Math.random() * xRange),
                Math.round(Math.random() * yRange)]
        });

    var xScale = d3.scale.linear()
        .domain([0, d3.max(dataset, function (d) {
            return d[0];
        })])
        .range([padding, w - padding * 2]);

    var yScale = d3.scale.linear()
        .domain([0, d3.max(dataset, function (d) {
            return d[1];
        })])
        .range([h - padding, padding]);

    var rScale = d3.scale.linear()
        .domain([0, d3.max(dataset, function (d) {
            return d[1];
        })])
        .range([2, 5]);

    var xAxis = d3.svg.axis()
        .scale(xScale)
        .orient("bottom")
        .ticks(5);
    var yAxis = d3.svg.axis()
        .scale(yScale)
        .orient("left")
        .ticks(5);
    var svg = d3.select("#fourth")
        .append("svg")
        .attr("width", w)
        .attr("height", h);

    svg.append("clipPath")
        .attr("id", "chart-area")
        .append("rect")
        .attr("x", padding)
        .attr("y", padding)
        .attr("width", w - padding * 3)
        .attr("height", h - padding * 2);

    svg.append("g")
        .attr("id", "circles")
        .attr("clip-path", "url(#chart-area)")
        .selectAll("circle")
        .data(dataset)
        .enter()
        .append("circle")
        .attr("cx", function (d) {
            return xScale(d[0]);
        })
        .attr("cy", function (d) {
            return yScale(d[1]);
        })
        .attr("r", function (d) {
            return rScale(d[1]);
        });

		console.log("HI");
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + (h - padding) + ")")
        .call(xAxis);

    svg.append("g")
        .attr("class", "y axis")
        .attr("transform", "translate(" + padding + ",0)")
        .call(yAxis);

    d3.select("p")
        .on("click", function () {
            svg.selectAll("circle")
                .data(dataset)
                .transition()
                .duration(1000)
                .each("start", function () {
                    d3.select(this)
                        .attr("fill", "magenta")
                        .attr("r", 6);
                })
                .attr("cx", function (d) {
                    return xScale(d[0]);
                })
                .attr("cy", function (d) {
                    return yScale(d[1]);
                })
                .each("end", function () {
                    d3.select(this)
                        .transition()
                        .duration(1000)
                        .attr("fill", "black")
                        .attr("r", 2);
                });


            svg.select(".x.axis")
                .transition()
                .duration(1000)
                .call(xAxis);

            svg.select(".y.axis")
                .transition()
                .duration(1000)
                .call(yAxis);
        });


}

second(first());
third();

fourth();
  </script>
</body>
<!DOCTYPE html>
<html>
  <head>
    <style type="text/css">
      html, body { height: 100%; margin: 0; padding: 0; }
      .olControlLayerSwitcher { top: 100px !important; left: 10px; width: 40px; }
      #map { height: 100%; }
    </style>
    <link href='http://dev.openlayers.org/releases/OpenLayers-2.13.1/theme/default/style.css' type='text/css' rel='stylesheet' />
  </head>
  <body>
    <div id="map"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwlBHEIw2KsaYlvkpUyLFzDUP-dixEra0"></script>
    <script src='http://dev.openlayers.org/releases/OpenLayers-2.13.1/lib/OpenLayers.js'></script>
    <script type="text/javascript">
        var map;

        function init() {
            map = new OpenLayers.Map('map', {allOverlays: true}, {controls: []});
            var layerSwitcher = new OpenLayers.Control.LayerSwitcher();
            map.addControl(layerSwitcher);
            layerSwitcher.maximizeControl();

            
            // the SATELLITE layer has all 22 zoom level, so we add it first to
            // become the internal base layer that determines the zoom levels of the
            // map.
            var gsat = new OpenLayers.Layer.Google(
                "Google Satellite",
                {type: google.maps.MapTypeId.SATELLITE, numZoomLevels: 22, visibility: false}
            );

            var styles = [{"featureType":"water","elementType":"geometry","stylers":[{"hue":"#0077ff"},{"visibility":"on"},{"saturation":-48}]},{"featureType":"poi.government","elementType":"geometry.fill","stylers":[{"saturation":-66},{"visibility":"off"}]},{"featureType":"poi.park","stylers":[{"visibility":"on"},{"lightness":33},{"saturation":-55}]},{"featureType":"road.highway.controlled_access","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"lightness":67},{"hue":"#00ffa2"},{"saturation":-100}]},{"featureType":"administrative.province","elementType":"geometry.stroke","stylers":[{"visibility":"on"},{"weight":0.7}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"saturation":-100},{"lightness":15},{"visibility":"off"}]},{"featureType":"road.highway","stylers":[{"visibility":"simplified"},{"saturation":100},{"lightness":34}]},{"featureType":"administrative.locality","elementType":"labels.text.fill","stylers":[{"lightness":53},{"saturation":-100}]},{"featureType":"administrative.province","elementType":"labels.text.fill","stylers":[{"saturation":-100}]},{"featureType":"landscape.natural","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"saturation":-100},{"lightness":37}]},{"featureType":"administrative.province","elementType":"labels.text","stylers":[{"lightness":26}]},{"featureType":"administrative.country","elementType":"labels.text","stylers":[{"visibility":"on"},{"lightness":46}]},{"featureType":"administrative.country","elementType":"geometry.stroke","stylers":[{"lightness":36}]},{"featureType":"administrative.locality","elementType":"labels.icon","stylers":[{"lightness":54}]},{"featureType":"poi.government","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"saturation":100},{"lightness":60}]},{"featureType":"road.highway","elementType":"labels.icon","stylers":[{"visibility":"on"},{"lightness":50},{"saturation":-100}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"visibility":"on"},{"saturation":-100}]},{"featureType":"road.arterial","elementType":"geometry.stroke","stylers":[{"saturation":-100},{"lightness":49}]},{"featureType":"road.arterial","elementType":"geometry.fill","stylers":[{"saturation":-100},{"lightness":39},{"visibility":"on"}]},{"featureType":"road.highway.controlled_access","elementType":"geometry.fill","stylers":[{"saturation":-100},{"lightness":52}]},{"featureType":"road.highway.controlled_access","elementType":"geometry.stroke","stylers":[{"visibility":"on"},{"saturation":-100},{"lightness":65}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"saturation":-100},{"lightness":40}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"saturation":-100},{"lightness":30}]}];

            var styledBase = new OpenLayers.Layer.Google(
                "Google Physical",
                // NOTE: this 'styled' ID should match the one defined below
                {type: 'styled', visibility: true}
            );

            map.addLayers([gsat, styledBase]);

        var styledMapType = new google.maps.StyledMapType(styles, {name: 'Styled Map'});
        styledBase.mapObject.mapTypes.set('styled', styledMapType);
        styledBase.mapObject.setMapTypeId('styled');

            // Google.v3 uses EPSG:900913 as projection, so we have to
            // transform our coordinates
            map.setCenter(new OpenLayers.LonLat(10.2, 48.9).transform(
                new OpenLayers.Projection("EPSG:4326"),
                map.getProjectionObject()
            ), 5);
        }

        init();
    </script>
</body>
</html>
<!doctype html>
<html>
<head>

<style>

body {
  margin: 0;
  padding: 0;
}

.text {
  padding: 1em;
}

.text p {
  margin: 0;
  text-indent: 1em;
}

.text p span {
  text-indent: 0;
}

canvas {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  display: none;
}

</style>

<title>Letter flow</title>

<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src='d3-jetpack.js'></script>
<script src='improvedNoise.js'></script>

</head>

<body>

<div class="text">

  <p>A few days later, Banaka turned up in the cafe. Staggering drunk, he fell off a barstool twice before managing to stay on it, order a calvados, and put his head down on the counter. Tamina noticed he was crying.</p>

  <p>“What’s the matter, Mr. Banaka?” she asked him. Banaka looked up at her tearfully and pointed to his chest: “I’m nothing, do you understand? I’m nothing! I don’t exist!” Then he went to the toilet and from the toilet straight out into the street, without paying.</p>

  <p>When Tamina told Hugo what had happened, he showed her, by way of explanation, a newspaper page with book reviews, among them a sarcastic four-line note on Banaka’s entire output.</p>

  <p>The episode of Banaka’s pointing to his chest and crying because he did not exist reminds me of a line from Goethe’s West-East Divan: “Is one alive when other men are living?” Hidden within Goethe’s question is the mystery of the writer’s condition: By writing books, a man turns into a universe (don’t we speak of the universe of Balzac, the universe of Chekhov, the universe of Kafka?), and it is precisely the nature of a universe to be unique. The existence of another universe threatens it in its very essence. Provided their shops are not on the same street, two cobblers can live in perfect harmony. But if they start writing books on the cobbler’s lot, they are soon going to get in each other’s way and ask: “Is a cobbler alive when other cobblers are living?”</p>

  <p>Tamina has the impression that a single outsider’s glance can destroy the entire worth of her intimate notebooks, and Goethe is convinced that a single glance of a single human being which fails to fall on lines written by Goethe calls into question Goethe’s very existence. The difference between Tamina and Goethe is the difference between human being and writer.</p>


</div>

<script src='fizzy.js'></script>
<script src='main.js'></script>


</body>
</html><!DOCTYPE html>
<html>
<head>
<meta name="description" content="Classic word cloud (OpeNER - Paris, es)" />
    <meta charset="utf-8">
    <title>Classic word cloud (OpeNER - Paris, es)</title>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src='layout.cloud.js'></script>
    <script src="http://d3js.org/queue.v1.min.js"></script>
    <script src="http://davidbau.com/encode/seedrandom-min.js"></script>
    <link rel="stylesheet" type="text/css" href="index.css">
</head>
<body>
    <script src='index.js'></script>
</body>
</html>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
body {
  background: #eee;
  font: 10px Helvetica;
  margin: auto;
  position: relative;
  width: 960px;
}

text {
  text-anchor: middle;
  alignment-baseline: middle;
  fill: #444;
}

.hour text {
  fill: #222;
  font-size: 16px;
}

.hour line {
  stroke: #222;
}

.hour.hand {
  line-width: 3px;
}

.minute text {
  display: none;
  fill: #444;
  font-size: 8px;
}

.minute line {
  stroke: #444;
}

</style>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script>

var width = 960,
    height = 500,
    radius = 94;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var field = svg.selectAll("g")
    .data(fields)
  .enter().append("g")
  .attr("class", "field");

field.append("line")
  .attr("class", function(d) { return d.field + " hand"; })
  .attr("stroke-width", function(d) { return d.strokeWidth; })
  .attr("stroke-linecap", "round")
  .attr("x1", 0)
  .attr("x2", function(d) { return d.length; })
  .attr("y1", 0)
  .attr("y2", 0);

svg.append("circle")
  .attr("cx", 0)
  .attr("cy", 0)
  .attr("r", 3)
  .attr("fill", "#c22");

// minute hands
var minutedomain = d3.range(60);
var minuteangle = d3.scale.linear()
  .domain([0,60])
  .range([180,-180])

var minutemarks = svg.selectAll(".minute.axis")
    .data(minutedomain)
  .enter().append("g")
    .attr("class", "minute")
    .attr("transform", function(d) { return "rotate(" + -minuteangle(d) + ")"; })

minutemarks
  .filter(function(d) { return d % 5 == 0; })
  .append("text")
    .attr("y", 190)
    .attr("transform", function(d) {
      return "rotate(" + minuteangle(d) + ",0,190)";
    })
    .text(String);

minutemarks
  .append("line")
  .attr("x1", 168)
  .attr("x2", 180)
  .attr("y1", 0)
  .attr("y2", 0);

// hour hands
var hourdomain = d3.range(12);
var hourangle = d3.scale.linear()
  .domain([0,12])
  .range([180,-180])

var hourmarks = svg.selectAll(".hour.axis")
    .data(hourdomain)
  .enter().append("g")
    .attr("class", "hour")
    .attr("transform", function(d) { return "rotate(" + -hourangle(d) + ")"; })

hourmarks
  .append("text")
    .attr("y", 200)
    .attr("transform", function(d) {
      return "rotate(" + hourangle(d) + ",0,200)";
    })
    .text(String);

hourmarks
  .append("line")
  .attr("stroke-width", 2)
  .attr("x1", 156)
  .attr("x2", 180)
  .attr("y1", 0)
  .attr("y2", 0);

var counter = 0;
function tick() {
  if (counter++ % 3 != 0) return;    // ease up on cpu

  field.data(fields)
    .select("line")
      .attr("transform", function(d) { return "rotate(" + (360*d.value-90)+ ")" })
      .style("stroke", function(d) { return d.color; });
}

d3.timer(tick);

function fields() {
  var now = new Date;
  var milliseconds = now.getMilliseconds();
  var seconds = now.getSeconds() + milliseconds / 1000;
  var minutes = now.getMinutes() + seconds / 60;
  var hours = ((now.getHours() + 24) % 12 || 0) + minutes / 60;
  return [
    {field: "hours", color: "#222", length: 102, strokeWidth: 6, index: .555, spacing: 0.1, value: hours / 12},
    {field: "minutes", color: "#222", length: 154, strokeWidth: 3, index: .597, spacing: 0.115, value: minutes / 60},
    {field: "seconds", color: "#c22", length: 180, strokeWidth: 1.5, index: .6348, spacing: 0.015, value: seconds / 60}
  ];
}

</script>
<!DOCTYPE html>
<meta charset="utf-8">
<style>
  .axis path, .axis line {
      fill: none;
      stroke: #000;
      shape-rendering: crispEdges;
  }
  path.line {
      fill: none;
      stroke-width: 1px;
  }
  .zoomOut {
      fill: #66a;
      cursor: pointer;
  }
  .zoomOutText {
      pointer-events: none;
      fill : #ccc;
  }
  .zoomOverlay {
      pointer-events: all;
      fill:none;
  }
  .band {
      fill : none;
      stroke-width: 1px;
      stroke: red;
  }
</style>
<body>
  <div id="graph"></div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script>
    var data = [];
    var bandPos = [-1, -1];
    var pos;
    var xdomain = 500;
    var ydomain = 50;
    var colors = ["steelblue", "green"];

    var margin = {
      top: 40,
      right: 40,
      bottom: 50,
      left: 60
    }
    var width = 760 - margin.left - margin.right;
    var height = 450 - margin.top - margin.bottom;
    var zoomArea = {
      x1: 0,
      y1: 0,
      x2: xdomain,
      y2: ydomain
    };
    var drag = d3.behavior.drag();

    //data for testing
    var d1 = [];
    var d2 = [];

    for (var i = 0; i < xdomain; i++) {
      d1.push([i, Math.random() * 20 + 10]);
      d2.push([i, Math.random() * 10 + 10]);
    }

    data.push(d1);
    data.push(d2);

    var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


    var x = d3.scale.linear()
      .range([0, width]).domain([0, xdomain]);

    var y = d3.scale.linear()
      .range([height, 0]).domain([0, ydomain]);

    var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

    var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left");

    var line = d3.svg.line()
      .interpolate("basis")
      .x(function(d) {
        return x(d[0]);
      })
      .y(function(d) {
        return y(d[1]);
      });

    var band = svg.append("rect")
      .attr("width", 0)
      .attr("height", 0)
      .attr("x", 0)
      .attr("y", 0)
      .attr("class", "band");

    svg.append("g")
      .attr("class", "x axis")
      .call(xAxis)
      .attr("transform", "translate(0," + height + ")");

    svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)

    svg.append("clipPath")
      .attr("id", "clip")
      .append("rect")
      .attr("width", width)
      .attr("height", height);

    for (idx in data) {
      svg.append("path")
        .datum(data[idx])
        .attr("class", "line line" + idx)
        .attr("clip-path", "url(#clip)")
        .style("stroke", colors[idx])
        .attr("d", line);
    }

    var zoomOverlay = svg.append("rect")
      .attr("width", width - 10)
      .attr("height", height)
      .attr("class", "zoomOverlay")
      .call(drag);

    var zoomout = svg.append("g");

    zoomout.append("rect")
      .attr("class", "zoomOut")
      .attr("width", 75)
      .attr("height", 40)
      .attr("x", -12)
      .attr("y", height + (margin.bottom - 20))
      .on("click", function() {
        zoomOut();
      });

    zoomout.append("text")
      .attr("class", "zoomOutText")
      .attr("width", 75)
      .attr("height", 30)
      .attr("x", -10)
      .attr("y", height + (margin.bottom - 5))
      .text("Zoom Out");

    zoom();

    drag.on("dragend", function() {
      var pos = d3.mouse(this);
      var x1 = x.invert(bandPos[0]);
      var x2 = x.invert(pos[0]);

      if (x1 < x2) {
        zoomArea.x1 = x1;
        zoomArea.x2 = x2;
      } else {
        zoomArea.x1 = x2;
        zoomArea.x2 = x1;
      }

      var y1 = y.invert(pos[1]);
      var y2 = y.invert(bandPos[1]);

      if (x1 < x2) {
        zoomArea.y1 = y1;
        zoomArea.y2 = y2;
      } else {
        zoomArea.y1 = y2;
        zoomArea.y2 = y1;
      }

      bandPos = [-1, -1];

      d3.select(".band").transition()
        .attr("width", 0)
        .attr("height", 0)
        .attr("x", bandPos[0])
        .attr("y", bandPos[1]);

      zoom();
    });

    drag.on("drag", function() {

      var pos = d3.mouse(this);

      if (pos[0] < bandPos[0]) {
        d3.select(".band").
        attr("transform", "translate(" + (pos[0]) + "," + bandPos[1] + ")");
      }
      if (pos[1] < bandPos[1]) {
        d3.select(".band").
        attr("transform", "translate(" + (pos[0]) + "," + pos[1] + ")");
      }
      if (pos[1] < bandPos[1] && pos[0] > bandPos[0]) {
        d3.select(".band").
        attr("transform", "translate(" + (bandPos[0]) + "," + pos[1] + ")");
      }

      //set new position of band when user initializes drag
      if (bandPos[0] == -1) {
        bandPos = pos;
        d3.select(".band").attr("transform", "translate(" + bandPos[0] + "," + bandPos[1] + ")");
      }

      d3.select(".band").transition().duration(1)
        .attr("width", Math.abs(bandPos[0] - pos[0]))
        .attr("height", Math.abs(bandPos[1] - pos[1]));
    });

    function zoom() {
      //recalculate domains
      if (zoomArea.x1 > zoomArea.x2) {
        x.domain([zoomArea.x2, zoomArea.x1]);
      } else {
        x.domain([zoomArea.x1, zoomArea.x2]);
      }

      if (zoomArea.y1 > zoomArea.y2) {
        y.domain([zoomArea.y2, zoomArea.y1]);
      } else {
        y.domain([zoomArea.y1, zoomArea.y2]);
      }

      //update axis and redraw lines
      var t = svg.transition().duration(750);
      t.select(".x.axis").call(xAxis);
      t.select(".y.axis").call(yAxis);

      t.selectAll(".line").attr("d", line); 
    }

    var zoomOut = function() {
      x.domain([0, xdomain]);
      y.domain([0, ydomain]);

      var t = svg.transition().duration(750);
      t.select(".x.axis").call(xAxis);
      t.select(".y.axis").call(yAxis);

      t.selectAll(".line").attr("d", line);     
    }
  </script>
  </body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<canvas width="960" height="500"></canvas>
<script src="//d3js.org/d3.v4.0.0-alpha.4.min.js"></script>
<script>

var data = [1, 1, 2, 3, 5, 8, 13];

var canvas = document.querySelector("canvas"),
    context = canvas.getContext("2d");

var width = canvas.width,
    height = canvas.height,
    radius = Math.min(width, height) / 2;

var colors = [
  "#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd",
  "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf"
];

var arc = d3.arc()
    .outerRadius(radius - 10)
    .innerRadius(0)
    .context(context);

var dot = d3.symbol()
    .context(context);

var pie = d3.pie();

var arcs = pie(data);

context.translate(width / 2, height / 2);

context.globalAlpha = 0.5;
arcs.forEach(function(d, i) {
  context.beginPath();
  arc(d);
  context.fillStyle = colors[i];
  context.fill();
});

context.globalAlpha = 1;
context.beginPath();
arcs.forEach(arc);
context.lineWidth = 1.5;
context.stroke();

context.beginPath();
arcs.forEach(function(d) {
  var c = arc.centroid(d);
  context.save();
  context.translate(c[0], c[1]);
  dot();
  context.restore();
});
context.fillStyle = "#000";
context.fill();

</script>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Loading CSV Data with D3</title>
		<script type="text/javascript" src="http://d3js.org//d3.v3.js"></script>
	</head>
	<body>

		<p>Not much to see here; try looking in the console!</p>

		<script type="text/javascript">		


			//Load in contents of CSV file
			d3.csv("betterlifeindex.csv", function(data) {

				//Now CSV contents have been transformed into
				//an array of JSON objects.

				//Log 'data' to the console, for verification.
				console.log(data);

			});


		</script>

	</body>
</html><!DOCTYPE html>
<meta charset="utf-8">
<style>

svg {
  font: 10px sans-serif;
}

.background path {
  fill: none;
  stroke: #ddd;
  shape-rendering: crispEdges;
}

.foreground path {
  fill: none;
  stroke: steelblue;
}

.brush .extent {
  fill-opacity: .3;
  stroke: #fff;
  shape-rendering: crispEdges;
}

.axis line,
.axis path {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;
}
</style>
</meta>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 50, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangePoints([0, width], 1);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("data.csv", function(d){
        // strip out relevant fields
        var point = {};
        point.AsthmaRates = +d.AsthmaRates;
        point.AirQuality = +d.AirQuality;
        point.SurfaceTemperature0908 = +d.SurfaceTemperature0908;
        point.NonWhite = +d.NonWhite;
        point.Income = +d.Income;
        point.NoHighSchoolDegree = +d.NoHighSchoolDegree;
        point.PopulationDensity = +d.PopulationDensity;
        point.TreeDensity = +d.TreeDensity;
        return point;
    }, function(error, data) {
  
  var scales = {};
  var features = d3.keys(data[0]);  
  
  features.forEach(function(key) {
      scales[key] = d3.scale.linear()
        .range([height, 0])
        .domain([0, d3.max(data, function(d) { return d[key]; })]);
  });
  
  var line = d3.svg.line();
  var axis = d3.svg.axis().orient('left');
    
  x.domain(features);
  
  var path = function (d) {
    return line(features.map(function(k) { return [x(k), scales[k](d[k])]; }));
  }
  
  var line_plot = svg.append("g")
      .attr("class", "foreground")
    .selectAll("path")
      .data([data[0]])
    .enter().append("path")
      .attr("d", path);
  
  // Add a group element for each dimension.
  var g = svg.selectAll(".dimension")
      .data(features)
    .enter().append("g")
      .attr("class", "dimension")
      .attr("transform", function(d) { return "translate(" + x(d) + ")"; });
    
  g.append("g")
      .attr("class", "axis")
      .each(function(d) { d3.select(this).call(axis.scale(scales[d])); })
    .append("text")
      .style("text-anchor", "middle")
      .attr("y", -9)
      .text(function(d) { return d; });
});
</script>
</body>
</html><!doctype HTML>
<meta charset = 'utf-8'>
<html>
  <head>
    <link rel='stylesheet' href='http://nvd3.org/assets/css/nv.d3.css'>
    
    <script src='http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js' type='text/javascript'></script>
    <script src='http://d3js.org/d3.v3.min.js' type='text/javascript'></script>
    <script src='http://timelyportfolio.github.io/rCharts_nvd3_tests/libraries/widgets/nvd3/js/nv.d3.min-new.js' type='text/javascript'></script>
    <script src='http://nvd3.org/assets/lib/fisheye.js' type='text/javascript'></script>
    
    <style>
    .rChart {
      display: block;
      margin-left: auto; 
      margin-right: auto;
      width: 800px;
      height: 400px;
    }  
    </style>
    
  </head>
  <body >
    
    <div id = 'chart14b461ad4abe' class = 'rChart nvd3'></div>    
    <script type='text/javascript'>
 $(document).ready(function(){
      drawchart14b461ad4abe()
    });
    function drawchart14b461ad4abe(){  
      var opts = {
 "dom": "chart14b461ad4abe",
"width":    800,
"height":    400,
"x": "date",
"y": "value",
"group": "measure",
"type": "stackedAreaChart",
"id": "chart14b461ad4abe" 
},
        data = [
 {
 "date":          11892,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1575825154683 
},
{
 "date":          11893,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1574484881419 
},
{
 "date":          11894,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1597209029106 
},
{
 "date":          11897,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1364749785138 
},
{
 "date":          11898,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1373636135712 
},
{
 "date":          11899,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1378117685881 
},
{
 "date":          11900,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1349711573344 
},
{
 "date":          11901,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1311464624954 
},
{
 "date":          11904,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1296320605483 
},
{
 "date":          11905,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1285692217804 
},
{
 "date":          11906,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.129636638269 
},
{
 "date":          11907,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1298352095955 
},
{
 "date":          11908,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1289056676763 
},
{
 "date":          11911,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1300213668784 
},
{
 "date":          11912,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1297183916766 
},
{
 "date":          11913,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1214095884317 
},
{
 "date":          11914,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1187011000119 
},
{
 "date":          11915,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1197580396218 
},
{
 "date":          11918,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1164878522334 
},
{
 "date":          11919,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1151951558532 
},
{
 "date":          11920,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1158093299459 
},
{
 "date":          11921,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1155782452912 
},
{
 "date":          11922,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.112208831886 
},
{
 "date":          11925,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.111711644341 
},
{
 "date":          11926,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1094467806299 
},
{
 "date":          11927,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1083221387162 
},
{
 "date":          11928,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1083567064533 
},
{
 "date":          11929,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1084519605491 
},
{
 "date":          11933,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.103958380474 
},
{
 "date":          11934,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1036041425587 
},
{
 "date":          11935,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1031583938588 
},
{
 "date":          11936,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1004793221662 
},
{
 "date":          11939,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09995560985879 
},
{
 "date":          11940,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1001506669916 
},
{
 "date":          11941,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1000187212496 
},
{
 "date":          11942,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0972806561971 
},
{
 "date":          11943,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09752261566736 
},
{
 "date":          11946,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09747869745643 
},
{
 "date":          11947,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09524449613237 
},
{
 "date":          11948,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09859529442337 
},
{
 "date":          11949,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09888048410394 
},
{
 "date":          11950,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09891656947316 
},
{
 "date":          11953,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09778966827669 
},
{
 "date":          11954,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09639070297117 
},
{
 "date":          11955,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09607743652006 
},
{
 "date":          11956,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09514006786005 
},
{
 "date":          11957,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09334568154125 
},
{
 "date":          11960,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08907764657631 
},
{
 "date":          11961,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09289451108038 
},
{
 "date":          11962,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09260678186147 
},
{
 "date":          11963,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09415762012907 
},
{
 "date":          11964,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09377338115134 
},
{
 "date":          11967,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0915932450763 
},
{
 "date":          11968,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08961927268358 
},
{
 "date":          11969,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08717693704199 
},
{
 "date":          11970,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0860895369927 
},
{
 "date":          11971,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08555479790708 
},
{
 "date":          11974,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08321524095564 
},
{
 "date":          11975,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07585157632352 
},
{
 "date":          11976,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07490216496019 
},
{
 "date":          11977,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07215268186643 
},
{
 "date":          11978,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07239962575526 
},
{
 "date":          11981,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0666086797831 
},
{
 "date":          11982,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06596200985216 
},
{
 "date":          11983,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06629720096924 
},
{
 "date":          11984,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06657447431623 
},
{
 "date":          11985,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06492806196552 
},
{
 "date":          11988,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06461158603776 
},
{
 "date":          11989,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06425056738209 
},
{
 "date":          11990,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06585636813556 
},
{
 "date":          11991,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06460154572226 
},
{
 "date":          11992,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06563229362472 
},
{
 "date":          11995,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06544624073115 
},
{
 "date":          11996,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06578077040528 
},
{
 "date":          11997,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06583864637255 
},
{
 "date":          11998,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06693776235786 
},
{
 "date":          11999,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06431647838465 
},
{
 "date":          12002,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06457833857459 
},
{
 "date":          12003,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06261917804995 
},
{
 "date":          12004,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0623851107276 
},
{
 "date":          12005,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06069657044959 
},
{
 "date":          12006,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06121433374119 
},
{
 "date":          12009,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06001005792547 
},
{
 "date":          12010,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05972887080108 
},
{
 "date":          12011,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05893425320362 
},
{
 "date":          12012,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05973913291094 
},
{
 "date":          12013,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05875834796484 
},
{
 "date":          12016,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05684775497628 
},
{
 "date":          12017,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05666555804681 
},
{
 "date":          12018,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05520258841832 
},
{
 "date":          12020,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05534039538056 
},
{
 "date":          12023,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0540380147333 
},
{
 "date":          12024,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05466367550809 
},
{
 "date":          12025,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05502103867516 
},
{
 "date":          12026,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0481395776484 
},
{
 "date":          12027,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04635911982769 
},
{
 "date":          12030,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04654945611745 
},
{
 "date":          12031,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05105353682644 
},
{
 "date":          12032,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04998967568097 
},
{
 "date":          12033,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05009306131813 
},
{
 "date":          12034,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05018276233043 
},
{
 "date":          12037,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05011334773389 
},
{
 "date":          12038,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04732513683618 
},
{
 "date":          12039,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04805723778597 
},
{
 "date":          12040,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04676438677693 
},
{
 "date":          12041,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04249016607825 
},
{
 "date":          12044,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04283619570858 
},
{
 "date":          12045,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03953838413002 
},
{
 "date":          12047,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04053964660872 
},
{
 "date":          12048,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04247255256902 
},
{
 "date":          12051,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04314297238758 
},
{
 "date":          12052,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0435865334665 
},
{
 "date":          12054,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04603059497562 
},
{
 "date":          12055,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03949954142123 
},
{
 "date":          12058,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04233680664023 
},
{
 "date":          12059,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04081328738532 
},
{
 "date":          12060,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04105565413448 
},
{
 "date":          12061,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04099180927486 
},
{
 "date":          12062,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04074102190863 
},
{
 "date":          12065,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03946964281146 
},
{
 "date":          12066,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03983669031436 
},
{
 "date":          12067,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0393971601946 
},
{
 "date":          12068,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03943484397507 
},
{
 "date":          12069,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03889991574363 
},
{
 "date":          12073,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03861689768757 
},
{
 "date":          12074,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03900131998763 
},
{
 "date":          12075,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0401805895158 
},
{
 "date":          12076,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03998895756365 
},
{
 "date":          12079,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03925679748514 
},
{
 "date":          12080,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03921244392542 
},
{
 "date":          12081,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03925494992787 
},
{
 "date":          12082,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03918575759885 
},
{
 "date":          12083,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03900669814012 
},
{
 "date":          12086,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0390486163505 
},
{
 "date":          12087,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03743997192319 
},
{
 "date":          12088,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03753347839551 
},
{
 "date":          12089,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03708370511374 
},
{
 "date":          12090,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03689613294227 
},
{
 "date":          12093,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03738412668772 
},
{
 "date":          12094,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0376111107272 
},
{
 "date":          12095,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0374413494147 
},
{
 "date":          12096,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03676355947833 
},
{
 "date":          12097,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03736640347483 
},
{
 "date":          12101,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03681358937828 
},
{
 "date":          12102,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03519348256193 
},
{
 "date":          12103,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03544431069013 
},
{
 "date":          12104,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03526587399078 
},
{
 "date":          12107,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03479621261058 
},
{
 "date":          12108,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03498254295456 
},
{
 "date":          12109,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03750061748171 
},
{
 "date":          12110,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03856680749758 
},
{
 "date":          12111,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03853293180198 
},
{
 "date":          12114,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03834079670557 
},
{
 "date":          12115,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03711966734052 
},
{
 "date":          12116,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03721033713026 
},
{
 "date":          12117,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0373991807086 
},
{
 "date":          12118,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03777283456867 
},
{
 "date":          12121,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03563567352558 
},
{
 "date":          12122,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03556379439758 
},
{
 "date":          12123,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03199572714328 
},
{
 "date":          12124,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02818370895686 
},
{
 "date":          12125,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02845034479121 
},
{
 "date":          12128,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02741383549817 
},
{
 "date":          12129,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02738399215997 
},
{
 "date":          12130,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02747312964949 
},
{
 "date":          12131,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02592756575958 
},
{
 "date":          12132,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02322279841323 
},
{
 "date":          12135,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0193424973222 
},
{
 "date":          12136,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01762422592381 
},
{
 "date":          12137,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01843987805077 
},
{
 "date":          12138,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01687885067419 
},
{
 "date":          12139,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01535562072175 
},
{
 "date":          12142,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01551502704039 
},
{
 "date":          12143,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01597552414976 
},
{
 "date":          12144,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01395551781358 
},
{
 "date":          12145,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01128654940226 
},
{
 "date":          12146,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.011286937405 
},
{
 "date":          12149,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008677470380542 
},
{
 "date":          12150,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.009026366254227 
},
{
 "date":          12151,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008936936885893 
},
{
 "date":          12152,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00774498107429 
},
{
 "date":          12153,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007864353568369 
},
{
 "date":          12156,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007118958285671 
},
{
 "date":          12157,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006932681184523 
},
{
 "date":          12158,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006316949026416 
},
{
 "date":          12159,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00356098708895 
},
{
 "date":          12163,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003260545566962 
},
{
 "date":          12164,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003171286083184 
},
{
 "date":          12165,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002617619932865 
},
{
 "date":          12166,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00249111480268 
},
{
 "date":          12167,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002362501484458 
},
{
 "date":          12170,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001756669497383 
},
{
 "date":          12171,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001573854717991 
},
{
 "date":          12172,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001564643459567 
},
{
 "date":          12173,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001463327969643 
},
{
 "date":          12174,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0009963930284374 
},
{
 "date":          12177,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001018777933713 
},
{
 "date":          12178,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0006780812214824 
},
{
 "date":          12179,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.000630792161617 
},
{
 "date":          12180,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0005789616839943 
},
{
 "date":          12181,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0003662172770894 
},
{
 "date":          12184,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0002037017174147 
},
{
 "date":          12185,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001935251498268 
},
{
 "date":          12186,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001904840390191 
},
{
 "date":          12187,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001753805274432 
},
{
 "date":          12188,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001955165693898 
},
{
 "date":          12191,
"fund": "HSGFX",
"measure": "R_sq",
"value": 4.442636734031e-07 
},
{
 "date":          12192,
"fund": "HSGFX",
"measure": "R_sq",
"value": 2.616893119078e-07 
},
{
 "date":          12193,
"fund": "HSGFX",
"measure": "R_sq",
"value": 1.744867761139e-05 
},
{
 "date":          12194,
"fund": "HSGFX",
"measure": "R_sq",
"value": 5.00298906595e-05 
},
{
 "date":          12195,
"fund": "HSGFX",
"measure": "R_sq",
"value": 6.79801636259e-05 
},
{
 "date":          12199,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0002776894472986 
},
{
 "date":          12200,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0003505519489604 
},
{
 "date":          12201,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0003552608951494 
},
{
 "date":          12202,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0006155159868714 
},
{
 "date":          12205,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0006345527126239 
},
{
 "date":          12206,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0005645091182451 
},
{
 "date":          12207,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0009709440002854 
},
{
 "date":          12208,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001131696184136 
},
{
 "date":          12209,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001115475758077 
},
{
 "date":          12212,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001473081871595 
},
{
 "date":          12213,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00169441769561 
},
{
 "date":          12214,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001874471112686 
},
{
 "date":          12215,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001879581994492 
},
{
 "date":          12216,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002188111794512 
},
{
 "date":          12219,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003492490825479 
},
{
 "date":          12220,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003420499848204 
},
{
 "date":          12221,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003474082894357 
},
{
 "date":          12222,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.004068364350319 
},
{
 "date":          12223,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.004386645330724 
},
{
 "date":          12226,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005324270674491 
},
{
 "date":          12227,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005156438478306 
},
{
 "date":          12228,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005147694287898 
},
{
 "date":          12229,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005341224337292 
},
{
 "date":          12230,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005426266401242 
},
{
 "date":          12233,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005640945912948 
},
{
 "date":          12234,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005803419214055 
},
{
 "date":          12235,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006681456181314 
},
{
 "date":          12236,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006957589597299 
},
{
 "date":          12240,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00904989054385 
},
{
 "date":          12241,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01018219095436 
},
{
 "date":          12242,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01052971099318 
},
{
 "date":          12243,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01225478936575 
},
{
 "date":          12244,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01248432894347 
},
{
 "date":          12247,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01396831946079 
},
{
 "date":          12248,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01415268275672 
},
{
 "date":          12249,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01476152356009 
},
{
 "date":          12250,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01620491950064 
},
{
 "date":          12251,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01762494108609 
},
{
 "date":          12254,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01883184127082 
},
{
 "date":          12255,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01908869544415 
},
{
 "date":          12256,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01907319477558 
},
{
 "date":          12257,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01866502277611 
},
{
 "date":          12258,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01969467053622 
},
{
 "date":          12261,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01978795660429 
},
{
 "date":          12262,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02000378942308 
},
{
 "date":          12263,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02004720771056 
},
{
 "date":          12264,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01988357304656 
},
{
 "date":          12265,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02054562653244 
},
{
 "date":          12268,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02077078275442 
},
{
 "date":          12269,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02167265238551 
},
{
 "date":          12270,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02117490170843 
},
{
 "date":          12271,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02118409862242 
},
{
 "date":          12272,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02215929908838 
},
{
 "date":          12275,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02221294092964 
},
{
 "date":          12276,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0225871687775 
},
{
 "date":          12277,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02262779118525 
},
{
 "date":          12278,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02265397390268 
},
{
 "date":          12279,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02319380407351 
},
{
 "date":          12282,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02340111339473 
},
{
 "date":          12283,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02420500081874 
},
{
 "date":          12284,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02432769914035 
},
{
 "date":          12285,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02529580381433 
},
{
 "date":          12286,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02611480470047 
},
{
 "date":          12289,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0262735216584 
},
{
 "date":          12290,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02785892033324 
},
{
 "date":          12291,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02797182399165 
},
{
 "date":          12292,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02893301636295 
},
{
 "date":          12293,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0295681382768 
},
{
 "date":          12297,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03047812224044 
},
{
 "date":          12298,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0303886010435 
},
{
 "date":          12299,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03041528475916 
},
{
 "date":          12300,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03055468842109 
},
{
 "date":          12303,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03181367115675 
},
{
 "date":          12304,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03123686681166 
},
{
 "date":          12305,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03248579601197 
},
{
 "date":          12306,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03519684397566 
},
{
 "date":          12307,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0347321011234 
},
{
 "date":          12310,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03388123048026 
},
{
 "date":          12311,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03649636220333 
},
{
 "date":          12312,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0369587206911 
},
{
 "date":          12313,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04054692184281 
},
{
 "date":          12314,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04058991590072 
},
{
 "date":          12317,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04131891955003 
},
{
 "date":          12318,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04116816586283 
},
{
 "date":          12319,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04385375079154 
},
{
 "date":          12320,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04410411830832 
},
{
 "date":          12321,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0443221608989 
},
{
 "date":          12324,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04259564667023 
},
{
 "date":          12325,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04260451014773 
},
{
 "date":          12326,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04405806229794 
},
{
 "date":          12327,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0440862468478 
},
{
 "date":          12328,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04428887629623 
},
{
 "date":          12331,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04473807770358 
},
{
 "date":          12332,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04564137677379 
},
{
 "date":          12333,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04581552986685 
},
{
 "date":          12334,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04614820338428 
},
{
 "date":          12335,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04635795501134 
},
{
 "date":          12338,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04781049347406 
},
{
 "date":          12339,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04726433474641 
},
{
 "date":          12340,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04713038722908 
},
{
 "date":          12341,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.048576394462 
},
{
 "date":          12342,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04929566953664 
},
{
 "date":          12345,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04938467175286 
},
{
 "date":          12346,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05006371196241 
},
{
 "date":          12347,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05097909953844 
},
{
 "date":          12348,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05347708761487 
},
{
 "date":          12349,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05234842461867 
},
{
 "date":          12352,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05240073874596 
},
{
 "date":          12353,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05045242511749 
},
{
 "date":          12354,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05033150756531 
},
{
 "date":          12355,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05033542330208 
},
{
 "date":          12356,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0497784508681 
},
{
 "date":          12359,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04979405034432 
},
{
 "date":          12360,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05091866747814 
},
{
 "date":          12361,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05092803432446 
},
{
 "date":          12362,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05108642188836 
},
{
 "date":          12363,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05136970397143 
},
{
 "date":          12366,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0516540993192 
},
{
 "date":          12367,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05148851160951 
},
{
 "date":          12368,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05242686711323 
},
{
 "date":          12369,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05297501795074 
},
{
 "date":          12370,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05376860086681 
},
{
 "date":          12373,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05402417653129 
},
{
 "date":          12374,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05431146180217 
},
{
 "date":          12375,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05430867521415 
},
{
 "date":          12376,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05403335562147 
},
{
 "date":          12377,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0573393014082 
},
{
 "date":          12380,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05839895762983 
},
{
 "date":          12381,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05879051116689 
},
{
 "date":          12382,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05940832230832 
},
{
 "date":          12384,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06051687177232 
},
{
 "date":          12387,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06114022400444 
},
{
 "date":          12388,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06120654672096 
},
{
 "date":          12389,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06119812123277 
},
{
 "date":          12390,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06090879396603 
},
{
 "date":          12391,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06113662691692 
},
{
 "date":          12394,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06096594407049 
},
{
 "date":          12395,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06169482732349 
},
{
 "date":          12396,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06205355963643 
},
{
 "date":          12397,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06360975164141 
},
{
 "date":          12398,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06344232803881 
},
{
 "date":          12401,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06383560626806 
},
{
 "date":          12402,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0639494375394 
},
{
 "date":          12403,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06428947850374 
},
{
 "date":          12404,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06507077227489 
},
{
 "date":          12405,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0652030682002 
},
{
 "date":          12408,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06538160257421 
},
{
 "date":          12409,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06555259686032 
},
{
 "date":          12410,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06695247002732 
},
{
 "date":          12412,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06749054989495 
},
{
 "date":          12415,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0696381993551 
},
{
 "date":          12416,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06931819485082 
},
{
 "date":          12417,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07054998233909 
},
{
 "date":          12419,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07060687788709 
},
{
 "date":          12422,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07141059131377 
},
{
 "date":          12423,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07176388319136 
},
{
 "date":          12424,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07198727967262 
},
{
 "date":          12425,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07175055218704 
},
{
 "date":          12426,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07188073768166 
},
{
 "date":          12429,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07184516808543 
},
{
 "date":          12430,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07228634457457 
},
{
 "date":          12431,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07426195891391 
},
{
 "date":          12432,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07489627694693 
},
{
 "date":          12433,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07535958435102 
},
{
 "date":          12437,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07517537964139 
},
{
 "date":          12438,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07535670178797 
},
{
 "date":          12439,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07535968972508 
},
{
 "date":          12440,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08144938677891 
},
{
 "date":          12443,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08304200206192 
},
{
 "date":          12444,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08224905067587 
},
{
 "date":          12445,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08325092045483 
},
{
 "date":          12446,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08444842176742 
},
{
 "date":          12447,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08451299971083 
},
{
 "date":          12450,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08440657123496 
},
{
 "date":          12451,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0842567699949 
},
{
 "date":          12452,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08550223804555 
},
{
 "date":          12453,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08467798350549 
},
{
 "date":          12454,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0855383289355 
},
{
 "date":          12457,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08665844362495 
},
{
 "date":          12458,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08650063237564 
},
{
 "date":          12459,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08911745271434 
},
{
 "date":          12460,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08971928256676 
},
{
 "date":          12461,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09117098926907 
},
{
 "date":          12465,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09273118653883 
},
{
 "date":          12466,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09313832848798 
},
{
 "date":          12467,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09484482541729 
},
{
 "date":          12468,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09553720896132 
},
{
 "date":          12471,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09577759595143 
},
{
 "date":          12472,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09585007540521 
},
{
 "date":          12473,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09946198794422 
},
{
 "date":          12474,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09935886549752 
},
{
 "date":          12475,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09903996053994 
},
{
 "date":          12478,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09959280938018 
},
{
 "date":          12479,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.100032005273 
},
{
 "date":          12480,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09996789783804 
},
{
 "date":          12481,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.10026054891 
},
{
 "date":          12482,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1010090972984 
},
{
 "date":          12485,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1024063197916 
},
{
 "date":          12486,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1028783789738 
},
{
 "date":          12487,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.104852553491 
},
{
 "date":          12488,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1057676756437 
},
{
 "date":          12489,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1055174093345 
},
{
 "date":          12492,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1092114734792 
},
{
 "date":          12493,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1091940241623 
},
{
 "date":          12494,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1098393016555 
},
{
 "date":          12495,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1093832091917 
},
{
 "date":          12496,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1090635254759 
},
{
 "date":          12499,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1095289749738 
},
{
 "date":          12500,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1095963462592 
},
{
 "date":          12501,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1096668708299 
},
{
 "date":          12502,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1119868991568 
},
{
 "date":          12503,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1117604234029 
},
{
 "date":          12506,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1127209529476 
},
{
 "date":          12507,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1128527361352 
},
{
 "date":          12508,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1127411066026 
},
{
 "date":          12509,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1135877104374 
},
{
 "date":          12510,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1137322575544 
},
{
 "date":          12513,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1194548862372 
},
{
 "date":          12514,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1204021997918 
},
{
 "date":          12515,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1206444038903 
},
{
 "date":          12516,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1238727347048 
},
{
 "date":          12520,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1239857877226 
},
{
 "date":          12521,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1253282395395 
},
{
 "date":          12522,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1253682174668 
},
{
 "date":          12523,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1262480665146 
},
{
 "date":          12524,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1264350833102 
},
{
 "date":          12527,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1261486142492 
},
{
 "date":          12528,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1262622817189 
},
{
 "date":          12529,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1280688802646 
},
{
 "date":          12530,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1276698152054 
},
{
 "date":          12531,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.128449660274 
},
{
 "date":          12534,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1296650827729 
},
{
 "date":          12535,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1296008506965 
},
{
 "date":          12536,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1299651470788 
},
{
 "date":          12537,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1308384778814 
},
{
 "date":          12538,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.13132601085 
},
{
 "date":          12541,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.137233850939 
},
{
 "date":          12542,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1380766565224 
},
{
 "date":          12543,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1397131594012 
},
{
 "date":          12544,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1436901944364 
},
{
 "date":          12545,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1425688121754 
},
{
 "date":          12548,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1436929685555 
},
{
 "date":          12549,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1437249922323 
},
{
 "date":          12550,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1440643185565 
},
{
 "date":          12551,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1449021113133 
},
{
 "date":          12552,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1456524295293 
},
{
 "date":          12555,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1458703106207 
},
{
 "date":          12556,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1452920576745 
},
{
 "date":          12557,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1475691049231 
},
{
 "date":          12558,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.14728810834 
},
{
 "date":          12559,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1477624856239 
},
{
 "date":          12562,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.147768281775 
},
{
 "date":          12563,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1485608467574 
},
{
 "date":          12564,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.149371264027 
},
{
 "date":          12565,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.149963222115 
},
{
 "date":          12566,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1491305623181 
},
{
 "date":          12570,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1506220446661 
},
{
 "date":          12571,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1503453779735 
},
{
 "date":          12572,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1504418132914 
},
{
 "date":          12573,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1511302729447 
},
{
 "date":          12576,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1510185263136 
},
{
 "date":          12577,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1506084173271 
},
{
 "date":          12578,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1514297578365 
},
{
 "date":          12579,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1538605303643 
},
{
 "date":          12583,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1541649103835 
},
{
 "date":          12584,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.156999033648 
},
{
 "date":          12585,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1562441432984 
},
{
 "date":          12586,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1556904090465 
},
{
 "date":          12587,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1557980833207 
},
{
 "date":          12590,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1560736497585 
},
{
 "date":          12591,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1560832158777 
},
{
 "date":          12592,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1598646903738 
},
{
 "date":          12593,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1601124327402 
},
{
 "date":          12594,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1653130436425 
},
{
 "date":          12597,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.164212031126 
},
{
 "date":          12598,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1639506118336 
},
{
 "date":          12599,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1642076880849 
},
{
 "date":          12600,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1665836160821 
},
{
 "date":          12601,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1690038015409 
},
{
 "date":          12605,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1750378701383 
},
{
 "date":          12606,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1755591553637 
},
{
 "date":          12607,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1756090830809 
},
{
 "date":          12608,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1754734164352 
},
{
 "date":          12611,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1736628573494 
},
{
 "date":          12612,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1763423271849 
},
{
 "date":          12613,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1960041456074 
},
{
 "date":          12614,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2006102263612 
},
{
 "date":          12615,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1986054696672 
},
{
 "date":          12618,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2034647349833 
},
{
 "date":          12619,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1982208392307 
},
{
 "date":          12620,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.199715035123 
},
{
 "date":          12621,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2064823014302 
},
{
 "date":          12622,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1924926453033 
},
{
 "date":          12625,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1925455926403 
},
{
 "date":          12626,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1942473029398 
},
{
 "date":          12627,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1931869300921 
},
{
 "date":          12628,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1908424768827 
},
{
 "date":          12629,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1960235557174 
},
{
 "date":          12632,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1970468008566 
},
{
 "date":          12633,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1982662596549 
},
{
 "date":          12634,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.203537479541 
},
{
 "date":          12635,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2067814919355 
},
{
 "date":          12636,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2086138553804 
},
{
 "date":          12639,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2091402373273 
},
{
 "date":          12640,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2056084949438 
},
{
 "date":          12641,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2041701973894 
},
{
 "date":          12642,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2056377653535 
},
{
 "date":          12643,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2034605267626 
},
{
 "date":          12646,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2028139141155 
},
{
 "date":          12647,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2046462804269 
},
{
 "date":          12648,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2056809798537 
},
{
 "date":          12649,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2031253885693 
},
{
 "date":          12650,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2031668745334 
},
{
 "date":          12653,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2010731871963 
},
{
 "date":          12654,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2001647947096 
},
{
 "date":          12655,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2001340237246 
},
{
 "date":          12656,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.200244317856 
},
{
 "date":          12657,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1996430143658 
},
{
 "date":          12660,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2003558402262 
},
{
 "date":          12661,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2002319236721 
},
{
 "date":          12662,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1987281303473 
},
{
 "date":          12663,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1988860810508 
},
{
 "date":          12664,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1997405134716 
},
{
 "date":          12668,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1997264457155 
},
{
 "date":          12669,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1978333921908 
},
{
 "date":          12670,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1980844154069 
},
{
 "date":          12671,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1982840366726 
},
{
 "date":          12674,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1974063249808 
},
{
 "date":          12675,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1974321670193 
},
{
 "date":          12676,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2075500675359 
},
{
 "date":          12677,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2077407549184 
},
{
 "date":          12678,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2067908248876 
},
{
 "date":          12681,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2051378859311 
},
{
 "date":          12682,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2079381134355 
},
{
 "date":          12683,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2084466272346 
},
{
 "date":          12684,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2088590898489 
},
{
 "date":          12685,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2070319640256 
},
{
 "date":          12688,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2330109159308 
},
{
 "date":          12689,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2338055899793 
},
{
 "date":          12690,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2346055953834 
},
{
 "date":          12691,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2386798277405 
},
{
 "date":          12692,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2351729473144 
},
{
 "date":          12695,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2352397128084 
},
{
 "date":          12696,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2337394691634 
},
{
 "date":          12697,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2393833370573 
},
{
 "date":          12698,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2382106789311 
},
{
 "date":          12699,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2401823537862 
},
{
 "date":          12702,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2448356187124 
},
{
 "date":          12703,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2463622532783 
},
{
 "date":          12704,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2456200249821 
},
{
 "date":          12705,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2444851076942 
},
{
 "date":          12706,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2438567404617 
},
{
 "date":          12709,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2437069217743 
},
{
 "date":          12710,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.245250016402 
},
{
 "date":          12711,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2476016983868 
},
{
 "date":          12712,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2522052863013 
},
{
 "date":          12713,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2504780316352 
},
{
 "date":          12716,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2511194794588 
},
{
 "date":          12717,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.258989499851 
},
{
 "date":          12718,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2605540482692 
},
{
 "date":          12719,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2684915357071 
},
{
 "date":          12720,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2697370987915 
},
{
 "date":          12723,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2710702136959 
},
{
 "date":          12724,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2717318773641 
},
{
 "date":          12725,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2835301293205 
},
{
 "date":          12726,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2852357282461 
},
{
 "date":          12727,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.290247355616 
},
{
 "date":          12730,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2908297213653 
},
{
 "date":          12731,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2907468465127 
},
{
 "date":          12732,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2989339426715 
},
{
 "date":          12733,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2993676252435 
},
{
 "date":          12734,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3001830575082 
},
{
 "date":          12737,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2994695661546 
},
{
 "date":          12738,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3061906840597 
},
{
 "date":          12739,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3139565548465 
},
{
 "date":          12740,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3137163940525 
},
{
 "date":          12741,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3164601926275 
},
{
 "date":          12744,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3199352312356 
},
{
 "date":          12745,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3279728221954 
},
{
 "date":          12746,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3281759334536 
},
{
 "date":          12748,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3303178315405 
},
{
 "date":          12751,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3347484611176 
},
{
 "date":          12752,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3401914914839 
},
{
 "date":          12753,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3390058446525 
},
{
 "date":          12754,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3403005190895 
},
{
 "date":          12755,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3486303188163 
},
{
 "date":          12758,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3574820577692 
},
{
 "date":          12759,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3580460103187 
},
{
 "date":          12760,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3612723885193 
},
{
 "date":          12761,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3658486853519 
},
{
 "date":          12762,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3690907130125 
},
{
 "date":          12765,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.368879003127 
},
{
 "date":          12766,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3758862136161 
},
{
 "date":          12767,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3755679674657 
},
{
 "date":          12768,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3788844737278 
},
{
 "date":          12769,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3818819428272 
},
{
 "date":          12772,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3815659571978 
},
{
 "date":          12773,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3832487679178 
},
{
 "date":          12774,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3870186971482 
},
{
 "date":          12775,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3869288462882 
},
{
 "date":          12779,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3872483272097 
},
{
 "date":          12780,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.390125637848 
},
{
 "date":          12781,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3914650337963 
},
{
 "date":          12782,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3947316907637 
},
{
 "date":          12783,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3941370501796 
},
{
 "date":          12786,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4005119432122 
},
{
 "date":          12787,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.405365257259 
},
{
 "date":          12788,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4054495475206 
},
{
 "date":          12789,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4053777860443 
},
{
 "date":          12790,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4089403517845 
},
{
 "date":          12793,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4104739885708 
},
{
 "date":          12794,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4122580644657 
},
{
 "date":          12795,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4140682558528 
},
{
 "date":          12796,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4122657303113 
},
{
 "date":          12797,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4157575142501 
},
{
 "date":          12801,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4162607812771 
},
{
 "date":          12802,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.42693298495 
},
{
 "date":          12803,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4276032608306 
},
{
 "date":          12804,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.429185040517 
},
{
 "date":          12807,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4319164315191 
},
{
 "date":          12808,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4361974866692 
},
{
 "date":          12809,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4374614097763 
},
{
 "date":          12810,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.437333851229 
},
{
 "date":          12811,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4405331453014 
},
{
 "date":          12814,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.442140024302 
},
{
 "date":          12815,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4417562766816 
},
{
 "date":          12816,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4470476582156 
},
{
 "date":          12817,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4529493614971 
},
{
 "date":          12818,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4576364095964 
},
{
 "date":          12821,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4563943339668 
},
{
 "date":          12822,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4570501964873 
},
{
 "date":          12823,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4657195436072 
},
{
 "date":          12824,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4682966912444 
},
{
 "date":          12825,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4689927283917 
},
{
 "date":          12828,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.47023791052 
},
{
 "date":          12829,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4777384391761 
},
{
 "date":          12830,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4789697384122 
},
{
 "date":          12831,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4815891761975 
},
{
 "date":          12832,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4831128887325 
},
{
 "date":          12836,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4804838293062 
},
{
 "date":          12837,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4794860985522 
},
{
 "date":          12838,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4792245003933 
},
{
 "date":          12839,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4779806452993 
},
{
 "date":          12842,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4809124187405 
},
{
 "date":          12843,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4824856090826 
},
{
 "date":          12844,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4823799861216 
},
{
 "date":          12845,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4784733774695 
},
{
 "date":          12846,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4779531243431 
},
{
 "date":          12849,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4781197255083 
},
{
 "date":          12850,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.482275639728 
},
{
 "date":          12851,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4827523986589 
},
{
 "date":          12852,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4950716661762 
},
{
 "date":          12853,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4945997191137 
},
{
 "date":          12856,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4963947493742 
},
{
 "date":          12857,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4977804593371 
},
{
 "date":          12858,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4948907408672 
},
{
 "date":          12859,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4849968451817 
},
{
 "date":          12860,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4856906435267 
},
{
 "date":          12863,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.487385993128 
},
{
 "date":          12864,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.484980312064 
},
{
 "date":          12865,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4878665364868 
},
{
 "date":          12866,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4969387728871 
},
{
 "date":          12870,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5183731719753 
},
{
 "date":          12871,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5199810822953 
},
{
 "date":          12872,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.51813257644 
},
{
 "date":          12873,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5179888806136 
},
{
 "date":          12874,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5165141772506 
},
{
 "date":          12877,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5151648843036 
},
{
 "date":          12878,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5140285057661 
},
{
 "date":          12879,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5142185266233 
},
{
 "date":          12880,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5154617606322 
},
{
 "date":          12881,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5176381565484 
},
{
 "date":          12884,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5176830545623 
},
{
 "date":          12885,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5141245439257 
},
{
 "date":          12886,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5107925079554 
},
{
 "date":          12887,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5082069631832 
},
{
 "date":          12888,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5065404706003 
},
{
 "date":          12891,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.505942355817 
},
{
 "date":          12892,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5048237000289 
},
{
 "date":          12893,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4993585374898 
},
{
 "date":          12894,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4866819573645 
},
{
 "date":          12895,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4903069524035 
},
{
 "date":          12898,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4894215230384 
},
{
 "date":          12899,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4884433025412 
},
{
 "date":          12900,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4822062139635 
},
{
 "date":          12901,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4799093928479 
},
{
 "date":          12902,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4745346596035 
},
{
 "date":          12905,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4742241160949 
},
{
 "date":          12906,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.473390910712 
},
{
 "date":          12907,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4709154734776 
},
{
 "date":          12908,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4687447606583 
},
{
 "date":          12909,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4686828424997 
},
{
 "date":          12912,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4673330528011 
},
{
 "date":          12913,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4629361604096 
},
{
 "date":          12914,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4632615470715 
},
{
 "date":          12915,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.45362303468 
},
{
 "date":          12916,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4536914447959 
},
{
 "date":          12919,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4491141336211 
},
{
 "date":          12920,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.447211089809 
},
{
 "date":          12921,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4463427729538 
},
{
 "date":          12922,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4394685993416 
},
{
 "date":          12923,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4398035837476 
},
{
 "date":          12926,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4407955251007 
},
{
 "date":          12927,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4366155695478 
},
{
 "date":          12928,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4356243577593 
},
{
 "date":          12929,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4354339348672 
},
{
 "date":          12930,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.430635699266 
},
{
 "date":          12934,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4324226157302 
},
{
 "date":          12935,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4307415069956 
},
{
 "date":          12936,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4270506900155 
},
{
 "date":          12937,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4259924001049 
},
{
 "date":          12940,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4233924331786 
},
{
 "date":          12941,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4232526648103 
},
{
 "date":          12942,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4211861938991 
},
{
 "date":          12943,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4119356258719 
},
{
 "date":          12944,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4124615041809 
},
{
 "date":          12947,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4125661134682 
},
{
 "date":          12948,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4072972273691 
},
{
 "date":          12949,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4073384147267 
},
{
 "date":          12950,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4025364554675 
},
{
 "date":          12951,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4027091155151 
},
{
 "date":          12954,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4022427341331 
},
{
 "date":          12955,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4006530463819 
},
{
 "date":          12956,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.400081830955 
},
{
 "date":          12957,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3956666182547 
},
{
 "date":          12958,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3952063434748 
},
{
 "date":          12961,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3947908694127 
},
{
 "date":          12962,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3930944770217 
},
{
 "date":          12963,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3911666083818 
},
{
 "date":          12964,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3913909316502 
},
{
 "date":          12965,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3919268645297 
},
{
 "date":          12969,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3884041717886 
},
{
 "date":          12970,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3862652497535 
},
{
 "date":          12971,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3851892052161 
},
{
 "date":          12972,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3802223438868 
},
{
 "date":          12975,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3771752337719 
},
{
 "date":          12976,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.371980102427 
},
{
 "date":          12977,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3692582922507 
},
{
 "date":          12978,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3640841928876 
},
{
 "date":          12979,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3620576899897 
},
{
 "date":          12982,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3667947139867 
},
{
 "date":          12983,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3647053488281 
},
{
 "date":          12984,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3586321897046 
},
{
 "date":          12985,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3576900217638 
},
{
 "date":          12986,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3563511409482 
},
{
 "date":          12989,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.356604473473 
},
{
 "date":          12990,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3566840215482 
},
{
 "date":          12991,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3549719755533 
},
{
 "date":          12992,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3535171429763 
},
{
 "date":          12993,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3474835537101 
},
{
 "date":          12996,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3487120521045 
},
{
 "date":          12997,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3469010520778 
},
{
 "date":          12998,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3458459152931 
},
{
 "date":          12999,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3422325633688 
},
{
 "date":          13000,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.33745799531 
},
{
 "date":          13003,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3345163039726 
},
{
 "date":          13004,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3340057424406 
},
{
 "date":          13005,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3323560883557 
},
{
 "date":          13006,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3315514137413 
},
{
 "date":          13007,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3298005703514 
},
{
 "date":          13010,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3294361209754 
},
{
 "date":          13011,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3308980042315 
},
{
 "date":          13012,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3291439378176 
},
{
 "date":          13013,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3291726445838 
},
{
 "date":          13014,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3296713258572 
},
{
 "date":          13017,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3312523848859 
},
{
 "date":          13018,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3304817822205 
},
{
 "date":          13019,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3296916069346 
},
{
 "date":          13020,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3263556934236 
},
{
 "date":          13021,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3273056723531 
},
{
 "date":          13024,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3283642770658 
},
{
 "date":          13025,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.327910495393 
},
{
 "date":          13026,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3281614331305 
},
{
 "date":          13027,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3266094436904 
},
{
 "date":          13028,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3222337835622 
},
{
 "date":          13032,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3191815540452 
},
{
 "date":          13033,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3200416584154 
},
{
 "date":          13034,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.320780278575 
},
{
 "date":          13035,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3194702056996 
},
{
 "date":          13038,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3209340232163 
},
{
 "date":          13039,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3202373408425 
},
{
 "date":          13040,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3204650597521 
},
{
 "date":          13041,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3150355403602 
},
{
 "date":          13042,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3131944279834 
},
{
 "date":          13045,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3029294120867 
},
{
 "date":          13046,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3023253486781 
},
{
 "date":          13047,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2983738773441 
},
{
 "date":          13048,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.300688471355 
},
{
 "date":          13049,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3010133994172 
},
{
 "date":          13052,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2932525067607 
},
{
 "date":          13053,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2930186789114 
},
{
 "date":          13054,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2910407755062 
},
{
 "date":          13055,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2904180866394 
},
{
 "date":          13056,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2901201847125 
},
{
 "date":          13059,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2895410181126 
},
{
 "date":          13060,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2914887003823 
},
{
 "date":          13061,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2919065213677 
},
{
 "date":          13062,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2887776767079 
},
{
 "date":          13063,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2883150610495 
},
{
 "date":          13066,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2879930722121 
},
{
 "date":          13067,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2884747597828 
},
{
 "date":          13068,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2851168379909 
},
{
 "date":          13069,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2847162328139 
},
{
 "date":          13070,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2809447300874 
},
{
 "date":          13073,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2753051236919 
},
{
 "date":          13074,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2766439637675 
},
{
 "date":          13075,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.269220474032 
},
{
 "date":          13076,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2672975398897 
},
{
 "date":          13077,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2655862184861 
},
{
 "date":          13080,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2628729557674 
},
{
 "date":          13081,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2627923936898 
},
{
 "date":          13082,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.264557366548 
},
{
 "date":          13083,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2670237378115 
},
{
 "date":          13084,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2673127464168 
},
{
 "date":          13087,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.264154714565 
},
{
 "date":          13088,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2596724967506 
},
{
 "date":          13089,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2588632909296 
},
{
 "date":          13090,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.255894639458 
},
{
 "date":          13091,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2582382415905 
},
{
 "date":          13094,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2530144983788 
},
{
 "date":          13095,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2543429282098 
},
{
 "date":          13096,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2534521871093 
},
{
 "date":          13097,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.247355267841 
},
{
 "date":          13098,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2459660562927 
},
{
 "date":          13101,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2465637894032 
},
{
 "date":          13102,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2482348965538 
},
{
 "date":          13103,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2481670872862 
},
{
 "date":          13104,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2420736202469 
},
{
 "date":          13105,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.240649136156 
},
{
 "date":          13108,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2397972845756 
},
{
 "date":          13109,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2395144674439 
},
{
 "date":          13110,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2365232524523 
},
{
 "date":          13112,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2364844781757 
},
{
 "date":          13115,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.23580831383 
},
{
 "date":          13116,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2413778751317 
},
{
 "date":          13117,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2404759305347 
},
{
 "date":          13118,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2408030142726 
},
{
 "date":          13119,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2386980331781 
},
{
 "date":          13122,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2390766729216 
},
{
 "date":          13123,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2338614990335 
},
{
 "date":          13124,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2330608738994 
},
{
 "date":          13125,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2332374886823 
},
{
 "date":          13126,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2329488770022 
},
{
 "date":          13129,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2333443292885 
},
{
 "date":          13130,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2290813565557 
},
{
 "date":          13131,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.229796885106 
},
{
 "date":          13132,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2294726451021 
},
{
 "date":          13133,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2295668228486 
},
{
 "date":          13136,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2258878059087 
},
{
 "date":          13137,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2257952811972 
},
{
 "date":          13138,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2216641667668 
},
{
 "date":          13139,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2215174182335 
},
{
 "date":          13140,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2219862958607 
},
{
 "date":          13144,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2203830568105 
},
{
 "date":          13145,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2170669385132 
},
{
 "date":          13146,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.216486915297 
},
{
 "date":          13147,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2177558185128 
},
{
 "date":          13151,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2200883303978 
},
{
 "date":          13152,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2207930933678 
},
{
 "date":          13153,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2211484899213 
},
{
 "date":          13154,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2210625738296 
},
{
 "date":          13157,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2196261928403 
},
{
 "date":          13158,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2195869293778 
},
{
 "date":          13159,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.218296462327 
},
{
 "date":          13160,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2184469156661 
},
{
 "date":          13161,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2176413078292 
},
{
 "date":          13165,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2181085789146 
},
{
 "date":          13166,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2187134937032 
},
{
 "date":          13167,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2194515431322 
},
{
 "date":          13168,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2154210891099 
},
{
 "date":          13171,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2092436403298 
},
{
 "date":          13172,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2093249818767 
},
{
 "date":          13173,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2095265408733 
},
{
 "date":          13174,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2080228313788 
},
{
 "date":          13175,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2085075236463 
},
{
 "date":          13178,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2072792192621 
},
{
 "date":          13179,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.20664191972 
},
{
 "date":          13180,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2020018322841 
},
{
 "date":          13181,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1997458570155 
},
{
 "date":          13182,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2003439220841 
},
{
 "date":          13185,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1967258910765 
},
{
 "date":          13186,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1955719032018 
},
{
 "date":          13187,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1942732452116 
},
{
 "date":          13188,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1914903153125 
},
{
 "date":          13189,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.192024703415 
},
{
 "date":          13192,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1906203069608 
},
{
 "date":          13193,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1863993091637 
},
{
 "date":          13194,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1856744444988 
},
{
 "date":          13195,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1868124639189 
},
{
 "date":          13196,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1861810119425 
},
{
 "date":          13200,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.186195389568 
},
{
 "date":          13201,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1820989813213 
},
{
 "date":          13202,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1781380856252 
},
{
 "date":          13203,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1776306532096 
},
{
 "date":          13206,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1782282907486 
},
{
 "date":          13207,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.177721841542 
},
{
 "date":          13208,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1771547427176 
},
{
 "date":          13209,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1752400092369 
},
{
 "date":          13210,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1736534856965 
},
{
 "date":          13213,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1651626347985 
},
{
 "date":          13214,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1616176670324 
},
{
 "date":          13215,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1619100653306 
},
{
 "date":          13216,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1539244681955 
},
{
 "date":          13217,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1540208756483 
},
{
 "date":          13220,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1505368390848 
},
{
 "date":          13221,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1469179938438 
},
{
 "date":          13222,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1477239933848 
},
{
 "date":          13223,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1446799790535 
},
{
 "date":          13224,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1445966594371 
},
{
 "date":          13227,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1442927284317 
},
{
 "date":          13228,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1341959935686 
},
{
 "date":          13229,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1334832915081 
},
{
 "date":          13230,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1289904671166 
},
{
 "date":          13231,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1285764465349 
},
{
 "date":          13234,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1286346219092 
},
{
 "date":          13235,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1276429199785 
},
{
 "date":          13236,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1247025287718 
},
{
 "date":          13237,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1221823297805 
},
{
 "date":          13238,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1222381165441 
},
{
 "date":          13241,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.121460775687 
},
{
 "date":          13242,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1205385293783 
},
{
 "date":          13243,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1197134054911 
},
{
 "date":          13244,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1148329450091 
},
{
 "date":          13245,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1143128650995 
},
{
 "date":          13248,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1142052730975 
},
{
 "date":          13249,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1128652714456 
},
{
 "date":          13250,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1126904655229 
},
{
 "date":          13251,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1124407061027 
},
{
 "date":          13255,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1111195515907 
},
{
 "date":          13256,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1010675328283 
},
{
 "date":          13257,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.101334859107 
},
{
 "date":          13258,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.10063525662 
},
{
 "date":          13259,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1005705374985 
},
{
 "date":          13262,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1005902145105 
},
{
 "date":          13263,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09723385715994 
},
{
 "date":          13264,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09624473593781 
},
{
 "date":          13265,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09678452255796 
},
{
 "date":          13266,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09697757671628 
},
{
 "date":          13269,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09539139633639 
},
{
 "date":          13270,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0909942713981 
},
{
 "date":          13271,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09006858546532 
},
{
 "date":          13272,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08618762401973 
},
{
 "date":          13273,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08408283418769 
},
{
 "date":          13276,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08379352768986 
},
{
 "date":          13277,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08365012633289 
},
{
 "date":          13278,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0837932253058 
},
{
 "date":          13279,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07795238074127 
},
{
 "date":          13280,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0745844721101 
},
{
 "date":          13283,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07495019994196 
},
{
 "date":          13284,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07618539328077 
},
{
 "date":          13285,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0771531378336 
},
{
 "date":          13286,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0769974308966 
},
{
 "date":          13287,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07343760819748 
},
{
 "date":          13290,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07451351525044 
},
{
 "date":          13291,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07241619893534 
},
{
 "date":          13292,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07341634813713 
},
{
 "date":          13293,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06951898653934 
},
{
 "date":          13294,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07071575704195 
},
{
 "date":          13298,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06882429681388 
},
{
 "date":          13299,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06851507076527 
},
{
 "date":          13300,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06835341357974 
},
{
 "date":          13301,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06822125155457 
},
{
 "date":          13304,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06384195049006 
},
{
 "date":          13305,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06374625558041 
},
{
 "date":          13306,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06244560166025 
},
{
 "date":          13307,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06208695117166 
},
{
 "date":          13308,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06187080571379 
},
{
 "date":          13311,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06096412664553 
},
{
 "date":          13312,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06095693893482 
},
{
 "date":          13313,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06170303991338 
},
{
 "date":          13314,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05972097642913 
},
{
 "date":          13315,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05828147977648 
},
{
 "date":          13318,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05709415030179 
},
{
 "date":          13319,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05727367949718 
},
{
 "date":          13320,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05770325680063 
},
{
 "date":          13321,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05848762541745 
},
{
 "date":          13322,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05761962956498 
},
{
 "date":          13325,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05651379625728 
},
{
 "date":          13326,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05499206771665 
},
{
 "date":          13327,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05264337712676 
},
{
 "date":          13328,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05322346212612 
},
{
 "date":          13329,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05219505015947 
},
{
 "date":          13332,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0510215312642 
},
{
 "date":          13334,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05118899643736 
},
{
 "date":          13335,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05140372368746 
},
{
 "date":          13336,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05139925053844 
},
{
 "date":          13339,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05182397136587 
},
{
 "date":          13340,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05057304264898 
},
{
 "date":          13341,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05043632533364 
},
{
 "date":          13342,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04777996526658 
},
{
 "date":          13343,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04454985612547 
},
{
 "date":          13346,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04441121314296 
},
{
 "date":          13347,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04159637754416 
},
{
 "date":          13348,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03671769541973 
},
{
 "date":          13349,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03549054086147 
},
{
 "date":          13350,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03529770774942 
},
{
 "date":          13353,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03385027000108 
},
{
 "date":          13354,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03470221611605 
},
{
 "date":          13355,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03409986368482 
},
{
 "date":          13356,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0331705854504 
},
{
 "date":          13357,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03205243534463 
},
{
 "date":          13360,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02581509324939 
},
{
 "date":          13361,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02228623273752 
},
{
 "date":          13362,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02122340350029 
},
{
 "date":          13363,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01901287200347 
},
{
 "date":          13364,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01858219173742 
},
{
 "date":          13367,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01686401850645 
},
{
 "date":          13368,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01660807601812 
},
{
 "date":          13369,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01461528852004 
},
{
 "date":          13370,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01421955237547 
},
{
 "date":          13371,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01218618638514 
},
{
 "date":          13374,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01201091178674 
},
{
 "date":          13375,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0110203262434 
},
{
 "date":          13376,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01098529903811 
},
{
 "date":          13377,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01076030238543 
},
{
 "date":          13378,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01051237214386 
},
{
 "date":          13381,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01064204643835 
},
{
 "date":          13382,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01051554918081 
},
{
 "date":          13383,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.009636684236016 
},
{
 "date":          13384,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.009816005440482 
},
{
 "date":          13385,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.009596196308082 
},
{
 "date":          13388,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0088246898234 
},
{
 "date":          13389,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008724619194401 
},
{
 "date":          13390,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008819132675861 
},
{
 "date":          13391,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00842527504492 
},
{
 "date":          13392,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008316972331161 
},
{
 "date":          13396,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008002542807902 
},
{
 "date":          13397,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008316113378575 
},
{
 "date":          13398,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008269981713071 
},
{
 "date":          13399,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008286276853517 
},
{
 "date":          13402,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008143938952615 
},
{
 "date":          13403,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008512642514061 
},
{
 "date":          13404,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008013773448439 
},
{
 "date":          13405,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007349500596037 
},
{
 "date":          13406,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006923090225164 
},
{
 "date":          13409,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007103634179186 
},
{
 "date":          13410,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007251242272595 
},
{
 "date":          13411,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007059953158513 
},
{
 "date":          13412,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007005252693242 
},
{
 "date":          13413,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00706081481924 
},
{
 "date":          13416,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007143398409591 
},
{
 "date":          13417,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007003898248242 
},
{
 "date":          13418,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006881478776543 
},
{
 "date":          13419,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006900440788559 
},
{
 "date":          13420,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006815903467941 
},
{
 "date":          13423,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006329966293319 
},
{
 "date":          13424,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005813139597204 
},
{
 "date":          13425,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006433233386502 
},
{
 "date":          13426,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006148474692717 
},
{
 "date":          13427,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005986569659958 
},
{
 "date":          13430,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006483115716536 
},
{
 "date":          13431,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006492249456955 
},
{
 "date":          13432,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006632025093965 
},
{
 "date":          13433,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005693914351097 
},
{
 "date":          13434,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005493275539814 
},
{
 "date":          13437,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005441776655371 
},
{
 "date":          13438,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005898194238826 
},
{
 "date":          13439,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005861914475124 
},
{
 "date":          13440,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005677453173971 
},
{
 "date":          13441,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.004967087303915 
},
{
 "date":          13444,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005007644462267 
},
{
 "date":          13445,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.004920232197973 
},
{
 "date":          13446,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005073248209322 
},
{
 "date":          13447,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00490935941074 
},
{
 "date":          13448,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.004139697439207 
},
{
 "date":          13451,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002567153670322 
},
{
 "date":          13452,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002249743475232 
},
{
 "date":          13453,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002222246531963 
},
{
 "date":          13454,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002202010584726 
},
{
 "date":          13455,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002301026996607 
},
{
 "date":          13458,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002306640047454 
},
{
 "date":          13459,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001693564278109 
},
{
 "date":          13460,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001706499735208 
},
{
 "date":          13461,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001436393026595 
},
{
 "date":          13462,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001244167992975 
},
{
 "date":          13465,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001165523764005 
},
{
 "date":          13466,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0007800734079202 
},
{
 "date":          13467,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.000756845636272 
},
{
 "date":          13468,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0007326672453122 
},
{
 "date":          13469,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0006412803622811 
},
{
 "date":          13472,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0006460327980779 
},
{
 "date":          13473,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.000692491518982 
},
{
 "date":          13474,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0007029208761618 
},
{
 "date":          13476,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0006007587196792 
},
{
 "date":          13479,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0002197717791936 
},
{
 "date":          13480,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001759864069002 
},
{
 "date":          13481,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001906088105437 
},
{
 "date":          13482,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001103601112119 
},
{
 "date":          13483,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001111994861958 
},
{
 "date":          13486,
"fund": "HSGFX",
"measure": "R_sq",
"value": 9.463231888062e-05 
},
{
 "date":          13487,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001186730976882 
},
{
 "date":          13488,
"fund": "HSGFX",
"measure": "R_sq",
"value": 3.322233872758e-05 
},
{
 "date":          13489,
"fund": "HSGFX",
"measure": "R_sq",
"value": 9.774815405017e-06 
},
{
 "date":          13490,
"fund": "HSGFX",
"measure": "R_sq",
"value": 4.037806269297e-06 
},
{
 "date":          13493,
"fund": "HSGFX",
"measure": "R_sq",
"value": 1.709409317224e-06 
},
{
 "date":          13494,
"fund": "HSGFX",
"measure": "R_sq",
"value": 7.835500877334e-08 
},
{
 "date":          13495,
"fund": "HSGFX",
"measure": "R_sq",
"value": 7.481306880108e-07 
},
{
 "date":          13496,
"fund": "HSGFX",
"measure": "R_sq",
"value": 1.559019054346e-06 
},
{
 "date":          13497,
"fund": "HSGFX",
"measure": "R_sq",
"value": 2.744479595646e-06 
},
{
 "date":          13500,
"fund": "HSGFX",
"measure": "R_sq",
"value": 2.68861689454e-07 
},
{
 "date":          13501,
"fund": "HSGFX",
"measure": "R_sq",
"value": 9.362912808398e-08 
},
{
 "date":          13502,
"fund": "HSGFX",
"measure": "R_sq",
"value": 1.831706418239e-05 
},
{
 "date":          13503,
"fund": "HSGFX",
"measure": "R_sq",
"value": 2.101197960435e-05 
},
{
 "date":          13504,
"fund": "HSGFX",
"measure": "R_sq",
"value": 1.982412831804e-05 
},
{
 "date":          13508,
"fund": "HSGFX",
"measure": "R_sq",
"value": 3.871840126654e-05 
},
{
 "date":          13509,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0003330829167271 
},
{
 "date":          13510,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0007231810611701 
},
{
 "date":          13511,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0008413796510877 
},
{
 "date":          13516,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0008341398896076 
},
{
 "date":          13517,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0009196182568041 
},
{
 "date":          13518,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001116981595869 
},
{
 "date":          13521,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001207937444684 
},
{
 "date":          13522,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001224240825267 
},
{
 "date":          13523,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001279806379567 
},
{
 "date":          13524,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.001574609792005 
},
{
 "date":          13525,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002170020084655 
},
{
 "date":          13529,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002624146325528 
},
{
 "date":          13530,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002601645536202 
},
{
 "date":          13531,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003233661917324 
},
{
 "date":          13532,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003550375731531 
},
{
 "date":          13535,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003678319149002 
},
{
 "date":          13536,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003903088352485 
},
{
 "date":          13537,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.004582591566775 
},
{
 "date":          13538,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005501675094462 
},
{
 "date":          13539,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.006900269265735 
},
{
 "date":          13542,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007589203066515 
},
{
 "date":          13543,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008444747854066 
},
{
 "date":          13544,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008558250356383 
},
{
 "date":          13545,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008604904017859 
},
{
 "date":          13546,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008672619315185 
},
{
 "date":          13549,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008566952460965 
},
{
 "date":          13550,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008655173259821 
},
{
 "date":          13551,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.009068233784936 
},
{
 "date":          13552,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.009681606245772 
},
{
 "date":          13553,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01057335470974 
},
{
 "date":          13556,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01090043279008 
},
{
 "date":          13557,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01096370968631 
},
{
 "date":          13558,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01165599742514 
},
{
 "date":          13559,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01165874995891 
},
{
 "date":          13560,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01091818170012 
},
{
 "date":          13564,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01114534310108 
},
{
 "date":          13565,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01193383980759 
},
{
 "date":          13566,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01359562779431 
},
{
 "date":          13567,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01477026320417 
},
{
 "date":          13570,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01516458386104 
},
{
 "date":          13571,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03226983528986 
},
{
 "date":          13572,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03283270451847 
},
{
 "date":          13573,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03215231994332 
},
{
 "date":          13574,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03452804510427 
},
{
 "date":          13577,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03458451624218 
},
{
 "date":          13578,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03693573249378 
},
{
 "date":          13579,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03689991395493 
},
{
 "date":          13580,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03430947026299 
},
{
 "date":          13581,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0353276680559 
},
{
 "date":          13584,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03639648949644 
},
{
 "date":          13585,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0351481394132 
},
{
 "date":          13586,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0358718141797 
},
{
 "date":          13587,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03630332523826 
},
{
 "date":          13588,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03669919425706 
},
{
 "date":          13591,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03594191362507 
},
{
 "date":          13592,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03493423537622 
},
{
 "date":          13593,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03679993061152 
},
{
 "date":          13594,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03680714788614 
},
{
 "date":          13595,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03782559012456 
},
{
 "date":          13598,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03944194702949 
},
{
 "date":          13599,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0393123048447 
},
{
 "date":          13600,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0396031233594 
},
{
 "date":          13601,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03924149181918 
},
{
 "date":          13602,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03993288856171 
},
{
 "date":          13605,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04031055657896 
},
{
 "date":          13606,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04120982085317 
},
{
 "date":          13607,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04124135100443 
},
{
 "date":          13608,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04089193963711 
},
{
 "date":          13612,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04021917470687 
},
{
 "date":          13613,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04140638654513 
},
{
 "date":          13614,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.041842883028 
},
{
 "date":          13615,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04390227525001 
},
{
 "date":          13616,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04414908286063 
},
{
 "date":          13619,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04839874956276 
},
{
 "date":          13620,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04890872148201 
},
{
 "date":          13621,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04846897451106 
},
{
 "date":          13622,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05012017198161 
},
{
 "date":          13623,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05262024089299 
},
{
 "date":          13626,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05297649457009 
},
{
 "date":          13627,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05259605295738 
},
{
 "date":          13628,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05389688607311 
},
{
 "date":          13629,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05211866287433 
},
{
 "date":          13630,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05291500573871 
},
{
 "date":          13633,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05559328874558 
},
{
 "date":          13634,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06048472278643 
},
{
 "date":          13635,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06258203325766 
},
{
 "date":          13636,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06311967348583 
},
{
 "date":          13637,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06299814413627 
},
{
 "date":          13640,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0615398722026 
},
{
 "date":          13641,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06145968609012 
},
{
 "date":          13642,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06434784503728 
},
{
 "date":          13643,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0725716380565 
},
{
 "date":          13644,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07419940542766 
},
{
 "date":          13647,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07473688701214 
},
{
 "date":          13648,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07707897606603 
},
{
 "date":          13649,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0782266756276 
},
{
 "date":          13650,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07847862636477 
},
{
 "date":          13651,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08048460184577 
},
{
 "date":          13654,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08066870185716 
},
{
 "date":          13655,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08019155389307 
},
{
 "date":          13656,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08093796826477 
},
{
 "date":          13657,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08474051039458 
},
{
 "date":          13658,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08578889921413 
},
{
 "date":          13662,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08619484133512 
},
{
 "date":          13663,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08805071571496 
},
{
 "date":          13664,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08821993881611 
},
{
 "date":          13665,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0886894675351 
},
{
 "date":          13668,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08866424055943 
},
{
 "date":          13669,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08949638966923 
},
{
 "date":          13670,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09178873546599 
},
{
 "date":          13671,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09829532867851 
},
{
 "date":          13672,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1018529340001 
},
{
 "date":          13675,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1017266079581 
},
{
 "date":          13676,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1044542578897 
},
{
 "date":          13677,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1120561646219 
},
{
 "date":          13678,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1134047747015 
},
{
 "date":          13679,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1145452257681 
},
{
 "date":          13682,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1151876728523 
},
{
 "date":          13683,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1144849390938 
},
{
 "date":          13684,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1172602655455 
},
{
 "date":          13685,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1171071640237 
},
{
 "date":          13686,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1186688051679 
},
{
 "date":          13689,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1205587299878 
},
{
 "date":          13690,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1209141945592 
},
{
 "date":          13691,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1220451946164 
},
{
 "date":          13692,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1220889150986 
},
{
 "date":          13693,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1225537392924 
},
{
 "date":          13696,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.124469681695 
},
{
 "date":          13697,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.12486548157 
},
{
 "date":          13699,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1236816601126 
},
{
 "date":          13700,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.122960462431 
},
{
 "date":          13703,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1233622404292 
},
{
 "date":          13704,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1283912062049 
},
{
 "date":          13705,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1274409108771 
},
{
 "date":          13706,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1345487743364 
},
{
 "date":          13707,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1344817026253 
},
{
 "date":          13710,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1348541740913 
},
{
 "date":          13711,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1344142261124 
},
{
 "date":          13712,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1345297947083 
},
{
 "date":          13713,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1352664510435 
},
{
 "date":          13714,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1413830218524 
},
{
 "date":          13717,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.141770783365 
},
{
 "date":          13718,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1559578755422 
},
{
 "date":          13719,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1557753358388 
},
{
 "date":          13720,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1632639047986 
},
{
 "date":          13721,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1688578640972 
},
{
 "date":          13724,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1694694728831 
},
{
 "date":          13725,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1740573904158 
},
{
 "date":          13726,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1735484826198 
},
{
 "date":          13727,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1723461869974 
},
{
 "date":          13728,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1793308137493 
},
{
 "date":          13731,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1836817937202 
},
{
 "date":          13732,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1850005034672 
},
{
 "date":          13733,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.192072148487 
},
{
 "date":          13734,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1791153455788 
},
{
 "date":          13735,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1760876802575 
},
{
 "date":          13738,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1790126942151 
},
{
 "date":          13739,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1813808330337 
},
{
 "date":          13740,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1797099106498 
},
{
 "date":          13741,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1766163382038 
},
{
 "date":          13742,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1631727245121 
},
{
 "date":          13745,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1632879779119 
},
{
 "date":          13746,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1628038869873 
},
{
 "date":          13747,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1632394401268 
},
{
 "date":          13748,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1642892716595 
},
{
 "date":          13749,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1622372000963 
},
{
 "date":          13752,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.162595580399 
},
{
 "date":          13753,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1688172874486 
},
{
 "date":          13754,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1609130381518 
},
{
 "date":          13755,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1611039475706 
},
{
 "date":          13756,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1589821797958 
},
{
 "date":          13760,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1611506828597 
},
{
 "date":          13761,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.164554656173 
},
{
 "date":          13762,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1666541482937 
},
{
 "date":          13763,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1667817272055 
},
{
 "date":          13766,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1655703823253 
},
{
 "date":          13767,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1674245826685 
},
{
 "date":          13768,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1677900926263 
},
{
 "date":          13769,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1671202245967 
},
{
 "date":          13770,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1664624906274 
},
{
 "date":          13773,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1693987949162 
},
{
 "date":          13774,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1732952890531 
},
{
 "date":          13775,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1741689120838 
},
{
 "date":          13776,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1748949447208 
},
{
 "date":          13777,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1750801076313 
},
{
 "date":          13780,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1757033413295 
},
{
 "date":          13781,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1760137301942 
},
{
 "date":          13782,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1769131720306 
},
{
 "date":          13783,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1775801929423 
},
{
 "date":          13784,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1776827661572 
},
{
 "date":          13787,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1842942426363 
},
{
 "date":          13788,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1883224525248 
},
{
 "date":          13789,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1885558875154 
},
{
 "date":          13790,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1880646173153 
},
{
 "date":          13791,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1845841612279 
},
{
 "date":          13794,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1847379014645 
},
{
 "date":          13795,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1867179493978 
},
{
 "date":          13796,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1863139389581 
},
{
 "date":          13797,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1834264355901 
},
{
 "date":          13798,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1830235526815 
},
{
 "date":          13801,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1869561695648 
},
{
 "date":          13802,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1855204220972 
},
{
 "date":          13803,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1857879216829 
},
{
 "date":          13804,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1854008300228 
},
{
 "date":          13805,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1958342107516 
},
{
 "date":          13808,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1960773429831 
},
{
 "date":          13809,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1983776087378 
},
{
 "date":          13810,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1973104876844 
},
{
 "date":          13811,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.197467609089 
},
{
 "date":          13812,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2015065050371 
},
{
 "date":          13815,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2019328818403 
},
{
 "date":          13816,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2012569477047 
},
{
 "date":          13817,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2031649014732 
},
{
 "date":          13818,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2159499552491 
},
{
 "date":          13819,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2152602948449 
},
{
 "date":          13822,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2150657476477 
},
{
 "date":          13823,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2171793635465 
},
{
 "date":          13824,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2285745847983 
},
{
 "date":          13825,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2255247210353 
},
{
 "date":          13826,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2204734858898 
},
{
 "date":          13829,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2186312334112 
},
{
 "date":          13830,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2201739104545 
},
{
 "date":          13831,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2194471605144 
},
{
 "date":          13832,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2193931767835 
},
{
 "date":          13833,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.217703078998 
},
{
 "date":          13836,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2237580396301 
},
{
 "date":          13837,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2238250310317 
},
{
 "date":          13838,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2273065079834 
},
{
 "date":          13840,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2292824282103 
},
{
 "date":          13843,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2345446551971 
},
{
 "date":          13844,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2373374289202 
},
{
 "date":          13845,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2371193202703 
},
{
 "date":          13846,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2370602988916 
},
{
 "date":          13847,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2381047858564 
},
{
 "date":          13850,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2373791626832 
},
{
 "date":          13851,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.237768870708 
},
{
 "date":          13852,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.239537298301 
},
{
 "date":          13853,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2441409073425 
},
{
 "date":          13854,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2438696185717 
},
{
 "date":          13857,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2449712019963 
},
{
 "date":          13858,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2529334893844 
},
{
 "date":          13859,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2529045853278 
},
{
 "date":          13860,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2531660794053 
},
{
 "date":          13861,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2546928563483 
},
{
 "date":          13864,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.255449376862 
},
{
 "date":          13865,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2565402648453 
},
{
 "date":          13866,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2564854018585 
},
{
 "date":          13867,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2562657725773 
},
{
 "date":          13868,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2594464732924 
},
{
 "date":          13871,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2610056303452 
},
{
 "date":          13873,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2608305495246 
},
{
 "date":          13874,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.265210131536 
},
{
 "date":          13875,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.269915061557 
},
{
 "date":          13878,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2713295762827 
},
{
 "date":          13880,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2704954430186 
},
{
 "date":          13881,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2706422028121 
},
{
 "date":          13882,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2669022295258 
},
{
 "date":          13885,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2651741624115 
},
{
 "date":          13886,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2653575209884 
},
{
 "date":          13887,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2666907930554 
},
{
 "date":          13888,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2655278072142 
},
{
 "date":          13889,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2362165174721 
},
{
 "date":          13892,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2336643318778 
},
{
 "date":          13893,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2274873223659 
},
{
 "date":          13894,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2276634493674 
},
{
 "date":          13895,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2315711152516 
},
{
 "date":          13896,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2322809098111 
},
{
 "date":          13900,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2321261906078 
},
{
 "date":          13901,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2344361340613 
},
{
 "date":          13902,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2305197464668 
},
{
 "date":          13903,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2251805573719 
},
{
 "date":          13906,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2224955235622 
},
{
 "date":          13907,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2229574865648 
},
{
 "date":          13908,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2229163684015 
},
{
 "date":          13909,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2190418538185 
},
{
 "date":          13910,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2204742235931 
},
{
 "date":          13913,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2166806321838 
},
{
 "date":          13914,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2204808655001 
},
{
 "date":          13915,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2207938718859 
},
{
 "date":          13916,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2204046375913 
},
{
 "date":          13917,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2179991061283 
},
{
 "date":          13920,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2136873063726 
},
{
 "date":          13921,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2145893368429 
},
{
 "date":          13922,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2149693491679 
},
{
 "date":          13923,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2099928376164 
},
{
 "date":          13924,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2099732482662 
},
{
 "date":          13928,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2088671947516 
},
{
 "date":          13929,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2063644236811 
},
{
 "date":          13930,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2086625227784 
},
{
 "date":          13931,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2100399056354 
},
{
 "date":          13934,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2103576744756 
},
{
 "date":          13935,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2100798139145 
},
{
 "date":          13936,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2092337732409 
},
{
 "date":          13937,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.204982242428 
},
{
 "date":          13938,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2086039124362 
},
{
 "date":          13941,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2088975014146 
},
{
 "date":          13942,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2091059040521 
},
{
 "date":          13943,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2084717132582 
},
{
 "date":          13944,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2060847839733 
},
{
 "date":          13945,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2058423539472 
},
{
 "date":          13948,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2035625451414 
},
{
 "date":          13949,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2078825090017 
},
{
 "date":          13950,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2089284125489 
},
{
 "date":          13951,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2080000498628 
},
{
 "date":          13952,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2087524232786 
},
{
 "date":          13955,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2040633463345 
},
{
 "date":          13956,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2081666061062 
},
{
 "date":          13957,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2056461782138 
},
{
 "date":          13958,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2078200971912 
},
{
 "date":          13962,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2024285731324 
},
{
 "date":          13963,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2028106123664 
},
{
 "date":          13964,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2030311764474 
},
{
 "date":          13965,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2001453569448 
},
{
 "date":          13966,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2007296562722 
},
{
 "date":          13969,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2013659263359 
},
{
 "date":          13970,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2114912636975 
},
{
 "date":          13971,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2115356746405 
},
{
 "date":          13972,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2115338669637 
},
{
 "date":          13973,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2120879218002 
},
{
 "date":          13976,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2116503737849 
},
{
 "date":          13977,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2112701691131 
},
{
 "date":          13978,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2125260845243 
},
{
 "date":          13979,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2095994842708 
},
{
 "date":          13980,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2108715951599 
},
{
 "date":          13983,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2089482773695 
},
{
 "date":          13984,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2088977648881 
},
{
 "date":          13985,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.213919317269 
},
{
 "date":          13986,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2133442751752 
},
{
 "date":          13987,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2154231738646 
},
{
 "date":          13990,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2144802967744 
},
{
 "date":          13991,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2162557206021 
},
{
 "date":          13992,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2155256818169 
},
{
 "date":          13993,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2162026861295 
},
{
 "date":          13994,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2165777682855 
},
{
 "date":          13997,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2161618288722 
},
{
 "date":          13998,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2166603647101 
},
{
 "date":          13999,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.216171478355 
},
{
 "date":          14000,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2156370455793 
},
{
 "date":          14001,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2157228472274 
},
{
 "date":          14004,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2154659701763 
},
{
 "date":          14005,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2162909703944 
},
{
 "date":          14006,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2183013295983 
},
{
 "date":          14007,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.217382804406 
},
{
 "date":          14008,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2178646363409 
},
{
 "date":          14011,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2186379029333 
},
{
 "date":          14012,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2215573984981 
},
{
 "date":          14013,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2210601993568 
},
{
 "date":          14014,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2199713926627 
},
{
 "date":          14015,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2217662550806 
},
{
 "date":          14018,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2215099127174 
},
{
 "date":          14019,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2200468968143 
},
{
 "date":          14020,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2206139801607 
},
{
 "date":          14021,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2205966633286 
},
{
 "date":          14022,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2233551401493 
},
{
 "date":          14026,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2231258901474 
},
{
 "date":          14027,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2225121903548 
},
{
 "date":          14028,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2220461539352 
},
{
 "date":          14029,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2224412463798 
},
{
 "date":          14032,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2220411851631 
},
{
 "date":          14033,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2223397506999 
},
{
 "date":          14034,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2207792608368 
},
{
 "date":          14035,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2256667509181 
},
{
 "date":          14036,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.233889787846 
},
{
 "date":          14039,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2339342193592 
},
{
 "date":          14040,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2349313410555 
},
{
 "date":          14041,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.235176903306 
},
{
 "date":          14042,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2353701784005 
},
{
 "date":          14043,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2352325579959 
},
{
 "date":          14046,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2352688219354 
},
{
 "date":          14047,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2361098015678 
},
{
 "date":          14048,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2354262851523 
},
{
 "date":          14049,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2341104999479 
},
{
 "date":          14050,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2355922404287 
},
{
 "date":          14053,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2336812221156 
},
{
 "date":          14054,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2338794973571 
},
{
 "date":          14055,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2351308873992 
},
{
 "date":          14056,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2318063099371 
},
{
 "date":          14057,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2302221683317 
},
{
 "date":          14060,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.230174819617 
},
{
 "date":          14061,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.230648116153 
},
{
 "date":          14062,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2360085701818 
},
{
 "date":          14063,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2351273656856 
},
{
 "date":          14067,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2359104616145 
},
{
 "date":          14068,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2351959108967 
},
{
 "date":          14069,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2373665835692 
},
{
 "date":          14070,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2383550321096 
},
{
 "date":          14071,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2329213398939 
},
{
 "date":          14074,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2295570756731 
},
{
 "date":          14075,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2294925065579 
},
{
 "date":          14076,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2206151607907 
},
{
 "date":          14077,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2103000105122 
},
{
 "date":          14078,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2120969155192 
},
{
 "date":          14081,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.211302639547 
},
{
 "date":          14082,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2055151176449 
},
{
 "date":          14083,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2054802682549 
},
{
 "date":          14084,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2072087437323 
},
{
 "date":          14085,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2075471616866 
},
{
 "date":          14088,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.210300114509 
},
{
 "date":          14089,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2101041623872 
},
{
 "date":          14090,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2132857057325 
},
{
 "date":          14091,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2152447379038 
},
{
 "date":          14092,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2156007386654 
},
{
 "date":          14095,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2171627605613 
},
{
 "date":          14096,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2100679268882 
},
{
 "date":          14097,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2096895336679 
},
{
 "date":          14098,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2116954282379 
},
{
 "date":          14099,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2054041847729 
},
{
 "date":          14102,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2052075246961 
},
{
 "date":          14103,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2073103959266 
},
{
 "date":          14104,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2073736141641 
},
{
 "date":          14105,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2069473544612 
},
{
 "date":          14106,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2071299136001 
},
{
 "date":          14109,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2080379526943 
},
{
 "date":          14110,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2089143850307 
},
{
 "date":          14111,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2093077769308 
},
{
 "date":          14112,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2091226296299 
},
{
 "date":          14113,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2102806530051 
},
{
 "date":          14116,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2118270206421 
},
{
 "date":          14117,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2120626111526 
},
{
 "date":          14118,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2122713818669 
},
{
 "date":          14119,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2148159135098 
},
{
 "date":          14120,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2136485551349 
},
{
 "date":          14124,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2153060713557 
},
{
 "date":          14125,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2137047220955 
},
{
 "date":          14126,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2150815529241 
},
{
 "date":          14127,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2152536388429 
},
{
 "date":          14130,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2176406896204 
},
{
 "date":          14131,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.225166033645 
},
{
 "date":          14132,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.224733581364 
},
{
 "date":          14133,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2258001375389 
},
{
 "date":          14134,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2260109382546 
},
{
 "date":          14137,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2384163483083 
},
{
 "date":          14138,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2400295632834 
},
{
 "date":          14139,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2476038218592 
},
{
 "date":          14140,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2573904996635 
},
{
 "date":          14141,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.278097571803 
},
{
 "date":          14144,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2843111644163 
},
{
 "date":          14145,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2851707701404 
},
{
 "date":          14146,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.285202959745 
},
{
 "date":          14147,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2856528151857 
},
{
 "date":          14148,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2853589244074 
},
{
 "date":          14151,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2669706022933 
},
{
 "date":          14152,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2372461177012 
},
{
 "date":          14153,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2366727691261 
},
{
 "date":          14154,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2184837780257 
},
{
 "date":          14155,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2124276395665 
},
{
 "date":          14158,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1805002685738 
},
{
 "date":          14159,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1357822902289 
},
{
 "date":          14160,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1338210057248 
},
{
 "date":          14161,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08331207075222 
},
{
 "date":          14162,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08146761837002 
},
{
 "date":          14165,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00611680486699 
},
{
 "date":          14166,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.00497123339117 
},
{
 "date":          14167,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0005805011081814 
},
{
 "date":          14168,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002426545104458 
},
{
 "date":          14169,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.002440299525038 
},
{
 "date":          14172,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.003250945424405 
},
{
 "date":          14173,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005430379909562 
},
{
 "date":          14174,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008567891639203 
},
{
 "date":          14175,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008336605897226 
},
{
 "date":          14176,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008596534598535 
},
{
 "date":          14179,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01045386911199 
},
{
 "date":          14180,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04326227621698 
},
{
 "date":          14181,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04274268449088 
},
{
 "date":          14182,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04603712190437 
},
{
 "date":          14183,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04684722961736 
},
{
 "date":          14186,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04673015882291 
},
{
 "date":          14187,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05157317086117 
},
{
 "date":          14188,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0638048972893 
},
{
 "date":          14189,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07270445397792 
},
{
 "date":          14190,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07419934409218 
},
{
 "date":          14193,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07529127915387 
},
{
 "date":          14194,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07748600856286 
},
{
 "date":          14195,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08985478065157 
},
{
 "date":          14196,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.112867072488 
},
{
 "date":          14197,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1232538567873 
},
{
 "date":          14200,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1259108858084 
},
{
 "date":          14201,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1257437420963 
},
{
 "date":          14202,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1373689972096 
},
{
 "date":          14203,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1451593976523 
},
{
 "date":          14204,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.154786485679 
},
{
 "date":          14207,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1697524262824 
},
{
 "date":          14208,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1678929772684 
},
{
 "date":          14209,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1739919879973 
},
{
 "date":          14211,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1737944221648 
},
{
 "date":          14214,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2008731001629 
},
{
 "date":          14215,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.205676686523 
},
{
 "date":          14216,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2091123980499 
},
{
 "date":          14217,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2108265383921 
},
{
 "date":          14218,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2170427389203 
},
{
 "date":          14221,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2234512923827 
},
{
 "date":          14222,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.225178746701 
},
{
 "date":          14223,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2248980153849 
},
{
 "date":          14224,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2265899955334 
},
{
 "date":          14225,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.227098293124 
},
{
 "date":          14228,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2275934928553 
},
{
 "date":          14229,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2319228561893 
},
{
 "date":          14230,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.231547256356 
},
{
 "date":          14231,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2318779468748 
},
{
 "date":          14232,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2319213684229 
},
{
 "date":          14235,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2330316035289 
},
{
 "date":          14236,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2333362945013 
},
{
 "date":          14237,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2332942825359 
},
{
 "date":          14239,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2330842932597 
},
{
 "date":          14242,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2331301811626 
},
{
 "date":          14243,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2345010703427 
},
{
 "date":          14244,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2351330392479 
},
{
 "date":          14246,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2392673355859 
},
{
 "date":          14249,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2391927232193 
},
{
 "date":          14250,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2395620126558 
},
{
 "date":          14251,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2417341422125 
},
{
 "date":          14252,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.241868870927 
},
{
 "date":          14253,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2437399526969 
},
{
 "date":          14256,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2454755044691 
},
{
 "date":          14257,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2447361874085 
},
{
 "date":          14258,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2479179030581 
},
{
 "date":          14259,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2474832660406 
},
{
 "date":          14260,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2483194932613 
},
{
 "date":          14264,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2501968163325 
},
{
 "date":          14265,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2429118087516 
},
{
 "date":          14266,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2399382316509 
},
{
 "date":          14267,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2398120796451 
},
{
 "date":          14270,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2400395838408 
},
{
 "date":          14271,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2402809677573 
},
{
 "date":          14272,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2384250660748 
},
{
 "date":          14273,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2352603506944 
},
{
 "date":          14274,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2326885894951 
},
{
 "date":          14277,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2328640835835 
},
{
 "date":          14278,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2335936164511 
},
{
 "date":          14279,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.233931915162 
},
{
 "date":          14280,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2349006602592 
},
{
 "date":          14281,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2332445184619 
},
{
 "date":          14284,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2331205486816 
},
{
 "date":          14285,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2310389139867 
},
{
 "date":          14286,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2297034252583 
},
{
 "date":          14287,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2297272948319 
},
{
 "date":          14288,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2297140609307 
},
{
 "date":          14292,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2256444924021 
},
{
 "date":          14293,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2258382870087 
},
{
 "date":          14294,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2256055548724 
},
{
 "date":          14295,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2312141547963 
},
{
 "date":          14298,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2298118647585 
},
{
 "date":          14299,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2293238755868 
},
{
 "date":          14300,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2302474963797 
},
{
 "date":          14301,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2309241021014 
},
{
 "date":          14302,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2281316807824 
},
{
 "date":          14305,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2271937930283 
},
{
 "date":          14306,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2265771160119 
},
{
 "date":          14307,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2280833393425 
},
{
 "date":          14308,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2251047715482 
},
{
 "date":          14309,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2244044834333 
},
{
 "date":          14312,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2248098884926 
},
{
 "date":          14313,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2309253050839 
},
{
 "date":          14314,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2309982009009 
},
{
 "date":          14315,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2295747983604 
},
{
 "date":          14316,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2295921960286 
},
{
 "date":          14319,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.230292818604 
},
{
 "date":          14320,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2306403600651 
},
{
 "date":          14321,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2306189936966 
},
{
 "date":          14322,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2301565900306 
},
{
 "date":          14323,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2289574474988 
},
{
 "date":          14326,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2146458382127 
},
{
 "date":          14327,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2131169835387 
},
{
 "date":          14328,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2119200310353 
},
{
 "date":          14329,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2137353073412 
},
{
 "date":          14330,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2126871190306 
},
{
 "date":          14333,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2063538438719 
},
{
 "date":          14334,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2063452201188 
},
{
 "date":          14335,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2059391830572 
},
{
 "date":          14336,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2061841039588 
},
{
 "date":          14337,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2063181745078 
},
{
 "date":          14340,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2064768324957 
},
{
 "date":          14341,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2071075725272 
},
{
 "date":          14342,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2085547790872 
},
{
 "date":          14343,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2082219907032 
},
{
 "date":          14347,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2080689319588 
},
{
 "date":          14348,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2063855826313 
},
{
 "date":          14349,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.204502714108 
},
{
 "date":          14350,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2051456199296 
},
{
 "date":          14351,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.205155923293 
},
{
 "date":          14354,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2003505952902 
},
{
 "date":          14355,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1990835095726 
},
{
 "date":          14356,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1976963676408 
},
{
 "date":          14357,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.197240228847 
},
{
 "date":          14358,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1973360735962 
},
{
 "date":          14361,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1974702953972 
},
{
 "date":          14362,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1976861826603 
},
{
 "date":          14363,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1938386889643 
},
{
 "date":          14364,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1936807120889 
},
{
 "date":          14365,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1930393546193 
},
{
 "date":          14368,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.190617436555 
},
{
 "date":          14369,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.192238385688 
},
{
 "date":          14370,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1888041948603 
},
{
 "date":          14371,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.18903922132 
},
{
 "date":          14372,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1800777745664 
},
{
 "date":          14375,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1773895337745 
},
{
 "date":          14376,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1774329455705 
},
{
 "date":          14377,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1768249498402 
},
{
 "date":          14378,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1771324885976 
},
{
 "date":          14379,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1767851702769 
},
{
 "date":          14382,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1770248996842 
},
{
 "date":          14383,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1775754785441 
},
{
 "date":          14384,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1778463825538 
},
{
 "date":          14385,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1778461513679 
},
{
 "date":          14386,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1782355961519 
},
{
 "date":          14390,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1793694158878 
},
{
 "date":          14391,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1785854872422 
},
{
 "date":          14392,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1769604634932 
},
{
 "date":          14393,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1763165261758 
},
{
 "date":          14396,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1785810405892 
},
{
 "date":          14397,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1797365009777 
},
{
 "date":          14398,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1800778207517 
},
{
 "date":          14399,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1785034995472 
},
{
 "date":          14400,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1789440359484 
},
{
 "date":          14403,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1800301219456 
},
{
 "date":          14404,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.180206703091 
},
{
 "date":          14405,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1804616351157 
},
{
 "date":          14406,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1797411636631 
},
{
 "date":          14407,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1799238990337 
},
{
 "date":          14410,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1789148372794 
},
{
 "date":          14411,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1788702875618 
},
{
 "date":          14412,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1788998928075 
},
{
 "date":          14413,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1784545851309 
},
{
 "date":          14414,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1785135218867 
},
{
 "date":          14417,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1761959442598 
},
{
 "date":          14418,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.175965007029 
},
{
 "date":          14419,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1762596253465 
},
{
 "date":          14420,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1752881627005 
},
{
 "date":          14421,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1754032472772 
},
{
 "date":          14424,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1748271958021 
},
{
 "date":          14425,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1745369140121 
},
{
 "date":          14426,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1745973975769 
},
{
 "date":          14427,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1740821468895 
},
{
 "date":          14431,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1740323199095 
},
{
 "date":          14432,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1746320499648 
},
{
 "date":          14433,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1744116460976 
},
{
 "date":          14434,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1744392453667 
},
{
 "date":          14435,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1744752953368 
},
{
 "date":          14438,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1740664248469 
},
{
 "date":          14439,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1743377511752 
},
{
 "date":          14440,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1760908044385 
},
{
 "date":          14441,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.176467544902 
},
{
 "date":          14442,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1789266718799 
},
{
 "date":          14445,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1792181692112 
},
{
 "date":          14446,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1806456950645 
},
{
 "date":          14447,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1816482271172 
},
{
 "date":          14448,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1805049814251 
},
{
 "date":          14449,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1811481556532 
},
{
 "date":          14452,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1809699780955 
},
{
 "date":          14453,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1806251681432 
},
{
 "date":          14454,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.182328094519 
},
{
 "date":          14455,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1828297482085 
},
{
 "date":          14456,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1827792223144 
},
{
 "date":          14459,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1854361006246 
},
{
 "date":          14460,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1852280624408 
},
{
 "date":          14461,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1853714161877 
},
{
 "date":          14462,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1855068771628 
},
{
 "date":          14463,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1864186887082 
},
{
 "date":          14466,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1864923714811 
},
{
 "date":          14467,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1861565640451 
},
{
 "date":          14468,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.185196981105 
},
{
 "date":          14469,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1850893715103 
},
{
 "date":          14470,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1853144188883 
},
{
 "date":          14473,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1838100998076 
},
{
 "date":          14474,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1838864800232 
},
{
 "date":          14475,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1837063901349 
},
{
 "date":          14476,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1832272250846 
},
{
 "date":          14477,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1838511667376 
},
{
 "date":          14480,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1835841799348 
},
{
 "date":          14481,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1836808226153 
},
{
 "date":          14482,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1835913152582 
},
{
 "date":          14483,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1840589743033 
},
{
 "date":          14484,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1847742877336 
},
{
 "date":          14487,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1849423626774 
},
{
 "date":          14488,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.182735042409 
},
{
 "date":          14489,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1826488490576 
},
{
 "date":          14490,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1832935656623 
},
{
 "date":          14491,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1828778812201 
},
{
 "date":          14495,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1830226371714 
},
{
 "date":          14496,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1830219433737 
},
{
 "date":          14497,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1830883885792 
},
{
 "date":          14498,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1847367324056 
},
{
 "date":          14501,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1850203632285 
},
{
 "date":          14502,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1850008504409 
},
{
 "date":          14503,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1847288756554 
},
{
 "date":          14504,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1848583932906 
},
{
 "date":          14505,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1848861691268 
},
{
 "date":          14508,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1847734394213 
},
{
 "date":          14509,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1843076991179 
},
{
 "date":          14510,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1841199686416 
},
{
 "date":          14511,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1846198781446 
},
{
 "date":          14512,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1848196670435 
},
{
 "date":          14515,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1827431642054 
},
{
 "date":          14516,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1826729165054 
},
{
 "date":          14517,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1822780431733 
},
{
 "date":          14518,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1794339480804 
},
{
 "date":          14519,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1800223329059 
},
{
 "date":          14522,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.179504239637 
},
{
 "date":          14523,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1792934756345 
},
{
 "date":          14524,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1792300405596 
},
{
 "date":          14525,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1798976257504 
},
{
 "date":          14526,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1799943847388 
},
{
 "date":          14529,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.179606431394 
},
{
 "date":          14530,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1796414147784 
},
{
 "date":          14531,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1809371622146 
},
{
 "date":          14532,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.180924063341 
},
{
 "date":          14533,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1807714424279 
},
{
 "date":          14536,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1807883308753 
},
{
 "date":          14537,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1810142298702 
},
{
 "date":          14538,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1825774259642 
},
{
 "date":          14539,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1827336809011 
},
{
 "date":          14540,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1813801158503 
},
{
 "date":          14543,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1808373364211 
},
{
 "date":          14544,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1839638044688 
},
{
 "date":          14545,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1831621079038 
},
{
 "date":          14546,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1826662263475 
},
{
 "date":          14547,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1818629641724 
},
{
 "date":          14550,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1849784838364 
},
{
 "date":          14551,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1851145381267 
},
{
 "date":          14552,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1850147282149 
},
{
 "date":          14553,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1844168377444 
},
{
 "date":          14554,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1857969293601 
},
{
 "date":          14557,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1855343750789 
},
{
 "date":          14558,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1857924642501 
},
{
 "date":          14559,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1856351211018 
},
{
 "date":          14560,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1872786269071 
},
{
 "date":          14561,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1874158644984 
},
{
 "date":          14564,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1880949709833 
},
{
 "date":          14565,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.188330113878 
},
{
 "date":          14566,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1898734744023 
},
{
 "date":          14567,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.190347357272 
},
{
 "date":          14568,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1914596743708 
},
{
 "date":          14571,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1909341974915 
},
{
 "date":          14572,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1914969591097 
},
{
 "date":          14573,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.191569090685 
},
{
 "date":          14575,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1914773256675 
},
{
 "date":          14578,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1919122116136 
},
{
 "date":          14579,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1935723036091 
},
{
 "date":          14580,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1936553160228 
},
{
 "date":          14581,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.194168375234 
},
{
 "date":          14582,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1965008416572 
},
{
 "date":          14585,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.196491552204 
},
{
 "date":          14586,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1963639783168 
},
{
 "date":          14587,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1970569448109 
},
{
 "date":          14588,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1976295353337 
},
{
 "date":          14589,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1978670948796 
},
{
 "date":          14592,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1978689869921 
},
{
 "date":          14593,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1979158402867 
},
{
 "date":          14594,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1988857747077 
},
{
 "date":          14595,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1993478538931 
},
{
 "date":          14596,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1992721476233 
},
{
 "date":          14599,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2001096950423 
},
{
 "date":          14600,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2000908440204 
},
{
 "date":          14601,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2003007850297 
},
{
 "date":          14602,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2003652950942 
},
{
 "date":          14606,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2003661830712 
},
{
 "date":          14607,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2009094453796 
},
{
 "date":          14608,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2012156077413 
},
{
 "date":          14609,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2016547820669 
},
{
 "date":          14613,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.200760703099 
},
{
 "date":          14614,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2006314370746 
},
{
 "date":          14615,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.199959018117 
},
{
 "date":          14616,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1996923043302 
},
{
 "date":          14617,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1996613379097 
},
{
 "date":          14620,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.199707609965 
},
{
 "date":          14621,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2012910175277 
},
{
 "date":          14622,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.201649493923 
},
{
 "date":          14623,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2016555306598 
},
{
 "date":          14624,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2027393332729 
},
{
 "date":          14628,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2018541239354 
},
{
 "date":          14629,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.201447474838 
},
{
 "date":          14630,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1975901697593 
},
{
 "date":          14631,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1973391677229 
},
{
 "date":          14634,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1972259215568 
},
{
 "date":          14635,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1968366898166 
},
{
 "date":          14636,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.197405287891 
},
{
 "date":          14637,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1958460565115 
},
{
 "date":          14638,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1978979073555 
},
{
 "date":          14641,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1977163123327 
},
{
 "date":          14642,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1977375835839 
},
{
 "date":          14643,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.198301879219 
},
{
 "date":          14644,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1956514247321 
},
{
 "date":          14645,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1958592403165 
},
{
 "date":          14648,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1953759491955 
},
{
 "date":          14649,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1947025210335 
},
{
 "date":          14650,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1947173838917 
},
{
 "date":          14651,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1946937191497 
},
{
 "date":          14652,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1945632154418 
},
{
 "date":          14656,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1944913927798 
},
{
 "date":          14657,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1945232551908 
},
{
 "date":          14658,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1946757776943 
},
{
 "date":          14659,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1946968042386 
},
{
 "date":          14662,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1948380710023 
},
{
 "date":          14663,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.194383506627 
},
{
 "date":          14664,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1963694528728 
},
{
 "date":          14665,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1963698606186 
},
{
 "date":          14666,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1965852418016 
},
{
 "date":          14669,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1967873757612 
},
{
 "date":          14670,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1970418957932 
},
{
 "date":          14671,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1971102579911 
},
{
 "date":          14672,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.197332926531 
},
{
 "date":          14673,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2000355069128 
},
{
 "date":          14676,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2005083418061 
},
{
 "date":          14677,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2004279472621 
},
{
 "date":          14678,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2012302986168 
},
{
 "date":          14679,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2010335395389 
},
{
 "date":          14680,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2045541012238 
},
{
 "date":          14683,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2050644124965 
},
{
 "date":          14684,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2062833757559 
},
{
 "date":          14685,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2059127606614 
},
{
 "date":          14686,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2059331973798 
},
{
 "date":          14687,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2060785131438 
},
{
 "date":          14690,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2059362802798 
},
{
 "date":          14691,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.205675384746 
},
{
 "date":          14692,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2058154623251 
},
{
 "date":          14693,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2101981694492 
},
{
 "date":          14694,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2101923006295 
},
{
 "date":          14697,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2098892055282 
},
{
 "date":          14698,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2099236158574 
},
{
 "date":          14699,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.21006934659 
},
{
 "date":          14700,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2099102336176 
},
{
 "date":          14704,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2103594416645 
},
{
 "date":          14705,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2102249723916 
},
{
 "date":          14706,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2111161716149 
},
{
 "date":          14707,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2110994949589 
},
{
 "date":          14708,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2112689436363 
},
{
 "date":          14711,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2133671929534 
},
{
 "date":          14712,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2133827282985 
},
{
 "date":          14713,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2137564767275 
},
{
 "date":          14714,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2139659660856 
},
{
 "date":          14715,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2118642458457 
},
{
 "date":          14718,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2117311892303 
},
{
 "date":          14719,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2117729100561 
},
{
 "date":          14720,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2123753079597 
},
{
 "date":          14721,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2123488154013 
},
{
 "date":          14722,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2123269550904 
},
{
 "date":          14725,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2120360466008 
},
{
 "date":          14726,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2085789431587 
},
{
 "date":          14727,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2077450134422 
},
{
 "date":          14728,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2068602444827 
},
{
 "date":          14729,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.206479596074 
},
{
 "date":          14732,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2064054207975 
},
{
 "date":          14733,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2024770195443 
},
{
 "date":          14734,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2021447402701 
},
{
 "date":          14735,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1980413278006 
},
{
 "date":          14736,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1970982233601 
},
{
 "date":          14739,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1885830836511 
},
{
 "date":          14740,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1885143299239 
},
{
 "date":          14741,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1875414509897 
},
{
 "date":          14742,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1873582111462 
},
{
 "date":          14743,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1855779574499 
},
{
 "date":          14746,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1863231189523 
},
{
 "date":          14747,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1853284303575 
},
{
 "date":          14748,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1860554784849 
},
{
 "date":          14749,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1815729298359 
},
{
 "date":          14750,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1809716128834 
},
{
 "date":          14753,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1802002384378 
},
{
 "date":          14754,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1800780416676 
},
{
 "date":          14755,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1801707264075 
},
{
 "date":          14756,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1794080211335 
},
{
 "date":          14757,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1788166053535 
},
{
 "date":          14761,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1799719502766 
},
{
 "date":          14762,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1820406305121 
},
{
 "date":          14763,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1821966464563 
},
{
 "date":          14764,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1797616930601 
},
{
 "date":          14767,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1793795080795 
},
{
 "date":          14768,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1790023735889 
},
{
 "date":          14769,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1791382755124 
},
{
 "date":          14770,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1775322542574 
},
{
 "date":          14771,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1775904299537 
},
{
 "date":          14774,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1776027824507 
},
{
 "date":          14775,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1759935412029 
},
{
 "date":          14776,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1768317178662 
},
{
 "date":          14777,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1768542126016 
},
{
 "date":          14778,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.176995758488 
},
{
 "date":          14781,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1769123483023 
},
{
 "date":          14782,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1763267431695 
},
{
 "date":          14783,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.17622736175 
},
{
 "date":          14784,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1758241908311 
},
{
 "date":          14785,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1756080443198 
},
{
 "date":          14788,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1776749927747 
},
{
 "date":          14789,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1746379235159 
},
{
 "date":          14790,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.175058861011 
},
{
 "date":          14791,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1749689605489 
},
{
 "date":          14792,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1759604066022 
},
{
 "date":          14796,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.176635749723 
},
{
 "date":          14797,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1739185666726 
},
{
 "date":          14798,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1734374293901 
},
{
 "date":          14799,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1738320427868 
},
{
 "date":          14802,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1736025499099 
},
{
 "date":          14803,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1728294440736 
},
{
 "date":          14804,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1728140256509 
},
{
 "date":          14805,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1732871465487 
},
{
 "date":          14806,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1710854929841 
},
{
 "date":          14809,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.170909815752 
},
{
 "date":          14810,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1716833565641 
},
{
 "date":          14811,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.171949184937 
},
{
 "date":          14812,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1709834243407 
},
{
 "date":          14813,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1714916701303 
},
{
 "date":          14816,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1726996477343 
},
{
 "date":          14817,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1738285367409 
},
{
 "date":          14818,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1737353099649 
},
{
 "date":          14819,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1746713679082 
},
{
 "date":          14820,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1745370989783 
},
{
 "date":          14823,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1733448173348 
},
{
 "date":          14824,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1741662808828 
},
{
 "date":          14825,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1739278127536 
},
{
 "date":          14826,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.173892111064 
},
{
 "date":          14827,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1742377539582 
},
{
 "date":          14830,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1741319708717 
},
{
 "date":          14831,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1737489615872 
},
{
 "date":          14832,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1709958910918 
},
{
 "date":          14833,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.171339706254 
},
{
 "date":          14834,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1717145700818 
},
{
 "date":          14837,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1721076382574 
},
{
 "date":          14838,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1715269789601 
},
{
 "date":          14839,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1720078730907 
},
{
 "date":          14840,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1711760980268 
},
{
 "date":          14841,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.171360088326 
},
{
 "date":          14844,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1714139456336 
},
{
 "date":          14845,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1719714261513 
},
{
 "date":          14846,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1720838310253 
},
{
 "date":          14847,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1724334742027 
},
{
 "date":          14848,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.171468732771 
},
{
 "date":          14851,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1725057347731 
},
{
 "date":          14852,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1725556536492 
},
{
 "date":          14853,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1713464678976 
},
{
 "date":          14854,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1752016226712 
},
{
 "date":          14855,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1744862967463 
},
{
 "date":          14859,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1739804953325 
},
{
 "date":          14860,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1739850835398 
},
{
 "date":          14861,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1802669725306 
},
{
 "date":          14862,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.181169207608 
},
{
 "date":          14865,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1855259002669 
},
{
 "date":          14866,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1911394651763 
},
{
 "date":          14867,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2047206233404 
},
{
 "date":          14868,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2094003619878 
},
{
 "date":          14869,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2100975151459 
},
{
 "date":          14872,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2088373328176 
},
{
 "date":          14873,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2094877951723 
},
{
 "date":          14874,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2091852367342 
},
{
 "date":          14875,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2167405746178 
},
{
 "date":          14876,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2121105665226 
},
{
 "date":          14879,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.211944002943 
},
{
 "date":          14880,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2111403262197 
},
{
 "date":          14881,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2104718387598 
},
{
 "date":          14882,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2071378174849 
},
{
 "date":          14883,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2014334952536 
},
{
 "date":          14886,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2007819496128 
},
{
 "date":          14887,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1898640152996 
},
{
 "date":          14888,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1894518263981 
},
{
 "date":          14889,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.160078292211 
},
{
 "date":          14890,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1602580706182 
},
{
 "date":          14893,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1406142026019 
},
{
 "date":          14894,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1350550130521 
},
{
 "date":          14895,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1347363130666 
},
{
 "date":          14896,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1334778469823 
},
{
 "date":          14897,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1294714638966 
},
{
 "date":          14900,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1242342566985 
},
{
 "date":          14901,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1237688198765 
},
{
 "date":          14902,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1233358362183 
},
{
 "date":          14903,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1204996715799 
},
{
 "date":          14904,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0876975322927 
},
{
 "date":          14907,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08837297321974 
},
{
 "date":          14908,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08565877552692 
},
{
 "date":          14909,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08495838263941 
},
{
 "date":          14910,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08503839684213 
},
{
 "date":          14911,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08105873054045 
},
{
 "date":          14914,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.07060954109848 
},
{
 "date":          14915,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06298424973552 
},
{
 "date":          14916,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06184586279131 
},
{
 "date":          14917,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05854212322999 
},
{
 "date":          14918,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05661529794709 
},
{
 "date":          14921,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04681859801133 
},
{
 "date":          14922,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03063671644276 
},
{
 "date":          14923,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02244215794296 
},
{
 "date":          14924,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02048845349898 
},
{
 "date":          14925,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02004021266165 
},
{
 "date":          14928,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01317637245705 
},
{
 "date":          14929,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.008673573349903 
},
{
 "date":          14930,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.005077910832858 
},
{
 "date":          14931,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0008518143734266 
},
{
 "date":          14932,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0009558938130987 
},
{
 "date":          14935,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0001943638966914 
},
{
 "date":          14936,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.000130182323759 
},
{
 "date":          14937,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.007054346356424 
},
{
 "date":          14939,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01017636074635 
},
{
 "date":          14942,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01404470008281 
},
{
 "date":          14943,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.01615038477371 
},
{
 "date":          14944,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.02512403518321 
},
{
 "date":          14945,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.03810617320699 
},
{
 "date":          14946,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04193648720576 
},
{
 "date":          14949,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04176227513154 
},
{
 "date":          14950,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04544397135778 
},
{
 "date":          14951,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04624419701675 
},
{
 "date":          14952,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.04755622597345 
},
{
 "date":          14953,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05818294088309 
},
{
 "date":          14956,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05785284222682 
},
{
 "date":          14957,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05904289094031 
},
{
 "date":          14958,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.05916076161554 
},
{
 "date":          14959,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06216050126153 
},
{
 "date":          14960,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06337011732212 
},
{
 "date":          14963,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06325283638667 
},
{
 "date":          14964,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06340065197668 
},
{
 "date":          14965,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06446831664843 
},
{
 "date":          14966,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.06744242889359 
},
{
 "date":          14970,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.0689418169947 
},
{
 "date":          14971,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.084206449242 
},
{
 "date":          14972,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08408588894956 
},
{
 "date":          14973,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.08701138791057 
},
{
 "date":          14974,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09440719133712 
},
{
 "date":          14977,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.09551644822085 
},
{
 "date":          14978,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1046828924346 
},
{
 "date":          14979,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1113483446634 
},
{
 "date":          14980,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.111638109596 
},
{
 "date":          14981,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1254839699969 
},
{
 "date":          14984,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1280511994188 
},
{
 "date":          14985,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1288585345015 
},
{
 "date":          14986,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1444998718366 
},
{
 "date":          14987,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1398326186429 
},
{
 "date":          14988,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.137848902162 
},
{
 "date":          14992,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1377501998368 
},
{
 "date":          14993,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1390265722889 
},
{
 "date":          14994,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1403681079666 
},
{
 "date":          14995,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1405059656117 
},
{
 "date":          14998,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1390090883166 
},
{
 "date":          14999,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1367059078607 
},
{
 "date":          15000,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1369019156922 
},
{
 "date":          15001,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1403176541919 
},
{
 "date":          15002,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1425418553347 
},
{
 "date":          15005,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1470767597417 
},
{
 "date":          15006,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1486396736908 
},
{
 "date":          15007,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1489450668692 
},
{
 "date":          15008,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1529343189936 
},
{
 "date":          15009,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1526370377868 
},
{
 "date":          15012,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1548152404326 
},
{
 "date":          15013,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1551807362135 
},
{
 "date":          15014,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1545596321577 
},
{
 "date":          15015,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1548371154648 
},
{
 "date":          15016,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.154683979501 
},
{
 "date":          15019,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1541228979388 
},
{
 "date":          15020,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1556067018369 
},
{
 "date":          15021,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1612850253653 
},
{
 "date":          15022,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1630945749378 
},
{
 "date":          15023,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1672346255337 
},
{
 "date":          15027,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1678891454406 
},
{
 "date":          15028,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1749978329333 
},
{
 "date":          15029,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1744910544843 
},
{
 "date":          15030,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1840666874419 
},
{
 "date":          15033,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1854453650791 
},
{
 "date":          15034,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1891846430053 
},
{
 "date":          15035,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.1907654054661 
},
{
 "date":          15036,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2423804790823 
},
{
 "date":          15037,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2429878045749 
},
{
 "date":          15040,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2481522349947 
},
{
 "date":          15041,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2494280752853 
},
{
 "date":          15042,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2536440203171 
},
{
 "date":          15043,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2649179225093 
},
{
 "date":          15044,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.268415063224 
},
{
 "date":          15047,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2674616870712 
},
{
 "date":          15048,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2676355530888 
},
{
 "date":          15049,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2613474668456 
},
{
 "date":          15050,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2604773620364 
},
{
 "date":          15051,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2599670539933 
},
{
 "date":          15054,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.278429868815 
},
{
 "date":          15055,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2765823989454 
},
{
 "date":          15056,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2681781971411 
},
{
 "date":          15057,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2691720529308 
},
{
 "date":          15058,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2698154590068 
},
{
 "date":          15061,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2777990800006 
},
{
 "date":          15062,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2782687335224 
},
{
 "date":          15063,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2778817495729 
},
{
 "date":          15064,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2862189259901 
},
{
 "date":          15065,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2926175484378 
},
{
 "date":          15068,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3040311698358 
},
{
 "date":          15069,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3040176215084 
},
{
 "date":          15070,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3013649084445 
},
{
 "date":          15071,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3010438297605 
},
{
 "date":          15072,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3082065451308 
},
{
 "date":          15075,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3086713655986 
},
{
 "date":          15076,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3051484965301 
},
{
 "date":          15077,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3038972654447 
},
{
 "date":          15078,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.304897372125 
},
{
 "date":          15079,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3049910930856 
},
{
 "date":          15082,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3073045874619 
},
{
 "date":          15083,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3065478033714 
},
{
 "date":          15084,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3049910999999 
},
{
 "date":          15085,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2994455395633 
},
{
 "date":          15089,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3004756462624 
},
{
 "date":          15090,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3013426680018 
},
{
 "date":          15091,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3009527563261 
},
{
 "date":          15092,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3009583294845 
},
{
 "date":          15093,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3012963750472 
},
{
 "date":          15096,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.304166375633 
},
{
 "date":          15097,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3002169252604 
},
{
 "date":          15098,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.2962412764736 
},
{
 "date":          15099,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.297973009524 
},
{
 "date":          15100,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3011704168196 
},
{
 "date":          15103,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3027400562241 
},
{
 "date":          15104,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3022121266965 
},
{
 "date":          15105,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3147441596754 
},
{
 "date":          15106,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3148669714105 
},
{
 "date":          15107,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3163602925926 
},
{
 "date":          15110,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3182924241044 
},
{
 "date":          15111,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3175441523656 
},
{
 "date":          15112,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3340328618114 
},
{
 "date":          15113,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3329249563369 
},
{
 "date":          15114,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3300510885524 
},
{
 "date":          15117,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3294989413597 
},
{
 "date":          15118,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3613233187818 
},
{
 "date":          15119,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3614016721368 
},
{
 "date":          15120,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3607468826643 
},
{
 "date":          15121,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3597528970543 
},
{
 "date":          15125,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3604126532983 
},
{
 "date":          15126,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3656194289151 
},
{
 "date":          15127,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3671871447736 
},
{
 "date":          15128,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.366666870819 
},
{
 "date":          15131,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3674636371539 
},
{
 "date":          15132,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3674426415612 
},
{
 "date":          15133,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3637754171022 
},
{
 "date":          15134,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3652632811992 
},
{
 "date":          15135,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3669377341156 
},
{
 "date":          15138,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3665147671545 
},
{
 "date":          15139,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3674291943338 
},
{
 "date":          15140,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3663792588251 
},
{
 "date":          15141,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3675755566896 
},
{
 "date":          15142,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3689941551779 
},
{
 "date":          15145,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3664254161742 
},
{
 "date":          15146,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3662370192202 
},
{
 "date":          15147,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.365863985344 
},
{
 "date":          15148,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3647308523109 
},
{
 "date":          15149,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3654412204834 
},
{
 "date":          15152,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3668101241342 
},
{
 "date":          15153,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3673504785115 
},
{
 "date":          15154,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3672717562811 
},
{
 "date":          15155,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3688747580952 
},
{
 "date":          15156,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3683710195742 
},
{
 "date":          15160,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3685710629271 
},
{
 "date":          15161,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3723047100889 
},
{
 "date":          15162,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.3745016839513 
},
{
 "date":          15163,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.392709590542 
},
{
 "date":          15166,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4007652432971 
},
{
 "date":          15167,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4011249277527 
},
{
 "date":          15168,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4039162023726 
},
{
 "date":          15169,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4046392779424 
},
{
 "date":          15170,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.405489405262 
},
{
 "date":          15173,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4045709870629 
},
{
 "date":          15174,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4060027385104 
},
{
 "date":          15175,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4061049141722 
},
{
 "date":          15176,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4090671160836 
},
{
 "date":          15177,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.409029049624 
},
{
 "date":          15180,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.407023508099 
},
{
 "date":          15181,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4095190713785 
},
{
 "date":          15182,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4095602074001 
},
{
 "date":          15183,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4096102158451 
},
{
 "date":          15184,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4123454844334 
},
{
 "date":          15187,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4101587669068 
},
{
 "date":          15188,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.416858047132 
},
{
 "date":          15189,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4208776156469 
},
{
 "date":          15190,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4279313751878 
},
{
 "date":          15191,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4272275543259 
},
{
 "date":          15194,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4379289978146 
},
{
 "date":          15195,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4433912556913 
},
{
 "date":          15196,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4473270042436 
},
{
 "date":          15197,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4386502893731 
},
{
 "date":          15198,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4387173628646 
},
{
 "date":          15201,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4416192270966 
},
{
 "date":          15202,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4439798057016 
},
{
 "date":          15203,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4435745975299 
},
{
 "date":          15204,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4579465853758 
},
{
 "date":          15205,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4588851979857 
},
{
 "date":          15208,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4579068741819 
},
{
 "date":          15209,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4366466204411 
},
{
 "date":          15210,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.439837441513 
},
{
 "date":          15211,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4322391204222 
},
{
 "date":          15212,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4281896452601 
},
{
 "date":          15215,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4329224537427 
},
{
 "date":          15216,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4326177924445 
},
{
 "date":          15217,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4338932101787 
},
{
 "date":          15218,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4349865438369 
},
{
 "date":          15219,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4389853354502 
},
{
 "date":          15223,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4398127798372 
},
{
 "date":          15224,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4420409643506 
},
{
 "date":          15225,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.442764640778 
},
{
 "date":          15226,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4483339515413 
},
{
 "date":          15229,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4486920520559 
},
{
 "date":          15230,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4478321822032 
},
{
 "date":          15231,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4477929804493 
},
{
 "date":          15232,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4494992463406 
},
{
 "date":          15233,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4494476122492 
},
{
 "date":          15236,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4495776071378 
},
{
 "date":          15237,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4530596555937 
},
{
 "date":          15238,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4567277060712 
},
{
 "date":          15239,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4653284992836 
},
{
 "date":          15240,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4636939100306 
},
{
 "date":          15243,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4621871906499 
},
{
 "date":          15244,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.465350363868 
},
{
 "date":          15245,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4676140940684 
},
{
 "date":          15246,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4680988037343 
},
{
 "date":          15247,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4720997242998 
},
{
 "date":          15250,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4739676703531 
},
{
 "date":          15251,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4747071645496 
},
{
 "date":          15252,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4742209187391 
},
{
 "date":          15253,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4752948120385 
},
{
 "date":          15254,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4734630587663 
},
{
 "date":          15257,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4802548925661 
},
{
 "date":          15258,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4802603078416 
},
{
 "date":          15259,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4810879004216 
},
{
 "date":          15260,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.482825689731 
},
{
 "date":          15261,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4873362504154 
},
{
 "date":          15264,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4908267346395 
},
{
 "date":          15265,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4926255873965 
},
{
 "date":          15266,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4930019113124 
},
{
 "date":          15267,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4963191044763 
},
{
 "date":          15268,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4955620167883 
},
{
 "date":          15271,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.4985932774234 
},
{
 "date":          15272,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5024702374322 
},
{
 "date":          15273,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5027111004947 
},
{
 "date":          15274,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5098976435861 
},
{
 "date":          15275,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.509945553261 
},
{
 "date":          15278,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5146243308027 
},
{
 "date":          15279,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5194364465473 
},
{
 "date":          15280,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5243503184794 
},
{
 "date":          15281,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5256417026397 
},
{
 "date":          15282,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5256835488504 
},
{
 "date":          15285,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5272699016686 
},
{
 "date":          15286,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.528730740816 
},
{
 "date":          15287,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5376133287554 
},
{
 "date":          15288,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5398277010853 
},
{
 "date":          15289,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.540911495511 
},
{
 "date":          15292,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5420683318318 
},
{
 "date":          15293,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5427981297966 
},
{
 "date":          15294,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5426431490032 
},
{
 "date":          15295,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5444606848852 
},
{
 "date":          15296,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5466722616636 
},
{
 "date":          15299,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5488984033479 
},
{
 "date":          15300,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5492208639186 
},
{
 "date":          15301,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.554516310326 
},
{
 "date":          15303,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5544540828666 
},
{
 "date":          15306,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5513525226601 
},
{
 "date":          15307,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.551608276522 
},
{
 "date":          15308,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5558334342275 
},
{
 "date":          15309,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5561629367753 
},
{
 "date":          15310,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5551316111428 
},
{
 "date":          15313,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.556222627107 
},
{
 "date":          15314,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5560395119959 
},
{
 "date":          15315,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5564837114249 
},
{
 "date":          15316,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5592536907419 
},
{
 "date":          15317,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5607917656066 
},
{
 "date":          15320,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5620867955065 
},
{
 "date":          15321,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.560996783454 
},
{
 "date":          15322,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5625030091831 
},
{
 "date":          15323,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5626599665007 
},
{
 "date":          15324,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5630917046473 
},
{
 "date":          15327,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5633320467985 
},
{
 "date":          15328,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5675134305206 
},
{
 "date":          15329,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5674924148098 
},
{
 "date":          15330,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5678865511578 
},
{
 "date":          15331,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5685799431912 
},
{
 "date":          15335,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.567240172234 
},
{
 "date":          15336,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5676832541187 
},
{
 "date":          15337,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5682149757651 
},
{
 "date":          15338,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5682503778484 
},
{
 "date":          15342,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.568758710741 
},
{
 "date":          15343,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5682377047359 
},
{
 "date":          15344,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5678185414654 
},
{
 "date":          15345,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5684913597533 
},
{
 "date":          15348,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5685782163829 
},
{
 "date":          15349,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5701556475224 
},
{
 "date":          15350,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5694541020791 
},
{
 "date":          15351,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5695880380663 
},
{
 "date":          15352,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.57035201276 
},
{
 "date":          15356,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5728768069849 
},
{
 "date":          15357,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5744964398418 
},
{
 "date":          15358,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5746879276669 
},
{
 "date":          15359,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5741842404468 
},
{
 "date":          15362,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5730093931494 
},
{
 "date":          15363,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.57377859686 
},
{
 "date":          15364,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5741359826257 
},
{
 "date":          15365,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5749632624151 
},
{
 "date":          15366,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5748645956355 
},
{
 "date":          15369,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5747412323665 
},
{
 "date":          15370,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.574724248655 
},
{
 "date":          15371,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5741021669124 
},
{
 "date":          15372,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5739213475046 
},
{
 "date":          15373,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5750244795673 
},
{
 "date":          15376,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5761589385199 
},
{
 "date":          15377,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5761555536534 
},
{
 "date":          15378,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.575040903262 
},
{
 "date":          15379,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5749007009295 
},
{
 "date":          15380,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5751347488845 
},
{
 "date":          15383,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5755943222398 
},
{
 "date":          15384,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5760065706485 
},
{
 "date":          15385,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5766292242719 
},
{
 "date":          15386,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5785791638651 
},
{
 "date":          15387,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5782189409529 
},
{
 "date":          15391,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5772899546693 
},
{
 "date":          15392,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5803611707456 
},
{
 "date":          15393,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5804500255499 
},
{
 "date":          15394,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5804411447775 
},
{
 "date":          15397,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5804215303833 
},
{
 "date":          15398,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5816924319766 
},
{
 "date":          15399,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5819507632721 
},
{
 "date":          15400,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5821090039407 
},
{
 "date":          15401,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5823094715745 
},
{
 "date":          15404,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.582615708055 
},
{
 "date":          15405,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5839025756628 
},
{
 "date":          15406,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5840869043057 
},
{
 "date":          15407,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5844069610447 
},
{
 "date":          15408,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5843320447231 
},
{
 "date":          15411,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5840599382992 
},
{
 "date":          15412,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.585810798917 
},
{
 "date":          15413,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5863966953893 
},
{
 "date":          15414,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5862366985904 
},
{
 "date":          15415,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5880253864053 
},
{
 "date":          15418,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5879192310954 
},
{
 "date":          15419,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5879658145453 
},
{
 "date":          15420,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5878893703126 
},
{
 "date":          15421,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5881131273216 
},
{
 "date":          15422,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5881252488201 
},
{
 "date":          15425,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5886428217672 
},
{
 "date":          15426,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5889851017792 
},
{
 "date":          15427,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5891460608022 
},
{
 "date":          15428,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5887660416122 
},
{
 "date":          15429,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5887944308962 
},
{
 "date":          15432,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.58884283035 
},
{
 "date":          15433,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5889129383303 
},
{
 "date":          15434,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5891266073804 
},
{
 "date":          15435,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.588835584584 
},
{
 "date":          15439,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5890683022634 
},
{
 "date":          15440,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.590481528557 
},
{
 "date":          15441,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5906572848101 
},
{
 "date":          15442,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.590770966429 
},
{
 "date":          15443,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5915858740782 
},
{
 "date":          15446,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5952186806153 
},
{
 "date":          15447,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5959878974798 
},
{
 "date":          15448,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5961321357134 
},
{
 "date":          15449,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5932949065372 
},
{
 "date":          15450,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5952288685681 
},
{
 "date":          15453,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5949728847675 
},
{
 "date":          15454,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.594927638275 
},
{
 "date":          15455,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5955736327134 
},
{
 "date":          15456,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5925708216641 
},
{
 "date":          15457,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5926382264225 
},
{
 "date":          15460,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5889768997034 
},
{
 "date":          15461,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5885098319781 
},
{
 "date":          15462,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5813236431849 
},
{
 "date":          15463,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5815988362532 
},
{
 "date":          15464,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5822258116752 
},
{
 "date":          15467,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5825534036019 
},
{
 "date":          15468,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5809859082964 
},
{
 "date":          15469,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5817545102973 
},
{
 "date":          15470,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5807891637639 
},
{
 "date":          15471,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5802876166338 
},
{
 "date":          15474,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5787665123418 
},
{
 "date":          15475,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5783687251411 
},
{
 "date":          15476,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5777307243289 
},
{
 "date":          15477,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5800354179799 
},
{
 "date":          15478,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5822822091388 
},
{
 "date":          15481,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5919471340089 
},
{
 "date":          15482,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5910712850237 
},
{
 "date":          15483,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5900953553954 
},
{
 "date":          15484,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5921905726613 
},
{
 "date":          15485,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5948692480668 
},
{
 "date":          15489,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5978599860541 
},
{
 "date":          15490,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5991376313139 
},
{
 "date":          15491,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5981550700726 
},
{
 "date":          15492,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6016461718275 
},
{
 "date":          15495,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6034536376994 
},
{
 "date":          15496,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6045159140762 
},
{
 "date":          15497,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6070878246268 
},
{
 "date":          15498,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6050917692251 
},
{
 "date":          15499,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6051588414578 
},
{
 "date":          15502,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6062431270141 
},
{
 "date":          15503,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6069319767099 
},
{
 "date":          15504,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6081788051215 
},
{
 "date":          15505,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6071728603756 
},
{
 "date":          15506,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6075997553612 
},
{
 "date":          15509,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6081395213171 
},
{
 "date":          15510,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.608651762684 
},
{
 "date":          15511,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6086410700215 
},
{
 "date":          15512,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6087814691468 
},
{
 "date":          15513,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6097365937035 
},
{
 "date":          15516,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6114910438953 
},
{
 "date":          15517,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.611951074045 
},
{
 "date":          15518,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6122557080801 
},
{
 "date":          15519,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6120746490932 
},
{
 "date":          15520,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6149901123702 
},
{
 "date":          15523,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6144505480507 
},
{
 "date":          15524,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6148741697982 
},
{
 "date":          15526,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.616744687595 
},
{
 "date":          15527,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6173461266577 
},
{
 "date":          15530,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.617437600214 
},
{
 "date":          15531,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6185057853618 
},
{
 "date":          15532,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6176710998101 
},
{
 "date":          15533,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.617930053977 
},
{
 "date":          15534,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6208237170731 
},
{
 "date":          15537,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6195421182239 
},
{
 "date":          15538,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6195676742409 
},
{
 "date":          15539,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6201539959278 
},
{
 "date":          15540,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6219930499507 
},
{
 "date":          15541,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6224226507551 
},
{
 "date":          15544,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6277984344569 
},
{
 "date":          15545,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6286037983562 
},
{
 "date":          15546,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6280556144297 
},
{
 "date":          15547,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6288710968451 
},
{
 "date":          15548,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6312910686439 
},
{
 "date":          15551,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6314326429108 
},
{
 "date":          15552,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6304133442565 
},
{
 "date":          15553,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6304993404991 
},
{
 "date":          15554,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6285508499796 
},
{
 "date":          15555,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.628663545895 
},
{
 "date":          15558,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6283896851744 
},
{
 "date":          15559,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6290738225534 
},
{
 "date":          15560,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6290753990648 
},
{
 "date":          15561,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.628522851296 
},
{
 "date":          15562,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6293114139334 
},
{
 "date":          15565,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6277586106006 
},
{
 "date":          15566,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6277039186795 
},
{
 "date":          15567,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6274782378062 
},
{
 "date":          15568,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6274569873053 
},
{
 "date":          15569,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6289545297147 
},
{
 "date":          15572,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6294764047432 
},
{
 "date":          15573,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6292007095667 
},
{
 "date":          15574,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6295344295469 
},
{
 "date":          15575,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6300273255955 
},
{
 "date":          15576,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6317898231947 
},
{
 "date":          15579,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.633038415226 
},
{
 "date":          15580,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6324825770914 
},
{
 "date":          15581,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6313460641257 
},
{
 "date":          15582,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6318712975883 
},
{
 "date":          15583,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6319328518191 
},
{
 "date":          15587,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6325847896032 
},
{
 "date":          15588,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6316326910056 
},
{
 "date":          15589,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.633905576765 
},
{
 "date":          15590,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6324068606404 
},
{
 "date":          15593,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6326009051075 
},
{
 "date":          15594,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6326464404678 
},
{
 "date":          15595,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6316814362125 
},
{
 "date":          15596,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6328495169882 
},
{
 "date":          15597,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6326079401456 
},
{
 "date":          15600,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.632753799493 
},
{
 "date":          15601,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6308324021987 
},
{
 "date":          15602,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6305554143904 
},
{
 "date":          15603,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6322697912013 
},
{
 "date":          15604,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6321427938463 
},
{
 "date":          15607,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6322369525174 
},
{
 "date":          15608,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6329469079948 
},
{
 "date":          15609,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6326716022663 
},
{
 "date":          15610,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6308632333914 
},
{
 "date":          15611,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6318950852528 
},
{
 "date":          15614,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.631795635466 
},
{
 "date":          15615,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6314888863397 
},
{
 "date":          15616,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6316776498075 
},
{
 "date":          15617,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6319437646332 
},
{
 "date":          15618,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6317068026667 
},
{
 "date":          15621,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6315312694579 
},
{
 "date":          15622,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6319299993182 
},
{
 "date":          15623,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6315055475598 
},
{
 "date":          15624,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6305240686602 
},
{
 "date":          15625,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6302377484372 
},
{
 "date":          15628,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6304595736947 
},
{
 "date":          15629,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6307774000458 
},
{
 "date":          15630,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6305440719731 
},
{
 "date":          15631,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6303999725334 
},
{
 "date":          15632,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6319501479537 
},
{
 "date":          15635,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6318771068664 
},
{
 "date":          15636,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6327013012829 
},
{
 "date":          15637,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6327756426222 
},
{
 "date":          15638,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6324645061221 
},
{
 "date":          15639,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6327498795695 
},
{
 "date":          15644,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6315121698182 
},
{
 "date":          15645,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6321432884228 
},
{
 "date":          15646,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6327406220239 
},
{
 "date":          15649,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6323570484551 
},
{
 "date":          15650,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6320614331595 
},
{
 "date":          15651,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6340257115337 
},
{
 "date":          15652,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6337913501515 
},
{
 "date":          15653,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6341028481823 
},
{
 "date":          15656,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6329025044976 
},
{
 "date":          15657,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6335865759885 
},
{
 "date":          15658,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6342087780119 
},
{
 "date":          15659,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6341034780649 
},
{
 "date":          15660,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6353164190772 
},
{
 "date":          15663,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6361840612571 
},
{
 "date":          15664,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6349723092121 
},
{
 "date":          15665,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6348419410426 
},
{
 "date":          15667,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6352393808154 
},
{
 "date":          15670,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6347871909446 
},
{
 "date":          15671,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6330066147575 
},
{
 "date":          15672,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6331144366952 
},
{
 "date":          15673,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6328534028159 
},
{
 "date":          15674,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.633343849261 
},
{
 "date":          15677,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6332768214815 
},
{
 "date":          15678,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6330295540341 
},
{
 "date":          15679,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6327634721534 
},
{
 "date":          15680,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6326457584348 
},
{
 "date":          15681,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6329689820013 
},
{
 "date":          15684,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.63339088316 
},
{
 "date":          15685,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6334242630667 
},
{
 "date":          15686,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6338263766185 
},
{
 "date":          15687,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6338733185788 
},
{
 "date":          15688,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6347396958165 
},
{
 "date":          15691,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.635600788101 
},
{
 "date":          15692,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6364457115107 
},
{
 "date":          15693,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6368614077017 
},
{
 "date":          15694,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6373935493659 
},
{
 "date":          15695,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.63708158506 
},
{
 "date":          15698,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6372542251926 
},
{
 "date":          15700,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6367815325173 
},
{
 "date":          15701,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6372215780643 
},
{
 "date":          15702,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6371908168541 
},
{
 "date":          15705,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6385750051736 
},
{
 "date":          15707,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6417387596943 
},
{
 "date":          15708,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6430576212509 
},
{
 "date":          15709,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6436110760814 
},
{
 "date":          15712,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6431072009934 
},
{
 "date":          15713,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6429913724359 
},
{
 "date":          15714,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6423046973834 
},
{
 "date":          15715,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6425155089295 
},
{
 "date":          15716,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6424001722598 
},
{
 "date":          15719,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6424257035051 
},
{
 "date":          15720,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6414870301169 
},
{
 "date":          15721,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6417333490603 
},
{
 "date":          15722,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.642310207444 
},
{
 "date":          15723,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6424893560406 
},
{
 "date":          15727,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6424853476666 
},
{
 "date":          15728,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6418377154775 
},
{
 "date":          15729,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.641770172611 
},
{
 "date":          15730,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6389783809535 
},
{
 "date":          15733,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6399546256005 
},
{
 "date":          15734,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6381662850398 
},
{
 "date":          15735,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6380371238662 
},
{
 "date":          15736,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6396134460384 
},
{
 "date":          15737,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6400488080236 
},
{
 "date":          15740,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6412010758911 
},
{
 "date":          15741,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6416066263895 
},
{
 "date":          15742,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6413642344675 
},
{
 "date":          15743,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6408116686803 
},
{
 "date":          15744,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6416945791975 
},
{
 "date":          15747,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6415768141174 
},
{
 "date":          15748,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.641556743305 
},
{
 "date":          15749,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6423247955572 
},
{
 "date":          15750,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6422916158557 
},
{
 "date":          15751,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6428184913086 
},
{
 "date":          15755,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6407190874456 
},
{
 "date":          15756,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6455160710609 
},
{
 "date":          15757,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6457924700404 
},
{
 "date":          15758,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6459182369655 
},
{
 "date":          15761,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6468924047061 
},
{
 "date":          15762,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6456425467212 
},
{
 "date":          15763,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.646454074084 
},
{
 "date":          15764,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6462998041028 
},
{
 "date":          15765,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6460086248256 
},
{
 "date":          15768,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6478312750291 
},
{
 "date":          15769,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6470023551093 
},
{
 "date":          15770,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6469889494303 
},
{
 "date":          15771,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6452721182799 
},
{
 "date":          15772,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6453756234935 
},
{
 "date":          15775,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6459765705252 
},
{
 "date":          15776,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6451511934526 
},
{
 "date":          15777,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.644670496057 
},
{
 "date":          15778,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6452370255551 
},
{
 "date":          15779,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6444156281511 
},
{
 "date":          15782,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6435019970296 
},
{
 "date":          15783,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6440715620316 
},
{
 "date":          15784,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6431893156557 
},
{
 "date":          15785,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6443166592019 
},
{
 "date":          15786,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6441797927394 
},
{
 "date":          15789,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6444135868027 
},
{
 "date":          15790,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6443866435533 
},
{
 "date":          15791,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6459949101084 
},
{
 "date":          15792,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6447912024535 
},
{
 "date":          15796,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6449795036572 
},
{
 "date":          15797,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6445004743738 
},
{
 "date":          15798,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6452229653901 
},
{
 "date":          15799,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6448334460162 
},
{
 "date":          15800,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6449573425162 
},
{
 "date":          15803,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6451546031025 
},
{
 "date":          15804,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6453474762346 
},
{
 "date":          15805,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6459614409514 
},
{
 "date":          15806,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6464889785407 
},
{
 "date":          15807,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.646675360951 
},
{
 "date":          15810,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6484200851361 
},
{
 "date":          15811,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6498396377125 
},
{
 "date":          15812,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6508324480449 
},
{
 "date":          15813,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6536905034834 
},
{
 "date":          15814,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6550154625261 
},
{
 "date":          15817,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6550654532882 
},
{
 "date":          15818,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6553043048292 
},
{
 "date":          15819,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6551397576258 
},
{
 "date":          15820,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6546013442664 
},
{
 "date":          15821,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6546103934827 
},
{
 "date":          15824,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6546504006936 
},
{
 "date":          15825,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6545586246992 
},
{
 "date":          15826,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6532300003686 
},
{
 "date":          15827,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6512764299841 
},
{
 "date":          15828,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6516256054281 
},
{
 "date":          15831,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6514979061892 
},
{
 "date":          15832,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6516811264813 
},
{
 "date":          15833,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.650662461929 
},
{
 "date":          15834,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6525248282205 
},
{
 "date":          15835,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6510504755279 
},
{
 "date":          15838,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6515004482739 
},
{
 "date":          15839,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6516744967549 
},
{
 "date":          15840,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6536681410547 
},
{
 "date":          15841,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6522532860438 
},
{
 "date":          15842,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6529430541372 
},
{
 "date":          15845,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6526600019781 
},
{
 "date":          15846,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6534741673148 
},
{
 "date":          15847,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6522490188809 
},
{
 "date":          15848,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6527605357725 
},
{
 "date":          15849,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6525543552479 
},
{
 "date":          15853,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.652335225466 
},
{
 "date":          15854,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6499374628711 
},
{
 "date":          15855,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6488798767518 
},
{
 "date":          15856,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6512668753518 
},
{
 "date":          15859,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6501977819037 
},
{
 "date":          15860,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6504832923465 
},
{
 "date":          15861,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.652313718334 
},
{
 "date":          15862,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6530417385313 
},
{
 "date":          15863,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6546112270546 
},
{
 "date":          15866,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6545173910467 
},
{
 "date":          15867,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6549479140255 
},
{
 "date":          15868,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6540356250887 
},
{
 "date":          15869,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6547083421218 
},
{
 "date":          15870,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.654921073033 
},
{
 "date":          15873,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6565633114489 
},
{
 "date":          15874,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6576701024986 
},
{
 "date":          15875,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.657749548788 
},
{
 "date":          15876,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6615831864895 
},
{
 "date":          15877,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6614973311675 
},
{
 "date":          15880,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6618706082841 
},
{
 "date":          15881,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6620294750082 
},
{
 "date":          15882,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.662394188055 
},
{
 "date":          15883,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6611217771483 
},
{
 "date":          15884,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6619644594026 
},
{
 "date":          15887,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6618745319419 
},
{
 "date":          15888,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6617630345754 
},
{
 "date":          15889,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6612501446139 
},
{
 "date":          15891,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6611860978664 
},
{
 "date":          15894,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6594368138359 
},
{
 "date":          15895,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6593674361566 
},
{
 "date":          15896,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6593581332478 
},
{
 "date":          15897,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6595669046284 
},
{
 "date":          15898,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6590266525273 
},
{
 "date":          15901,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6590735651839 
},
{
 "date":          15902,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6577203660374 
},
{
 "date":          15903,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6585366477887 
},
{
 "date":          15904,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6585327229913 
},
{
 "date":          15905,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6585348032702 
},
{
 "date":          15908,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6597297526858 
},
{
 "date":          15909,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6595047325898 
},
{
 "date":          15910,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6609995938078 
},
{
 "date":          15911,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6612750732664 
},
{
 "date":          15912,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6611170696882 
},
{
 "date":          15915,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6632350660268 
},
{
 "date":          15916,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6617364291546 
},
{
 "date":          15917,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6608302155137 
},
{
 "date":          15918,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6586460038297 
},
{
 "date":          15919,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6576672077486 
},
{
 "date":          15922,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6592526540818 
},
{
 "date":          15923,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6665567882469 
},
{
 "date":          15924,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6657635564994 
},
{
 "date":          15925,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.686147628899 
},
{
 "date":          15926,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.686044807294 
},
{
 "date":          15929,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6836076510162 
},
{
 "date":          15930,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6823927039813 
},
{
 "date":          15931,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.685565394413 
},
{
 "date":          15932,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6777944215666 
},
{
 "date":          15933,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6775233575272 
},
{
 "date":          15936,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6789253740358 
},
{
 "date":          15937,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7132650192917 
},
{
 "date":          15938,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7132700318222 
},
{
 "date":          15939,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7204453499174 
},
{
 "date":          15940,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7278035194608 
},
{
 "date":          15943,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7286371897509 
},
{
 "date":          15944,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7291360968464 
},
{
 "date":          15945,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.728981424904 
},
{
 "date":          15946,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7289863106205 
},
{
 "date":          15947,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7284156507855 
},
{
 "date":          15951,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7281506112233 
},
{
 "date":          15952,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7303854351818 
},
{
 "date":          15953,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7298753073891 
},
{
 "date":          15954,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7259449408122 
},
{
 "date":          15957,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.726065706912 
},
{
 "date":          15958,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7285191986895 
},
{
 "date":          15959,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7301082075551 
},
{
 "date":          15960,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7292486285538 
},
{
 "date":          15961,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.727992429239 
},
{
 "date":          15964,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.727412172765 
},
{
 "date":          15965,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7293731796741 
},
{
 "date":          15966,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7255681856288 
},
{
 "date":          15967,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7189326423122 
},
{
 "date":          15968,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7216632251009 
},
{
 "date":          15971,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7205945597329 
},
{
 "date":          15972,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7218946029154 
},
{
 "date":          15973,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7201513644078 
},
{
 "date":          15974,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7212549793835 
},
{
 "date":          15975,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.717820157672 
},
{
 "date":          15978,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.722031930068 
},
{
 "date":          15979,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7222665004163 
},
{
 "date":          15980,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7272035437609 
},
{
 "date":          15981,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7283347750023 
},
{
 "date":          15982,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.728977407451 
},
{
 "date":          15985,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7214229046403 
},
{
 "date":          15986,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7223813901862 
},
{
 "date":          15987,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7216904782575 
},
{
 "date":          15988,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.719588934795 
},
{
 "date":          15989,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7177232795627 
},
{
 "date":          15992,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7169743307361 
},
{
 "date":          15993,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7143409587362 
},
{
 "date":          15994,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7134950189633 
},
{
 "date":          15995,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7124863175443 
},
{
 "date":          15996,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7170686287701 
},
{
 "date":          15999,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7165931760413 
},
{
 "date":          16000,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7126870184329 
},
{
 "date":          16001,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7125972113898 
},
{
 "date":          16002,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7042145756286 
},
{
 "date":          16003,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.7042150561857 
},
{
 "date":          16006,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.699431514817 
},
{
 "date":          16007,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6921861307407 
},
{
 "date":          16008,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6890105854888 
},
{
 "date":          16009,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6885961286312 
},
{
 "date":          16010,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6876268714478 
},
{
 "date":          16013,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6870021658573 
},
{
 "date":          16014,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6862800217004 
},
{
 "date":          16015,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6719895043117 
},
{
 "date":          16016,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6702191415293 
},
{
 "date":          16017,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6676550436699 
},
{
 "date":          16020,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6653279769743 
},
{
 "date":          16021,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6653562385405 
},
{
 "date":          16022,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6623470589552 
},
{
 "date":          16023,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6600181258748 
},
{
 "date":          16024,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6606157778688 
},
{
 "date":          16027,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6575759807693 
},
{
 "date":          16028,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6557400143323 
},
{
 "date":          16029,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6527868498556 
},
{
 "date":          16030,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.650346200767 
},
{
 "date":          16031,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6665223004347 
},
{
 "date":          16034,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6654153822483 
},
{
 "date":          16035,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6652606532969 
},
{
 "date":          16036,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6652002391257 
},
{
 "date":          16038,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6669692439831 
},
{
 "date":          16041,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6662959603001 
},
{
 "date":          16042,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6665670201062 
},
{
 "date":          16043,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6665641738501 
},
{
 "date":          16044,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6607374367184 
},
{
 "date":          16045,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6579637005726 
},
{
 "date":          16048,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6567769113917 
},
{
 "date":          16049,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6597897260294 
},
{
 "date":          16050,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.654754666124 
},
{
 "date":          16051,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6537109329144 
},
{
 "date":          16052,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6535828106971 
},
{
 "date":          16055,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6516350037254 
},
{
 "date":          16056,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6441389086655 
},
{
 "date":          16057,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6441728035184 
},
{
 "date":          16058,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6405887096103 
},
{
 "date":          16059,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6398668049108 
},
{
 "date":          16062,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6392337571619 
},
{
 "date":          16063,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6390380307153 
},
{
 "date":          16065,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.638350650913 
},
{
 "date":          16066,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6383400927157 
},
{
 "date":          16069,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6351611705541 
},
{
 "date":          16070,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6363889101163 
},
{
 "date":          16072,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6354910348878 
},
{
 "date":          16073,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6351533053231 
},
{
 "date":          16076,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6328946208892 
},
{
 "date":          16077,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6255974777059 
},
{
 "date":          16078,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6259630235113 
},
{
 "date":          16079,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6256694231552 
},
{
 "date":          16080,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6262283354506 
},
{
 "date":          16083,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6251702345846 
},
{
 "date":          16084,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6244433865452 
},
{
 "date":          16085,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6243726389004 
},
{
 "date":          16086,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6251950319676 
},
{
 "date":          16087,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6264981716328 
},
{
 "date":          16091,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6265574524007 
},
{
 "date":          16092,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6266683667689 
},
{
 "date":          16093,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6280795563773 
},
{
 "date":          16094,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6344171105019 
},
{
 "date":          16097,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6346045351127 
},
{
 "date":          16098,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6326316085613 
},
{
 "date":          16099,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6346439260534 
},
{
 "date":          16100,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6362704091029 
},
{
 "date":          16101,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6326912238313 
},
{
 "date":          16104,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6389560633608 
},
{
 "date":          16105,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6385289891813 
},
{
 "date":          16106,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6392743738289 
},
{
 "date":          16107,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6374996586626 
},
{
 "date":          16108,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6384833970262 
},
{
 "date":          16111,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6380103289889 
},
{
 "date":          16112,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6394659294283 
},
{
 "date":          16113,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6389982515561 
},
{
 "date":          16114,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.636788466047 
},
{
 "date":          16115,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6373502999145 
},
{
 "date":          16119,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6367296881414 
},
{
 "date":          16120,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6373243812844 
},
{
 "date":          16121,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.636424662873 
},
{
 "date":          16122,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6360511312263 
},
{
 "date":          16125,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6358127434544 
},
{
 "date":          16126,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6359391255035 
},
{
 "date":          16127,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6369662281231 
},
{
 "date":          16128,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6368715257986 
},
{
 "date":          16129,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6359964081913 
},
{
 "date":          16132,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6362838026922 
},
{
 "date":          16133,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6346745985489 
},
{
 "date":          16134,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6343320620398 
},
{
 "date":          16135,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6343768156482 
},
{
 "date":          16136,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6344196107996 
},
{
 "date":          16139,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6350637245564 
},
{
 "date":          16140,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6307255520662 
},
{
 "date":          16141,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6306305725206 
},
{
 "date":          16142,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6299061381423 
},
{
 "date":          16143,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6284274893876 
},
{
 "date":          16146,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6294845028075 
},
{
 "date":          16147,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6288970352425 
},
{
 "date":          16148,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6290122809131 
},
{
 "date":          16149,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6277364747681 
},
{
 "date":          16150,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6278264121625 
},
{
 "date":          16153,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6254431926327 
},
{
 "date":          16154,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6248693933872 
},
{
 "date":          16155,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6255784184652 
},
{
 "date":          16156,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6260421385284 
},
{
 "date":          16157,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6260134514264 
},
{
 "date":          16160,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6235747548259 
},
{
 "date":          16161,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6237752717036 
},
{
 "date":          16162,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6237419849958 
},
{
 "date":          16163,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6238163149596 
},
{
 "date":          16164,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6267024864896 
},
{
 "date":          16167,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6246911542571 
},
{
 "date":          16168,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.625024073935 
},
{
 "date":          16169,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.624480231353 
},
{
 "date":          16170,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6274859159286 
},
{
 "date":          16171,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6283425038836 
},
{
 "date":          16174,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6261579651393 
},
{
 "date":          16175,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6261573536269 
},
{
 "date":          16176,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6275362905598 
},
{
 "date":          16177,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6276665861548 
},
{
 "date":          16181,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6262600451558 
},
{
 "date":          16182,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6255772839781 
},
{
 "date":          16183,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6235141393474 
},
{
 "date":          16184,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6213150571558 
},
{
 "date":          16185,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6227246112767 
},
{
 "date":          16188,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6183744147218 
},
{
 "date":          16189,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6187031823672 
},
{
 "date":          16190,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6189247782485 
},
{
 "date":          16191,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6190409504465 
},
{
 "date":          16192,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6151556160484 
},
{
 "date":          16195,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6154001732608 
},
{
 "date":          16196,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6167518325757 
},
{
 "date":          16197,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6161511292592 
},
{
 "date":          16198,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6160485674945 
},
{
 "date":          16199,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6163625756173 
},
{
 "date":          16202,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6158651804628 
},
{
 "date":          16203,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6153029477537 
},
{
 "date":          16204,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6152500406531 
},
{
 "date":          16205,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6132353575989 
},
{
 "date":          16206,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6131399461437 
},
{
 "date":          16209,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6101194926676 
},
{
 "date":          16210,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6106149136367 
},
{
 "date":          16211,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6124609940999 
},
{
 "date":          16212,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6130021594972 
},
{
 "date":          16213,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6135332385894 
},
{
 "date":          16217,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6124824828458 
},
{
 "date":          16218,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6101683217413 
},
{
 "date":          16219,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6117767536584 
},
{
 "date":          16220,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6036442756366 
},
{
 "date":          16223,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6036427655479 
},
{
 "date":          16224,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6032072021311 
},
{
 "date":          16225,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5978556462394 
},
{
 "date":          16226,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6011337074176 
},
{
 "date":          16227,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.6015966283809 
},
{
 "date":          16230,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5987885669998 
},
{
 "date":          16231,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5966433696307 
},
{
 "date":          16232,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5917767032863 
},
{
 "date":          16233,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5925329102945 
},
{
 "date":          16234,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5909722675718 
},
{
 "date":          16237,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5914369755985 
},
{
 "date":          16238,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5879155835595 
},
{
 "date":          16239,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5882594750864 
},
{
 "date":          16240,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.585028201886 
},
{
 "date":          16241,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5843860237462 
},
{
 "date":          16244,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5817681157376 
},
{
 "date":          16245,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5795360774063 
},
{
 "date":          16246,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5786867589338 
},
{
 "date":          16247,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.579617733064 
},
{
 "date":          16248,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5713098683729 
},
{
 "date":          16251,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5718180880782 
},
{
 "date":          16252,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5712434892008 
},
{
 "date":          16253,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5710060274896 
},
{
 "date":          16254,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5696750589777 
},
{
 "date":          16258,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5680521996101 
},
{
 "date":          16259,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5670477017979 
},
{
 "date":          16260,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5688926208628 
},
{
 "date":          16261,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5689276137991 
},
{
 "date":          16262,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5657410019549 
},
{
 "date":          16265,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5656376279688 
},
{
 "date":          16266,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5647840071155 
},
{
 "date":          16267,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5644249658835 
},
{
 "date":          16268,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5675635726052 
},
{
 "date":          16269,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5689522829659 
},
{
 "date":          16272,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5687395788807 
},
{
 "date":          16273,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5684577440578 
},
{
 "date":          16274,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5653955622504 
},
{
 "date":          16275,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5630719853133 
},
{
 "date":          16276,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5583398019381 
},
{
 "date":          16279,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5583643151771 
},
{
 "date":          16280,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.558652342654 
},
{
 "date":          16281,
"fund": "HSGFX",
"measure": "R_sq",
"value":  0.55832441789 
},
{
 "date":          16282,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5694741316802 
},
{
 "date":          16283,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5639897009325 
},
{
 "date":          16286,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5648528356535 
},
{
 "date":          16287,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5659555839182 
},
{
 "date":          16288,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5659666552966 
},
{
 "date":          16289,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5669997064924 
},
{
 "date":          16290,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5685280193878 
},
{
 "date":          16293,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5687032038418 
},
{
 "date":          16294,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5685720790945 
},
{
 "date":          16295,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5695253558023 
},
{
 "date":          16296,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5690396371064 
},
{
 "date":          16297,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5692709359862 
},
{
 "date":          16300,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5697813160888 
},
{
 "date":          16301,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5696748938276 
},
{
 "date":          16302,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5696149608441 
},
{
 "date":          16303,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5682177661706 
},
{
 "date":          16304,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.568496615457 
},
{
 "date":          16307,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5687929490879 
},
{
 "date":          16308,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5688429776209 
},
{
 "date":          16309,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5694105049301 
},
{
 "date":          16310,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5682880042395 
},
{
 "date":          16311,
"fund": "HSGFX",
"measure": "R_sq",
"value": 0.5676841268418 
},
{
 "date":          11892,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6784206901991 
},
{
 "date":          11893,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.678590669417 
},
{
 "date":          11894,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6770930862682 
},
{
 "date":          11897,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.584891847715 
},
{
 "date":          11898,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5841002725402 
},
{
 "date":          11899,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5845561189404 
},
{
 "date":          11900,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5866629134285 
},
{
 "date":          11901,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5893130098926 
},
{
 "date":          11904,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5928722411391 
},
{
 "date":          11905,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5937280101369 
},
{
 "date":          11906,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5914659397234 
},
{
 "date":          11907,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5931134727346 
},
{
 "date":          11908,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5958680167155 
},
{
 "date":          11911,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5938136278386 
},
{
 "date":          11912,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5933068180039 
},
{
 "date":          11913,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5925133460161 
},
{
 "date":          11914,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5978549644706 
},
{
 "date":          11915,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5908530021109 
},
{
 "date":          11918,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5943001555059 
},
{
 "date":          11919,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5959507076263 
},
{
 "date":          11920,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.594842533281 
},
{
 "date":          11921,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5935499180896 
},
{
 "date":          11922,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5962507966296 
},
{
 "date":          11925,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5971476928554 
},
{
 "date":          11926,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5995753322397 
},
{
 "date":          11927,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6004686837468 
},
{
 "date":          11928,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6003878672519 
},
{
 "date":          11929,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5996561083572 
},
{
 "date":          11933,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6017813477622 
},
{
 "date":          11934,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6015173690281 
},
{
 "date":          11935,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6020109933049 
},
{
 "date":          11936,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6033949646285 
},
{
 "date":          11939,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6041143352045 
},
{
 "date":          11940,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6040386903325 
},
{
 "date":          11941,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6043227595493 
},
{
 "date":          11942,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6060720829024 
},
{
 "date":          11943,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6013084637751 
},
{
 "date":          11946,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6014439879469 
},
{
 "date":          11947,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6025422092791 
},
{
 "date":          11948,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.598039128347 
},
{
 "date":          11949,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.598244332437 
},
{
 "date":          11950,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.598277120239 
},
{
 "date":          11953,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5996441349607 
},
{
 "date":          11954,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.601450465498 
},
{
 "date":          11955,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6022576573691 
},
{
 "date":          11956,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6014563139145 
},
{
 "date":          11957,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6021646401623 
},
{
 "date":          11960,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6083270965031 
},
{
 "date":          11961,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6007550868399 
},
{
 "date":          11962,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5998778846872 
},
{
 "date":          11963,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5967624672151 
},
{
 "date":          11964,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5941900552455 
},
{
 "date":          11967,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5951732961245 
},
{
 "date":          11968,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5969717017387 
},
{
 "date":          11969,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5983527355822 
},
{
 "date":          11970,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6022229010032 
},
{
 "date":          11971,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.599823970812 
},
{
 "date":          11974,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6026589590399 
},
{
 "date":          11975,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6149991095519 
},
{
 "date":          11976,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.615973120536 
},
{
 "date":          11977,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6186643298699 
},
{
 "date":          11978,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.618215836627 
},
{
 "date":          11981,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6309301970854 
},
{
 "date":          11982,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6309825876684 
},
{
 "date":          11983,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6299115351374 
},
{
 "date":          11984,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6282373326191 
},
{
 "date":          11985,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6303544215511 
},
{
 "date":          11988,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6307866385111 
},
{
 "date":          11989,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6308904371449 
},
{
 "date":          11990,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6307264687233 
},
{
 "date":          11991,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6317981288426 
},
{
 "date":          11992,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6297525529459 
},
{
 "date":          11995,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.629883782544 
},
{
 "date":          11996,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6290582271858 
},
{
 "date":          11997,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6270384291503 
},
{
 "date":          11998,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6260547370829 
},
{
 "date":          11999,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6274833589532 
},
{
 "date":          12002,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6273329475566 
},
{
 "date":          12003,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.629347055119 
},
{
 "date":          12004,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6297738116353 
},
{
 "date":          12005,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6327824573509 
},
{
 "date":          12006,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6291916509378 
},
{
 "date":          12009,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6300605688495 
},
{
 "date":          12010,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6316394088792 
},
{
 "date":          12011,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6322244830662 
},
{
 "date":          12012,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6301232895435 
},
{
 "date":          12013,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6311061320593 
},
{
 "date":          12016,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6344017355765 
},
{
 "date":          12017,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6336642823221 
},
{
 "date":          12018,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6340339137883 
},
{
 "date":          12020,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6331045196047 
},
{
 "date":          12023,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6366254937799 
},
{
 "date":          12024,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6351168722672 
},
{
 "date":          12025,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6369067394397 
},
{
 "date":          12026,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6604687746081 
},
{
 "date":          12027,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6601556973898 
},
{
 "date":          12030,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6566417742367 
},
{
 "date":          12031,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6550493000636 
},
{
 "date":          12032,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6345699221742 
},
{
 "date":          12033,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.636930999216 
},
{
 "date":          12034,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6368260992093 
},
{
 "date":          12037,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6372524780434 
},
{
 "date":          12038,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6393220336716 
},
{
 "date":          12039,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6385025711209 
},
{
 "date":          12040,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6393421332718 
},
{
 "date":          12041,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6548673472603 
},
{
 "date":          12044,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6556406205317 
},
{
 "date":          12045,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6638847503954 
},
{
 "date":          12047,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6592790425013 
},
{
 "date":          12048,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6536947162106 
},
{
 "date":          12051,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6512603303462 
},
{
 "date":          12052,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6508417776438 
},
{
 "date":          12054,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6566410418064 
},
{
 "date":          12055,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6656086355242 
},
{
 "date":          12058,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6540079254841 
},
{
 "date":          12059,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6550721642325 
},
{
 "date":          12060,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.651437650432 
},
{
 "date":          12061,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6517371224898 
},
{
 "date":          12062,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6522411370075 
},
{
 "date":          12065,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6524749273586 
},
{
 "date":          12066,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6528450827947 
},
{
 "date":          12067,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.652773136378 
},
{
 "date":          12068,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6535599112064 
},
{
 "date":          12069,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6542824515706 
},
{
 "date":          12073,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.652179394526 
},
{
 "date":          12074,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6490867890951 
},
{
 "date":          12075,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6459007147101 
},
{
 "date":          12076,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6476410243451 
},
{
 "date":          12079,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6469011118624 
},
{
 "date":          12080,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6458968025307 
},
{
 "date":          12081,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6461916950703 
},
{
 "date":          12082,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6460485754205 
},
{
 "date":          12083,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.646426851382 
},
{
 "date":          12086,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6461886871376 
},
{
 "date":          12087,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.647624200371 
},
{
 "date":          12088,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6470373525898 
},
{
 "date":          12089,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6491886553826 
},
{
 "date":          12090,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6448445129214 
},
{
 "date":          12093,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6463581924022 
},
{
 "date":          12094,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6478300600459 
},
{
 "date":          12095,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6478473557811 
},
{
 "date":          12096,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6494836213946 
},
{
 "date":          12097,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6484080993736 
},
{
 "date":          12101,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6497409578071 
},
{
 "date":          12102,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6513920476095 
},
{
 "date":          12103,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6508907750893 
},
{
 "date":          12104,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6509652562597 
},
{
 "date":          12107,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6516060349503 
},
{
 "date":          12108,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6513728100966 
},
{
 "date":          12109,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6457155821115 
},
{
 "date":          12110,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6421362546712 
},
{
 "date":          12111,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6430251318373 
},
{
 "date":          12114,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6434561421964 
},
{
 "date":          12115,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6430536996154 
},
{
 "date":          12116,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6429243237973 
},
{
 "date":          12117,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6424647046684 
},
{
 "date":          12118,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6396006696182 
},
{
 "date":          12121,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6364300878843 
},
{
 "date":          12122,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6356230460714 
},
{
 "date":          12123,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.638799703355 
},
{
 "date":          12124,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.643008490195 
},
{
 "date":          12125,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6417726978837 
},
{
 "date":          12128,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6464849009526 
},
{
 "date":          12129,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.647615581883 
},
{
 "date":          12130,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6473047551587 
},
{
 "date":          12131,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6507852547073 
},
{
 "date":          12132,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6553491984746 
},
{
 "date":          12135,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6413170644395 
},
{
 "date":          12136,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6456793757945 
},
{
 "date":          12137,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6412112638124 
},
{
 "date":          12138,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6463617799373 
},
{
 "date":          12139,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6523874318554 
},
{
 "date":          12142,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6507875221166 
},
{
 "date":          12143,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6545929487617 
},
{
 "date":          12144,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6567993620902 
},
{
 "date":          12145,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6739211852394 
},
{
 "date":          12146,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6740221455994 
},
{
 "date":          12149,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6848942470878 
},
{
 "date":          12150,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6839402782125 
},
{
 "date":          12151,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6833767068357 
},
{
 "date":          12152,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6894253666791 
},
{
 "date":          12153,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6865499273954 
},
{
 "date":          12156,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6889936538015 
},
{
 "date":          12157,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6819538398357 
},
{
 "date":          12158,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.683493502235 
},
{
 "date":          12159,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7257790642915 
},
{
 "date":          12163,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7270099915415 
},
{
 "date":          12164,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7260085709136 
},
{
 "date":          12165,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7283011195902 
},
{
 "date":          12166,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7303828844391 
},
{
 "date":          12167,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7321345528771 
},
{
 "date":          12170,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7378682207695 
},
{
 "date":          12171,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7458810356088 
},
{
 "date":          12172,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7453539143122 
},
{
 "date":          12173,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7460279505599 
},
{
 "date":          12174,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7527758021807 
},
{
 "date":          12177,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7527618668239 
},
{
 "date":          12178,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7580434508657 
},
{
 "date":          12179,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7552267053947 
},
{
 "date":          12180,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7559629195617 
},
{
 "date":          12181,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7606955291785 
},
{
 "date":          12184,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7645737411582 
},
{
 "date":          12185,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7651356288797 
},
{
 "date":          12186,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7652288524316 
},
{
 "date":          12187,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7655948964432 
},
{
 "date":          12188,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.763279411994 
},
{
 "date":          12191,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7571437752774 
},
{
 "date":          12192,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7571187253946 
},
{
 "date":          12193,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7605496822719 
},
{
 "date":          12194,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7659006543501 
},
{
 "date":          12195,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7662120114363 
},
{
 "date":          12199,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7671853638548 
},
{
 "date":          12200,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7670919581761 
},
{
 "date":          12201,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7672695244735 
},
{
 "date":          12202,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.772178685894 
},
{
 "date":          12205,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7734021962561 
},
{
 "date":          12206,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7691241125707 
},
{
 "date":          12207,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7656495162042 
},
{
 "date":          12208,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7715308013432 
},
{
 "date":          12209,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7718431439203 
},
{
 "date":          12212,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7744138919822 
},
{
 "date":          12213,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7730798055337 
},
{
 "date":          12214,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.774892581993 
},
{
 "date":          12215,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7748201373011 
},
{
 "date":          12216,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7761137554029 
},
{
 "date":          12219,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7741276748169 
},
{
 "date":          12220,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7734952311589 
},
{
 "date":          12221,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7737325038828 
},
{
 "date":          12222,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7761307331365 
},
{
 "date":          12223,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7750740412674 
},
{
 "date":          12226,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7778921426519 
},
{
 "date":          12227,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7772643737779 
},
{
 "date":          12228,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7770831857698 
},
{
 "date":          12229,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7772663473349 
},
{
 "date":          12230,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7774015688458 
},
{
 "date":          12233,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7775615247858 
},
{
 "date":          12234,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7786003893508 
},
{
 "date":          12235,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7852864602693 
},
{
 "date":          12236,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.787561660288 
},
{
 "date":          12240,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7866369381907 
},
{
 "date":          12241,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7899105163042 
},
{
 "date":          12242,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7872748503532 
},
{
 "date":          12243,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7892286361457 
},
{
 "date":          12244,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7895884351464 
},
{
 "date":          12247,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7923321938995 
},
{
 "date":          12248,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7930539968083 
},
{
 "date":          12249,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7935790867408 
},
{
 "date":          12250,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7939061503395 
},
{
 "date":          12251,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7854591279651 
},
{
 "date":          12254,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7860918074183 
},
{
 "date":          12255,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7862260074573 
},
{
 "date":          12256,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7895964529382 
},
{
 "date":          12257,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7906041170978 
},
{
 "date":          12258,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7910833070934 
},
{
 "date":          12261,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7910751646345 
},
{
 "date":          12262,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7920932231936 
},
{
 "date":          12263,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7921839336882 
},
{
 "date":          12264,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7914043022312 
},
{
 "date":          12265,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7895583769781 
},
{
 "date":          12268,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7881825393358 
},
{
 "date":          12269,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7877236610258 
},
{
 "date":          12270,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7880505495369 
},
{
 "date":          12271,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7879404370626 
},
{
 "date":          12272,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.787005732257 
},
{
 "date":          12275,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7868370689096 
},
{
 "date":          12276,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7873784395623 
},
{
 "date":          12277,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7873542476493 
},
{
 "date":          12278,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7872983812285 
},
{
 "date":          12279,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7848882759622 
},
{
 "date":          12282,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7848540879886 
},
{
 "date":          12283,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7842031930727 
},
{
 "date":          12284,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7841270035928 
},
{
 "date":          12285,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7823049201973 
},
{
 "date":          12286,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7802348737899 
},
{
 "date":          12289,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7791468337009 
},
{
 "date":          12290,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7783334528666 
},
{
 "date":          12291,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7791857784782 
},
{
 "date":          12292,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7787189775334 
},
{
 "date":          12293,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7779999610886 
},
{
 "date":          12297,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7775142446673 
},
{
 "date":          12298,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7776309816569 
},
{
 "date":          12299,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7768459838462 
},
{
 "date":          12300,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7767918363312 
},
{
 "date":          12303,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7757329428549 
},
{
 "date":          12304,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7763220208127 
},
{
 "date":          12305,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7723460301902 
},
{
 "date":          12306,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7612824573125 
},
{
 "date":          12307,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7609385839517 
},
{
 "date":          12310,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7611801584889 
},
{
 "date":          12311,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7618555176021 
},
{
 "date":          12312,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7614184733026 
},
{
 "date":          12313,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7677301198521 
},
{
 "date":          12314,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7677960802931 
},
{
 "date":          12317,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7680742153075 
},
{
 "date":          12318,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7682044644993 
},
{
 "date":          12319,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7665932603572 
},
{
 "date":          12320,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.766331451497 
},
{
 "date":          12321,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7666949934422 
},
{
 "date":          12324,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7674616951987 
},
{
 "date":          12325,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7671651162178 
},
{
 "date":          12326,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7657244186022 
},
{
 "date":          12327,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7659154567782 
},
{
 "date":          12328,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7660174344805 
},
{
 "date":          12331,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.764929002923 
},
{
 "date":          12332,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.764267543691 
},
{
 "date":          12333,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7642098921698 
},
{
 "date":          12334,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7650452387222 
},
{
 "date":          12335,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.764851161635 
},
{
 "date":          12338,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7646397558119 
},
{
 "date":          12339,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7637337982631 
},
{
 "date":          12340,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7634551304214 
},
{
 "date":          12341,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7634068408905 
},
{
 "date":          12342,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.763124926741 
},
{
 "date":          12345,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7632282451572 
},
{
 "date":          12346,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7625704744381 
},
{
 "date":          12347,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.761618614546 
},
{
 "date":          12348,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7619363258723 
},
{
 "date":          12349,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7625573950709 
},
{
 "date":          12352,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7604347697801 
},
{
 "date":          12353,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7625927210432 
},
{
 "date":          12354,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.762876788159 
},
{
 "date":          12355,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7631066228941 
},
{
 "date":          12356,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7645095364002 
},
{
 "date":          12359,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7644773663014 
},
{
 "date":          12360,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7565214036593 
},
{
 "date":          12361,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7565113947914 
},
{
 "date":          12362,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7563534633986 
},
{
 "date":          12363,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7559808338824 
},
{
 "date":          12366,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7536997380416 
},
{
 "date":          12367,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7544417783066 
},
{
 "date":          12368,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.754212456235 
},
{
 "date":          12369,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7542225727155 
},
{
 "date":          12370,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7528206055885 
},
{
 "date":          12373,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.753348111444 
},
{
 "date":          12374,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7532855242328 
},
{
 "date":          12375,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7532873459305 
},
{
 "date":          12376,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7535842359891 
},
{
 "date":          12377,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7512059299885 
},
{
 "date":          12380,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7507660688106 
},
{
 "date":          12381,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7483925003181 
},
{
 "date":          12382,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7470431822888 
},
{
 "date":          12384,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7459190037399 
},
{
 "date":          12387,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7449192671982 
},
{
 "date":          12388,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.744672528031 
},
{
 "date":          12389,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7446727902373 
},
{
 "date":          12390,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7471204636893 
},
{
 "date":          12391,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.746976910791 
},
{
 "date":          12394,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7472050410697 
},
{
 "date":          12395,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7467174183056 
},
{
 "date":          12396,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7469485669098 
},
{
 "date":          12397,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7461578714893 
},
{
 "date":          12398,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7465069634222 
},
{
 "date":          12401,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7454677881157 
},
{
 "date":          12402,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7453447068815 
},
{
 "date":          12403,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7451024491626 
},
{
 "date":          12404,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7450739986237 
},
{
 "date":          12405,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7450494804694 
},
{
 "date":          12408,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7450333645304 
},
{
 "date":          12409,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7454407969251 
},
{
 "date":          12410,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.742664485965 
},
{
 "date":          12412,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7410562442646 
},
{
 "date":          12415,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7383200635799 
},
{
 "date":          12416,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.738131502373 
},
{
 "date":          12417,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7346064410804 
},
{
 "date":          12419,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.73485803409 
},
{
 "date":          12422,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7343654989648 
},
{
 "date":          12423,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7328740206135 
},
{
 "date":          12424,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7325230133289 
},
{
 "date":          12425,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7329612159186 
},
{
 "date":          12426,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7328217871172 
},
{
 "date":          12429,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7326528626792 
},
{
 "date":          12430,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7320975520621 
},
{
 "date":          12431,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7296087260603 
},
{
 "date":          12432,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7283856202439 
},
{
 "date":          12433,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7283183259419 
},
{
 "date":          12437,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7300752137681 
},
{
 "date":          12438,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.728699865071 
},
{
 "date":          12439,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7280408089854 
},
{
 "date":          12440,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7315081618995 
},
{
 "date":          12443,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.728358201369 
},
{
 "date":          12444,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7288751586518 
},
{
 "date":          12445,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7279844704803 
},
{
 "date":          12446,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7266315483583 
},
{
 "date":          12447,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7265304176346 
},
{
 "date":          12450,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7269105789782 
},
{
 "date":          12451,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7268335985988 
},
{
 "date":          12452,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7255133272437 
},
{
 "date":          12453,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7258958847999 
},
{
 "date":          12454,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7254571271832 
},
{
 "date":          12457,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7236182533614 
},
{
 "date":          12458,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7235227661286 
},
{
 "date":          12459,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.721022562884 
},
{
 "date":          12460,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7200932653103 
},
{
 "date":          12461,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7183341897739 
},
{
 "date":          12465,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7167689286329 
},
{
 "date":          12466,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7160532799179 
},
{
 "date":          12467,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7142333098994 
},
{
 "date":          12468,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7096865867285 
},
{
 "date":          12471,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7093327967518 
},
{
 "date":          12472,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7092789933467 
},
{
 "date":          12473,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7075534040845 
},
{
 "date":          12474,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7076630730893 
},
{
 "date":          12475,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7075236413589 
},
{
 "date":          12478,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7071066322921 
},
{
 "date":          12479,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7062470860888 
},
{
 "date":          12480,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7064014470232 
},
{
 "date":          12481,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7054157071262 
},
{
 "date":          12482,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7033389243136 
},
{
 "date":          12485,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7014604590355 
},
{
 "date":          12486,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7016316351846 
},
{
 "date":          12487,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6999100478426 
},
{
 "date":          12488,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6991058670282 
},
{
 "date":          12489,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6988860716495 
},
{
 "date":          12492,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6947467223657 
},
{
 "date":          12493,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6947333104265 
},
{
 "date":          12494,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6943369685109 
},
{
 "date":          12495,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6948064524145 
},
{
 "date":          12496,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6951647029658 
},
{
 "date":          12499,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6931248438416 
},
{
 "date":          12500,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6910279974156 
},
{
 "date":          12501,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6908252863905 
},
{
 "date":          12502,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6884163728937 
},
{
 "date":          12503,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6888094944563 
},
{
 "date":          12506,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.688107326819 
},
{
 "date":          12507,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6877878843295 
},
{
 "date":          12508,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6873838053337 
},
{
 "date":          12509,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6857879217347 
},
{
 "date":          12510,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6857332560641 
},
{
 "date":          12513,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.685202054798 
},
{
 "date":          12514,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6835997408514 
},
{
 "date":          12515,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6832895319575 
},
{
 "date":          12516,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6819839313475 
},
{
 "date":          12520,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6819469069892 
},
{
 "date":          12521,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6804407484211 
},
{
 "date":          12522,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6807538181758 
},
{
 "date":          12523,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6797372915966 
},
{
 "date":          12524,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6793523613805 
},
{
 "date":          12527,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6795660392692 
},
{
 "date":          12528,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6795608190588 
},
{
 "date":          12529,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.67723820035 
},
{
 "date":          12530,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6771300983059 
},
{
 "date":          12531,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6768042487455 
},
{
 "date":          12534,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6747416371291 
},
{
 "date":          12535,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.674761459697 
},
{
 "date":          12536,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6743951157992 
},
{
 "date":          12537,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6735090396826 
},
{
 "date":          12538,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6729353379497 
},
{
 "date":          12541,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6745844915428 
},
{
 "date":          12542,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6734944705395 
},
{
 "date":          12543,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6720180550834 
},
{
 "date":          12544,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6698015306017 
},
{
 "date":          12545,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6703732439499 
},
{
 "date":          12548,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6691623668304 
},
{
 "date":          12549,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.669071753122 
},
{
 "date":          12550,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6685584884814 
},
{
 "date":          12551,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6673744241155 
},
{
 "date":          12552,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6662801000896 
},
{
 "date":          12555,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6658204863072 
},
{
 "date":          12556,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.666386254578 
},
{
 "date":          12557,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6628262847173 
},
{
 "date":          12558,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6645062293307 
},
{
 "date":          12559,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6637654155016 
},
{
 "date":          12562,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6645295931824 
},
{
 "date":          12563,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.662615687006 
},
{
 "date":          12564,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6609637303037 
},
{
 "date":          12565,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6575243598178 
},
{
 "date":          12566,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6594180201834 
},
{
 "date":          12570,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.657658168292 
},
{
 "date":          12571,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6582513068523 
},
{
 "date":          12572,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6578929440652 
},
{
 "date":          12573,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6569451154742 
},
{
 "date":          12576,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6558579264412 
},
{
 "date":          12577,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6562555505648 
},
{
 "date":          12578,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6551751390127 
},
{
 "date":          12579,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.65283464738 
},
{
 "date":          12583,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6525298744419 
},
{
 "date":          12584,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6492113206381 
},
{
 "date":          12585,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6499130085814 
},
{
 "date":          12586,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6504642358725 
},
{
 "date":          12587,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6501517419477 
},
{
 "date":          12590,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6496799732637 
},
{
 "date":          12591,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6486342052005 
},
{
 "date":          12592,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6447246113763 
},
{
 "date":          12593,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.643509525537 
},
{
 "date":          12594,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6404535795189 
},
{
 "date":          12597,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.640884283105 
},
{
 "date":          12598,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6417334702194 
},
{
 "date":          12599,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6375260590447 
},
{
 "date":          12600,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6341138035241 
},
{
 "date":          12601,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6320788143239 
},
{
 "date":          12605,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6297089111439 
},
{
 "date":          12606,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6288506550214 
},
{
 "date":          12607,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6287236148895 
},
{
 "date":          12608,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6289605344442 
},
{
 "date":          12611,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6309729165366 
},
{
 "date":          12612,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6250442045263 
},
{
 "date":          12613,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6331365370809 
},
{
 "date":          12614,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6311782555202 
},
{
 "date":          12615,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6297173585226 
},
{
 "date":          12618,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6279228716563 
},
{
 "date":          12619,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5949802145001 
},
{
 "date":          12620,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5936206652069 
},
{
 "date":          12621,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5855491755508 
},
{
 "date":          12622,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5737957701049 
},
{
 "date":          12625,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5738482174274 
},
{
 "date":          12626,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5694008769455 
},
{
 "date":          12627,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5685550885516 
},
{
 "date":          12628,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5705791678713 
},
{
 "date":          12629,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5658659236769 
},
{
 "date":          12632,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5596674468455 
},
{
 "date":          12633,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5578877306549 
},
{
 "date":          12634,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5551197084761 
},
{
 "date":          12635,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5494025093249 
},
{
 "date":          12636,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5474147361378 
},
{
 "date":          12639,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.545692693049 
},
{
 "date":          12640,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.532362858313 
},
{
 "date":          12641,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5340185262257 
},
{
 "date":          12642,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5312112817635 
},
{
 "date":          12643,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5325744883705 
},
{
 "date":          12646,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5332616372132 
},
{
 "date":          12647,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5304398222641 
},
{
 "date":          12648,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.528979338583 
},
{
 "date":          12649,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.530456519819 
},
{
 "date":          12650,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5304306132699 
},
{
 "date":          12653,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5334324007031 
},
{
 "date":          12654,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5340032033415 
},
{
 "date":          12655,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5340264604897 
},
{
 "date":          12656,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5341016084035 
},
{
 "date":          12657,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5113045204982 
},
{
 "date":          12660,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5097583093782 
},
{
 "date":          12661,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.50983236651 
},
{
 "date":          12662,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5116488266093 
},
{
 "date":          12663,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.511453571758 
},
{
 "date":          12664,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5097042063044 
},
{
 "date":          12668,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5095302032082 
},
{
 "date":          12669,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5092025641942 
},
{
 "date":          12670,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5085910874198 
},
{
 "date":          12671,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5081786060141 
},
{
 "date":          12674,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.508689016856 
},
{
 "date":          12675,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5087826429106 
},
{
 "date":          12676,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5104149181661 
},
{
 "date":          12677,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5099007987976 
},
{
 "date":          12678,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5108995076321 
},
{
 "date":          12681,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5126078968179 
},
{
 "date":          12682,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5077613774703 
},
{
 "date":          12683,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5066054642019 
},
{
 "date":          12684,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4994866556649 
},
{
 "date":          12685,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5014459584377 
},
{
 "date":          12688,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5649515582148 
},
{
 "date":          12689,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5624951002587 
},
{
 "date":          12690,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5614675797934 
},
{
 "date":          12691,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5581564492795 
},
{
 "date":          12692,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5614770244952 
},
{
 "date":          12695,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5608194976083 
},
{
 "date":          12696,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5566922200323 
},
{
 "date":          12697,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5508833623826 
},
{
 "date":          12698,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5312112885628 
},
{
 "date":          12699,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5279136930643 
},
{
 "date":          12702,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4837892240521 
},
{
 "date":          12703,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4806189381116 
},
{
 "date":          12704,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4753963444486 
},
{
 "date":          12705,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4767654118874 
},
{
 "date":          12706,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4764989428203 
},
{
 "date":          12709,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4771967990998 
},
{
 "date":          12710,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4748828235017 
},
{
 "date":          12711,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.473001160442 
},
{
 "date":          12712,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4700736652632 
},
{
 "date":          12713,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4720038490985 
},
{
 "date":          12716,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4718514320111 
},
{
 "date":          12717,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4600976514222 
},
{
 "date":          12718,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4576313902636 
},
{
 "date":          12719,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4555152308268 
},
{
 "date":          12720,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4541775359754 
},
{
 "date":          12723,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4522207168689 
},
{
 "date":          12724,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4516947115973 
},
{
 "date":          12725,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4541389349185 
},
{
 "date":          12726,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4529217667935 
},
{
 "date":          12727,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4511672219075 
},
{
 "date":          12730,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4508575173677 
},
{
 "date":          12731,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":   0.4511208543 
},
{
 "date":          12732,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4535756055762 
},
{
 "date":          12733,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4498740354828 
},
{
 "date":          12734,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4491308846498 
},
{
 "date":          12737,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4493491060336 
},
{
 "date":          12738,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4469394078313 
},
{
 "date":          12739,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4465372975678 
},
{
 "date":          12740,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4469073013398 
},
{
 "date":          12741,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.441672401606 
},
{
 "date":          12744,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4399514196637 
},
{
 "date":          12745,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.441846893298 
},
{
 "date":          12746,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.441643723595 
},
{
 "date":          12748,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4366970342969 
},
{
 "date":          12751,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4341824658451 
},
{
 "date":          12752,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4233021553398 
},
{
 "date":          12753,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4245612622854 
},
{
 "date":          12754,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4225350991005 
},
{
 "date":          12755,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4239398493782 
},
{
 "date":          12758,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4182463530839 
},
{
 "date":          12759,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4170991774114 
},
{
 "date":          12760,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4106243418366 
},
{
 "date":          12761,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4070943423849 
},
{
 "date":          12762,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4048247139222 
},
{
 "date":          12765,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4049048333118 
},
{
 "date":          12766,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3996406596208 
},
{
 "date":          12767,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3999856990321 
},
{
 "date":          12768,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3967396028064 
},
{
 "date":          12769,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3906382202956 
},
{
 "date":          12772,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3911018660373 
},
{
 "date":          12773,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3865353260437 
},
{
 "date":          12774,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3845087147911 
},
{
 "date":          12775,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3844687530598 
},
{
 "date":          12779,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3838169550478 
},
{
 "date":          12780,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3715585808623 
},
{
 "date":          12781,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3669929884097 
},
{
 "date":          12782,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3651730063407 
},
{
 "date":          12783,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3656110394293 
},
{
 "date":          12786,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3612707899327 
},
{
 "date":          12787,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3588377692801 
},
{
 "date":          12788,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3586932725564 
},
{
 "date":          12789,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3586661102168 
},
{
 "date":          12790,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3530630282741 
},
{
 "date":          12793,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3517928888753 
},
{
 "date":          12794,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3487524871745 
},
{
 "date":          12795,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3473150542898 
},
{
 "date":          12796,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.348200892981 
},
{
 "date":          12797,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3443758956579 
},
{
 "date":          12801,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3438725404001 
},
{
 "date":          12802,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.350700548281 
},
{
 "date":          12803,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3504863266422 
},
{
 "date":          12804,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":   0.3490589703 
},
{
 "date":          12807,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3453346795601 
},
{
 "date":          12808,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3459917204087 
},
{
 "date":          12809,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3447620586033 
},
{
 "date":          12810,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3449506687337 
},
{
 "date":          12811,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3429540748344 
},
{
 "date":          12814,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3413531498666 
},
{
 "date":          12815,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3409713864006 
},
{
 "date":          12816,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3365648680001 
},
{
 "date":          12817,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3275433451058 
},
{
 "date":          12818,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3212095575001 
},
{
 "date":          12821,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3220563226629 
},
{
 "date":          12822,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3192417342326 
},
{
 "date":          12823,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3202638543724 
},
{
 "date":          12824,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.318255083547 
},
{
 "date":          12825,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.31755654919 
},
{
 "date":          12828,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3167209771004 
},
{
 "date":          12829,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3114478689445 
},
{
 "date":          12830,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3103453352406 
},
{
 "date":          12831,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3070155374196 
},
{
 "date":          12832,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3061335733597 
},
{
 "date":          12836,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3066672423261 
},
{
 "date":          12837,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3079797373142 
},
{
 "date":          12838,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3081992744452 
},
{
 "date":          12839,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3085867083996 
},
{
 "date":          12842,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3050687653642 
},
{
 "date":          12843,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3034843159883 
},
{
 "date":          12844,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.303646078852 
},
{
 "date":          12845,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3003624259892 
},
{
 "date":          12846,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3010887160262 
},
{
 "date":          12849,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3008173721788 
},
{
 "date":          12850,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2868517897755 
},
{
 "date":          12851,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2862986287938 
},
{
 "date":          12852,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3092765104064 
},
{
 "date":          12853,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3091635840202 
},
{
 "date":          12856,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3074319374125 
},
{
 "date":          12857,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3055636450494 
},
{
 "date":          12858,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.300789600013 
},
{
 "date":          12859,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2453440893343 
},
{
 "date":          12860,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.245534674018 
},
{
 "date":          12863,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2437476072916 
},
{
 "date":          12864,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2444156371265 
},
{
 "date":          12865,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2404771636146 
},
{
 "date":          12866,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2465168459195 
},
{
 "date":          12870,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.238081354387 
},
{
 "date":          12871,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2262091407616 
},
{
 "date":          12872,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2262833258354 
},
{
 "date":          12873,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2265474412216 
},
{
 "date":          12874,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2276097082114 
},
{
 "date":          12877,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2294319878473 
},
{
 "date":          12878,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2294654063626 
},
{
 "date":          12879,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2295039330484 
},
{
 "date":          12880,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2267749891587 
},
{
 "date":          12881,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2279729259258 
},
{
 "date":          12884,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2284147961497 
},
{
 "date":          12885,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2314685517279 
},
{
 "date":          12886,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2300387337573 
},
{
 "date":          12887,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2301971276854 
},
{
 "date":          12888,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2248451509308 
},
{
 "date":          12891,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2255517748871 
},
{
 "date":          12892,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2252137503945 
},
{
 "date":          12893,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.224692581704 
},
{
 "date":          12894,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2152468319249 
},
{
 "date":          12895,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2029159879562 
},
{
 "date":          12898,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2023488806271 
},
{
 "date":          12899,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2020839369308 
},
{
 "date":          12900,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2088703365793 
},
{
 "date":          12901,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2076072354776 
},
{
 "date":          12902,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2067626229716 
},
{
 "date":          12905,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2067061441285 
},
{
 "date":          12906,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2074377164398 
},
{
 "date":          12907,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.207984915579 
},
{
 "date":          12908,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2084594795356 
},
{
 "date":          12909,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2077531287453 
},
{
 "date":          12912,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2086386566583 
},
{
 "date":          12913,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2098716578256 
},
{
 "date":          12914,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2093883286343 
},
{
 "date":          12915,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2502820970525 
},
{
 "date":          12916,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2500539794718 
},
{
 "date":          12919,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.249599700119 
},
{
 "date":          12920,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2480430623433 
},
{
 "date":          12921,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2478582893905 
},
{
 "date":          12922,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2521450709549 
},
{
 "date":          12923,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2505806495829 
},
{
 "date":          12926,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2492050475905 
},
{
 "date":          12927,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2557000492792 
},
{
 "date":          12928,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2551668771397 
},
{
 "date":          12929,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2549352142628 
},
{
 "date":          12930,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2597631378526 
},
{
 "date":          12934,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2496365070144 
},
{
 "date":          12935,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2495186839736 
},
{
 "date":          12936,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.25206928834 
},
{
 "date":          12937,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2526245700853 
},
{
 "date":          12940,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2527577489469 
},
{
 "date":          12941,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2533420675279 
},
{
 "date":          12942,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2536477951976 
},
{
 "date":          12943,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3067224971896 
},
{
 "date":          12944,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3033898318819 
},
{
 "date":          12947,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3021893251842 
},
{
 "date":          12948,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3100952693587 
},
{
 "date":          12949,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3099670778313 
},
{
 "date":          12950,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3260622799167 
},
{
 "date":          12951,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.326101992346 
},
{
 "date":          12954,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3266231495457 
},
{
 "date":          12955,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.327137316203 
},
{
 "date":          12956,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3278007624774 
},
{
 "date":          12957,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3287478665256 
},
{
 "date":          12958,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3243896925584 
},
{
 "date":          12961,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3396576169187 
},
{
 "date":          12962,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.336570848311 
},
{
 "date":          12963,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4895625098885 
},
{
 "date":          12964,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4854170689196 
},
{
 "date":          12965,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.484725658925 
},
{
 "date":          12969,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5092925550982 
},
{
 "date":          12970,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5108729833995 
},
{
 "date":          12971,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.510918558861 
},
{
 "date":          12972,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5103661818324 
},
{
 "date":          12975,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5116430615692 
},
{
 "date":          12976,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5307085584526 
},
{
 "date":          12977,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.53388899962 
},
{
 "date":          12978,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5543073343496 
},
{
 "date":          12979,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5558951385385 
},
{
 "date":          12982,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5407720780479 
},
{
 "date":          12983,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5415234303524 
},
{
 "date":          12984,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5522452838945 
},
{
 "date":          12985,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5530462420749 
},
{
 "date":          12986,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5525884610696 
},
{
 "date":          12989,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5514020819802 
},
{
 "date":          12990,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5512625438201 
},
{
 "date":          12991,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5518740505337 
},
{
 "date":          12992,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5537704916304 
},
{
 "date":          12993,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5576757711267 
},
{
 "date":          12996,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.553827390906 
},
{
 "date":          12997,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5558052280867 
},
{
 "date":          12998,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5575592016131 
},
{
 "date":          12999,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5606088992699 
},
{
 "date":          13000,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5646743712743 
},
{
 "date":          13003,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5696494743592 
},
{
 "date":          13004,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5701881757276 
},
{
 "date":          13005,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5737144466394 
},
{
 "date":          13006,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5736557986151 
},
{
 "date":          13007,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5748362066651 
},
{
 "date":          13010,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5755837027308 
},
{
 "date":          13011,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5753962475745 
},
{
 "date":          13012,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.576276445756 
},
{
 "date":          13013,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5760586732449 
},
{
 "date":          13014,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5751462907404 
},
{
 "date":          13017,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5698744361029 
},
{
 "date":          13018,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5696757397656 
},
{
 "date":          13019,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5692757602301 
},
{
 "date":          13020,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5706489553987 
},
{
 "date":          13021,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5695398214851 
},
{
 "date":          13024,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5679154096765 
},
{
 "date":          13025,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5680185272122 
},
{
 "date":          13026,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5679172268468 
},
{
 "date":          13027,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5685758123895 
},
{
 "date":          13028,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5714894790123 
},
{
 "date":          13032,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5719921388885 
},
{
 "date":          13033,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5702256266967 
},
{
 "date":          13034,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5694170364948 
},
{
 "date":          13035,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5680071572931 
},
{
 "date":          13038,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5653466494878 
},
{
 "date":          13039,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5667920633315 
},
{
 "date":          13040,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5662078987351 
},
{
 "date":          13041,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5750088799239 
},
{
 "date":          13042,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5767613421351 
},
{
 "date":          13045,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5926634720222 
},
{
 "date":          13046,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5931002684178 
},
{
 "date":          13047,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.595773251386 
},
{
 "date":          13048,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.594250951602 
},
{
 "date":          13049,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5942665356116 
},
{
 "date":          13052,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5945038026652 
},
{
 "date":          13053,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5940727460882 
},
{
 "date":          13054,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5952674424224 
},
{
 "date":          13055,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5963495351997 
},
{
 "date":          13056,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5964876822348 
},
{
 "date":          13059,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5966395248826 
},
{
 "date":          13060,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5910060642694 
},
{
 "date":          13061,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5939407908824 
},
{
 "date":          13062,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.596701549287 
},
{
 "date":          13063,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.597563674352 
},
{
 "date":          13066,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5981934113793 
},
{
 "date":          13067,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5931289001157 
},
{
 "date":          13068,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5957064645613 
},
{
 "date":          13069,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5954646241463 
},
{
 "date":          13070,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5973034760736 
},
{
 "date":          13073,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6036031867029 
},
{
 "date":          13074,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6014563371333 
},
{
 "date":          13075,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5905157440773 
},
{
 "date":          13076,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5926100164173 
},
{
 "date":          13077,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5891349548712 
},
{
 "date":          13080,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5873676441386 
},
{
 "date":          13081,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5860362460597 
},
{
 "date":          13082,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5811615082185 
},
{
 "date":          13083,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5804936748685 
},
{
 "date":          13084,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5811512038891 
},
{
 "date":          13087,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5835026680139 
},
{
 "date":          13088,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5930502722704 
},
{
 "date":          13089,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.593222562977 
},
{
 "date":          13090,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5958306356231 
},
{
 "date":          13091,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5901599310917 
},
{
 "date":          13094,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6029144522402 
},
{
 "date":          13095,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5979338558026 
},
{
 "date":          13096,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5980686931918 
},
{
 "date":          13097,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.602206822936 
},
{
 "date":          13098,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6025716960442 
},
{
 "date":          13101,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6016321589451 
},
{
 "date":          13102,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6001186697056 
},
{
 "date":          13103,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.599862986073 
},
{
 "date":          13104,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6011990859114 
},
{
 "date":          13105,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6033879339925 
},
{
 "date":          13108,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6045904504902 
},
{
 "date":          13109,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6047229966666 
},
{
 "date":          13110,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6070799397837 
},
{
 "date":          13112,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6071642296306 
},
{
 "date":          13115,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6084028771372 
},
{
 "date":          13116,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5913994159252 
},
{
 "date":          13117,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5916559129612 
},
{
 "date":          13118,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5922353914397 
},
{
 "date":          13119,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5931556591373 
},
{
 "date":          13122,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5871748396635 
},
{
 "date":          13123,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5982088706815 
},
{
 "date":          13124,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5986993579677 
},
{
 "date":          13125,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5985725480515 
},
{
 "date":          13126,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6008251405612 
},
{
 "date":          13129,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5985207942584 
},
{
 "date":          13130,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6048673864998 
},
{
 "date":          13131,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6028391200016 
},
{
 "date":          13132,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6024109310935 
},
{
 "date":          13133,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5998420948415 
},
{
 "date":          13136,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6034653191498 
},
{
 "date":          13137,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6034769880509 
},
{
 "date":          13138,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6094689438848 
},
{
 "date":          13139,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6093842188151 
},
{
 "date":          13140,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6076483017649 
},
{
 "date":          13144,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.607559041584 
},
{
 "date":          13145,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6110659380383 
},
{
 "date":          13146,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.609380952785 
},
{
 "date":          13147,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6085396019127 
},
{
 "date":          13151,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6101808014483 
},
{
 "date":          13152,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.609407131052 
},
{
 "date":          13153,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6087829395965 
},
{
 "date":          13154,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6095142281139 
},
{
 "date":          13157,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":    0.610382839 
},
{
 "date":          13158,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6111847143493 
},
{
 "date":          13159,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6115400532861 
},
{
 "date":          13160,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6018991253048 
},
{
 "date":          13161,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6027472479441 
},
{
 "date":          13165,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6017457877943 
},
{
 "date":          13166,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.596613922473 
},
{
 "date":          13167,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5956752575987 
},
{
 "date":          13168,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5898751333495 
},
{
 "date":          13171,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6064838004345 
},
{
 "date":          13172,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6061760091596 
},
{
 "date":          13173,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6065933164418 
},
{
 "date":          13174,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.606438770335 
},
{
 "date":          13175,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6061964395794 
},
{
 "date":          13178,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6095680079838 
},
{
 "date":          13179,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6103456022461 
},
{
 "date":          13180,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.617337283544 
},
{
 "date":          13181,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6174559811516 
},
{
 "date":          13182,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6168007053425 
},
{
 "date":          13185,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6267087222561 
},
{
 "date":          13186,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6279533291549 
},
{
 "date":          13187,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6292161474762 
},
{
 "date":          13188,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6318969518373 
},
{
 "date":          13189,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6316282012548 
},
{
 "date":          13192,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6339448579404 
},
{
 "date":          13193,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6357207466129 
},
{
 "date":          13194,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6355543387927 
},
{
 "date":          13195,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6350097789558 
},
{
 "date":          13196,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6354026656454 
},
{
 "date":          13200,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6322440610755 
},
{
 "date":          13201,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6349094663403 
},
{
 "date":          13202,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.64035037829 
},
{
 "date":          13203,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6409997107871 
},
{
 "date":          13206,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6406808051535 
},
{
 "date":          13207,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6419310231062 
},
{
 "date":          13208,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6395935819696 
},
{
 "date":          13209,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6404442757743 
},
{
 "date":          13210,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6408783879299 
},
{
 "date":          13213,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6571550409889 
},
{
 "date":          13214,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.658868664119 
},
{
 "date":          13215,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6557858476142 
},
{
 "date":          13216,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.666126949617 
},
{
 "date":          13217,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.665942700175 
},
{
 "date":          13220,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6704241868551 
},
{
 "date":          13221,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6715281481521 
},
{
 "date":          13222,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6710465316428 
},
{
 "date":          13223,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.670502973566 
},
{
 "date":          13224,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6708064680496 
},
{
 "date":          13227,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6712637844731 
},
{
 "date":          13228,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7019491066355 
},
{
 "date":          13229,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.702303257925 
},
{
 "date":          13230,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7123470264812 
},
{
 "date":          13231,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7130187153184 
},
{
 "date":          13234,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.71370740118 
},
{
 "date":          13235,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7143420260424 
},
{
 "date":          13236,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7171389144948 
},
{
 "date":          13237,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.721439398655 
},
{
 "date":          13238,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7238271433693 
},
{
 "date":          13241,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7276682112098 
},
{
 "date":          13242,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7248191269679 
},
{
 "date":          13243,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.725088046215 
},
{
 "date":          13244,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7322885060901 
},
{
 "date":          13245,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7311213137809 
},
{
 "date":          13248,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7306940044822 
},
{
 "date":          13249,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7319674316723 
},
{
 "date":          13250,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7325315702775 
},
{
 "date":          13251,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7280683583652 
},
{
 "date":          13255,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7291519136542 
},
{
 "date":          13256,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7028031000667 
},
{
 "date":          13257,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.697247286584 
},
{
 "date":          13258,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.697402783298 
},
{
 "date":          13259,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6974806607385 
},
{
 "date":          13262,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6924183019175 
},
{
 "date":          13263,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6958553833848 
},
{
 "date":          13264,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6965889024643 
},
{
 "date":          13265,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6969619577591 
},
{
 "date":          13266,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6963376934479 
},
{
 "date":          13269,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6959596793852 
},
{
 "date":          13270,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7004065620415 
},
{
 "date":          13271,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6959789266259 
},
{
 "date":          13272,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7009847674151 
},
{
 "date":          13273,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7024143113899 
},
{
 "date":          13276,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7037871537431 
},
{
 "date":          13277,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7062629629902 
},
{
 "date":          13278,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7064586451391 
},
{
 "date":          13279,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6935737908589 
},
{
 "date":          13280,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6911551588999 
},
{
 "date":          13283,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.690060443792 
},
{
 "date":          13284,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6764624586809 
},
{
 "date":          13285,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6851685259453 
},
{
 "date":          13286,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6791888315984 
},
{
 "date":          13287,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6772870403941 
},
{
 "date":          13290,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6791959642738 
},
{
 "date":          13291,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6856365895304 
},
{
 "date":          13292,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.674988379639 
},
{
 "date":          13293,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6728835769787 
},
{
 "date":          13294,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6693167050485 
},
{
 "date":          13298,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6758474894488 
},
{
 "date":          13299,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6767982749713 
},
{
 "date":          13300,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6748509918121 
},
{
 "date":          13301,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6754553410701 
},
{
 "date":          13304,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6910790952242 
},
{
 "date":          13305,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6911250857209 
},
{
 "date":          13306,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6911681696192 
},
{
 "date":          13307,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6935292468587 
},
{
 "date":          13308,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6938601273039 
},
{
 "date":          13311,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6974031278552 
},
{
 "date":          13312,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6989161079475 
},
{
 "date":          13313,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6986083040588 
},
{
 "date":          13314,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7233506684269 
},
{
 "date":          13315,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7247222069321 
},
{
 "date":          13318,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7263095694215 
},
{
 "date":          13319,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7262737781089 
},
{
 "date":          13320,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.726725387029 
},
{
 "date":          13321,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7205794780376 
},
{
 "date":          13322,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7154799212876 
},
{
 "date":          13325,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7163399761304 
},
{
 "date":          13326,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7149095048781 
},
{
 "date":          13327,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7181094638456 
},
{
 "date":          13328,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7428898118213 
},
{
 "date":          13329,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7464883446919 
},
{
 "date":          13332,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7483646033873 
},
{
 "date":          13334,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7465302723738 
},
{
 "date":          13335,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7468247915981 
},
{
 "date":          13336,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7472734662638 
},
{
 "date":          13339,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7461264206225 
},
{
 "date":          13340,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7473932946044 
},
{
 "date":          13341,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.745721936408 
},
{
 "date":          13342,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7505670672071 
},
{
 "date":          13343,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7624291180147 
},
{
 "date":          13346,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7620627446729 
},
{
 "date":          13347,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7689562293466 
},
{
 "date":          13348,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7569284457581 
},
{
 "date":          13349,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7566555744695 
},
{
 "date":          13350,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.748390658587 
},
{
 "date":          13353,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7529860235455 
},
{
 "date":          13354,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7523222713596 
},
{
 "date":          13355,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7567748798659 
},
{
 "date":          13356,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7567163584826 
},
{
 "date":          13357,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.7503086316687 
},
{
 "date":          13360,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8282080552033 
},
{
 "date":          13361,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8591749892113 
},
{
 "date":          13362,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.862198007868 
},
{
 "date":          13363,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8718887907646 
},
{
 "date":          13364,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8673110319244 
},
{
 "date":          13367,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.875959915372 
},
{
 "date":          13368,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8768184201903 
},
{
 "date":          13369,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8834754948378 
},
{
 "date":          13370,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8832783631157 
},
{
 "date":          13371,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8982417114179 
},
{
 "date":          13374,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8985558023205 
},
{
 "date":          13375,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9036211131879 
},
{
 "date":          13376,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9013334954646 
},
{
 "date":          13377,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9047891058887 
},
{
 "date":          13378,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9047226412018 
},
{
 "date":          13381,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9038135262202 
},
{
 "date":          13382,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.903476336395 
},
{
 "date":          13383,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9054446907621 
},
{
 "date":          13384,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9046034358038 
},
{
 "date":          13385,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9010465834327 
},
{
 "date":          13388,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9026968804307 
},
{
 "date":          13389,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9025800941517 
},
{
 "date":          13390,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9027539130899 
},
{
 "date":          13391,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9029003393637 
},
{
 "date":          13392,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9032421462499 
},
{
 "date":          13396,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9043146272527 
},
{
 "date":          13397,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9005860369889 
},
{
 "date":          13398,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8993581367597 
},
{
 "date":          13399,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8988888247571 
},
{
 "date":          13402,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8985570444606 
},
{
 "date":          13403,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8996180675221 
},
{
 "date":          13404,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9017593520625 
},
{
 "date":          13405,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9013813511553 
},
{
 "date":          13406,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9001488541811 
},
{
 "date":          13409,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8995040369412 
},
{
 "date":          13410,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9001605473056 
},
{
 "date":          13411,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9004641185643 
},
{
 "date":          13412,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.900508011308 
},
{
 "date":          13413,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.900304769552 
},
{
 "date":          13416,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9011671009858 
},
{
 "date":          13417,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8979537629598 
},
{
 "date":          13418,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8979520074567 
},
{
 "date":          13419,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8978208663884 
},
{
 "date":          13420,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8974948481635 
},
{
 "date":          13423,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.899505671348 
},
{
 "date":          13424,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9046446248722 
},
{
 "date":          13425,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9042360228155 
},
{
 "date":          13426,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.897077534307 
},
{
 "date":          13427,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.896721616599 
},
{
 "date":          13430,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8973052159119 
},
{
 "date":          13431,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8971242807754 
},
{
 "date":          13432,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8963611921282 
},
{
 "date":          13433,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8976335437323 
},
{
 "date":          13434,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8995634443076 
},
{
 "date":          13437,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8989681890941 
},
{
 "date":          13438,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8977704259737 
},
{
 "date":          13439,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8958356476389 
},
{
 "date":          13440,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8930381376694 
},
{
 "date":          13441,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8994250408135 
},
{
 "date":          13444,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8974298354127 
},
{
 "date":          13445,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8927872123336 
},
{
 "date":          13446,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.891097722942 
},
{
 "date":          13447,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8908275778829 
},
{
 "date":          13448,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.8981669021537 
},
{
 "date":          13451,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9306258710556 
},
{
 "date":          13452,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9272607057766 
},
{
 "date":          13453,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9261648899717 
},
{
 "date":          13454,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9261328705429 
},
{
 "date":          13455,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9262970619861 
},
{
 "date":          13458,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9270886739487 
},
{
 "date":          13459,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.931152584885 
},
{
 "date":          13460,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9289079428328 
},
{
 "date":          13461,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9292399626225 
},
{
 "date":          13462,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9310944799247 
},
{
 "date":          13465,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9316286726158 
},
{
 "date":          13466,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9340390420687 
},
{
 "date":          13467,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9340527762001 
},
{
 "date":          13468,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9350381681319 
},
{
 "date":          13469,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9341569011106 
},
{
 "date":          13472,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9362634626942 
},
{
 "date":          13473,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9359041015108 
},
{
 "date":          13474,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9365687630993 
},
{
 "date":          13476,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9333074912516 
},
{
 "date":          13479,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9247141468592 
},
{
 "date":          13480,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9278570367299 
},
{
 "date":          13481,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9287880317423 
},
{
 "date":          13482,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9296322130083 
},
{
 "date":          13483,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9296566130486 
},
{
 "date":          13486,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9298903716454 
},
{
 "date":          13487,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9297629049656 
},
{
 "date":          13488,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9329244966256 
},
{
 "date":          13489,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9324495700441 
},
{
 "date":          13490,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9311875917021 
},
{
 "date":          13493,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9330235070935 
},
{
 "date":          13494,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9336818434388 
},
{
 "date":          13495,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9330657909419 
},
{
 "date":          13496,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9326706222953 
},
{
 "date":          13497,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9341600888391 
},
{
 "date":          13500,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9346573253565 
},
{
 "date":          13501,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9343217508124 
},
{
 "date":          13502,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9356477644313 
},
{
 "date":          13503,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9342165588303 
},
{
 "date":          13504,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9328209426089 
},
{
 "date":          13508,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9343605240583 
},
{
 "date":          13509,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9458945803471 
},
{
 "date":          13510,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9526066646994 
},
{
 "date":          13511,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9527038341593 
},
{
 "date":          13516,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9555789425237 
},
{
 "date":          13517,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9539588247132 
},
{
 "date":          13518,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9542838422177 
},
{
 "date":          13521,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.953634224271 
},
{
 "date":          13522,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.955146625847 
},
{
 "date":          13523,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9550555323112 
},
{
 "date":          13524,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9548003103981 
},
{
 "date":          13525,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9566410159465 
},
{
 "date":          13529,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9577351432651 
},
{
 "date":          13530,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9590744891245 
},
{
 "date":          13531,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9595620514288 
},
{
 "date":          13532,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9580644765536 
},
{
 "date":          13535,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9579967884717 
},
{
 "date":          13536,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9572115946476 
},
{
 "date":          13537,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9554706676538 
},
{
 "date":          13538,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9525356431973 
},
{
 "date":          13539,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9566063056989 
},
{
 "date":          13542,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9552878569849 
},
{
 "date":          13543,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9514887736722 
},
{
 "date":          13544,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9505767321563 
},
{
 "date":          13545,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9495935675395 
},
{
 "date":          13546,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9522908677717 
},
{
 "date":          13549,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9532533304893 
},
{
 "date":          13550,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9517979146853 
},
{
 "date":          13551,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9523441139545 
},
{
 "date":          13552,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.951286216973 
},
{
 "date":          13553,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9496029120117 
},
{
 "date":          13556,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.949945335217 
},
{
 "date":          13557,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9499205761628 
},
{
 "date":          13558,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9496290520511 
},
{
 "date":          13559,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9480750447356 
},
{
 "date":          13560,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9469585703312 
},
{
 "date":          13564,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9480585583579 
},
{
 "date":          13565,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9467154191516 
},
{
 "date":          13566,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9482656112409 
},
{
 "date":          13567,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9486332880518 
},
{
 "date":          13570,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.9473534761251 
},
{
 "date":          13571,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5617899847649 
},
{
 "date":          13572,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5606059279505 
},
{
 "date":          13573,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5646134292709 
},
{
 "date":          13574,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.566182483234 
},
{
 "date":          13577,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5656728119309 
},
{
 "date":          13578,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5705746251827 
},
{
 "date":          13579,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5704584365058 
},
{
 "date":          13580,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5768945384591 
},
{
 "date":          13581,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5759741475218 
},
{
 "date":          13584,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5768141920391 
},
{
 "date":          13585,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.581904463024 
},
{
 "date":          13586,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5829017074922 
},
{
 "date":          13587,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5819928269884 
},
{
 "date":          13588,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5820931525307 
},
{
 "date":          13591,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5813040252042 
},
{
 "date":          13592,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5815998656741 
},
{
 "date":          13593,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5843649243231 
},
{
 "date":          13594,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5846254573882 
},
{
 "date":          13595,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5879262220882 
},
{
 "date":          13598,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5896293990552 
},
{
 "date":          13599,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5878196594373 
},
{
 "date":          13600,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5882897321488 
},
{
 "date":          13601,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5863285883378 
},
{
 "date":          13602,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.584226643642 
},
{
 "date":          13605,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5839691189921 
},
{
 "date":          13606,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5845753973477 
},
{
 "date":          13607,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5874883943603 
},
{
 "date":          13608,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5869896252546 
},
{
 "date":          13612,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.585785362908 
},
{
 "date":          13613,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5882593020789 
},
{
 "date":          13614,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5896702482718 
},
{
 "date":          13615,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5909507868747 
},
{
 "date":          13616,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.591736003094 
},
{
 "date":          13619,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.59218492286 
},
{
 "date":          13620,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5927971606934 
},
{
 "date":          13621,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5863752095588 
},
{
 "date":          13622,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5949096236451 
},
{
 "date":          13623,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5968969762895 
},
{
 "date":          13626,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5977971416542 
},
{
 "date":          13627,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5926009517071 
},
{
 "date":          13628,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.593437627545 
},
{
 "date":          13629,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5954403227986 
},
{
 "date":          13630,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5981464067587 
},
{
 "date":          13633,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6011497863367 
},
{
 "date":          13634,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6091728430262 
},
{
 "date":          13635,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6128414009175 
},
{
 "date":          13636,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6166061889374 
},
{
 "date":          13637,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6174677557089 
},
{
 "date":          13640,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6173295078795 
},
{
 "date":          13641,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6179041636981 
},
{
 "date":          13642,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.61940631772 
},
{
 "date":          13643,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6020564065106 
},
{
 "date":          13644,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.604395983799 
},
{
 "date":          13647,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6088713910151 
},
{
 "date":          13648,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6107511188492 
},
{
 "date":          13649,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.610135813963 
},
{
 "date":          13650,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6115645538394 
},
{
 "date":          13651,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6096061888808 
},
{
 "date":          13654,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6146370597672 
},
{
 "date":          13655,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6144336353609 
},
{
 "date":          13656,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6145169571379 
},
{
 "date":          13657,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6145722618425 
},
{
 "date":          13658,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6158792435165 
},
{
 "date":          13662,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6173235063856 
},
{
 "date":          13663,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6175908007877 
},
{
 "date":          13664,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6182329274307 
},
{
 "date":          13665,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6169540582741 
},
{
 "date":          13668,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6171285165196 
},
{
 "date":          13669,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6160318618563 
},
{
 "date":          13670,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6157778977416 
},
{
 "date":          13671,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6077682853265 
},
{
 "date":          13672,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6059126652649 
},
{
 "date":          13675,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6067951768852 
},
{
 "date":          13676,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6061186918609 
},
{
 "date":          13677,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5946727320044 
},
{
 "date":          13678,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5919786036147 
},
{
 "date":          13679,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5915774733968 
},
{
 "date":          13682,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5913145288879 
},
{
 "date":          13683,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5970161818228 
},
{
 "date":          13684,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5951532820286 
},
{
 "date":          13685,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5957787786477 
},
{
 "date":          13686,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5953534238535 
},
{
 "date":          13689,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5958493754201 
},
{
 "date":          13690,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5960432029001 
},
{
 "date":          13691,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5956905344055 
},
{
 "date":          13692,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5969748268732 
},
{
 "date":          13693,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.606473242188 
},
{
 "date":          13696,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6059258605335 
},
{
 "date":          13697,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6065122934429 
},
{
 "date":          13699,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6075585381802 
},
{
 "date":          13700,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6079455799563 
},
{
 "date":          13703,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6069399687888 
},
{
 "date":          13704,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6031981250869 
},
{
 "date":          13705,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6042312356789 
},
{
 "date":          13706,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5954679247932 
},
{
 "date":          13707,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5956868491228 
},
{
 "date":          13710,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5957047593682 
},
{
 "date":          13711,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5966381182879 
},
{
 "date":          13712,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5979639545884 
},
{
 "date":          13713,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.599028974132 
},
{
 "date":          13714,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5937953196242 
},
{
 "date":          13717,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5942917994978 
},
{
 "date":          13718,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5530936367004 
},
{
 "date":          13719,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5560761133899 
},
{
 "date":          13720,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5653945504872 
},
{
 "date":          13721,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5616660165464 
},
{
 "date":          13724,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5613738429127 
},
{
 "date":          13725,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5568243978978 
},
{
 "date":          13726,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.557197677452 
},
{
 "date":          13727,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5581474326073 
},
{
 "date":          13728,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.572376448009 
},
{
 "date":          13731,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5757982743232 
},
{
 "date":          13732,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5715807039652 
},
{
 "date":          13733,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5393622806141 
},
{
 "date":          13734,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5236932302595 
},
{
 "date":          13735,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5354210314715 
},
{
 "date":          13738,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5471906876026 
},
{
 "date":          13739,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5481760814124 
},
{
 "date":          13740,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5485531009144 
},
{
 "date":          13741,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.565958567337 
},
{
 "date":          13742,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5449725854553 
},
{
 "date":          13745,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5471995275436 
},
{
 "date":          13746,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5496651743362 
},
{
 "date":          13747,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5485552437905 
},
{
 "date":          13748,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5481767529407 
},
{
 "date":          13749,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5485065509947 
},
{
 "date":          13752,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5477760427673 
},
{
 "date":          13753,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5531665237159 
},
{
 "date":          13754,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5487313400284 
},
{
 "date":          13755,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5487106048022 
},
{
 "date":          13756,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.550319262394 
},
{
 "date":          13760,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5484098769484 
},
{
 "date":          13761,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5468807989393 
},
{
 "date":          13762,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5441581125172 
},
{
 "date":          13763,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5453519004436 
},
{
 "date":          13766,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.546268101906 
},
{
 "date":          13767,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5450746987873 
},
{
 "date":          13768,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5427813863311 
},
{
 "date":          13769,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5430939996835 
},
{
 "date":          13770,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5432090671558 
},
{
 "date":          13773,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5398525290564 
},
{
 "date":          13774,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5607396267338 
},
{
 "date":          13775,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5615844451679 
},
{
 "date":          13776,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5609047895093 
},
{
 "date":          13777,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5601350014401 
},
{
 "date":          13780,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5597660626343 
},
{
 "date":          13781,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5587755021899 
},
{
 "date":          13782,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5579398342641 
},
{
 "date":          13783,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5567965207278 
},
{
 "date":          13784,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5566608139619 
},
{
 "date":          13787,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5508885673864 
},
{
 "date":          13788,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5515603270839 
},
{
 "date":          13789,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5521970741182 
},
{
 "date":          13790,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5536727127617 
},
{
 "date":          13791,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5568352496906 
},
{
 "date":          13794,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5573591537581 
},
{
 "date":          13795,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5571774384896 
},
{
 "date":          13796,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5607474127834 
},
{
 "date":          13797,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5639438812565 
},
{
 "date":          13798,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5644766743686 
},
{
 "date":          13801,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5633572702198 
},
{
 "date":          13802,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5643107270917 
},
{
 "date":          13803,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5670850449514 
},
{
 "date":          13804,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5695314174842 
},
{
 "date":          13805,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5638727437421 
},
{
 "date":          13808,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5636509819236 
},
{
 "date":          13809,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5587671513122 
},
{
 "date":          13810,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5709842801297 
},
{
 "date":          13811,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5808414446062 
},
{
 "date":          13812,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5747480130664 
},
{
 "date":          13815,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5704365541746 
},
{
 "date":          13816,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.571218861416 
},
{
 "date":          13817,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5695526543484 
},
{
 "date":          13818,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.554230353709 
},
{
 "date":          13819,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5562535493852 
},
{
 "date":          13822,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5563347350479 
},
{
 "date":          13823,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5545826942287 
},
{
 "date":          13824,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5448543719146 
},
{
 "date":          13825,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5527967054428 
},
{
 "date":          13826,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5537877027743 
},
{
 "date":          13829,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5547140624468 
},
{
 "date":          13830,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5652110467399 
},
{
 "date":          13831,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.56596306467 
},
{
 "date":          13832,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5658573001129 
},
{
 "date":          13833,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5688302492548 
},
{
 "date":          13836,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.563209555977 
},
{
 "date":          13837,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5632416427229 
},
{
 "date":          13838,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5610496234965 
},
{
 "date":          13840,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5605141982881 
},
{
 "date":          13843,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5586449438813 
},
{
 "date":          13844,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5564904718754 
},
{
 "date":          13845,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5629304885459 
},
{
 "date":          13846,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5629946314449 
},
{
 "date":          13847,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5637145410861 
},
{
 "date":          13850,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5641394507063 
},
{
 "date":          13851,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5654063080939 
},
{
 "date":          13852,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.563928052038 
},
{
 "date":          13853,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5576041294553 
},
{
 "date":          13854,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.559169069997 
},
{
 "date":          13857,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5588345743821 
},
{
 "date":          13858,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5552273376236 
},
{
 "date":          13859,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5553380857574 
},
{
 "date":          13860,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5552054451529 
},
{
 "date":          13861,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5539606192109 
},
{
 "date":          13864,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5537905347326 
},
{
 "date":          13865,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5530296612087 
},
{
 "date":          13866,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5530452813612 
},
{
 "date":          13867,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5533044896298 
},
{
 "date":          13868,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5512868722489 
},
{
 "date":          13871,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5505319259807 
},
{
 "date":          13873,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5501173585523 
},
{
 "date":          13874,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5464123576978 
},
{
 "date":          13875,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5439358309255 
},
{
 "date":          13878,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5422639455493 
},
{
 "date":          13880,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5427874887807 
},
{
 "date":          13881,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5432769742942 
},
{
 "date":          13882,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5415973851615 
},
{
 "date":          13885,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5468511712082 
},
{
 "date":          13886,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5467132684202 
},
{
 "date":          13887,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5454036798275 
},
{
 "date":          13888,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5467362508053 
},
{
 "date":          13889,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5547554564258 
},
{
 "date":          13892,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5574626207877 
},
{
 "date":          13893,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5561332414319 
},
{
 "date":          13894,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5551781863782 
},
{
 "date":          13895,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.561629415214 
},
{
 "date":          13896,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5624410179939 
},
{
 "date":          13900,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5621590291406 
},
{
 "date":          13901,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5625152856862 
},
{
 "date":          13902,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5666043182828 
},
{
 "date":          13903,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5683114168969 
},
{
 "date":          13906,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5698223789409 
},
{
 "date":          13907,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5692185309256 
},
{
 "date":          13908,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.570097641453 
},
{
 "date":          13909,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5716404870583 
},
{
 "date":          13910,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5708204722673 
},
{
 "date":          13913,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5745121830012 
},
{
 "date":          13914,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5839276435975 
},
{
 "date":          13915,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5834063660929 
},
{
 "date":          13916,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5837036750224 
},
{
 "date":          13917,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5936258890435 
},
{
 "date":          13920,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6005614538337 
},
{
 "date":          13921,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5998017496479 
},
{
 "date":          13922,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5981829432765 
},
{
 "date":          13923,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6009461964429 
},
{
 "date":          13924,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6011373033599 
},
{
 "date":          13928,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.601782008904 
},
{
 "date":          13929,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6041352790631 
},
{
 "date":          13930,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.602693759159 
},
{
 "date":          13931,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6006664116625 
},
{
 "date":          13934,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6008186782845 
},
{
 "date":          13935,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6012198627641 
},
{
 "date":          13936,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6049378081803 
},
{
 "date":          13937,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6091290879124 
},
{
 "date":          13938,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6122323858712 
},
{
 "date":          13941,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6122143326391 
},
{
 "date":          13942,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6136074593198 
},
{
 "date":          13943,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6131764291785 
},
{
 "date":          13944,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6145962067184 
},
{
 "date":          13945,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.614601329904 
},
{
 "date":          13948,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6163356397282 
},
{
 "date":          13949,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6328450633048 
},
{
 "date":          13950,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6332198670344 
},
{
 "date":          13951,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6345158492761 
},
{
 "date":          13952,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6353349838505 
},
{
 "date":          13955,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6385778961694 
},
{
 "date":          13956,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6609114867808 
},
{
 "date":          13957,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6625235560642 
},
{
 "date":          13958,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6629632069568 
},
{
 "date":          13962,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.665308183497 
},
{
 "date":          13963,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6649854375792 
},
{
 "date":          13964,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6647807589691 
},
{
 "date":          13965,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.666946601003 
},
{
 "date":          13966,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6656123489566 
},
{
 "date":          13969,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6636036003193 
},
{
 "date":          13970,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6528515063893 
},
{
 "date":          13971,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6527735556526 
},
{
 "date":          13972,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6527437177056 
},
{
 "date":          13973,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6523232733108 
},
{
 "date":          13976,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6538867913563 
},
{
 "date":          13977,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6541402760211 
},
{
 "date":          13978,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6537211597735 
},
{
 "date":          13979,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6588990946468 
},
{
 "date":          13980,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6590012724922 
},
{
 "date":          13983,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6601953418664 
},
{
 "date":          13984,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.662154079426 
},
{
 "date":          13985,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6573423459369 
},
{
 "date":          13986,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6584852928436 
},
{
 "date":          13987,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6571995627244 
},
{
 "date":          13990,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6600516340905 
},
{
 "date":          13991,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6585508524333 
},
{
 "date":          13992,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6602128450579 
},
{
 "date":          13993,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6603267391825 
},
{
 "date":          13994,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6608203036108 
},
{
 "date":          13997,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.66104272529 
},
{
 "date":          13998,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6617563376523 
},
{
 "date":          13999,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.662378954801 
},
{
 "date":          14000,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6631490125651 
},
{
 "date":          14001,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6630998151604 
},
{
 "date":          14004,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6631612249013 
},
{
 "date":          14005,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6625912142814 
},
{
 "date":          14006,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6594014563109 
},
{
 "date":          14007,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6600221269797 
},
{
 "date":          14008,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6606626760783 
},
{
 "date":          14011,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6601178103421 
},
{
 "date":          14012,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6583427116412 
},
{
 "date":          14013,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6594046752108 
},
{
 "date":          14014,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6606073563853 
},
{
 "date":          14015,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6583006858652 
},
{
 "date":          14018,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6573395623439 
},
{
 "date":          14019,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6588910894411 
},
{
 "date":          14020,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6587360576626 
},
{
 "date":          14021,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6589924811734 
},
{
 "date":          14022,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6568306141726 
},
{
 "date":          14026,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.657109209903 
},
{
 "date":          14027,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6573982858266 
},
{
 "date":          14028,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6580326309736 
},
{
 "date":          14029,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6579634116793 
},
{
 "date":          14032,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6584028551704 
},
{
 "date":          14033,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6585798831507 
},
{
 "date":          14034,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6632169850849 
},
{
 "date":          14035,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6562360786608 
},
{
 "date":          14036,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6483316334804 
},
{
 "date":          14039,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6491231595656 
},
{
 "date":          14040,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6477065360841 
},
{
 "date":          14041,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6474816675329 
},
{
 "date":          14042,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6472971021938 
},
{
 "date":          14043,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6477784355472 
},
{
 "date":          14046,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6479445985077 
},
{
 "date":          14047,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6469596614848 
},
{
 "date":          14048,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6475739623024 
},
{
 "date":          14049,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6500726030458 
},
{
 "date":          14050,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6496078668235 
},
{
 "date":          14053,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6531052818239 
},
{
 "date":          14054,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6532590450654 
},
{
 "date":          14055,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6571123836364 
},
{
 "date":          14056,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6566580933719 
},
{
 "date":          14057,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6586532662348 
},
{
 "date":          14060,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6591899965904 
},
{
 "date":          14061,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6582882713369 
},
{
 "date":          14062,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6515348380114 
},
{
 "date":          14063,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6532887042987 
},
{
 "date":          14067,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.65336305362 
},
{
 "date":          14068,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6540223949895 
},
{
 "date":          14069,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.653276590899 
},
{
 "date":          14070,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.654481590423 
},
{
 "date":          14071,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6612732117434 
},
{
 "date":          14074,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6650734220623 
},
{
 "date":          14075,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6647402163676 
},
{
 "date":          14076,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6622616444814 
},
{
 "date":          14077,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6735362917597 
},
{
 "date":          14078,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6718721064063 
},
{
 "date":          14081,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6770329079715 
},
{
 "date":          14082,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6807281000674 
},
{
 "date":          14083,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6813307142711 
},
{
 "date":          14084,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6816213227703 
},
{
 "date":          14085,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6822760122957 
},
{
 "date":          14088,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6803732987459 
},
{
 "date":          14089,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6820608402873 
},
{
 "date":          14090,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6784994903183 
},
{
 "date":          14091,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6776322490586 
},
{
 "date":          14092,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6771064003792 
},
{
 "date":          14095,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6765593265609 
},
{
 "date":          14096,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6749365889784 
},
{
 "date":          14097,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6754587304315 
},
{
 "date":          14098,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6744002169008 
},
{
 "date":          14099,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6747914204808 
},
{
 "date":          14102,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6749810507598 
},
{
 "date":          14103,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6730568480217 
},
{
 "date":          14104,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6725168077333 
},
{
 "date":          14105,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6731465359309 
},
{
 "date":          14106,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6730262072568 
},
{
 "date":          14109,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.672634554602 
},
{
 "date":          14110,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6720543697853 
},
{
 "date":          14111,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6727519233536 
},
{
 "date":          14112,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6733228074232 
},
{
 "date":          14113,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.672370433529 
},
{
 "date":          14116,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.672026165174 
},
{
 "date":          14117,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6724095705048 
},
{
 "date":          14118,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6719529086576 
},
{
 "date":          14119,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6694433739416 
},
{
 "date":          14120,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6706250888087 
},
{
 "date":          14124,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6705802944835 
},
{
 "date":          14125,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6741478846745 
},
{
 "date":          14126,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6772441354435 
},
{
 "date":          14127,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6770704072167 
},
{
 "date":          14130,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6752461856106 
},
{
 "date":          14131,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6710379198554 
},
{
 "date":          14132,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6717046396561 
},
{
 "date":          14133,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6709160996891 
},
{
 "date":          14134,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6706385202544 
},
{
 "date":          14137,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6677972263317 
},
{
 "date":          14138,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6668020536811 
},
{
 "date":          14139,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6763467382006 
},
{
 "date":          14140,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.6756319691785 
},
{
 "date":          14141,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5555089379696 
},
{
 "date":          14144,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5598043691485 
},
{
 "date":          14145,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.559040438562 
},
{
 "date":          14146,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5590124364748 
},
{
 "date":          14147,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5586423590725 
},
{
 "date":          14148,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5587339375918 
},
{
 "date":          14151,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5526099979508 
},
{
 "date":          14152,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5240905252489 
},
{
 "date":          14153,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5251350617517 
},
{
 "date":          14154,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5253627605478 
},
{
 "date":          14155,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5343791228309 
},
{
 "date":          14158,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.5207078487438 
},
{
 "date":          14159,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.423677124845 
},
{
 "date":          14160,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.4276124917067 
},
{
 "date":          14161,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2749766558828 
},
{
 "date":          14162,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2839408666518 
},
{
 "date":          14165,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":              0 
},
{
 "date":          14166,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":              0 
},
{
 "date":          14167,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":              0 
},
{
 "date":          14168,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.00126281231459 
},
{
 "date":          14169,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.001755629843866 
},
{
 "date":          14172,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.006743259885064 
},
{
 "date":          14173,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.06162266079265 
},
{
 "date":          14174,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.08776975205429 
},
{
 "date":          14175,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.09287184452483 
},
{
 "date":          14176,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.08817933891731 
},
{
 "date":          14179,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.1021000147191 
},
{
 "date":          14180,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.06232536385586 
},
{
 "date":          14181,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.06615706073709 
},
{
 "date":          14182,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.08093571816244 
},
{
 "date":          14183,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.08379289519306 
},
{
 "date":          14186,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.08647278272941 
},
{
 "date":          14187,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.1068257078119 
},
{
 "date":          14188,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.1519610302392 
},
{
 "date":          14189,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.1742069028108 
},
{
 "date":          14190,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.1743268274853 
},
{
 "date":          14193,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.183265165926 
},
{
 "date":          14194,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.1908235219124 
},
{
 "date":          14195,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2194301091264 
},
{
 "date":          14196,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2405103776235 
},
{
 "date":          14197,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.274043594231 
},
{
 "date":          14200,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2802392254802 
},
{
 "date":          14201,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2796579359541 
},
{
 "date":          14202,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.290457351068 
},
{
 "date":          14203,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.2985182015316 
},
{
 "date":          14204,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3055851121987 
},
{
 "date":          14207,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3159878867792 
},
{
 "date":          14208,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3173308622307 
},
{
 "date":          14209,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3238208399093 
},
{
 "date":          14211,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3236908964706 
},
{
 "date":          14214,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3309007356444 
},
{
 "date":          14215,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3320601000255 
},
{
 "date":          14216,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3431280654625 
},
{
 "date":          14217,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3422216689342 
},
{
 "date":          14218,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3497820496332 
},
{
 "date":          14221,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3587166647817 
},
{
 "date":          14222,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3599078738522 
},
{
 "date":          14223,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3596320899635 
},
{
 "date":          14224,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3584396711669 
},
{
 "date":          14225,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3589278760649 
},
{
 "date":          14228,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3586290184104 
},
{
 "date":          14229,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3573342804145 
},
{
 "date":          14230,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.357726571724 
},
{
 "date":          14231,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3569626604064 
},
{
 "date":          14232,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3569761095738 
},
{
 "date":          14235,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3574380276428 
},
{
 "date":          14236,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3579175804188 
},
{
 "date":          14237,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3578096397541 
},
{
 "date":          14239,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3576111411186 
},
{
 "date":          14242,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3586267111797 
},
{
 "date":          14243,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3576125198025 
},
{
 "date":          14244,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3572671279959 
},
{
 "date":          14246,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3633843155327 
},
{
 "date":          14249,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3636661132483 
},
{
 "date":          14250,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3670664206518 
},
{
 "date":          14251,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3664727511575 
},
{
 "date":          14252,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3665722166167 
},
{
 "date":          14253,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3686043500883 
},
{
 "date":          14256,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3683277305813 
},
{
 "date":          14257,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3695381381925 
},
{
 "date":          14258,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3692918703007 
},
{
 "date":          14259,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3728541063963 
},
{
 "date":          14260,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3728691068333 
},
{
 "date":          14264,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3700579760744 
},
{
 "date":          14265,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3649316510255 
},
{
 "date":          14266,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3670433200111 
},
{
 "date":          14267,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3672572719514 
},
{
 "date":          14270,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3672552026212 
},
{
 "date":          14271,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3672488903531 
},
{
 "date":          14272,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.364179635426 
},
{
 "date":          14273,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3620094023329 
},
{
 "date":          14274,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3621104421916 
},
{
 "date":          14277,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3619629459293 
},
{
 "date":          14278,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3623998344868 
},
{
 "date":          14279,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3620813810687 
},
{
 "date":          14280,
"fund": "HSGFX",
"measure": "SelectionShare",
"value":  0.36242316463 
},
{
 "date":          14281,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3604899344323 
},
{
 "date":          14284,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3609110167583 
},
{
 "date":          14285,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3566179090967 
},
{
 "date":          14286,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3578644834417 
},
{
 "date":          14287,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3600484849603 
},
{
 "date":          14288,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3598727624597 
},
{
 "date":          14292,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3552803925934 
},
{
 "date":          14293,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3549510816009 
},
{
 "date":          14294,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.354694440664 
},
{
 "date":          14295,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3564568978868 
},
{
 "date":          14298,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3537223109277 
},
{
 "date":          14299,
"fund": "HSGFX",
"measure": "SelectionShare",
"value": 0.3501206368458 
},
{
